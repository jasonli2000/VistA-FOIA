^%zewd
ZWR
^%zewd("config","security","validSubnet",192.168)=""
^%zewd("customTag","ewd:ajaxonload")="ajaxOnload^%zewdCompiler8"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:ajaxonload"
^%zewd("customTag","ewd:comboplus")="comboPlus^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:comboplus"
^%zewd("customTag","ewd:comment")="comment^%zewdCompiler4"_$C(1)_"0"_$C(1)_"system"_$C(1)_"dummy"_$C(1)_"ewd:comment"
^%zewd("customTag","ewd:cspscript")="cspscript^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:cspscript"
^%zewd("customTag","ewd:else")="else^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"dummy"_$C(1)_"ewd:else"
^%zewd("customTag","ewd:elseif")="elseif^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"firstValue,operation,secondValue"_$C(1)_"ewd:elseif"
^%zewd("customTag","ewd:eval")="eval^%zewdCompiler19"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:eval"
^%zewd("customTag","ewd:evalstream")="evalStream^%zewdCompiler19"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:evalstream"
^%zewd("customTag","ewd:execute")="execute^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"method,type,return"_$C(1)_"ewd:execute"
^%zewd("customTag","ewd:expandpage")="expandPage^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"page,return"_$C(1)_"ewd:expandpage"
^%zewd("customTag","ewd:for")="for^%zewdCompiler4"_$C(1)_"0"_$C(1)_"system"_$C(1)_"from,to,increment,counter"_$C(1)_"ewd:for"
^%zewd("customTag","ewd:foreach")="forEach^%zewdCompiler19"_$C(1)_"0"_$C(1)_"system"_$C(1)_"sessionName,index,return,subscriptList,startValue,endValue"_$C(1)_"ewd:foreach"
^%zewd("customTag","ewd:getarrayvalue")="getArrayValue^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"arrayName,index,return"_$C(1)_"ewd:getarrayvalue"
^%zewd("customTag","ewd:getpiece")="getPiece^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"return,data,asciiDelimiter,pieceNumber"_$C(1)_"ewd:getpiece"
^%zewd("customTag","ewd:getproperty")="getProperty^%zewdCompiler7"_$C(1)_"1"_$C(1)_"system"_$C(1,1)_"ewd:getproperty"
^%zewd("customTag","ewd:getsessionarrayvalue")="getSessionArrayValue^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"sessionName,index,return"_$C(1)_"ewd:getsessionarrayvalue"
^%zewd("customTag","ewd:getsessionvalue")="getSessionValue^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"sessionName,return"_$C(1)_"ewd:getsessionvalue"
^%zewd("customTag","ewd:help")="help^%zewdCompiler16"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:help"
^%zewd("customTag","ewd:helppanel")="helpPanel^%zewdCompiler16"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:helppanel"
^%zewd("customTag","ewd:if")="if^%zewdCompiler4"_$C(1)_"0"_$C(1)_"system"_$C(1)_"firstValue,operation,secondValue"_$C(1)_"ewd:if"
^%zewd("customTag","ewd:ifarrayexists")="ifArrayExists^%zewdCompiler13"_$C(1)_"0"_$C(1)_"system"_$C(1)_"arrayName"_$C(1)_"ewd:ifarrayexists"
^%zewd("customTag","ewd:ifbrowser")="ifBrowser^%zewdCompiler16"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:ifbrowser"
^%zewd("customTag","ewd:ifcontains")="ifContains^%zewdCompiler4"_$C(1)_"0"_$C(1)_"system"_$C(1)_"input,substring"_$C(1)_"ewd:ifcontains"
^%zewd("customTag","ewd:ifsessionarrayexists")="ifSessionArrayExists^%zewdCompiler4"_$C(1)_"0"_$C(1)_"system"_$C(1)_"sessionName"_$C(1)_"ewd:ifsessionarrayexists"
^%zewd("customTag","ewd:ifsessionnameexists")="ifSessionNameExists^%zewdCompiler4"_$C(1)_"0"_$C(1)_"system"_$C(1)_"sessionName"_$C(1)_"ewd:ifsessionnameexists"
^%zewd("customTag","ewd:image")="image^%zewdCompiler16"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:image"
^%zewd("customTag","ewd:include")="include^%zewdCompiler7"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:include"
^%zewd("customTag","ewd:incrementcounter")="incrementCounter^%zewdCompiler19"_$C(1)_"1"_$C(1)_"system"_$C(1,1)_"ewd:incrementcounter"
^%zewd("customTag","ewd:initialisearray")="initialiseArray^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"arrayName"_$C(1)_"ewd:initialisearray"
^%zewd("customTag","ewd:instantiate")="instantiate^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"name,type,size"_$C(1)_"ewd:instantiate"
^%zewd("customTag","ewd:javascript")="javaScript^%zewdCompiler4"_$C(1)_"0"_$C(1)_"system"_$C(1)_"dummy"_$C(1)_"ewd:javascript"
^%zewd("customTag","ewd:js")="js^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:js"
^%zewd("customTag","ewd:jsconstructor")="jsConstructor^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:jsconstructor"
^%zewd("customTag","ewd:jsfunction")="jsFunction^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:jsfunction"
^%zewd("customTag","ewd:jsline")="jsSection^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:jsline"
^%zewd("customTag","ewd:jsmethod")="jsMethod^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:jsmethod"
^%zewd("customTag","ewd:jspage")="jsPage^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:jspage"
^%zewd("customTag","ewd:jssection")="jsSection^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:jssection"
^%zewd("customTag","ewd:jsset")="jsSet^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:jsset"
^%zewd("customTag","ewd:main")="main^%zewdCompiler24"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:main"
^%zewd("customTag","ewd:maintabmenu")="mainTabMenu^%zewdCompiler16"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:maintabmenu"
^%zewd("customTag","ewd:mergetojsobject")="mergeToJSObject^%zewdCompiler16"_$C(1)_"1"_$C(1)_"system"_$C(1,1)_"ewd:mergetojsobject"
^%zewd("customTag","ewd:modulo")="modulo^%zewdCompiler16"_$C(1)_"1"_$C(1)_"system"_$C(1)_"return,data,modulus"_$C(1)_"ewd:modulo"
^%zewd("customTag","ewd:movetag")="movetag^%zewdCompiler7"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:movetag"
^%zewd("customTag","ewd:replace")="replace^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"input,fromString,toString,return"_$C(1)_"ewd:replace"
^%zewd("customTag","ewd:responseheader")="responseHeader^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"name,value,suppress"_$C(1)_"ewd:responseheader"
^%zewd("customTag","ewd:schemaform")="schemaForm^%zewdCompiler4"_$C(1)_"0"_$C(1)_"system"_$C(1)_"schemaName,instanceName"_$C(1)_"ewd:schemaform"
^%zewd("customTag","ewd:schemaviewinstance")="schemaViewInstance^%zewdCompiler23"_$C(1)_"0"_$C(1)_"system"_$C(1)_"instanceName,suppressNull,suppressInvisible"_$C(1)_"ewd:schemaviewinstance"
^%zewd("customTag","ewd:script")="script^%zewdCompiler19"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:script"
^%zewd("customTag","ewd:set")="set^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"return,value,operand,firstValue,secondValue"_$C(1)_"ewd:set"
^%zewd("customTag","ewd:setarrayvalue")="setArrayValue^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"arrayName,index,value"_$C(1)_"ewd:setarrayvalue"
^%zewd("customTag","ewd:slideshow")="slideshow^%zewdSlideshow"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:slideshow"
^%zewd("customTag","ewd:spinner")="spinner^%zewdCompiler13"_$C(1)_"1"_$C(1)_"system"_$C(1,1)_"ewd:spinner"
^%zewd("customTag","ewd:subtabmenu")="subTabMenu^%zewdCompiler16"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:subtabmenu"
^%zewd("customTag","ewd:svg")="svg^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"height,width,page"_$C(1)_"ewd:svg"
^%zewd("customTag","ewd:svgdocument")="svgDocument^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:svgdocument"
^%zewd("customTag","ewd:svgpage")="svgPage^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"method"_$C(1)_"ewd:svgpage"
^%zewd("customTag","ewd:tabmenuoption")="tabMenuOption^%zewdCompiler13"_$C(1)_"1"_$C(1)_"system"_$C(1,1)_"ewd:tabmenuoption"
^%zewd("customTag","ewd:text")="text^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:text"
^%zewd("customTag","ewd:trace")="trace^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"text"_$C(1)_"ewd:trace"
^%zewd("customTag","ewd:url")="url^%zewdCompiler13"_$C(1)_"1"_$C(1)_"system"_$C(1,1)_"ewd:url"
^%zewd("customTag","ewd:xhtml")="xhtml^%zewdCompiler13"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:xhtml"
^%zewd("customTag","ewd:zexecute")="execute^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"method,type,return"_$C(1)_"ewd:zexecute"
^%zewd("customTag","ewd:zresponseheader")="responseHeader^%zewdCompiler4"_$C(1)_"1"_$C(1)_"system"_$C(1)_"name,value,suppress"_$C(1)_"ewd:zresponseheader"
^%zewd("customTag","ewd:zzjs")="zzjs^%zewdCompiler20"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"ewd:zzjs"
^%zewd("customTag","ext:allowchildwindow")="allowChildWindow^ExtJS"_$C(1)_"1"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:allowchildwindow","tagNotes",0)="1"
^%zewd("customTag","ext:button")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:button","tagNotes",0)="1"
^%zewd("customTag","ext:combobox")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:combobox","tagNotes",0)="1"
^%zewd("customTag","ext:config")="extConfig^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:config","tagNotes",0)="1"
^%zewd("customTag","ext:datefield")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:datefield","tagNotes",0)="1"
^%zewd("customTag","ext:desktop")="desktop^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:desktop","tagNotes",0)="1"
^%zewd("customTag","ext:desktopwindow")="desktopWindow^ExtJS2"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:desktopwindow","tagNotes",0)="1"
^%zewd("customTag","ext:editorgridpanel")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:editorgridpanel","tagNotes",0)="1"
^%zewd("customTag","ext:ewdform")="ewdForm^ExtJS2"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:ewdform","tagNotes",0)="1"
^%zewd("customTag","ext:fieldset")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:fieldset","tagNotes",0)="1"
^%zewd("customTag","ext:formpanel")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:formpanel","tagNotes",0)="1"
^%zewd("customTag","ext:formsubmit")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:formsubmit","tagNotes",0)="1"
^%zewd("customTag","ext:grid")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:grid","tagNotes",0)="1"
^%zewd("customTag","ext:gridpanel")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:gridpanel","tagNotes",0)="1"
^%zewd("customTag","ext:modalwindow")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:modalwindow","tagNotes",0)="1"
^%zewd("customTag","ext:numberfield")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:numberfield","tagNotes",0)="1"
^%zewd("customTag","ext:panel")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:panel","tagNotes",0)="1"
^%zewd("customTag","ext:progressbar")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:progressbar","tagNotes",0)="1"
^%zewd("customTag","ext:quicktips")="quickTips^ExtJS2"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:quicktips","tagNotes",0)="1"
^%zewd("customTag","ext:radio")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:radio","tagNotes",0)="1"
^%zewd("customTag","ext:radiogroup")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:radiogroup","tagNotes",0)="1"
^%zewd("customTag","ext:statusbar")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:statusbar","tagNotes",0)="1"
^%zewd("customTag","ext:subpanellayout")="subPanelLayout^ExtJS2"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:subpanellayout","tagNotes",0)="1"
^%zewd("customTag","ext:tabpanel")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:tabpanel","tagNotes",0)="1"
^%zewd("customTag","ext:textfield")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:textfield","tagNotes",0)="1"
^%zewd("customTag","ext:timefield")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:timefield","tagNotes",0)="1"
^%zewd("customTag","ext:toolbar")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:toolbar","tagNotes",0)="1"
^%zewd("customTag","ext:tree")="tree^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:tree","tagNotes",0)="1"
^%zewd("customTag","ext:viewport")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:viewport","tagNotes",0)="1"
^%zewd("customTag","ext:window")="widget^ExtJS"_$C(1)_"0"_$C(1,1,1)_"ewd"_$C(1,1)
^%zewd("customTag","ext:window","tagNotes",0)="1"
^%zewd("customTag","iwd:bottomtabbar")="bottomTabBar^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:bottomtabbar"
^%zewd("customTag","iwd:field")="field^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:field"
^%zewd("customTag","iwd:footer")="footer^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:footer"
^%zewd("customTag","iwd:form")="form^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:form"
^%zewd("customTag","iwd:formfield")="formField^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:formfield"
^%zewd("customTag","iwd:formpanel")="formPanel^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:formpanel"
^%zewd("customTag","iwd:graytitle")="graytitle^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:graytitle"
^%zewd("customTag","iwd:header")="header^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:header"
^%zewd("customTag","iwd:main")="main^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:main"
^%zewd("customTag","iwd:menuitem")="menuItem^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:menuitem"
^%zewd("customTag","iwd:menupanel")="menuPanel^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:menupanel"
^%zewd("customTag","iwd:navbutton")="navButton^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:navbutton"
^%zewd("customTag","iwd:pageitem")="pageItem^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:pageitem"
^%zewd("customTag","iwd:redirect")="redirect^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:redirect"
^%zewd("customTag","iwd:tablepanel")="tablePanel^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:tablepanel"
^%zewd("customTag","iwd:tabpanel")="tabPanel^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:tabpanel"
^%zewd("customTag","iwd:textpanel")="pageItem^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:textpanel"
^%zewd("customTag","iwd:title")="title^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:title"
^%zewd("customTag","iwd:toolbar")="toolbar^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:toolbar"
^%zewd("customTag","iwd:toolbarbutton")="toolbarbutton^%zewdiwd"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"iwd:toolbarbutton"
^%zewd("customTag","st:card")="card^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:card"
^%zewd("customTag","st:carousel")="panel^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:carousel"
^%zewd("customTag","st:class")="stclass^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:class"
^%zewd("customTag","st:container")="container^%zewdST2"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:container"
^%zewd("customTag","st:form")="form^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:form"
^%zewd("customTag","st:formpanel")="panel^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:formpanel"
^%zewd("customTag","st:js")="js^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:js"
^%zewd("customTag","st:json")="json^%zewdST2"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:json"
^%zewd("customTag","st:list")="list^%zewdST2"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:list"
^%zewd("customTag","st:loggedinview")="loggedInView^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:loggedinview"
^%zewd("customTag","st:navigationmenu")="navigationMenu^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:navigationmenu"
^%zewd("customTag","st:pageitem")="pageItem^%zewdST2"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:pageitem"
^%zewd("customTag","st:panel")="panel^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:panel"
^%zewd("customTag","st:qrcode")="qrCode^%zewdST2"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:qrcode"
^%zewd("customTag","st:script")="script^%zewdST2"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:script"
^%zewd("customTag","st:sessionlist")="sessionList^%zewdST2"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:sessionlist"
^%zewd("customTag","st:tabpanel")="panel^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:tabpanel"
^%zewd("customTag","st:touchgrid")="touchGrid^%zewdST2"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:touchgrid"
^%zewd("customTag","st:universalui")="uui^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:universalui"
^%zewd("customTag","st:uui")="uui^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:uui"
^%zewd("customTag","st:uuimenu")="uuiMenu^%zewdST"_$C(1)_"0"_$C(1)_"system"_$C(1,1)_"st:uuimenu"
^%zewd("customTag","textarea")="textarea^%zewdCompiler4"_$C(1)_"0"_$C(1)_"system"_$C(1)_"name"_$C(1)_"textarea"
^%zewd("customTag","yui:button")="Button^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:button","tagNotes",0)="0"
^%zewd("customTag","yui:datatable")="DataTable^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:datatable","tagNotes",0)="0"
^%zewd("customTag","yui:datatablebasic")="DataTable^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:datatablebasic","tagNotes",0)="0"
^%zewd("customTag","yui:datefield")="DateField^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:datefield","tagNotes",0)="0"
^%zewd("customTag","yui:dialog")="Dialog^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:dialog","tagNotes",0)="0"
^%zewd("customTag","yui:displaytable")="DisplayTable^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:displaytable","tagNotes",0)="0"
^%zewd("customTag","yui:menu")="Menu^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:menu","tagNotes",0)="0"
^%zewd("customTag","yui:menubar")="MenuBar^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:menubar","tagNotes",0)="0"
^%zewd("customTag","yui:panel")="Dialog^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:panel","tagNotes",0)="0"
^%zewd("customTag","yui:submit")="Submit^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:submit","tagNotes",0)="0"
^%zewd("customTag","yui:tabview")="TabView^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:tabview","tagNotes",0)="0"
^%zewd("customTag","yui:treeview")="TreeView^%zewdYUI"_$C(1)_"0"_$C(1,1,1)_"ewd"
^%zewd("customTag","yui:treeview","tagNotes",0)="0"
^%zewd("documentation","DOM","method","addCSPServerScript","call")="s newOID=$$addCSPServerScript^%zewdDOM(parentOID,text)"
^%zewd("documentation","DOM","method","addCSPServerScript","params",1,"desc")="The OID of the parent node under which the script will be added as the last child"
^%zewd("documentation","DOM","method","addCSPServerScript","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","addCSPServerScript","params",1,"name")="parentOID"
^%zewd("documentation","DOM","method","addCSPServerScript","params",2,"desc")="The Cache Objectscript code that you want to add to the page.  Any line breaks"_$C(10)_"should be defined as $c(13,10)"
^%zewd("documentation","DOM","method","addCSPServerScript","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","addCSPServerScript","params",2,"name")="text"
^%zewd("documentation","DOM","method","addCSPServerScript","purpose")="Adds an inline CSP script block into the EWD Page DOM, ie:"_$C(10)_"&lt;script language=""cache"" runat=""server""&gt;  // adds your code here, as defined in the text parameter&lt;/script&gt;"_$C(10)_"This tag is required if your custom tag needs to add some CSP/WebLink-specific"_$C(10)_"logic to the page.  Note that use of this method will make your custom tag usable "_$C(10)_"only by users of CSP or WebLink."
^%zewd("documentation","DOM","method","addCSPServerScript","returnValue")="The OID of the newly created script tag"
^%zewd("documentation","DOM","method","addElementToDOM","call")="s newOID=$$addElementToDOM^%zewdDOM(tagName,parentOID,"""",.attrArray,text,asFirstChild)"
^%zewd("documentation","DOM","method","addElementToDOM","params",1,"desc")="The name of the new element to instantiate (NB case-sensitive)"
^%zewd("documentation","DOM","method","addElementToDOM","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","addElementToDOM","params",1,"name")="tagName"
^%zewd("documentation","DOM","method","addElementToDOM","params",2,"desc")="The OID of the new element's parent"
^%zewd("documentation","DOM","method","addElementToDOM","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","addElementToDOM","params",2,"name")="parentOID"
^%zewd("documentation","DOM","method","addElementToDOM","params",3,"desc")="Not used: leave null"
^%zewd("documentation","DOM","method","addElementToDOM","params",3,"name")="null"
^%zewd("documentation","DOM","method","addElementToDOM","params",4,"desc")="Local array containing attribute name/value pairs, in the format:"_$C(10)_"attrArray(attrName)=attrValue"_$C(10)_"For example:"_$C(10)_"attrArray(""hello"")=""world"""_$C(10)_"attrArray(""source"")=""c:\myFiles"""
^%zewd("documentation","DOM","method","addElementToDOM","params",4,"name")="attrArray"
^%zewd("documentation","DOM","method","addElementToDOM","params",5,"desc")="Optional text to be added inside the element's opening and closing tags"
^%zewd("documentation","DOM","method","addElementToDOM","params",5,"name")="text"
^%zewd("documentation","DOM","method","addElementToDOM","params",6,"desc")="By default, addElementToDoM adds the new element as the last child of the specified parent"_$C(10)_"element.  If you set the asFirstChild parameter to ""1"", then the new element is added as"_$C(10)_"the first child of the parent node."
^%zewd("documentation","DOM","method","addElementToDOM","params",6,"name")="asFirstChild"
^%zewd("documentation","DOM","method","addElementToDOM","purpose")="Add an element, its associated attributes and text, if any, as a child of a parent element"
^%zewd("documentation","DOM","method","addElementToDOM","returnValue")="The OID of the newly created Element, or an error string"
^%zewd("documentation","DOM","method","addJavascriptFunction","call")="s newOID=$$addJavascriptFunction^%zewdDOM(docName,.jsTextArray)"
^%zewd("documentation","DOM","method","addJavascriptFunction","params",1,"desc")="The name of the EWD Page DOM"
^%zewd("documentation","DOM","method","addJavascriptFunction","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","addJavascriptFunction","params",1,"name")="docName"
^%zewd("documentation","DOM","method","addJavascriptFunction","params",2,"desc")="A local array containing the lines of text that comprise the JavaScript function, eg:"_$C(10)_"   jsTextArray(1)=""function myFunc() {"""_$C(10)_"   jsTextArray(2)="" alert('test function')"""_$C(10)_"   jsTextArray(3)=""};"""_$C(10)_"Passed by Reference"
^%zewd("documentation","DOM","method","addJavascriptFunction","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","addJavascriptFunction","params",2,"name")="jsTextArray"
^%zewd("documentation","DOM","method","addJavascriptFunction","purpose")="Adds a Javascript function to an EWD Page DOM.  If a script tag does not "_$C(10)_"exist to contain the function, then it is added to the page or fragment."
^%zewd("documentation","DOM","method","addJavascriptFunction","returnValue")="The OID of the script tag that contains the Javascript function"
^%zewd("documentation","DOM","method","addJavascriptObject","call")="s newOID=$$addJavascriptObject^%zewdDOM(docName,.jsTextArray)"
^%zewd("documentation","DOM","method","addJavascriptObject","params",1,"desc")="The name of the EWD Page DOM"
^%zewd("documentation","DOM","method","addJavascriptObject","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","addJavascriptObject","params",1,"name")="docName"
^%zewd("documentation","DOM","method","addJavascriptObject","params",2,"desc")="A local array containing the lines of text that comprise the JavaScript object, eg:jsTextArray(1)=""myObj.test = function() {"" "_$C(10)_"jsTextArray(2)="" alert('test function')"""_$C(10)_"jsTextArray(3)=""} ;"""_$C(10)_"Passed by Reference"
^%zewd("documentation","DOM","method","addJavascriptObject","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","addJavascriptObject","params",2,"name")="jsTextArray"
^%zewd("documentation","DOM","method","addJavascriptObject","purpose")="Adds a Javascript object declaration to an EWD Page DOM.  If a script tag does not "_$C(10)_"exist to contain the function, then it is added to the page or fragment."
^%zewd("documentation","DOM","method","addJavascriptObject","returnValue")="The OID of the script tag that contains the Javascript function"
^%zewd("documentation","DOM","method","addTextToElement","call")="s textOID=$$addTextToElement^%zewdDOM(elementOID,text)"
^%zewd("documentation","DOM","method","addTextToElement","params",1,"desc")="The OID of the element to which the text is to be added"
^%zewd("documentation","DOM","method","addTextToElement","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","addTextToElement","params",1,"name")="elementOID"
^%zewd("documentation","DOM","method","addTextToElement","params",2,"desc")="The text to be added"
^%zewd("documentation","DOM","method","addTextToElement","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","addTextToElement","params",2,"name")="text"
^%zewd("documentation","DOM","method","addTextToElement","purpose")="Adds/appends a text node to an element"
^%zewd("documentation","DOM","method","addTextToElement","returnValue")="The OID of the newly created Text Node, or an error string"
^%zewd("documentation","DOM","method","appendChild","call")="s childOID=$$appendChild^%zewdDOM(newChildOID,parentOID)"
^%zewd("documentation","DOM","method","appendChild","params",1,"desc")="The OID of the element that is to be appended as a last child"
^%zewd("documentation","DOM","method","appendChild","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","appendChild","params",1,"name")="newChildOID"
^%zewd("documentation","DOM","method","appendChild","params",2,"desc")="The OID of the parent element"
^%zewd("documentation","DOM","method","appendChild","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","appendChild","params",2,"name")="parentOID"
^%zewd("documentation","DOM","method","appendChild","purpose")="Appends an element node as the last child of a parent element.  The nodeto be appended must exist within the DOM tree but must be currentlyun-connected to any other node."
^%zewd("documentation","DOM","method","appendChild","returnValue")="The OID of the newly created Child Node, or an error string"
^%zewd("documentation","DOM","method","attributeExists","call")="s exists=$$attributeExists^%zewdDOM(attributeName,elementOID)"
^%zewd("documentation","DOM","method","attributeExists","params",1,"desc")="The name of the attribute"
^%zewd("documentation","DOM","method","attributeExists","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","attributeExists","params",1,"name")="attributeName"
^%zewd("documentation","DOM","method","attributeExists","params",2,"desc")="The OID of the element"
^%zewd("documentation","DOM","method","attributeExists","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","attributeExists","params",2,"name")="parentOID"
^%zewd("documentation","DOM","method","attributeExists","purpose")="Tests whether or not the specified element contains the specified attribute"
^%zewd("documentation","DOM","method","attributeExists","returnValue")="Returns a value of 1 if the element contains the attribute; 0 if not"
^%zewd("documentation","DOM","method","clearDOMs","call")="d clearDOMs^%zewdDOM"
^%zewd("documentation","DOM","method","clearDOMs","purpose")="Deletes all EWD DOMs from the current namespace."
^%zewd("documentation","DOM","method","clearDOMs","returnValue")=""
^%zewd("documentation","DOM","method","cloneDocument","call")="s toDocOID=$$cloneDocument^%zewdDOM(fromDocName,toDocName)"
^%zewd("documentation","DOM","method","cloneDocument","params",1,"desc")="The name of the DOM to be copied"
^%zewd("documentation","DOM","method","cloneDocument","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","cloneDocument","params",1,"name")="fromDocName"
^%zewd("documentation","DOM","method","cloneDocument","params",2,"desc")="The name of the DOM to be created"
^%zewd("documentation","DOM","method","cloneDocument","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","cloneDocument","params",2,"name")="toDocName"
^%zewd("documentation","DOM","method","cloneDocument","purpose")="Creates an exact copy of a DOM"
^%zewd("documentation","DOM","method","cloneDocument","returnValue")="The OID of the newly created DOM"
^%zewd("documentation","DOM","method","copyNodes","call")="s toNodeOID=$$copyNodes^%zewdDOM(fromNodeOID,toDocOID,parentOID,deep)"
^%zewd("documentation","DOM","method","copyNodes","params",1,"desc")="The node to be copied.  If a sub-tree is being copied, specify the top node."
^%zewd("documentation","DOM","method","copyNodes","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","copyNodes","params",1,"name")="fromNodeOID"
^%zewd("documentation","DOM","method","copyNodes","params",2,"desc")="The OID of the DOM to which the node/subtree will be copied"
^%zewd("documentation","DOM","method","copyNodes","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","copyNodes","params",2,"name")="toDocOID"
^%zewd("documentation","DOM","method","copyNodes","params",3,"desc")="The OID of the element to which the node will be appended as the last child"
^%zewd("documentation","DOM","method","copyNodes","params",3,"mandatory")="1"
^%zewd("documentation","DOM","method","copyNodes","params",3,"name")="parentOID"
^%zewd("documentation","DOM","method","copyNodes","params",4,"desc")="If a value of ""true"" is specified, then the entire sub-tree under the specified ""fromNode"" will be copied."_$C(10)_"If any other value is specified, only the specified ""fromNode"" will be copied."
^%zewd("documentation","DOM","method","copyNodes","params",4,"mandatory")="1"
^%zewd("documentation","DOM","method","copyNodes","params",4,"name")="deep"
^%zewd("documentation","DOM","method","copyNodes","purpose")="Copies a DOM node and, optionally the sub-tree underneath it, from one DOM to another. The"_$C(10)_"top copied node is appended as the last child of a specified parent element in the other DOM."
^%zewd("documentation","DOM","method","copyNodes","returnValue")="The OID of the copied node within the DOM to which it has been copied."
^%zewd("documentation","DOM","method","createCDATASection","call")="s cdataOID=$$createCDATASection^%zewdDOM(data,docOID)"
^%zewd("documentation","DOM","method","createCDATASection","params",1,"desc")="Text string containing the data to be included in the CDATA section.  Any line breaks should"_$C(10)_"be specified using either $c(13,10) or $c(10)"
^%zewd("documentation","DOM","method","createCDATASection","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","createCDATASection","params",1,"name")="data"
^%zewd("documentation","DOM","method","createCDATASection","params",2,"desc")="The OID of the DOM into which the CDATA Section is to be added."
^%zewd("documentation","DOM","method","createCDATASection","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","createCDATASection","params",2,"name")="docOID"
^%zewd("documentation","DOM","method","createCDATASection","purpose")="Creates a CDATA Section node.  The node will not be attached to any other node in the DOM"
^%zewd("documentation","DOM","method","createCDATASection","returnValue")="The OID of the newly created CDATA Section node"
^%zewd("documentation","DOM","method","createComment","call")="s commentOID=$$createComment^%zewdDOM(data,docOID)"
^%zewd("documentation","DOM","method","createComment","params",1,"desc")="Text string containing the comment.  Any line breaks should"_$C(10)_"be specified using either $c(13,10) or $c(10)"
^%zewd("documentation","DOM","method","createComment","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","createComment","params",1,"name")="data"
^%zewd("documentation","DOM","method","createComment","params",2,"desc")="The OID of the DOM into which the comment node is to be added."
^%zewd("documentation","DOM","method","createComment","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","createComment","params",2,"name")="docOID"
^%zewd("documentation","DOM","method","createComment","purpose")="Creates a comment node.  The node will not be attached to any other node in the DOM"
^%zewd("documentation","DOM","method","createComment","returnValue")="The OID of the newly created Comment node"
^%zewd("documentation","DOM","method","createDocumentType","call")="s docTypeOID=$$createDocumentType^%zewdDOM(qualifiedName,publicId,systemId,docOID)"
^%zewd("documentation","DOM","method","createDocumentType","params",1,"desc")="The document type name, eg ""html"""
^%zewd("documentation","DOM","method","createDocumentType","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","createDocumentType","params",1,"name")="qualifiedName"
^%zewd("documentation","DOM","method","createDocumentType","params",2,"desc")="The public ID of the document type, eg ""-//W3C//DTD XHTML 1.0 Strict//EN"".  If specified, the word"_$C(10)_"""PUBLIC"" will appear in the DOCTYPE tag."
^%zewd("documentation","DOM","method","createDocumentType","params",2,"name")="publicId"
^%zewd("documentation","DOM","method","createDocumentType","params",3,"desc")="The system ID of the document type, eg ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd""."_$C(10)_"If a system ID is specified but no public ID is specified, the word ""SYSTEM"" will appear in the DOCTYPE tag."
^%zewd("documentation","DOM","method","createDocumentType","params",3,"name")="systemId"
^%zewd("documentation","DOM","method","createDocumentType","params",4,"desc")="The OID of the DOM into which the Document Type node is to be added."
^%zewd("documentation","DOM","method","createDocumentType","params",4,"mandatory")="1"
^%zewd("documentation","DOM","method","createDocumentType","params",4,"name")="docOID"
^%zewd("documentation","DOM","method","createDocumentType","purpose")="Creates a Document Type node.  The node will not be attached to any other node in the DOM"_$C(10)_"eg:"_$C(10)_"&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd""&gt;"_$C(10)_"Here the qualifiedName = ""html"", the publicID = ""-//W3C//DTD XHTML 1.0 Strict//EN"" and"_$C(10)_"the systemId = ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"""
^%zewd("documentation","DOM","method","createDocumentType","returnValue")="The OID of the newly created Document Type node"
^%zewd("documentation","DOM","method","createElement","call")="s elementOID=$$createElement^%zewdDOM(tagName,docOID)"
^%zewd("documentation","DOM","method","createElement","params",1,"desc")="The element's tag name"
^%zewd("documentation","DOM","method","createElement","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","createElement","params",1,"name")="tagName"
^%zewd("documentation","DOM","method","createElement","params",2,"desc")="The OID of the DOM into which the element node is to be added."
^%zewd("documentation","DOM","method","createElement","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","createElement","params",2,"name")="docOID"
^%zewd("documentation","DOM","method","createElement","purpose")="Creates an empty element node.  The node will not be attached to any other node in the DOM"
^%zewd("documentation","DOM","method","createElement","returnValue")="The OID of the newly created Element node"
^%zewd("documentation","DOM","method","createJSPCommand","call")="s newOID=$$createJSPCommand^%zewdDOM(data,docOID)"
^%zewd("documentation","DOM","method","createJSPCommand","params",1,"desc")="The JSP code that you want to add to the page.  Any line breaks"_$C(10)_"should be defined as $c(13,10)"
^%zewd("documentation","DOM","method","createJSPCommand","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","createJSPCommand","params",1,"name")="data"
^%zewd("documentation","DOM","method","createJSPCommand","params",2,"desc")="The OID of the EWD Page DOM into which the JSP script block is to be added"
^%zewd("documentation","DOM","method","createJSPCommand","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","createJSPCommand","params",2,"name")="docOID"
^%zewd("documentation","DOM","method","createJSPCommand","purpose")="Adds an inline JSP script block into the EWD Page DOM, ie:"_$C(10)_"&lt%"_$C(10)_"  //Your JSP code in here"_$C(10)_"%&gt;"_$C(10)_"This tag is required if your custom tag needs to add some JSP-specific"_$C(10)_"logic to the page.  Note that use of this method will make your custom tag usable "_$C(10)_"only by users of JSP, unless you cater for all other potential technologies."_$C(10)_"Note: this function adds the JSP script block to the page but does not attach it to"_$C(10)_"any node.  You must do this yourself, eg using appendChild()."
^%zewd("documentation","DOM","method","createJSPCommand","returnValue")="The OID of the newly created JSP script tag"
^%zewd("documentation","DOM","method","createPHPCommand","call")="s newOID=$$createPHPCommand^%zewdDOM(data,docOID)"
^%zewd("documentation","DOM","method","createPHPCommand","params",1,"desc")="The PHP code that you want to add to the page.  Any line breaksshould be defined as $c(13,10)"
^%zewd("documentation","DOM","method","createPHPCommand","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","createPHPCommand","params",1,"name")="data"
^%zewd("documentation","DOM","method","createPHPCommand","params",2,"desc")="The OID of the EWD Page DOM into which the PHP script block is to be added"
^%zewd("documentation","DOM","method","createPHPCommand","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","createPHPCommand","params",2,"name")="docOID"
^%zewd("documentation","DOM","method","createPHPCommand","purpose")="Adds an inline PHP script block into the EWD Page DOM, ie:"_$C(10)_"&lt?php"_$C(10)_"  //Your PHP code in here"_$C(10)_"?%&gt;"_$C(10)_"This tag is required if your custom tag needs to add some PHP-specific"_$C(10)_"logic to the page.  Note that use of this method will make your custom tag usable "_$C(10)_"only by users of PHP, unless you cater for all other potential technologies."_$C(10)_"Note: this function adds the PHP script block to the page but does not attach it to"_$C(10)_"any node.  You must do this yourself, eg using appendChild()."
^%zewd("documentation","DOM","method","createPHPCommand","returnValue")="The OID of the newly created JSP script tag"
^%zewd("documentation","DOM","method","createProcessingInstruction","call")="s piOID=$$createProcessingInstruction^%zewdDOM(target,data,docOID)"
^%zewd("documentation","DOM","method","createProcessingInstruction","params",1,"desc")="The Processing Instruction target"
^%zewd("documentation","DOM","method","createProcessingInstruction","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","createProcessingInstruction","params",1,"name")="target"
^%zewd("documentation","DOM","method","createProcessingInstruction","params",2,"desc")="The data portion of the Processing Instruction"
^%zewd("documentation","DOM","method","createProcessingInstruction","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","createProcessingInstruction","params",2,"name")="data"
^%zewd("documentation","DOM","method","createProcessingInstruction","params",3,"desc")="The OID of the DOM into which the processing instruction node is to be added."
^%zewd("documentation","DOM","method","createProcessingInstruction","params",3,"mandatory")="1"
^%zewd("documentation","DOM","method","createProcessingInstruction","params",3,"name")="docOID"
^%zewd("documentation","DOM","method","createProcessingInstruction","purpose")="Creates a processing instruction node.  The node will not be attached to any other node in the DOM.eg:"_$C(10)_"&lt;?xml version='1.0' encoding='UTF-8' ?&gt;"_$C(10)_"In this example, target = ""xml"", data = ""version='1.0' encoding='UTF-8'"_$C(10)_"This method can also be used to create PHP processing instructions, eg:"_$C(10)_"&lt;?php"_$C(10)_"//this is some PHP code"_$C(10)_"?&gt;"_$C(10)_"In this example, ""php"" is the target and your PHP code is specified as data."
^%zewd("documentation","DOM","method","createProcessingInstruction","returnValue")="The OID of the newly created Processing Instruction node"
^%zewd("documentation","DOM","method","createTextNode","call")="s textOID=$$createTextNode^%zewdDOM(data,docOID)"
^%zewd("documentation","DOM","method","createTextNode","params",1,"desc")="Text string containing the text"
^%zewd("documentation","DOM","method","createTextNode","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","createTextNode","params",1,"name")="data"
^%zewd("documentation","DOM","method","createTextNode","params",2,"desc")="The OID of the DOM into which the text node is to be added."
^%zewd("documentation","DOM","method","createTextNode","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","createTextNode","params",2,"name")="docOID"
^%zewd("documentation","DOM","method","createTextNode","purpose")="Creates a text node.  The node will not be attached to any other node in the DOM"
^%zewd("documentation","DOM","method","createTextNode","returnValue")="The OID of the newly created Text node"
^%zewd("documentation","DOM","method","documentNameExists","call")="s exists=$$documentNameExists^%zewdDOM(docName)"
^%zewd("documentation","DOM","method","documentNameExists","params",1,"desc")="The name of the DOM document"
^%zewd("documentation","DOM","method","documentNameExists","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","documentNameExists","params",1,"name")="docName"
^%zewd("documentation","DOM","method","documentNameExists","purpose")="Tests whether or not the specified DOM exists in the current namespace"
^%zewd("documentation","DOM","method","documentNameExists","returnValue")="Returns a value of 1 if the named DOM exists; 0 if not"
^%zewd("documentation","DOM","method","getAttribute","call")="s attrValue=$$getAttribute^%zewdDOM(attrName,elementOID)"
^%zewd("documentation","DOM","method","getAttribute","params",1,"desc")="The name of the attribute"
^%zewd("documentation","DOM","method","getAttribute","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getAttribute","params",1,"name")="attrName"
^%zewd("documentation","DOM","method","getAttribute","params",2,"desc")="The OID of the element"
^%zewd("documentation","DOM","method","getAttribute","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getAttribute","params",2,"name")="elementOID"
^%zewd("documentation","DOM","method","getAttribute","purpose")="Returns the value of the specified attribute in the specified element"
^%zewd("documentation","DOM","method","getAttribute","returnValue")="The value of the specified attribute"
^%zewd("documentation","DOM","method","getAttributeArray","call")="s status=$$getAttributeArray^%zewdDOM(elementOID,.attrArray)"
^%zewd("documentation","DOM","method","getAttributeArray","params",1,"desc")="The OID of the element"
^%zewd("documentation","DOM","method","getAttributeArray","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getAttributeArray","params",1,"name")="elementOID"
^%zewd("documentation","DOM","method","getAttributeArray","params",2,"desc")="The name of the array in which the list of attributes will be returned."_$C(10)_"NB: called by reference"
^%zewd("documentation","DOM","method","getAttributeArray","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getAttributeArray","params",2,"name")="attrArray"
^%zewd("documentation","DOM","method","getAttributeArray","purpose")="Returns a local array of attributes belonging to the specified element."_$C(10)_"The array is of the format:"_$C(10)_"attrArray(attrName)=attrOID"_$C(10)_"eg:"_$C(10)_"attrArray(""href"")=""7-107"""
^%zewd("documentation","DOM","method","getAttributeArray","returnValue")="Returns a value of null ("""") if it ran successfully"
^%zewd("documentation","DOM","method","getAttributeValues","call")="d getAttributeValues^%zewdDOM(elementOID,.attrArray)"
^%zewd("documentation","DOM","method","getAttributeValues","params",1,"desc")="The OID of the element"
^%zewd("documentation","DOM","method","getAttributeValues","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getAttributeValues","params",1,"name")="elementOID"
^%zewd("documentation","DOM","method","getAttributeValues","params",2,"desc")="The name of the array in which the list of attributes will be returned."_$C(10)_"NB: called by reference"
^%zewd("documentation","DOM","method","getAttributeValues","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getAttributeValues","params",2,"name")="attrArray"
^%zewd("documentation","DOM","method","getAttributeValues","purpose")="Returns a local array of attribute name/value pairs belonging to the specified element."_$C(10)_"The array is of the format:"_$C(10)_"attrArray(attrName)=attrValue"_$C(10)_"eg:"_$C(10)_"attrArray(""href"")=""http://www.mgateway.com"""
^%zewd("documentation","DOM","method","getAttributeValues","returnValue")=""
^%zewd("documentation","DOM","method","getChildrenInOrder","call")="d getChildrenInOrder^%zewdDOM(parentOID,.childArray)"
^%zewd("documentation","DOM","method","getChildrenInOrder","params",1,"desc")="The OID of the parent element whose child elements you wish to locate"
^%zewd("documentation","DOM","method","getChildrenInOrder","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getChildrenInOrder","params",1,"name")="parentOID"
^%zewd("documentation","DOM","method","getChildrenInOrder","params",2,"desc")="The name of the array in which the list of child nodes will be returned.NB: called by reference"
^%zewd("documentation","DOM","method","getChildrenInOrder","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getChildrenInOrder","params",2,"name")="childArray"
^%zewd("documentation","DOM","method","getChildrenInOrder","purpose")="Returns a local array of the OIDs of a node's child nodes, sorted in child position order"_$C(10)_"The array is of the format:"_$C(10)_"childArray(no)=childOID"_$C(10)_"eg:"_$C(10)_"childArray(1)=""7-15"""
^%zewd("documentation","DOM","method","getChildrenInOrder","returnValue")=""
^%zewd("documentation","DOM","method","getData","call")="s text=$$getData^%zewdDOM(nodeOID,.textArray)"
^%zewd("documentation","DOM","method","getData","params",1,"desc")="The OID of the node whose data is required"
^%zewd("documentation","DOM","method","getData","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getData","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getData","params",2,"desc")="The name of the array in which text will be returned if too much to be returned as a simple return value."_$C(10)_"NB: called by reference"
^%zewd("documentation","DOM","method","getData","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getData","params",2,"name")="textArray"
^%zewd("documentation","DOM","method","getData","purpose")="Returns the data property for a node.  This method is only applicable to those node types"_$C(10)_"that have a data property, eg 3 (text), 4 (CDATA), 7 (Processing Instruction), 8 (Comment)"_$C(10)_"If the data content is under 15k, then it is returned as a single text string return value."_$C(10)_"Longer content may be returned in the textArray"_$C(10)_"The array is of the format:"_$C(10)_"textArray(lineNo)=line of data text"
^%zewd("documentation","DOM","method","getData","returnValue")="The data content of the node (if less than 15k in size)"
^%zewd("documentation","DOM","method","getDescendantNodes","call")="d getDescendantNodes^%zewdDOM(nodeOID,.OIDArray)"
^%zewd("documentation","DOM","method","getDescendantNodes","params",1,"desc")="The OID of the parent element whose descendents you wish to locate"
^%zewd("documentation","DOM","method","getDescendantNodes","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getDescendantNodes","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getDescendantNodes","params",2,"desc")="The name of the array in which the list of descendant nodes will be returned."_$C(10)_"NB: called by reference"
^%zewd("documentation","DOM","method","getDescendantNodes","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getDescendantNodes","params",2,"name")="OIDArray"
^%zewd("documentation","DOM","method","getDescendantNodes","purpose")="Returns a local array of the OIDs for all a node's descendant nodes (ie all nodes in the sub-tree beneath it)"_$C(10)_"The array is of the format:"_$C(10)_"OIDArray(nodeOID)=tagName | null if not an element"_$C(10)_"eg:"_$C(10)_"OIDArray(""7-15"")=""div"""
^%zewd("documentation","DOM","method","getDescendantNodes","returnValue")=""
^%zewd("documentation","DOM","method","getDocumentAttribute","call")="s attrib=$$getDocumentAttribute^%zewdDOM(docOID,attributeName)"
^%zewd("documentation","DOM","method","getDocumentAttribute","params",1,"desc")="The OID of the DOM"
^%zewd("documentation","DOM","method","getDocumentAttribute","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getDocumentAttribute","params",1,"name")="docOID"
^%zewd("documentation","DOM","method","getDocumentAttribute","params",2,"desc")="The attribute required.  The following are supported:"_$C(10)_"documentElement"_$C(10)_"documentName"_$C(10)_"creationDate"_$C(10)_"creationTime"
^%zewd("documentation","DOM","method","getDocumentAttribute","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getDocumentAttribute","params",2,"name")="attributeName"
^%zewd("documentation","DOM","method","getDocumentAttribute","purpose")="Returns the value of the specified DOM document attribute."
^%zewd("documentation","DOM","method","getDocumentAttribute","returnValue")="The value of the specified attribute"
^%zewd("documentation","DOM","method","getDocumentElement","call")="s deOID=$$getDocumentElement^%zewdDOM(docOID)"
^%zewd("documentation","DOM","method","getDocumentElement","params",1,"desc")="The OID of the DOM"
^%zewd("documentation","DOM","method","getDocumentElement","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getDocumentElement","params",1,"name")="docOID"
^%zewd("documentation","DOM","method","getDocumentElement","purpose")="Returns the OID of a DOM's Document Element (ie its outermost element node)"
^%zewd("documentation","DOM","method","getDocumentElement","returnValue")="The OID of the Document Element"
^%zewd("documentation","DOM","method","getDocumentName","call")="s docName=$$getDocumentName^%zewdDOM(docOID)"
^%zewd("documentation","DOM","method","getDocumentName","params",1,"desc")="The OID of the DOM"
^%zewd("documentation","DOM","method","getDocumentName","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getDocumentName","params",1,"name")="docOID"
^%zewd("documentation","DOM","method","getDocumentName","purpose")="Returns the Document Name of a specified DOM"
^%zewd("documentation","DOM","method","getDocumentName","returnValue")="The Document Name"
^%zewd("documentation","DOM","method","getDocumentNode","call")="s docOID=$$getDocumentNode^%zewdDOM(docName)"
^%zewd("documentation","DOM","method","getDocumentNode","params",1,"desc")="The DOcument Name of the DOM"
^%zewd("documentation","DOM","method","getDocumentNode","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getDocumentNode","params",1,"name")="docName"
^%zewd("documentation","DOM","method","getDocumentNode","purpose")="Returns the Document Node (ie the top-most DOM node) for a specified named DOM"
^%zewd("documentation","DOM","method","getDocumentNode","returnValue")="The OID of the Document Node"
^%zewd("documentation","DOM","method","getElementById","call")="s nodeOID=$$getElementById^%zewdDOM(id,docOID)"
^%zewd("documentation","DOM","method","getElementById","params",1,"desc")="The id attribute value"
^%zewd("documentation","DOM","method","getElementById","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getElementById","params",1,"name")="id"
^%zewd("documentation","DOM","method","getElementById","params",2,"desc")="The OID of the DOM"
^%zewd("documentation","DOM","method","getElementById","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getElementById","params",2,"name")="docOID"
^%zewd("documentation","DOM","method","getElementById","purpose")="Returns the OID of the element that has the specified id attribute value"
^%zewd("documentation","DOM","method","getElementById","returnValue")="The OID of the matching element"
^%zewd("documentation","DOM","method","getElementText","call")="s text=$$getElementText^%zewdDOM(nodeOID,.textArray)"
^%zewd("documentation","DOM","method","getElementText","params",1,"desc")="The OID of the node whose text is required"
^%zewd("documentation","DOM","method","getElementText","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getElementText","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getElementText","params",2,"desc")="The name of the array in which text will be returned if too much to be returned as a simple return value."_$C(10)_"NB: called by reference"
^%zewd("documentation","DOM","method","getElementText","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getElementText","params",2,"name")="textArray"
^%zewd("documentation","DOM","method","getElementText","purpose")="Returns the text inside an element node, if it exists"_$C(10)_"If the text is less than 15k, then it is returned as a single text string return value.Longer content may be returned in the textArray"_$C(10)_"The array is of the format:"_$C(10)_"textArray(lineNo)=line of data text"
^%zewd("documentation","DOM","method","getElementText","returnValue")="The text content of the element (if less than 15k in size)"
^%zewd("documentation","DOM","method","getElementsArrayByTagName","call")="s status=$$getElementsArrayByTagName^%zewdDOM(tagName,docName,fromNodeOID,.OIDArray)"
^%zewd("documentation","DOM","method","getElementsArrayByTagName","params",1,"desc")="The name of the tag required, eg ""div"""
^%zewd("documentation","DOM","method","getElementsArrayByTagName","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getElementsArrayByTagName","params",1,"name")="tagname"
^%zewd("documentation","DOM","method","getElementsArrayByTagName","params",2,"desc")="The Document Name of the DOM being searched.  Specify this parameter if you want to search the entire DOM."_$C(10)_"Leave blank if you want to search a sub-tree within the DOM"
^%zewd("documentation","DOM","method","getElementsArrayByTagName","params",2,"name")="docName"
^%zewd("documentation","DOM","method","getElementsArrayByTagName","params",3,"desc")="The OID of the node at the top of the sub-tree you wish to search."_$C(10)_"Specify this parameter if you want to search a sub-tree within the DOM."_$C(10)_"Leave blank if you want to search the entire DOM."
^%zewd("documentation","DOM","method","getElementsArrayByTagName","params",3,"name")="fromNodeOID"
^%zewd("documentation","DOM","method","getElementsArrayByTagName","params",4,"desc")="The name of the array in which the list of matching elements will be returned."_$C(10)_"NB: called by reference"
^%zewd("documentation","DOM","method","getElementsArrayByTagName","params",4,"mandatory")="1"
^%zewd("documentation","DOM","method","getElementsArrayByTagName","params",4,"name")="OIDArray"
^%zewd("documentation","DOM","method","getElementsArrayByTagName","purpose")="Returns a local array of all element nodes with the specified tag name."_$C(10)_"The array is of the format:"_$C(10)_"OIDArray(nodeOID)="""""
^%zewd("documentation","DOM","method","getElementsArrayByTagName","returnValue")="Returns the value ""1~OIDArray"" if successful"
^%zewd("documentation","DOM","method","getFirstChild","call")="s childOID=$$getFirstChild^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getFirstChild","params",1,"desc")="The OID of the parent node"
^%zewd("documentation","DOM","method","getFirstChild","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getFirstChild","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getFirstChild","purpose")="Returns the OID of an element's first child node"
^%zewd("documentation","DOM","method","getFirstChild","returnValue")="The OID of the first child node.  Returns null if the specified node has no child nodes"
^%zewd("documentation","DOM","method","getJavascriptFunctionBody","call")="s newOID=$$getJavascriptFunctionBody^%zewdDOM(functionName,docName)"
^%zewd("documentation","DOM","method","getJavascriptFunctionBody","params",1,"desc")="The name of the Javascript function you want to find"
^%zewd("documentation","DOM","method","getJavascriptFunctionBody","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getJavascriptFunctionBody","params",1,"name")="functionName"
^%zewd("documentation","DOM","method","getJavascriptFunctionBody","params",2,"desc")="The name of the EWD Page DOM containing the function"
^%zewd("documentation","DOM","method","getJavascriptFunctionBody","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getJavascriptFunctionBody","params",2,"name")="docName"
^%zewd("documentation","DOM","method","getJavascriptFunctionBody","purpose")="This function allows you to extract the contents of a named Javascript "_$C(10)_"function from the EWD page DOM."_$C(10)_"Note that the body of the specified Javascript function is returned as a"_$C(10)_"single string, with line breaks denoted by CRLF [$c(13,10)] characters,"_$C(10)_"and also note that the body does not include the ""function myFunction"_$C(10)_"{"" declaration line or the closing brace [ } ]"_$C(10)_"This method will search for the specified javascript function in all"_$C(10)_"&lt;script&gt; tags within the EWD page DOM"
^%zewd("documentation","DOM","method","getJavascriptFunctionBody","returnValue")="A text string that contains the body of the specified Javascript function."_$C(10)_"In a page that contains the following Javascript function:"_$C(10)_"function release(objid) {"_$C(10)_"var obj=document.getElementById(objid) ;"_$C(10)_"obj.className = ""popupOn"" ;"_$C(10)_"grabbed = false ;"_$C(10)_"}"_$C(10)_"the returnValue from this function would be:"_$C(10)_"var obj=document.getElementById(objid) ;"_$C(10)_"obj.className = ""popupOn"" ;"_$C(10)_"grabbed = false ;"
^%zewd("documentation","DOM","method","getJavascriptObjectBody","call")="s newOID=$$getJavascriptObjectBody^%zewdDOM(objMethodName,docName)"
^%zewd("documentation","DOM","method","getJavascriptObjectBody","params",1,"desc")="The name of the required Javascript object method"
^%zewd("documentation","DOM","method","getJavascriptObjectBody","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getJavascriptObjectBody","params",1,"name")="objMethodName"
^%zewd("documentation","DOM","method","getJavascriptObjectBody","params",2,"desc")="The name of the EWD Page DOM containing the function"
^%zewd("documentation","DOM","method","getJavascriptObjectBody","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getJavascriptObjectBody","params",2,"name")="docName"
^%zewd("documentation","DOM","method","getJavascriptObjectBody","purpose")="This function allows you to extract the contents of a named Javascript "_$C(10)_"Object declaration from the EWD page DOM."_$C(10)_"Note that the body of the specified Javascript object definition is"_$C(10)_"returned as a single string, with line breaks denoted by CRLF [$c(13,10)] characters, and also note that the body does not include the""myObj.myFunction = function() {"" declaration line or the closing"_$C(10)_"brace [ } ]"_$C(10)_"This method will search for the specified javascript object in all"_$C(10)_"&lt;script&gt; tags within the EWD page DOM"
^%zewd("documentation","DOM","method","getJavascriptObjectBody","returnValue")="A text string that contains the body of the specified Javascript object method definition."_$C(10)_"In a page that contains the following Javascript function:"_$C(10)_"myObj.myFunc = function(objid) {"_$C(10)_"var obj=document.getElementById(objid) ;"_$C(10)_"obj.className = ""popupOn"" ;"_$C(10)_"grabbed = false ;"_$C(10)_"}"_$C(10)_" the returnValue from this function would be:"_$C(10)_"var obj=document.getElementById(objid) ;"_$C(10)_"obj.className = ""popupOn"" ;"_$C(10)_"grabbed = false ;"
^%zewd("documentation","DOM","method","getLastChild","call")="s childOID=$$getLastChild^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getLastChild","params",1,"desc")="The OID of the parent node"
^%zewd("documentation","DOM","method","getLastChild","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getLastChild","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getLastChild","purpose")="Returns the OID of an element's last child node"
^%zewd("documentation","DOM","method","getLastChild","returnValue")="The OID of the last child node.  Returns null if the specified node has no child nodes"
^%zewd("documentation","DOM","method","getListOfDOMs","call")="d getListOfDOMs^%zewdDOM(.domList)"
^%zewd("documentation","DOM","method","getListOfDOMs","params",1,"desc")="The name of the array in which the DOM Document Names will be returned"_$C(10)_"NB: called by reference"
^%zewd("documentation","DOM","method","getListOfDOMs","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getListOfDOMs","params",1,"name")="domList"
^%zewd("documentation","DOM","method","getListOfDOMs","purpose")="Returns a local array of the EWD DOMs by Document Name in the current namespace"_$C(10)_"The array is of the format:"_$C(10)_"domList(docName)="""""
^%zewd("documentation","DOM","method","getListOfDOMs","returnValue")=""
^%zewd("documentation","DOM","method","getLocalName","call")="s localName=$$getLocalName^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getLocalName","params",1,"desc")="The OID of the node"
^%zewd("documentation","DOM","method","getLocalName","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getLocalName","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getLocalName","purpose")="Returns the local name of a specified element.  In the case of a tag name such as ""ewd:config"", then"_$C(10)_"the local name is ""config"".  If the tag name does not contain a "":"" character, then the tag name is"_$C(10)_"returned"
^%zewd("documentation","DOM","method","getLocalName","returnValue")="The tag Local Name"
^%zewd("documentation","DOM","method","getName","call")="s attrName=$$getName^%zewdDOM(attrOID)"
^%zewd("documentation","DOM","method","getName","params",1,"desc")="The OID of the attribute node"
^%zewd("documentation","DOM","method","getName","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getName","params",1,"name")="attrOID"
^%zewd("documentation","DOM","method","getName","purpose")="Returns the name of the specified attribute node"
^%zewd("documentation","DOM","method","getName","returnValue")="The attribute name"
^%zewd("documentation","DOM","method","getNextChild","call")="s nextChildOID=$$getNextChild^%zewdDOM(parentOID,childOID)"
^%zewd("documentation","DOM","method","getNextChild","params",1,"desc")="The OID of the parent node whose child nodes you wish to access"
^%zewd("documentation","DOM","method","getNextChild","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getNextChild","params",1,"name")="parentOID"
^%zewd("documentation","DOM","method","getNextChild","params",2,"desc")="The OID of the previous child node.  If this is set to null, the parent's first child is returned."_$C(10)_"If the parent node's last child is specified, the method returns null."
^%zewd("documentation","DOM","method","getNextChild","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getNextChild","params",2,"name")="childOID"
^%zewd("documentation","DOM","method","getNextChild","purpose")="Returns the OID of the next sibling node after the one specified for a parent node. This methodcan be called repeatedly to iterate through a node's child nodes."
^%zewd("documentation","DOM","method","getNextChild","returnValue")="The OID of the next child node.  Returns null if there are no more children."
^%zewd("documentation","DOM","method","getNextSibling","call")="s siblingOID=$$getNextSibling^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getNextSibling","params",1,"desc")="The OID of the previous sibling node"
^%zewd("documentation","DOM","method","getNextSibling","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getNextSibling","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getNextSibling","purpose")="Returns the OID of an element's next sibling node"
^%zewd("documentation","DOM","method","getNextSibling","returnValue")="The OID of the next sibling node.  Returns null if the specified node has no sibling nodes"
^%zewd("documentation","DOM","method","getNodeType","call")="s nodeType=$$getNodeType^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getNodeType","params",1,"desc")="The OID of the node"
^%zewd("documentation","DOM","method","getNodeType","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getNodeType","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getNodeType","purpose")="Returns the XML node type of the specified node.  Supported node types are as follows:"_$C(10)_"1 = Element"_$C(10)_"2 = Attribute"_$C(10)_"3 = Text"_$C(10)_"4 = CDATA Section"_$C(10)_"7 = Processing Instruction"_$C(10)_"8 = Comment"_$C(10)_"10 = Document Type"
^%zewd("documentation","DOM","method","getNodeType","returnValue")="The Node Type"
^%zewd("documentation","DOM","method","getOwnerElement","call")="s elementOID=$$getOwnerElement(attrOID)"
^%zewd("documentation","DOM","method","getOwnerElement","params",1,"desc")="The OID of the attribute node"
^%zewd("documentation","DOM","method","getOwnerElement","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getOwnerElement","params",1,"name")="attrOID"
^%zewd("documentation","DOM","method","getOwnerElement","purpose")="Returns the OID of the element node that contains the specified attribute node"
^%zewd("documentation","DOM","method","getOwnerElement","returnValue")="The OID of the owner element node"
^%zewd("documentation","DOM","method","getParentNode","call")="s parentOID=$$getParentNode^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getParentNode","params",1,"desc")="The OID of the child node"
^%zewd("documentation","DOM","method","getParentNode","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getParentNode","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getParentNode","purpose")="Returns the OID of a node's parent node"
^%zewd("documentation","DOM","method","getParentNode","returnValue")="The OID of the parent node."
^%zewd("documentation","DOM","method","getPrefix","call")="s prefix=$$getPrefix^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getPrefix","params",1,"desc")="The OID of the node"
^%zewd("documentation","DOM","method","getPrefix","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getPrefix","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getPrefix","purpose")="Returns the prefix of a specified element.  In the case of a tag name such as ""ewd:config"", then"_$C(10)_"the prefix is ""ewd"".  If the tag name does not contain a "":"" character, then the tag name is"_$C(10)_"returned"
^%zewd("documentation","DOM","method","getPrefix","returnValue")="The tag Prefix"
^%zewd("documentation","DOM","method","getPreviousSibling","call")="s siblingOID=$$getPreviousSibling^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getPreviousSibling","params",1,"desc")="The OID of the next sibling node"
^%zewd("documentation","DOM","method","getPreviousSibling","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getPreviousSibling","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getPreviousSibling","purpose")="Returns the OID of an element's previous sibling node"
^%zewd("documentation","DOM","method","getPreviousSibling","returnValue")="The OID of the previous sibling node.  Returns null if the specified node has no previous sibling node"
^%zewd("documentation","DOM","method","getPublicId","call")="s publicId=$$getPublicId^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getPublicId","params",1,"desc")="The OID of the Document Type node"
^%zewd("documentation","DOM","method","getPublicId","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getPublicId","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getPublicId","purpose")="Returns the Public ID of a Document Type (DOCTYPE) element"
^%zewd("documentation","DOM","method","getPublicId","returnValue")="The Public ID"
^%zewd("documentation","DOM","method","getSystemId","call")="s systemId=$$getSystemId^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getSystemId","params",1,"desc")="The OID of the Document Type node"
^%zewd("documentation","DOM","method","getSystemId","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getSystemId","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getSystemId","purpose")="Returns the System ID of a Document Type (DOCTYPE) element"
^%zewd("documentation","DOM","method","getSystemId","returnValue")="The System ID"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","call")="s nodeOID=$$getTagByNameAndAttr^%zewdDOM(tagName,attrName,attrValue,matchCase,docName)"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",1,"desc")="The tag name required"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",1,"name")="tagName"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",2,"desc")="The name of the attribute required"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",2,"name")="attrName"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",3,"desc")="The value of the required attribute"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",3,"mandatory")="1"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",3,"name")="attrValue"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",4,"desc")="If set to 1, then the matching by attribute value is case-sensitive."_$C(10)_"Default value is 0 (case-insensitive value match)"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",4,"name")="matchCase"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",5,"desc")="The Document Name of the DOM being searched"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",5,"mandatory")="1"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","params",5,"name")="docName"
^%zewd("documentation","DOM","method","getTagByNameAndAttr","purpose")="Locates a node in the DOM that matches by tag name and a specified attribute value.  For example youcould use this method to locate an &lt;a&gt; tag with an href attribute with a value of ""page1.ewd"""
^%zewd("documentation","DOM","method","getTagByNameAndAttr","returnValue")="The OID of the matching Element node."
^%zewd("documentation","DOM","method","getTagName","call")="s tagName=$$getTagName^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getTagName","params",1,"desc")="The OID of the element node"
^%zewd("documentation","DOM","method","getTagName","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getTagName","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getTagName","purpose")="Returns the Tag Name of the specified Element Node"
^%zewd("documentation","DOM","method","getTagName","returnValue")="The Element's Tag Name"
^%zewd("documentation","DOM","method","getTagOID","call")="s nodeOID=$$getTagOID^%zewdDOM(tagName,docName,lowerCase)"
^%zewd("documentation","DOM","method","getTagOID","params",1,"desc")="The required Tag Name"
^%zewd("documentation","DOM","method","getTagOID","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getTagOID","params",1,"name")="tagName"
^%zewd("documentation","DOM","method","getTagOID","params",2,"desc")="The DOM Document Name"
^%zewd("documentation","DOM","method","getTagOID","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","getTagOID","params",2,"name")="docName"
^%zewd("documentation","DOM","method","getTagOID","params",3,"desc")="If set to 0, then the tag name match is case-sensitive.  The default value is 0 = case insensitive tag name matching."
^%zewd("documentation","DOM","method","getTagOID","params",3,"name")="lowerCase"
^%zewd("documentation","DOM","method","getTagOID","purpose")="Returns the OID of the first Element node found in the DOM with the specified tag name.  This is a fast way"_$C(10)_"of finding tags that occur only once in a document, eg the ""head"" or ""body"" tags."
^%zewd("documentation","DOM","method","getTagOID","returnValue")="The OID of the matching Element node"
^%zewd("documentation","DOM","method","getTarget","call")="s target=$$getTarget^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","getTarget","params",1,"desc")="The OID of the Processing Instruction node"
^%zewd("documentation","DOM","method","getTarget","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","getTarget","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","getTarget","purpose")="Returns the target value for a Processing Instruction node.  For example in the processing instruction:&lt;?xml version='1.0' encoding='UTF-8' ?&gt;"_$C(10)_"the Target is ""xml"""
^%zewd("documentation","DOM","method","getTarget","returnValue")="The Processing Instruction node's target value"
^%zewd("documentation","DOM","method","hasAttribute","call")="s has=$$hasAttribute^%zewdDOM(attrName,elementOID)"
^%zewd("documentation","DOM","method","hasAttribute","params",1,"desc")="The name of the required attribute"
^%zewd("documentation","DOM","method","hasAttribute","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","hasAttribute","params",1,"name")="attrName"
^%zewd("documentation","DOM","method","hasAttribute","params",2,"desc")="The OID of the element node"
^%zewd("documentation","DOM","method","hasAttribute","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","hasAttribute","params",2,"name")="elementOID"
^%zewd("documentation","DOM","method","hasAttribute","purpose")="Returns ""true"" if the specified element contains the specified attribute"
^%zewd("documentation","DOM","method","hasAttribute","returnValue")="Returns the literal string value ""true"" if the element contains the attribute, otherwise returns ""false"""
^%zewd("documentation","DOM","method","hasAttributes","call")="s has=$$hasAttributes^%zewdDOM(elementOID)"
^%zewd("documentation","DOM","method","hasAttributes","params",1,"desc")="The OID of the element node"
^%zewd("documentation","DOM","method","hasAttributes","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","hasAttributes","params",1,"name")="elementOID"
^%zewd("documentation","DOM","method","hasAttributes","purpose")="Returns ""true"" if the specified element contains one or more attributes"
^%zewd("documentation","DOM","method","hasAttributes","returnValue")="Returns the literal string value ""true"" if the element contains any attributes, otherwise returns ""false"""
^%zewd("documentation","DOM","method","hasChildNodes","call")="s has=$$hasChildNodes^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","hasChildNodes","params",1,"desc")="The OID of the parent node"
^%zewd("documentation","DOM","method","hasChildNodes","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","hasChildNodes","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","hasChildNodes","purpose")="Returns ""true"" if the specified node has one or more child nodes"
^%zewd("documentation","DOM","method","hasChildNodes","returnValue")="Returns the literal string value ""true"" if the node has any child nodes, otherwise returns ""false"""
^%zewd("documentation","DOM","method","importNode","call")="s toNodeOID=$$importNode^%zewdDOM(fromNodeOID,deep,toDocOID)"
^%zewd("documentation","DOM","method","importNode","params",1,"desc")="The node to be imported.  If a sub-tree is being copied, specify the top node."
^%zewd("documentation","DOM","method","importNode","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","importNode","params",1,"name")="fromNodeOID"
^%zewd("documentation","DOM","method","importNode","params",2,"desc")="If a value of ""true"" is specified, then the entire sub-tree under the specified ""fromNode"" will be copied."_$C(10)_"If any other value is specified, only the specified ""fromNode"" will be copied."
^%zewd("documentation","DOM","method","importNode","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","importNode","params",2,"name")="deep"
^%zewd("documentation","DOM","method","importNode","params",3,"desc")="The OID of the DOM into which the node/subtree will be copied"
^%zewd("documentation","DOM","method","importNode","params",3,"mandatory")="1"
^%zewd("documentation","DOM","method","importNode","params",3,"name")="toDocOID"
^%zewd("documentation","DOM","method","importNode","purpose")="Copies a DOM node and, optionally the sub-tree underneath it, from one DOM to another. Thetop copied node is left unattached to any other node in the DOM into which it was copied."
^%zewd("documentation","DOM","method","importNode","returnValue")="The OID of the copied node within the DOM to which it has been imported."
^%zewd("documentation","DOM","method","insertBefore","call")="s nodeOID=$$insertBefore^%zewdDOM(newOID,nextSiblingOID)"
^%zewd("documentation","DOM","method","insertBefore","params",1,"desc")="The OID of the element that is to be inserted"
^%zewd("documentation","DOM","method","insertBefore","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","insertBefore","params",1,"name")="newOID"
^%zewd("documentation","DOM","method","insertBefore","params",2,"desc")="The OID of the node before which the new node is to be attached"
^%zewd("documentation","DOM","method","insertBefore","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","insertBefore","params",2,"name")="parentOID"
^%zewd("documentation","DOM","method","insertBefore","purpose")="Attaches an element node as the previous sibling of a specified node.  The node"_$C(10)_"to be attached must exist within the DOM tree but must be currently"_$C(10)_"un-attached to any other node."
^%zewd("documentation","DOM","method","insertBefore","returnValue")="The OID of the newly attached node, or an error string"
^%zewd("documentation","DOM","method","insertNewFirstChildElement","call")="s nodeOID=$$insertNewFirstChildElement^%zewdDOM(parentOID,tagName,docOID)"
^%zewd("documentation","DOM","method","insertNewFirstChildElement","params",1,"desc")="The OID of the parent Element"
^%zewd("documentation","DOM","method","insertNewFirstChildElement","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","insertNewFirstChildElement","params",1,"name")="parentOID"
^%zewd("documentation","DOM","method","insertNewFirstChildElement","params",2,"desc")="The Tag Name of the new Element to be created"
^%zewd("documentation","DOM","method","insertNewFirstChildElement","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","insertNewFirstChildElement","params",2,"name")="tagName"
^%zewd("documentation","DOM","method","insertNewFirstChildElement","params",3,"desc")="The OID of the DOM"
^%zewd("documentation","DOM","method","insertNewFirstChildElement","params",3,"mandatory")="1"
^%zewd("documentation","DOM","method","insertNewFirstChildElement","params",3,"name")="docOID"
^%zewd("documentation","DOM","method","insertNewFirstChildElement","purpose")="Creates a new Element node with the specified tag name and attaches it as the first child of"_$C(10)_"the specified parent Element."
^%zewd("documentation","DOM","method","insertNewFirstChildElement","returnValue")="The OID of the newly created Element"
^%zewd("documentation","DOM","method","insertNewIntermediateElement","call")="s nodeOID=$$insertNewIntermediateElement^%zewdDOM(parentOID,tagName,docOID)"
^%zewd("documentation","DOM","method","insertNewIntermediateElement","params",1,"desc")="The OID of the parent Element"
^%zewd("documentation","DOM","method","insertNewIntermediateElement","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","insertNewIntermediateElement","params",1,"name")="parentOID"
^%zewd("documentation","DOM","method","insertNewIntermediateElement","params",2,"desc")="The Tag Name of the new Element to be created"
^%zewd("documentation","DOM","method","insertNewIntermediateElement","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","insertNewIntermediateElement","params",2,"name")="tagName"
^%zewd("documentation","DOM","method","insertNewIntermediateElement","params",3,"desc")="The OID of the DOM"
^%zewd("documentation","DOM","method","insertNewIntermediateElement","params",3,"mandatory")="1"
^%zewd("documentation","DOM","method","insertNewIntermediateElement","params",3,"name")="docOID"
^%zewd("documentation","DOM","method","insertNewIntermediateElement","purpose")="Creates a new Element node with the specified tag name and attaches it as the first and only child of"_$C(10)_"the specified parent Element.  Any child nodes of the parent are moved to become child nodes of"_$C(10)_"the newly created node."
^%zewd("documentation","DOM","method","insertNewIntermediateElement","returnValue")="The OID of the newly created Element"
^%zewd("documentation","DOM","method","javascriptFunctionExists","call")="s exists=$$javascriptFunctionExists^%zewdDOM(functionName,docName)"
^%zewd("documentation","DOM","method","javascriptFunctionExists","params",1,"desc")="The name of the Javascript function. Eg if you have a function declared as:"_$C(10)_" function myFunc() {"_$C(10)_"  ...."_$C(10)_" }"_$C(10)_"then the function name would be ""myFunc"""
^%zewd("documentation","DOM","method","javascriptFunctionExists","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","javascriptFunctionExists","params",1,"name")="functionName"
^%zewd("documentation","DOM","method","javascriptFunctionExists","params",2,"desc")="The name of the EWD Page DOM containing the function"
^%zewd("documentation","DOM","method","javascriptFunctionExists","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","javascriptFunctionExists","params",2,"name")="docName"
^%zewd("documentation","DOM","method","javascriptFunctionExists","purpose")="Determines whether or not the specified Javascript function exists in the EWD page DOM"
^%zewd("documentation","DOM","method","javascriptFunctionExists","returnValue")="1 = the function exists; "_$C(10)_"0 = the function does not exist"
^%zewd("documentation","DOM","method","javascriptObjectExists","call")="s exists=$$javascriptObjectExists^%zewdDOM(objectName,docName)"
^%zewd("documentation","DOM","method","javascriptObjectExists","params",1,"desc")="The name of the Javascript object. Eg if you have an object declared as: myObj.myFunc = function(objid) {"_$C(10)_" var obj=document.getElementById(objid) ;"_$C(10)_" obj.className = ""popupOn"" ;"_$C(10)_" grabbed = false ;"_$C(10)_" }"_$C(10)_"then you would be able to determine that the declaration exists if you specify the objectName as ""myObj.myFunc"""
^%zewd("documentation","DOM","method","javascriptObjectExists","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","javascriptObjectExists","params",1,"name")="objectName"
^%zewd("documentation","DOM","method","javascriptObjectExists","params",2,"desc")="The name of the EWD Page DOM containing the function"
^%zewd("documentation","DOM","method","javascriptObjectExists","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","javascriptObjectExists","params",2,"name")="docName"
^%zewd("documentation","DOM","method","javascriptObjectExists","purpose")="Determines whether or not the specified Javascript Object declaration exists in the EWD page DOM"
^%zewd("documentation","DOM","method","javascriptObjectExists","returnValue")="1 = the Object declaration exists; "_$C(10)_"0 = the Object declaration does not exist"
^%zewd("documentation","DOM","method","modifyTextData","call")="s nodeOID=$$modifyTextData^%zewdDOM(newText,elementOID)"
^%zewd("documentation","DOM","method","modifyTextData","params",1,"desc")="String value containing the new text"
^%zewd("documentation","DOM","method","modifyTextData","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","modifyTextData","params",1,"name")="newText"
^%zewd("documentation","DOM","method","modifyTextData","params",2,"desc")="The OID of the Element whose text is to be modified"
^%zewd("documentation","DOM","method","modifyTextData","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","modifyTextData","params",2,"name")="elementOID"
^%zewd("documentation","DOM","method","modifyTextData","purpose")="Modifies the text inside an Element tag."
^%zewd("documentation","DOM","method","modifyTextData","returnValue")="The OID of the Element"
^%zewd("documentation","DOM","method","newXMLDocument","call")="s docOID=$$newXMLDocument^%zewdDOM(docName,outerTag,hasProcIns)"_$C(10)_"For example if the following call was made:"_$C(10)_"s docOID=$$newXMLDocument^%zewdDOM(""myDOM"",""hello"",1)"_$C(10)_"The following document will be created:"_$C(10)_"&lt;?xml version='1.0' encoding='UTF-8'?&gt;"_$C(10)_"&lt;hello /&gt;"
^%zewd("documentation","DOM","method","newXMLDocument","params",1,"desc")="The Name to assign to the new DOM (any DOM with this name is deleted)"
^%zewd("documentation","DOM","method","newXMLDocument","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","newXMLDocument","params",1,"name")="docName"
^%zewd("documentation","DOM","method","newXMLDocument","params",2,"desc")="If set to 1, a standard XML Processing instruction is added to the top of the DOM"
^%zewd("documentation","DOM","method","newXMLDocument","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","newXMLDocument","params",2,"name")="hasProcIns"
^%zewd("documentation","DOM","method","newXMLDocument","purpose")="Creates a new EWD XML DOM"
^%zewd("documentation","DOM","method","newXMLDocument","returnValue")="The OID of the new DOM"
^%zewd("documentation","DOM","method","nodeExists","call")="s exists=$$nodeExists^%zewdDOM(nodeOID)"
^%zewd("documentation","DOM","method","nodeExists","params",1,"desc")="The OID of the node to be checked"
^%zewd("documentation","DOM","method","nodeExists","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","nodeExists","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","nodeExists","purpose")="Returns 1 if the specified node exists in an EWD DOM"
^%zewd("documentation","DOM","method","nodeExists","returnValue")="Returns 1 if the node exists."_$C(10)_"Returns ""0~DOM does not exist"" if the DOM is non-existent"_$C(10)_"Returns ""0~Node does not exist"" if the DOM exists but does not contain the specified node OID"
^%zewd("documentation","DOM","method","outputDOM","call")="s ok=$$outputDOM^%zewdDOM(docName,escape,format,outputLocation,msgLength,outputRef)"
^%zewd("documentation","DOM","method","outputDOM","params",1,"desc")="The Document Name or Document OID of the DOM to be output as XML"
^%zewd("documentation","DOM","method","outputDOM","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","outputDOM","params",1,"name")="docName"
^%zewd("documentation","DOM","method","outputDOM","params",2,"desc")="If set to 1, any entities are escaped.  1 is recommended"
^%zewd("documentation","DOM","method","outputDOM","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","outputDOM","params",2,"name")="escape"
^%zewd("documentation","DOM","method","outputDOM","params",3,"desc")="0 = no whitespace is added between tags1 = a line break is added between tags"_$C(10)_"2 = a line break is added and the tags are indented according to the tree hierarchy"
^%zewd("documentation","DOM","method","outputDOM","params",3,"mandatory")="1"
^%zewd("documentation","DOM","method","outputDOM","params",3,"name")="format"
^%zewd("documentation","DOM","method","outputDOM","params",4,"desc")="By default the XML is output to the current device.  However you can specify output"_$C(10)_"to a file, global or local array using this parameter:"_$C(10)_"""file"" = output to a file"_$C(10)_"79     = output to global or local array"
^%zewd("documentation","DOM","method","outputDOM","params",4,"name")="outputLocation"
^%zewd("documentation","DOM","method","outputDOM","params",5,"desc")="Not used"
^%zewd("documentation","DOM","method","outputDOM","params",5,"name")="msgLength"
^%zewd("documentation","DOM","method","outputDOM","params",6,"desc")="If outputLocation is specified, this parameter determines the filename or global/local array name"_$C(10)_"to which the XML will be directed, eg:"_$C(10)_"""d:\myFiles\myXMLFile.xml"""_$C(10)_"""^myXMLDOcument($j)"""_$C(10)_"If a global or local array is specified, the structure of the global/array that is created is:"_$C(10)_"@gloRef@(lineNo) = line of XML"
^%zewd("documentation","DOM","method","outputDOM","params",6,"name")="outputRef"
^%zewd("documentation","DOM","method","outputDOM","purpose")="Outputs the DOM as an XML document. The most frequent use is when debugging and examining"_$C(10)_"an EWD DOM, for which the call is:"_$C(10)_"s ok=$$outputDOM^%zewdDOM(docName,1,2)"
^%zewd("documentation","DOM","method","outputDOM","returnValue")="Returns null ("""")"
^%zewd("documentation","DOM","method","removeAttribute","call")="d removeAttribute^%zewdDOM(attrName,elementOID,deleteFromDOM)"
^%zewd("documentation","DOM","method","removeAttribute","params",1,"desc")="The name of the attribute to be removed"
^%zewd("documentation","DOM","method","removeAttribute","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","removeAttribute","params",1,"name")="attrName"
^%zewd("documentation","DOM","method","removeAttribute","params",2,"desc")="The OID of the Element from which the attribute is to be removed"
^%zewd("documentation","DOM","method","removeAttribute","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","removeAttribute","params",2,"name")="elementOID"
^%zewd("documentation","DOM","method","removeAttribute","params",3,"desc")="If set to 1, the attribute node is permanently removed from the DOM."_$C(10)_"If set to 0, the attribute node is disconnected from the Element, but left within the DOM tree"
^%zewd("documentation","DOM","method","removeAttribute","params",3,"name")="deleteFromDOM"
^%zewd("documentation","DOM","method","removeAttribute","purpose")="Removes a named attribute from a specified Element"
^%zewd("documentation","DOM","method","removeAttribute","returnValue")=""
^%zewd("documentation","DOM","method","removeChild","call")="s nodeOID=$$removeChild^%zewdDOM(nodeOID,deleteFromDOM)"
^%zewd("documentation","DOM","method","removeChild","params",1,"desc")="The OID of the node to be removed"
^%zewd("documentation","DOM","method","removeChild","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","removeChild","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","removeChild","params",2,"desc")="If set to 1, the node and any descendent nodes are permanently removed from the DOM.If set to 0, the node (and any descendents) is disconnected from its parent, but left within the DOM tree"
^%zewd("documentation","DOM","method","removeChild","params",2,"name")="deleteFromDOM"
^%zewd("documentation","DOM","method","removeChild","purpose")="Removes a specified node from the document"
^%zewd("documentation","DOM","method","removeChild","returnValue")="The OID of the removed node"
^%zewd("documentation","DOM","method","removeDocument","call")="s docName=$$removeDocument^%zewdDOM(docName)"
^%zewd("documentation","DOM","method","removeDocument","params",1,"desc")="The name of the DOM to be deleted"
^%zewd("documentation","DOM","method","removeDocument","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","removeDocument","params",1,"name")="docName"
^%zewd("documentation","DOM","method","removeDocument","purpose")="Deletes an EWD DOM"
^%zewd("documentation","DOM","method","removeDocument","returnValue")="The name of the document"
^%zewd("documentation","DOM","method","removeIntermediateNode","call")="s nodeOID=$$removeIntermediateNode^%zewdDOM(nodeOID,deleteFromDOM)"
^%zewd("documentation","DOM","method","removeIntermediateNode","params",1,"desc")="The OID of the node to be removed"
^%zewd("documentation","DOM","method","removeIntermediateNode","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","removeIntermediateNode","params",1,"name")="nodeOID"
^%zewd("documentation","DOM","method","removeIntermediateNode","params",2,"desc")="If set to 1, the node is permanently removed from the DOM."_$C(10)_"If set to 0, the node is disconnected from its parent, but left within the DOM tree"
^%zewd("documentation","DOM","method","removeIntermediateNode","params",2,"name")="deleteFromDOM"
^%zewd("documentation","DOM","method","removeIntermediateNode","purpose")="Removes a specified node from the DOM, but any child nodes belonging to the deleted node are moved up"_$C(10)_"the tree hierarchy to replace the deleted node."
^%zewd("documentation","DOM","method","removeIntermediateNode","returnValue")="The OID of the deleted node"
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","call")="s exists=$$replaceJavascriptFunctionBody^%zewdDOM(functionName,jsText,docName)"
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","params",1,"desc")="The name of the Javascript function to be replaced."
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","params",1,"name")="functionName"
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","params",2,"desc")="Text string containing the new lines of Javascript.  Line breaks should be denoted using $c(13,10)"
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","params",2,"name")="jsText"
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","params",3,"desc")="The name of the EWD Page DOM containing the function"
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","params",3,"mandatory")="1"
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","params",3,"name")="docName"
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","purpose")="Finds a specified Javascript function in the EWD page DOM and replaces its contents."_$C(10)_"The new function body content is held in a single text variable with line breaks denoted by CRLF [$c(13,10)] characters"_$C(10)_"Note that this function performs a complete body replacement: the original contents of the JavaScript function will be discarded"_$C(10)_"For example:"_$C(10)_"Set newBody="" alert('testing') ;"""_$C(10)_"set newBody=newBody_$c(13,10)_"" var x = 123 ;"""_$C(10)_"set ok=$$replaceJavascriptFunctionBody^%zewdDOM('myFunc',newBody,docName)"_$C(10)_"This would result in:"_$C(10)_"function myFunc(a,b) {"_$C(10)_"alert('testing') ;"_$C(10)_"var x = 123 ;"_$C(10)_"Note that the function declaration and any inputs are left unchanged."
^%zewd("documentation","DOM","method","replaceJavascriptFunctionBody","returnValue")="1 = successful function substitution"
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","call")="s exists=$$replaceJavascriptObjectBody^%zewdDOM(objectName,jsText,docName)"
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","params",1,"desc")="The name of the Javascript object whose definition is be replaced."
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","params",1,"name")="objectName"
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","params",2,"desc")="Text string containing the new lines of Javascript.  Line breaks should be denoted using $c(13,10)"
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","params",2,"name")="jsText"
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","params",3,"desc")="The name of the EWD Page DOM containing the object"
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","params",3,"mandatory")="1"
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","params",3,"name")="docName"
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","purpose")="Finds a specified Javascript object declaration in the EWD page DOM and replaces its contents.The new object declaration body content is held in a single text variable with line breaks denoted by CRLF [$c(13,10)] characters."_$C(10)_"Note that this function performs a complete body replacement - the original contents of the JavaScript object declaration will be discarded"_$C(10)_"For example:"_$C(10)_"set newBody="" alert('testing') ;"""_$C(10)_"set newBody=newBody_$c(13,10)_"" var x = 123 ;"""_$C(10)_"set ok=$$replaceJavascriptObjectBody^%zewdAPI('myObj.myFunc',newBody,docName)"_$C(10)_"This would result in:"_$C(10)_"myObj.myFunc = function(objid) {"_$C(10)_"alert('testing') ;"_$C(10)_"var x = 123 ;"_$C(10)_"}"_$C(10)_"Note that the object declaration wrapper and any inputs are left unchanged."
^%zewd("documentation","DOM","method","replaceJavascriptObjectBody","returnValue")="1 = successful object substitution"
^%zewd("documentation","DOM","method","setAttribute","call")="d setAttribute^%zewdDOM(attrName,attrValue,elementOID)"
^%zewd("documentation","DOM","method","setAttribute","params",1,"desc")="The name of the attribute to be added to the Element"
^%zewd("documentation","DOM","method","setAttribute","params",1,"mandatory")="1"
^%zewd("documentation","DOM","method","setAttribute","params",1,"name")="attrName"
^%zewd("documentation","DOM","method","setAttribute","params",2,"desc")="The value of the attribute to be added to the Element"
^%zewd("documentation","DOM","method","setAttribute","params",2,"mandatory")="1"
^%zewd("documentation","DOM","method","setAttribute","params",2,"name")="attrValue"
^%zewd("documentation","DOM","method","setAttribute","params",3,"desc")="The OID of the Element to which the attribute is being added"
^%zewd("documentation","DOM","method","setAttribute","params",3,"mandatory")="1"
^%zewd("documentation","DOM","method","setAttribute","params",3,"name")="elementOID"
^%zewd("documentation","DOM","method","setAttribute","purpose")="Adds an attribute to an Element node"
^%zewd("documentation","DOM","method","setAttribute","returnValue")=""
^%zewd("nextSessid")="1332"
^%zewd("relink")="1"
^%zewd("relink","process",1452)=""
^%zewd("relink","process",1469)=""
^%zewd("relink","process",1487)=""
^%zewd("relink","process",1504)=""
^%zewd("relink","process",1681)=""
^%zewd("relink","process",1698)=""
^%zewd("relink","process",1716)=""
^%zewd("relink","process",1733)=""
^%zewd("relink","process",1750)=""
^%zewd("relink","process",1764)=""
^%zewd("relink","process",1766)=""
^%zewd("relink","process",1781)=""
^%zewd("relink","process",1785)=""
^%zewd("relink","process",1807)=""
^%zewd("relink","process",1835)=""
^%zewd("relink","process",1859)=""
^%zewd("relink","process",1879)=""
^%zewd("relink","process",1887)=""
^%zewd("relink","process",1893)=""
^%zewd("relink","process",1926)=""
^%zewd("relink","process",2089)=""
^%zewd("relink","process",2117)=""
^%zewd("relink","process",2146)=""
^%zewd("relink","process",2161)=""
^%zewd("relink","process",2225)=""
^%zewd("relink","process",2240)=""
^%zewd("relink","process",2263)=""
^%zewd("relink","process",2278)=""
^%zewd("relink","process",2294)=""
^%zewd("relink","process",2390)=""
^%zewd("relink","process",2614)=""
^%zewd("relink","process",2615)=""
^%zewd("relink","process",29732)=""
^%zewd("relink","process",29915)=""
^%zewd("relink","process",30538)=""
^%zewd("relink","process",30672)=""
^%zewd("relink","process",30696)=""
^%zewd("relink","process",30748)=""
^%zewd("relink","process",30773)=""
^%zewd("relink","process",30850)=""
^%zewd("relink","process",30889)=""
^%zewd("relink","process",30904)=""
^%zewd("relink","process",30945)=""
^%zewd("relink","process",30988)=""
^%zewd("relink","process",31013)=""
^%zewd("relink","process",31038)=""
^%zewd("relink","process",31053)=""
^%zewd("relink","process",31126)=""
^%zewd("relink","process",31163)=""
^%zewd("relink","process",31178)=""
^%zewd("relink","process",31230)=""
^%zewd("relink","process",31488)=""
^%zewd("relink","process",31504)=""
^%zewd("relink","process",31525)=""
^%zewd("relink","process",31575)=""
^%zewd("relink","process",31590)=""
^%zewd("relink","process",31612)=""
^%zewd("relink","process",31631)=""
^%zewd("relink","process",31660)=""
^%zewd("relink","process",31675)=""
^%zewd("version")=" 894"
