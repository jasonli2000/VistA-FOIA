^XTMP
ZWR
^XTMP("DG53661",0)="3110502^3101103^CLEAN UP INVALID MEANS TEST/COPAY TEST LINKS"
^XTMP("DG53661","PARAMS")="^537^501^DONE"
^XTMP("DG53661","RUNNING",3101103.114143)="3101103.114143"
^XTMP("DG53661","RUNNING",3101103.114143,407451)=""
^XTMP("HLUCM 3101201",0)="3101208^3101201.101928^HLUCM Data"
^XTMP("HLUCM 3101201","N",1)="3101130^3101130.99^EITHER^CM2"
^XTMP("HLUCM 3101201","P",3101130,3101130.99,"EITHER")="1^3101201.101928"
^XTMP("HLUOPT1 3101118.085732",0)="3101202.085732^3101118.085732^10000000182^HLUOPT1 Purging"
^XTMP("HLUOPT1 3101118.085732","RUN")="408271^3101118.085732^3101118.085732^3101118.085732^FINISHED^DONE^20^2^1^^2209400^9^18723^1^3101111.090034^"
^XTMP("HLUOPT1 3101122.122127",0)="3101206.122127^3101122.122127^10000000182^HLUOPT1 Purging"
^XTMP("HLUOPT1 3101122.122127","RUN")="408321^3101122.122127^3101122.122127^3101122.122127^FINISHED^DONE^14^6^1^^2209401^4^18723^1^3101115.090038^"
^XTMP("HLUOPT1 3101201.101935",0)="3101215.101935^3101201.101935^10000000182^HLUOPT1 Purging"
^XTMP("HLUOPT1 3101201.101935","RUN")="408394^3101201.101935^3101201.101935^3101201.101935^FINISHED^DONE^7^3^1^^2209402^2^18723^1^3101118.090006^"
^XTMP("LREPIREP3100615.010206",0)="3101212^3100615^EPI Verification Report^.5"
^XTMP("LREPIREP3100615.010206",1,"HDG",1)="NTE~1-Report of Vancomycin-resistant Enterococcus"
^XTMP("LREPIREP3100615.010206",1,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",1,"HDG",3)="result for Vancomycin-resistant Enterococcus.  Identifying information, along "
^XTMP("LREPIREP3100615.010206",1,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",2,"HDG",1)="NTE~2 Report of Hepatitis C antibody positive"
^XTMP("LREPIREP3100615.010206",2,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100615.010206",2,"HDG",3)="positive test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3100615.010206",2,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100615.010206",2,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100615.010206",3,"HDG",1)="NTE~3-Report of Pencillin-resistant Streptococcus pneumoniae"
^XTMP("LREPIREP3100615.010206",3,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",3,"HDG",3)="result for Penicillin-resistant Streptococcus pneumoniae.  Identifying"
^XTMP("LREPIREP3100615.010206",3,"HDG",4)=" information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",4,"HDG",1)="NTE~4-Report of Clostridium difficile"
^XTMP("LREPIREP3100615.010206",4,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",4,"HDG",3)="result for Clostridium difficile.  Identifying information, along "
^XTMP("LREPIREP3100615.010206",4,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",5,"HDG",1)="NTE~5-Report of Tuberculosis"
^XTMP("LREPIREP3100615.010206",5,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",5,"HDG",3)="result for Mycobacterium tuberculosis.  Identifying information, along "
^XTMP("LREPIREP3100615.010206",5,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",6,"HDG",1)="NTE~6-Report of Group A Streptococcus"
^XTMP("LREPIREP3100615.010206",6,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",6,"HDG",3)="result for Group A Streptococcus.  Identifying information, along "
^XTMP("LREPIREP3100615.010206",6,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",7,"HDG",1)="NTE~7- Report of Legionella/Legionaire's"
^XTMP("LREPIREP3100615.010206",7,"HDG",2)="These data note persons at your facility during the month who had an EITHER an"
^XTMP("LREPIREP3100615.010206",7,"HDG",3)="ICD-9 coded diagnosis for Legionella/Legionaire's disease OR a positive"
^XTMP("LREPIREP3100615.010206",7,"HDG",4)="culture result.  Identifying information, along with specimen and culture"
^XTMP("LREPIREP3100615.010206",7,"HDG",5)="results have been provided."
^XTMP("LREPIREP3100615.010206",8,"HDG",1)="NTE~8-Report of Candida bloodstream infections"
^XTMP("LREPIREP3100615.010206",8,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",8,"HDG",3)="result for Candida (or other yeast) bloodstream infections.  Identifying"
^XTMP("LREPIREP3100615.010206",8,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",9,"HDG",1)="NTE~9-Report of Cryptosporidium"
^XTMP("LREPIREP3100615.010206",9,"HDG",2)="These data note persons at your facility during the month who had EITHER an"
^XTMP("LREPIREP3100615.010206",9,"HDG",3)="ICD-9 coded diagnosis for Cryptosporidium OR a positive culture result."
^XTMP("LREPIREP3100615.010206",9,"HDG",4)="Identifying information, along with specimen and culture results have been"
^XTMP("LREPIREP3100615.010206",9,"HDG",5)="provided."
^XTMP("LREPIREP3100615.010206",10,"HDG",1)="NTE~10-Report of Escherichia coli O157"
^XTMP("LREPIREP3100615.010206",10,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",10,"HDG",3)="result for Escherichia coli serotype O157.  Identifying information, along "
^XTMP("LREPIREP3100615.010206",10,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",11,"HDG",1)="NTE~11-Report of Malaria"
^XTMP("LREPIREP3100615.010206",11,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100615.010206",11,"HDG",3)="coded diagnosis for malaria.  Identifying information has been provided."
^XTMP("LREPIREP3100615.010206",12,"HDG",1)="NTE~12-Report of Dengue"
^XTMP("LREPIREP3100615.010206",12,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100615.010206",12,"HDG",3)="coded diagnosis for dengue.  Identifying information has been provided."
^XTMP("LREPIREP3100615.010206",13,"HDG",1)="NTE~13-Report of Creutzfeldt-Jakob Disease"
^XTMP("LREPIREP3100615.010206",13,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100615.010206",13,"HDG",3)="coded diagnosis for Creutzfeldt-Jakob disease.  Identifying information has been provided."
^XTMP("LREPIREP3100615.010206",14,"HDG",1)="NTE~14-Report of Leishmaniasis"
^XTMP("LREPIREP3100615.010206",14,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100615.010206",14,"HDG",3)="coded diagnosis for Leishmania.  Identifying information has been provided."
^XTMP("LREPIREP3100615.010206",15,"HDG",1)="NTE~15 Report of Hepatitis C antibody negative"
^XTMP("LREPIREP3100615.010206",15,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100615.010206",15,"HDG",3)="negative test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3100615.010206",15,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100615.010206",15,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100615.010206",16,"HDG",1)="NTE~16 Report of Hepatitis A antibody positive"
^XTMP("LREPIREP3100615.010206",16,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100615.010206",16,"HDG",3)="positive test for hepatitis A antibody (based on accession date and not"
^XTMP("LREPIREP3100615.010206",16,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100615.010206",16,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100615.010206",17,"HDG",1)="NTE~17 Report of Hepatitis B positive"
^XTMP("LREPIREP3100615.010206",17,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100615.010206",17,"HDG",3)="positive test for hepatitis B (based on accession date and not results"
^XTMP("LREPIREP3100615.010206",17,"HDG",4)="reported date).  Definitions for data to be extracted are provided in"
^XTMP("LREPIREP3100615.010206",17,"HDG",5)="Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100615.010206",18,"HDG",1)="NTE~18-Report of All Staphylococcus aureus"
^XTMP("LREPIREP3100615.010206",18,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",18,"HDG",3)="result for all Staphylococcus aureus.  Identifying information, along "
^XTMP("LREPIREP3100615.010206",18,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",19,"HDG",1)="NTE~19-Report of methicillin-resistant Staphylococcus"
^XTMP("LREPIREP3100615.010206",19,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",19,"HDG",3)="result for methicillin-resistant Staphylococcus aureus.  Identifying"
^XTMP("LREPIREP3100615.010206",19,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",20,"HDG",1)="NTE~20-Vancomycin-resistant Staphylococcus aureus"
^XTMP("LREPIREP3100615.010206",20,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",20,"HDG",3)="result for Vancomycin-resistant Staphylococcus aureus.  Identifying information,"
^XTMP("LREPIREP3100615.010206",20,"HDG",4)="along with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",21,"HDG",1)="NTE~21-Vancomycin-resistant coagulase negative Staphylococcus"
^XTMP("LREPIREP3100615.010206",21,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",21,"HDG",3)="result for Vancomycin-resistant coagulase negative staphylococcus.  Identifying"
^XTMP("LREPIREP3100615.010206",21,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",22,"HDG",1)="NTE~22-All Streptococcus pneumoniae"
^XTMP("LREPIREP3100615.010206",22,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",22,"HDG",3)="result for all Streptococcus pneumoniae.  Identifying information, along "
^XTMP("LREPIREP3100615.010206",22,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206",23,"HDG",1)="NTE~23- All Enterococci"
^XTMP("LREPIREP3100615.010206",23,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010206",23,"HDG",3)="result for all Enterococci.  Identifying information, along "
^XTMP("LREPIREP3100615.010206",23,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010206","DONE")="1"
^XTMP("LREPIREP3100615.010206","FOOTNOTE",1)="Initally, only inpatient cases will be captured; however, eventually it is"
^XTMP("LREPIREP3100615.010206","FOOTNOTE",2)="anticiapted that this will include outpatient cases also."
^XTMP("LREPIREP3100615.010206","HDG",1)="               DETAILED VERIFICATION REPORT OF EPI EXTRACTED DATA"
^XTMP("LREPIREP3100615.010206","HDG",2)="                          FROM STATION 500 CAMP MASTER"
^XTMP("LREPIREP3100615.010206","HDG",3)="               PROCESSING PERIOD: 05-01-2010  through 05-31-2010"
^XTMP("LREPIREP3100615.010206","HEPCHDG",1)="Detailed Listing of Hepatitis C Risk Assessment"
^XTMP("LREPIREP3100615.010206","HEPCHDG",2)="These Health factors/Resolved terms for hepatitis C risk assessment are the"
^XTMP("LREPIREP3100615.010206","HEPCHDG",3)="national Health factors used for roll-up of risk assessment data.  They may not"
^XTMP("LREPIREP3100615.010206","HEPCHDG",4)="reflect the terms actually utilized (seen) in the Clinical Reminder package at"
^XTMP("LREPIREP3100615.010206","HEPCHDG",5)="this facility.  To determine which local/facility Clinical Reminder health"
^XTMP("LREPIREP3100615.010206","HEPCHDG",6)="factor(s) correspond(s) to the national term, please contact your facility"
^XTMP("LREPIREP3100615.010206","HEPCHDG",7)="Clinical Reminder application coordinator.  Note that hepatitis C infection"
^XTMP("LREPIREP3100615.010206","HEPCHDG",8)="is based on a previously ICD-9 coded diagnosis of hepatitis C at your site/"
^XTMP("LREPIREP3100615.010206","HEPCHDG",9)="facility."
^XTMP("LREPIREP3100615.010206","PHHDG",1)="Pharmacy-based data extracted for EPI data base."
^XTMP("LREPIREP3100615.010206","TOTAL",1)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",2)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",3)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",4)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",5)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",6)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",7)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",8)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",9)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",10)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",11)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",12)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",13)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",14)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",15)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",16)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",17)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",18)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",19)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",20)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",21)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",22)="0^0"
^XTMP("LREPIREP3100615.010206","TOTAL",23)="0^0"
^XTMP("LREPIREP3100615.010206","UPDHDG",1)="UPDATES"
^XTMP("LREPIREP3100615.010206","UPDHDG",2)="This section presents patients who had a transmission of information during a"
^XTMP("LREPIREP3100615.010206","UPDHDG",3)="month on an EPI defined topic that was incomplete.  These patients have"
^XTMP("LREPIREP3100615.010206","UPDHDG",4)="information that has been transmitted during the current processing month in"
^XTMP("LREPIREP3100615.010206","UPDHDG",5)="order to complete the EPI files.  This information usually contains inpatient"
^XTMP("LREPIREP3100615.010206","UPDHDG",6)="information about discharge date, ICD-9 coded diagnoses and occasionally will"
^XTMP("LREPIREP3100615.010206","UPDHDG",7)="contain laboratory based testing.  This line listing of patient, SSN, and"
^XTMP("LREPIREP3100615.010206","UPDHDG",8)="admission date and discharge date is provided to assist with analysis should"
^XTMP("LREPIREP3100615.010206","UPDHDG",9)="an processing/error report occur with your monthly automated transmission of"
^XTMP("LREPIREP3100615.010206","UPDHDG",10)="this data."
^XTMP("LREPIREP3100615.010207",0)="3101212^3100615^EPI Verification Report^.5"
^XTMP("LREPIREP3100615.010207",1,"HDG",1)="NTE~1-Report of Vancomycin-resistant Enterococcus"
^XTMP("LREPIREP3100615.010207",1,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",1,"HDG",3)="result for Vancomycin-resistant Enterococcus.  Identifying information, along "
^XTMP("LREPIREP3100615.010207",1,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",2,"HDG",1)="NTE~2 Report of Hepatitis C antibody positive"
^XTMP("LREPIREP3100615.010207",2,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100615.010207",2,"HDG",3)="positive test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3100615.010207",2,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100615.010207",2,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100615.010207",3,"HDG",1)="NTE~3-Report of Pencillin-resistant Streptococcus pneumoniae"
^XTMP("LREPIREP3100615.010207",3,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",3,"HDG",3)="result for Penicillin-resistant Streptococcus pneumoniae.  Identifying"
^XTMP("LREPIREP3100615.010207",3,"HDG",4)=" information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",4,"HDG",1)="NTE~4-Report of Clostridium difficile"
^XTMP("LREPIREP3100615.010207",4,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",4,"HDG",3)="result for Clostridium difficile.  Identifying information, along "
^XTMP("LREPIREP3100615.010207",4,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",5,"HDG",1)="NTE~5-Report of Tuberculosis"
^XTMP("LREPIREP3100615.010207",5,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",5,"HDG",3)="result for Mycobacterium tuberculosis.  Identifying information, along "
^XTMP("LREPIREP3100615.010207",5,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",6,"HDG",1)="NTE~6-Report of Group A Streptococcus"
^XTMP("LREPIREP3100615.010207",6,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",6,"HDG",3)="result for Group A Streptococcus.  Identifying information, along "
^XTMP("LREPIREP3100615.010207",6,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",7,"HDG",1)="NTE~7- Report of Legionella/Legionaire's"
^XTMP("LREPIREP3100615.010207",7,"HDG",2)="These data note persons at your facility during the month who had an EITHER an"
^XTMP("LREPIREP3100615.010207",7,"HDG",3)="ICD-9 coded diagnosis for Legionella/Legionaire's disease OR a positive"
^XTMP("LREPIREP3100615.010207",7,"HDG",4)="culture result.  Identifying information, along with specimen and culture"
^XTMP("LREPIREP3100615.010207",7,"HDG",5)="results have been provided."
^XTMP("LREPIREP3100615.010207",8,"HDG",1)="NTE~8-Report of Candida bloodstream infections"
^XTMP("LREPIREP3100615.010207",8,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",8,"HDG",3)="result for Candida (or other yeast) bloodstream infections.  Identifying"
^XTMP("LREPIREP3100615.010207",8,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",9,"HDG",1)="NTE~9-Report of Cryptosporidium"
^XTMP("LREPIREP3100615.010207",9,"HDG",2)="These data note persons at your facility during the month who had EITHER an"
^XTMP("LREPIREP3100615.010207",9,"HDG",3)="ICD-9 coded diagnosis for Cryptosporidium OR a positive culture result."
^XTMP("LREPIREP3100615.010207",9,"HDG",4)="Identifying information, along with specimen and culture results have been"
^XTMP("LREPIREP3100615.010207",9,"HDG",5)="provided."
^XTMP("LREPIREP3100615.010207",10,"HDG",1)="NTE~10-Report of Escherichia coli O157"
^XTMP("LREPIREP3100615.010207",10,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",10,"HDG",3)="result for Escherichia coli serotype O157.  Identifying information, along "
^XTMP("LREPIREP3100615.010207",10,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",11,"HDG",1)="NTE~11-Report of Malaria"
^XTMP("LREPIREP3100615.010207",11,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100615.010207",11,"HDG",3)="coded diagnosis for malaria.  Identifying information has been provided."
^XTMP("LREPIREP3100615.010207",12,"HDG",1)="NTE~12-Report of Dengue"
^XTMP("LREPIREP3100615.010207",12,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100615.010207",12,"HDG",3)="coded diagnosis for dengue.  Identifying information has been provided."
^XTMP("LREPIREP3100615.010207",13,"HDG",1)="NTE~13-Report of Creutzfeldt-Jakob Disease"
^XTMP("LREPIREP3100615.010207",13,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100615.010207",13,"HDG",3)="coded diagnosis for Creutzfeldt-Jakob disease.  Identifying information has been provided."
^XTMP("LREPIREP3100615.010207",14,"HDG",1)="NTE~14-Report of Leishmaniasis"
^XTMP("LREPIREP3100615.010207",14,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100615.010207",14,"HDG",3)="coded diagnosis for Leishmania.  Identifying information has been provided."
^XTMP("LREPIREP3100615.010207",15,"HDG",1)="NTE~15 Report of Hepatitis C antibody negative"
^XTMP("LREPIREP3100615.010207",15,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100615.010207",15,"HDG",3)="negative test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3100615.010207",15,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100615.010207",15,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100615.010207",16,"HDG",1)="NTE~16 Report of Hepatitis A antibody positive"
^XTMP("LREPIREP3100615.010207",16,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100615.010207",16,"HDG",3)="positive test for hepatitis A antibody (based on accession date and not"
^XTMP("LREPIREP3100615.010207",16,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100615.010207",16,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100615.010207",17,"HDG",1)="NTE~17 Report of Hepatitis B positive"
^XTMP("LREPIREP3100615.010207",17,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100615.010207",17,"HDG",3)="positive test for hepatitis B (based on accession date and not results"
^XTMP("LREPIREP3100615.010207",17,"HDG",4)="reported date).  Definitions for data to be extracted are provided in"
^XTMP("LREPIREP3100615.010207",17,"HDG",5)="Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100615.010207",18,"HDG",1)="NTE~18-Report of All Staphylococcus aureus"
^XTMP("LREPIREP3100615.010207",18,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",18,"HDG",3)="result for all Staphylococcus aureus.  Identifying information, along "
^XTMP("LREPIREP3100615.010207",18,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",19,"HDG",1)="NTE~19-Report of methicillin-resistant Staphylococcus"
^XTMP("LREPIREP3100615.010207",19,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",19,"HDG",3)="result for methicillin-resistant Staphylococcus aureus.  Identifying"
^XTMP("LREPIREP3100615.010207",19,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",20,"HDG",1)="NTE~20-Vancomycin-resistant Staphylococcus aureus"
^XTMP("LREPIREP3100615.010207",20,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",20,"HDG",3)="result for Vancomycin-resistant Staphylococcus aureus.  Identifying information,"
^XTMP("LREPIREP3100615.010207",20,"HDG",4)="along with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",21,"HDG",1)="NTE~21-Vancomycin-resistant coagulase negative Staphylococcus"
^XTMP("LREPIREP3100615.010207",21,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",21,"HDG",3)="result for Vancomycin-resistant coagulase negative staphylococcus.  Identifying"
^XTMP("LREPIREP3100615.010207",21,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",22,"HDG",1)="NTE~22-All Streptococcus pneumoniae"
^XTMP("LREPIREP3100615.010207",22,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",22,"HDG",3)="result for all Streptococcus pneumoniae.  Identifying information, along "
^XTMP("LREPIREP3100615.010207",22,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207",23,"HDG",1)="NTE~23- All Enterococci"
^XTMP("LREPIREP3100615.010207",23,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100615.010207",23,"HDG",3)="result for all Enterococci.  Identifying information, along "
^XTMP("LREPIREP3100615.010207",23,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100615.010207","DONE")="1"
^XTMP("LREPIREP3100615.010207","FOOTNOTE",1)="Initally, only inpatient cases will be captured; however, eventually it is"
^XTMP("LREPIREP3100615.010207","FOOTNOTE",2)="anticiapted that this will include outpatient cases also."
^XTMP("LREPIREP3100615.010207","HDG",1)="               DETAILED VERIFICATION REPORT OF EPI EXTRACTED DATA"
^XTMP("LREPIREP3100615.010207","HDG",2)="                          FROM STATION 500 CAMP MASTER"
^XTMP("LREPIREP3100615.010207","HDG",3)="               PROCESSING PERIOD: 05-01-2010  through 05-31-2010"
^XTMP("LREPIREP3100615.010207","HEPCHDG",1)="Detailed Listing of Hepatitis C Risk Assessment"
^XTMP("LREPIREP3100615.010207","HEPCHDG",2)="These Health factors/Resolved terms for hepatitis C risk assessment are the"
^XTMP("LREPIREP3100615.010207","HEPCHDG",3)="national Health factors used for roll-up of risk assessment data.  They may not"
^XTMP("LREPIREP3100615.010207","HEPCHDG",4)="reflect the terms actually utilized (seen) in the Clinical Reminder package at"
^XTMP("LREPIREP3100615.010207","HEPCHDG",5)="this facility.  To determine which local/facility Clinical Reminder health"
^XTMP("LREPIREP3100615.010207","HEPCHDG",6)="factor(s) correspond(s) to the national term, please contact your facility"
^XTMP("LREPIREP3100615.010207","HEPCHDG",7)="Clinical Reminder application coordinator.  Note that hepatitis C infection"
^XTMP("LREPIREP3100615.010207","HEPCHDG",8)="is based on a previously ICD-9 coded diagnosis of hepatitis C at your site/"
^XTMP("LREPIREP3100615.010207","HEPCHDG",9)="facility."
^XTMP("LREPIREP3100615.010207","PHHDG",1)="Pharmacy-based data extracted for EPI data base."
^XTMP("LREPIREP3100615.010207","TOTAL",1)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",2)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",3)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",4)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",5)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",6)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",7)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",8)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",9)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",10)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",11)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",12)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",13)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",14)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",15)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",16)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",17)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",18)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",19)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",20)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",21)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",22)="0^0"
^XTMP("LREPIREP3100615.010207","TOTAL",23)="0^0"
^XTMP("LREPIREP3100615.010207","UPDHDG",1)="UPDATES"
^XTMP("LREPIREP3100615.010207","UPDHDG",2)="This section presents patients who had a transmission of information during a"
^XTMP("LREPIREP3100615.010207","UPDHDG",3)="month on an EPI defined topic that was incomplete.  These patients have"
^XTMP("LREPIREP3100615.010207","UPDHDG",4)="information that has been transmitted during the current processing month in"
^XTMP("LREPIREP3100615.010207","UPDHDG",5)="order to complete the EPI files.  This information usually contains inpatient"
^XTMP("LREPIREP3100615.010207","UPDHDG",6)="information about discharge date, ICD-9 coded diagnoses and occasionally will"
^XTMP("LREPIREP3100615.010207","UPDHDG",7)="contain laboratory based testing.  This line listing of patient, SSN, and"
^XTMP("LREPIREP3100615.010207","UPDHDG",8)="admission date and discharge date is provided to assist with analysis should"
^XTMP("LREPIREP3100615.010207","UPDHDG",9)="an processing/error report occur with your monthly automated transmission of"
^XTMP("LREPIREP3100615.010207","UPDHDG",10)="this data."
^XTMP("LREPIREP3100715.010002",0)="3110111^3100715^EPI Verification Report^.5"
^XTMP("LREPIREP3100715.010002",1,"HDG",1)="NTE~1-Report of Vancomycin-resistant Enterococcus"
^XTMP("LREPIREP3100715.010002",1,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",1,"HDG",3)="result for Vancomycin-resistant Enterococcus.  Identifying information, along "
^XTMP("LREPIREP3100715.010002",1,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",2,"HDG",1)="NTE~2 Report of Hepatitis C antibody positive"
^XTMP("LREPIREP3100715.010002",2,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100715.010002",2,"HDG",3)="positive test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3100715.010002",2,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100715.010002",2,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100715.010002",3,"HDG",1)="NTE~3-Report of Pencillin-resistant Streptococcus pneumoniae"
^XTMP("LREPIREP3100715.010002",3,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",3,"HDG",3)="result for Penicillin-resistant Streptococcus pneumoniae.  Identifying"
^XTMP("LREPIREP3100715.010002",3,"HDG",4)=" information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",4,"HDG",1)="NTE~4-Report of Clostridium difficile"
^XTMP("LREPIREP3100715.010002",4,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",4,"HDG",3)="result for Clostridium difficile.  Identifying information, along "
^XTMP("LREPIREP3100715.010002",4,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",5,"HDG",1)="NTE~5-Report of Tuberculosis"
^XTMP("LREPIREP3100715.010002",5,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",5,"HDG",3)="result for Mycobacterium tuberculosis.  Identifying information, along "
^XTMP("LREPIREP3100715.010002",5,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",6,"HDG",1)="NTE~6-Report of Group A Streptococcus"
^XTMP("LREPIREP3100715.010002",6,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",6,"HDG",3)="result for Group A Streptococcus.  Identifying information, along "
^XTMP("LREPIREP3100715.010002",6,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",7,"HDG",1)="NTE~7- Report of Legionella/Legionaire's"
^XTMP("LREPIREP3100715.010002",7,"HDG",2)="These data note persons at your facility during the month who had an EITHER an"
^XTMP("LREPIREP3100715.010002",7,"HDG",3)="ICD-9 coded diagnosis for Legionella/Legionaire's disease OR a positive"
^XTMP("LREPIREP3100715.010002",7,"HDG",4)="culture result.  Identifying information, along with specimen and culture"
^XTMP("LREPIREP3100715.010002",7,"HDG",5)="results have been provided."
^XTMP("LREPIREP3100715.010002",8,"HDG",1)="NTE~8-Report of Candida bloodstream infections"
^XTMP("LREPIREP3100715.010002",8,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",8,"HDG",3)="result for Candida (or other yeast) bloodstream infections.  Identifying"
^XTMP("LREPIREP3100715.010002",8,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",9,"HDG",1)="NTE~9-Report of Cryptosporidium"
^XTMP("LREPIREP3100715.010002",9,"HDG",2)="These data note persons at your facility during the month who had EITHER an"
^XTMP("LREPIREP3100715.010002",9,"HDG",3)="ICD-9 coded diagnosis for Cryptosporidium OR a positive culture result."
^XTMP("LREPIREP3100715.010002",9,"HDG",4)="Identifying information, along with specimen and culture results have been"
^XTMP("LREPIREP3100715.010002",9,"HDG",5)="provided."
^XTMP("LREPIREP3100715.010002",10,"HDG",1)="NTE~10-Report of Escherichia coli O157"
^XTMP("LREPIREP3100715.010002",10,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",10,"HDG",3)="result for Escherichia coli serotype O157.  Identifying information, along "
^XTMP("LREPIREP3100715.010002",10,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",11,"HDG",1)="NTE~11-Report of Malaria"
^XTMP("LREPIREP3100715.010002",11,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100715.010002",11,"HDG",3)="coded diagnosis for malaria.  Identifying information has been provided."
^XTMP("LREPIREP3100715.010002",12,"HDG",1)="NTE~12-Report of Dengue"
^XTMP("LREPIREP3100715.010002",12,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100715.010002",12,"HDG",3)="coded diagnosis for dengue.  Identifying information has been provided."
^XTMP("LREPIREP3100715.010002",13,"HDG",1)="NTE~13-Report of Creutzfeldt-Jakob Disease"
^XTMP("LREPIREP3100715.010002",13,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100715.010002",13,"HDG",3)="coded diagnosis for Creutzfeldt-Jakob disease.  Identifying information has been provided."
^XTMP("LREPIREP3100715.010002",14,"HDG",1)="NTE~14-Report of Leishmaniasis"
^XTMP("LREPIREP3100715.010002",14,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100715.010002",14,"HDG",3)="coded diagnosis for Leishmania.  Identifying information has been provided."
^XTMP("LREPIREP3100715.010002",15,"HDG",1)="NTE~15 Report of Hepatitis C antibody negative"
^XTMP("LREPIREP3100715.010002",15,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100715.010002",15,"HDG",3)="negative test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3100715.010002",15,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100715.010002",15,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100715.010002",16,"HDG",1)="NTE~16 Report of Hepatitis A antibody positive"
^XTMP("LREPIREP3100715.010002",16,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100715.010002",16,"HDG",3)="positive test for hepatitis A antibody (based on accession date and not"
^XTMP("LREPIREP3100715.010002",16,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100715.010002",16,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100715.010002",17,"HDG",1)="NTE~17 Report of Hepatitis B positive"
^XTMP("LREPIREP3100715.010002",17,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100715.010002",17,"HDG",3)="positive test for hepatitis B (based on accession date and not results"
^XTMP("LREPIREP3100715.010002",17,"HDG",4)="reported date).  Definitions for data to be extracted are provided in"
^XTMP("LREPIREP3100715.010002",17,"HDG",5)="Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100715.010002",18,"HDG",1)="NTE~18-Report of All Staphylococcus aureus"
^XTMP("LREPIREP3100715.010002",18,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",18,"HDG",3)="result for all Staphylococcus aureus.  Identifying information, along "
^XTMP("LREPIREP3100715.010002",18,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",19,"HDG",1)="NTE~19-Report of methicillin-resistant Staphylococcus"
^XTMP("LREPIREP3100715.010002",19,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",19,"HDG",3)="result for methicillin-resistant Staphylococcus aureus.  Identifying"
^XTMP("LREPIREP3100715.010002",19,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",20,"HDG",1)="NTE~20-Vancomycin-resistant Staphylococcus aureus"
^XTMP("LREPIREP3100715.010002",20,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",20,"HDG",3)="result for Vancomycin-resistant Staphylococcus aureus.  Identifying information,"
^XTMP("LREPIREP3100715.010002",20,"HDG",4)="along with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",21,"HDG",1)="NTE~21-Vancomycin-resistant coagulase negative Staphylococcus"
^XTMP("LREPIREP3100715.010002",21,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",21,"HDG",3)="result for Vancomycin-resistant coagulase negative staphylococcus.  Identifying"
^XTMP("LREPIREP3100715.010002",21,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",22,"HDG",1)="NTE~22-All Streptococcus pneumoniae"
^XTMP("LREPIREP3100715.010002",22,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",22,"HDG",3)="result for all Streptococcus pneumoniae.  Identifying information, along "
^XTMP("LREPIREP3100715.010002",22,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002",23,"HDG",1)="NTE~23- All Enterococci"
^XTMP("LREPIREP3100715.010002",23,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100715.010002",23,"HDG",3)="result for all Enterococci.  Identifying information, along "
^XTMP("LREPIREP3100715.010002",23,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100715.010002","DONE")="1"
^XTMP("LREPIREP3100715.010002","FOOTNOTE",1)="Initally, only inpatient cases will be captured; however, eventually it is"
^XTMP("LREPIREP3100715.010002","FOOTNOTE",2)="anticiapted that this will include outpatient cases also."
^XTMP("LREPIREP3100715.010002","HDG",1)="               DETAILED VERIFICATION REPORT OF EPI EXTRACTED DATA"
^XTMP("LREPIREP3100715.010002","HDG",2)="                          FROM STATION 500 CAMP MASTER"
^XTMP("LREPIREP3100715.010002","HDG",3)="               PROCESSING PERIOD: 06-01-2010  through 06-30-2010"
^XTMP("LREPIREP3100715.010002","HEPCHDG",1)="Detailed Listing of Hepatitis C Risk Assessment"
^XTMP("LREPIREP3100715.010002","HEPCHDG",2)="These Health factors/Resolved terms for hepatitis C risk assessment are the"
^XTMP("LREPIREP3100715.010002","HEPCHDG",3)="national Health factors used for roll-up of risk assessment data.  They may not"
^XTMP("LREPIREP3100715.010002","HEPCHDG",4)="reflect the terms actually utilized (seen) in the Clinical Reminder package at"
^XTMP("LREPIREP3100715.010002","HEPCHDG",5)="this facility.  To determine which local/facility Clinical Reminder health"
^XTMP("LREPIREP3100715.010002","HEPCHDG",6)="factor(s) correspond(s) to the national term, please contact your facility"
^XTMP("LREPIREP3100715.010002","HEPCHDG",7)="Clinical Reminder application coordinator.  Note that hepatitis C infection"
^XTMP("LREPIREP3100715.010002","HEPCHDG",8)="is based on a previously ICD-9 coded diagnosis of hepatitis C at your site/"
^XTMP("LREPIREP3100715.010002","HEPCHDG",9)="facility."
^XTMP("LREPIREP3100715.010002","PHHDG",1)="Pharmacy-based data extracted for EPI data base."
^XTMP("LREPIREP3100715.010002","TOTAL",1)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",2)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",3)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",4)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",5)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",6)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",7)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",8)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",9)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",10)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",11)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",12)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",13)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",14)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",15)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",16)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",17)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",18)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",19)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",20)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",21)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",22)="0^0"
^XTMP("LREPIREP3100715.010002","TOTAL",23)="0^0"
^XTMP("LREPIREP3100715.010002","UPDHDG",1)="UPDATES"
^XTMP("LREPIREP3100715.010002","UPDHDG",2)="This section presents patients who had a transmission of information during a"
^XTMP("LREPIREP3100715.010002","UPDHDG",3)="month on an EPI defined topic that was incomplete.  These patients have"
^XTMP("LREPIREP3100715.010002","UPDHDG",4)="information that has been transmitted during the current processing month in"
^XTMP("LREPIREP3100715.010002","UPDHDG",5)="order to complete the EPI files.  This information usually contains inpatient"
^XTMP("LREPIREP3100715.010002","UPDHDG",6)="information about discharge date, ICD-9 coded diagnoses and occasionally will"
^XTMP("LREPIREP3100715.010002","UPDHDG",7)="contain laboratory based testing.  This line listing of patient, SSN, and"
^XTMP("LREPIREP3100715.010002","UPDHDG",8)="admission date and discharge date is provided to assist with analysis should"
^XTMP("LREPIREP3100715.010002","UPDHDG",9)="an processing/error report occur with your monthly automated transmission of"
^XTMP("LREPIREP3100715.010002","UPDHDG",10)="this data."
^XTMP("LREPIREP3100815.010002",0)="3110211^3100815^EPI Verification Report^.5"
^XTMP("LREPIREP3100815.010002",1,"HDG",1)="NTE~1-Report of Vancomycin-resistant Enterococcus"
^XTMP("LREPIREP3100815.010002",1,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",1,"HDG",3)="result for Vancomycin-resistant Enterococcus.  Identifying information, along "
^XTMP("LREPIREP3100815.010002",1,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",2,"HDG",1)="NTE~2 Report of Hepatitis C antibody positive"
^XTMP("LREPIREP3100815.010002",2,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100815.010002",2,"HDG",3)="positive test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3100815.010002",2,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100815.010002",2,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100815.010002",3,"HDG",1)="NTE~3-Report of Pencillin-resistant Streptococcus pneumoniae"
^XTMP("LREPIREP3100815.010002",3,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",3,"HDG",3)="result for Penicillin-resistant Streptococcus pneumoniae.  Identifying"
^XTMP("LREPIREP3100815.010002",3,"HDG",4)=" information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",4,"HDG",1)="NTE~4-Report of Clostridium difficile"
^XTMP("LREPIREP3100815.010002",4,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",4,"HDG",3)="result for Clostridium difficile.  Identifying information, along "
^XTMP("LREPIREP3100815.010002",4,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",5,"HDG",1)="NTE~5-Report of Tuberculosis"
^XTMP("LREPIREP3100815.010002",5,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",5,"HDG",3)="result for Mycobacterium tuberculosis.  Identifying information, along "
^XTMP("LREPIREP3100815.010002",5,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",6,"HDG",1)="NTE~6-Report of Group A Streptococcus"
^XTMP("LREPIREP3100815.010002",6,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",6,"HDG",3)="result for Group A Streptococcus.  Identifying information, along "
^XTMP("LREPIREP3100815.010002",6,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",7,"HDG",1)="NTE~7- Report of Legionella/Legionaire's"
^XTMP("LREPIREP3100815.010002",7,"HDG",2)="These data note persons at your facility during the month who had an EITHER an"
^XTMP("LREPIREP3100815.010002",7,"HDG",3)="ICD-9 coded diagnosis for Legionella/Legionaire's disease OR a positive"
^XTMP("LREPIREP3100815.010002",7,"HDG",4)="culture result.  Identifying information, along with specimen and culture"
^XTMP("LREPIREP3100815.010002",7,"HDG",5)="results have been provided."
^XTMP("LREPIREP3100815.010002",8,"HDG",1)="NTE~8-Report of Candida bloodstream infections"
^XTMP("LREPIREP3100815.010002",8,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",8,"HDG",3)="result for Candida (or other yeast) bloodstream infections.  Identifying"
^XTMP("LREPIREP3100815.010002",8,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",9,"HDG",1)="NTE~9-Report of Cryptosporidium"
^XTMP("LREPIREP3100815.010002",9,"HDG",2)="These data note persons at your facility during the month who had EITHER an"
^XTMP("LREPIREP3100815.010002",9,"HDG",3)="ICD-9 coded diagnosis for Cryptosporidium OR a positive culture result."
^XTMP("LREPIREP3100815.010002",9,"HDG",4)="Identifying information, along with specimen and culture results have been"
^XTMP("LREPIREP3100815.010002",9,"HDG",5)="provided."
^XTMP("LREPIREP3100815.010002",10,"HDG",1)="NTE~10-Report of Escherichia coli O157"
^XTMP("LREPIREP3100815.010002",10,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",10,"HDG",3)="result for Escherichia coli serotype O157.  Identifying information, along "
^XTMP("LREPIREP3100815.010002",10,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",11,"HDG",1)="NTE~11-Report of Malaria"
^XTMP("LREPIREP3100815.010002",11,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100815.010002",11,"HDG",3)="coded diagnosis for malaria.  Identifying information has been provided."
^XTMP("LREPIREP3100815.010002",12,"HDG",1)="NTE~12-Report of Dengue"
^XTMP("LREPIREP3100815.010002",12,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100815.010002",12,"HDG",3)="coded diagnosis for dengue.  Identifying information has been provided."
^XTMP("LREPIREP3100815.010002",13,"HDG",1)="NTE~13-Report of Creutzfeldt-Jakob Disease"
^XTMP("LREPIREP3100815.010002",13,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100815.010002",13,"HDG",3)="coded diagnosis for Creutzfeldt-Jakob disease.  Identifying information has been provided."
^XTMP("LREPIREP3100815.010002",14,"HDG",1)="NTE~14-Report of Leishmaniasis"
^XTMP("LREPIREP3100815.010002",14,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100815.010002",14,"HDG",3)="coded diagnosis for Leishmania.  Identifying information has been provided."
^XTMP("LREPIREP3100815.010002",15,"HDG",1)="NTE~15 Report of Hepatitis C antibody negative"
^XTMP("LREPIREP3100815.010002",15,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100815.010002",15,"HDG",3)="negative test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3100815.010002",15,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100815.010002",15,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100815.010002",16,"HDG",1)="NTE~16 Report of Hepatitis A antibody positive"
^XTMP("LREPIREP3100815.010002",16,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100815.010002",16,"HDG",3)="positive test for hepatitis A antibody (based on accession date and not"
^XTMP("LREPIREP3100815.010002",16,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100815.010002",16,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100815.010002",17,"HDG",1)="NTE~17 Report of Hepatitis B positive"
^XTMP("LREPIREP3100815.010002",17,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100815.010002",17,"HDG",3)="positive test for hepatitis B (based on accession date and not results"
^XTMP("LREPIREP3100815.010002",17,"HDG",4)="reported date).  Definitions for data to be extracted are provided in"
^XTMP("LREPIREP3100815.010002",17,"HDG",5)="Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100815.010002",18,"HDG",1)="NTE~18-Report of All Staphylococcus aureus"
^XTMP("LREPIREP3100815.010002",18,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",18,"HDG",3)="result for all Staphylococcus aureus.  Identifying information, along "
^XTMP("LREPIREP3100815.010002",18,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",19,"HDG",1)="NTE~19-Report of methicillin-resistant Staphylococcus"
^XTMP("LREPIREP3100815.010002",19,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",19,"HDG",3)="result for methicillin-resistant Staphylococcus aureus.  Identifying"
^XTMP("LREPIREP3100815.010002",19,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",20,"HDG",1)="NTE~20-Vancomycin-resistant Staphylococcus aureus"
^XTMP("LREPIREP3100815.010002",20,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",20,"HDG",3)="result for Vancomycin-resistant Staphylococcus aureus.  Identifying information,"
^XTMP("LREPIREP3100815.010002",20,"HDG",4)="along with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",21,"HDG",1)="NTE~21-Vancomycin-resistant coagulase negative Staphylococcus"
^XTMP("LREPIREP3100815.010002",21,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",21,"HDG",3)="result for Vancomycin-resistant coagulase negative staphylococcus.  Identifying"
^XTMP("LREPIREP3100815.010002",21,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",22,"HDG",1)="NTE~22-All Streptococcus pneumoniae"
^XTMP("LREPIREP3100815.010002",22,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",22,"HDG",3)="result for all Streptococcus pneumoniae.  Identifying information, along "
^XTMP("LREPIREP3100815.010002",22,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002",23,"HDG",1)="NTE~23- All Enterococci"
^XTMP("LREPIREP3100815.010002",23,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100815.010002",23,"HDG",3)="result for all Enterococci.  Identifying information, along "
^XTMP("LREPIREP3100815.010002",23,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100815.010002","DONE")="1"
^XTMP("LREPIREP3100815.010002","FOOTNOTE",1)="Initally, only inpatient cases will be captured; however, eventually it is"
^XTMP("LREPIREP3100815.010002","FOOTNOTE",2)="anticiapted that this will include outpatient cases also."
^XTMP("LREPIREP3100815.010002","HDG",1)="               DETAILED VERIFICATION REPORT OF EPI EXTRACTED DATA"
^XTMP("LREPIREP3100815.010002","HDG",2)="                          FROM STATION 500 CAMP MASTER"
^XTMP("LREPIREP3100815.010002","HDG",3)="               PROCESSING PERIOD: 07-01-2010  through 07-31-2010"
^XTMP("LREPIREP3100815.010002","HEPCHDG",1)="Detailed Listing of Hepatitis C Risk Assessment"
^XTMP("LREPIREP3100815.010002","HEPCHDG",2)="These Health factors/Resolved terms for hepatitis C risk assessment are the"
^XTMP("LREPIREP3100815.010002","HEPCHDG",3)="national Health factors used for roll-up of risk assessment data.  They may not"
^XTMP("LREPIREP3100815.010002","HEPCHDG",4)="reflect the terms actually utilized (seen) in the Clinical Reminder package at"
^XTMP("LREPIREP3100815.010002","HEPCHDG",5)="this facility.  To determine which local/facility Clinical Reminder health"
^XTMP("LREPIREP3100815.010002","HEPCHDG",6)="factor(s) correspond(s) to the national term, please contact your facility"
^XTMP("LREPIREP3100815.010002","HEPCHDG",7)="Clinical Reminder application coordinator.  Note that hepatitis C infection"
^XTMP("LREPIREP3100815.010002","HEPCHDG",8)="is based on a previously ICD-9 coded diagnosis of hepatitis C at your site/"
^XTMP("LREPIREP3100815.010002","HEPCHDG",9)="facility."
^XTMP("LREPIREP3100815.010002","PHHDG",1)="Pharmacy-based data extracted for EPI data base."
^XTMP("LREPIREP3100815.010002","TOTAL",1)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",2)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",3)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",4)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",5)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",6)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",7)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",8)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",9)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",10)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",11)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",12)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",13)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",14)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",15)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",16)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",17)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",18)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",19)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",20)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",21)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",22)="0^0"
^XTMP("LREPIREP3100815.010002","TOTAL",23)="0^0"
^XTMP("LREPIREP3100815.010002","UPDHDG",1)="UPDATES"
^XTMP("LREPIREP3100815.010002","UPDHDG",2)="This section presents patients who had a transmission of information during a"
^XTMP("LREPIREP3100815.010002","UPDHDG",3)="month on an EPI defined topic that was incomplete.  These patients have"
^XTMP("LREPIREP3100815.010002","UPDHDG",4)="information that has been transmitted during the current processing month in"
^XTMP("LREPIREP3100815.010002","UPDHDG",5)="order to complete the EPI files.  This information usually contains inpatient"
^XTMP("LREPIREP3100815.010002","UPDHDG",6)="information about discharge date, ICD-9 coded diagnoses and occasionally will"
^XTMP("LREPIREP3100815.010002","UPDHDG",7)="contain laboratory based testing.  This line listing of patient, SSN, and"
^XTMP("LREPIREP3100815.010002","UPDHDG",8)="admission date and discharge date is provided to assist with analysis should"
^XTMP("LREPIREP3100815.010002","UPDHDG",9)="an processing/error report occur with your monthly automated transmission of"
^XTMP("LREPIREP3100815.010002","UPDHDG",10)="this data."
^XTMP("LREPIREP3100915.010036",0)="3110314^3100915^EPI Verification Report^.5"
^XTMP("LREPIREP3100915.010036",1,"HDG",1)="NTE~1-Report of Vancomycin-resistant Enterococcus"
^XTMP("LREPIREP3100915.010036",1,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",1,"HDG",3)="result for Vancomycin-resistant Enterococcus.  Identifying information, along "
^XTMP("LREPIREP3100915.010036",1,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",2,"HDG",1)="NTE~2 Report of Hepatitis C antibody positive"
^XTMP("LREPIREP3100915.010036",2,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100915.010036",2,"HDG",3)="positive test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3100915.010036",2,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100915.010036",2,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100915.010036",3,"HDG",1)="NTE~3-Report of Pencillin-resistant Streptococcus pneumoniae"
^XTMP("LREPIREP3100915.010036",3,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",3,"HDG",3)="result for Penicillin-resistant Streptococcus pneumoniae.  Identifying"
^XTMP("LREPIREP3100915.010036",3,"HDG",4)=" information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",4,"HDG",1)="NTE~4-Report of Clostridium difficile"
^XTMP("LREPIREP3100915.010036",4,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",4,"HDG",3)="result for Clostridium difficile.  Identifying information, along "
^XTMP("LREPIREP3100915.010036",4,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",5,"HDG",1)="NTE~5-Report of Tuberculosis"
^XTMP("LREPIREP3100915.010036",5,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",5,"HDG",3)="result for Mycobacterium tuberculosis.  Identifying information, along "
^XTMP("LREPIREP3100915.010036",5,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",6,"HDG",1)="NTE~6-Report of Group A Streptococcus"
^XTMP("LREPIREP3100915.010036",6,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",6,"HDG",3)="result for Group A Streptococcus.  Identifying information, along "
^XTMP("LREPIREP3100915.010036",6,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",7,"HDG",1)="NTE~7- Report of Legionella/Legionaire's"
^XTMP("LREPIREP3100915.010036",7,"HDG",2)="These data note persons at your facility during the month who had an EITHER an"
^XTMP("LREPIREP3100915.010036",7,"HDG",3)="ICD-9 coded diagnosis for Legionella/Legionaire's disease OR a positive"
^XTMP("LREPIREP3100915.010036",7,"HDG",4)="culture result.  Identifying information, along with specimen and culture"
^XTMP("LREPIREP3100915.010036",7,"HDG",5)="results have been provided."
^XTMP("LREPIREP3100915.010036",8,"HDG",1)="NTE~8-Report of Candida bloodstream infections"
^XTMP("LREPIREP3100915.010036",8,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",8,"HDG",3)="result for Candida (or other yeast) bloodstream infections.  Identifying"
^XTMP("LREPIREP3100915.010036",8,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",9,"HDG",1)="NTE~9-Report of Cryptosporidium"
^XTMP("LREPIREP3100915.010036",9,"HDG",2)="These data note persons at your facility during the month who had EITHER an"
^XTMP("LREPIREP3100915.010036",9,"HDG",3)="ICD-9 coded diagnosis for Cryptosporidium OR a positive culture result."
^XTMP("LREPIREP3100915.010036",9,"HDG",4)="Identifying information, along with specimen and culture results have been"
^XTMP("LREPIREP3100915.010036",9,"HDG",5)="provided."
^XTMP("LREPIREP3100915.010036",10,"HDG",1)="NTE~10-Report of Escherichia coli O157"
^XTMP("LREPIREP3100915.010036",10,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",10,"HDG",3)="result for Escherichia coli serotype O157.  Identifying information, along "
^XTMP("LREPIREP3100915.010036",10,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",11,"HDG",1)="NTE~11-Report of Malaria"
^XTMP("LREPIREP3100915.010036",11,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100915.010036",11,"HDG",3)="coded diagnosis for malaria.  Identifying information has been provided."
^XTMP("LREPIREP3100915.010036",12,"HDG",1)="NTE~12-Report of Dengue"
^XTMP("LREPIREP3100915.010036",12,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100915.010036",12,"HDG",3)="coded diagnosis for dengue.  Identifying information has been provided."
^XTMP("LREPIREP3100915.010036",13,"HDG",1)="NTE~13-Report of Creutzfeldt-Jakob Disease"
^XTMP("LREPIREP3100915.010036",13,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100915.010036",13,"HDG",3)="coded diagnosis for Creutzfeldt-Jakob disease.  Identifying information has been provided."
^XTMP("LREPIREP3100915.010036",14,"HDG",1)="NTE~14-Report of Leishmaniasis"
^XTMP("LREPIREP3100915.010036",14,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3100915.010036",14,"HDG",3)="coded diagnosis for Leishmania.  Identifying information has been provided."
^XTMP("LREPIREP3100915.010036",15,"HDG",1)="NTE~15 Report of Hepatitis C antibody negative"
^XTMP("LREPIREP3100915.010036",15,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100915.010036",15,"HDG",3)="negative test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3100915.010036",15,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100915.010036",15,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100915.010036",16,"HDG",1)="NTE~16 Report of Hepatitis A antibody positive"
^XTMP("LREPIREP3100915.010036",16,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100915.010036",16,"HDG",3)="positive test for hepatitis A antibody (based on accession date and not"
^XTMP("LREPIREP3100915.010036",16,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3100915.010036",16,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100915.010036",17,"HDG",1)="NTE~17 Report of Hepatitis B positive"
^XTMP("LREPIREP3100915.010036",17,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3100915.010036",17,"HDG",3)="positive test for hepatitis B (based on accession date and not results"
^XTMP("LREPIREP3100915.010036",17,"HDG",4)="reported date).  Definitions for data to be extracted are provided in"
^XTMP("LREPIREP3100915.010036",17,"HDG",5)="Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3100915.010036",18,"HDG",1)="NTE~18-Report of All Staphylococcus aureus"
^XTMP("LREPIREP3100915.010036",18,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",18,"HDG",3)="result for all Staphylococcus aureus.  Identifying information, along "
^XTMP("LREPIREP3100915.010036",18,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",19,"HDG",1)="NTE~19-Report of methicillin-resistant Staphylococcus"
^XTMP("LREPIREP3100915.010036",19,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",19,"HDG",3)="result for methicillin-resistant Staphylococcus aureus.  Identifying"
^XTMP("LREPIREP3100915.010036",19,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",20,"HDG",1)="NTE~20-Vancomycin-resistant Staphylococcus aureus"
^XTMP("LREPIREP3100915.010036",20,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",20,"HDG",3)="result for Vancomycin-resistant Staphylococcus aureus.  Identifying information,"
^XTMP("LREPIREP3100915.010036",20,"HDG",4)="along with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",21,"HDG",1)="NTE~21-Vancomycin-resistant coagulase negative Staphylococcus"
^XTMP("LREPIREP3100915.010036",21,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",21,"HDG",3)="result for Vancomycin-resistant coagulase negative staphylococcus.  Identifying"
^XTMP("LREPIREP3100915.010036",21,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",22,"HDG",1)="NTE~22-All Streptococcus pneumoniae"
^XTMP("LREPIREP3100915.010036",22,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",22,"HDG",3)="result for all Streptococcus pneumoniae.  Identifying information, along "
^XTMP("LREPIREP3100915.010036",22,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036",23,"HDG",1)="NTE~23- All Enterococci"
^XTMP("LREPIREP3100915.010036",23,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3100915.010036",23,"HDG",3)="result for all Enterococci.  Identifying information, along "
^XTMP("LREPIREP3100915.010036",23,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3100915.010036","DONE")="1"
^XTMP("LREPIREP3100915.010036","FOOTNOTE",1)="Initally, only inpatient cases will be captured; however, eventually it is"
^XTMP("LREPIREP3100915.010036","FOOTNOTE",2)="anticiapted that this will include outpatient cases also."
^XTMP("LREPIREP3100915.010036","HDG",1)="               DETAILED VERIFICATION REPORT OF EPI EXTRACTED DATA"
^XTMP("LREPIREP3100915.010036","HDG",2)="                          FROM STATION 500 CAMP MASTER"
^XTMP("LREPIREP3100915.010036","HDG",3)="               PROCESSING PERIOD: 08-01-2010  through 08-31-2010"
^XTMP("LREPIREP3100915.010036","HEPCHDG",1)="Detailed Listing of Hepatitis C Risk Assessment"
^XTMP("LREPIREP3100915.010036","HEPCHDG",2)="These Health factors/Resolved terms for hepatitis C risk assessment are the"
^XTMP("LREPIREP3100915.010036","HEPCHDG",3)="national Health factors used for roll-up of risk assessment data.  They may not"
^XTMP("LREPIREP3100915.010036","HEPCHDG",4)="reflect the terms actually utilized (seen) in the Clinical Reminder package at"
^XTMP("LREPIREP3100915.010036","HEPCHDG",5)="this facility.  To determine which local/facility Clinical Reminder health"
^XTMP("LREPIREP3100915.010036","HEPCHDG",6)="factor(s) correspond(s) to the national term, please contact your facility"
^XTMP("LREPIREP3100915.010036","HEPCHDG",7)="Clinical Reminder application coordinator.  Note that hepatitis C infection"
^XTMP("LREPIREP3100915.010036","HEPCHDG",8)="is based on a previously ICD-9 coded diagnosis of hepatitis C at your site/"
^XTMP("LREPIREP3100915.010036","HEPCHDG",9)="facility."
^XTMP("LREPIREP3100915.010036","PHHDG",1)="Pharmacy-based data extracted for EPI data base."
^XTMP("LREPIREP3100915.010036","TOTAL",1)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",2)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",3)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",4)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",5)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",6)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",7)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",8)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",9)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",10)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",11)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",12)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",13)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",14)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",15)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",16)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",17)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",18)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",19)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",20)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",21)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",22)="0^0"
^XTMP("LREPIREP3100915.010036","TOTAL",23)="0^0"
^XTMP("LREPIREP3100915.010036","UPDHDG",1)="UPDATES"
^XTMP("LREPIREP3100915.010036","UPDHDG",2)="This section presents patients who had a transmission of information during a"
^XTMP("LREPIREP3100915.010036","UPDHDG",3)="month on an EPI defined topic that was incomplete.  These patients have"
^XTMP("LREPIREP3100915.010036","UPDHDG",4)="information that has been transmitted during the current processing month in"
^XTMP("LREPIREP3100915.010036","UPDHDG",5)="order to complete the EPI files.  This information usually contains inpatient"
^XTMP("LREPIREP3100915.010036","UPDHDG",6)="information about discharge date, ICD-9 coded diagnoses and occasionally will"
^XTMP("LREPIREP3100915.010036","UPDHDG",7)="contain laboratory based testing.  This line listing of patient, SSN, and"
^XTMP("LREPIREP3100915.010036","UPDHDG",8)="admission date and discharge date is provided to assist with analysis should"
^XTMP("LREPIREP3100915.010036","UPDHDG",9)="an processing/error report occur with your monthly automated transmission of"
^XTMP("LREPIREP3100915.010036","UPDHDG",10)="this data."
^XTMP("LREPIREP3101015.010216",0)="3110413^3101015^EPI Verification Report^.5"
^XTMP("LREPIREP3101015.010216",1,"HDG",1)="NTE~1-Report of Vancomycin-resistant Enterococcus"
^XTMP("LREPIREP3101015.010216",1,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",1,"HDG",3)="result for Vancomycin-resistant Enterococcus.  Identifying information, along "
^XTMP("LREPIREP3101015.010216",1,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",2,"HDG",1)="NTE~2 Report of Hepatitis C antibody positive"
^XTMP("LREPIREP3101015.010216",2,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3101015.010216",2,"HDG",3)="positive test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3101015.010216",2,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3101015.010216",2,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3101015.010216",3,"HDG",1)="NTE~3-Report of Pencillin-resistant Streptococcus pneumoniae"
^XTMP("LREPIREP3101015.010216",3,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",3,"HDG",3)="result for Penicillin-resistant Streptococcus pneumoniae.  Identifying"
^XTMP("LREPIREP3101015.010216",3,"HDG",4)=" information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",4,"HDG",1)="NTE~4-Report of Clostridium difficile"
^XTMP("LREPIREP3101015.010216",4,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",4,"HDG",3)="result for Clostridium difficile.  Identifying information, along "
^XTMP("LREPIREP3101015.010216",4,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",5,"HDG",1)="NTE~5-Report of Tuberculosis"
^XTMP("LREPIREP3101015.010216",5,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",5,"HDG",3)="result for Mycobacterium tuberculosis.  Identifying information, along "
^XTMP("LREPIREP3101015.010216",5,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",6,"HDG",1)="NTE~6-Report of Group A Streptococcus"
^XTMP("LREPIREP3101015.010216",6,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",6,"HDG",3)="result for Group A Streptococcus.  Identifying information, along "
^XTMP("LREPIREP3101015.010216",6,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",7,"HDG",1)="NTE~7- Report of Legionella/Legionaire's"
^XTMP("LREPIREP3101015.010216",7,"HDG",2)="These data note persons at your facility during the month who had an EITHER an"
^XTMP("LREPIREP3101015.010216",7,"HDG",3)="ICD-9 coded diagnosis for Legionella/Legionaire's disease OR a positive"
^XTMP("LREPIREP3101015.010216",7,"HDG",4)="culture result.  Identifying information, along with specimen and culture"
^XTMP("LREPIREP3101015.010216",7,"HDG",5)="results have been provided."
^XTMP("LREPIREP3101015.010216",8,"HDG",1)="NTE~8-Report of Candida bloodstream infections"
^XTMP("LREPIREP3101015.010216",8,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",8,"HDG",3)="result for Candida (or other yeast) bloodstream infections.  Identifying"
^XTMP("LREPIREP3101015.010216",8,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",9,"HDG",1)="NTE~9-Report of Cryptosporidium"
^XTMP("LREPIREP3101015.010216",9,"HDG",2)="These data note persons at your facility during the month who had EITHER an"
^XTMP("LREPIREP3101015.010216",9,"HDG",3)="ICD-9 coded diagnosis for Cryptosporidium OR a positive culture result."
^XTMP("LREPIREP3101015.010216",9,"HDG",4)="Identifying information, along with specimen and culture results have been"
^XTMP("LREPIREP3101015.010216",9,"HDG",5)="provided."
^XTMP("LREPIREP3101015.010216",10,"HDG",1)="NTE~10-Report of Escherichia coli O157"
^XTMP("LREPIREP3101015.010216",10,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",10,"HDG",3)="result for Escherichia coli serotype O157.  Identifying information, along "
^XTMP("LREPIREP3101015.010216",10,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",11,"HDG",1)="NTE~11-Report of Malaria"
^XTMP("LREPIREP3101015.010216",11,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3101015.010216",11,"HDG",3)="coded diagnosis for malaria.  Identifying information has been provided."
^XTMP("LREPIREP3101015.010216",12,"HDG",1)="NTE~12-Report of Dengue"
^XTMP("LREPIREP3101015.010216",12,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3101015.010216",12,"HDG",3)="coded diagnosis for dengue.  Identifying information has been provided."
^XTMP("LREPIREP3101015.010216",13,"HDG",1)="NTE~13-Report of Creutzfeldt-Jakob Disease"
^XTMP("LREPIREP3101015.010216",13,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3101015.010216",13,"HDG",3)="coded diagnosis for Creutzfeldt-Jakob disease.  Identifying information has been provided."
^XTMP("LREPIREP3101015.010216",14,"HDG",1)="NTE~14-Report of Leishmaniasis"
^XTMP("LREPIREP3101015.010216",14,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3101015.010216",14,"HDG",3)="coded diagnosis for Leishmania.  Identifying information has been provided."
^XTMP("LREPIREP3101015.010216",15,"HDG",1)="NTE~15 Report of Hepatitis C antibody negative"
^XTMP("LREPIREP3101015.010216",15,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3101015.010216",15,"HDG",3)="negative test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3101015.010216",15,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3101015.010216",15,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3101015.010216",16,"HDG",1)="NTE~16 Report of Hepatitis A antibody positive"
^XTMP("LREPIREP3101015.010216",16,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3101015.010216",16,"HDG",3)="positive test for hepatitis A antibody (based on accession date and not"
^XTMP("LREPIREP3101015.010216",16,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3101015.010216",16,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3101015.010216",17,"HDG",1)="NTE~17 Report of Hepatitis B positive"
^XTMP("LREPIREP3101015.010216",17,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3101015.010216",17,"HDG",3)="positive test for hepatitis B (based on accession date and not results"
^XTMP("LREPIREP3101015.010216",17,"HDG",4)="reported date).  Definitions for data to be extracted are provided in"
^XTMP("LREPIREP3101015.010216",17,"HDG",5)="Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3101015.010216",18,"HDG",1)="NTE~18-Report of All Staphylococcus aureus"
^XTMP("LREPIREP3101015.010216",18,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",18,"HDG",3)="result for all Staphylococcus aureus.  Identifying information, along "
^XTMP("LREPIREP3101015.010216",18,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",19,"HDG",1)="NTE~19-Report of methicillin-resistant Staphylococcus"
^XTMP("LREPIREP3101015.010216",19,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",19,"HDG",3)="result for methicillin-resistant Staphylococcus aureus.  Identifying"
^XTMP("LREPIREP3101015.010216",19,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",20,"HDG",1)="NTE~20-Vancomycin-resistant Staphylococcus aureus"
^XTMP("LREPIREP3101015.010216",20,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",20,"HDG",3)="result for Vancomycin-resistant Staphylococcus aureus.  Identifying information,"
^XTMP("LREPIREP3101015.010216",20,"HDG",4)="along with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",21,"HDG",1)="NTE~21-Vancomycin-resistant coagulase negative Staphylococcus"
^XTMP("LREPIREP3101015.010216",21,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",21,"HDG",3)="result for Vancomycin-resistant coagulase negative staphylococcus.  Identifying"
^XTMP("LREPIREP3101015.010216",21,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",22,"HDG",1)="NTE~22-All Streptococcus pneumoniae"
^XTMP("LREPIREP3101015.010216",22,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",22,"HDG",3)="result for all Streptococcus pneumoniae.  Identifying information, along "
^XTMP("LREPIREP3101015.010216",22,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216",23,"HDG",1)="NTE~23- All Enterococci"
^XTMP("LREPIREP3101015.010216",23,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101015.010216",23,"HDG",3)="result for all Enterococci.  Identifying information, along "
^XTMP("LREPIREP3101015.010216",23,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101015.010216","DONE")="1"
^XTMP("LREPIREP3101015.010216","FOOTNOTE",1)="Initally, only inpatient cases will be captured; however, eventually it is"
^XTMP("LREPIREP3101015.010216","FOOTNOTE",2)="anticiapted that this will include outpatient cases also."
^XTMP("LREPIREP3101015.010216","HDG",1)="               DETAILED VERIFICATION REPORT OF EPI EXTRACTED DATA"
^XTMP("LREPIREP3101015.010216","HDG",2)="                          FROM STATION 500 CAMP MASTER"
^XTMP("LREPIREP3101015.010216","HDG",3)="               PROCESSING PERIOD: 09-01-2010  through 09-30-2010"
^XTMP("LREPIREP3101015.010216","HEPCHDG",1)="Detailed Listing of Hepatitis C Risk Assessment"
^XTMP("LREPIREP3101015.010216","HEPCHDG",2)="These Health factors/Resolved terms for hepatitis C risk assessment are the"
^XTMP("LREPIREP3101015.010216","HEPCHDG",3)="national Health factors used for roll-up of risk assessment data.  They may not"
^XTMP("LREPIREP3101015.010216","HEPCHDG",4)="reflect the terms actually utilized (seen) in the Clinical Reminder package at"
^XTMP("LREPIREP3101015.010216","HEPCHDG",5)="this facility.  To determine which local/facility Clinical Reminder health"
^XTMP("LREPIREP3101015.010216","HEPCHDG",6)="factor(s) correspond(s) to the national term, please contact your facility"
^XTMP("LREPIREP3101015.010216","HEPCHDG",7)="Clinical Reminder application coordinator.  Note that hepatitis C infection"
^XTMP("LREPIREP3101015.010216","HEPCHDG",8)="is based on a previously ICD-9 coded diagnosis of hepatitis C at your site/"
^XTMP("LREPIREP3101015.010216","HEPCHDG",9)="facility."
^XTMP("LREPIREP3101015.010216","PHHDG",1)="Pharmacy-based data extracted for EPI data base."
^XTMP("LREPIREP3101015.010216","TOTAL",1)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",2)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",3)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",4)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",5)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",6)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",7)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",8)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",9)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",10)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",11)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",12)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",13)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",14)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",15)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",16)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",17)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",18)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",19)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",20)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",21)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",22)="0^0"
^XTMP("LREPIREP3101015.010216","TOTAL",23)="0^0"
^XTMP("LREPIREP3101015.010216","UPDHDG",1)="UPDATES"
^XTMP("LREPIREP3101015.010216","UPDHDG",2)="This section presents patients who had a transmission of information during a"
^XTMP("LREPIREP3101015.010216","UPDHDG",3)="month on an EPI defined topic that was incomplete.  These patients have"
^XTMP("LREPIREP3101015.010216","UPDHDG",4)="information that has been transmitted during the current processing month in"
^XTMP("LREPIREP3101015.010216","UPDHDG",5)="order to complete the EPI files.  This information usually contains inpatient"
^XTMP("LREPIREP3101015.010216","UPDHDG",6)="information about discharge date, ICD-9 coded diagnoses and occasionally will"
^XTMP("LREPIREP3101015.010216","UPDHDG",7)="contain laboratory based testing.  This line listing of patient, SSN, and"
^XTMP("LREPIREP3101015.010216","UPDHDG",8)="admission date and discharge date is provided to assist with analysis should"
^XTMP("LREPIREP3101015.010216","UPDHDG",9)="an processing/error report occur with your monthly automated transmission of"
^XTMP("LREPIREP3101015.010216","UPDHDG",10)="this data."
^XTMP("LREPIREP3101115.010217",0)="3110514^3101115^EPI Verification Report^.5"
^XTMP("LREPIREP3101115.010217",1,"HDG",1)="NTE~1-Report of Vancomycin-resistant Enterococcus"
^XTMP("LREPIREP3101115.010217",1,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",1,"HDG",3)="result for Vancomycin-resistant Enterococcus.  Identifying information, along "
^XTMP("LREPIREP3101115.010217",1,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",2,"HDG",1)="NTE~2 Report of Hepatitis C antibody positive"
^XTMP("LREPIREP3101115.010217",2,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3101115.010217",2,"HDG",3)="positive test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3101115.010217",2,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3101115.010217",2,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3101115.010217",3,"HDG",1)="NTE~3-Report of Pencillin-resistant Streptococcus pneumoniae"
^XTMP("LREPIREP3101115.010217",3,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",3,"HDG",3)="result for Penicillin-resistant Streptococcus pneumoniae.  Identifying"
^XTMP("LREPIREP3101115.010217",3,"HDG",4)=" information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",4,"HDG",1)="NTE~4-Report of Clostridium difficile"
^XTMP("LREPIREP3101115.010217",4,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",4,"HDG",3)="result for Clostridium difficile.  Identifying information, along "
^XTMP("LREPIREP3101115.010217",4,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",5,"HDG",1)="NTE~5-Report of Tuberculosis"
^XTMP("LREPIREP3101115.010217",5,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",5,"HDG",3)="result for Mycobacterium tuberculosis.  Identifying information, along "
^XTMP("LREPIREP3101115.010217",5,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",6,"HDG",1)="NTE~6-Report of Group A Streptococcus"
^XTMP("LREPIREP3101115.010217",6,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",6,"HDG",3)="result for Group A Streptococcus.  Identifying information, along "
^XTMP("LREPIREP3101115.010217",6,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",7,"HDG",1)="NTE~7- Report of Legionella/Legionaire's"
^XTMP("LREPIREP3101115.010217",7,"HDG",2)="These data note persons at your facility during the month who had an EITHER an"
^XTMP("LREPIREP3101115.010217",7,"HDG",3)="ICD-9 coded diagnosis for Legionella/Legionaire's disease OR a positive"
^XTMP("LREPIREP3101115.010217",7,"HDG",4)="culture result.  Identifying information, along with specimen and culture"
^XTMP("LREPIREP3101115.010217",7,"HDG",5)="results have been provided."
^XTMP("LREPIREP3101115.010217",8,"HDG",1)="NTE~8-Report of Candida bloodstream infections"
^XTMP("LREPIREP3101115.010217",8,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",8,"HDG",3)="result for Candida (or other yeast) bloodstream infections.  Identifying"
^XTMP("LREPIREP3101115.010217",8,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",9,"HDG",1)="NTE~9-Report of Cryptosporidium"
^XTMP("LREPIREP3101115.010217",9,"HDG",2)="These data note persons at your facility during the month who had EITHER an"
^XTMP("LREPIREP3101115.010217",9,"HDG",3)="ICD-9 coded diagnosis for Cryptosporidium OR a positive culture result."
^XTMP("LREPIREP3101115.010217",9,"HDG",4)="Identifying information, along with specimen and culture results have been"
^XTMP("LREPIREP3101115.010217",9,"HDG",5)="provided."
^XTMP("LREPIREP3101115.010217",10,"HDG",1)="NTE~10-Report of Escherichia coli O157"
^XTMP("LREPIREP3101115.010217",10,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",10,"HDG",3)="result for Escherichia coli serotype O157.  Identifying information, along "
^XTMP("LREPIREP3101115.010217",10,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",11,"HDG",1)="NTE~11-Report of Malaria"
^XTMP("LREPIREP3101115.010217",11,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3101115.010217",11,"HDG",3)="coded diagnosis for malaria.  Identifying information has been provided."
^XTMP("LREPIREP3101115.010217",12,"HDG",1)="NTE~12-Report of Dengue"
^XTMP("LREPIREP3101115.010217",12,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3101115.010217",12,"HDG",3)="coded diagnosis for dengue.  Identifying information has been provided."
^XTMP("LREPIREP3101115.010217",13,"HDG",1)="NTE~13-Report of Creutzfeldt-Jakob Disease"
^XTMP("LREPIREP3101115.010217",13,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3101115.010217",13,"HDG",3)="coded diagnosis for Creutzfeldt-Jakob disease.  Identifying information has been provided."
^XTMP("LREPIREP3101115.010217",14,"HDG",1)="NTE~14-Report of Leishmaniasis"
^XTMP("LREPIREP3101115.010217",14,"HDG",2)="These data note persons at your facility during the month who had an ICD-9"
^XTMP("LREPIREP3101115.010217",14,"HDG",3)="coded diagnosis for Leishmania.  Identifying information has been provided."
^XTMP("LREPIREP3101115.010217",15,"HDG",1)="NTE~15 Report of Hepatitis C antibody negative"
^XTMP("LREPIREP3101115.010217",15,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3101115.010217",15,"HDG",3)="negative test for hepatitis C antibody (based on accession date and not"
^XTMP("LREPIREP3101115.010217",15,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3101115.010217",15,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3101115.010217",16,"HDG",1)="NTE~16 Report of Hepatitis A antibody positive"
^XTMP("LREPIREP3101115.010217",16,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3101115.010217",16,"HDG",3)="positive test for hepatitis A antibody (based on accession date and not"
^XTMP("LREPIREP3101115.010217",16,"HDG",4)="results reported date).  Definitions for data to be extracted are provided"
^XTMP("LREPIREP3101115.010217",16,"HDG",5)="in Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3101115.010217",17,"HDG",1)="NTE~17 Report of Hepatitis B positive"
^XTMP("LREPIREP3101115.010217",17,"HDG",2)="This represents a line listing of persons reported during the month who had a"
^XTMP("LREPIREP3101115.010217",17,"HDG",3)="positive test for hepatitis B (based on accession date and not results"
^XTMP("LREPIREP3101115.010217",17,"HDG",4)="reported date).  Definitions for data to be extracted are provided in"
^XTMP("LREPIREP3101115.010217",17,"HDG",5)="Technical and User Guide documentation for Laboratory EPI LR*5.2*281."
^XTMP("LREPIREP3101115.010217",18,"HDG",1)="NTE~18-Report of All Staphylococcus aureus"
^XTMP("LREPIREP3101115.010217",18,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",18,"HDG",3)="result for all Staphylococcus aureus.  Identifying information, along "
^XTMP("LREPIREP3101115.010217",18,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",19,"HDG",1)="NTE~19-Report of methicillin-resistant Staphylococcus"
^XTMP("LREPIREP3101115.010217",19,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",19,"HDG",3)="result for methicillin-resistant Staphylococcus aureus.  Identifying"
^XTMP("LREPIREP3101115.010217",19,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",20,"HDG",1)="NTE~20-Vancomycin-resistant Staphylococcus aureus"
^XTMP("LREPIREP3101115.010217",20,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",20,"HDG",3)="result for Vancomycin-resistant Staphylococcus aureus.  Identifying information,"
^XTMP("LREPIREP3101115.010217",20,"HDG",4)="along with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",21,"HDG",1)="NTE~21-Vancomycin-resistant coagulase negative Staphylococcus"
^XTMP("LREPIREP3101115.010217",21,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",21,"HDG",3)="result for Vancomycin-resistant coagulase negative staphylococcus.  Identifying"
^XTMP("LREPIREP3101115.010217",21,"HDG",4)="information, along with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",22,"HDG",1)="NTE~22-All Streptococcus pneumoniae"
^XTMP("LREPIREP3101115.010217",22,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",22,"HDG",3)="result for all Streptococcus pneumoniae.  Identifying information, along "
^XTMP("LREPIREP3101115.010217",22,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217",23,"HDG",1)="NTE~23- All Enterococci"
^XTMP("LREPIREP3101115.010217",23,"HDG",2)="These data note persons at your facility during the month who had a positive"
^XTMP("LREPIREP3101115.010217",23,"HDG",3)="result for all Enterococci.  Identifying information, along "
^XTMP("LREPIREP3101115.010217",23,"HDG",4)="with specimen and culture results have been provided."
^XTMP("LREPIREP3101115.010217","DONE")="1"
^XTMP("LREPIREP3101115.010217","FOOTNOTE",1)="Initally, only inpatient cases will be captured; however, eventually it is"
^XTMP("LREPIREP3101115.010217","FOOTNOTE",2)="anticiapted that this will include outpatient cases also."
^XTMP("LREPIREP3101115.010217","HDG",1)="               DETAILED VERIFICATION REPORT OF EPI EXTRACTED DATA"
^XTMP("LREPIREP3101115.010217","HDG",2)="                          FROM STATION 500 CAMP MASTER"
^XTMP("LREPIREP3101115.010217","HDG",3)="               PROCESSING PERIOD: 10-01-2010  through 10-31-2010"
^XTMP("LREPIREP3101115.010217","HEPCHDG",1)="Detailed Listing of Hepatitis C Risk Assessment"
^XTMP("LREPIREP3101115.010217","HEPCHDG",2)="These Health factors/Resolved terms for hepatitis C risk assessment are the"
^XTMP("LREPIREP3101115.010217","HEPCHDG",3)="national Health factors used for roll-up of risk assessment data.  They may not"
^XTMP("LREPIREP3101115.010217","HEPCHDG",4)="reflect the terms actually utilized (seen) in the Clinical Reminder package at"
^XTMP("LREPIREP3101115.010217","HEPCHDG",5)="this facility.  To determine which local/facility Clinical Reminder health"
^XTMP("LREPIREP3101115.010217","HEPCHDG",6)="factor(s) correspond(s) to the national term, please contact your facility"
^XTMP("LREPIREP3101115.010217","HEPCHDG",7)="Clinical Reminder application coordinator.  Note that hepatitis C infection"
^XTMP("LREPIREP3101115.010217","HEPCHDG",8)="is based on a previously ICD-9 coded diagnosis of hepatitis C at your site/"
^XTMP("LREPIREP3101115.010217","HEPCHDG",9)="facility."
^XTMP("LREPIREP3101115.010217","PHHDG",1)="Pharmacy-based data extracted for EPI data base."
^XTMP("LREPIREP3101115.010217","TOTAL",1)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",2)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",3)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",4)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",5)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",6)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",7)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",8)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",9)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",10)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",11)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",12)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",13)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",14)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",15)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",16)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",17)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",18)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",19)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",20)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",21)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",22)="0^0"
^XTMP("LREPIREP3101115.010217","TOTAL",23)="0^0"
^XTMP("LREPIREP3101115.010217","UPDHDG",1)="UPDATES"
^XTMP("LREPIREP3101115.010217","UPDHDG",2)="This section presents patients who had a transmission of information during a"
^XTMP("LREPIREP3101115.010217","UPDHDG",3)="month on an EPI defined topic that was incomplete.  These patients have"
^XTMP("LREPIREP3101115.010217","UPDHDG",4)="information that has been transmitted during the current processing month in"
^XTMP("LREPIREP3101115.010217","UPDHDG",5)="order to complete the EPI files.  This information usually contains inpatient"
^XTMP("LREPIREP3101115.010217","UPDHDG",6)="information about discharge date, ICD-9 coded diagnoses and occasionally will"
^XTMP("LREPIREP3101115.010217","UPDHDG",7)="contain laboratory based testing.  This line listing of patient, SSN, and"
^XTMP("LREPIREP3101115.010217","UPDHDG",8)="admission date and discharge date is provided to assist with analysis should"
^XTMP("LREPIREP3101115.010217","UPDHDG",9)="an processing/error report occur with your monthly automated transmission of"
^XTMP("LREPIREP3101115.010217","UPDHDG",10)="this data."
^XTMP("ORB LAST EXPIRE",0)="3101208.101928^3101201.101929"
^XTMP("ORBNPO",0)="3101202.101928^3101201.101928"
^XTMP("ORMTIME_UNSGNORD",0)="3101211.101932^3101201.101932^Unsigned Orders Reviewed by ORMTIME"
^XTMP("PRCF131P",0)="3110310.153115^3101110.153115"
^XTMP("PRCF131P","END COMPILE")="3101110.153115"
^XTMP("PRCF131P","START COMPILE")="3101110.153115"
^XTMP("XPDT",0)="3111103^3101103"
^XTMP("XPDT",7263)="1"
^XTMP("XPDT",7263,"BLD",1125,0)="XT*7.3*116^TOOLKIT^0^3080908^y"
^XTMP("XPDT",7263,"BLD",1125,1,0)="^^2^2^3080908^"
^XTMP("XPDT",7263,"BLD",1125,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7263,"BLD",1125,1,2,0)="XT*7.3*116  Update XML parser to handle long Attributes."
^XTMP("XPDT",7263,"BLD",1125,4,0)="^9.64PA^^"
^XTMP("XPDT",7263,"BLD",1125,6)="^88"
^XTMP("XPDT",7263,"BLD",1125,6.3)="1"
^XTMP("XPDT",7263,"BLD",1125,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7263,"BLD",1125,"KRN",.4,0)=".4"
^XTMP("XPDT",7263,"BLD",1125,"KRN",.401,0)=".401"
^XTMP("XPDT",7263,"BLD",1125,"KRN",.402,0)=".402"
^XTMP("XPDT",7263,"BLD",1125,"KRN",.403,0)=".403"
^XTMP("XPDT",7263,"BLD",1125,"KRN",.5,0)=".5"
^XTMP("XPDT",7263,"BLD",1125,"KRN",.84,0)=".84"
^XTMP("XPDT",7263,"BLD",1125,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7263,"BLD",1125,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7263,"BLD",1125,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7263,"BLD",1125,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7263,"BLD",1125,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7263,"BLD",1125,"KRN",9.8,"NM",1,0)="MXMLPRSE^^0^B64969959"
^XTMP("XPDT",7263,"BLD",1125,"KRN",9.8,"NM","B","MXMLPRSE",1)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN",19,0)="19"
^XTMP("XPDT",7263,"BLD",1125,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7263,"BLD",1125,"KRN",101,0)="101"
^XTMP("XPDT",7263,"BLD",1125,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7263,"BLD",1125,"KRN",771,0)="771"
^XTMP("XPDT",7263,"BLD",1125,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7263,"BLD",1125,"KRN",870,0)="870"
^XTMP("XPDT",7263,"BLD",1125,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7263,"BLD",1125,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7263,"BLD",1125,"KRN",8994,0)="8994"
^XTMP("XPDT",7263,"BLD",1125,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",.4,.4)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",.401,.401)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",.402,.402)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",.403,.403)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",.5,.5)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",.84,.84)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",19,19)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",101,101)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",771,771)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",870,870)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",8994,8994)=""
^XTMP("XPDT",7263,"BLD",1125,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7263,"BLD",1125,"QUES",0)="^9.62^^"
^XTMP("XPDT",7263,"MBREQ")="0"
^XTMP("XPDT",7263,"PKG",6,-1)="1^1"
^XTMP("XPDT",7263,"PKG",6,0)="TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP^"
^XTMP("XPDT",7263,"PKG",6,20,0)="^9.402P^^0"
^XTMP("XPDT",7263,"PKG",6,22,0)="^9.49I^1^1"
^XTMP("XPDT",7263,"PKG",6,22,1,0)="7.3^3040428^2970513^2"
^XTMP("XPDT",7263,"PKG",6,22,1,"PAH",1,0)="116^3080908"
^XTMP("XPDT",7263,"PKG",6,22,1,"PAH",1,1,0)="^^2^2^3080908"
^XTMP("XPDT",7263,"PKG",6,22,1,"PAH",1,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7263,"PKG",6,22,1,"PAH",1,1,2,0)="XT*7.3*116  Update XML parser to handle long Attributes."
^XTMP("XPDT",7263,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7263,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7263,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7263,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7263,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7263,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7263,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7263,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7263,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7263,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7263,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7263,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7263,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7263,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7263,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7263,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7263,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7263,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7263,"QUES","XPM1","B")=""
^XTMP("XPDT",7263,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7263,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7263,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7263,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7263,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7263,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7263,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7263,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7263,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7263,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7263,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7263,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7263,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7263,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7263,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7263,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7263,"RTN")="1"
^XTMP("XPDT",7263,"RTN","MXMLPRSE")="0^1^B64969959^B64689690"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",1,0)="MXMLPRSE ;SAIC/DKM - XML Parser ;09/08/08  11:50"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",2,0)=" ;;7.3;TOOLKIT;**58,67,89,116**;Apr 25, 1995;Build 1"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",3,0)=" ;================================================================="
^XTMP("XPDT",7263,"RTN","MXMLPRSE",4,0)=" ; Main entry point."
^XTMP("XPDT",7263,"RTN","MXMLPRSE",5,0)=" ; DOC = Closed reference to global array containing document"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",6,0)=" ; CBK = Local array containing entry points for callback interface"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",7,0)=" ; OPTION = Option flags; expected values are:"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",8,0)=" ;   D = Debug mode"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",9,0)=" ;   W = Do not report warnings"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",10,0)=" ;   V = Validate (checks only well-formedness by default)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",11,0)=" ;   0,1 = Terminate on encountering error at specified level"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",12,0)="EN(DOC,CBK,OPTION) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",13,0)=" N WS,ID,QT,EDC,DTD,LVL,CS,DOCSTK,LLEN,LPOS,CPOS,LCUR,ERR,XML,PFX,SFX,EOD,EOG,ST,PATH,OFX"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",14,0)=" S ID=$T(+0),WS=$C(9,10,13,32),QT="""""""",(DOCSTK,EOG,EOD,LVL,CS,ST,LPOS,LLEN,LCUR)=0,(CPOS,LVL(0,""N""))=1,OPTION=$G(OPTION),(XML,PFX,SFX)="""",PATH=$$PATH(DOC)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",15,0)=" K ^TMP(ID,$J)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",16,0)=" I $L($T(TOUCH^XUSCLEAN)) D TOUCH^XUSCLEAN ;Set the keepalive node"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",17,0)=" D INIT^MXMLPRS1,EPOS,CBK(""STARTDOCUMENT""),OPNDOC(DOC)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",18,0)=" F  Q:EOD  D READ,EPOS,@ST^MXMLPRS0:'EOD"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",19,0)=" D UNRESLV^MXMLPRS1,ERROR(17):ST'=2,CBK(""ENDDOCUMENT"")"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",20,0)=" K ^TMP(ID,$J)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",21,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",22,0)=" ; Open a document"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",23,0)=" ; Saves state of current document on stack."
^XTMP("XPDT",7263,"RTN","MXMLPRSE",24,0)=" ; DOCREF=Closed reference to array containing document"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",25,0)=" ; PREFIX=Optional prefix to prepend to document"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",26,0)=" ; SUFFIX=Optional suffix to append to document"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",27,0)="OPNDOC(DOCREF,PREFIX,SUFFIX) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",28,0)=" S:$E(DOCREF)'=""^"" DOCREF=$$EXTRNL(DOCREF)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",29,0)=" Q:'$L(DOCREF)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",30,0)=" D SAVRES(1)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",31,0)=" S DOC=$NA(@DOCREF)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",32,0)=" I '$D(^TMP(ID,$J,""DOC"",DOC)) S ^(DOC)="""""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",33,0)=" E  D ERROR(43)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",34,0)=" S (LPOS,LLEN,LCUR)=0,CPOS=1,(OFX,XML)="""",PFX=$G(PREFIX),SFX=$G(SUFFIX)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",35,0)=" S LCUR=DOC,DOC=$E(DOC,1,$L(DOC)-1) ;*rwf"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",36,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",37,0)=" ; Close current document"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",38,0)=" ; Restores state of previous document from stack."
^XTMP("XPDT",7263,"RTN","MXMLPRSE",39,0)="CLSDOC K ^TMP(ID,$J,""DOC"",DOC_"")"") ;*rwf"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",40,0)=" D SAVRES(0)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",41,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",42,0)=" ; Extract path from filespec"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",43,0)="PATH(DOC) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",44,0)=" N X"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",45,0)=" Q:U[$E(DOC) """""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",46,0)=" F X=""\"",""/"",""]"","":"","""" Q:DOC[X"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",47,0)=" Q $P(DOC,X,1,$L(DOC,X)-1)_X"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",48,0)=" ; Save or restore document state"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",49,0)="SAVRES(SAVE) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",50,0)=" N X"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",51,0)=" S:'SAVE DOCSTK=DOCSTK-1,EOD=DOCSTK=0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",52,0)=" I DOCSTK F X=""LLEN"",""LPOS"",""CPOS"",""LCUR"",""XML"",""PFX"",""SFX"",""OFX"",""DOC"" D"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",53,0)=" .I SAVE S DOCSTK(DOCSTK,X)=@X"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",54,0)=" .E  S @X=DOCSTK(DOCSTK,X)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",55,0)=" I SAVE S DOCSTK=DOCSTK+1"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",56,0)=" E  K DOCSTK(DOCSTK)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",57,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",58,0)=" ; Retrieve text from document"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",59,0)="READ Q:((LLEN-CPOS)>50)!EOD  ;Quit if still have 50 char or EOD"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",60,0)=" I (CPOS'<LLEN)&EOG D CLSDOC S EOG=0 Q  ;At end of text in file"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",61,0)=" N TMP,X"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",62,0)=" D SHIFT Q:$L(XML)>50"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",63,0)=" I EOG!EOD Q  ;Quit at end of document"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",64,0)=" S LPOS=LPOS+1,LCUR=$Q(@LCUR) ;Get next node"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",65,0)=" I LCUR'[DOC S EOG=1 Q  ;At end of global"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",66,0)=" S TMP=@LCUR ;Get next data chunk"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",67,0)=" W:OPTION[""D"" !,$J(LPOS,3)_"":"",TMP,!"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",68,0)=" S OFX=OFX_TMP"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",69,0)=" D SHIFT"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",70,0)=" I LLEN<50 G READ"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",71,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",72,0)=" ;Shift OFX to XML"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",73,0)="SHIFT ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",74,0)=" S XML=$E(XML,CPOS,9999),CPOS=1 ;Drop old"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",75,0)=" I $L(PFX) S OFX=XML_OFX,XML=PFX,PFX="""""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",76,0)=" I $L(OFX) S X=511-$L(XML),XML=XML_$E(OFX,1,X),OFX=$E(OFX,X+1,99999)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",77,0)=" S LLEN=$L(XML)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",78,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",79,0)=" ; Parse name"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",80,0)=" ; ERN=Error to signal if invalid (optional)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",81,0)="NAME(ERN) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",82,0)=" N X"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",83,0)=" D EPOS"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",84,0)=" S X=$E(XML,CPOS)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",85,0)=" I X'?1A,""_:""'[X D:$G(ERN) ERROR(ERN,X) Q """""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",86,0)=" Q $$NAMETKN(.ERN)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",87,0)=" ; Parse name token"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",88,0)=" ; ERN=Error to signal if invalid (optional)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",89,0)="NAMETKN(ERN) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",90,0)=" N X,Y"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",91,0)=" D EPOS"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",92,0)=" F X=CPOS:1:LLEN+1 S Y=$E(XML,X) I Y'?1AN,"".-_:""'[Y Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",93,0)=" S Y=$E(XML,CPOS,X-1),CPOS=X"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",94,0)=" I '$L(Y),$G(ERN) D ERROR(ERN,Y)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",95,0)=" Q Y"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",96,0)=" ; Parse quote-enclosed value"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",97,0)=" ; ERF=If set, signal error if not found"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",98,0)=" ; FLG=Special flag: 0=attribute literal, 1=general entity literal"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",99,0)=" ;     2=parameter entity literal"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",100,0)=" ; Returns value less quotes with normalized whitespace"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",101,0)="VALUE(ERF,FLG) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",102,0)=" N DLM,CHR,RTN,EXC"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",103,0)=" D WS()"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",104,0)=" S DLM=$S($$NEXT(QT):QT,$$NEXT(""'""):""'"",1:""""),RTN="""",FLG=+$G(FLG),EXC=$S(FLG=2:"""",1:""<"")"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",105,0)=" I DLM="""" D:$G(ERF) EPOS,ERROR(11) Q RTN"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",106,0)=" F  S CHR=$E(XML,CPOS) Q:DLM=CHR!(EXC[CHR)!EOD  D"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",107,0)=" .I $$NEXT(""&#"") S RTN=RTN_$$CHENTITY"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",108,0)=" .E  I 'FLG,$$NEXT(""&"") S RTN=RTN_$$ENTITY"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",109,0)=" .E  S RTN=RTN_CHR,CPOS=CPOS+1"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",110,0)=" .D:CPOS>LLEN READ"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",111,0)=" I DLM=CHR S CPOS=CPOS+1"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",112,0)=" E  D EPOS,ERROR($S('$L(CHR):12,EXC[CHR:13,1:12)) Q """""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",113,0)=" Q $$NMLWS(RTN)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",114,0)=" ; Normalize whitespace"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",115,0)=" ; Note: used as input transform for Entity Catalog, so can't depend"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",116,0)=" ; on any environment variables."
^XTMP("XPDT",7263,"RTN","MXMLPRSE",117,0)=" ; TXT=Text to normalize"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",118,0)=" ; Returns text stripped of leading and trailing whitespace and with"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",119,0)=" ; imbedded contiguous whitespace reduced to single space."
^XTMP("XPDT",7263,"RTN","MXMLPRSE",120,0)="NMLWS(TXT,FG) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",121,0)=" N Z,CRLF"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",122,0)=" S CRLF=$C(13,10)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",123,0)=" ;Normalize CRLF to one SP first"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",124,0)=" F  S Z=$F(TXT,CRLF) Q:'Z  S TXT=$P(TXT,CRLF,1)_"" ""_$P(TXT,CRLF,2,999)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",125,0)=" S TXT=$TR(TXT,$C(9,10,13,32),""    "")"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",126,0)=" ;For CDATA or unk, this is where we should stop"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",127,0)=" Q:'$G(FG) TXT"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",128,0)=" F Z=1:1 Q:$E(TXT,Z)'="" """
^XTMP("XPDT",7263,"RTN","MXMLPRSE",129,0)=" S TXT=$E(TXT,Z,9999)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",130,0)=" F Z=$L(TXT):-1 Q:$E(TXT,Z)'="" """
^XTMP("XPDT",7263,"RTN","MXMLPRSE",131,0)=" S TXT=$E(TXT,1,Z)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",132,0)=" F Z=1:1:$L(TXT) D:$E(TXT,Z)="" """
^XTMP("XPDT",7263,"RTN","MXMLPRSE",133,0)=" .F  Q:$E(TXT,Z+1)'="" ""  S $E(TXT,Z+1)="""""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",134,0)=" Q TXT"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",135,0)=" ; Process parameter entity if found"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",136,0)="DOPARAM F  D WS() Q:EOD!'$$NEXT(""%"")  I $$ENTITY(1)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",137,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",138,0)=" ; Resolve general/parameter/character entity"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",139,0)=" ; PARAM=1: parameter; PARAM=0: general or character (default)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",140,0)="ENTITY(PARAM) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",141,0)=" N NAME,APND"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",142,0)=" S PARAM=+$G(PARAM)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",143,0)=" I 'PARAM,$$NEXT(""#"") Q $$CHENTITY"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",144,0)=" S NAME=$S(PARAM:""%"",1:"""")_$$NAME(2)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",145,0)=" Q:'$$NEXT("";"",3) """""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",146,0)=" ;Handle the common ones inline"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",147,0)=" S APND=$S(NAME=""amp"":""&"",NAME=""lt"":""<"",NAME=""gt"":"">"",NAME=""quot"":$C(34),NAME=""apos"":""'"",1:"""")"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",148,0)=" Q:$L(APND) APND"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",149,0)=" I $D(^TMP(ID,$J,""UNP"",NAME)) D ERROR(40,NAME) Q """""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",150,0)=" I '$D(^TMP(ID,$J,""ENT"",NAME)) D ERROR(14,NAME) Q """""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",151,0)=" S APND=$S(PARAM:"" "",1:"""")"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",152,0)=" D OPNDOC(^TMP(ID,$J,""ENT"",NAME),APND,APND)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",153,0)=" Q """""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",154,0)=" ; Parse character entity reference"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",155,0)=" ; Returns character equivalent"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",156,0)="CHENTITY() ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",157,0)=" N DIGIT,BASE,DIGITS,VAL"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",158,0)=" S BASE=$S($$NEXT(""x""):16,1:10),DIGITS=""0123456789""_$S(BASE=16:""ABCDEF"",1:""""),VAL=0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",159,0)=" F CPOS=CPOS:1:LLEN+1 Q:$$NEXT("";"")!EOD  D"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",160,0)=" .S DIGIT=$F(DIGITS,$$UP^XLFSTR($E(XML,CPOS)))-2,VAL=VAL*BASE+DIGIT"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",161,0)=" .D:DIGIT<0 ERROR(19)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",162,0)=" I VAL<32,WS'[$C(VAL) D ERROR(19)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",163,0)=" Q $C(VAL)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",164,0)=" ; Set an entity value"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",165,0)="SETENT(NAME,VAL) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",166,0)=" K ^TMP(ID,$J,""ENT"",NAME)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",167,0)=" S ^(NAME)=$NA(^(NAME)),^(NAME,1)=VAL"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",168,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",169,0)=" ; Process all attributes"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",170,0)="ATTRIBS(ENAME,ATTR) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",171,0)=" N TYP,MOD,DEF,ANAME"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",172,0)=" K ATTR"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",173,0)=" F  Q:'$$ATTRIB(ENAME,.ATTR)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",174,0)=" I OPTION[""V"" D"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",175,0)=" .S ANAME=""$"""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",176,0)=" .F  S ANAME=$O(^TMP(ID,$J,""ATT"",ENAME,ANAME)) Q:'$L(ANAME)  D"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",177,0)=" ..S TYP=^(ANAME),MOD=$P(TYP,""^"",2),DEF=$P(TYP,""^"",3,9999),TYP=+TYP"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",178,0)=" ..I MOD=1!(MOD=3),'$D(ATTR(ANAME)) D ERROR(36,ANAME) Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",179,0)=" ..I MOD=3,ATTR(ANAME)'=DEF D ERROR(37,ATTR(ANAME)) Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",180,0)=" ..I MOD=2,'$D(ATTR(ANAME)) Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",181,0)=" ..S:'$D(ATTR(ANAME)) ATTR(ANAME)=DEF"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",182,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",183,0)=" ; Parse attribute=value sequence"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",184,0)=" ; ENAME=Element name to which attribute belongs"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",185,0)=" ; ATTR=Local array (by reference) to receive attribute value."
^XTMP("XPDT",7263,"RTN","MXMLPRSE",186,0)=" ;      Format is ATTR(""<attribute name>"")=""<attribute value>"""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",187,0)=" ; Returns 1 if successful, 0 if not."
^XTMP("XPDT",7263,"RTN","MXMLPRSE",188,0)="ATTRIB(ENAME,ATTR) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",189,0)=" N ANAME"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",190,0)=" D READ,WS() ;p116"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",191,0)=" S ANAME=$$NAME"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",192,0)=" Q:ANAME="""" 0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",193,0)=" I $D(ATTR(ANAME)) D ERROR(4,ANAME) Q 0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",194,0)=" D:'$D(^TMP(ID,$J,""ATT"",ENAME,ANAME)) ERROR(29,ANAME)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",195,0)=" D READ,WS() ;p116"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",196,0)=" Q:'$$NEXT(""="",3) 0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",197,0)=" D WS()"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",198,0)=" S ATTR(ANAME)=$$VALUE(1)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",199,0)=" D CHKVAL^MXMLPRS1(ENAME,ANAME,ATTR(ANAME))"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",200,0)=" Q 1"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",201,0)=" ; Parse a processing instruction"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",202,0)=" ; Returns 1 if PI found, 0 if not."
^XTMP("XPDT",7263,"RTN","MXMLPRSE",203,0)="PI() N PNAME,ARGS,DONE"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",204,0)=" Q:'$$NEXT(""<?"") 0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",205,0)=" S PNAME=$$NAME(2),ARGS=0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",206,0)=" I $$UP^XLFSTR(PNAME)=""XML"" D ERROR(9) Q 0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",207,0)=" D WS(1)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",208,0)=" F  S DONE=$F(XML,""?>"",CPOS) D  Q:DONE!EOD"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",209,0)=" .S ARGS=ARGS+1,ARGS(ARGS)=$E(XML,CPOS,$S(DONE:DONE-3,1:LLEN))"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",210,0)=" .S CPOS=$S(DONE:DONE,1:LLEN+1)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",211,0)=" .D READ"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",212,0)=" I EOD D ERROR(7) Q 0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",213,0)=" D CBK(""PI"",PNAME,.ARGS)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",214,0)=" Q 1"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",215,0)=" ; Parse a comment"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",216,0)=" ; Returns 1 if comment found, 0 if not."
^XTMP("XPDT",7263,"RTN","MXMLPRSE",217,0)="COMMENT() Q $$PARSCT(""<!--"",""--"","">"",""COMMENT"")"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",218,0)=" ; Parse a CDATA section"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",219,0)=" ; Returns 1 if found, 0 if not."
^XTMP("XPDT",7263,"RTN","MXMLPRSE",220,0)="CDATA() Q $$PARSCT(""<![CDATA["",""]]>"","""",""CHARACTERS"")"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",221,0)=" ; Parse a section (for CDATA and COMMENT)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",222,0)=" ; BGN=Beginning delimiter"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",223,0)=" ; END=Ending delimiter"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",224,0)=" ; TRL=Trailing delimiter"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",225,0)=" ; TYP=Event type"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",226,0)="PARSCT(BGN,END,TRL,TYP) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",227,0)=" N X"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",228,0)=" Q:'$$NEXT(BGN) 0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",229,0)=" D EPOS"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",230,0)=" I 'LVL,TYP'=""COMMENT"" D ERROR(6) Q 0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",231,0)=" F  S X=$F(XML,END,CPOS) D  Q:X!EOD"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",232,0)=" .D CBK(TYP,$E(XML,CPOS,$S(X:X-$L(END)-1,1:LLEN)))"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",233,0)=" .S CPOS=$S(X:X,1:LLEN+1)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",234,0)=" .D READ,EPOS"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",235,0)=" I EOD D ERROR(7) Q 0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",236,0)=" I $L(TRL),$$NEXT(TRL,3)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",237,0)=" Q 1"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",238,0)=" ; Fetch an external entity from file or entity catalog"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",239,0)=" ; SYS=System identifier (i.e., a URL)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",240,0)=" ; PUB=Public identifier (i.e., Entity Catalog ID) - optional"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",241,0)=" ; GBL=Optional global root to receive entity content"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",242,0)=" ; Returns global reference or null if error"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",243,0)="EXTRNL(SYS,PUB,GBL) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",244,0)=" N X,Y"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",245,0)=" S PUB=$$NMLWS($G(PUB)),GBL=$G(GBL)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",246,0)=" I '$L(GBL) D CBK(""EXTERNAL"",.SYS,.PUB,.GBL) Q:$L(GBL) GBL"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",247,0)=" I $L(PUB) D  Q:X $NA(^MXML(950,X,1))"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",248,0)=" .S Y=$E(PUB,1,30),X=0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",249,0)=" .F  S X=$O(^MXML(950,""B"",Y,X)) Q:'X  Q:$G(^MXML(950,X,0))=PUB"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",250,0)=" S:'$L(GBL) GBL=$$TMPGBL"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",251,0)=" S:$$PATH(SYS)="""" SYS=PATH_SYS"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",252,0)=" S X=$S($$FTG^%ZISH(SYS,"""",$NA(@GBL@(1)),$QL(GBL)+1):GBL,1:"""")"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",253,0)=" D:'$L(X) ERROR(30,$S($L(SYS):SYS,1:PUB))"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",254,0)=" Q X"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",255,0)=" ; Return a unique scratch global reference"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",256,0)="TMPGBL() N SUB"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",257,0)=" S SUB=$O(^TMP(ID,$J,$C(1)),-1)+1,^(SUB)="""""
^XTMP("XPDT",7263,"RTN","MXMLPRSE",258,0)=" Q $NA(^(SUB))"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",259,0)=" ; Returns a SYSTEM and/or PUBLIC id"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",260,0)=" ; SYS=Returned SYSTEM id"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",261,0)=" ; PUB=Returned PUBLIC id"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",262,0)=" ; FLG=If set, SYSTEM id is optional after PUBLIC id"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",263,0)=" ; Optional return value: 0=neither, 1=PUBLIC, 2=SYSTEM"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",264,0)="SYSPUB(SYS,PUB,FLG) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",265,0)=" N RTN"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",266,0)=" I $$NEXT(""PUBLIC"") D"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",267,0)=" .D WS(1)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",268,0)=" .S PUB=$$VALUE(1),SYS=$$VALUE('$G(FLG)),RTN=1"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",269,0)=" E  I $$NEXT(""SYSTEM"") D"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",270,0)=" .D WS(1)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",271,0)=" .S PUB="""",SYS=$$VALUE(1),RTN=2"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",272,0)=" E  S (SYS,PUB)="""",RTN=0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",273,0)=" Q:$Q RTN"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",274,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",275,0)=" ; Save current document location for error reporting"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",276,0)=" ; See EPOS^MXMLPRS0"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",277,0)="EPOS S ERR(""XML"")=XML,ERR(""POS"")=CPOS,ERR(""LIN"")=LPOS"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",278,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",279,0)=" ; Setup error information"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",280,0)="ERROR(ERN,ARG) ;"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",281,0)=" N DIHELP,DIMSG,DIERR,MSG"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",282,0)=" D BLD^DIALOG(9500000+ERN,"""","""",""MSG"","""")"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",283,0)=" S ERR(""NUM"")=ERN"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",284,0)=" S ERR(""SEV"")=$S($G(DIHELP):0,$G(DIMSG):1,1:2)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",285,0)=" S ERR(""MSG"")=$G(MSG(1))"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",286,0)=" S ERR(""ARG"")=$G(ARG)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",287,0)=" I OPTION'[""W""!ERR(""SEV""),OPTION[""V""!(ERR(""SEV"")'=1) D CBK(""ERROR"",.ERR)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",288,0)=" S:ERR(""SEV"")=2!(OPTION[ERR(""SEV"")) EOD=-1                             ; Stop parsing on severe error"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",289,0)=" Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",290,0)=" ; Shortcuts to functions/procedures defined elsewhere"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",291,0)="WS(X) Q:$Q $$WS^MXMLPRS0(.X)"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",292,0)=" D WS^MXMLPRS0(.X) Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",293,0)="CBK(X,Y1,Y2,Y3,Y4) D CBK^MXMLPRS0(.X,.Y1,.Y2,.Y3,.Y4) Q"
^XTMP("XPDT",7263,"RTN","MXMLPRSE",294,0)="NEXT(X,Y) Q $$NEXT^MXMLPRS0(.X,.Y)"
^XTMP("XPDT",7263,"VER")="8.0^22.0"
^XTMP("XPDT",7284)="1"
^XTMP("XPDT",7284,"BLD",1093,0)="XU*8.0*499^KERNEL^0^3081014^y^^"
^XTMP("XPDT",7284,"BLD",1093,1,0)="^^2^2^3080529^"
^XTMP("XPDT",7284,"BLD",1093,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7284,"BLD",1093,1,2,0)="XU*8*499  Get Client IP when connecting via SSH."
^XTMP("XPDT",7284,"BLD",1093,4,0)="^9.64PA^8989.3^1"
^XTMP("XPDT",7284,"BLD",1093,4,8989.3,0)="8989.3"
^XTMP("XPDT",7284,"BLD",1093,4,8989.3,2,0)="^9.641^8989.3^1"
^XTMP("XPDT",7284,"BLD",1093,4,8989.3,2,8989.3,0)="KERNEL SYSTEM PARAMETERS  (File-top level)"
^XTMP("XPDT",7284,"BLD",1093,4,8989.3,2,8989.3,1,0)="^9.6411^250^1"
^XTMP("XPDT",7284,"BLD",1093,4,8989.3,2,8989.3,1,250,0)="PEER SYSTEMS"
^XTMP("XPDT",7284,"BLD",1093,4,8989.3,222)="y^y^p^^^^n^^n"
^XTMP("XPDT",7284,"BLD",1093,4,8989.3,224)=""
^XTMP("XPDT",7284,"BLD",1093,4,"APDD",8989.3,8989.3)=""
^XTMP("XPDT",7284,"BLD",1093,4,"APDD",8989.3,8989.3,250)=""
^XTMP("XPDT",7284,"BLD",1093,4,"B",8989.3,8989.3)=""
^XTMP("XPDT",7284,"BLD",1093,6)="^407"
^XTMP("XPDT",7284,"BLD",1093,6.3)="14"
^XTMP("XPDT",7284,"BLD",1093,"INID")="^y"
^XTMP("XPDT",7284,"BLD",1093,"INIT")="POST^XU8P499"
^XTMP("XPDT",7284,"BLD",1093,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7284,"BLD",1093,"KRN",.4,0)=".4"
^XTMP("XPDT",7284,"BLD",1093,"KRN",.401,0)=".401"
^XTMP("XPDT",7284,"BLD",1093,"KRN",.402,0)=".402"
^XTMP("XPDT",7284,"BLD",1093,"KRN",.403,0)=".403"
^XTMP("XPDT",7284,"BLD",1093,"KRN",.403,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7284,"BLD",1093,"KRN",.403,"NM",1,0)="XUSITEPARM    FILE #8989.3^8989.3^0"
^XTMP("XPDT",7284,"BLD",1093,"KRN",.403,"NM","B","XUSITEPARM    FILE #8989.3",1)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",.5,0)=".5"
^XTMP("XPDT",7284,"BLD",1093,"KRN",.84,0)=".84"
^XTMP("XPDT",7284,"BLD",1093,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7284,"BLD",1093,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",0)="^9.68A^14^13"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",1,0)="ZIS4ONT^^0^B29872561"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",2,0)="ZIS4GTM^^0^B20384143"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",3,0)="ZTEDIT2^^0^B16339351"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",4,0)="ZIS^^0^B20827574"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",5,0)="ZIS1^^0^B26102976"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",7,0)="ZIS3^^0^B14236085"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",8,0)="ZIS5^^0^B13269875"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",9,0)="ZISFONT^^0^B9782391"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",10,0)="ZISFGTM^^0^B8623260"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",11,0)="ZOSVONT^^0^B22340698"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",12,0)="XUSRB4^^0^B15887142"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",13,0)="ZOSVGTM^^0^B14876188"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM",14,0)="ZOSVGUX^^0^B33819105"
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","XUSRB4",12)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZIS",4)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZIS1",5)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZIS3",7)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZIS4GTM",2)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZIS4ONT",1)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZIS5",8)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZISFGTM",10)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZISFONT",9)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZOSVGTM",13)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZOSVGUX",14)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZOSVONT",11)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",9.8,"NM","B","ZTEDIT2",3)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",19,0)="19"
^XTMP("XPDT",7284,"BLD",1093,"KRN",19,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7284,"BLD",1093,"KRN",19,"NM",1,0)="XUSERWHERE^^0"
^XTMP("XPDT",7284,"BLD",1093,"KRN",19,"NM","B","XUSERWHERE",1)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7284,"BLD",1093,"KRN",101,0)="101"
^XTMP("XPDT",7284,"BLD",1093,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7284,"BLD",1093,"KRN",771,0)="771"
^XTMP("XPDT",7284,"BLD",1093,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7284,"BLD",1093,"KRN",870,0)="870"
^XTMP("XPDT",7284,"BLD",1093,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7284,"BLD",1093,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7284,"BLD",1093,"KRN",8994,0)="8994"
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",.4,.4)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",.401,.401)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",.402,.402)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",.403,.403)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",.5,.5)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",.84,.84)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",19,19)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",101,101)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",771,771)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",870,870)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7284,"BLD",1093,"KRN","B",8994,8994)=""
^XTMP("XPDT",7284,"BLD",1093,"QDEF")="^^^^YES"
^XTMP("XPDT",7284,"BLD",1093,"QUES",0)="^9.62^^"
^XTMP("XPDT",7284,"FIA",8989.3)="KERNEL SYSTEM PARAMETERS"
^XTMP("XPDT",7284,"FIA",8989.3,0)="^XTV(8989.3,"
^XTMP("XPDT",7284,"FIA",8989.3,0,0)="8989.3P"
^XTMP("XPDT",7284,"FIA",8989.3,0,1)="y^y^p^^^^n^^n"
^XTMP("XPDT",7284,"FIA",8989.3,0,10)=""
^XTMP("XPDT",7284,"FIA",8989.3,0,11)=""
^XTMP("XPDT",7284,"FIA",8989.3,0,"RLRO")=""
^XTMP("XPDT",7284,"FIA",8989.3,0,"VR")="8.0^XU"
^XTMP("XPDT",7284,"FIA",8989.3,8989.3)="1"
^XTMP("XPDT",7284,"FIA",8989.3,8989.3,250)=""
^XTMP("XPDT",7284,"INIT")="POST^XU8P499"
^XTMP("XPDT",7284,"KRN",.403,12,-1)="0^1"
^XTMP("XPDT",7284,"KRN",.403,12,0)="XUSITEPARM^^^^2941116^^^8989.3^0^0^1"
^XTMP("XPDT",7284,"KRN",.403,12,40,0)="^.4031I^5^5"
^XTMP("XPDT",7284,"KRN",.403,12,40,1,0)="1^^1,1^2"
^XTMP("XPDT",7284,"KRN",.403,12,40,1,1)="Page 1"
^XTMP("XPDT",7284,"KRN",.403,12,40,1,40,0)="^.4032IP^52^2"
^XTMP("XPDT",7284,"KRN",.403,12,40,1,40,51,0)="XUSITEPARM 0^1^1,1^d"
^XTMP("XPDT",7284,"KRN",.403,12,40,1,40,52,0)="XUSITEPARM 1^2^2,1^e"
^XTMP("XPDT",7284,"KRN",.403,12,40,2,0)="3^^1,1^4^2"
^XTMP("XPDT",7284,"KRN",.403,12,40,2,1)="Page 3"
^XTMP("XPDT",7284,"KRN",.403,12,40,2,40,0)="^.4032IP^53^2"
^XTMP("XPDT",7284,"KRN",.403,12,40,2,40,51,0)="XUSITEPARM 0^1^1,1^d"
^XTMP("XPDT",7284,"KRN",.403,12,40,2,40,53,0)="XUSITEPARM 3^2^4,1^e"
^XTMP("XPDT",7284,"KRN",.403,12,40,3,0)="2^^1,1^3^1"
^XTMP("XPDT",7284,"KRN",.403,12,40,3,1)="Page 2"
^XTMP("XPDT",7284,"KRN",.403,12,40,3,40,0)="^.4032IP^56^4"
^XTMP("XPDT",7284,"KRN",.403,12,40,3,40,51,0)="XUSITEPARM 0^1^1,1^d"
^XTMP("XPDT",7284,"KRN",.403,12,40,3,40,54,0)="XUSITEPARM 2^2^4,1^e"
^XTMP("XPDT",7284,"KRN",.403,12,40,3,40,55,0)="XUSITEPARM 2.1^3^5,12^e"
^XTMP("XPDT",7284,"KRN",.403,12,40,3,40,55,2)="4^^^^"
^XTMP("XPDT",7284,"KRN",.403,12,40,3,40,56,0)="XUSITEPARM 2.2^4^12,12^e"
^XTMP("XPDT",7284,"KRN",.403,12,40,3,40,56,2)="4"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,0)="4^^1,1^5^3"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,1)="Page 4"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,40,0)="^.4032IP^61^6"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,40,51,0)="XUSITEPARM 0^1^1,1^d"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,40,57,0)="XUSITEPARM 4^2^4,1^e"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,40,58,0)="XUSITEPARM 4.1^3^8,4^e"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,40,58,2)="4"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,40,59,0)="XUSITEPARM 4.2^4^8,43^e"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,40,59,2)="4"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,40,60,0)="XUSITEPARM 4.4^6^13,43^e"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,40,60,2)="4"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,40,61,0)="XUSITEPARM 4.3^5^13,4^e"
^XTMP("XPDT",7284,"KRN",.403,12,40,4,40,61,2)="4"
^XTMP("XPDT",7284,"KRN",.403,12,40,5,0)="5^^1,1^1^4"
^XTMP("XPDT",7284,"KRN",.403,12,40,5,1)="Page 5"
^XTMP("XPDT",7284,"KRN",.403,12,40,5,40,0)="^.4032IP^181^2"
^XTMP("XPDT",7284,"KRN",.403,12,40,5,40,51,0)="XUSITEPARM 0^1^1,1^d"
^XTMP("XPDT",7284,"KRN",.403,12,40,5,40,181,0)="XUSITEPARM 5^2^4,1^e"
^XTMP("XPDT",7284,"KRN",.404,51,0)="XUSITEPARM 0^8989.3^"
^XTMP("XPDT",7284,"KRN",.404,51,40,0)="^.4044I^3^2"
^XTMP("XPDT",7284,"KRN",.404,51,40,2,0)="2^Kernel Site Parameter edit^1"
^XTMP("XPDT",7284,"KRN",.404,51,40,2,2)="^^1,24^1"
^XTMP("XPDT",7284,"KRN",.404,51,40,3,0)="1^DOMAIN^3"
^XTMP("XPDT",7284,"KRN",.404,51,40,3,1)=".01"
^XTMP("XPDT",7284,"KRN",.404,51,40,3,2)="2,20^42^2,13"
^XTMP("XPDT",7284,"KRN",.404,52,0)="XUSITEPARM 1^8989.3"
^XTMP("XPDT",7284,"KRN",.404,52,40,0)="^.4044I^20^18"
^XTMP("XPDT",7284,"KRN",.404,52,40,1,0)="1^DEFAULT # OF ATTEMPTS^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,1,1)="202"
^XTMP("XPDT",7284,"KRN",.404,52,40,1,2)="3,31^3^3,8"
^XTMP("XPDT",7284,"KRN",.404,52,40,1,3)="5"
^XTMP("XPDT",7284,"KRN",.404,52,40,2,0)="3^DEFAULT LOCK-OUT TIME^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,2,1)="203"
^XTMP("XPDT",7284,"KRN",.404,52,40,2,2)="4,31^4^4,8"
^XTMP("XPDT",7284,"KRN",.404,52,40,2,3)="30"
^XTMP("XPDT",7284,"KRN",.404,52,40,3,0)="4^DEFAULT MULTIPLE SIGN-ON^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,3,1)="204"
^XTMP("XPDT",7284,"KRN",.404,52,40,3,2)="5,31^8^5,5"
^XTMP("XPDT",7284,"KRN",.404,52,40,3,3)="YES"
^XTMP("XPDT",7284,"KRN",.404,52,40,3,11)="D EN^DDIOL(""If you select 'Only one IP' be sure to put a value into the MULTIPLE SIGN-ON LIMIT field so users can sign-on at least once."")"
^XTMP("XPDT",7284,"KRN",.404,52,40,4,0)="15^ASK DEVICE TYPE AT SIGN-ON^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,4,1)="205"
^XTMP("XPDT",7284,"KRN",.404,52,40,4,2)="12,69^3^12,41"
^XTMP("XPDT",7284,"KRN",.404,52,40,4,3)="ASK"
^XTMP("XPDT",7284,"KRN",.404,52,40,5,0)="6^DEFAULT AUTO-MENU^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,5,1)="206"
^XTMP("XPDT",7284,"KRN",.404,52,40,5,2)="6,31^3^6,12"
^XTMP("XPDT",7284,"KRN",.404,52,40,5,3)="NO"
^XTMP("XPDT",7284,"KRN",.404,52,40,6,0)="9^DEFAULT TYPE-AHEAD^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,6,1)="209"
^XTMP("XPDT",7284,"KRN",.404,52,40,6,2)="8,31^3^8,11"
^XTMP("XPDT",7284,"KRN",.404,52,40,6,3)="YES"
^XTMP("XPDT",7284,"KRN",.404,52,40,7,0)="10^DEFAULT TIMED-READ (SECONDS)^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,7,1)="210"
^XTMP("XPDT",7284,"KRN",.404,52,40,7,2)="9,31^5^9,1"
^XTMP("XPDT",7284,"KRN",.404,52,40,7,3)="300"
^XTMP("XPDT",7284,"KRN",.404,52,40,8,0)="12^BYPASS DEVICE LOCK-OUT^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,8,1)="211"
^XTMP("XPDT",7284,"KRN",.404,52,40,8,2)="11,31^3^11,7"
^XTMP("XPDT",7284,"KRN",.404,52,40,9,0)="14^LIFETIME OF VERIFY CODE^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,9,1)="214"
^XTMP("XPDT",7284,"KRN",.404,52,40,9,2)="12,31^3^12,6"
^XTMP("XPDT",7284,"KRN",.404,52,40,9,3)="90"
^XTMP("XPDT",7284,"KRN",.404,52,40,11,0)="8^DEFAULT LANGUAGE^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,11,1)="207"
^XTMP("XPDT",7284,"KRN",.404,52,40,11,2)="7,31^10^7,13"
^XTMP("XPDT",7284,"KRN",.404,52,40,12,0)="16^DEFAULT INSTITUTION^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,12,1)="217"
^XTMP("XPDT",7284,"KRN",.404,52,40,12,2)="13,31^30^13,10"
^XTMP("XPDT",7284,"KRN",.404,52,40,13,0)="17^AUTO-GENERATE ACCESS CODES^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,13,1)="11"
^XTMP("XPDT",7284,"KRN",.404,52,40,13,2)="14,31^3^14,3"
^XTMP("XPDT",7284,"KRN",.404,52,40,14,0)="2^AGENCY CODE^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,14,1)="9"
^XTMP("XPDT",7284,"KRN",.404,52,40,14,2)="3,66^9^3,53"
^XTMP("XPDT",7284,"KRN",.404,52,40,14,3)="VA"
^XTMP("XPDT",7284,"KRN",.404,52,40,16,0)="7^DEFAULT AUTO SIGN-ON^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,16,1)="218"
^XTMP("XPDT",7284,"KRN",.404,52,40,16,2)="6,66^8^6,44"
^XTMP("XPDT",7284,"KRN",.404,52,40,17,0)="11^BROKER TIMEOUT^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,17,1)="230"
^XTMP("XPDT",7284,"KRN",.404,52,40,17,2)="9,66^5^9,50"
^XTMP("XPDT",7284,"KRN",.404,52,40,17,3)="180"
^XTMP("XPDT",7284,"KRN",.404,52,40,18,0)="5^MULTIPLE SIGN-ON LIMIT^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,18,1)="219"
^XTMP("XPDT",7284,"KRN",.404,52,40,18,2)="5,66^3^5,42"
^XTMP("XPDT",7284,"KRN",.404,52,40,19,0)="18^AUTO-GENERATE VERIFY CODES^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,19,1)="11.2"
^XTMP("XPDT",7284,"KRN",.404,52,40,19,2)="15,31^3^15,3"
^XTMP("XPDT",7284,"KRN",.404,52,40,20,0)="13^CCOW TOKEN TIMEOUT^3"
^XTMP("XPDT",7284,"KRN",.404,52,40,20,1)="30.1"
^XTMP("XPDT",7284,"KRN",.404,52,40,20,2)="11,66^5^11,46"
^XTMP("XPDT",7284,"KRN",.404,53,0)="XUSITEPARM 3^8989.3"
^XTMP("XPDT",7284,"KRN",.404,53,40,0)="^.4044I^9^8"
^XTMP("XPDT",7284,"KRN",.404,53,40,1,0)="1^MAX SPOOL LINES PER USER^3"
^XTMP("XPDT",7284,"KRN",.404,53,40,1,1)="31.1"
^XTMP("XPDT",7284,"KRN",.404,53,40,1,2)="1,31^7^1,5"
^XTMP("XPDT",7284,"KRN",.404,53,40,2,0)="2^MAX SPOOL DOCUMENTS PER USER^3"
^XTMP("XPDT",7284,"KRN",.404,53,40,2,1)="31.2"
^XTMP("XPDT",7284,"KRN",.404,53,40,2,2)="2,31^3^2,1"
^XTMP("XPDT",7284,"KRN",.404,53,40,3,0)="3^MAX SPOOL DOCUMENT LIFE-SPAN^3"
^XTMP("XPDT",7284,"KRN",.404,53,40,3,1)="31.3"
^XTMP("XPDT",7284,"KRN",.404,53,40,3,2)="3,31^3^3,1"
^XTMP("XPDT",7284,"KRN",.404,53,40,5,0)="8^NEW PERSON IDENTIFIERS^3"
^XTMP("XPDT",7284,"KRN",.404,53,40,5,1)="21"
^XTMP("XPDT",7284,"KRN",.404,53,40,5,2)="14,4^65^13,1"
^XTMP("XPDT",7284,"KRN",.404,53,40,6,0)="5^DEFAULT DIRECTORY FOR HFS^3"
^XTMP("XPDT",7284,"KRN",.404,53,40,6,1)="320"
^XTMP("XPDT",7284,"KRN",.404,53,40,6,2)="7,28^50^7,1"
^XTMP("XPDT",7284,"KRN",.404,53,40,6,4)="1"
^XTMP("XPDT",7284,"KRN",.404,53,40,7,0)="7^DNS IP^3"
^XTMP("XPDT",7284,"KRN",.404,53,40,7,1)="51"
^XTMP("XPDT",7284,"KRN",.404,53,40,7,2)="11,9^60^11,1"
^XTMP("XPDT",7284,"KRN",.404,53,40,7,4)="1"
^XTMP("XPDT",7284,"KRN",.404,53,40,8,0)="4^MIXED OS^3"
^XTMP("XPDT",7284,"KRN",.404,53,40,8,1)=".05"
^XTMP("XPDT",7284,"KRN",.404,53,40,8,2)="6,28^9^6,18"
^XTMP("XPDT",7284,"KRN",.404,53,40,8,3)="No"
^XTMP("XPDT",7284,"KRN",.404,53,40,8,12)="D UNED^DDSUTL(6,,,$S($$GET^DDSVAL(8989.3,1,.05):0,1:1)),REQ^DDSUTL(6,,,$$GET^DDSVAL(8989.3,1,.05))"
^XTMP("XPDT",7284,"KRN",.404,53,40,8,13)="I '$$GET^DDSVAL(8989.3,1,.05) D PUT^DDSVAL(DIE,.DA,320.2,"""",,""I"")"
^XTMP("XPDT",7284,"KRN",.404,53,40,9,0)="6^SECONDARY HFS DIRECTORY^3"
^XTMP("XPDT",7284,"KRN",.404,53,40,9,1)="320.2"
^XTMP("XPDT",7284,"KRN",.404,53,40,9,2)="8,28^49^8,3"
^XTMP("XPDT",7284,"KRN",.404,53,40,9,4)="0"
^XTMP("XPDT",7284,"KRN",.404,53,40,9,11)="D UNED^DDSUTL(6,,,$S($$GET^DDSVAL(8989.3,1,.05):0,1:1))"
^XTMP("XPDT",7284,"KRN",.404,54,0)="XUSITEPARM 2^8989.3"
^XTMP("XPDT",7284,"KRN",.404,54,40,0)="^.4044I^3^3"
^XTMP("XPDT",7284,"KRN",.404,54,40,1,0)="1^Vol Set      Max Sign-ons       Log RT?^1"
^XTMP("XPDT",7284,"KRN",.404,54,40,1,2)="^^1,12^1"
^XTMP("XPDT",7284,"KRN",.404,54,40,2,0)="2^ROUTINE MONITORING^3"
^XTMP("XPDT",7284,"KRN",.404,54,40,2,1)="9.8"
^XTMP("XPDT",7284,"KRN",.404,54,40,2,2)="8,22^8^8,2"
^XTMP("XPDT",7284,"KRN",.404,54,40,3,0)="3^Routine Namespace's^1"
^XTMP("XPDT",7284,"KRN",.404,54,40,3,2)="^^9,12^1"
^XTMP("XPDT",7284,"KRN",.404,55,0)="XUSITEPARM 2.1^8989.304"
^XTMP("XPDT",7284,"KRN",.404,55,40,0)="^.4044I^3^3"
^XTMP("XPDT",7284,"KRN",.404,55,40,1,0)="1^^3"
^XTMP("XPDT",7284,"KRN",.404,55,40,1,1)=".01"
^XTMP("XPDT",7284,"KRN",.404,55,40,1,2)="1,1^9"
^XTMP("XPDT",7284,"KRN",.404,55,40,2,0)="2^^3"
^XTMP("XPDT",7284,"KRN",.404,55,40,2,1)="2"
^XTMP("XPDT",7284,"KRN",.404,55,40,2,2)="1,14^4"
^XTMP("XPDT",7284,"KRN",.404,55,40,3,0)="3^^3"
^XTMP("XPDT",7284,"KRN",.404,55,40,3,1)="6"
^XTMP("XPDT",7284,"KRN",.404,55,40,3,2)="1,33^3"
^XTMP("XPDT",7284,"KRN",.404,56,0)="XUSITEPARM 2.2^8989.309"
^XTMP("XPDT",7284,"KRN",.404,56,40,0)="^.4044I^1^1"
^XTMP("XPDT",7284,"KRN",.404,56,40,1,0)="1^^3"
^XTMP("XPDT",7284,"KRN",.404,56,40,1,1)=".01"
^XTMP("XPDT",7284,"KRN",.404,56,40,1,2)="2,5^8"
^XTMP("XPDT",7284,"KRN",.404,57,0)="XUSITEPARM 4^8989.3"
^XTMP("XPDT",7284,"KRN",.404,57,40,0)="^.4044I^8^8"
^XTMP("XPDT",7284,"KRN",.404,57,40,1,0)="1^OPTION AUDIT^3"
^XTMP("XPDT",7284,"KRN",.404,57,40,1,1)="19"
^XTMP("XPDT",7284,"KRN",.404,57,40,1,2)="1,15^24^1,1"
^XTMP("XPDT",7284,"KRN",.404,57,40,2,0)="2^INITIATE AUDIT^3"
^XTMP("XPDT",7284,"KRN",.404,57,40,2,1)="19.4"
^XTMP("XPDT",7284,"KRN",.404,57,40,2,2)="2,20^17^2,4"
^XTMP("XPDT",7284,"KRN",.404,57,40,3,0)="3^TERMINATE AUDIT^3"
^XTMP("XPDT",7284,"KRN",.404,57,40,3,1)="19.5"
^XTMP("XPDT",7284,"KRN",.404,57,40,3,2)="2,60^17^2,43"
^XTMP("XPDT",7284,"KRN",.404,57,40,4,0)="4^Option to audit^1"
^XTMP("XPDT",7284,"KRN",.404,57,40,4,2)="^^4,4^1"
^XTMP("XPDT",7284,"KRN",.404,57,40,5,0)="5^Namespace to audit^1"
^XTMP("XPDT",7284,"KRN",.404,57,40,5,2)="^^4,43^1"
^XTMP("XPDT",7284,"KRN",.404,57,40,6,0)="6^User to audit^1"
^XTMP("XPDT",7284,"KRN",.404,57,40,6,2)="^^9,4^1"
^XTMP("XPDT",7284,"KRN",.404,57,40,7,0)="7^Device to audit^1"
^XTMP("XPDT",7284,"KRN",.404,57,40,7,2)="^^9,43"
^XTMP("XPDT",7284,"KRN",.404,57,40,8,0)="8^FAILED ACCESS ATTEMPTS^3"
^XTMP("XPDT",7284,"KRN",.404,57,40,8,1)="212.5"
^XTMP("XPDT",7284,"KRN",.404,57,40,8,2)="1,67^8^1,43"
^XTMP("XPDT",7284,"KRN",.404,58,0)="XUSITEPARM 4.1^8989.36"
^XTMP("XPDT",7284,"KRN",.404,58,40,0)="^.4044I^1^1"
^XTMP("XPDT",7284,"KRN",.404,58,40,1,0)="1^^3"
^XTMP("XPDT",7284,"KRN",.404,58,40,1,1)=".01"
^XTMP("XPDT",7284,"KRN",.404,58,40,1,2)="1,1^30"
^XTMP("XPDT",7284,"KRN",.404,59,0)="XUSITEPARM 4.2^8989.35"
^XTMP("XPDT",7284,"KRN",.404,59,40,0)="^.4044I^1^1"
^XTMP("XPDT",7284,"KRN",.404,59,40,1,0)="1^^3"
^XTMP("XPDT",7284,"KRN",.404,59,40,1,1)=".01"
^XTMP("XPDT",7284,"KRN",.404,59,40,1,2)="1,1^5"
^XTMP("XPDT",7284,"KRN",.404,60,0)="XUSITEPARM 4.4^8989.33"
^XTMP("XPDT",7284,"KRN",.404,60,40,0)="^.4044I^1^1"
^XTMP("XPDT",7284,"KRN",.404,60,40,1,0)="1^^3"
^XTMP("XPDT",7284,"KRN",.404,60,40,1,1)=".01"
^XTMP("XPDT",7284,"KRN",.404,60,40,1,2)="1,1^20"
^XTMP("XPDT",7284,"KRN",.404,61,0)="XUSITEPARM 4.3^8989.34"
^XTMP("XPDT",7284,"KRN",.404,61,40,0)="^.4044I^1^1"
^XTMP("XPDT",7284,"KRN",.404,61,40,1,0)="1^^3"
^XTMP("XPDT",7284,"KRN",.404,61,40,1,1)=".01"
^XTMP("XPDT",7284,"KRN",.404,61,40,1,2)="1,1^30"
^XTMP("XPDT",7284,"KRN",.404,181,0)="XUSITEPARM 5^8989.3"
^XTMP("XPDT",7284,"KRN",.404,181,40,0)="^.4044I^3^3"
^XTMP("XPDT",7284,"KRN",.404,181,40,1,0)="1^IRM MAIL GROUP^3"
^XTMP("XPDT",7284,"KRN",.404,181,40,1,1)=".02"
^XTMP("XPDT",7284,"KRN",.404,181,40,1,2)="1,27^50^1,11"
^XTMP("XPDT",7284,"KRN",.404,181,40,2,0)="2^AFTER HOURS MAIL GROUP^3"
^XTMP("XPDT",7284,"KRN",.404,181,40,2,1)=".03"
^XTMP("XPDT",7284,"KRN",.404,181,40,2,2)="3,27^50^3,3"
^XTMP("XPDT",7284,"KRN",.404,181,40,3,0)="3^LOG RESOURCE USAGE?^3"
^XTMP("XPDT",7284,"KRN",.404,181,40,3,1)="300"
^XTMP("XPDT",7284,"KRN",.404,181,40,3,2)="5,27^3^5,6"
^XTMP("XPDT",7284,"KRN",19,140,-1)="0^1"
^XTMP("XPDT",7284,"KRN",19,140,0)="XUSERWHERE^Where am I?^^A^^^^^^^^^y^1^^"
^XTMP("XPDT",7284,"KRN",19,140,1,0)="^^2^2^3081009^"
^XTMP("XPDT",7284,"KRN",19,140,1,1,0)="This option shows a user their environment."
^XTMP("XPDT",7284,"KRN",19,140,1,2,0)="Changed from showing IO(""ZIO"") to IO(""IP"")."
^XTMP("XPDT",7284,"KRN",19,140,20)="D GETENV^%ZOSV W !!,""UCI: "",$P(Y,U),""  VOLUME SET: "",$P(Y,U,2) W:$P(Y,U,3)]"""" ""  NODE: "",$P(Y,U,3) W !,"" DEVICE: "",$I,$S($D(IO(""IP"")):""  (""_IO(""IP"")_"")"",1:"""")"
^XTMP("XPDT",7284,"KRN",19,140,"U")="WHERE AM I?"
^XTMP("XPDT",7284,"MBREQ")="0"
^XTMP("XPDT",7284,"ORD",8,.403)=".403;8;;;EDEOUT^DIFROMSO(.403,DA,"""",XPDA);FPRE^DIFROMSI(.403,"""",XPDA);EPRE^DIFROMSI(.403,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.403,DA,"""",XPDA);DEL^DIFROMSK(.403,"""",%)"
^XTMP("XPDT",7284,"ORD",8,.403,0)="FORM"
^XTMP("XPDT",7284,"ORD",18,19)="19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA"
^XTMP("XPDT",7284,"ORD",18,19,0)="OPTION"
^XTMP("XPDT",7284,"PKG",3,-1)="1^1"
^XTMP("XPDT",7284,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7284,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7284,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7284,"PKG",3,22,1,0)="8.0^3080616^3080616^6"
^XTMP("XPDT",7284,"PKG",3,22,1,"PAH",1,0)="499^3081014"
^XTMP("XPDT",7284,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3081014"
^XTMP("XPDT",7284,"PKG",3,22,1,"PAH",1,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7284,"PKG",3,22,1,"PAH",1,1,2,0)="XU*8*499  Get Client IP when connecting via SSH."
^XTMP("XPDT",7284,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7284,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7284,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7284,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7284,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7284,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7284,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7284,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7284,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7284,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7284,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7284,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7284,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7284,"QUES","XPI1","B")="YES"
^XTMP("XPDT",7284,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7284,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7284,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7284,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7284,"QUES","XPM1","B")=""
^XTMP("XPDT",7284,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7284,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7284,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7284,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7284,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7284,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7284,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7284,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7284,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7284,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7284,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7284,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7284,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7284,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7284,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7284,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7284,"RTN")="14"
^XTMP("XPDT",7284,"RTN","XU8P499")="0^^B213938^n/a"
^XTMP("XPDT",7284,"RTN","XU8P499",1,0)="XU8P499 ;ISF/RWF - Patch XU*8*499 Post-init ;09/15/08  12:14"
^XTMP("XPDT",7284,"RTN","XU8P499",2,0)=" ;;8.0;KERNEL;**499**;Jul 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","XU8P499",3,0)=" Q"
^XTMP("XPDT",7284,"RTN","XU8P499",4,0)=" ;"
^XTMP("XPDT",7284,"RTN","XU8P499",5,0)="POST ;"
^XTMP("XPDT",7284,"RTN","XU8P499",6,0)=" I '$D(^XTV(8989.3,1,""PEER"")) S ^XTV(8989.3,1,""PEER"")=""127.0.0.1"""
^XTMP("XPDT",7284,"RTN","XU8P499",7,0)=" X ^%ZOSF(""EON"")"
^XTMP("XPDT",7284,"RTN","XU8P499",8,0)=" W ! D RELOAD^ZTMGRSET W !"
^XTMP("XPDT",7284,"RTN","XU8P499",9,0)=" X ^%ZOSF(""EOFF"")"
^XTMP("XPDT",7284,"RTN","XU8P499",10,0)=" Q"
^XTMP("XPDT",7284,"RTN","XUSRB4")="0^12^B15887142^B12816308"
^XTMP("XPDT",7284,"RTN","XUSRB4",1,0)="XUSRB4 ;ISF/RWF - Build a temporary sign-on token ;09/15/08  14:23"
^XTMP("XPDT",7284,"RTN","XUSRB4",2,0)=" ;;8.0;KERNEL;**150,337,395,419,437,499**;Jul 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","XUSRB4",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7284,"RTN","XUSRB4",4,0)=" Q"
^XTMP("XPDT",7284,"RTN","XUSRB4",5,0)=" ;"
^XTMP("XPDT",7284,"RTN","XUSRB4",6,0)="ASH(RET) ;rpc. Auto Signon Handle"
^XTMP("XPDT",7284,"RTN","XUSRB4",7,0)=" N HDL"
^XTMP("XPDT",7284,"RTN","XUSRB4",8,0)=" S HDL=$$HANDLE(""XWBAS"",1),RET=""~1""_HDL"
^XTMP("XPDT",7284,"RTN","XUSRB4",9,0)=" ;Now place user info in it."
^XTMP("XPDT",7284,"RTN","XUSRB4",10,0)=" D TOK(HDL)"
^XTMP("XPDT",7284,"RTN","XUSRB4",11,0)=" Q"
^XTMP("XPDT",7284,"RTN","XUSRB4",12,0)=" ;"
^XTMP("XPDT",7284,"RTN","XUSRB4",13,0)="CCOW(RET) ;rpc. CCOW Auto Signon Handle"
^XTMP("XPDT",7284,"RTN","XUSRB4",14,0)=" N HDL,HDL2,X"
^XTMP("XPDT",7284,"RTN","XUSRB4",15,0)=" S RET(0)=""NO PROXY USER"",RET(1)=""ERROR"""
^XTMP("XPDT",7284,"RTN","XUSRB4",16,0)=" I $$USERTYPE^XUSAP(DUZ,""APPLICATION PROXY"") Q  ;No Proxy"
^XTMP("XPDT",7284,"RTN","XUSRB4",17,0)=" I $$USERTYPE^XUSAP(DUZ,""CONNECTOR PROXY"") Q  ;No Proxy"
^XTMP("XPDT",7284,"RTN","XUSRB4",18,0)=" S X=$$ACTIVE^XUSER(DUZ) I 'X S RET(0)=X Q  ;User must be active"
^XTMP("XPDT",7284,"RTN","XUSRB4",19,0)=" S HDL=$$HANDLE(""XWBCCW"",1)"
^XTMP("XPDT",7284,"RTN","XUSRB4",20,0)=" ;Return RET(0) the CCOW token, RET(1) the domain name and the Station #"
^XTMP("XPDT",7284,"RTN","XUSRB4",21,0)=" S RET(0)=""~2""_$$LOW^XLFSTR(HDL),RET(1)=$G(^XMB(""NETNAME""))_""^""_$$STA^XUAF4(DUZ(2))"
^XTMP("XPDT",7284,"RTN","XUSRB4",22,0)=" ;Now place user info in it."
^XTMP("XPDT",7284,"RTN","XUSRB4",23,0)=" D TOK(HDL)"
^XTMP("XPDT",7284,"RTN","XUSRB4",24,0)=" S ^XUTL(""XQ"",$J,""HDL"")=HDL ;Save handle with job"
^XTMP("XPDT",7284,"RTN","XUSRB4",25,0)=" Q"
^XTMP("XPDT",7284,"RTN","XUSRB4",26,0)=" ;"
^XTMP("XPDT",7284,"RTN","XUSRB4",27,0)="HANDLE(NS,LT) ;Return a unique handle into ^XTMP (ef. sup)"
^XTMP("XPDT",7284,"RTN","XUSRB4",28,0)=" ;NS is the namespace, LT is the Handle Lifetime in days"
^XTMP("XPDT",7284,"RTN","XUSRB4",29,0)=" N %H,A,J,HL"
^XTMP("XPDT",7284,"RTN","XUSRB4",30,0)=" I $G(NS)="""" Q """" ;Return null if no namespace"
^XTMP("XPDT",7284,"RTN","XUSRB4",31,0)=" S LT=$G(LT,1) S:LT>7 LT=7 ;Default to 1"
^XTMP("XPDT",7284,"RTN","XUSRB4",32,0)=" S %H=$H,J=NS_($J#2048)_""-""_(%H#7*86400+$P(%H,"","",2))_""_"",A=$R(10)"
^XTMP("XPDT",7284,"RTN","XUSRB4",33,0)=" F  S HL=J_A,A=A+1 L +^XTMP(HL):1 I $T Q:'$D(^XTMP(HL))  L -^XTMP(HL)"
^XTMP("XPDT",7284,"RTN","XUSRB4",34,0)=" S ^XTMP(HL,0)=$$HTFM^XLFDT(%H+LT)_""^""_$$DT^XLFDT()"
^XTMP("XPDT",7284,"RTN","XUSRB4",35,0)=" L -^XTMP(HL)"
^XTMP("XPDT",7284,"RTN","XUSRB4",36,0)=" Q HL"
^XTMP("XPDT",7284,"RTN","XUSRB4",37,0)=" ;"
^XTMP("XPDT",7284,"RTN","XUSRB4",38,0)="TOK(H) ;Store a Token"
^XTMP("XPDT",7284,"RTN","XUSRB4",39,0)=" ;H is handle into XTMP"
^XTMP("XPDT",7284,"RTN","XUSRB4",40,0)=" N J,T,R,%"
^XTMP("XPDT",7284,"RTN","XUSRB4",41,0)=" S T=$$H3^%ZTM($H)"
^XTMP("XPDT",7284,"RTN","XUSRB4",42,0)=" S R=$J_""|""_T_""|""_$G(DUZ)_""|""_H"
^XTMP("XPDT",7284,"RTN","XUSRB4",43,0)=" S ^XTMP(H,""D"",0)=""|""_$$ENCRYP^XUSRB1(R)_""|"""
^XTMP("XPDT",7284,"RTN","XUSRB4",44,0)=" S ^XTMP(H,""D2"")=$G(DUZ(2))"
^XTMP("XPDT",7284,"RTN","XUSRB4",45,0)=" S %=$G(IO(""IP"")) I $L(%),%'?1.3N1P1.3N1P1.3N1P1.3N S %=$P($$ADDRESS^XLFNSLK(%),"","")"
^XTMP("XPDT",7284,"RTN","XUSRB4",46,0)=" S ^XTMP(H,""D3"")=%"
^XTMP("XPDT",7284,"RTN","XUSRB4",47,0)=" S ^XTMP(H,""CLNM"")=$G(IO(""CLNM""))"
^XTMP("XPDT",7284,"RTN","XUSRB4",48,0)=" S ^XTMP(H,""JOB"",$J)=$G(IO(""IP""))"
^XTMP("XPDT",7284,"RTN","XUSRB4",49,0)=" S ^XTMP(H,""STATUS"")=""0^New"",^(""CNT"")=0"
^XTMP("XPDT",7284,"RTN","XUSRB4",50,0)=" Q"
^XTMP("XPDT",7284,"RTN","XUSRB4",51,0)=" ;"
^XTMP("XPDT",7284,"RTN","XUSRB4",52,0)="CHKASH(HL) ;rpc. Check a Auto Signon Handle"
^XTMP("XPDT",7284,"RTN","XUSRB4",53,0)=" N HDL,RET,FDA,IEN S HDL=$E(HL,3,999)"
^XTMP("XPDT",7284,"RTN","XUSRB4",54,0)=" S RET=$$CHECK(HDL)"
^XTMP("XPDT",7284,"RTN","XUSRB4",55,0)=" I RET>0 D"
^XTMP("XPDT",7284,"RTN","XUSRB4",56,0)=" . S DUZ(""ASH"")=1,IEN=DUZ_"","""
^XTMP("XPDT",7284,"RTN","XUSRB4",57,0)=" . I $$GET1^DIQ(200,IEN,7,""I"") S FDA(200,DUZ_"","",7)=0 D FILE^DIE(""K"",""FDA"") ;rwf 403"
^XTMP("XPDT",7284,"RTN","XUSRB4",58,0)=" K ^XTMP(HDL) ;Token only good for one try."
^XTMP("XPDT",7284,"RTN","XUSRB4",59,0)=" Q RET"
^XTMP("XPDT",7284,"RTN","XUSRB4",60,0)=" ;"
^XTMP("XPDT",7284,"RTN","XUSRB4",61,0)="CHKCCOW(HL) ;rpc. Check a CCOW Auto Signon Handle"
^XTMP("XPDT",7284,"RTN","XUSRB4",62,0)=" N HDL,RET,T"
^XTMP("XPDT",7284,"RTN","XUSRB4",63,0)=" S HDL=$$UP^XLFSTR($E(HL,3,999)),T=$P($G(^XTV(8989.3,1,30),5400),U)"
^XTMP("XPDT",7284,"RTN","XUSRB4",64,0)=" S RET=$$CHECK(HDL,T)"
^XTMP("XPDT",7284,"RTN","XUSRB4",65,0)=" I RET>0 D"
^XTMP("XPDT",7284,"RTN","XUSRB4",66,0)=" . ;This CCOW Token good for more that one try."
^XTMP("XPDT",7284,"RTN","XUSRB4",67,0)=" . S ^XTMP(HDL,""JOB"",$J)=$G(IO(""IP""))"
^XTMP("XPDT",7284,"RTN","XUSRB4",68,0)=" . S ^XTMP(HDL,""STATUS"")=(^XTMP(HDL,""STATUS"")+1)_""^Active"""
^XTMP("XPDT",7284,"RTN","XUSRB4",69,0)=" . S ^XUTL(""XQ"",$J,""HDL"")=HDL ;Save handle with job"
^XTMP("XPDT",7284,"RTN","XUSRB4",70,0)=" . S DUZ(""CCOW"")=1 ;Flag a CCOW sign-on."
^XTMP("XPDT",7284,"RTN","XUSRB4",71,0)=" Q RET"
^XTMP("XPDT",7284,"RTN","XUSRB4",72,0)=" ;"
^XTMP("XPDT",7284,"RTN","XUSRB4",73,0)="CHECK(HL,TOUT) ;Check a Token"
^XTMP("XPDT",7284,"RTN","XUSRB4",74,0)=" N %,J,D,L,M,S,T,CLNM"
^XTMP("XPDT",7284,"RTN","XUSRB4",75,0)=" S S=$G(^XTMP(HL,0)) I '$L(S) Q ""0^Bad Handle"""
^XTMP("XPDT",7284,"RTN","XUSRB4",76,0)=" S S=$G(^XTMP(HL,""D"",0)) I '$L(S) Q ""0^Bad Handle"" ;Now have real token"
^XTMP("XPDT",7284,"RTN","XUSRB4",77,0)=" I $E(S)'=""|"" Q ""0^Bad Token"""
^XTMP("XPDT",7284,"RTN","XUSRB4",78,0)=" S S=$$DECRYP^XUSRB1($E(S,2,$L(S)-1)) I S="""" Q ""0^Bad Token"""
^XTMP("XPDT",7284,"RTN","XUSRB4",79,0)=" S J=$P(S,""|""),T=$P(S,""|"",2),D=$P(S,""|"",3),M=$P(S,""|"",4)"
^XTMP("XPDT",7284,"RTN","XUSRB4",80,0)=" ;Check token time"
^XTMP("XPDT",7284,"RTN","XUSRB4",81,0)=" S %=$$H3^%ZTM($H),TOUT=$G(TOUT,20)"
^XTMP("XPDT",7284,"RTN","XUSRB4",82,0)=" I T+TOUT<% Q ""0^Token Expired"" ;Token good for TOUT or 20 seconds"
^XTMP("XPDT",7284,"RTN","XUSRB4",83,0)=" ;Check job"
^XTMP("XPDT",7284,"RTN","XUSRB4",84,0)=" ;Check that token has handle"
^XTMP("XPDT",7284,"RTN","XUSRB4",85,0)=" I M'=HL Q ""0^Bad Token"""
^XTMP("XPDT",7284,"RTN","XUSRB4",86,0)=" ;Check User"
^XTMP("XPDT",7284,"RTN","XUSRB4",87,0)=" I $G(^VA(200,D,0))="""" Q ""0^Bad User"""
^XTMP("XPDT",7284,"RTN","XUSRB4",88,0)=" ;Do IP check"
^XTMP("XPDT",7284,"RTN","XUSRB4",89,0)=" S %=$G(IO(""IP"")),T=0,CLNM="""""
^XTMP("XPDT",7284,"RTN","XUSRB4",90,0)=" I $L(%),%'?1.3N1P1.3N1P1.3N1P1.3N S CLNM=%,%=$P($$ADDRESS^XLFNSLK(%),"","")"
^XTMP("XPDT",7284,"RTN","XUSRB4",91,0)=" S CLNM=$S($L($G(IO(""CLNM""))):IO(""CLNM""),$L(CLNM):CLNM,1:"""") ;p499"
^XTMP("XPDT",7284,"RTN","XUSRB4",92,0)=" I $L($G(^XTMP(HL,""D3""))),^XTMP(HL,""D3"")=% S T=1"
^XTMP("XPDT",7284,"RTN","XUSRB4",93,0)=" I 'T,$L(CLNM),$G(^XTMP(HL,""CLNM""))=IO(""CLNM"") S T=1"
^XTMP("XPDT",7284,"RTN","XUSRB4",94,0)=" I 'T Q ""0^Different IP"" ;p499"
^XTMP("XPDT",7284,"RTN","XUSRB4",95,0)=" I $D(^XTMP(HL,""D2"")),D>0 S DUZ(2)=^XTMP(HL,""D2"")"
^XTMP("XPDT",7284,"RTN","XUSRB4",96,0)=" D USER^XUS(D)"
^XTMP("XPDT",7284,"RTN","XUSRB4",97,0)=" Q D"
^XTMP("XPDT",7284,"RTN","XUSRB4",98,0)=" ;"
^XTMP("XPDT",7284,"RTN","XUSRB4",99,0)=" ;"
^XTMP("XPDT",7284,"RTN","XUSRB4",100,0)="CCOWPC(RET) ;Return ap"
^XTMP("XPDT",7284,"RTN","XUSRB4",101,0)=" N I,XU4"
^XTMP("XPDT",7284,"RTN","XUSRB4",102,0)=" S RET(0)="""" I '$$BROKER^XWBLIB Q"
^XTMP("XPDT",7284,"RTN","XUSRB4",103,0)=" D GETLST^XPAR(.XU4,""SYS"",""XUS CCOW VAULT PARAM"",""Q"")"
^XTMP("XPDT",7284,"RTN","XUSRB4",104,0)=" F I=0,1 S RET(I)=$P($G(XU4(I+1)),""^"",2,99)"
^XTMP("XPDT",7284,"RTN","XUSRB4",105,0)=" Q"
^XTMP("XPDT",7284,"RTN","XUSRB4",106,0)=" ;"
^XTMP("XPDT",7284,"RTN","XUSRB4",107,0)=" ;p500"
^XTMP("XPDT",7284,"RTN","XUSRB4",108,0)="CCOWIP(RET,CLIENTIP) ;rpc. CCOW Auto Signon Handle for middle tiered application servers"
^XTMP("XPDT",7284,"RTN","XUSRB4",109,0)=" N %"
^XTMP("XPDT",7284,"RTN","XUSRB4",110,0)=" S %=$G(IO(""IP"")) ; save original"
^XTMP("XPDT",7284,"RTN","XUSRB4",111,0)=" ; get actual ip address instead of localhost address if possible"
^XTMP("XPDT",7284,"RTN","XUSRB4",112,0)=" S IO(""IP"")=$S($G(CLIENTIP)=""127.0.0.1"":%,$G(CLIENTIP)="""":%,1:$G(CLIENTIP))"
^XTMP("XPDT",7284,"RTN","XUSRB4",113,0)=" D CCOW(.RET)"
^XTMP("XPDT",7284,"RTN","XUSRB4",114,0)=" S IO(""IP"")=% ; revert to original"
^XTMP("XPDT",7284,"RTN","XUSRB4",115,0)=" Q"
^XTMP("XPDT",7284,"RTN","XUSRB4",116,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS")="0^4^B20827574^B20530056"
^XTMP("XPDT",7284,"RTN","ZIS",1,0)="%ZIS ;SFISC/AC,RWF -- DEVICE HANDLER ;07/17/08  11:50"
^XTMP("XPDT",7284,"RTN","ZIS",2,0)=" ;;8.0;KERNEL;**18,23,69,112,199,191,275,363,440,499**;JUL 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZIS",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7284,"RTN","ZIS",4,0)=" N %ZISOS,%ZISV"
^XTMP("XPDT",7284,"RTN","ZIS",5,0)=" S U=""^"",%ZISOS=$G(^%ZOSF(""OS"")),%ZISV=$G(^%ZOSF(""VOL""))"
^XTMP("XPDT",7284,"RTN","ZIS",6,0)=" ;Check SPOOLER special case first"
^XTMP("XPDT",7284,"RTN","ZIS",7,0)="INIT I $D(ZTQUEUED),$G(IOT)=""SPL"",$D(IO)#2,$D(IO(0))#2,IO]"""",IO=IO(0),$D(IO(1,IO))#2,%ZISOS[""VAX DSM""!(%ZISOS[""M/VX""),$G(IOP)[ION!(IOP[IO) K %ZIS,%IS,IOP Q"
^XTMP("XPDT",7284,"RTN","ZIS",8,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS",9,0)=" I '$D(%ZIS),$D(%IS) M %ZIS=%IS"
^XTMP("XPDT",7284,"RTN","ZIS",10,0)=" S:'($D(%ZIS)#2) %ZIS=""M"" M %IS=%ZIS ;update %IS for now"
^XTMP("XPDT",7284,"RTN","ZIS",11,0)=" I '$D(^XUTL(""XQ"",$J,""MIXED OS"")) S ^XUTL(""XQ"",$J,""MIXED OS"")=$$PRI^%ZOSV"
^XTMP("XPDT",7284,"RTN","ZIS",12,0)=" S %ZIS(""PRI"")=$G(^XUTL(""XQ"",$J,""MIXED OS""),1)"
^XTMP("XPDT",7284,"RTN","ZIS",13,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS",14,0)=" I $D(ZTQUEUED) D  I '$D(IOP) S POP=1 G EXIT^%ZIS1"
^XTMP("XPDT",7284,"RTN","ZIS",15,0)=" .I $D(ZTIO)#2,ZTIO="""" S:%IS'[0 %IS=%IS_""0"",%ZIS=%ZIS_""0"""
^XTMP("XPDT",7284,"RTN","ZIS",16,0)=" I '$D(ZTQUEUED),%IS[""T"",$P($G(IOP),"";"")=""Q"" S POP=1 G EXIT^%ZIS1"
^XTMP("XPDT",7284,"RTN","ZIS",17,0)=" N %,%A,%E,%H,%I,%X,%XX,%Y,%Z,%Z1,%Z2,%Z9,%Z90,%Z91,%Z95,%ZISB,%ZTIME,%ZTYPE"
^XTMP("XPDT",7284,"RTN","ZIS",18,0)=" N %ZHFN,%ZISOLD,%ZTOUT,%ZISDTIM,DTOUT,DUOUT"
^XTMP("XPDT",7284,"RTN","ZIS",19,0)=" S %ZISDTIM=$G(DTIME,300)"
^XTMP("XPDT",7284,"RTN","ZIS",20,0)=" ;Save symbols to restore if don't open a device"
^XTMP("XPDT",7284,"RTN","ZIS",21,0)=" D SYMBOL^%ZISUTL(0,$NA(%ZISOLD))"
^XTMP("XPDT",7284,"RTN","ZIS",22,0)="A D CLEAN ;(p363) K IO(""CLOSE""),IO(""HFSIO"")"
^XTMP("XPDT",7284,"RTN","ZIS",23,0)=" K IO(""P""),IO(""Q""),IO(""S""),IO(""T"")"
^XTMP("XPDT",7284,"RTN","ZIS",24,0)="K2 D K2^%ZIS1"
^XTMP("XPDT",7284,"RTN","ZIS",25,0)=" S %ZISB=%ZIS'[""N"",(%E,%H,POP)=0,%Y="""" S:'$D(IO(0)) IO(0)=$I"
^XTMP("XPDT",7284,"RTN","ZIS",26,0)=" I %ZISOS[""VAX DSM"",$I[""SYS$INPUT:.;"" S:%ZIS'[0 %IS=%IS_""0"",%ZIS=%ZIS_""0"""
^XTMP("XPDT",7284,"RTN","ZIS",27,0)=" ;I %IS[""T""&(%IS[""0"") S (%H,%E)=0 G ^%ZIS1"
^XTMP("XPDT",7284,"RTN","ZIS",28,0)=" I $D(IOP),IOP=$I!(IOP=""HOME"")!(0[IOP),$D(^XUTL(""XQ"",$J,""IO"")) D HOME K %IS,%Y,%ZIS,%ZISB,%ZISV,IOP Q"
^XTMP("XPDT",7284,"RTN","ZIS",29,0)=" ;Don't worry about HOME if %ZIS[0"
^XTMP("XPDT",7284,"RTN","ZIS",30,0)=" D:%ZIS'[0 GETHOME G EXIT^%ZIS1:POP,^%ZIS1 ;Jump to next part"
^XTMP("XPDT",7284,"RTN","ZIS",31,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS",32,0)="GETHOME I $D(IO(""HOME"")),$P(IO(""HOME""),""^"",2)=IO(0) S (%E,%H)=+IO(""HOME"") Q"
^XTMP("XPDT",7284,"RTN","ZIS",33,0)=" I $D(^XUTL(""XQ"",$J,""IOS"")),$D(^(""IO"")),IO(0)=^(""IO"") S (%E,%H)=^(""IOS"") Q"
^XTMP("XPDT",7284,"RTN","ZIS",34,0)=" ;CALL LINEPORT CODE HERE---"
^XTMP("XPDT",7284,"RTN","ZIS",35,0)=" S %=$$LINEPORT^%ZISUTL I % S (%E,%H)=% Q"
^XTMP("XPDT",7284,"RTN","ZIS",36,0)=" S %ZISVT=$I D VTLKUP I '%E S %ZISVT=$I D VIRTUAL"
^XTMP("XPDT",7284,"RTN","ZIS",37,0)=" I %ZISVT=""""!(%E'>0) I %IS'[0 O IO(0)::0 I $T U IO(0) W !,""HOME DEVICE (""_$I_"") DOES NOT EXIST IN THE DEVICE FILE"",!,""PLEASE CONTACT YOUR SYSTEM MANAGER!"",*7"
^XTMP("XPDT",7284,"RTN","ZIS",38,0)=" S %H=%E S:'%H&(%IS'[0) POP=1 S:(%H>0)&('$D(IO(""HOME""))) IO(""HOME"")=%H_""^""_$I"
^XTMP("XPDT",7284,"RTN","ZIS",39,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS",40,0)="VIRTUAL ;See if a Virtual Terminal (LAT, TELNET)"
^XTMP("XPDT",7284,"RTN","ZIS",41,0)=" ;Change the MSM check for telnet to work with v4.4"
^XTMP("XPDT",7284,"RTN","ZIS",42,0)=" I %ZISOS[""MSM"" X ""I $P($ZV,""""Version """",2)'<3 S %ZISVT=$ZDE(+%ZISVT) I %ZISVT?.E1""""~""""4.5N.E S %ZISVT=""""TELNET"""""""
^XTMP("XPDT",7284,"RTN","ZIS",43,0)=" F %ZISI=$L(%ZISVT):-1:0 D:$D(^%ZIS(1,""C"",%ZISVT))  Q:$S('%E:0,'$D(^%ZIS(1,%E,""TYPE"")):0,^(""TYPE"")=""VTRM"":1,1:0)  S %ZISVT=$E(%ZISVT,1,%ZISI)"
^XTMP("XPDT",7284,"RTN","ZIS",44,0)=" .D VTLKUP Q:$S('%E:0,'$D(^%ZIS(1,%E,""TYPE"")):0,^(""TYPE"")=""VTRM"":1,1:0)"
^XTMP("XPDT",7284,"RTN","ZIS",45,0)=" .S %X=0 F %ZISX=%ZISV,"""" Q:%X>0  S %X=0 F  S %E=+$O(^%ZIS(1,""CPU"",%ZISX_"".""_%ZISVT,%X)) S %X=%E Q:%E'>0  I $G(^%ZIS(1,+%E,""TYPE""))=""VTRM"" Q"
^XTMP("XPDT",7284,"RTN","ZIS",46,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS",47,0)="VTLKUP F %ZISX=%ZISV,"""" S %E=+$O(^%ZIS(1,""G"",""SYS.""_%ZISX_"".""_%ZISVT,0)) Q:%E  S %E=+$O(^%ZIS(1,""CPU"",%ZISX_"".""_%ZISVT,0)) Q:%E"
^XTMP("XPDT",7284,"RTN","ZIS",48,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS",49,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS",50,0)="CURRENT N POP,%ZIS,%IS,%E,%H"
^XTMP("XPDT",7284,"RTN","ZIS",51,0)=" S FF=""#"",SL=24,BS=""*8"",RM=80,(SUB,XY)="""",%IS=0,%ZISOS=$G(^%ZOSF(""OS"")),%ZISV=$G(^(""VOL"")),POP=0"
^XTMP("XPDT",7284,"RTN","ZIS",52,0)=" D GETHOME K %E,%IS,%ZISI,%ZISOS,%ZISV,%ZISVT,%ZISX Q:POP"
^XTMP("XPDT",7284,"RTN","ZIS",53,0)=" I $D(^%ZIS(1,%H,""SUBTYPE"")) S SUB=+^(""SUBTYPE"") K %H"
^XTMP("XPDT",7284,"RTN","ZIS",54,0)=" I $D(SUB),SUB,$D(^%ZIS(2,SUB,1)) S SUB=$S($D(^(0)):$P(^(0),""^""),1:""""),FF=$P(^(1),""^"",2),SL=$P(^(1),""^"",3),BS=$P(^(1),""^"",4),XY=$P(^(1),""^"",5),RM=+^(1)"
^XTMP("XPDT",7284,"RTN","ZIS",55,0)=" E  S SUB="""""
^XTMP("XPDT",7284,"RTN","ZIS",56,0)=" I $D(^%ZOSF(""RM"")) N X S X=RM X ^(""RM"") K %A"
^XTMP("XPDT",7284,"RTN","ZIS",57,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS",58,0)="HOME ;Entry point to establish IO* variables for home device."
^XTMP("XPDT",7284,"RTN","ZIS",59,0)=" D CLEAN ;(p363)"
^XTMP("XPDT",7284,"RTN","ZIS",60,0)=" N X I '$D(^XUTL(""XQ"",$J,""IO"")) S IOP=""HOME"" D ^%ZIS Q"
^XTMP("XPDT",7284,"RTN","ZIS",61,0)=" D RESETVAR"
^XTMP("XPDT",7284,"RTN","ZIS",62,0)=" I '$D(IO(""C"")),$G(IOM),IO=$I,$D(IO(1,IO)),$D(^%ZOSF(""RM"")) S X=+IOM X ^(""RM"")"
^XTMP("XPDT",7284,"RTN","ZIS",63,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS",64,0)=" ;IO(""Q"") is checked by many routines after a call to ^%ZISC, so only clean on call to %ZIS."
^XTMP("XPDT",7284,"RTN","ZIS",65,0)="CLEAN ;Cleanup env. Called from %ZISC also."
^XTMP("XPDT",7284,"RTN","ZIS",66,0)=" I $G(IOT)'=""SPL"" K IO(""DOC""),IO(""SPOOL"") ;(p440)"
^XTMP("XPDT",7284,"RTN","ZIS",67,0)=" I $G(IOT)'=""HFS"" K IO(""HFSIO"") ;p440"
^XTMP("XPDT",7284,"RTN","ZIS",68,0)=" S (IOPAR,IOUPAR)="""""
^XTMP("XPDT",7284,"RTN","ZIS",69,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS",70,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS",71,0)="RESETVAR ;Reset home IO* variables."
^XTMP("XPDT",7284,"RTN","ZIS",72,0)=" I '$D(^XUTL(""XQ"",$J,""IO"")) Q"
^XTMP("XPDT",7284,"RTN","ZIS",73,0)=" N %"
^XTMP("XPDT",7284,"RTN","ZIS",74,0)=" F %=""IO"",""IOBS"",""IOF"",""IOM"",""ION"",""IOS"",""IOSL"",""IOST"",""IOST(0)"",""IOT"",""IOXY"",""IOPAR"",""IOUPAR"" I $D(^XUTL(""XQ"",$J,%))#2 S @%=^(%)"
^XTMP("XPDT",7284,"RTN","ZIS",75,0)=" F %=""IO(""""IP"""")"",""IO(""""CLNM"""")"",""IO(""""DOC"""")"",""IO(""""HFSIO"""")"",""IO(""""SPOOL"""")"" I $D(^XUTL(""XQ"",$J,%))#2 S @%=^(%)"
^XTMP("XPDT",7284,"RTN","ZIS",76,0)=" S POP=0,IO(0)=IO"
^XTMP("XPDT",7284,"RTN","ZIS",77,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS",78,0)="SAVEVAR ;Save home IO* variables, called from XUS1,%ZTMS3"
^XTMP("XPDT",7284,"RTN","ZIS",79,0)=" N %"
^XTMP("XPDT",7284,"RTN","ZIS",80,0)=" F %=""IO"",""IOBS"",""IOF"",""IOM"",""ION"",""IOS"",""IOSL"",""IOST"",""IOST(0)"",""IOT"",""IOXY"",""IOPAR"",""IOUPAR"" I $D(@%) S ^XUTL(""XQ"",$J,%)=@%"
^XTMP("XPDT",7284,"RTN","ZIS",81,0)=" F %=""IO(""""IP"""")"",""IO(""""CLNM"""")"",""IO(""""DOC"""")"",""IO(""""HFSIO"""")"",""IO(""""SPOOL"""")"" I $D(@%) S ^XUTL(""XQ"",$J,%)=@%"
^XTMP("XPDT",7284,"RTN","ZIS",82,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS",83,0)="ZISLPC Q  ;No longer called in Kernel v8."
^XTMP("XPDT",7284,"RTN","ZIS",84,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS",85,0)="HLP1 G EN1^%ZIS7"
^XTMP("XPDT",7284,"RTN","ZIS",86,0)="HLP2 N %E,%H,%X,%ZISV,X S %ZISV=$S($D(^%ZOSF(""VOL"")):^(""VOL""),1:"""") G EN2^%ZIS7"
^XTMP("XPDT",7284,"RTN","ZIS",87,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS",88,0)="REWIND(IO2,IOT,IOPAR) ;Rewind Device"
^XTMP("XPDT",7284,"RTN","ZIS",89,0)=" N %,X,Y,$ES,$ET S $ET=""D REWERR^%ZIS Q 0"""
^XTMP("XPDT",7284,"RTN","ZIS",90,0)=" S %=$I"
^XTMP("XPDT",7284,"RTN","ZIS",91,0)=" I '($D(IO2)#2)!'$D(IOT)!'$D(IOPAR) Q 0"
^XTMP("XPDT",7284,"RTN","ZIS",92,0)=" I ""MT^SDP^HFS""'[IOT Q 0"
^XTMP("XPDT",7284,"RTN","ZIS",93,0)=" S @(""Y=$$REW""_IOT_""^%ZIS4(IO2,IOPAR)"")"
^XTMP("XPDT",7284,"RTN","ZIS",94,0)=" U %"
^XTMP("XPDT",7284,"RTN","ZIS",95,0)=" Q Y"
^XTMP("XPDT",7284,"RTN","ZIS",96,0)="REWERR ;Error encountered"
^XTMP("XPDT",7284,"RTN","ZIS",97,0)=" S IO(""ERROR"")=$EC"
^XTMP("XPDT",7284,"RTN","ZIS",98,0)=" S $EC="""",$ET=""Q:$ES>1  S $EC="""""""" Q 0"" S $EC="",U1,"""
^XTMP("XPDT",7284,"RTN","ZIS",99,0)=" Q 0"
^XTMP("XPDT",7284,"RTN","ZIS",100,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS1")="0^5^B26102976^B24679317"
^XTMP("XPDT",7284,"RTN","ZIS1",1,0)="%ZIS1 ;SFISC/AC,RWF -- DEVICE HANDLER (DEVICE INPUT) ;07/17/08  13:21"
^XTMP("XPDT",7284,"RTN","ZIS1",2,0)=" ;;8.0;KERNEL;**18,49,69,104,112,199,391,440,499**;JUL 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZIS1",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7284,"RTN","ZIS1",4,0)="MAIN ;Called from %ZIS with a GOTO"
^XTMP("XPDT",7284,"RTN","ZIS1",5,0)=" ;Check for ""ASK DEVICE"""
^XTMP("XPDT",7284,"RTN","ZIS1",6,0)=" I '$D(IOP),$D(^%ZIS(1,%E,0)),'$P(^(0),""^"",3) S %A=%H,%Z=^(0) D L2^%ZIS2 G EXIT"
^XTMP("XPDT",7284,"RTN","ZIS1",7,0)="L1 ;Main Loop"
^XTMP("XPDT",7284,"RTN","ZIS1",8,0)=" I '$D(IOP),$D(IO(""Q"")),POP D AQUE^%ZIS3 K:%=2 IO(""Q"") S:%=2 %ZISB=$S(%IS'[""N"":2,1:0) I %=-1 S POP=1 G EXIT"
^XTMP("XPDT",7284,"RTN","ZIS1",9,0)=" S %E=%H,POP=0,%IS=%ZIS ;Reset %IS from %ZIS"
^XTMP("XPDT",7284,"RTN","ZIS1",10,0)=" I %IS'[""Q"",$D(XQNOGO) S POP=1 W:'$D(IOP) !,$C(7),""OUTPUT IS NEVER ALLOWED FOR THIS OPTION"" G EXIT"
^XTMP("XPDT",7284,"RTN","ZIS1",11,0)=" D IOP:$D(IOP),R:'$D(IOP)"
^XTMP("XPDT",7284,"RTN","ZIS1",12,0)=" G EXIT:$D(DTOUT)!$D(DUOUT)!(POP&$D(IOP)),L1:POP&'$D(IOP)"
^XTMP("XPDT",7284,"RTN","ZIS1",13,0)=" D LKUP I %A'>0 S POP=1 D:'$D(DUOUT) MSG1 K DUOUT"
^XTMP("XPDT",7284,"RTN","ZIS1",14,0)=" I %A>0,'$D(^%ZIS(1,%A,0)) D MSG1 K %ZISIOS S POP=1"
^XTMP("XPDT",7284,"RTN","ZIS1",15,0)=" I POP G EXIT:$D(IOP),L1:'$D(IOP)"
^XTMP("XPDT",7284,"RTN","ZIS1",16,0)=" S %E=%A,%Z1=^%ZIS(1,%A,1),%Z=$G(^(0)) ;Set naked for screen"
^XTMP("XPDT",7284,"RTN","ZIS1",17,0)=" I $D(%ZIS(""S"")) N Y S Y=%E D XS^ZISX S:'$T POP=1 G G:POP ;Screen Code"
^XTMP("XPDT",7284,"RTN","ZIS1",18,0)=" W:'$D(IOP)&($P(%Z,""^"",2)'=$I)&($P(%Z1,""^"")]"""") ""  "",$P(%Z1,""^"")"
^XTMP("XPDT",7284,"RTN","ZIS1",19,0)=" D L2^%ZIS2 ;Call"
^XTMP("XPDT",7284,"RTN","ZIS1",20,0)="G G L1:POP&'$D(IOP)&'($D(DTOUT)!$D(DUOUT)) ;Didn't get it"
^XTMP("XPDT",7284,"RTN","ZIS1",21,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS1",22,0)="EXIT ;"
^XTMP("XPDT",7284,"RTN","ZIS1",23,0)=" I POP G EX2 ;Did not get the device."
^XTMP("XPDT",7284,"RTN","ZIS1",24,0)=" ;For type[TRM reset $X & $Y"
^XTMP("XPDT",7284,"RTN","ZIS1",25,0)=" I %ZTYPE[""TRM"",IO]"""",$D(IO(1,IO)) U IO S:'(IO=IO(0)&'$D(IO(""S""))&'$D(ZTQUEUED)) $X=0,$Y=0"
^XTMP("XPDT",7284,"RTN","ZIS1",26,0)=" ;Do count of number of times device opened.  Field 51."
^XTMP("XPDT",7284,"RTN","ZIS1",27,0)=" I $L($G(IO)),$D(IO(1,IO))#2,$G(%ZISIOS) D"
^XTMP("XPDT",7284,"RTN","ZIS1",28,0)=" . S $P(^(5),""^"",1)=$P($G(^%ZIS(1,%ZISIOS,5)),""^"",1)+1"
^XTMP("XPDT",7284,"RTN","ZIS1",29,0)=" I %ZIS[""H"" S IO(0)=IO,IO(""HOME"")=%ZISIOS_""^""_IO ;Make home device"
^XTMP("XPDT",7284,"RTN","ZIS1",30,0)=" I '$D(IO(""Q"")),$D(%ZISLOCK) S ^XUTL(""XQ"",$J,""lock"",%ZISIOS)=%ZISLOCK"
^XTMP("XPDT",7284,"RTN","ZIS1",31,0)=" I $D(IO)#2,IO]"""",$D(IO(1,IO))#2,$D(%Z1),$P(%Z1,""^"",11) S IO(1,IO,""NOFF"")=1"
^XTMP("XPDT",7284,"RTN","ZIS1",32,0)="EX2 ;"
^XTMP("XPDT",7284,"RTN","ZIS1",33,0)=" I %IS'[0,$G(IO(0))]"""" U IO(0) ;Make sure return with home active"
^XTMP("XPDT",7284,"RTN","ZIS1",34,0)=" G SETVAR:'POP!(%IS[""T""),KILVAR"
^XTMP("XPDT",7284,"RTN","ZIS1",35,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS1",36,0)="IOP ;Request with IOP set"
^XTMP("XPDT",7284,"RTN","ZIS1",37,0)=" S (%ZISVT,%X)=IOP S:%X'?1.UNP %X=$$UP(%X) I %X'=""Q"" D SETQ Q"
^XTMP("XPDT",7284,"RTN","ZIS1",38,0)=" S %IS=%IS_%X K IOP W %X D SETQ"
^XTMP("XPDT",7284,"RTN","ZIS1",39,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS1",40,0)=" ;Get ready to ask user for device"
^XTMP("XPDT",7284,"RTN","ZIS1",41,0)="R I %IS[""Q"",$D(XQNOGO) W !,$C(7),""AT THIS TIME, OUTPUT MUST BE QUEUED"""
^XTMP("XPDT",7284,"RTN","ZIS1",42,0)=" S %A=$S($D(%IS(""B"")):%IS(""B""),1:""HOME"") ;Setup default"
^XTMP("XPDT",7284,"RTN","ZIS1",43,0)=" I %IS[""P"",%A=""HOME"",$D(^%ZIS(1,%E,99)),$D(^%ZIS(1,+^(99),0)) S %A=$P(^(0),""^"",1)"
^XTMP("XPDT",7284,"RTN","ZIS1",44,0)="RD W !,$S($D(%IS(""A"")):%IS(""A""),1:""DEVICE: "") W:%A]"""" %A,""// "" D SBR S:%X="""" %X=%A S %ZISVT=%X"
^XTMP("XPDT",7284,"RTN","ZIS1",45,0)=" I %X?2""?"".E D EN2^%ZIS7 G R"
^XTMP("XPDT",7284,"RTN","ZIS1",46,0)=" I %X?1""?"".E D EN1^%ZIS7 G R"
^XTMP("XPDT",7284,"RTN","ZIS1",47,0)=" I $D(DTOUT)!$D(DUOUT)!(%X'?.ANP)!($L($P(%X,"";""))>31) S:%IS[""T"" IO="""" S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS1",48,0)=" S:%X'?1.UNP %X=$$UP(%X) D SETQ G R:$T"
^XTMP("XPDT",7284,"RTN","ZIS1",49,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS1",50,0)="SETQ S %Y=$P(%X,"";"",2,9),%X=$P(%X,"";"",1) S:$L("";""_%Y,"";/"")=2 IO(""P"")=$P("";""_%Y,"";/"",2)"
^XTMP("XPDT",7284,"RTN","ZIS1",51,0)=" I %IS[""Q"",%X=""Q"" S %X=%Y,%ZISVT=$P(%ZISVT,"";"",2,9),%ZISB=0,IO(""Q"")=1,%IS(""A"")=""DEVICE: "" S:$D(IOP) %Y=$P(%X,"";"",2,9),%X=$P(%X,"";"",1)"
^XTMP("XPDT",7284,"RTN","ZIS1",52,0)=" I $T,'$D(IOP) W ""UEUE TO PRINT ON"" Q  ; Return $T value"
^XTMP("XPDT",7284,"RTN","ZIS1",53,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS1",54,0)="LKUP ;Lookup device name"
^XTMP("XPDT",7284,"RTN","ZIS1",55,0)=" S %ZISMY=$P(%ZISVT,"";"",2,999),%ZISVT=$P(%ZISVT,"";"")"
^XTMP("XPDT",7284,"RTN","ZIS1",56,0)=" I %X=""H"" W:'$D(IOP) ""ome"" S %X=0"
^XTMP("XPDT",7284,"RTN","ZIS1",57,0)=" I 0[%X!(%X=""HOME"")!(%X=$I) S %A=%H Q"
^XTMP("XPDT",7284,"RTN","ZIS1",58,0)=" I $E(%ZISVT)=""`"",$D(IOP) S %A=+$E(%ZISVT,2,999) I $D(^%ZIS(1,%A,0))#2 Q"
^XTMP("XPDT",7284,"RTN","ZIS1",59,0)=" S %A=0 I ""P""[%X Q:$D(IOP)&('$D(^%ZIS(1,%E,99)))  I $D(^%ZIS(1,%E,99)) S %A=+^(99) Q"
^XTMP("XPDT",7284,"RTN","ZIS1",60,0)=" I %X="" "",$D(DUZ)#2,$D(^DISV(+DUZ,""^%ZIS(1,"")) S %A=^(""^%ZIS(1,"") Q"
^XTMP("XPDT",7284,"RTN","ZIS1",61,0)=" S %A=+$O(^%ZIS(1,""B"",%ZISVT,0)) Q:%A>0  ;mixed case lookup"
^XTMP("XPDT",7284,"RTN","ZIS1",62,0)=" I %X'=%ZISVT S %A=+$O(^%ZIS(1,""B"",%X,0)) Q:%A>0  ;uppercase lookup"
^XTMP("XPDT",7284,"RTN","ZIS1",63,0)=" D VTLKUP^%ZIS S %A=%E Q:%A>0  ;mixed case lookup"
^XTMP("XPDT",7284,"RTN","ZIS1",64,0)=" I %X'=%ZISVT S %ZISVT=%X D VTLKUP^%ZIS S %A=%E Q:%A>0  ;uppercase lookup"
^XTMP("XPDT",7284,"RTN","ZIS1",65,0)=" N %XX,%YY S %XX=%X D 1^%ZIS5 S %A=+%YY"
^XTMP("XPDT",7284,"RTN","ZIS1",66,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS1",67,0)="SBR ;Read Sub-routine"
^XTMP("XPDT",7284,"RTN","ZIS1",68,0)=" K DTOUT,DUOUT R %X:%ZISDTIM E  W $C(7) S DTOUT=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS1",69,0)=" S:%X="".""!(%X=""^"") DUOUT=1,%X="""""
^XTMP("XPDT",7284,"RTN","ZIS1",70,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS1",71,0)=" ;LC S %X=$$UP(%X) Q"
^XTMP("XPDT",7284,"RTN","ZIS1",72,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS1",73,0)="LOW(%) Q $TR(%,""ABCDEFGHIJKLMNOPQRSTUVWXYZ"",""abcdefghijklmnopqrstuvwxyz"")"
^XTMP("XPDT",7284,"RTN","ZIS1",74,0)="UP(%) Q $TR(%,""abcdefghijklmnopqrstuvwxyz"",""ABCDEFGHIJKLMNOPQRSTUVWXYZ"")"
^XTMP("XPDT",7284,"RTN","ZIS1",75,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS1",76,0)=" ;Call/Return % = 1 (yes), 2 (no) -1 (^)"
^XTMP("XPDT",7284,"RTN","ZIS1",77,0)="YN W ""? "",$P(""Yes// ^No// "",U,%)"
^XTMP("XPDT",7284,"RTN","ZIS1",78,0)="RYN R %X:%ZISDTIM E  S DTOUT=1,%X=U W $C(7)"
^XTMP("XPDT",7284,"RTN","ZIS1",79,0)=" S:%X]""""!'% %=$A(%X),%=$S(%=89:1,%=121:1,%=78:2,%=110:2,%=94:-1,1:0)"
^XTMP("XPDT",7284,"RTN","ZIS1",80,0)=" I '%,%X'?.""?"" W $C(7),""??"",!?4,""ANSWER 'Yes' OR 'No': "" G RYN"
^XTMP("XPDT",7284,"RTN","ZIS1",81,0)=" W:$X>73 ! W $P(""  (Yes)^  (No)"",U,%)"
^XTMP("XPDT",7284,"RTN","ZIS1",82,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS1",83,0)="MSG1 I '$D(IOP) W ?20,$C(7),""  [DEVICE DOES NOT EXIST]"""
^XTMP("XPDT",7284,"RTN","ZIS1",84,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS1",85,0)="SETVAR ;Come here to setup the variables for the selected device"
^XTMP("XPDT",7284,"RTN","ZIS1",86,0)=" S:$D(IO)[0 IO="""" G KILVAR:%IS[""T""&(IO="""")"
^XTMP("XPDT",7284,"RTN","ZIS1",87,0)=" I $G(%Z)="""" S ION=""Unknown device"",POP=1 G KILVAR"
^XTMP("XPDT",7284,"RTN","ZIS1",88,0)=" S:IO'=IO(0)&($D(DUZ)#2) ^DISV(+DUZ,""^%ZIS(1,"")=%E"
^XTMP("XPDT",7284,"RTN","ZIS1",89,0)=" S ION=$P(%Z,""^"",1),IOM=+%Z91,IOF=$P(%Z91,""^"",2),IOSL=$P(%Z91,""^"",3),IOBS=$P(%Z91,""^"",4),IOXY=$P(%Z91,""^"",5)"
^XTMP("XPDT",7284,"RTN","ZIS1",90,0)=" I IOSL>65530 S IOSL=65530 ;Cache rolls $Y at 65535"
^XTMP("XPDT",7284,"RTN","ZIS1",91,0)=" S IOT=%ZTYPE,IOST(0)=%ZISIOST(0),IOST=%ZISIOST,IOPAR=%ZISOPAR,IOUPAR=%ZISUPAR,IOHG=%ZISHG"
^XTMP("XPDT",7284,"RTN","ZIS1",92,0)=" S:IOF="""" IOF=""#"" ;See that IOF has something"
^XTMP("XPDT",7284,"RTN","ZIS1",93,0)=" I $D(IO(""Q"")),'$D(%ZIS(""afn"")) K IO(""HFSIO"") ;Let TM build it at run time."
^XTMP("XPDT",7284,"RTN","ZIS1",94,0)=" K IOCPU S:$D(%ZISCPU) IOCPU=%ZISCPU"
^XTMP("XPDT",7284,"RTN","ZIS1",95,0)=" G KIL"
^XTMP("XPDT",7284,"RTN","ZIS1",96,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS1",97,0)="KILVAR ;Come here to restore the calling variables"
^XTMP("XPDT",7284,"RTN","ZIS1",98,0)=" D SYMBOL^%ZISUTL(1,""%ZISOLD"")"
^XTMP("XPDT",7284,"RTN","ZIS1",99,0)=" S:'$L($G(IOF)) IOF=""#"" S:'$D(IOST(0)) IOST(0)=0"
^XTMP("XPDT",7284,"RTN","ZIS1",100,0)=" ;See that all standard variables are defined"
^XTMP("XPDT",7284,"RTN","ZIS1",101,0)=" F %I=""IO"",""ION"",""IOM"",""IOBS"",""IOSL"",""IOST"" S:$D(@%I)[0 @%I="""""
^XTMP("XPDT",7284,"RTN","ZIS1",102,0)=" K IO(""HFSIO""),IO(""OPEN"") I $D(%ZISCPU) S:'$D(IOCPU) IOCPU=%ZISCPU"
^XTMP("XPDT",7284,"RTN","ZIS1",103,0)="KIL ;Final exit cleanup"
^XTMP("XPDT",7284,"RTN","ZIS1",104,0)=" S:'POP IOS=%ZISIOS I POP K:%IS'[""T"" %ZISIOS I %IS[""T"" K IOS S:$D(%ZISIOS) IOS=%ZISIOS"
^XTMP("XPDT",7284,"RTN","ZIS1",105,0)=" S:%IS[""T"" IO(""T"")=1 K %ZIS,%IS,%A,%E,%H,%ZISOS,%ZISV,IOP"
^XTMP("XPDT",7284,"RTN","ZIS1",106,0)="K2 K %I,%X,%Y,%Z,%Z1,%Z91,%Z95,%ZTYPE,%ZTIME"
^XTMP("XPDT",7284,"RTN","ZIS1",107,0)=" K %ZISCHK,%ZISCPU,%ZISI,%ZISR,%ZISVT,%ZISB,%ZISX,ZISI,%ZISHGL,%ZISHP,%ZISIO,%ZISIOS,%ZISIOM"
^XTMP("XPDT",7284,"RTN","ZIS1",108,0)=" K %ZISIOF,%ZISIOSL,%ZISIOBS,%ZISIOST,%ZISIOST(0),%ZISTO,%ZISTP,%ZISHG,%ZISSIO,%ZISOPEN,%ZISOPAR,%ZISUPAR"
^XTMP("XPDT",7284,"RTN","ZIS1",109,0)=" K %ZISMY,%ZISQUIT,%ZISLOCK"
^XTMP("XPDT",7284,"RTN","ZIS1",110,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS3")="0^7^B14236085^B13908684"
^XTMP("XPDT",7284,"RTN","ZIS3",1,0)="%ZIS3 ;SFISC/AC,RWF -- DEVICE HANDLER(DEVICE TYPES & PARAMETERS) ;07/17/08  14:56"
^XTMP("XPDT",7284,"RTN","ZIS3",2,0)=" ;;8.0;KERNEL;**18,36,69,104,391,440,499**;JUL 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZIS3",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7284,"RTN","ZIS3",4,0)=" ;Call with a Go from ^%ZIS2"
^XTMP("XPDT",7284,"RTN","ZIS3",5,0)=" I %ZIS'[""T"",$G(^%ZIS(1,+%E,""POX""))]"""" D XPOX^ZISX(%E) ;Pre-Open"
^XTMP("XPDT",7284,"RTN","ZIS3",6,0)=" I $D(%ZISQUIT) S POP=1 K %ZISQUIT"
^XTMP("XPDT",7284,"RTN","ZIS3",7,0)=" S %ZISCHK=1"
^XTMP("XPDT",7284,"RTN","ZIS3",8,0)=" ;I 'POP&(%ZISB)&(%ZTYPE'=""RES"")&(%ZTYPE'=""OTH"")&(%ZTYPE'=""SDP"")&(IO'[""::"") D DEVOK"
^XTMP("XPDT",7284,"RTN","ZIS3",9,0)=" ;See if need to lock."
^XTMP("XPDT",7284,"RTN","ZIS3",10,0)=" K %ZISLOCK"
^XTMP("XPDT",7284,"RTN","ZIS3",11,0)=" I %ZIS'[""T"",+$G(^%ZIS(1,+%E,""GBL"")) S %ZISLOCK=$NA(^%ZIS(""lock"",IO))"
^XTMP("XPDT",7284,"RTN","ZIS3",12,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS3",13,0)=" I 'POP G TRM:(%ZTYPE[""TRM""),@(%ZTYPE_""^%ZIS6"") ;Jump to next part"
^XTMP("XPDT",7284,"RTN","ZIS3",14,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS3",15,0)="Q ;%ZIS6 Returns here"
^XTMP("XPDT",7284,"RTN","ZIS3",16,0)=" ;See if need to un-lock."
^XTMP("XPDT",7284,"RTN","ZIS3",17,0)=" I $D(%ZISUOUT) K %ZISUOUT,%ZISHP,%ZISHPOP Q"
^XTMP("XPDT",7284,"RTN","ZIS3",18,0)=" I $D(%ZISHPOP)&$S(IO="""":1,1:'$D(IO(1,IO))) D HGBSY^%ZIS2 Q"
^XTMP("XPDT",7284,"RTN","ZIS3",19,0)=" I POP S:%ZIS'[""T"" IO="""" I $D(%ZISHG(0)),%ZIS'[""D"",'$D(%ZISHPOP) G HUNT^%ZIS2"
^XTMP("XPDT",7284,"RTN","ZIS3",20,0)=" Q  ;Return to %ZIS1"
^XTMP("XPDT",7284,"RTN","ZIS3",21,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS3",22,0)="VTRM ;Virtual terminal type"
^XTMP("XPDT",7284,"RTN","ZIS3",23,0)="TRM ;D OPEN^%ZIS4:'POP&(%ZISB&(%ZIS'[""T"")),MARGN:'POP,SETPAR:'POP ;Terminal type"
^XTMP("XPDT",7284,"RTN","ZIS3",24,0)=" D MARGN:'POP,SETPAR:'POP ;Terminal type// TEST CHANGE"
^XTMP("XPDT",7284,"RTN","ZIS3",25,0)=" I 'POP,%ZIS'[""T"",%ZISB=1,'$D(IOP),IO'=IO(0),'$D(IO(""Q"")),%ZIS[""Q"" D AQUE"
^XTMP("XPDT",7284,"RTN","ZIS3",26,0)=" D W("""")"
^XTMP("XPDT",7284,"RTN","ZIS3",27,0)=" I '$D(IO(""Q"")),'POP,%ZISB,%ZIS'[""T"" D O^%ZIS4"
^XTMP("XPDT",7284,"RTN","ZIS3",28,0)=" G Q"
^XTMP("XPDT",7284,"RTN","ZIS3",29,0)="DEVOK N X,Y,X1 ;Not sure this is needed"
^XTMP("XPDT",7284,"RTN","ZIS3",30,0)=" S X=IO,X1=%ZTYPE"
^XTMP("XPDT",7284,"RTN","ZIS3",31,0)=" D DEVOK^%ZOSV I Y=-99!(Y=0)!(Y=$J) Q"
^XTMP("XPDT",7284,"RTN","ZIS3",32,0)=" I Y>0 S POP=1 D:('$D(%ZISHG(0))!(%IS[""D"")) W($C(7)_""[Device Unavailable]"") Q"
^XTMP("XPDT",7284,"RTN","ZIS3",33,0)=" I Y=-1 S IO="""",POP=1 D:('$D(ZISHG(0))!(%IS[""D"")) W($C(7)_""[Device does not Exist or Unavailable]"") Q"
^XTMP("XPDT",7284,"RTN","ZIS3",34,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS3",35,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS3",36,0)="MARGN ;Get the margin and page length"
^XTMP("XPDT",7284,"RTN","ZIS3",37,0)=" S %A=$P(%Y,"";"",1)"
^XTMP("XPDT",7284,"RTN","ZIS3",38,0)=" I %A?1A.ANP D SUBIEN(.%A,1) I $D(^%ZIS(2,%A,1)) K %Z91 D ST(1) S %Y=$P(%Y,"";"",2,9),%ZISMY=$P(%ZISMY,"";"",2,9) G MARGN"
^XTMP("XPDT",7284,"RTN","ZIS3",39,0)=" I %A>3 S $P(%Z91,""^"")=$S(%A>255:255,1:+%A)"
^XTMP("XPDT",7284,"RTN","ZIS3",40,0)=" I $P(%Y,"";"",2) S $P(%Z91,""^"",3)=+$S($P(%Y,"";"",2)>65534:65534,1:$P(%Y,"";"",2)) ;Cache fix for $Y#65535 wrap"
^XTMP("XPDT",7284,"RTN","ZIS3",41,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS3",42,0)="ALTP I '$D(IO(""P"")) Q:%A>3  G ASKMAR:%ZTYPE[""TRM"" Q"
^XTMP("XPDT",7284,"RTN","ZIS3",43,0)=" S %X=$F(IO(""P""),""M"") I %X S %A=+$E(IO(""P""),%X,99),$P(%Z91,""^"")=$S(%A>255:255,1:%A)"
^XTMP("XPDT",7284,"RTN","ZIS3",44,0)=" S %X=$F(IO(""P""),""L"") I %X S $P(%Z91,""^"",3)=+$E(IO(""P""),%X,99)"
^XTMP("XPDT",7284,"RTN","ZIS3",45,0)=" Q:%A>3!(%ZTYPE'[""TRM"")"
^XTMP("XPDT",7284,"RTN","ZIS3",46,0)="ASKMAR I %IS[""M"",'$D(IOP),$S(%E=%H:+$P(%Z,""^"",3),1:1),$P(%Z,""^"",4) W ""    Right Margin: "" W:$P(%Z91,""^"")]"""" +%Z91,""// """
^XTMP("XPDT",7284,"RTN","ZIS3",47,0)=" E  Q"
^XTMP("XPDT",7284,"RTN","ZIS3",48,0)=" D SBR^%ZIS1 I '$D(DTOUT)&'$D(DUOUT) S:%X=""""&($P(%Z91,""^"")]"""") %X=+%Z91 G ASKMAR:%X'?1.N S $P(%Z91,""^"")=$S(%X>255:255,1:%X) Q"
^XTMP("XPDT",7284,"RTN","ZIS3",49,0)=" S POP=1 I %ZISB&(%ZTYPE[""TRM"") D C Q"
^XTMP("XPDT",7284,"RTN","ZIS3",50,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS3",51,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS3",52,0)="W(%) ;Write text"
^XTMP("XPDT",7284,"RTN","ZIS3",53,0)=" Q:$D(IOP)"
^XTMP("XPDT",7284,"RTN","ZIS3",54,0)=" W !,%"
^XTMP("XPDT",7284,"RTN","ZIS3",55,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS3",56,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS3",57,0)="C ;Close open device"
^XTMP("XPDT",7284,"RTN","ZIS3",58,0)=" I IO'=$G(IO(0)),$D(IO(1,IO)) C IO K IO(1,IO)"
^XTMP("XPDT",7284,"RTN","ZIS3",59,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS3",60,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS3",61,0)="SETPAR S:$L(%ZISOPAR)&($E(%ZISOPAR)'=""("") %ZISOPAR=""(""_%ZISOPAR_"")"""
^XTMP("XPDT",7284,"RTN","ZIS3",62,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS3",63,0)="AQUE ;Ask about Queueing"
^XTMP("XPDT",7284,"RTN","ZIS3",64,0)=" W ! S %=$S($D(IO(""Q"")):1,1:2)"
^XTMP("XPDT",7284,"RTN","ZIS3",65,0)=" I $D(IO(""Q"")) W !,""Previously, you have selected queueing."""
^XTMP("XPDT",7284,"RTN","ZIS3",66,0)=" W !,""Do you ""_$S($D(IO(""Q"")):""STILL "",1:"""")_""want your output QUEUED"""
^XTMP("XPDT",7284,"RTN","ZIS3",67,0)=" D YN^%ZIS1 G AQUE:%=0 Q:$D(IO(""Q""))"
^XTMP("XPDT",7284,"RTN","ZIS3",68,0)=" I %=-1 S POP=1,%ZISHPOP=1,%ZISUOUT=1 D C Q"
^XTMP("XPDT",7284,"RTN","ZIS3",69,0)=" I %=1 S IO(""Q"")=1 D C Q"
^XTMP("XPDT",7284,"RTN","ZIS3",70,0)=" ;I %=2 K IO(""Q"")"
^XTMP("XPDT",7284,"RTN","ZIS3",71,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS3",72,0)="ST(%ZISTP) ;"
^XTMP("XPDT",7284,"RTN","ZIS3",73,0)=" S %ZISIOST(0)=%A,%ZISIOST=$P($G(^%ZIS(2,%A,0)),""^"")"
^XTMP("XPDT",7284,"RTN","ZIS3",74,0)=" S:'$D(%Z91) %Z91=$P($G(^%ZIS(2,%A,1),""132^#^60^$C(8)""),""^"",1,4),$P(%Z91,""^"",5)=$G(^(""XY""))"
^XTMP("XPDT",7284,"RTN","ZIS3",75,0)=" Q:%ZISTP"
^XTMP("XPDT",7284,"RTN","ZIS3",76,0)="STP N %B ;%E is a pointer to the Device file"
^XTMP("XPDT",7284,"RTN","ZIS3",77,0)=" S %B=$G(^%ZIS(1,%E,91))"
^XTMP("XPDT",7284,"RTN","ZIS3",78,0)=" S:$P(%B,""^"")]"""" $P(%Z91,""^"")=+%B S:$P(%B,""^"",3)]"""" $P(%Z91,""^"",3)=$P(%B,""^"",3) ;S $P(%Z91,""^"",5)=$G(^%ZIS(2,%ZISIOST(0),""XY""))"
^XTMP("XPDT",7284,"RTN","ZIS3",79,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS3",80,0)="SUBIEN(%1,%) ;Return Subtype ien. %1 is call by Ref."
^XTMP("XPDT",7284,"RTN","ZIS3",81,0)=" N %XX,%YY"
^XTMP("XPDT",7284,"RTN","ZIS3",82,0)=" I $D(^%ZIS(2,""B"",%1))>9 S %1=+$O(^%ZIS(2,""B"",%1,0)) Q"
^XTMP("XPDT",7284,"RTN","ZIS3",83,0)=" I '$G(%) S X="""" Q"
^XTMP("XPDT",7284,"RTN","ZIS3",84,0)=" S %XX=%1 D 2^%ZIS5 S %1=+%YY"
^XTMP("XPDT",7284,"RTN","ZIS3",85,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS3",86,0)="SUBTYPE(%A) ;Called from %ZISH"
^XTMP("XPDT",7284,"RTN","ZIS3",87,0)=" N %ZISIOST,%Z91"
^XTMP("XPDT",7284,"RTN","ZIS3",88,0)=" S:$G(%A)="""" %A=""P-OTHER"""
^XTMP("XPDT",7284,"RTN","ZIS3",89,0)=" D SUBIEN(.%A),ST(1)"
^XTMP("XPDT",7284,"RTN","ZIS3",90,0)=" S IOM=$P(%Z91,U,1),IOF=$P(%Z91,U,2),IOSL=$P(%Z91,U,3),IOST=%ZISIOST,IOST(0)=%ZISIOST(0),IOBS=""$C(8)"""
^XTMP("XPDT",7284,"RTN","ZIS3",91,0)=" S:IOST="""" IOST=""P-OTHER"",IOST(0)=0"
^XTMP("XPDT",7284,"RTN","ZIS3",92,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM")="0^2^B20384143^B19862476"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",1,0)="%ZIS4 ;ISF/RWF,DW - DEVICE HANDLER SPECIFIC CODE (GT.M for Unix/VMS) ;05/29/2008"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",2,0)=" ;;8.0;KERNEL;**275,425,440,499**;Jul 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",4,0)="OPEN ;From %ZIS3 for TRM"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",5,0)=" G OPN2:$D(IO(1,IO))"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",6,0)=" S POP=0 D OP1 G NOPEN:'$D(IO(1,IO))"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",7,0)="OPN2 ;"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",8,0)=" I $D(%ZISHP),'$D(IOP) W !,*7,"" Routing to device ""_$P(^%ZIS(1,%E,0),""^"",1)_$S($D(^(1)):"" ""_$P(^(1),""^"",1)_"" "",1:"""")"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",9,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",10,0)="NOPEN I %IS'[""D"",$D(%ZISHP)!(%ZISHG]"""") S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",11,0)=" I '$D(IOP) W *7,""  [BUSY]"" W ""  ...  RETRY"" S %=2,U=""^"" D YN^%ZIS1 G OPEN:%=1"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",12,0)=" S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",13,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",14,0)=" ;Why no open paraneters???"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",15,0)="OP1 N $ET S $ET=""G OPNERR^%ZIS4"""
^XTMP("XPDT",7284,"RTN","ZIS4GTM",16,0)=" I $D(%ZISLOCK) L +@%ZISLOCK:5 E  S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",17,0)=" O IO::%ZISTO S:$T IO(1,IO)="""" S:'$T POP=1"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",18,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",19,0)="OPNERR ;Open Error"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",20,0)=" S POP=1,IO(""LASTERR"")=$G(IO(""ERROR"")),IO(""ERROR"")=$$EC^%ZOSV,$EC="""""
^XTMP("XPDT",7284,"RTN","ZIS4GTM",21,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",22,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",23,0)="O ;From %ZIS6 for all types."
^XTMP("XPDT",7284,"RTN","ZIS4GTM",24,0)=" D:%IS[""L"" ZIO"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",25,0)=" I $D(IO(""S"")),$D(^%ZIS(2,IO(""S""),10)),^(10)]"""" U IO(0) D X10^ZISX ;Open Printer Port"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",26,0)="OPAR I $D(IOP),%ZTYPE=""HFS"",$D(%IS(""HFSIO"")),$D(%IS(""IOPAR"")),%IS(""HFSIO"")]"""" S IO=%IS(""HFSIO""),%ZISOPAR=%IS(""IOPAR"")"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",27,0)=" I %ZTYPE=""CHAN"" D TCPIP Q:POP  G OXECUTE^%ZIS6"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",28,0)=" S %A=%ZISOPAR_$S(%ZISOPAR[""):"":"""",1:"":""_%ZISTO)"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",29,0)=" N % S %(IO)="""",%=$P($P($NA(%(IO)),""("",2),"")"")"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",30,0)=" S %A=%_$E("":"",%A]"""")_%A"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",31,0)=" D O1 I POP D  Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",32,0)=" .I %ZTYPE=""HFS"",'$D(IOP),$G(IO(""ERROR""))[""file not found"" W !,?5,*7,""[File Not Found]"" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",33,0)=" .W:'$D(IOP) !,?5,*7,""[DEVICE IS BUSY]"" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",34,0)=" ;S IO(1,IO)="""" U IO S:'(IO=IO(0)&'$D(IO(""S""))&'$D(ZTQUEUED)) $X=0,$Y=0 I %ZTYPE[""TRM"" U IO:(WIDTH=+%Z91)"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",35,0)=" U IO S $X=0,$Y=0 I %ZTYPE[""TRM"" U IO:(WIDTH=+%Z91)"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",36,0)=" I %ZISUPAR]"""" S %A1=""""""""_IO_"""""":""_%ZISUPAR U @%A1"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",37,0)=" ;U:%IS'[0 IO(0)"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",38,0)=" G OXECUTE^%ZIS6"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",39,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",40,0)="O1 N $ES,$ET S $ET=""G OPNERR^%ZIS4"""
^XTMP("XPDT",7284,"RTN","ZIS4GTM",41,0)=" I $D(%ZISLOCK) L +@%ZISLOCK:5 E  S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",42,0)=" O @%A S:'$T&(%A?.E1"":"".N) POP=1 S:'POP IO(1,IO)="""""
^XTMP("XPDT",7284,"RTN","ZIS4GTM",43,0)=" S IO(""ERROR"")="""" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",44,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",45,0)=" ;Need to find out how to get IP address"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",46,0)="ZIO N %,%1 S (%,%1)=$ZIO"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",47,0)=" I $ZV[""VMS"",%[""_TNA"" D"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",48,0)=" . S (%,%1)=$ZGETDVI($I,""TT_ACCPORNAM"")"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",49,0)=" . S %=$S(%[""Host:"":$P($P(%,""Host: "",2),"" "")_"":""_$P(%,""Port: "",2),1:%) S:%["" "" %=$TR(%,"" "")"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",50,0)=" I $ZV'[""VMS"" D"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",51,0)=" . S (%,%1)=$ZTRNLNM(""REMOTEHOST"") S:$L(%) %1=""Host:""_% S:'$L(%) %=$ZIO"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",52,0)=" . S:%1'[""Host"" %1=$ZTRNLNM(""SSH_CLIENT"") S:$L(%1) %1=""Host:""_$P(%1,"" "")"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",53,0)=" S IO(""ZIO"")=% S:(%1[""Host:"")&'$D(IO(""IP"")) IO(""IP"")=$P(%1,"":"",2)"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",54,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",55,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",56,0)="TCPIP ;For TCP/IP devices, should use ^%ZISTCP"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",57,0)=" N %S"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",58,0)=" S %ZISTO=$G(%ZISTO,3)"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",59,0)=" S %A=""IO:""_$S($E(%ZISOPAR)=""("":"""",1:""("")_%ZISOPAR_$S($E(%ZISOPAR,$L(%ZISOPAR))="")"":"""",1:"")"")_"":%ZISTO:""""SOCKET"""""""
^XTMP("XPDT",7284,"RTN","ZIS4GTM",60,0)=" ;U $P W !,""%A="",%A"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",61,0)=" O @%A I '$T S POP=1 Q  ;D O1 ;Do the open."
^XTMP("XPDT",7284,"RTN","ZIS4GTM",62,0)=" U IO:(WIDTH=512:NOWRAP:EXCEPT=""G OPNERR^%ZIS4"") S %S=$KEY"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",63,0)=" U $P ;W !,""$KEY="",%S"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",64,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",65,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",66,0)="SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file name."
^XTMP("XPDT",7284,"RTN","ZIS4GTM",67,0)=" I $D(ZISDA) W:'$D(IOP) !?5,*7,""You may not Spool the printing of a Spool document"" G N"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",68,0)=" I $D(DUZ)[0 W:'$D(IOP) !,""Must be a valid user."" G N"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",69,0)="R S %ZY=-1 D NEWDOC^ZISPL1 G N:%ZY'>0"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",70,0)=" S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO(""DOC"")=$P(%ZY(0),U,1) G OK:$D(IO(""Q""))"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",71,0)=" G:'%ZISB OK I '$P(%ZY,""^"",3),$L(%ZFN) O %ZFN:(append:nowrap):2 G DOC"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",72,0)=" S %ZFN=IO_""SPOOL_no_""_%ZDA_"".TMP"" D SPL2 G:%ZFN']"""" N S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,""C"",%ZFN,%ZDA)="""""
^XTMP("XPDT",7284,"RTN","ZIS4GTM",73,0)="DOC S IO=%ZFN,IO(""SPOOL"")=%ZDA,^XUTL(""XQ"",$J,""SPOOL"")=%ZDA,IOF=""#"""
^XTMP("XPDT",7284,"RTN","ZIS4GTM",74,0)=" I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),""^"",8),$O(^(""SPL"",0)) S ^XUTL(""XQ"",$J,""ADSPL"")=%ZISIOS,ZISPLAD=%ZISIOS"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",75,0)="OK K %ZDA,%ZFN Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",76,0)="N K %ZDA,%ZFN,IO(""DOC"") S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",77,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",78,0)="SPL2 ;Open for write"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",79,0)=" O %ZFN:(newversion:noreadonly:nowrap:exception=""G SPL4""):2 G:$ZA<0 SPL4 S IO(1,%ZFN)="""" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",80,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",81,0)="SPL3 ;Open for Read"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",82,0)=" O %ZFN:(readonly:exception=""G SPL4""):2 S:'$T ZISPLQ=1 G:'$T SPL4 S IO(1,%ZFN)="""" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",83,0)="SPL4 W:'$D(IOP)&'$D(ZTQUEUED) !?5,*7,""Couldn't open the spool file."" S %ZFN="""" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",84,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",85,0)="CLOSE ;Close out the spool"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",86,0)=" N %,%1,%Z1,%ZFN,%ZS,%ZDA,XS,%Y,%X"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",87,0)=" I $L(IO) C IO K IO(1,IO)"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",88,0)=" D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",89,0)=" S %ZFN=$P(%ZS,""^"",2) D SPL3 Q:%ZFN']""""  S %ZCR=$C(13),%Y="""""
^XTMP("XPDT",7284,"RTN","ZIS4GTM",90,0)=" S %Z1=+$G(^XTV(8989.3,1,""SPL"")),%=0"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",91,0)=" U %ZFN F  R %X#255:5 Q:$ZEOF  S %2=%X D CL2 Q:%Z1<%"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",92,0)="SPLEX C %ZFN:(DELETE) K:%ZFN]"""" IO(1,%ZFN) D CLOSE^ZISPL1 K %Y,%X,%1,%ZFN Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",93,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",94,0)="CL2 S %=%+1 I %Z1<% S ^XMBS(3.519,XS,2,%,0)=""*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***"",$P(^XMB(3.51,%ZDA,0),""^"",11)=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",95,0)=" I %2[$C(12) S ^XMBS(3.519,XS,2,%,0)=""|TOP|"" Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",96,0)=" S ^XMBS(3.519,XS,2,%,0)=%2 Q"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",97,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",98,0)="HFS G HFS^%ZISF"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",99,0)="REWMT(IO,IOPAR) ;Rewind Magtape"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",100,0)=" S X=""REWERR^%ZIS4"",@^%ZOSF(""TRAP"")"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",101,0)=" U IO W *5"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",102,0)=" Q 1"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",103,0)="REWSDP(IO,IOPAR) ;Rewind SDP"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",104,0)=" G REW1"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",105,0)="REWHFS(IO,IOPAR) ;Rewind Host File."
^XTMP("XPDT",7284,"RTN","ZIS4GTM",106,0)="REW1 S X=""REWERR^%ZIS4"",@^%ZOSF(""TRAP"")"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",107,0)=" U IO:(REWIND)"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",108,0)=" Q 1"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",109,0)="REWERR ;Error encountered"
^XTMP("XPDT",7284,"RTN","ZIS4GTM",110,0)=" Q 0"
^XTMP("XPDT",7284,"RTN","ZIS4ONT")="0^1^B29872561^B27677822"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",1,0)="%ZIS4 ;SFISC/RWF,AC - DEVICE HANDLER SPOOL SPECIFIC CODE (Cache) ;10/14/08  14:27"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",2,0)=" ;;8.0;KERNEL;**34,59,69,191,278,293,440,499**;Jul 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",4,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",5,0)="OPEN ;Called for TRM devices"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",6,0)=" G OPN2:$D(IO(1,IO))"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",7,0)=" S POP=0 D OP1 G NOPEN:'$D(IO(1,IO))"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",8,0)="OPN2 ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",9,0)=" I $D(%ZISHP),'$D(IOP) W !,$C(7)_"" Routing to device ""_$P(^%ZIS(1,%E,0),""^"",1)_$S($D(^(1)):"" ""_$P(^(1),""^"",1)_"" "",1:"""")"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",10,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",11,0)="NOPEN ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",12,0)=" I %IS'[""D"",$D(%ZISHP)!(%ZISHG]"""") S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",13,0)=" I '$D(IOP) W $C(7)_""  [BUSY]"" W ""  ...  RETRY"" S %=2,U=""^"" D YN^%ZIS1 G OPEN:%=1"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",14,0)=" S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",15,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",16,0)="OP1 N $ET S $ET=""G OPNERR^%ZIS4"""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",17,0)=" I $D(%ZISLOCK) L +@%ZISLOCK:5 E  S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",18,0)=" O IO::%ZISTO S:$T IO(1,IO)="""" S:'$T POP=1"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",19,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",20,0)="OPNERR S POP=1,IO(""LASTERR"")=$G(IO(""ERROR"")),IO(""ERROR"")=$ZE,$EC="""""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",21,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",22,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",23,0)="O ;Gets called for all devices"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",24,0)=" N X,%A1"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",25,0)=" D:%ZIS[""L"" ZIO"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",26,0)=" I $D(IO(""S"")),$D(^%ZIS(2,IO(""S""),10)),^(10)]"""" U IO(0) D X10^ZISX ;Open Printer port"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",27,0)="OPAR I $D(IOP),%ZTYPE=""HFS"",$D(%ZIS(""HFSIO"")),$D(%ZIS(""IOPAR"")),%ZIS(""HFSIO"")]"""" S IO=%ZIS(""HFSIO""),%ZISOPAR=%ZIS(""IOPAR"")"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",28,0)=" S %A=$S($L(%ZISOPAR):%ZISOPAR,%ZTYPE'[""TRM"":"""",$E(%ZISIOST,1)=""C"":""(""_+%Z91_"":""""C"""")"",$E(%ZISIOST,1,2)=""PK"":""(""_+%Z91_"":""""P"""")"",1:+%Z91)"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",29,0)=" S %A=%A_$S(%A[""):"":"""",%ZTYPE[""OTH""&($P(%ZTIME,""^"",3)=""n""):"""",1:"":""_%ZISTO),%A=""""""""_IO_""""""""_$E("":"",%A]"""")_%A"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",30,0)=" D O1 I POP W:'$D(IOP) !,?5,$C(7)_""[Device is BUSY]"" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",31,0)=" ;I %ZTYPE=""HFS"" U IO S X=IO,IO=IO_"";""_$P($ZIO,"";"",2),IO(1,IO)="""" K IO(1,X)"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",32,0)=" U IO S $X=0,$Y=0"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",33,0)=" I $L(%ZISUPAR) S %A1=""""""""_IO_"""""":""_%ZISUPAR U @%A1"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",34,0)=" ;U:%IS'[0 IO(0)"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",35,0)=" G OXECUTE^%ZIS6"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",36,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",37,0)="O1 N $ET S $ET=""G OPNERR^%ZIS4"""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",38,0)=" I $D(%ZISLOCK) L +@%ZISLOCK:5 E  S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",39,0)=" O @%A S:'$T&(%A?.E1"":"".N) POP=1 S:'POP IO(1,IO)="""""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",40,0)=" S IO(""ERROR"")="""""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",41,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",42,0)=" ;Version 3 used ip/port, Version 4 has ip:port|xx"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",43,0)="ZIO N %,%1 S %=$ZIO,%1=$$VERSION^%ZOSV"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",44,0)=" S IO(""ZIO"")=$S(%1<4:$I,1:$ZIO),%1=$S(%[""/"":""/"",1:"":"")"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",45,0)=" I $D(IO(""IP"")) Q  ;p499"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",46,0)=" ;Drop prefix"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",47,0)=" S:%[""|TNT|"" %=$E(%,6,999) S:%[""|TNA|"" %=$E(%,6,999)"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",48,0)=" ;Get IP name or number"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",49,0)=" S:$P(%,%1)[""."" IO(""IP"")=$P(%,%1)"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",50,0)=" I $$OS^%ZOSV=""VMS"",$G(IO(""IP""))="""" S IO(""IP"")=$P($ZF(""TRNLNM"",""SYS$REM_NODE""),"":"") ;For SSH, p499"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",51,0)=" S:'$L(IO(""ZIO"")) IO(""ZIO"")=$G(IO(""IP""))"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",52,0)=" I $L($G(IO(""IP""))),IO(""IP"")'?1.3N1P1.3N1P1.3N1P1.3N S IO(""IP"")=$P($ZU(54,13,IO(""IP"")),"","") ;p499"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",53,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",54,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",55,0)="SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file Num/Name."
^XTMP("XPDT",7284,"RTN","ZIS4ONT",56,0)=" N %ZOS S %ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",57,0)=" I '$D(^XMB(3.51,0)) W:'$D(IOP) !?5,""The spooler files are not setup in this account."" G NO"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",58,0)=" I $D(ZISDA) W:'$D(IOP) !?5,$C(7)_""You may not Spool the printing of a Spool document"" G NO"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",59,0)=" I $D(DUZ)[0 W:'$D(IOP) !,""Must be a valid user."" G NO"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",60,0)=" ;Get entry in Spool Doc file"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",61,0)="R S %ZY=-1 D NEWDOC^ZISPL1:$D(DUZ)=11 G NO:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO(""DOC"")=$P(%ZY(0),U,1) G OK:$D(IO(""Q""))"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",62,0)=" G:'%ZISB OK I '$P(%ZY,""^"",3),%ZFN]"""" D SPL3 G NO:%ZFN<0,DOC"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",63,0)=" I %ZOS=""NT"" D  G:%ZFN>255 NO"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",64,0)=" . F %ZFN=1:1:260 I '$D(^XMB(3.51,""C"",%ZFN))!$D(^(%ZFN,%ZDA)) Q:%ZFN<256  W:'$D(IOP) $C(7)_""  DELETE SOME OTHER DOCUMENT!"" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",65,0)=" . Q:%ZFN>255  D SPL2 S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,""C"",%ZFN,%ZDA)="""""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",66,0)=" I %ZOS=""VMS"" D  G:%ZFN=-1 NO"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",67,0)=" . S %ZFN=IO_""SPOOL_no_""_%ZDA_"".TMP"" D SPL2 Q:%ZFN=-1  S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,""C"",%ZFN,%ZDA)="""",IO=%ZFN"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",68,0)="DOC S IO(""SPOOL"")=%ZDA,^XUTL(""XQ"",$J,""SPOOL"")=%ZDA"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",69,0)=" I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),""^"",8),$O(^(""SPL"",0)) S ^XUTL(""XQ"",$J,""ADSPL"")=%ZISIOS,ZISPLAD=%ZISIOS"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",70,0)="OK K %ZDA,%ZFN Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",71,0)="NO K %ZDA,%ZFN,IO(""DOC"") S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",72,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",73,0)="SPL2 I %ZOS=""NT"" O IO:(%ZFN:0) S IO(1,IO)="""",^SPOOL(0,IO(""DOC""),%ZFN)="""",^SPOOL(%ZFN,0)=IO(""DOC"")_""{""_$H Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",74,0)=" ;VMS"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",75,0)=" O %ZFN:(""WNS""):2 G:'$T SPL4 S IO(1,%ZFN)="""" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",76,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",77,0)="SPL3 I %ZOS=""NT"" G SPL4:'$D(^SPOOL(%ZFN,2147483647)) O IO:(%ZFN:$P(^(2147483647),""{"",3)):1 S:'$T ZISPLQ=1 K ^(2147483647) S IO(1,IO)="""" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",78,0)=" ;VMS"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",79,0)=" N $ETRAP S $ETRAP=""S $EC="""""""" G SPL4^%ZIS4"""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",80,0)=" O %ZFN:""RV"":1 S:'$T ZISPLQ=1 G:$ZA<0!('$T) SPL4 S IO(1,%ZFN)="""" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",81,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",82,0)="SPL4 W:'$D(IOP) !,""Spool file already open"" S %ZFN=-1 Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",83,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",84,0)="CLOSE N %ZOS,%Z1,%ZCR,%2,%3,%X,%Y,ZTSK,%ZFN S %ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",85,0)=" I %ZOS=""NT"",IO=2,$D(IO(1,IO)) K IO(1,IO) C IO"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",86,0)=" I %ZOS=""VMS"",IO]"""",$D(IO(1,IO)) U IO S %ZFN=$ZIO C IO K IO(1,IO)"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",87,0)=" ;See that ZTSK is set so we will move to the global now."
^XTMP("XPDT",7284,"RTN","ZIS4ONT",88,0)=" S ZTSK=$G(ZTSK,1) D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",89,0)=" G:%ZOS=""VMS"" CLVMS"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",90,0)=" S %ZFN=$P(%ZS,""^"",2),%ZCR=$C(13),%Y="""",%=0,%3=$P(^SPOOL(%ZFN,2147483647),""{"",3)"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",91,0)=" S %Z1=+$G(^XTV(8989.3,1,""SPL""))"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",92,0)=" F %2=1:1:%3 Q:'$D(^SPOOL(%ZFN,%2))  S %X=^SPOOL(%ZFN,%2) D"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",93,0)=" . I %Z1<% D LIMIT S %2=%3 Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",94,0)=" . I %X[$C(13,12) D:$L($P(%X,$C(13))) ADD($P(%X,$C(13))) D ADD(""|TOP|"") Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",95,0)=" . D ADD($P(%X,$C(13),1))"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",96,0)=" K ^SPOOL(%ZFN),^SPOOL(0,$P(%ZS,U,1)),%Y,%X,%1,%2,%3 D CLOSE^ZISPL1"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",97,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",98,0)="ADD(L) S %=%+1,^XMBS(3.519,XS,2,%,0)=L"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",99,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",100,0)="LIMIT D ADD(""*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***"") S $P(^XMB(3.51,%ZDA,0),""^"",11)=1"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",101,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",102,0)="CLVMS ;Close for Cache VMS"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",103,0)=" N $ES,$ET S $ET=""D:$EC'[""""ENDOF"""" ^%ZTER,UNWIND^%ZTER S $EC="""""""" D SPLEX^%ZIS4,UNWIND^%ZTER"""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",104,0)=" S %ZA=$ZU(68,40,1) ;Work like DSM"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",105,0)=" ;%ZFN Could be set at the top"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",106,0)=" S %ZFN=$S($G(%ZFN)]"""":%ZFN,1:$P(%ZS,""^"",2)) D SPL3 Q:%ZFN']""""  U %ZFN S %ZCR=$C(13),%Y="""""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",107,0)=" S %Z1=+$G(^XTV(8989.3,1,""SPL"")),%=0"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",108,0)=" F  R %X#255:5 Q:$ZEOF<0  D  G:%Z1<% SPLEX"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",109,0)=" . I %Z1<% D LIMIT Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",110,0)=" . I %X[$C(12) D  Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",111,0)=" . . S %Y=$P(%X,$C(12)) D:$L(%Y) ADD(%Y),ADD(""|TOP|"")"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",112,0)=" . . S %Y=$P(%X,$C(12),2) D:$L(%Y) ADD(%Y)"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",113,0)=" . . Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",114,0)=" . D ADD(%X)"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",115,0)=" . Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",116,0)="SPLEX C %ZFN:""D"" K:%ZFN]"""" IO(1,%ZFN) D CLOSE^ZISPL1 K %Y,%X,%1,%ZFN Q"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",117,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",118,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",119,0)="HFS G HFS^%ZISF"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",120,0)="REWMT(IO2,IOPAR) ;Rewind Magtape"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",121,0)=" N $ETRAP S $ET=""G REWERR^%ZIS4"""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",122,0)=" U IO2 W *5"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",123,0)=" Q 1"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",124,0)="REWSDP(IO2,IOPAR) ;Rewind SDP"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",125,0)=" G REW1"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",126,0)="REWHFS(IO2,IOPAR) ;Rewind Host File."
^XTMP("XPDT",7284,"RTN","ZIS4ONT",127,0)="REW1 ;ZIS set % to the current $I so need to update % if = IO"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",128,0)=" N NIO,OP,$ETRAP"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",129,0)=" S $ET=""G REWERR^%ZIS4"""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",130,0)=" C IO2 ;You do a rewind to read the file."
^XTMP("XPDT",7284,"RTN","ZIS4ONT",131,0)=" S OP=$S($ZV[""VMS"":""RV"",1:""RS"")"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",132,0)=" O IO2:(OP):1 S IO(1,IO2)="""""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",133,0)=" Q 1"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",134,0)="REWERR ;Error encountered"
^XTMP("XPDT",7284,"RTN","ZIS4ONT",135,0)=" S IO(""ERROR"")=$EC,$ECODE="""""
^XTMP("XPDT",7284,"RTN","ZIS4ONT",136,0)=" Q 0"
^XTMP("XPDT",7284,"RTN","ZIS5")="0^8^B13269875^B13100730"
^XTMP("XPDT",7284,"RTN","ZIS5",1,0)="%ZIS5 ;SFISC/STAFF --DEVICE LOOK-UP ;07/17/08  13:44"
^XTMP("XPDT",7284,"RTN","ZIS5",2,0)=" ;;8.0;KERNEL;**18,24,69,499**;JUL 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZIS5",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7284,"RTN","ZIS5",4,0)=" ;Does a DIC like lookup. %XX,%YY are call in/out parameters"
^XTMP("XPDT",7284,"RTN","ZIS5",5,0)=" N %DO,%DIY,%DD,%DIX"
^XTMP("XPDT",7284,"RTN","ZIS5",6,0)=" S U=""^"",%DO="""" K DUOUT"
^XTMP("XPDT",7284,"RTN","ZIS5",7,0)=" I $D(^%ZIS(%ZISDFN,0)) S %DO=^(0)"
^XTMP("XPDT",7284,"RTN","ZIS5",8,0)="A G:%ZIS(0)'[""A"" X I $D(%ZIS(""A"")) S %DD=%ZIS(""A"") G B"
^XTMP("XPDT",7284,"RTN","ZIS5",9,0)=" S %DD=""Select ""_$P(%DO,U,1)_"": """
^XTMP("XPDT",7284,"RTN","ZIS5",10,0)="B I $D(%ZIS(""B"")),%ZIS(""B"")]"""" S %YY=%ZIS(""B""),%XX=$O(^%ZIS(%ZISDFN,%D,%YY)),%DIY=$S($F(%XX,%YY)-1=$L(%YY):%XX,$D(^%ZIS(%ZISDFN,%YY,0)):$P(^(0),U,1),1:%YY) W %DD,%DIY,""// "" R %XX:%ZISDTIM G G:%XX]"""" S %XX=%DIY G G"
^XTMP("XPDT",7284,"RTN","ZIS5",11,0)=" W !,%DD R %XX:%ZISDTIM"
^XTMP("XPDT",7284,"RTN","ZIS5",12,0)="G G NO:'$T,NO:%XX[""^"" G:%XX?.N&(+%XX=%XX) NUM I %XX'?.ANP!($L(%XX)>30) W:%ZIS(0)[""Q"" *7,"" ??"" G A"
^XTMP("XPDT",7284,"RTN","ZIS5",13,0)="X I %XX="" "",$D(DUZ)#2,$D(^DISV(+DUZ,""^%ZIS(""_%ZISDFN_"","")) S %YY=+^(""^%ZIS(""_%ZISDFN_"","") D S G:'$T NO G GOT"
^XTMP("XPDT",7284,"RTN","ZIS5",14,0)="F G NO:%XX="""" K %DS S %DS=0,%DS(0)=1,%DIX=%XX,%DIY=0"
^XTMP("XPDT",7284,"RTN","ZIS5",15,0)=" I $D(^%ZIS(%ZISDFN,%D,%XX)) G T1"
^XTMP("XPDT",7284,"RTN","ZIS5",16,0)="TRY S %DIX=$O(^%ZIS(%ZISDFN,%D,%DIX)) G:$P(%DIX,%XX,1)'=""""!(%DIX="""") T2 S %DIY=0"
^XTMP("XPDT",7284,"RTN","ZIS5",17,0)="T1 S %DIY=$O(^%ZIS(%ZISDFN,%D,%DIX,+%DIY)) G:%DIY'>0 TRY S %YY=+%DIY D S G:'$T T1"
^XTMP("XPDT",7284,"RTN","ZIS5",18,0)=" I %DS,'(%DS#10) D LST G NO:%XX=U,ADD:%YY<0,GOT:%YY>0"
^XTMP("XPDT",7284,"RTN","ZIS5",19,0)=" S %DS=%DS+1,%DS(%DS)=%DIY G T1"
^XTMP("XPDT",7284,"RTN","ZIS5",20,0)="LSYN ;"
^XTMP("XPDT",7284,"RTN","ZIS5",21,0)="S I $D(^%ZIS(%ZISDFN,%YY,0)) G S1"
^XTMP("XPDT",7284,"RTN","ZIS5",22,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS5",23,0)="S1 G S2:%ZISDFN'=1!(%D'=""LSYN"") I $P(^%ZIS(1,%YY,0),U,9)=%ZISV!($P(^(0),U,9)="""") G S2"
^XTMP("XPDT",7284,"RTN","ZIS5",24,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS5",25,0)="S2 N Y S Y=%YY D:$D(%ZIS(""S"")) XS^ZISX Q"
^XTMP("XPDT",7284,"RTN","ZIS5",26,0)="T2 G:'%DS NO S %DIY="""" D LST G NO:%XX=U,ADD:%YY<1,GOT"
^XTMP("XPDT",7284,"RTN","ZIS5",27,0)="LST I %DS=1,'$D(%ZISLST) S %YY=%DS(1) Q"
^XTMP("XPDT",7284,"RTN","ZIS5",28,0)=" S %YY=-1 Q:%ZIS(0)'[""E""  W !"
^XTMP("XPDT",7284,"RTN","ZIS5",29,0)=" F %DZ=%DS(0):1:%DS W !,$J(%DZ,2),"" "",$P(^%ZIS(%ZISDFN,%DS(%DZ),0),U,1) D:%ZISDFN=1  I $D(%ZIS(""W"")),$D(^(0)) W ""  "" D XW^ZISX"
^XTMP("XPDT",7284,"RTN","ZIS5",30,0)=" . ;Show Location"
^XTMP("XPDT",7284,"RTN","ZIS5",31,0)=" . S %=$G(^(1)) W:$X+$L($P(%,U))>74 !?75-$L(X) W ""   ""_$P(%,U)"
^XTMP("XPDT",7284,"RTN","ZIS5",32,0)="L1 W:%DIY !,""Type '^' to Stop, or"" W !,""Choose 1"" W:%DS>1 ""-"",%DS"
^XTMP("XPDT",7284,"RTN","ZIS5",33,0)=" R ""> "",%YY:%ZISDTIM S %ZISLST=1 I %YY="""",%DIY S %DS(0)=%DS+1,%YY=0 W ! Q"
^XTMP("XPDT",7284,"RTN","ZIS5",34,0)=" I %YY=U!(%YY="""") S %YY=-1,DUOUT=1 S:%YY=U %XX=U Q"
^XTMP("XPDT",7284,"RTN","ZIS5",35,0)=" I +%YY'=%YY!(%YY<1)!(%YY>%DS) W:%ZIS(0)[""Q"" *7,"" ??"" G L1"
^XTMP("XPDT",7284,"RTN","ZIS5",36,0)=" S %YY=%DS(%YY) Q"
^XTMP("XPDT",7284,"RTN","ZIS5",37,0)="GOT S %DZ=^%ZIS(%ZISDFN,+%YY,0)"
^XTMP("XPDT",7284,"RTN","ZIS5",38,0)=" W:%ZIS(0)[""E"" ""  "",$P(%DZ,U,1)"
^XTMP("XPDT",7284,"RTN","ZIS5",39,0)="R I %ZIS(0)'[""F"" S:$S($D(DUZ)#2:$S(DUZ:1,1:0),1:0) ^DISV(DUZ,""^%ZIS(""_%ZISDFN_"","")=+%YY"
^XTMP("XPDT",7284,"RTN","ZIS5",40,0)=" I %ZIS(0)[""Z"" S %YY(0)=^%ZIS(%ZISDFN,+%YY,0)"
^XTMP("XPDT",7284,"RTN","ZIS5",41,0)="Q K %ZISDFN,%DO,%DD,%DIX,%DIY,%DZ Q"
^XTMP("XPDT",7284,"RTN","ZIS5",42,0)="ADD ;can't add to files"
^XTMP("XPDT",7284,"RTN","ZIS5",43,0)="NO S %YY=-1 G Q"
^XTMP("XPDT",7284,"RTN","ZIS5",44,0)="NUM I $D(^%ZIS(%ZISDFN,%XX)) S %YY=%XX D S I $T G GOT"
^XTMP("XPDT",7284,"RTN","ZIS5",45,0)=" G F"
^XTMP("XPDT",7284,"RTN","ZIS5",46,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS5",47,0)="1 ;Entry point for Device lookup"
^XTMP("XPDT",7284,"RTN","ZIS5",48,0)=" N %D,%DS,%ZISDFN"
^XTMP("XPDT",7284,"RTN","ZIS5",49,0)=" F %D=""B"",""LSYN"" S %ZISDFN=1,%ZIS(0)=$S($D(IOP):""M"",1:""EMQ"") D %ZIS5 Q:(%YY>0)!$D(DUOUT)"
^XTMP("XPDT",7284,"RTN","ZIS5",50,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS5",51,0)="2 ;Entry point for Terminal type lookup"
^XTMP("XPDT",7284,"RTN","ZIS5",52,0)=" N %D,%DS,%ZISDFN"
^XTMP("XPDT",7284,"RTN","ZIS5",53,0)=" S %D=""B"",%ZISDFN=2,%ZIS(0)=$S($D(IOP):""M"",1:""EMQ"") D %ZIS5"
^XTMP("XPDT",7284,"RTN","ZIS5",54,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZIS5",55,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS5",56,0)="LD1 S %E=0,%Y=0 D LCPU:""PD""[$E(%X) S %E=0 W !"
^XTMP("XPDT",7284,"RTN","ZIS5",57,0)="L S %E=$S(""PD""[$E(%X):$O(^UTILITY(""ZIS"",$J,""DEVLST"",""B"",%E)),1:$O(^%ZIS(1,""B"",%E))) G:%E="""" RESTART S %A=+$O(^(%E,0))"
^XTMP("XPDT",7284,"RTN","ZIS5",58,0)=" G L:'$D(^%ZIS(1,%A,0)),L:$P(^(0),""^"",2)=46,L:$P(^(0),""^"",2)=63 I $D(%ZIS(""S"")) N Y S Y=%A D XS^ZISX G L:'$T"
^XTMP("XPDT",7284,"RTN","ZIS5",59,0)=" I ""AP""[$E(%X) G L:$P($G(^%ZIS(2,+$G(^%ZIS(1,%A,""SUBTYPE"")),0)),U)'?1""P"".E"
^XTMP("XPDT",7284,"RTN","ZIS5",60,0)=" W $J($P(^%ZIS(1,%A,0),""^"",1),9) W:$D(^(1)) "" "",$P(^(1),""^"",1) I $D(^(90)),^(90) W "" ** OUT OF SERVICE"""
^XTMP("XPDT",7284,"RTN","ZIS5",61,0)=" W ?39 I $X>40 W ! S %Y=%Y+1 I %Y>20 R ""'^' TO STOP: "",%Y:%ZISDTIM,! G RESTART:%Y?1P S %Y=0"
^XTMP("XPDT",7284,"RTN","ZIS5",62,0)=" G L"
^XTMP("XPDT",7284,"RTN","ZIS5",63,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZIS5",64,0)="LCPU S %A=%ZISV"
^XTMP("XPDT",7284,"RTN","ZIS5",65,0)="LC1 S %A=$O(^%ZIS(1,""CPU"",%A)) Q:$P(%A,""."")'=%ZISV  S %E=0"
^XTMP("XPDT",7284,"RTN","ZIS5",66,0)="LC2 S %E=+$O(^%ZIS(1,""CPU"",%A,%E)) G LC1:%E'>0,LC1:'$D(^%ZIS(1,%E,0)) S ^UTILITY(""ZIS"",$J,""DEVLST"",""B"",$P(^(0),""^"",1),%E)="""" G LC2"
^XTMP("XPDT",7284,"RTN","ZIS5",67,0)="RESTART S:$D(%H) %E=+%H K %X,^UTILITY(""ZIS"",$J,""DEVLST"") Q"
^XTMP("XPDT",7284,"RTN","ZISFGTM")="0^10^B8623260^B9168627"
^XTMP("XPDT",7284,"RTN","ZISFGTM",1,0)="%ZISF ;SFISC/AC - HOST FILES FOR GT.M on Unix/VMS  ;9/3/08  09:48"
^XTMP("XPDT",7284,"RTN","ZISFGTM",2,0)=" ;;8.0;KERNEL;**275,499**;Jul 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZISFGTM",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7284,"RTN","ZISFGTM",4,0)="HFS ;Host File Server"
^XTMP("XPDT",7284,"RTN","ZISFGTM",5,0)=" ;Calling parameters in %ZIS override Device file."
^XTMP("XPDT",7284,"RTN","ZISFGTM",6,0)=" Q:$D(IOP)&$D(%IS(""HFSIO""))&$D(%IS(""IOPAR""))"
^XTMP("XPDT",7284,"RTN","ZISFGTM",7,0)=" N %"
^XTMP("XPDT",7284,"RTN","ZISFGTM",8,0)=" ;Get file name, in %X."
^XTMP("XPDT",7284,"RTN","ZISFGTM",9,0)=" I $D(%ZIS(""HFSNAME"")) S IO=%ZIS(""HFSNAME""),%X=IO ;"
^XTMP("XPDT",7284,"RTN","ZISFGTM",10,0)=" E  D ASKHFS"
^XTMP("XPDT",7284,"RTN","ZISFGTM",11,0)=" ;Mode or actual parameters"
^XTMP("XPDT",7284,"RTN","ZISFGTM",12,0)="H S:$D(%ZIS(""HFSMODE"")) %ZISOPAR=$$MODE(%ZIS(""HFSMODE""))"
^XTMP("XPDT",7284,"RTN","ZISFGTM",13,0)="H1 I $D(IO(""Q""))!(%IS[""Z"") S IO(""HFSIO"")="""""
^XTMP("XPDT",7284,"RTN","ZISFGTM",14,0)=" S:$L(%X) %ZIS(""afn"")=1"
^XTMP("XPDT",7284,"RTN","ZISFGTM",15,0)=" S IO=$S(%X]"""":%X,1:IO),IO=$$CHKNM(IO) ;See that we have a directory"
^XTMP("XPDT",7284,"RTN","ZISFGTM",16,0)=" S:$D(IO(""HFSIO"")) IO(""HFSIO"")=IO"
^XTMP("XPDT",7284,"RTN","ZISFGTM",17,0)=" I '$D(IOP)&$D(%ZIS(""HFSNAME"")) S %=""    HOST FILE TO USE:  ""_%ZIS(""HFSNAME"") W:$X+$L(%)>75 ! W %,!"
^XTMP("XPDT",7284,"RTN","ZISFGTM",18,0)=" ;Check Ask Parameters"
^XTMP("XPDT",7284,"RTN","ZISFGTM",19,0)=" D ASKPAR^%ZIS6,SETPAR^%ZIS3"
^XTMP("XPDT",7284,"RTN","ZISFGTM",20,0)=" ;Check Ask IO Mode"
^XTMP("XPDT",7284,"RTN","ZISFGTM",21,0)="HFSIOO I '$D(IOP),%ZTYPE=""HFS"",'$D(%ZIS(""HFSMODE"")),'$P(^%ZIS(1,%E,0),""^"",4),%ZISOPAR="""",$D(^%ZIS(1,%E,1)),$P(^(1),""^"",6) D"
^XTMP("XPDT",7284,"RTN","ZISFGTM",22,0)=" . W:$X>19 ! W ?20,""INPUT/OUTPUT OPERATION: R//"""
^XTMP("XPDT",7284,"RTN","ZISFGTM",23,0)=" Q:'$T  D SBR^%ZIS1 I $D(DTOUT)!$D(DFOUT)!$D(DUOUT) S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZISFGTM",24,0)=" S:%X="""" %X=""R"" S %X=$$UP^%ZIS1(%X)"
^XTMP("XPDT",7284,"RTN","ZISFGTM",25,0)=" D HOPT:%X=""?""!'$$CHECK(%X),HOPT1:%X=""??"" G HFSIOO:%X=""?""!'$$CHECK(%X)"
^XTMP("XPDT",7284,"RTN","ZISFGTM",26,0)=" S:%X]"""" %ZISOPAR=$$MODE(%X)"
^XTMP("XPDT",7284,"RTN","ZISFGTM",27,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZISFGTM",28,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZISFGTM",29,0)="CHECK(X) ;Check that we have valid option"
^XTMP("XPDT",7284,"RTN","ZISFGTM",30,0)=" N Y,%"
^XTMP("XPDT",7284,"RTN","ZISFGTM",31,0)=" Q:(X[""R"")&(X[""W"") 0 ;Can't have both"
^XTMP("XPDT",7284,"RTN","ZISFGTM",32,0)=" S Y=1 I $L($TR(X,""ANRW"")) S Y=0"
^XTMP("XPDT",7284,"RTN","ZISFGTM",33,0)=" Q Y"
^XTMP("XPDT",7284,"RTN","ZISFGTM",34,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZISFGTM",35,0)="ASKHFS ;---Ask host file name here---"
^XTMP("XPDT",7284,"RTN","ZISFGTM",36,0)=" I $D(%IS(""B"",""HFS""))#2,%IS(""B"",""HFS"")]"""" D"
^XTMP("XPDT",7284,"RTN","ZISFGTM",37,0)=" .S IO=%IS(""B"",""HFS"") ;Set default host file name"
^XTMP("XPDT",7284,"RTN","ZISFGTM",38,0)=" S %X='$P($G(^%ZIS(1,%E,1)),""^"",5)"
^XTMP("XPDT",7284,"RTN","ZISFGTM",39,0)=" S:'%X %X="""""
^XTMP("XPDT",7284,"RTN","ZISFGTM",40,0)=" I $D(IOP)!%X!$D(%ZIS(""HFSNAME"")) S %X="""" Q"
^XTMP("XPDT",7284,"RTN","ZISFGTM",41,0)="ASKAGN W !,""HOST FILE NAME: ""_IO_""//"" D SBR^%ZIS1"
^XTMP("XPDT",7284,"RTN","ZISFGTM",42,0)=" I %X?1.""?"".E W !,""ENTER HOST FILE NAME"" G ASKAGN"
^XTMP("XPDT",7284,"RTN","ZISFGTM",43,0)=" S:$D(DTOUT)!$D(DUOUT) POP=1"
^XTMP("XPDT",7284,"RTN","ZISFGTM",44,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZISFGTM",45,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZISFGTM",46,0)="CHKNM(H) ;Check the HFS name"
^XTMP("XPDT",7284,"RTN","ZISFGTM",47,0)=" N N S N=H"
^XTMP("XPDT",7284,"RTN","ZISFGTM",48,0)=" I $ZV[""VMS"" D"
^XTMP("XPDT",7284,"RTN","ZISFGTM",49,0)=" . I (H'["":"")&(H'[""["") S N=$$DEFDIR^%ZISH("""")_H"
^XTMP("XPDT",7284,"RTN","ZISFGTM",50,0)=" E  D"
^XTMP("XPDT",7284,"RTN","ZISFGTM",51,0)=" . I (H'[""/"") S N=$$DEFDIR^%ZISH("""")_H"
^XTMP("XPDT",7284,"RTN","ZISFGTM",52,0)=" Q N"
^XTMP("XPDT",7284,"RTN","ZISFGTM",53,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZISFGTM",54,0)="MODE(X) ;Return %ZISOPAR in Y."
^XTMP("XPDT",7284,"RTN","ZISFGTM",55,0)=" N Y"
^XTMP("XPDT",7284,"RTN","ZISFGTM",56,0)=" S Y=$S((X=""N"")!(X=""W""):""(NEWVERSION:NOREADONLY:VARIABLE)"",X=""A"":""(APPEND:NOREADONLY:VARIABLE)"",1:""(READONLY:VARIABLE)"")"
^XTMP("XPDT",7284,"RTN","ZISFGTM",57,0)=" Q Y"
^XTMP("XPDT",7284,"RTN","ZISFGTM",58,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZISFGTM",59,0)="HOPT W !,""You may enter a code that represents one of"",!,""the following host file input/ouput operation:"""
^XTMP("XPDT",7284,"RTN","ZISFGTM",60,0)=" W !?16,""R = READ ACCESS"",!?16,""W = WRITE ACCESS"",!?16,""N = NEWVERSION"",!?16,""A = APPEND"""
^XTMP("XPDT",7284,"RTN","ZISFGTM",61,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZISFGTM",62,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZISFGTM",63,0)="HOPT1 S %ZISI=$O(^DIC(9.2,""B"",""XUHFSPARAM-GUX"",0)) Q:'%ZISI  Q:'$D(^DIC(9.2,+%ZISI,0))  Q:$P(^(0),""^"",1)'=""XUHFSPARAM-GUX"""
^XTMP("XPDT",7284,"RTN","ZISFGTM",64,0)=" Q:$D(^DIC(9.2,+%ZISI,1))'>9  F %X=0:0 S %X=$O(^DIC(9.2,+%ZISI,1,%X)) Q:%X'>0  I $D(^(%X,0)) W !,^(0)"
^XTMP("XPDT",7284,"RTN","ZISFGTM",65,0)=" W ! S %X=""??"""
^XTMP("XPDT",7284,"RTN","ZISFGTM",66,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZISFONT")="0^9^B9782391^B9426543"
^XTMP("XPDT",7284,"RTN","ZISFONT",1,0)="%ZISF ;SFISC/AC - HOST FILES FOR Cache on NT & VMS ;07/17/08  14:57"
^XTMP("XPDT",7284,"RTN","ZISFONT",2,0)=" ;;8.0;KERNEL;**34,191,271,385,499**;Jul 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZISFONT",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7284,"RTN","ZISFONT",4,0)="HFS ;Host File Server"
^XTMP("XPDT",7284,"RTN","ZISFONT",5,0)=" ;Calling parameters in %ZIS override Device file."
^XTMP("XPDT",7284,"RTN","ZISFONT",6,0)=" Q:$D(IOP)&$D(%ZIS(""HFSIO""))&$D(%ZIS(""IOPAR""))"
^XTMP("XPDT",7284,"RTN","ZISFONT",7,0)=" N %"
^XTMP("XPDT",7284,"RTN","ZISFONT",8,0)=" ;Get file name"
^XTMP("XPDT",7284,"RTN","ZISFONT",9,0)=" I $D(%ZIS(""HFSNAME"")) S IO=%ZIS(""HFSNAME""),%X=IO"
^XTMP("XPDT",7284,"RTN","ZISFONT",10,0)=" E  D ASKHFS ;Return name in %X"
^XTMP("XPDT",7284,"RTN","ZISFONT",11,0)=" ;Mode or actual parameters"
^XTMP("XPDT",7284,"RTN","ZISFONT",12,0)="H S:$D(%ZIS(""HFSMODE"")) %ZISOPAR=$$MODE(%ZIS(""HFSMODE""))"
^XTMP("XPDT",7284,"RTN","ZISFONT",13,0)="H1 I $D(IO(""Q""))!(%ZIS[""Z"") S IO(""HFSIO"")="""""
^XTMP("XPDT",7284,"RTN","ZISFONT",14,0)=" S:$L(%X) %ZIS(""afn"")=1"
^XTMP("XPDT",7284,"RTN","ZISFONT",15,0)=" S IO=$S($L(%X):%X,1:IO),IO=$$CHKNM(IO) ;See that we have a directory"
^XTMP("XPDT",7284,"RTN","ZISFONT",16,0)=" S:$D(IO(""HFSIO"")) IO(""HFSIO"")=IO"
^XTMP("XPDT",7284,"RTN","ZISFONT",17,0)=" I '$D(IOP)&$D(%ZIS(""HFSNAME"")) S %=""    HOST FILE USED:  ""_%ZIS(""HFSNAME"") W:$X+$L(%)>75 ! W %,!"
^XTMP("XPDT",7284,"RTN","ZISFONT",18,0)=" ;Check Ask Parameters"
^XTMP("XPDT",7284,"RTN","ZISFONT",19,0)=" D ASKPAR^%ZIS6,SETPAR^%ZIS3"
^XTMP("XPDT",7284,"RTN","ZISFONT",20,0)=" ;Check Ask IO Mode"
^XTMP("XPDT",7284,"RTN","ZISFONT",21,0)="HFSIOO I '$D(IOP),%ZTYPE=""HFS"",'$D(%ZIS(""HFSMODE"")),'$P(^%ZIS(1,%E,0),""^"",4),%ZISOPAR="""",$P($G(^%ZIS(1,%E,1)),""^"",6) D"
^XTMP("XPDT",7284,"RTN","ZISFONT",22,0)=" . W:$X>19 ! W ?20,""INPUT/OUTPUT OPERATION: R//"""
^XTMP("XPDT",7284,"RTN","ZISFONT",23,0)=" Q:'$T  D SBR^%ZIS1 I $D(DTOUT)!$D(DFOUT)!$D(DUOUT) S POP=1 Q"
^XTMP("XPDT",7284,"RTN","ZISFONT",24,0)=" S:%X="""" %X=""R"" S %X=$$UP^%ZIS1(%X)"
^XTMP("XPDT",7284,"RTN","ZISFONT",25,0)=" D HOPT:%X=""?""!'$$CHECK(%X),HOPT1:%X=""??"" G HFSIOO:%X=""?""!'$$CHECK(%X)"
^XTMP("XPDT",7284,"RTN","ZISFONT",26,0)=" S:%X]"""" %ZISOPAR=""(""_$$MODE(%X)_"")"""
^XTMP("XPDT",7284,"RTN","ZISFONT",27,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZISFONT",28,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZISFONT",29,0)="CHECK(X) ;Check that we have valid option"
^XTMP("XPDT",7284,"RTN","ZISFONT",30,0)=" N Y,%"
^XTMP("XPDT",7284,"RTN","ZISFONT",31,0)=" Q:(X[""R"")&(X[""W"") 0 ;Can't have both"
^XTMP("XPDT",7284,"RTN","ZISFONT",32,0)=" S Y=1 I $L($TR(X,""ANRW"")) S Y=0"
^XTMP("XPDT",7284,"RTN","ZISFONT",33,0)=" Q Y"
^XTMP("XPDT",7284,"RTN","ZISFONT",34,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZISFONT",35,0)="ASKHFS ;---Ask host file name here---"
^XTMP("XPDT",7284,"RTN","ZISFONT",36,0)=" I $D(%ZIS(""B"",""HFS""))#2,%ZIS(""B"",""HFS"")]"""" D"
^XTMP("XPDT",7284,"RTN","ZISFONT",37,0)=" .S IO=%ZIS(""B"",""HFS"") ;Set default host file name"
^XTMP("XPDT",7284,"RTN","ZISFONT",38,0)=" S %X='$P($G(^%ZIS(1,%E,1)),""^"",5)"
^XTMP("XPDT",7284,"RTN","ZISFONT",39,0)=" S:'%X %X="""""
^XTMP("XPDT",7284,"RTN","ZISFONT",40,0)=" I $D(IOP)!%X!$D(%ZIS(""HFSNAME"")) S %X="""" Q"
^XTMP("XPDT",7284,"RTN","ZISFONT",41,0)="ASKAGN W !,""HOST FILE NAME: ""_IO_""//"" D SBR^%ZIS1"
^XTMP("XPDT",7284,"RTN","ZISFONT",42,0)=" I %X?1.""?"".E W !,""ENTER HOST FILE NAME"" G ASKAGN"
^XTMP("XPDT",7284,"RTN","ZISFONT",43,0)=" S:$D(DTOUT)!$D(DUOUT) POP=1"
^XTMP("XPDT",7284,"RTN","ZISFONT",44,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZISFONT",45,0)="CHKNM(H)        ;Check the HFS name"
^XTMP("XPDT",7284,"RTN","ZISFONT",46,0)=" N N,%OS S N=H,%OS=$ZV"
^XTMP("XPDT",7284,"RTN","ZISFONT",47,0)=" I %OS[""VMS"",(H'["":"")&(H'[""["") S N=$$DEFDIR^%ZISH("""")_H ;VMS - disk:[directory]file"
^XTMP("XPDT",7284,"RTN","ZISFONT",48,0)=" I %OS[""Windows"",(H'[""\"")&(H'["":"") S N=$$DEFDIR^%ZISH("""")_H ;NT - C:\DIR\FILE"
^XTMP("XPDT",7284,"RTN","ZISFONT",49,0)=" I %OS[""UNIX"",(H'[""/"") S N=$$DEFDIR^%ZISH("""")_H ;UNIX/Linux - ./file or /mnt/dir/file"
^XTMP("XPDT",7284,"RTN","ZISFONT",50,0)=" Q N"
^XTMP("XPDT",7284,"RTN","ZISFONT",51,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZISFONT",52,0)="MODE(X) ;Return value for %ZISOPAR."
^XTMP("XPDT",7284,"RTN","ZISFONT",53,0)=" ;For VMS only, The H is for read SHARE. Going back to READ Stream mode."
^XTMP("XPDT",7284,"RTN","ZISFONT",54,0)=" N Y,Q S Q=$C(34)"
^XTMP("XPDT",7284,"RTN","ZISFONT",55,0)=" I $ZV[""VMS"" S Y=$S(X=""N"":""NWS"",X=""W"":""NWS"",X=""A"":""AWS"",1:""RHS"")"
^XTMP("XPDT",7284,"RTN","ZISFONT",56,0)=" E  S Y=$S(X=""N"":""NWS"",X=""W"":""NWS"",X=""A"":""AWS"",1:""RS"")"
^XTMP("XPDT",7284,"RTN","ZISFONT",57,0)=" Q $S($L(Y):Q_Y_Q,1:Y)"
^XTMP("XPDT",7284,"RTN","ZISFONT",58,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZISFONT",59,0)="HOPT W !,""You may enter a code that represents one of"",!,""the following host file input/ouput operation:"""
^XTMP("XPDT",7284,"RTN","ZISFONT",60,0)=" W !?16,""R = READ ACCESS"",!?16,""W = WRITE ACCESS"",!?16,""N = NEWVERSION"",!?16,""A = APPEND"""
^XTMP("XPDT",7284,"RTN","ZISFONT",61,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZISFONT",62,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZISFONT",63,0)="HOPT1 S %ZISI=$O(^DIC(9.2,""B"",""XUHFSPARAM-MVX"",0)) Q:'%ZISI  Q:'$D(^DIC(9.2,+%ZISI,0))  Q:$P(^(0),""^"",1)'=""XUHFSPARAM-MVX"""
^XTMP("XPDT",7284,"RTN","ZISFONT",64,0)=" Q:$D(^DIC(9.2,+%ZISI,1))'>9  F %X=0:0 S %X=$O(^DIC(9.2,+%ZISI,1,%X)) Q:%X'>0  I $D(^(%X,0)) W !,^(0)"
^XTMP("XPDT",7284,"RTN","ZISFONT",65,0)=" W ! S %X=""??"""
^XTMP("XPDT",7284,"RTN","ZISFONT",66,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM")="0^13^B14876188^B14594340"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",1,0)="%ZOSV ;ISF/STAFF - View commands & special functions (GT.M). ;09/15/08  14:45"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",2,0)=" ;;8.0;KERNEL;**275,425,499**;Jul 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",3,0)=" ; for GT.M for VMS, version 4.3"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",4,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",5,0)="ACTJ() ; # active jobs"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",6,0)=" ;Keep active count in global"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",7,0)=" Q $G(^XUTL(""XUSYS"",""CNT""))"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",8,0)=" ;Long way that would work"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",9,0)=" ;N %IMAGE S %IMAGE=$ZGETJPI($J,""IMAGNAME"")"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",10,0)=" ;N Y S Y=0"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",11,0)=" ;N %PID S %PID=0"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",12,0)=" ;F  S %PID=$ZPID(%PID) Q:'%PID  I $ZGETJPI(%PID,""IMAGNAME"")=%IMAGE S Y=Y+1"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",13,0)=" ;Q Y"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",14,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",15,0)="AVJ() ; # available jobs, Limit is in the OS."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",16,0)=" N V,J"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",17,0)=" S V=^%ZOSF(""VOL""),J=$O(^XTV(8989.3,1,4,""B"",V,0)),J=$P($G(^XTV(8989.3,1,4,J,0),""^^1000""),""^"",3)"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",18,0)=" Q J-$$ACTJ ;Use signon Max"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",19,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",20,0)="PASSALL ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",21,0)=" U $I:(PASTHRU) Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",22,0)="NOPASS ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",23,0)=" U $I:(NOPASTHRU) Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",24,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",25,0)="GETPEER() ;Get the IP address of a connection peer"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",26,0)=" N PEER"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",27,0)=" S PEER=$ZTRNLNM(""VISTA$IP"")"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",28,0)=" I $G(^XTV(8989.3,1,""PEER""))[PEER S PEER="""" ;p499"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",29,0)=" Q $S($L(PEER):PEER,$L($G(IO(""GTM-IP""))):IO(""GTM-IP""),1:"""")"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",30,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",31,0)="PRGMODE ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",32,0)=" N X,XUCI,XUSLNT"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",33,0)=" W ! S ZTPAC=$P($G(^VA(200,+DUZ,.1)),""^"",5),XUVOL=^%ZOSF(""VOL"")"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",34,0)=" S X="""" X ^%ZOSF(""EOFF"") R:ZTPAC]"""" !,""PAC: "",X:60 D LC^XUS X ^%ZOSF(""EON"") I X'=ZTPAC W ""??"",$C(7) Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",35,0)=" N XMB,XMTEXT,XMY S XMB=""XUPROGMODE"",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",36,0)=" D UCI S XUCI=Y D PRGM^ZUA"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",37,0)=" F  BREAK"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",38,0)=" HALT"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",39,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",40,0)="PROGMODE() ; In Application mode"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",41,0)=" Q 0 ; This was used to control UCI switching, has no meaning in GT.M"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",42,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",43,0)="UCI ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",44,0)=" S Y=""VAH,""_^%ZOSF(""VOL"") Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",45,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",46,0)="UCICHECK(X) ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",47,0)=" Q 1"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",48,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",49,0)="TEMP() ; Return path to temp directory"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",50,0)=" ;N %TEMP S %TEMP=$P($$RTNDIR,"" ""),%TEMP=$P(%TEMP,""/"",1,$L(%TEMP,""/"")-2)_""/t/"""
^XTMP("XPDT",7284,"RTN","ZOSVGTM",51,0)=" Q $G(^%ZOSF(""TMP""),$G(^XTV(8989.3,1,""DEV""),""USER$:[TEMP]""))"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",52,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",53,0)="JOBPAR ;is job X valid on system, return UCI in Y."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",54,0)=" N $ES,$ET,J S $ET=""Q:$ES>0  S Y="""""""" G JOBPX^%ZOSV"""
^XTMP("XPDT",7284,"RTN","ZOSVGTM",55,0)=" S Y="""""
^XTMP("XPDT",7284,"RTN","ZOSVGTM",56,0)=" S J=$ZGETJPI(X,""PRI"")"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",57,0)=" I $L(J) S Y=$P(^%ZOSF(""PROD""),"","")"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",58,0)="JOBPX S $EC="""""
^XTMP("XPDT",7284,"RTN","ZOSVGTM",59,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",60,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",61,0)="SHARELIC(TYPE) ;Used by Cache implementations"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",62,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",63,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",64,0)="PRIORITY ;The VA has this disabled in general."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",65,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",66,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",67,0)="PRIINQ() ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",68,0)=" N PRI S PRI=$ZGETJPI($J,""PRI"")"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",69,0)=" Q $S(PRI=0:1,PRI=1:3,PRI=2:5,PRI=3:7,PRI=4:9,1:10)"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",70,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",71,0)="BAUD S X=""UNKNOWN"" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",72,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",73,0)="LGR() Q $R ; Last global reference ($REFERENCE)"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",74,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",75,0)="EC() ; Error Code: returning $ZS in format more like $ZE from DSM"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",76,0)=" N %ZE"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",77,0)=" I $ZS="""" Q """""
^XTMP("XPDT",7284,"RTN","ZOSVGTM",78,0)=" S %ZE=$P($ZS,"","",2)_"",""_$P($ZS,"","",4)_"",""_$P($ZS,"","")_"",-""_$P($ZS,"","",3)"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",79,0)=" Q %ZE"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",80,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",81,0)="DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",82,0)=" ;S Y=""%"" F  S Y=$O(@Y) Q:Y=""""  D"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",83,0)=" ;. I $D(@Y)#2 S @(X_""Y)=""_Y)"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",84,0)=" ;. I $D(@Y)>9 S %X=Y_""("",%Y=X_""Y,"" D %XY^%RCR"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",85,0)=" S Y=""%"" F  M:$D(@Y) @(X_""Y)=""_Y) S Y=$O(@Y) Q:Y="""""
^XTMP("XPDT",7284,"RTN","ZOSVGTM",86,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",87,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",88,0)="ORDER ;SAVE PART OF SYMBOL TABLE IN LOCATION SPECIFIED BY X"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",89,0)=" N %"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",90,0)=" S (Y,%)=$P(Y,""*"",1) ;I $D(@Y)=0 F  S Y=$O(@Y) Q:Y=""""!(Y[Y1)"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",91,0)=" Q:Y="""""
^XTMP("XPDT",7284,"RTN","ZOSVGTM",92,0)=" ;S %=$D(@Y) S:%#2 @(X_""Y)=""_Y) I %>9 S %X=Y_""("",%Y=X_""Y,"" D %XY^%RCR"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",93,0)=" ;F  S Y=$O(@Y) Q:Y=""""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_""Y)=""_Y) I %>9 S %X=Y_""("",%Y=X_""Y,"" D %XY^%RCR"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",94,0)=" F  M:$D(@Y) @(X_""Y)=""_Y) S Y=$O(@Y) Q:Y=""""!(Y'[%)"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",95,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",96,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",97,0)="PARSIZ ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",98,0)=" S X=3 Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",99,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",100,0)="NOLOG ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",101,0)=" S Y=0 Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",102,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",103,0)="GETENV ;Get environment Return Y='UCI^VOL^NODE^BOX LOOKUP'"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",104,0)=" N %V,%HOST S %HOST=$ZGETSYI(""NODENAME""),%V=^%ZOSF(""PROD"")"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",105,0)=" S Y=$TR(%V,"","",""^"")_""^""_%HOST_""^""_$P(%V,"","",2)_"":""_%HOST"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",106,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",107,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",108,0)="VERSION(X) ;return OS version, X=1 - return OS"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",109,0)=" Q $S($G(X):$P($ZV,"" V""),1:+$P($ZV,"" V"",2))"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",110,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",111,0)="OS() ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",112,0)=" Q ""VMS"""
^XTMP("XPDT",7284,"RTN","ZOSVGTM",113,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",114,0)="RTNDIR() ;primary routine source directory"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",115,0)=" ;Assume dat1$:[gtm.o]/src=(dat1$:[gtm.r]),gtm$dist"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",116,0)=" N % S %=$P($ZRO,"","")"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",117,0)=" I %[""/SRC"" S %=$P($P($P(%,""("",2),"")"",1),"","")"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",118,0)=" Q %"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",119,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",120,0)="SETNM(X) ;Set name, Trap dup's, Fall into SETENV"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",121,0)=" N $ETRAP S $ETRAP=""S $ECODE="""""""" Q"""
^XTMP("XPDT",7284,"RTN","ZOSVGTM",122,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",123,0)="SETENV ;Set environment X='PROCESS NAME^ '"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",124,0)=" ;workaround for GT.M"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",125,0)=" S ^XUTL(""XUSYS"",$J,0)=$H,^(""NM"")=X,^(""PID"")=$$FUNC^%DH($J)"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",126,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",127,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",128,0)="SID() ;System ID"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",129,0)=" N J1,T S T=""~"""
^XTMP("XPDT",7284,"RTN","ZOSVGTM",130,0)=" S J1(1)=$ZROUTINES"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",131,0)=" S J1(2)=$ZGBLDIR"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",132,0)=" Q ""1~""_J1(1)_T_J1(2)"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",133,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",134,0)="PRI() ;Check if a mixed OS enviroment."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",135,0)=" ;Default return 1 unless we are on the secondary OS."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",136,0)=" ;Only Cache on a VMS/Linux mix is supported now."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",137,0)=" Q 1"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",138,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",139,0)="T0 ; start RT clock"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",140,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",141,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",142,0)="T1 ; store RT datum, Obsolete"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",143,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",144,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",145,0)=" ;Code moved to %ZOSVKR, Comment out if needed."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",146,0)="LOGRSRC(OPT,TYPE,STATUS) ;record resource usage in ^XTMP(""KMPR"""
^XTMP("XPDT",7284,"RTN","ZOSVGTM",147,0)=" Q:'$G(^%ZTSCH(""LOGRSRC""))  ; quit if RUM not turned on."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",148,0)=" ; call to RUM routine."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",149,0)=" D RU^%ZOSVKR($G(OPT),$G(TYPE),$G(STATUS))"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",150,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",151,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",152,0)="SETTRM(X) ;Turn on specified terminators."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",153,0)=" U $I:TERM=X"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",154,0)=" Q 1"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",155,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",156,0)="DEVOK ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",157,0)=" ;INPUT:  X=Device $I, X1=IOT -- X1 needed for resources"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",158,0)=" ;OUTPUT: Y=0 if available, Y=job # if owned"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",159,0)=" ; Y=-1 if device does not exists."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",160,0)=" ; return Y=0 if not owned, Y=$J of owning job, Y=999 if dev cycling"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",161,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",162,0)=" S Y=0,X1=$G(X1) Q:(X1=""HFS"")!(X1=""MT"")!(X1=""CHAN"")"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",163,0)=" I X1=""RES"" G RESOK^%ZIS6"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",164,0)=" S Y=0"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",165,0)=" Q  ;Let ZIS deal with it."
^XTMP("XPDT",7284,"RTN","ZOSVGTM",166,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",167,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",168,0)="LPC(X) ;ZCRC(X)"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",169,0)=" N R,I"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",170,0)=" S R=$ZBITSTR(8,0)"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",171,0)=" F I=1:1:$L(X) S R=$ZBITXOR(R,$C(0)_$E(X,I))"
^XTMP("XPDT",7284,"RTN","ZOSVGTM",172,0)=" Q $A(R,2)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX")="0^14^B33819105^B36401450"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",1,0)="%ZOSV ;SFISC/AC,PUG/TOAD,HOU/DHW - View commands & special functions. ;09/15/08  16:41"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",2,0)=" ;;8.0;KERNEL;**275,425,499**;Jul 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",3,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",4,0)="ACTJ() ; # active jobs"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",5,0)=" I $G(^XUTL(""XUSYS"",""CNT"")) Q $G(^XUTL(""XUSYS"",""CNT""))"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",6,0)=" ;This would also work"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",7,0)=" N %I,%FILE,Y"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",8,0)=" S %FILE=$$TEMP_""zosv_actj_""_$J_"".tmp"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",9,0)=" ZSYSTEM ""ps cef -C mumps|wc>""_%FILE"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",10,0)=" S %I=$I"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",11,0)=" O %FILE"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",12,0)=" U %FILE R Y:99 U %I"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",13,0)=" C %FILE:DELETE"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",14,0)=" F  Q:$E(Y)'="" ""  S $E(Y)="""""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",15,0)=" S Y=Y-1,^XUTL(""XUSYS"",""CNT"")=Y"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",16,0)=" Q Y"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",17,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",18,0)="AVJ() ; # available jobs, Limit is in the OS."
^XTMP("XPDT",7284,"RTN","ZOSVGUX",19,0)=" N V,J"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",20,0)=" S V=^%ZOSF(""VOL""),J=$O(^XTV(8989.3,1,4,""B"",V,0)),J=$P($G(^XTV(8989.3,1,4,J,0),""^^1000""),""^"",3)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",21,0)=" Q J-$$ACTJ ;Use signon Max"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",22,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",23,0)="RTNDIR() ; primary routine source directory"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",24,0)=" ;Assume /home/xxx/o(/home/xxx/r /home/xxx/w) /home/gtm()"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",25,0)=" Q $P($S($ZRO[""("":$P($P($ZRO,""("",2),"")""),1:$ZRO),"" "")_""/"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",26,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",27,0)="TEMP() ; Return path to temp directory"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",28,0)=" ;N %TEMP S %TEMP=$P($$RTNDIR,"" ""),%TEMP=$P(%TEMP,""/"",1,$L(%TEMP,""/"")-2)_""/t/"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",29,0)=" Q $G(^%ZOSF(""TMP""),$G(^XTV(8989.3,1,""DEV""),""/tmp/""))"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",30,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",31,0)="PASSALL ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",32,0)=" U $I:(NOESCAPE:NOTERMINATOR:PASTHRU) Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",33,0)="NOPASS ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",34,0)=" U $I:(ESCAPE:TERMINATOR="""":NOPASTHRU) Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",35,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",36,0)="GETPEER() ;Get the IP address of a connection peer"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",37,0)=" N PEER"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",38,0)=" S PEER=$P($ZTRNLNM(""SSH_CLIENT""),"" "") S:PEER="""" PEER=$ZTRNLNM(""REMOTEHOST"")"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",39,0)=" S PEER=$S($L(PEER):PEER,$L($G(IO(""IP""))):IO(""IP""),$L($G(IO(""GTM-IP""))):IO(""GTM-IP""),1:"""")"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",40,0)=" I $G(^XTV(8989.3,1,""PEER""))[PEER S PEER="""" ;p499"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",41,0)=" Q PEER"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",42,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",43,0)="PRGMODE ;Drop into direct mode"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",44,0)=" N X,XUCI,XUSLNT"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",45,0)=" W ! S ZTPAC=$P($G(^VA(200,+DUZ,.1)),""^"",5),XUVOL=^%ZOSF(""VOL"")"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",46,0)=" S X="""" X ^%ZOSF(""EOFF"") R:ZTPAC]"""" !,""PAC: "",X:60 D LC^XUS X ^%ZOSF(""EON"") I X'=ZTPAC W ""??"",$C(7) Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",47,0)=" N XMB,XMTEXT,XMY S XMB=""XUPROGMODE"",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",48,0)=" D UCI S XUCI=Y D PRGM^ZUA"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",49,0)=" F  BREAK"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",50,0)=" HALT"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",51,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",52,0)="PROGMODE() ; In Application mode"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",53,0)=" Q 0 ; This was used to control UCI switching, has no meaning in GT.M"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",54,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",55,0)="UCI ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",56,0)=" S Y=^%ZOSF(""PROD"") Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",57,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",58,0)="UCICHECK(X) ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",59,0)=" Q X"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",60,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",61,0)="JOBPAR ; <====="
^XTMP("XPDT",7284,"RTN","ZOSVGUX",62,0)=" N %FILE,%I S %FILE=$$PWD^%ZISH_""zosv_jobpar_""_$J_"".tmp"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",63,0)=" ZSYSTEM ""ps c -p ""_X_""|tail -1>""_%FILE"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",64,0)=" S %I=$I"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",65,0)=" O %FILE"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",66,0)=" U %FILE R Y:99 U %I"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",67,0)=" C %FILE:DELETE"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",68,0)=" F  Q:$E(Y)'="" ""  S $E(Y)="""""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",69,0)=" I +Y=X,$E(Y,$L(Y)-4,$L(Y))=""mumps"" S Y=^%ZOSF(""PROD"")"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",70,0)=" E  S Y="""""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",71,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",72,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",73,0)="SHARELIC(TYPE) ;Used by Cache implementations"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",74,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",75,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",76,0)="PRIORITY ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",77,0)=" K Y ; VA has this disabled in general."
^XTMP("XPDT",7284,"RTN","ZOSVGUX",78,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",79,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",80,0)="PRIINQ() ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",81,0)=" Q 5 ; for now, we're always middle of the road"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",82,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",83,0)="BAUD S X=""UNKNOWN"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",84,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",85,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",86,0)="LGR() ; Last global reference ($REFERENCE)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",87,0)=" Q $R"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",88,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",89,0)="EC() ; Error Code: returning $ZS in format more like $ZE from DSM"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",90,0)=" N %ZE"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",91,0)=" I $ZS="""" S %ZE="""""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",92,0)=" S %ZE=$P($ZS,"","",2)_"",""_$P($ZS,"","",4)_"",""_$P($ZS,"","")_"",-""_$P($ZS,"","",3)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",93,0)=" Q %ZE"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",94,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",95,0)="DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",96,0)=" ;S Y=""%"" F  S Y=$O(@Y) Q:Y=""""  D"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",97,0)=" ;. I $D(@Y)#2 S @(X_""Y)=""_Y)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",98,0)=" ;. I $D(@Y)>9 S %X=Y_""("",%Y=X_""Y,"" D %XY^%RCR"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",99,0)=" S Y=""%"" F  M:$D(@Y) @(X_""Y)=""_Y) S Y=$O(@Y) Q:Y="""""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",100,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",101,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",102,0)="ORDER ;SAVE PART OF SYMBOL TABLE IN LOCATION SPECIFIED BY X"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",103,0)=" N %"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",104,0)=" S (Y,%)=$P(Y,""*"",1) ;I $D(@Y)=0 F  S Y=$O(@Y) Q:Y=""""!(Y[Y1)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",105,0)=" Q:Y="""""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",106,0)=" ;S %=$D(@Y) S:%#2 @(X_""Y)=""_Y) I %>9 S %X=Y_""("",%Y=X_""Y,"" D %XY^%RCR"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",107,0)=" ;F  S Y=$O(@Y) Q:Y=""""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_""Y)=""_Y) I %>9 S %X=Y_""("",%Y=X_""Y,"" D %XY^%RCR"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",108,0)=" F  M:$D(@Y) @(X_""Y)=""_Y) S Y=$O(@Y) Q:Y=""""!(Y'[%)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",109,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",110,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",111,0)="PARSIZ ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",112,0)=" S X=3 Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",113,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",114,0)="NOLOG ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",115,0)=" S Y=0 Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",116,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",117,0)="GETENV ;Get environment Return Y='UCI^VOL^NODE^BOX LOOKUP'"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",118,0)=" N %HOST,%V S %V=^%ZOSF(""PROD""),%HOST=$$RETURN(""hostname -s"")"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",119,0)=" S Y=$TR(%V,"","",""^"")_""^""_%HOST_""^""_$P(%V,"","",2)_"":""_%HOST"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",120,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",121,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",122,0)="VERSION(X) ;return OS version, X=1 - return OS"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",123,0)=" Q $S($G(X):$P($ZV,"" V""),1:+$P($ZV,"" V"",2))"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",124,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",125,0)="OS() ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",126,0)=" Q ""UNIX"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",127,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",128,0)="SETNM(X) ;Set name, Trap dup's, Fall into SETENV"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",129,0)=" N $ETRAP S $ETRAP=""S $ECODE="""""""" Q"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",130,0)="SETENV ;Set environment X='PROCESS NAME^ '"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",131,0)=" S ^XUTL(""XUSYS"",$J,0)=$H,^(""NM"")=X ; workaround"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",132,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",133,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",134,0)="SID() ;System ID"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",135,0)=" N J1,T S T=""~"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",136,0)=" S J1(1)=$ZROUTINES,J1(1)=$P(J1(1),"" "")"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",137,0)=" S J1(2)=$ZGBLDIR"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",138,0)=" Q ""1~""_J1(1)_T_J1(2)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",139,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",140,0)="PRI() ;Check if a mixed OS enviroment."
^XTMP("XPDT",7284,"RTN","ZOSVGUX",141,0)=" ;Default return 1 unless we are on the secondary OS."
^XTMP("XPDT",7284,"RTN","ZOSVGUX",142,0)=" ;Only Cache on a VMS/Linux mix is supported now."
^XTMP("XPDT",7284,"RTN","ZOSVGUX",143,0)=" Q 1"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",144,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",145,0)="T0 ; start RT clock"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",146,0)=" Q  ; we don't have $ZH on GT.M"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",147,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",148,0)="T1 ; store RT datum w/ZHDIF"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",149,0)=" Q  ; we don't have $ZH on GT.M"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",150,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",151,0)="ZHDIF ;Display dif of two $ZH's"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",152,0)=" W !,"" ET="",$J(($P(%ZH1,"","")-$P(%ZH0,"","")*86400)+($P(%ZH1,"","",2)-$P(%ZH0,"","",2)),6,2)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",153,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",154,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",155,0)=" ;Code moved to %ZOSVKR, Comment out if needed."
^XTMP("XPDT",7284,"RTN","ZOSVGUX",156,0)="LOGRSRC(OPT,TYPE,STATUS) ;record resource usage in ^XTMP(""KMPR"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",157,0)=" Q:'$G(^%ZTSCH(""LOGRSRC""))  ; quit if RUM not turned on."
^XTMP("XPDT",7284,"RTN","ZOSVGUX",158,0)=" ; call to RUM routine."
^XTMP("XPDT",7284,"RTN","ZOSVGUX",159,0)=" D RU^%ZOSVKR($G(OPT),$G(TYPE),$G(STATUS))"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",160,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",161,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",162,0)="SETTRM(X) ;Turn on specified terminators."
^XTMP("XPDT",7284,"RTN","ZOSVGUX",163,0)=" U $I:(TERMINATOR=X)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",164,0)=" Q 1"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",165,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",166,0)="DEVOK ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",167,0)=" ;use lsof (list open files)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",168,0)=" ; given a device name in X"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",169,0)=" ;INPUT:  X=Device $I, X1=IOT -- X1 needed for resources"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",170,0)=" ;OUTPUT: Y=0 if available, Y=job # if owned"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",171,0)=" ; Y=-1 if device does not exists."
^XTMP("XPDT",7284,"RTN","ZOSVGUX",172,0)=" ; return Y=0 if not owned, Y=$J of owning job, Y=999 if dev cycling"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",173,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",174,0)=" I $G(X1)=""RES"" G RESOK^%ZIS6"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",175,0)=" S Y=0"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",176,0)=" Q  ;Let ZIS deal with it."
^XTMP("XPDT",7284,"RTN","ZOSVGUX",177,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",178,0)=" N %FILE S %FILE=$$TEMP_""zosv_devok_""_$J_"".tmp"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",179,0)=" ZSYSTEM ""/usr/sbin/lsof -F Pc ""_X_"" >""_%FILE"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",180,0)=" N %I,%X,%Y S %I=$I"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",181,0)=" O %FILE U %FILE"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",182,0)=" F %Y=0:1 R %X:99 Q:%X=""""  Q:%X[""lsof: status error""  D"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",183,0)=" . S %Y(%Y\2,$S($E(%X)=""p"":""PID"",$E(%X)=""c"":""CMD"",1:""?""))=$E(%X,2,$L(%X))"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",184,0)=" U %I"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",185,0)=" C %FILE:(DELETE)"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",186,0)=" I %X[""lsof: status error"" S Y=-1 Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",187,0)=" S %X="""",Y=0"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",188,0)=" F  S %X=$O(%Y(%X)) Q:%X=""""  I %Y(%X,""CMD"")=""mumps"" S Y=%Y(%X,""PID"") Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",189,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",190,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",191,0)="DEVOPN ;List of Devices opened.  Linux only"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",192,0)=" ;Returns variable Y. Y=Devices owned separated by a comma"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",193,0)=" N %I,%X,%Y"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",194,0)=" ZSHOW ""D"":%Y"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",195,0)=" S %I=0,Y="""",%X="""""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",196,0)=" F  S %I=$O(%Y(""D"",%I)) Q:'%I  S Y=Y_%X_$P(%Y(""D"",%I),"" ""),%X="","""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",197,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",198,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",199,0)="RETURN(%COMMAND) ; ** Private Entry Point: execute a shell command & return the resulting value **"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",200,0)=" ; %COMMAND is the string value of the Linux command"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",201,0)=" N %VALUE S %VALUE="""" ; value to return"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",202,0)=" N %FILE S %FILE=$$TEMP_""RET""_$J_"".txt"" ; temporary results file"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",203,0)=" ZSYSTEM %COMMAND_"" > ""_%FILE ; execute command & save result"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",204,0)=" O %FILE:(REWIND) U %FILE R:'$ZEOF %VALUE:99 C %FILE:(DELETE) ; fetch value & delete file"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",205,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",206,0)=" QUIT %VALUE ; return value"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",207,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",208,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",209,0)="STRIPCR(%DIRECT) ; ** Private Entry Point: strip extraneous CR from end of lines of all"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",210,0)=" ; routines in %DIRECTORY Linux directory"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",211,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",212,0)=" ZSYSTEM ""perl -pi -e 's/\r\n$/\n/' ""_%DIRECT_""[A-K]*.m"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",213,0)=" ZSYSTEM ""perl -pi -e 's/\r\n$/\n/' ""_%DIRECT_""[L-S]*.m"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",214,0)=" ZSYSTEM ""perl -pi -e 's/\r\n$/\n/' ""_%DIRECT_""[T-z]*.m"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",215,0)=" ZSYSTEM ""perl -pi -e 's/\r\n$/\n/' ""_%DIRECT_""[_]*.m"""
^XTMP("XPDT",7284,"RTN","ZOSVGUX",216,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVGUX",217,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT")="0^11^B22340698^B22002850"
^XTMP("XPDT",7284,"RTN","ZOSVONT",1,0)="%ZOSV ;SFISC/AC - $View commands for Open M for NT.  ;09/15/08  12:12"
^XTMP("XPDT",7284,"RTN","ZOSVONT",2,0)=" ;;8.0;KERNEL;**34,94,107,118,136,215,293,284,385,425,440,499**;Jul 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZOSVONT",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7284,"RTN","ZOSVONT",4,0)="ACTJ() ;# Active jobs"
^XTMP("XPDT",7284,"RTN","ZOSVONT",5,0)=" N %,V,Y S V=$$VERSION()"
^XTMP("XPDT",7284,"RTN","ZOSVONT",6,0)=" I V<5 D  Q Y"
^XTMP("XPDT",7284,"RTN","ZOSVONT",7,0)=" . S %=0 F Y=0:1 S %=$ZJOB(%) Q:%="""""
^XTMP("XPDT",7284,"RTN","ZOSVONT",8,0)=" S Y=$system.License.LUConsumed() ;Cache 5 up"
^XTMP("XPDT",7284,"RTN","ZOSVONT",9,0)=" Q Y"
^XTMP("XPDT",7284,"RTN","ZOSVONT",10,0)="AVJ() ;# available jobs"
^XTMP("XPDT",7284,"RTN","ZOSVONT",11,0)=" N %,AVJ,V,ZOSV,$ET"
^XTMP("XPDT",7284,"RTN","ZOSVONT",12,0)=" S V=+$$VERSION()"
^XTMP("XPDT",7284,"RTN","ZOSVONT",13,0)=" ;Cache 3 and 4"
^XTMP("XPDT",7284,"RTN","ZOSVONT",14,0)=" ;maxpid: from %SS"
^XTMP("XPDT",7284,"RTN","ZOSVONT",15,0)=" I V<5 D  Q AVJ"
^XTMP("XPDT",7284,"RTN","ZOSVONT",16,0)=" . N PORT,T,X,MAXPID,LMFLIM"
^XTMP("XPDT",7284,"RTN","ZOSVONT",17,0)=" . S $ET="""",MAXPID=$V($ZU(40,2,118),-2,4)"
^XTMP("XPDT",7284,"RTN","ZOSVONT",18,0)=" . X ""S ZOSV=$ZU(5),%=$ZU(5,""""%SYS"""") S LMFLIM=$$inquire^LMFCLI,%=$ZU(5,ZOSV)"" ;Get the license info"
^XTMP("XPDT",7284,"RTN","ZOSVONT",19,0)=" . ;Add together the enterprise and division licenses avaliable"
^XTMP("XPDT",7284,"RTN","ZOSVONT",20,0)=" . S X=$P(LMFLIM,"";"",2)+$P($P(LMFLIM,""|"",2),"";"",2)"
^XTMP("XPDT",7284,"RTN","ZOSVONT",21,0)=" . S T=+LMFLIM+$P(LMFLIM,""|"",2) ;Check the license total"
^XTMP("XPDT",7284,"RTN","ZOSVONT",22,0)=" . S AVJ=$S(T<MAXPID:X,1:MAXPID-$$ACTJ) ;Return the smaller of license or pid"
^XTMP("XPDT",7284,"RTN","ZOSVONT",23,0)=" ;To get available jobs from Cache 5.0 up"
^XTMP("XPDT",7284,"RTN","ZOSVONT",24,0)=" I V'<5 D  Q AVJ"
^XTMP("XPDT",7284,"RTN","ZOSVONT",25,0)=" . X ""S AVJ=$system.License.LUAvailable()"""
^XTMP("XPDT",7284,"RTN","ZOSVONT",26,0)=" ;Return fixed value not known version"
^XTMP("XPDT",7284,"RTN","ZOSVONT",27,0)=" Q 15"
^XTMP("XPDT",7284,"RTN","ZOSVONT",28,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",29,0)="PRIINQ() ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",30,0)=" Q 8"
^XTMP("XPDT",7284,"RTN","ZOSVONT",31,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",32,0)="UCI ;Current UCI,VOL"
^XTMP("XPDT",7284,"RTN","ZOSVONT",33,0)=" S Y=$ZU(5)_"",""_^%ZOSF(""VOL"") Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",34,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",35,0)="UCICHECK(X) ;Check if valid namespace (UCI)"
^XTMP("XPDT",7284,"RTN","ZOSVONT",36,0)=" N Y,%"
^XTMP("XPDT",7284,"RTN","ZOSVONT",37,0)=" S %=$P(X,"","",1),Y=0 I $ZU(90,10,%) S Y=%"
^XTMP("XPDT",7284,"RTN","ZOSVONT",38,0)=" Q Y"
^XTMP("XPDT",7284,"RTN","ZOSVONT",39,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",40,0)="GETPEER() ;Get the PEER tcp/ip address"
^XTMP("XPDT",7284,"RTN","ZOSVONT",41,0)=" N PEER,NL,$ET S NL="""",PEER="""",$ET=""S $EC=NL Q NL"""
^XTMP("XPDT",7284,"RTN","ZOSVONT",42,0)=" I $$OS=""VMS"" S PEER=$ZF(""TRNLNM"",""VISTA$IP"")"
^XTMP("XPDT",7284,"RTN","ZOSVONT",43,0)=" I '$L(PEER) S PEER=$ZU(111,0) S:$L(PEER) PEER=$A(PEER,1)_"".""_$A(PEER,2)_"".""_$A(PEER,3)_"".""_$A(PEER,4)"
^XTMP("XPDT",7284,"RTN","ZOSVONT",44,0)=" I $G(^XTV(8989.3,1,""PEER""))[PEER S PEER="""" ;p499"
^XTMP("XPDT",7284,"RTN","ZOSVONT",45,0)=" Q PEER"
^XTMP("XPDT",7284,"RTN","ZOSVONT",46,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",47,0)="SHARELIC(TYPE) ;See if can share a C/S license"
^XTMP("XPDT",7284,"RTN","ZOSVONT",48,0)=" ;Per Sandy Waal 10/18/2003: With Cache 5.0, your telnet and IP connections are now handled properly."
^XTMP("XPDT",7284,"RTN","ZOSVONT",49,0)=" ;N %,%N,%2,UID,%V,$ET S $ET=""S $EC="""""""" Q"",%V=$$VERSION()"
^XTMP("XPDT",7284,"RTN","ZOSVONT",50,0)=" ;I %V'<5 Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",51,0)=" ;Type is 1 for C/S and 0 for Telnet"
^XTMP("XPDT",7284,"RTN","ZOSVONT",52,0)=" ;I %V<3.1 X:TYPE ""S %N=$ZU(5),%2=$ZU(5,""""%SYS""""),%2=$$GetLic^LMFCLI,%N=$ZU(5,%N)"" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",53,0)=" ;I %V<5 S:TYPE %=$$GetCSLic^%LICENSE S:'TYPE %=$$ShareLic^%LICENSE"
^XTMP("XPDT",7284,"RTN","ZOSVONT",54,0)=" ;S $EC="""""
^XTMP("XPDT",7284,"RTN","ZOSVONT",55,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",56,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",57,0)="JOBPAR ;See if X points to a valid Job. Return its UCI."
^XTMP("XPDT",7284,"RTN","ZOSVONT",58,0)=" N NL,$ET S Y="""",NL="""",$ET=""S $EC=NL Q"""
^XTMP("XPDT",7284,"RTN","ZOSVONT",59,0)=" I $D(^$JOB(X)) S Y=$V(-1,X),Y=$P(Y,""^"",14)_"",""_^%ZOSF(""VOL"")"
^XTMP("XPDT",7284,"RTN","ZOSVONT",60,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",61,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",62,0)="NOLOG ;4096 is switch 12 - sign on inhibited."
^XTMP("XPDT",7284,"RTN","ZOSVONT",63,0)=" S Y=""$V(0,-2,4)\4096#2"" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",64,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",65,0)="PROGMODE() ;Check if in PROG mode"
^XTMP("XPDT",7284,"RTN","ZOSVONT",66,0)=" Q $ZJOB#2"
^XTMP("XPDT",7284,"RTN","ZOSVONT",67,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",68,0)="PRGMODE ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",69,0)=" N X,XMB,XQZ,XUCI,XUSLNT,XUVOL,Y,ZTPAC"
^XTMP("XPDT",7284,"RTN","ZOSVONT",70,0)=" W ! S ZTPAC=$S('$D(^VA(200,+DUZ,.1)):"""",1:$P(^(.1),U,5)),XUVOL=^%ZOSF(""VOL"")"
^XTMP("XPDT",7284,"RTN","ZOSVONT",71,0)=" S X="""" X ^%ZOSF(""EOFF"") R:ZTPAC]"""" !,""PAC: "",X:60 D LC^XUS X ^%ZOSF(""EON"") I X'=ZTPAC W ""??""_$C(7) Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",72,0)=" S XMB=""XUPROGMODE"",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB"
^XTMP("XPDT",7284,"RTN","ZOSVONT",73,0)=" D UCI S XUCI=Y,XQZ=""PRGM^ZUA[MGR]"",XUSLNT=1 D DO^%XUCI D ^%PMODE U $I:(:""+B+C+R"") S $ZT="""" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",74,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",75,0)="LGR() ;Last Global ref."
^XTMP("XPDT",7284,"RTN","ZOSVONT",76,0)=" N $ET,NL S NL="""",$ET=""S $EC=NL Q NL"""
^XTMP("XPDT",7284,"RTN","ZOSVONT",77,0)=" Q $ZR"
^XTMP("XPDT",7284,"RTN","ZOSVONT",78,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",79,0)="EC() ;Error code"
^XTMP("XPDT",7284,"RTN","ZOSVONT",80,0)=" Q $ZE"
^XTMP("XPDT",7284,"RTN","ZOSVONT",81,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",82,0)="DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X"
^XTMP("XPDT",7284,"RTN","ZOSVONT",83,0)=" ;S Y=""%"" F  S Y=$O(@Y) Q:Y=""""  D"
^XTMP("XPDT",7284,"RTN","ZOSVONT",84,0)=" ;. I $D(@Y)#2 S @(X_""Y)=""_Y)"
^XTMP("XPDT",7284,"RTN","ZOSVONT",85,0)=" ;. I $D(@Y)>9 S %X=Y_""("",%Y=X_""Y,"" D %XY^%RCR"
^XTMP("XPDT",7284,"RTN","ZOSVONT",86,0)=" S Y=""%"" F  M:$D(@Y) @(X_""Y)=""_Y) S Y=$O(@Y) Q:Y="""""
^XTMP("XPDT",7284,"RTN","ZOSVONT",87,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",88,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",89,0)="ORDER ;SAVE PART OF SYMBOL TABLE IN LOCATION SPECIFIED BY X"
^XTMP("XPDT",7284,"RTN","ZOSVONT",90,0)=" N %"
^XTMP("XPDT",7284,"RTN","ZOSVONT",91,0)=" S (Y,%)=$P(Y,""*"",1) ;I $D(@Y)=0 F  S Y=$O(@Y) Q:Y=""""!(Y[Y1)"
^XTMP("XPDT",7284,"RTN","ZOSVONT",92,0)=" Q:Y="""""
^XTMP("XPDT",7284,"RTN","ZOSVONT",93,0)=" ;S %=$D(@Y) S:%#2 @(X_""Y)=""_Y) I %>9 S %X=Y_""("",%Y=X_""Y,"" D %XY^%RCR"
^XTMP("XPDT",7284,"RTN","ZOSVONT",94,0)=" ;F  S Y=$O(@Y) Q:Y=""""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_""Y)=""_Y) I %>9 S %X=Y_""("",%Y=X_""Y,"" D %XY^%RCR"
^XTMP("XPDT",7284,"RTN","ZOSVONT",95,0)=" F  M:$D(@Y) @(X_""Y)=""_Y) S Y=$O(@Y) Q:Y=""""!(Y'[%)"
^XTMP("XPDT",7284,"RTN","ZOSVONT",96,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",97,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",98,0)="PARSIZ ;Old and not used."
^XTMP("XPDT",7284,"RTN","ZOSVONT",99,0)=" S X=3"
^XTMP("XPDT",7284,"RTN","ZOSVONT",100,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",101,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",102,0)="DEVOPN ;List of Devices opened, Not used"
^XTMP("XPDT",7284,"RTN","ZOSVONT",103,0)=" ;Returns variable Y. Y=Devices owned separated by a comma"
^XTMP("XPDT",7284,"RTN","ZOSVONT",104,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",105,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",106,0)="DEVOK ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",107,0)=" S Y=0,X1=$G(X1) Q:X=2  Q:(X1=""HFS"")!(X1=""SPL"")!(X1=""MT"")!(X1=""CHAN"")  ;Quit w/ OK for HFS, Spool, MT, TCP/IP"
^XTMP("XPDT",7284,"RTN","ZOSVONT",108,0)=" G:X1=""RES"" RESOK^%ZIS6"
^XTMP("XPDT",7284,"RTN","ZOSVONT",109,0)=" N $ET S $ET=""D OPNERR Q"""
^XTMP("XPDT",7284,"RTN","ZOSVONT",110,0)=" O X::$S($D(%ZISTO):%ZISTO,1:0) E  S Y=999 Q  ;G NOPN"
^XTMP("XPDT",7284,"RTN","ZOSVONT",111,0)=" S Y=0 I '$D(%ZISCHK)!($G(%ZIS)[""T"") C X Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",112,0)=" S:X]"""" IO(1,X)="""" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",113,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",114,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",115,0)="OPNERR S $EC="""",Y=-1 Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",116,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",117,0)="GETENV ;Get environment  (UCI^VOL^NODE^BOX:VOLUME)"
^XTMP("XPDT",7284,"RTN","ZOSVONT",118,0)=" N %,%1 S %=$$VERSION,%1=$ZU(86),%1=$S(%<3.1:$P(%1,""*"",3),1:$P(%1,""*"",2))"
^XTMP("XPDT",7284,"RTN","ZOSVONT",119,0)=" D UCI S Y=$P(Y,"","")_""^""_^%ZOSF(""VOL"")_""^""_$ZU(110)_""^""_^%ZOSF(""VOL"")_"":""_%1"
^XTMP("XPDT",7284,"RTN","ZOSVONT",120,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",121,0)="VERSION(X) ;return Cache version, X=1 - return full name"
^XTMP("XPDT",7284,"RTN","ZOSVONT",122,0)=" Q $S($G(X):$P($ZV,"")"")_"")"",1:$P($P($ZV,"") "",2),""(""))"
^XTMP("XPDT",7284,"RTN","ZOSVONT",123,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",124,0)="OS() ;Return the OS NT, VMS, Unix"
^XTMP("XPDT",7284,"RTN","ZOSVONT",125,0)=" Q $S($ZV[""VMS"":""VMS"",$ZV[""UNIX"":""UNIX"",$ZV[""Linux"":""UNIX"",$ZV[""Windows"":""NT"",$ZV[""NT"":""NT"",1:""UNK"")"
^XTMP("XPDT",7284,"RTN","ZOSVONT",126,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",127,0)="SETNM(X) ;Set name, Fall into SETENV"
^XTMP("XPDT",7284,"RTN","ZOSVONT",128,0)="SETENV ;Set environment"
^XTMP("XPDT",7284,"RTN","ZOSVONT",129,0)=" N Q,$ET,$ES S $ET=""S $EC="""""""" Q"""
^XTMP("XPDT",7284,"RTN","ZOSVONT",130,0)=" I $$OS=""VMS"" S Q=$ZF(""SETPRN"",$E(X,1,15))"
^XTMP("XPDT",7284,"RTN","ZOSVONT",131,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",132,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",133,0)="SID() ;System ID Ver 1"
^XTMP("XPDT",7284,"RTN","ZOSVONT",134,0)=" N %1,%2,%3,%4,%5,T S T=""~"""
^XTMP("XPDT",7284,"RTN","ZOSVONT",135,0)=" S %1=$ZU(5) ;namespace"
^XTMP("XPDT",7284,"RTN","ZOSVONT",136,0)=" S %2=$ZU(12,"""") ;directory"
^XTMP("XPDT",7284,"RTN","ZOSVONT",137,0)=" I '$L(%2),$$VERSION'<5.2 S %2=$$defdir^%SYS.GLO(%1) ;remote directory"
^XTMP("XPDT",7284,"RTN","ZOSVONT",138,0)=" S %3=$G(^XTV(8989.3,1,""SID"")),%4=$P(%3,""^"",4),%5=$P(%3,""^"",5)"
^XTMP("XPDT",7284,"RTN","ZOSVONT",139,0)=" I $L(%4),$L(%5),%2[%4 S %2=$P(%2,%4)_%5_$P(%2,%4,2,9)"
^XTMP("XPDT",7284,"RTN","ZOSVONT",140,0)=" S %3=%1_T_%2 ;namespace~directory"
^XTMP("XPDT",7284,"RTN","ZOSVONT",141,0)=" Q ""1~""_%3"
^XTMP("XPDT",7284,"RTN","ZOSVONT",142,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",143,0)="PRI() ;Check if a mixed OS enviroment."
^XTMP("XPDT",7284,"RTN","ZOSVONT",144,0)=" ;Default return 1 unless we are on the secondary OS."
^XTMP("XPDT",7284,"RTN","ZOSVONT",145,0)=" ;Only Cache on a VMS(1)/Linux or NT(2) mix is supported now."
^XTMP("XPDT",7284,"RTN","ZOSVONT",146,0)=" N % S %=1"
^XTMP("XPDT",7284,"RTN","ZOSVONT",147,0)=" I $P(^XTV(8989.3,1,0),""^"",5),$$OS'=""VMS"" S %=2"
^XTMP("XPDT",7284,"RTN","ZOSVONT",148,0)=" Q %"
^XTMP("XPDT",7284,"RTN","ZOSVONT",149,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",150,0)="HFSREW(IO,IOPAR) ;Rewind Host File."
^XTMP("XPDT",7284,"RTN","ZOSVONT",151,0)=" S $ZT=""HFSRWERR"""
^XTMP("XPDT",7284,"RTN","ZOSVONT",152,0)=" C IO O @(""""""""_IO_""""""""_$S(IOPAR]"""":"":""_IOPAR_"":1"",1:"":1"")) I '$T Q 0"
^XTMP("XPDT",7284,"RTN","ZOSVONT",153,0)=" Q 1"
^XTMP("XPDT",7284,"RTN","ZOSVONT",154,0)="HFSRWERR ;Error encountered"
^XTMP("XPDT",7284,"RTN","ZOSVONT",155,0)=" Q 0"
^XTMP("XPDT",7284,"RTN","ZOSVONT",156,0)="LOGRSRC(OPT,TYPE,STATUS) ;record resource usage in ^XTMP(""KMPR"""
^XTMP("XPDT",7284,"RTN","ZOSVONT",157,0)=" Q:'$G(^%ZTSCH(""LOGRSRC""))  ; quit if RUM not turned on."
^XTMP("XPDT",7284,"RTN","ZOSVONT",158,0)=" ; call to RUM routine."
^XTMP("XPDT",7284,"RTN","ZOSVONT",159,0)=" D RU^%ZOSVKR($G(OPT),$G(TYPE),$G(STATUS))"
^XTMP("XPDT",7284,"RTN","ZOSVONT",160,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",161,0)="SETTRM(X) ;Turn on specified terminators."
^XTMP("XPDT",7284,"RTN","ZOSVONT",162,0)=" U $I:(:""+T"":X)"
^XTMP("XPDT",7284,"RTN","ZOSVONT",163,0)=" Q 1"
^XTMP("XPDT",7284,"RTN","ZOSVONT",164,0)=" ;"
^XTMP("XPDT",7284,"RTN","ZOSVONT",165,0)="T0 ; start RT clock, obsolete"
^XTMP("XPDT",7284,"RTN","ZOSVONT",166,0)=" ;S XRT0=$H"
^XTMP("XPDT",7284,"RTN","ZOSVONT",167,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZOSVONT",168,0)="T1 ; store RT datum, obsolete"
^XTMP("XPDT",7284,"RTN","ZOSVONT",169,0)=" ;S ^%ZRTL(3,XRTL,+$H,XRTN,$P($H,"","",2))=XRT0 K XRT0"
^XTMP("XPDT",7284,"RTN","ZOSVONT",170,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZTEDIT2")="0^3^B16339351^B16132418"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",1,0)="ZTEDIT2 ;SF/RWF - VA EDITOR ;09/03/2008"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",2,0)=" ;;8.0;KERNEL;**9,16,120,499**;Jul 10, 1995;Build 14"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",3,0)=" F %I=1:1 S %A=$T(%+%I),%T=$P(%A,"" "",1),%B=$P(%A,"" "",2,256) Q:%T=""END""  I $L(%T) S ^%Z(%T)=%B"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",4,0)=" G ^ZTEDIT3"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",5,0)=" Q"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",6,0)="% ;"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",7,0)="ACTION R !,""Action: "",%X:%9 S %X=$S(%X?1""."".E:$E(%X,2),1:$E(%X)),%NX=$S(%X="""":1,""BCRSV""[%X:""A""_$A(%X),""bcrsv""[%X:""A""_($A(%X)-32),%X=""?"":""?A"",1:""what2"")"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",8,0)="A66 S %NX=""A661"",%Y=0 F %=1:1 S %X=$T(+%) Q:%X=""""  S %Y=%Y+2+$L(%X) I $L(%X)>245 W !,""Line '+"",%,""' is longer than 245"""
^XTMP("XPDT",7284,"RTN","ZTEDIT2",9,0)="A661 S %NX=""A99"" W ?20,""Routine is "",%Y,"" Bytes in size."""
^XTMP("XPDT",7284,"RTN","ZTEDIT2",10,0)="A67 X ^%Z(""A671"") W !,?20,""Checksum is "",%Y S %NX=""A99"""
^XTMP("XPDT",7284,"RTN","ZTEDIT2",11,0)="A671 S %Y=0 F %=1,3:1 S %1=$T(+%),%3=$F(%1,"" "") Q:'%3  S %3=$S($E(%1,%3)'="";"":$L(%1),$E(%1,%3+1)="";"":$L(%1),1:%3-2) F %2=1:1:%3 S %Y=$A(%1,%2)*%2+%Y"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",12,0)="A83 X ^%Z(""MV1""),^%Z(""A99"")"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",13,0)="A82 X ^%Z(""MV100""),^%Z(""A99"")"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",14,0)="A86 W !,""%Z editor version "",^%Z(""VR"") X ^%Z(""A99"")"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",15,0)="A99 S %NX=""ACTION"""
^XTMP("XPDT",7284,"RTN","ZTEDIT2",16,0)="JOIN S %NX=1 W ""oin line: "" X ^%Z(""GTAG"") Q:%T=""""  S %LS=%L,%TG=%T,%T=%D_""+""_(%E+1) X ^%Z(""TAG"") S %NX=$S(%L="""":""what"",1:""JO2"")"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",17,0)="JO2 W:%X'=%TG "" "",%TG S %NX=1,%X=$L(%LS)+$L(%L)>245 W:%X "" ... too long"" I '%X ZR @%T,@%TG ZI %LS_%L W !,%LS_%L"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",18,0)="SEARCH S %NX=1 R ""earch for: "",%R:%9 Q:%R=""""  X ^%Z(""SELALL"") S %NX=$S(%POP:""what"",1:""S55"")"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",19,0)="S55 S %NX=1,%T=$S(%C:%B_""+""_%C,1:%B) F %A=%A:1:%I S %L=$T(+%A) S:$P(%L,"" "")]"""" %T=$P($P(%L,"" ""),""(""),%C=0,%B=$P(%T,""("") W:%L[%R !,%T,?6,"" "",$P(%L,"" "",2,999),! S %C=%C+1,%T=%B_""+""_%C"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",20,0)="GTAG W:$D(%TG) %TG,""//"" R %X:%9 X ^%Z(""GT2""):%X=""*"" S %L="""",%T=$S(%X?1.P:"""",%X]"""":%X,$D(%TG):%TG,1:"""") S:%T="""" %NX=1 Q:%T=""""  X ^%Z(""TAG"") S:%T]"""" %TG=%T"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",21,0)="GT2 S %D="""",%E=0 F %I=1:1 S %L=$T(+%I),%E=%E+1 Q:%L=""""  S:$P(%L,"" "")]"""" %D=$P($P(%L,"" ""),""(""),%E=0 S %X=$S(%E:%D_""+""_%E,1:%D)"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",22,0)="GT3 X ^%Z(""GT2"") S %NX=""EDIT"""
^XTMP("XPDT",7284,"RTN","ZTEDIT2",23,0)="TAG S:%T?1""""""""""+"".N %T=$E(%T,3,9) S %L="""",%D=$P(%T,""+"",1),%E=$P(%T,""+"",2) Q:%D'?1.8AN&(%D'?1""%"".AN)&(%D]"""")!(%E'?.N)  S:%D="""" %D=$P($P($T(+1),"" ""),""(""),%E=%E-1 X ^(""TAG2"")"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",24,0)="TAG2 S %T=%D,%I=%E,%E=-1 F %I=0:1:%I S %E=%E+1,%T=$S(%E>0:%D_""+""_%E,1:%D),@(""%L=$T(""_%T_"")"") I $P(%L,"" "",1)]"""" S %D=$P($P(%L,"" ""),""(""),%E=0,%T=%D"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",25,0)="SELECT S %POP=1 W "" from line: "" X ^%Z(""GTAG"") Q:%L=""""  S %ST=%T,%B=%D,%C=%E X ^%Z(""SEL3"") S %A=%I W "" to line: "" X ^%Z(""GTAG"") Q:%L=""""  X ^%Z(""SEL3"") S %POP=%A>%I"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",26,0)="SELALL S %POP=1 R "" from line: BEG=> "",%T:%9 S:%T="""" %T=""+1"" X ^%Z(""TAG"") Q:%L=""""  S %B=%D,%C=%E X ^%Z(""SEL3"") S %A=%I R "" to line: END=> "",%T:%9 S (%D,%E)="""" X ^%Z(""TAG""):%T]"""" S %POP=%L=""""&(%T]"""") Q:%POP  X ^%Z(""SEL3"") S %POP=%A>%I"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",27,0)="SEL3 F %I=1:1 S %L=$T(+%I) Q:%L=""""  I $P($P(%L,"" ""),""("")=%D,%D]"""" S %I=%I+%E Q"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",28,0)="LN1 S:$P(%L,"" "")[$C(9) %L=$P(%L,$C(9))_"" ""_$P(%L,$C(9),2,99) S %T=$P($P(%L,"" ""),""(""),%POP=$P(%L,"" "",2)']"""" I '%POP,%T'?.N,%T'?1A.7AN,%T'?1""%"".7AN S %POP=1"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",29,0)="LOCAL S %NX=""what"" S:%X'=""*"" %LCL=$E(%X,2,99) Q:'$D(%LCL)  Q:'$D(@%LCL)#2  S %T=""*""_%LCL,%L=@%LCL X ^%Z(""EDITLINE"") S @%LCL=%L,%NX=1"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",30,0)="TERM S %NX=1 X ^%Z(""TERM1""),^%Z(""TERM2""),^%Z(""TERM3"")"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",31,0)="TERM1 S %S=$O(^%ZIS(2,""B"",""C-VT100"",0)),%S=$G(^VA(200,+$G(DUZ),1.2),%S) I %S'>0 W !,""Terminal Type not found."""
^XTMP("XPDT",7284,"RTN","ZTEDIT2",32,0)="TERM2 W !,""TERMINAL TYPE: "",$S(%S'>0:"""",$D(^%ZIS(2,%S,0)):$P(^(0),""^"",1)_""//"",1:"""") R %X:999 Q:%X=""""  S %S=$S($D(^%ZIS(2,""B"",%X)):$O(^(%X,0)),1:0)"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",33,0)="TERM3 Q:%S<1  S %ST=$P(^%ZIS(2,%S,0),""^"",1),%=^(1),%RM=%-1,%SL=$P(%,""^"",3)-4,XY=$G(^(""XY"")),DX=0,DY=%SL,X=%RM+1,IOT=$G(IOT,""TRM"") X ^%ZOSF(""RM"") X XY W !!!"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",34,0)="MODE W "" mode change"" S:XY]"""" %XY=XY S %NX=1,XY=$S(XY]"""":"""",1:$S($D(%XY):%XY,1:"""")) W !,$S(XY="""":""replace-with"",1:""line editor""),!"
^XTMP("XPDT",7284,"RTN","ZTEDIT2",35,0)="END ;"
^XTMP("XPDT",7284,"VER")="8.0^22.0"
^XTMP("XPDT",7284,"^DD",8989.3,8989.3,250,0)="PEER SYSTEMS^F^^PEER;1^K:$L(X)>245!($L(X)<7)!'(X?1.(1.3N1"".""1.3N1"".""1.3N1"".""1.3N.1"","")) X"
^XTMP("XPDT",7284,"^DD",8989.3,8989.3,250,3)="Enter a list of IP addresses separated by commas."
^XTMP("XPDT",7284,"^DD",8989.3,8989.3,250,21,0)="^^3^3^3080915^"
^XTMP("XPDT",7284,"^DD",8989.3,8989.3,250,21,1,0)="This field holds a list of IP addresses that the GETPEER function will "
^XTMP("XPDT",7284,"^DD",8989.3,8989.3,250,21,2,0)="not pass back from the API. "
^XTMP("XPDT",7284,"^DD",8989.3,8989.3,250,21,3,0)="It is set to 127.0.0.1 by default."
^XTMP("XPDT",7284,"^DD",8989.3,8989.3,250,"DT")="3080915"
^XTMP("XPDT",7310)="1"
^XTMP("XPDT",7310,"BLD",1143,0)="XU*8.0*512^KERNEL^0^3081006^y"
^XTMP("XPDT",7310,"BLD",1143,1,0)="^^2^2^3081006^"
^XTMP("XPDT",7310,"BLD",1143,1,1,0)="Please see the patch description in the Patch Module on FORUM."
^XTMP("XPDT",7310,"BLD",1143,1,2,0)=""
^XTMP("XPDT",7310,"BLD",1143,4,0)="^9.64PA^^"
^XTMP("XPDT",7310,"BLD",1143,6)="^408"
^XTMP("XPDT",7310,"BLD",1143,6.3)="1"
^XTMP("XPDT",7310,"BLD",1143,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7310,"BLD",1143,"KRN",.4,0)=".4"
^XTMP("XPDT",7310,"BLD",1143,"KRN",.401,0)=".401"
^XTMP("XPDT",7310,"BLD",1143,"KRN",.402,0)=".402"
^XTMP("XPDT",7310,"BLD",1143,"KRN",.403,0)=".403"
^XTMP("XPDT",7310,"BLD",1143,"KRN",.403,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7310,"BLD",1143,"KRN",.403,"NM",1,0)="XU-CLINICAL TRAINEE    FILE #200^200^0"
^XTMP("XPDT",7310,"BLD",1143,"KRN",.403,"NM","B","XU-CLINICAL TRAINEE    FILE #200",1)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN",.5,0)=".5"
^XTMP("XPDT",7310,"BLD",1143,"KRN",.84,0)=".84"
^XTMP("XPDT",7310,"BLD",1143,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7310,"BLD",1143,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7310,"BLD",1143,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7310,"BLD",1143,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7310,"BLD",1143,"KRN",19,0)="19"
^XTMP("XPDT",7310,"BLD",1143,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7310,"BLD",1143,"KRN",101,0)="101"
^XTMP("XPDT",7310,"BLD",1143,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7310,"BLD",1143,"KRN",771,0)="771"
^XTMP("XPDT",7310,"BLD",1143,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7310,"BLD",1143,"KRN",870,0)="870"
^XTMP("XPDT",7310,"BLD",1143,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7310,"BLD",1143,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7310,"BLD",1143,"KRN",8994,0)="8994"
^XTMP("XPDT",7310,"BLD",1143,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",.4,.4)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",.401,.401)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",.402,.402)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",.403,.403)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",.5,.5)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",.84,.84)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",19,19)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",101,101)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",771,771)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",870,870)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",8994,8994)=""
^XTMP("XPDT",7310,"BLD",1143,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7310,"BLD",1143,"QUES",0)="^9.62^^"
^XTMP("XPDT",7310,"BLD",1143,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7310,"BLD",1143,"REQB",1,0)="XU*8.0*398^1"
^XTMP("XPDT",7310,"BLD",1143,"REQB","B","XU*8.0*398",1)=""
^XTMP("XPDT",7310,"KRN",.403,29,-1)="0^1"
^XTMP("XPDT",7310,"KRN",.403,29,0)="XU-CLINICAL TRAINEE^@^@^^3021002.0807^^^200^0^0^1"
^XTMP("XPDT",7310,"KRN",.403,29,11)="D REQ^XUSER2("""",1)"
^XTMP("XPDT",7310,"KRN",.403,29,40,0)="^.4031I^1^1"
^XTMP("XPDT",7310,"KRN",.403,29,40,1,0)="1^^1,1"
^XTMP("XPDT",7310,"KRN",.403,29,40,1,1)="Page 1"
^XTMP("XPDT",7310,"KRN",.403,29,40,1,40,0)="^.4032IP^175^2"
^XTMP("XPDT",7310,"KRN",.403,29,40,1,40,174,0)="XU-CLINICAL TRAINEE HDR^1^1,1^d"
^XTMP("XPDT",7310,"KRN",.403,29,40,1,40,175,0)="XU-CLINICAL TRAINEE 1^2^2,1^e"
^XTMP("XPDT",7310,"KRN",.404,174,0)="XU-CLINICAL TRAINEE HDR^200^"
^XTMP("XPDT",7310,"KRN",.404,174,40,0)="^.4044I^4^4"
^XTMP("XPDT",7310,"KRN",.404,174,40,1,0)="1^Edit Trainee Registration Data^1"
^XTMP("XPDT",7310,"KRN",.404,174,40,1,2)="^^1,26"
^XTMP("XPDT",7310,"KRN",.404,174,40,2,0)="2^NAME^3"
^XTMP("XPDT",7310,"KRN",.404,174,40,2,1)=".01"
^XTMP("XPDT",7310,"KRN",.404,174,40,2,2)="2,7^35^2,1"
^XTMP("XPDT",7310,"KRN",.404,174,40,2,4)="^^^1"
^XTMP("XPDT",7310,"KRN",.404,174,40,3,0)="3^Page 1 of^1"
^XTMP("XPDT",7310,"KRN",.404,174,40,3,2)="^^2,69"
^XTMP("XPDT",7310,"KRN",.404,174,40,4,0)="4^_______________________________________________________________________________^1"
^XTMP("XPDT",7310,"KRN",.404,174,40,4,2)="^^3,1"
^XTMP("XPDT",7310,"KRN",.404,175,0)="XU-CLINICAL TRAINEE 1^200"
^XTMP("XPDT",7310,"KRN",.404,175,40,0)="^.4044I^24^20"
^XTMP("XPDT",7310,"KRN",.404,175,40,1,0)="11^Title^3"
^XTMP("XPDT",7310,"KRN",.404,175,40,1,1)="8"
^XTMP("XPDT",7310,"KRN",.404,175,40,1,2)="9,28^30^9,21"
^XTMP("XPDT",7310,"KRN",.404,175,40,2,0)="10^Degree^3"
^XTMP("XPDT",7310,"KRN",.404,175,40,2,1)="10.6"
^XTMP("XPDT",7310,"KRN",.404,175,40,2,2)="9,9^10^9,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,3,0)="12^Service/Section^3"
^XTMP("XPDT",7310,"KRN",.404,175,40,3,1)="29"
^XTMP("XPDT",7310,"KRN",.404,175,40,3,2)="10,18^30^10,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,5,0)="14^Permanent Street 1^3^^F3"
^XTMP("XPDT",7310,"KRN",.404,175,40,5,1)=".111"
^XTMP("XPDT",7310,"KRN",.404,175,40,5,2)="11,21^50^11,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,6,0)="15^Permanent Street 2^3^^F4"
^XTMP("XPDT",7310,"KRN",.404,175,40,6,1)=".112"
^XTMP("XPDT",7310,"KRN",.404,175,40,6,2)="12,21^50^12,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,7,0)="16^Permanent Street 3^3^^F5"
^XTMP("XPDT",7310,"KRN",.404,175,40,7,1)=".113"
^XTMP("XPDT",7310,"KRN",.404,175,40,7,2)="13,21^50^13,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,8,0)="17^City^3^^F6"
^XTMP("XPDT",7310,"KRN",.404,175,40,8,1)=".114"
^XTMP("XPDT",7310,"KRN",.404,175,40,8,2)="14,7^30^14,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,9,0)="18^State^3^^F7"
^XTMP("XPDT",7310,"KRN",.404,175,40,9,1)=".115"
^XTMP("XPDT",7310,"KRN",.404,175,40,9,2)="15,8^30^15,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,10,0)="19^Zip Code^3^^F8"
^XTMP("XPDT",7310,"KRN",.404,175,40,10,1)=".116"
^XTMP("XPDT",7310,"KRN",.404,175,40,10,2)="15,50^10^15,40"
^XTMP("XPDT",7310,"KRN",.404,175,40,11,0)="20^E-Mail Address^3^^F9"
^XTMP("XPDT",7310,"KRN",.404,175,40,11,1)=".151"
^XTMP("XPDT",7310,"KRN",.404,175,40,11,2)="16,17^50^16,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,12,0)="2^1^1"
^XTMP("XPDT",7310,"KRN",.404,175,40,12,2)="^^1,79"
^XTMP("XPDT",7310,"KRN",.404,175,40,15,0)="9^Target Degree Lvl^3^^12.1F"
^XTMP("XPDT",7310,"KRN",.404,175,40,15,1)="12.1"
^XTMP("XPDT",7310,"KRN",.404,175,40,15,2)="8,20^59^8,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,15,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7310,"KRN",.404,175,40,16,0)="8^Program of Study^3^^12.2F"
^XTMP("XPDT",7310,"KRN",.404,175,40,16,1)="12.2"
^XTMP("XPDT",7310,"KRN",.404,175,40,16,2)="7,19^59^7,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,16,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7310,"KRN",.404,175,40,17,0)="6^Last Training Month & Year^3^^12.3F"
^XTMP("XPDT",7310,"KRN",.404,175,40,17,1)="12.3"
^XTMP("XPDT",7310,"KRN",.404,175,40,17,2)="5,66^8^5,38"
^XTMP("XPDT",7310,"KRN",.404,175,40,17,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7310,"KRN",.404,175,40,18,0)="13^Date of Birth^3^^F2"
^XTMP("XPDT",7310,"KRN",.404,175,40,18,1)="5"
^XTMP("XPDT",7310,"KRN",.404,175,40,18,2)="10,65^11^10,50"
^XTMP("XPDT",7310,"KRN",.404,175,40,19,0)="4^VHA Training Fac.^3^^12.4F"
^XTMP("XPDT",7310,"KRN",.404,175,40,19,1)="12.4"
^XTMP("XPDT",7310,"KRN",.404,175,40,19,2)="4,20^27^4,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,19,3)="!M"
^XTMP("XPDT",7310,"KRN",.404,175,40,19,3.1)="S Y=""`""_$$KSP^XUPARAM(""INST"")"
^XTMP("XPDT",7310,"KRN",.404,175,40,19,4)="0"
^XTMP("XPDT",7310,"KRN",.404,175,40,19,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7310,"KRN",.404,175,40,20,0)="3^Is this person an active Trainee?^3^^12.6F"
^XTMP("XPDT",7310,"KRN",.404,175,40,20,1)="12.6"
^XTMP("XPDT",7310,"KRN",.404,175,40,20,2)="3,36^3^3,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,20,12)="D REQ^XUSER2("""",1)"
^XTMP("XPDT",7310,"KRN",.404,175,40,20,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7310,"KRN",.404,175,40,21,0)="7^Trainee Inactive (Date)^3^^12.7F"
^XTMP("XPDT",7310,"KRN",.404,175,40,21,1)="12.7"
^XTMP("XPDT",7310,"KRN",.404,175,40,21,2)="6,63^11^6,38"
^XTMP("XPDT",7310,"KRN",.404,175,40,21,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7310,"KRN",.404,175,40,22,0)="5^Start Date of Training^3^^12.8F"
^XTMP("XPDT",7310,"KRN",.404,175,40,22,1)="12.8"
^XTMP("XPDT",7310,"KRN",.404,175,40,22,2)="5,25^11^5,1"
^XTMP("XPDT",7310,"KRN",.404,175,40,22,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7310,"KRN",.404,175,40,24,0)="1^SSN^4"
^XTMP("XPDT",7310,"KRN",.404,175,40,24,2)="1,49^9^1,44"
^XTMP("XPDT",7310,"KRN",.404,175,40,24,30)="N DIERR,SSN S SSN=$$GET1^DIQ(200,DA_"","",9),Y=$S($D(^XUSEC(""XUSHOWSSN"",+$G(DUZ))):SSN,$L(SSN)=9:""*****""_$E(SSN,6,9),1:"""")"
^XTMP("XPDT",7310,"MBREQ")="0"
^XTMP("XPDT",7310,"ORD",8,.403)=".403;8;;;EDEOUT^DIFROMSO(.403,DA,"""",XPDA);FPRE^DIFROMSI(.403,"""",XPDA);EPRE^DIFROMSI(.403,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.403,DA,"""",XPDA);DEL^DIFROMSK(.403,"""",%)"
^XTMP("XPDT",7310,"ORD",8,.403,0)="FORM"
^XTMP("XPDT",7310,"PKG",3,-1)="1^1"
^XTMP("XPDT",7310,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7310,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7310,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7310,"PKG",3,22,1,0)="8.0^3080616^3080616^6"
^XTMP("XPDT",7310,"PKG",3,22,1,"PAH",1,0)="512^3081006"
^XTMP("XPDT",7310,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3081006"
^XTMP("XPDT",7310,"PKG",3,22,1,"PAH",1,1,1,0)="Please see the patch description in the Patch Module on FORUM."
^XTMP("XPDT",7310,"PKG",3,22,1,"PAH",1,1,2,0)=""
^XTMP("XPDT",7310,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7310,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7310,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7310,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7310,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7310,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7310,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7310,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7310,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7310,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7310,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7310,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7310,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7310,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7310,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7310,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7310,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7310,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7310,"QUES","XPM1","B")=""
^XTMP("XPDT",7310,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7310,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7310,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7310,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7310,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7310,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7310,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7310,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7310,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7310,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7310,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7310,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7310,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7310,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7310,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7310,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7310,"VER")="8.0^22.0"
^XTMP("XPDT",7317)="1"
^XTMP("XPDT",7317,"BLD",18785,0)="OR*3.0*307^ORDER ENTRY/RESULTS REPORTING^0^3100205^y"
^XTMP("XPDT",7317,"BLD",18785,1,0)="^^2^2^3090911^"
^XTMP("XPDT",7317,"BLD",18785,1,1,0)="The description of this patch may be found in the National Patch Module"
^XTMP("XPDT",7317,"BLD",18785,1,2,0)="under OR*3*307."
^XTMP("XPDT",7317,"BLD",18785,4,0)="^9.64PA^101.24^2"
^XTMP("XPDT",7317,"BLD",18785,4,101.24,0)="101.24"
^XTMP("XPDT",7317,"BLD",18785,4,101.24,222)="n^n^f^^y^^y^o^n"
^XTMP("XPDT",7317,"BLD",18785,4,101.24,224)="I Y=1604"
^XTMP("XPDT",7317,"BLD",18785,4,103,0)="103"
^XTMP("XPDT",7317,"BLD",18785,4,103,222)="y^y^f^^^^n"
^XTMP("XPDT",7317,"BLD",18785,4,"B",101.24,101.24)=" "
^XTMP("XPDT",7317,"BLD",18785,4,"B",103,103)=" "
^XTMP("XPDT",7317,"BLD",18785,6)="^278"
^XTMP("XPDT",7317,"BLD",18785,6.3)="60"
^XTMP("XPDT",7317,"BLD",18785,"ABPKG")="n"
^XTMP("XPDT",7317,"BLD",18785,"INID")="^n"
^XTMP("XPDT",7317,"BLD",18785,"INIT")="POST^ORAMY"
^XTMP("XPDT",7317,"BLD",18785,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.4,0)=".4"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.4,"NM",0)="^9.68A^2^2"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.4,"NM",1,0)="ORAM TEAM LIST    FILE #103^103^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.4,"NM",2,0)="ORAM TEAM LIST    FILE #100.21^100.21^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.4,"NM","B","ORAM TEAM LIST    FILE #100.21",2)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",.4,"NM","B","ORAM TEAM LIST    FILE #103",1)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",.401,0)=".401"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.401,"NM",0)="^9.68A^2^2"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.401,"NM",1,0)="ORAM NEXT LAB SORT    FILE #103^103^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.401,"NM",2,0)="ORAM TEAM LIST    FILE #100.21^100.21^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.401,"NM","B","ORAM NEXT LAB SORT    FILE #103",1)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",.401,"NM","B","ORAM TEAM LIST    FILE #100.21",2)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",.402,0)=".402"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.403,0)=".403"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.5,0)=".5"
^XTMP("XPDT",7317,"BLD",18785,"KRN",.84,0)=".84"
^XTMP("XPDT",7317,"BLD",18785,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7317,"BLD",18785,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM",0)="^9.68A^8^8"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM",1,0)="ORAM^^0^B73547514"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM",2,0)="ORAM1^^0^B159543113"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM",3,0)="ORAM2^^0^B120270114"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM",4,0)="ORAM3^^0^B38571379"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM",5,0)="ORAMSET^^0^B40743224"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM",6,0)="ORAMX^^0^B147643525"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM",7,0)="ORAMTTR^^0^B84948729"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM",8,0)="ORWOR^^0^B36027702"
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM","B","ORAM",1)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM","B","ORAM1",2)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM","B","ORAM2",3)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM","B","ORAM3",4)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM","B","ORAMSET",5)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM","B","ORAMTTR",7)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM","B","ORAMX",6)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",9.8,"NM","B","ORWOR",8)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,0)="19"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",0)="^9.68A^14^14"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",1,0)="ORAM ANTICOAGULATION CONTEXT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",2,0)="ORAM ANTICOAGULATION SETUP^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",3,0)="ORAM COMPLICATIONS REPORT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",4,0)="ORAM SET TEAMS^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",5,0)="ORW PARAM GUI^^2"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",6,0)="ORAM DIVISION PARAMETERS^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",7,0)="ORAM CLINIC PARAMETERS^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",8,0)="ORAM ROSENDAAL SINGLE PT TTR^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",9,0)="ORAM ROSENDAAL TTR REPORT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",10,0)="ORAM REPORTS MENU^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",11,0)="ORAM PATIENT LIST ALL^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",12,0)="ORAM PATIENT LIST COMPLEX^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",13,0)="ORAM PATIENT LIST NEXT LAB^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM",14,0)="ORAM PATIENT LIST MENU^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM ANTICOAGULATION CONTEXT",1)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM ANTICOAGULATION SETUP",2)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM CLINIC PARAMETERS",7)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM COMPLICATIONS REPORT",3)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM DIVISION PARAMETERS",6)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM PATIENT LIST ALL",11)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM PATIENT LIST COMPLEX",12)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM PATIENT LIST MENU",14)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM PATIENT LIST NEXT LAB",13)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM REPORTS MENU",10)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM ROSENDAAL SINGLE PT TTR",8)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM ROSENDAAL TTR REPORT",9)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORAM SET TEAMS",4)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19,"NM","B","ORW PARAM GUI",5)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7317,"BLD",18785,"KRN",19.1,"NM",0)="^9.68A^^"
^XTMP("XPDT",7317,"BLD",18785,"KRN",101,0)="101"
^XTMP("XPDT",7317,"BLD",18785,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7317,"BLD",18785,"KRN",771,0)="771"
^XTMP("XPDT",7317,"BLD",18785,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7317,"BLD",18785,"KRN",870,0)="870"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",0)="^9.68A^45^40"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",1,0)="ORAM ADDRESS LINE 1^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",2,0)="ORAM ADDRESS LINE 2^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",3,0)="ORAM ADDRESS LINE 3^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",5,0)="ORAM CLINIC FAX NUMBER^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",6,0)="ORAM CLINIC PHONE NUMBER^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",7,0)="ORAM CONSULT LINK ENABLED^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",8,0)="ORAM CONSULT REQUEST SERVICE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",9,0)="ORAM CPT FOR COMPLEX PHONE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",10,0)="ORAM CPT FOR INITIAL VISIT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",11,0)="ORAM CPT FOR LETTER TO PT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",12,0)="ORAM CPT FOR ORIENTATION^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",13,0)="ORAM CPT FOR SIMPLE PHONE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",14,0)="ORAM CPT FOR SUBSEQUENT VISIT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",15,0)="ORAM DISCHARGE NOTE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",16,0)="ORAM DSS ID^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",17,0)="ORAM DSS UNIT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",19,0)="ORAM INITIAL NOTE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",21,0)="ORAM INTERIM NOTE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",22,0)="ORAM MEDICAL CENTER NAME^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",23,0)="ORAM NON-COUNT LOCATION^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",24,0)="ORAM PCE LINK ENABLED^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",25,0)="ORAM PHONE CLINIC^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",26,0)="ORAM POINT OF CONTACT NAME^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",27,0)="ORAM RAV FILE PATH^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",28,0)="ORAM SIGNATURE BLOCK NAME^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",29,0)="ORAM SIGNATURE BLOCK TITLE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",32,0)="ORAM TEAM LIST (ALL)^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",33,0)="ORAM TEAM LIST (COMPLEX)^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",34,0)="ORAM VISIT LOCATION^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",35,0)="ORAM CLINIC NAME^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",36,0)="ORAM DEFAULT PILL STRENGTH^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",37,0)="ORAM INCL TIME W/NEXT INR DATE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",38,0)="ORAM TOLL FREE PHONE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",39,0)="ORAM INR QUICK ORDER^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",40,0)="ORAM CBC QUICK ORDER^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",41,0)="ORAM HCT/HGB REFERENCE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",42,0)="ORAM INDICATIONS FOR CARE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",43,0)="ORAM AUTO PRIMARY INDICATION^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",44,0)="ORAM APPT MATCH LOOK-AHEAD^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM",45,0)="ORAM APPT MATCH LOOK-BACK^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM ADDRESS LINE 1",1)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM ADDRESS LINE 2",2)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM ADDRESS LINE 3",3)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM APPT MATCH LOOK-AHEAD",44)=""
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM APPT MATCH LOOK-BACK",45)=""
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM AUTO PRIMARY INDICATION",43)=""
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CBC QUICK ORDER",40)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CLINIC FAX NUMBER",5)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CLINIC NAME",35)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CLINIC PHONE NUMBER",6)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CONSULT LINK ENABLED",7)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CONSULT REQUEST SERVICE",8)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CPT FOR COMPLEX PHONE",9)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CPT FOR INITIAL VISIT",10)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CPT FOR LETTER TO PT",11)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CPT FOR ORIENTATION",12)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CPT FOR SIMPLE PHONE",13)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM CPT FOR SUBSEQUENT VISIT",14)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM DEFAULT PILL STRENGTH",36)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM DISCHARGE NOTE",15)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM DSS ID",16)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM DSS UNIT",17)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM HCT/HGB REFERENCE",41)=""
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM INCL TIME W/NEXT INR DATE",37)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM INDICATIONS FOR CARE",42)=""
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM INITIAL NOTE",19)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM INR QUICK ORDER",39)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM INTERIM NOTE",21)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM MEDICAL CENTER NAME",22)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM NON-COUNT LOCATION",23)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM PCE LINK ENABLED",24)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM PHONE CLINIC",25)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM POINT OF CONTACT NAME",26)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM RAV FILE PATH",27)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM SIGNATURE BLOCK NAME",28)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM SIGNATURE BLOCK TITLE",29)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM TEAM LIST (ALL)",32)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM TEAM LIST (COMPLEX)",33)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM TOLL FREE PHONE",38)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.51,"NM","B","ORAM VISIT LOCATION",34)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.52,"NM",0)="^9.68A^2^2"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.52,"NM",1,0)="ORAM CLINIC PARAMETERS^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.52,"NM",2,0)="ORAM SITE PARAMETERS^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.52,"NM","B","ORAM CLINIC PARAMETERS",1)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8989.52,"NM","B","ORAM SITE PARAMETERS",2)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,0)="8994"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",0)="^9.68A^39^35"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",1,0)="ORAM CONCOMP^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",2,0)="ORAM HCT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",3,0)="ORAM INR^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",6,0)="ORAM PATIENT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",7,0)="ORAM PROVIDER^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",8,0)="ORAM SIGCHECK^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",9,0)="ORAM1 ACDATA^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",10,0)="ORAM1 ADDTOP^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",11,0)="ORAM1 COMPTEST^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",13,0)="ORAM1 FLOWTT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",14,0)="ORAM1 GETPT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",15,0)="ORAM1 LOCK^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",16,0)="ORAM1 LOG^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",17,0)="ORAM1 OUTINR^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",18,0)="ORAM1 PCGOAL^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",19,0)="ORAM1 PTCHECK^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",20,0)="ORAM1 PTENTER^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",21,0)="ORAM1 TERASE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",22,0)="ORAM1 UNLOCK^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",23,0)="ORAM2 ALLGOAL^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",24,0)="ORAM2 NOACT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",25,0)="ORAM2 PTAPPT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",26,0)="ORAM2 REMIND^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",27,0)="ORAM2 SHOWRATE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",28,0)="ORAM2 TEAMCHK^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",29,0)="ORAM3 COMPENT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",31,0)="ORAM3 PTADR^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",32,0)="ORAM3 PTFONE^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",33,0)="ORAMSET GET^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",34,0)="ORAMX CONSULT^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",35,0)="ORAMX PCESET^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",36,0)="ORAMSET GETCLINS^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",37,0)="ORAM ORDER^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",38,0)="ORAMSET INDICS^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM",39,0)="ORAM APPTMTCH^^0"
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM APPTMTCH",39)=""
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM CONCOMP",1)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM HCT",2)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM INR",3)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM ORDER",37)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM PATIENT",6)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM PROVIDER",7)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM SIGCHECK",8)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 ACDATA",9)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 ADDTOP",10)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 COMPTEST",11)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 FLOWTT",13)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 GETPT",14)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 LOCK",15)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 LOG",16)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 OUTINR",17)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 PCGOAL",18)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 PTCHECK",19)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 PTENTER",20)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 TERASE",21)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM1 UNLOCK",22)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM2 ALLGOAL",23)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM2 NOACT",24)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM2 PTAPPT",25)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM2 REMIND",26)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM2 SHOWRATE",27)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM2 TEAMCHK",28)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM3 COMPENT",29)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM3 PTADR",31)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAM3 PTFONE",32)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAMSET GET",33)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAMSET GETCLINS",36)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAMSET INDICS",38)=""
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAMX CONSULT",34)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN",8994,"NM","B","ORAMX PCESET",35)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",.4,.4)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",.401,.401)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",.402,.402)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",.403,.403)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",.5,.5)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",.84,.84)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",3.6,3.6)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",3.8,3.8)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",9.2,9.2)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",9.8,9.8)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",19,19)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",19.1,19.1)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",101,101)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",409.61,409.61)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",771,771)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",779.2,779.2)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",870,870)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",8989.51,8989.51)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",8989.52,8989.52)=" "
^XTMP("XPDT",7317,"BLD",18785,"KRN","B",8994,8994)=" "
^XTMP("XPDT",7317,"BLD",18785,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7317,"BLD",18785,"QUES",0)="^9.62^^"
^XTMP("XPDT",7317,"BLD",18785,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7317,"BLD",18785,"REQB",1,0)="OR*3.0*243^2"
^XTMP("XPDT",7317,"BLD",18785,"REQB","B","OR*3.0*243",1)=" "
^XTMP("XPDT",7317,"DATA",101.24,1604,0)="ORAM ANTICOAG REPORT^1604^1^2^ORAM2^RPTSTART^1^R^^^^R^203^^^^^^^ORAM2"
^XTMP("XPDT",7317,"DATA",101.24,1604,2)="^^Anticoagulation Flowsheet^Anticoagulation Flowsheet^^RPT^ORAM2"
^XTMP("XPDT",7317,"FIA",101.24)="OE/RR REPORT"
^XTMP("XPDT",7317,"FIA",101.24,0)="^ORD(101.24,"
^XTMP("XPDT",7317,"FIA",101.24,0,0)="101.24I"
^XTMP("XPDT",7317,"FIA",101.24,0,1)="n^n^f^^y^^y^o^n"
^XTMP("XPDT",7317,"FIA",101.24,0,10)=""
^XTMP("XPDT",7317,"FIA",101.24,0,11)="I Y=1604"
^XTMP("XPDT",7317,"FIA",101.24,0,"RLRO")=""
^XTMP("XPDT",7317,"FIA",101.24,0,"VR")="3.0^OR"
^XTMP("XPDT",7317,"FIA",101.24,101.24)="0"
^XTMP("XPDT",7317,"FIA",101.24,101.241)="0"
^XTMP("XPDT",7317,"FIA",101.24,101.243)="0"
^XTMP("XPDT",7317,"FIA",103)="ORAM FLOWSHEET"
^XTMP("XPDT",7317,"FIA",103,0)="^ORAM(103,"
^XTMP("XPDT",7317,"FIA",103,0,0)="103P"
^XTMP("XPDT",7317,"FIA",103,0,1)="y^y^f^^^^n"
^XTMP("XPDT",7317,"FIA",103,0,10)=""
^XTMP("XPDT",7317,"FIA",103,0,11)=""
^XTMP("XPDT",7317,"FIA",103,0,"RLRO")=""
^XTMP("XPDT",7317,"FIA",103,0,"VR")="3.0^OR"
^XTMP("XPDT",7317,"FIA",103,103)="0"
^XTMP("XPDT",7317,"FIA",103,103.011)="0"
^XTMP("XPDT",7317,"FIA",103,103.0112)="0"
^XTMP("XPDT",7317,"FIA",103,103.021)="0"
^XTMP("XPDT",7317,"FIA",103,103.035)="0"
^XTMP("XPDT",7317,"FIA",103,103.07)="0"
^XTMP("XPDT",7317,"FIA",103,103.08)="0"
^XTMP("XPDT",7317,"FIA",103,103.085)="0"
^XTMP("XPDT",7317,"FIA",103,103.11105)="0"
^XTMP("XPDT",7317,"FIA",103,103.1199)="0"
^XTMP("XPDT",7317,"FRV1",101.24,"1604,0",13)="ORWRP REPORT TEXT"
^XTMP("XPDT",7317,"FRV1",101.24,"1604,0",13,"F")=";XWB(8994,"
^XTMP("XPDT",7317,"INIT")="POST^ORAMY"
^XTMP("XPDT",7317,"KRN",.4,2013,-1)="0^1"
^XTMP("XPDT",7317,"KRN",.4,2013,0)="ORAM TEAM LIST^3090610.1556^@^103^^@^3091110"
^XTMP("XPDT",7317,"KRN",.4,2013,"F",1)="3;C30;L20;N;S;""(Next Lab Date)""~-2,^DPT(^^S I(0,0)=D0 S DIP(1)=$S($D(^ORAM(103,D0,0)):^(0),1:"""") S X=$P(DIP(1),U,1),X=X S D(0)=+X;Z;""PATIENT:""~"
^XTMP("XPDT",7317,"KRN",.4,2013,"F",2)="-2,.01;C1;""""~-2,.09;""""~-2,""PATIENT PHONE: "";C1;""""~-2,.131;C17;""""~-2,""PATIENT WORK PHONE: "";C1;""""~-2,.132;C22;""""~-2,""ADDRESS: "";C1;""""~"
^XTMP("XPDT",7317,"KRN",.4,2013,"F",3)="-2,S DIP(101)=$S($D(^DPT(D0,.11)):^(.11),1:"""") S X=$P(DIP(101),U,4)_"" ""_$P($G(^DIC(5,+$P(DIP(101),U,5),0)),U)_"" ""_$P(DIP(101),U,6) W X K DIP;C12;"""";Z;""CITY_"" ""_STATE_"" ""_ZIP CODE""~"
^XTMP("XPDT",7317,"KRN",.4,2013,"H")="Anticoagulation Next Lab Report"
^XTMP("XPDT",7317,"KRN",.4,2014,-1)="0^2"
^XTMP("XPDT",7317,"KRN",.4,2014,0)="ORAM TEAM LIST^3090610.1628^@^100.21^^@^3100106"
^XTMP("XPDT",7317,"KRN",.4,2014,"DXS",1,9)="N DIERR X DXS(1,9.2) K DIC S DIC=""^DPT("",DIC(0)=""MF"" D ^DIC S (D,D0,D(0))=+Y S DIP(101)=$S($D(^DPT(D0,0)):^(0),1:"""") S X=$P(DIP(101),U,1) S D0=I(0,0) S D1=I(1,0)"
^XTMP("XPDT",7317,"KRN",.4,2014,"DXS",1,9.2)="S I(1,0)=$G(D1),I(0,0)=$G(D0),DIP(1)=$S($D(^OR(100.21,D0,10,D1,0)):^(0),1:"""") S X=$$EXTERNAL^DIDU(100.2101,.01,"""",$P(DIP(1),U,1))"
^XTMP("XPDT",7317,"KRN",.4,2014,"F",2)="10,.01;""Patient""~10,-2,^DPT(^^X DXS(1,9);Z;""MEMBER:PATIENT:""~10,-2,.0905;""ID""~10,-2,.1;L10;""Current Ward""~10,-2,.108;L10;""Bed""~"
^XTMP("XPDT",7317,"KRN",.4,2014,"H")="Anticoagulation Team List"
^XTMP("XPDT",7317,"KRN",.401,1290,-1)="0^1"
^XTMP("XPDT",7317,"KRN",.401,1290,0)="ORAM NEXT LAB SORT^3090610.1534^@^103^^@^3090611"
^XTMP("XPDT",7317,"KRN",.401,1290,2,0)="^.4014^1^1"
^XTMP("XPDT",7317,"KRN",.401,1290,2,1,0)="103^3^NEXT LAB^^^^^^^1"
^XTMP("XPDT",7317,"KRN",.401,1290,2,1,"ASK")="1"
^XTMP("XPDT",7317,"KRN",.401,1290,2,1,"F")="3090610.999999^Jun 11,2009^Jun 11,2009"
^XTMP("XPDT",7317,"KRN",.401,1290,2,1,"GET")="S DISX(1)=$P($G(^ORAM(103,D0,0)),U,4)"
^XTMP("XPDT",7317,"KRN",.401,1290,2,1,"IX")="^ORAM(103,""L"",^ORAM(103,^2"
^XTMP("XPDT",7317,"KRN",.401,1290,2,1,"QCON")="I (DISX(1)]]3090610.999999)&(DISX(1)']]3090625.24)"
^XTMP("XPDT",7317,"KRN",.401,1290,2,1,"T")="3090625.24^Jun 25,2009@2400^Jun 25,2009@24:00"
^XTMP("XPDT",7317,"KRN",.401,1290,2,1,"TXT")="NEXT LAB from Jun 11,2009 to Jun 25,2009@24:00"
^XTMP("XPDT",7317,"KRN",.401,1290,2,"B",103,1)=""
^XTMP("XPDT",7317,"KRN",.401,1290,"%D",0)="^.4012^2^2^3090610^^^"
^XTMP("XPDT",7317,"KRN",.401,1290,"%D",1,0)="This sort template by next lab simplifies prompting for date range for "
^XTMP("XPDT",7317,"KRN",.401,1290,"%D",2,0)="the Team List Reports."
^XTMP("XPDT",7317,"KRN",.401,1291,-1)="0^2"
^XTMP("XPDT",7317,"KRN",.401,1291,0)="ORAM TEAM LIST^3090611.0923^@^100.21^^@^3100106"
^XTMP("XPDT",7317,"KRN",.401,1291,2,0)="^.4014^2^2"
^XTMP("XPDT",7317,"KRN",.401,1291,2,1,0)="100.21^.01^NAME^@^^^^^^4"
^XTMP("XPDT",7317,"KRN",.401,1291,2,1,"ASK")="1"
^XTMP("XPDT",7317,"KRN",.401,1291,2,1,"F")="SLC-ANTICOAGULATION (ALL(z^SLC-ANTICOAGULATION (ALL)"
^XTMP("XPDT",7317,"KRN",.401,1291,2,1,"GET")="S DISX(1)=$P($G(^OR(100.21,D0,0)),U)"
^XTMP("XPDT",7317,"KRN",.401,1291,2,1,"IX")="^OR(100.21,""B"",^OR(100.21,^2"
^XTMP("XPDT",7317,"KRN",.401,1291,2,1,"QCON")="I DISX(1)=""SLC-ANTICOAGULATION (ALL)"""
^XTMP("XPDT",7317,"KRN",.401,1291,2,1,"SER")="100.0000^1.0000"
^XTMP("XPDT",7317,"KRN",.401,1291,2,1,"T")="SLC-ANTICOAGULATION (ALL)^SLC-ANTICOAGULATION (ALL)"
^XTMP("XPDT",7317,"KRN",.401,1291,2,1,"TXT")="NAME equals SLC-ANTICOAGULATION (ALL)"
^XTMP("XPDT",7317,"KRN",.401,1291,2,2,0)="100.2101^^MEMBER^@"".01^^^^^^4"
^XTMP("XPDT",7317,"KRN",.401,1291,2,2,1,0)="^.40141^1^1"
^XTMP("XPDT",7317,"KRN",.401,1291,2,2,1,1,0)="100.21^10"
^XTMP("XPDT",7317,"KRN",.401,1291,2,2,1,"B",100.21,1)=""
^XTMP("XPDT",7317,"KRN",.401,1291,2,2,"CM")="N DIERR S Y(1)=$S($D(^OR(100.21,D0,10,D1,0)):^(0),1:"""") S X=$$EXTERNAL^DIDU(100.2101,.01,"""",$P(Y(1),U,1)) I D1>0 S DISX(2)=X"
^XTMP("XPDT",7317,"KRN",.401,1291,2,2,"F")="@z^A"
^XTMP("XPDT",7317,"KRN",.401,1291,2,2,"GET")="N DIERR S Y(1)=$S($D(^OR(100.21,D0,10,D1,0)):^(0),1:"""") S X=$$EXTERNAL^DIDU(100.2101,.01,"""",$P(Y(1),U,1)) I D1>0 S DISX(2)=X"
^XTMP("XPDT",7317,"KRN",.401,1291,2,2,"QCON")="I (DISX(2)]]""@z"")&(DISX(2)']]""Z"")"
^XTMP("XPDT",7317,"KRN",.401,1291,2,2,"T")="Z^Z"
^XTMP("XPDT",7317,"KRN",.401,1291,2,2,"TXT")="MEMBER from A to Z"
^XTMP("XPDT",7317,"KRN",.401,1291,2,"B",100.21,1)=""
^XTMP("XPDT",7317,"KRN",.401,1291,2,"B",100.2101,2)=""
^XTMP("XPDT",7317,"KRN",.401,1291,"%D",0)="^.4012^2^2^3090611^^^^"
^XTMP("XPDT",7317,"KRN",.401,1291,"%D",1,0)="This sort template identifies the list of Complext Anticoagulation "
^XTMP("XPDT",7317,"KRN",.401,1291,"%D",2,0)="patients."
^XTMP("XPDT",7317,"KRN",19,10162,-1)="2^5"
^XTMP("XPDT",7317,"KRN",19,10162,0)="ORW PARAM GUI^GUI Parameters^^M^64^^^^^^^22"
^XTMP("XPDT",7317,"KRN",19,10162,10,0)="^19.01IP^13^13"
^XTMP("XPDT",7317,"KRN",19,10162,10,13,0)="12677^COAG"
^XTMP("XPDT",7317,"KRN",19,10162,10,13,"^")="ORAM ANTICOAGULATION SETUP"
^XTMP("XPDT",7317,"KRN",19,10162,"U")="GUI PARAMETERS"
^XTMP("XPDT",7317,"KRN",19,12676,-1)="0^4"
^XTMP("XPDT",7317,"KRN",19,12676,0)="ORAM SET TEAMS^Anticoagulation Background Job^^R^^^^^^^^"
^XTMP("XPDT",7317,"KRN",19,12676,1,0)="^19.06^4^4^3081203^^"
^XTMP("XPDT",7317,"KRN",19,12676,1,1,0)="This non-interactive option is used to set the daily Team Lists for the "
^XTMP("XPDT",7317,"KRN",19,12676,1,2,0)="Anticoagulation Management Teams. Works with the Anticoagulation "
^XTMP("XPDT",7317,"KRN",19,12676,1,3,0)="Management software. It should be queued to run daily in the early "
^XTMP("XPDT",7317,"KRN",19,12676,1,4,0)="morning, before the system is busy or the clinics start."
^XTMP("XPDT",7317,"KRN",19,12676,25)="TLISTS^ORAM3"
^XTMP("XPDT",7317,"KRN",19,12676,"U")="ANTICOAGULATION BACKGROUND JOB"
^XTMP("XPDT",7317,"KRN",19,12677,-1)="0^2"
^XTMP("XPDT",7317,"KRN",19,12677,0)="ORAM ANTICOAGULATION SETUP^GUI Anticoagulation Parameters^^M^^^^^^^^ANTICOAGULATION MANAGEMENT"
^XTMP("XPDT",7317,"KRN",19,12677,1,0)="^19.06^2^2^3090310^^^^"
^XTMP("XPDT",7317,"KRN",19,12677,1,1,0)="Supports entry and update of the parameters which determine the behavior "
^XTMP("XPDT",7317,"KRN",19,12677,1,2,0)="of the Anticoagulation Management application."
^XTMP("XPDT",7317,"KRN",19,12677,10,0)="^19.01IP^2^2"
^XTMP("XPDT",7317,"KRN",19,12677,10,1,0)="12748^D^1"
^XTMP("XPDT",7317,"KRN",19,12677,10,1,"^")="ORAM DIVISION PARAMETERS"
^XTMP("XPDT",7317,"KRN",19,12677,10,2,0)="12747^C^2"
^XTMP("XPDT",7317,"KRN",19,12677,10,2,"^")="ORAM CLINIC PARAMETERS"
^XTMP("XPDT",7317,"KRN",19,12677,99)="61430,45567"
^XTMP("XPDT",7317,"KRN",19,12677,"U")="GUI ANTICOAGULATION PARAMETERS"
^XTMP("XPDT",7317,"KRN",19,12678,-1)="0^3"
^XTMP("XPDT",7317,"KRN",19,12678,0)="ORAM COMPLICATIONS REPORT^Anticoagulation Complication Report^^R^^^^^^^y^"
^XTMP("XPDT",7317,"KRN",19,12678,1,0)="^19.06^2^2^3081218^^^"
^XTMP("XPDT",7317,"KRN",19,12678,1,1,0)="Option to generate a report of complications to patients being tracked by "
^XTMP("XPDT",7317,"KRN",19,12678,1,2,0)="Anticoagulation Management."
^XTMP("XPDT",7317,"KRN",19,12678,10.1)="COMPLICATION SEARCH"
^XTMP("XPDT",7317,"KRN",19,12678,25)="COMPRPT^ORAMX"
^XTMP("XPDT",7317,"KRN",19,12678,99.1)="61277,44847"
^XTMP("XPDT",7317,"KRN",19,12678,"U")="ANTICOAGULATION COMPLICATION R"
^XTMP("XPDT",7317,"KRN",19,12679,-1)="0^1"
^XTMP("XPDT",7317,"KRN",19,12679,0)="ORAM ANTICOAGULATION CONTEXT^Broker Context for Anticoagulation^^B^^^^^^^^ORDER ENTRY/RESULTS REPORTING^y"
^XTMP("XPDT",7317,"KRN",19,12679,1,0)="^19.06^1^1^3090812^^^^"
^XTMP("XPDT",7317,"KRN",19,12679,1,1,0)="RPC Context for Anticoagulation Management."
^XTMP("XPDT",7317,"KRN",19,12679,99.1)="61578,55596"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",0)="^19.05P^52^46"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",1,0)="ORAM PATIENT"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",2,0)="ORAMSET GET"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",3,0)="ORAM PROVIDER"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",4,0)="ORAM HCT"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",5,0)="ORAM INR"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",6,0)="ORAM SIGCHECK"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",7,0)="ORAM CONCOMP"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",12,0)="ORAM1 ADDTOP"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",13,0)="ORAM1 PTCHECK"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",14,0)="ORAM1 ACDATA"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",15,0)="ORAM1 LOCK"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",16,0)="ORAM1 FLOWTT"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",17,0)="ORAM1 OUTINR"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",18,0)="ORAM1 PCGOAL"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",19,0)="ORAM1 PTENTER"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",20,0)="ORAM1 COMPTEST"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",21,0)="ORAM1 TERASE"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",22,0)="ORAM1 UNLOCK"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",23,0)="ORAM1 LOG"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",25,0)="ORAM1 GETPT"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",26,0)="ORAM2 SHOWRATE"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",27,0)="ORAM2 ALLGOAL"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",28,0)="ORAM2 PTAPPT"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",29,0)="ORAM2 NOACT"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",30,0)="ORAM2 TEAMCHK"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",31,0)="ORAM2 REMIND"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",33,0)="ORAM3 COMPENT"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",34,0)="ORAM3 PTADR"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",35,0)="ORAM3 PTFONE"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",36,0)="ORAMX CONSULT"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",37,0)="ORWTPP GETCOS"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",38,0)="ORWTPP GETDCOS"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",39,0)="TIU SIGN RECORD"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",40,0)="TIU CREATE RECORD"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",41,0)="TIU UPDATE RECORD"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",42,0)="TIU REQUIRES COSIGNATURE"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",43,0)="TIU DELETE RECORD"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",44,0)="ORWDX SAVE"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",45,0)="ORAMX PCESET"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",46,0)="ORWPCE SCSEL"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",47,0)="ORAMSET GETCLINS"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",48,0)="ORWU HASKEY"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",49,0)="ORAM ORDER"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",50,0)="ORWPCE SCDIS"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",51,0)="ORAMSET INDICS"
^XTMP("XPDT",7317,"KRN",19,12679,"RPC",52,0)="ORAM APPTMTCH"
^XTMP("XPDT",7317,"KRN",19,12679,"U")="BROKER CONTEXT FOR ANTICOAGULA"
^XTMP("XPDT",7317,"KRN",19,12747,-1)="0^7"
^XTMP("XPDT",7317,"KRN",19,12747,0)="ORAM CLINIC PARAMETERS^Anticoagulation Clinic Parameters^^R^^^^^^^^ANTICOAGULATION MANAGEMENT"
^XTMP("XPDT",7317,"KRN",19,12747,1,0)="^^2^2^3090310^"
^XTMP("XPDT",7317,"KRN",19,12747,1,1,0)="Supports entry and update of the Clinic parameters which determine the"
^XTMP("XPDT",7317,"KRN",19,12747,1,2,0)="behavior of the Anticoagulation Management application."
^XTMP("XPDT",7317,"KRN",19,12747,25)="SETCLIN^ORAMSET"
^XTMP("XPDT",7317,"KRN",19,12747,"U")="ANTICOAGULATION CLINIC PARAMET"
^XTMP("XPDT",7317,"KRN",19,12748,-1)="0^6"
^XTMP("XPDT",7317,"KRN",19,12748,0)="ORAM DIVISION PARAMETERS^Division-wide Anticoagulation Parameters^^R^^^^^^^^ANTICOAGULATION MANAGEMENT"
^XTMP("XPDT",7317,"KRN",19,12748,1,0)="^^2^2^3090310^"
^XTMP("XPDT",7317,"KRN",19,12748,1,1,0)="Supports entry and update of the Division-wide parameters which determine"
^XTMP("XPDT",7317,"KRN",19,12748,1,2,0)="the behavior of the Anticoagulation Management application."
^XTMP("XPDT",7317,"KRN",19,12748,25)="SETDIV^ORAMSET"
^XTMP("XPDT",7317,"KRN",19,12748,"U")="DIVISION-WIDE ANTICOAGULATION "
^XTMP("XPDT",7317,"KRN",19,12758,-1)="0^9"
^XTMP("XPDT",7317,"KRN",19,12758,0)="ORAM ROSENDAAL TTR REPORT^Calculate TTR (Rosendaal Method)^^R^^^^^^^y^"
^XTMP("XPDT",7317,"KRN",19,12758,1,0)="^19.06^2^2^3090518^^"
^XTMP("XPDT",7317,"KRN",19,12758,1,1,0)="Option to generate a report of the Time in Therapeutic range on both the "
^XTMP("XPDT",7317,"KRN",19,12758,1,2,0)="facility-wide and clinic-by-clinic basis for Anticoagulation Management."
^XTMP("XPDT",7317,"KRN",19,12758,10.1)="ROSENDAAL TTR"
^XTMP("XPDT",7317,"KRN",19,12758,25)="MAIN^ORAMTTR"
^XTMP("XPDT",7317,"KRN",19,12758,99.1)="61277,44847"
^XTMP("XPDT",7317,"KRN",19,12758,"U")="CALCULATE TTR (ROSENDAAL METHO"
^XTMP("XPDT",7317,"KRN",19,12759,-1)="0^10"
^XTMP("XPDT",7317,"KRN",19,12759,0)="ORAM REPORTS MENU^Anticoagulation Management Reports^^M^^^^^^^^ANTICOAGULATION MANAGEMENT"
^XTMP("XPDT",7317,"KRN",19,12759,1,0)="^19.06^2^2^3090611^^^"
^XTMP("XPDT",7317,"KRN",19,12759,1,1,0)="This option provides access to the Quality Assurance Reports for the "
^XTMP("XPDT",7317,"KRN",19,12759,1,2,0)="Anticoagulation Management Program."
^XTMP("XPDT",7317,"KRN",19,12759,10,0)="^19.01IP^4^4"
^XTMP("XPDT",7317,"KRN",19,12759,10,1,0)="12678^C^1"
^XTMP("XPDT",7317,"KRN",19,12759,10,1,"^")="ORAM COMPLICATIONS REPORT"
^XTMP("XPDT",7317,"KRN",19,12759,10,2,0)="12758^R^2"
^XTMP("XPDT",7317,"KRN",19,12759,10,2,"^")="ORAM ROSENDAAL TTR REPORT"
^XTMP("XPDT",7317,"KRN",19,12759,10,3,0)="12760^S^3"
^XTMP("XPDT",7317,"KRN",19,12759,10,3,"^")="ORAM ROSENDAAL SINGLE PT TTR"
^XTMP("XPDT",7317,"KRN",19,12759,10,4,0)="12768^P^4"
^XTMP("XPDT",7317,"KRN",19,12759,10,4,"^")="ORAM PATIENT LIST MENU"
^XTMP("XPDT",7317,"KRN",19,12759,99)="61523,35142"
^XTMP("XPDT",7317,"KRN",19,12759,99.1)="61696,57601"
^XTMP("XPDT",7317,"KRN",19,12759,"U")="ANTICOAGULATION MANAGEMENT REP"
^XTMP("XPDT",7317,"KRN",19,12760,-1)="0^8"
^XTMP("XPDT",7317,"KRN",19,12760,0)="ORAM ROSENDAAL SINGLE PT TTR^Single Patient TTR^^R^^^^^^^y^"
^XTMP("XPDT",7317,"KRN",19,12760,1,0)="^19.06^2^2^3090518^^"
^XTMP("XPDT",7317,"KRN",19,12760,1,1,0)="Option to generate a report of the Time in Therapeutic range for a single "
^XTMP("XPDT",7317,"KRN",19,12760,1,2,0)="patient in Anticoagulation Management."
^XTMP("XPDT",7317,"KRN",19,12760,10.1)="SINGLE PT TTR"
^XTMP("XPDT",7317,"KRN",19,12760,25)="SINGLE^ORAMTTR"
^XTMP("XPDT",7317,"KRN",19,12760,99.1)="61277,44847"
^XTMP("XPDT",7317,"KRN",19,12760,"U")="SINGLE PATIENT TTR"
^XTMP("XPDT",7317,"KRN",19,12765,-1)="0^13"
^XTMP("XPDT",7317,"KRN",19,12765,0)="ORAM PATIENT LIST NEXT LAB^Next Lab Patient List^^R^^^^^^^y^ANTICOAGULATION MANAGEMENT"
^XTMP("XPDT",7317,"KRN",19,12765,1,0)="^^3^3^3090611^"
^XTMP("XPDT",7317,"KRN",19,12765,1,1,0)="This option supports generation of a list of Anticoagulation patients for "
^XTMP("XPDT",7317,"KRN",19,12765,1,2,0)="a selected Clinic, sorted by Next Lab Date for a user-specified date"
^XTMP("XPDT",7317,"KRN",19,12765,1,3,0)="range."
^XTMP("XPDT",7317,"KRN",19,12765,25)="NEXTLAB^ORAMX"
^XTMP("XPDT",7317,"KRN",19,12765,"U")="NEXT LAB PATIENT LIST"
^XTMP("XPDT",7317,"KRN",19,12766,-1)="0^12"
^XTMP("XPDT",7317,"KRN",19,12766,0)="ORAM PATIENT LIST COMPLEX^Complex Anticoagulation Patients^^R^^^^^^^y^ANTICOAGULATION MANAGEMENT"
^XTMP("XPDT",7317,"KRN",19,12766,1,0)="^^1^1^3090611^"
^XTMP("XPDT",7317,"KRN",19,12766,1,1,0)="This option prints the list of Complex patients for a selected Clinic."
^XTMP("XPDT",7317,"KRN",19,12766,25)="TEAMLIST^ORAMX(""C"")"
^XTMP("XPDT",7317,"KRN",19,12766,"U")="COMPLEX ANTICOAGULATION PATIEN"
^XTMP("XPDT",7317,"KRN",19,12767,-1)="0^11"
^XTMP("XPDT",7317,"KRN",19,12767,0)="ORAM PATIENT LIST ALL^All Anticoagulation Patients^^R^^^^^^^y^ANTICOAGULATION MANAGEMENT"
^XTMP("XPDT",7317,"KRN",19,12767,1,0)="^19.06^1^1^3090611^^"
^XTMP("XPDT",7317,"KRN",19,12767,1,1,0)="This option prints the list of ALL patients for a selected Clinic."
^XTMP("XPDT",7317,"KRN",19,12767,25)="TEAMLIST^ORAMX(""A"")"
^XTMP("XPDT",7317,"KRN",19,12767,"U")="ALL ANTICOAGULATION PATIENTS"
^XTMP("XPDT",7317,"KRN",19,12768,-1)="0^14"
^XTMP("XPDT",7317,"KRN",19,12768,0)="ORAM PATIENT LIST MENU^Anticoagulation Patient Lists^^M^^^^^^^^ANTICOAGULATION MANAGEMENT"
^XTMP("XPDT",7317,"KRN",19,12768,1,0)="^19.06^2^2^3090611^^"
^XTMP("XPDT",7317,"KRN",19,12768,1,1,0)="This menu allows printing/display of Patient Lists for Anticoagulation "
^XTMP("XPDT",7317,"KRN",19,12768,1,2,0)="Management."
^XTMP("XPDT",7317,"KRN",19,12768,10,0)="^19.01IP^3^3"
^XTMP("XPDT",7317,"KRN",19,12768,10,1,0)="12767^A^1"
^XTMP("XPDT",7317,"KRN",19,12768,10,1,"^")="ORAM PATIENT LIST ALL"
^XTMP("XPDT",7317,"KRN",19,12768,10,2,0)="12766^C^2"
^XTMP("XPDT",7317,"KRN",19,12768,10,2,"^")="ORAM PATIENT LIST COMPLEX"
^XTMP("XPDT",7317,"KRN",19,12768,10,3,0)="12765^N^3"
^XTMP("XPDT",7317,"KRN",19,12768,10,3,"^")="ORAM PATIENT LIST NEXT LAB"
^XTMP("XPDT",7317,"KRN",19,12768,99)="61523,37466"
^XTMP("XPDT",7317,"KRN",19,12768,"U")="ANTICOAGULATION PATIENT LISTS"
^XTMP("XPDT",7317,"KRN",8989.51,509,-1)="0^1"
^XTMP("XPDT",7317,"KRN",8989.51,509,0)="ORAM ADDRESS LINE 1^Address Line 1^0^^Address Line 1"
^XTMP("XPDT",7317,"KRN",8989.51,509,1)="F^1:50^Answer must be 1-50 characters in length."
^XTMP("XPDT",7317,"KRN",8989.51,509,20,0)="^8989.512^1^1^3090305^^^^"
^XTMP("XPDT",7317,"KRN",8989.51,509,20,1,0)="This is the first line of the Anticoagulation Clinic address."
^XTMP("XPDT",7317,"KRN",8989.51,509,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,509,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,509,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,510,-1)="0^2"
^XTMP("XPDT",7317,"KRN",8989.51,510,0)="ORAM ADDRESS LINE 2^Address Line 2^^^Address Line 2"
^XTMP("XPDT",7317,"KRN",8989.51,510,1)="F^1:30^Answer must be 1-30 characters in length."
^XTMP("XPDT",7317,"KRN",8989.51,510,20,0)="^^1^1^3081022^"
^XTMP("XPDT",7317,"KRN",8989.51,510,20,1,0)="This is the second line of the Anticoagulation Clinic address."
^XTMP("XPDT",7317,"KRN",8989.51,510,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,510,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,510,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,511,-1)="0^3"
^XTMP("XPDT",7317,"KRN",8989.51,511,0)="ORAM ADDRESS LINE 3^Address Line 3^^^Address Line 3"
^XTMP("XPDT",7317,"KRN",8989.51,511,1)="F^1:60^Answer must be 1-60 characters in length."
^XTMP("XPDT",7317,"KRN",8989.51,511,20,0)="^^1^1^3081022^"
^XTMP("XPDT",7317,"KRN",8989.51,511,20,1,0)="This is the (optional) third line of the Anticoagulation Clinic address."
^XTMP("XPDT",7317,"KRN",8989.51,511,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,511,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,511,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,512,-1)="0^15"
^XTMP("XPDT",7317,"KRN",8989.51,512,0)="ORAM DISCHARGE NOTE^Anticoagulation Discharge Note^^^Discharge Note Title"
^XTMP("XPDT",7317,"KRN",8989.51,512,1)="P^8925.1:AEMQ^Select the TIU Document Title for the Discharge Note."
^XTMP("XPDT",7317,"KRN",8989.51,512,3)="I $P(^TIU(8925.1,+Y,0),U,4)=""DOC"",($P(^(0),U,7)=11)"
^XTMP("XPDT",7317,"KRN",8989.51,512,20,0)="^8989.512^3^3^3081021^^"
^XTMP("XPDT",7317,"KRN",8989.51,512,20,1,0)="This is the TIU Document Title that identifies the Anticoagulation"
^XTMP("XPDT",7317,"KRN",8989.51,512,20,2,0)="Discharge Note, which is entered upon the patient's discharge from the"
^XTMP("XPDT",7317,"KRN",8989.51,512,20,3,0)="Anticoagulation clinic."
^XTMP("XPDT",7317,"KRN",8989.51,512,30,0)="^8989.513I^1^1"
^XTMP("XPDT",7317,"KRN",8989.51,512,30,1,0)="1^4"
^XTMP("XPDT",7317,"KRN",8989.51,513,-1)="0^21"
^XTMP("XPDT",7317,"KRN",8989.51,513,0)="ORAM INTERIM NOTE^Anticoagulation Interim Note^^^Interim Note Title"
^XTMP("XPDT",7317,"KRN",8989.51,513,1)="P^8925.1:AEMQ^Select the TIU Document Title for the Interim Note."
^XTMP("XPDT",7317,"KRN",8989.51,513,3)="I $P(^TIU(8925.1,+Y,0),U,4)=""DOC"",($P(^(0),U,7)=11)"
^XTMP("XPDT",7317,"KRN",8989.51,513,20,0)="^8989.512^3^3^3081203^^"
^XTMP("XPDT",7317,"KRN",8989.51,513,20,1,0)="This is the TIU Document Title that identifies the Anticoagulation Interim"
^XTMP("XPDT",7317,"KRN",8989.51,513,20,2,0)="Note, which is entered during the patient's ongoing treatment by the"
^XTMP("XPDT",7317,"KRN",8989.51,513,20,3,0)="Anticoagulation clinic."
^XTMP("XPDT",7317,"KRN",8989.51,513,30,0)="^8989.513I^1^1"
^XTMP("XPDT",7317,"KRN",8989.51,513,30,1,0)="1^4"
^XTMP("XPDT",7317,"KRN",8989.51,514,-1)="0^19"
^XTMP("XPDT",7317,"KRN",8989.51,514,0)="ORAM INITIAL NOTE^Anticoagulation Initial Note^^^Initial Note Title"
^XTMP("XPDT",7317,"KRN",8989.51,514,1)="P^8925.1:AEMQ^Select the TIU Document Title for the Initial Assessment Note."
^XTMP("XPDT",7317,"KRN",8989.51,514,3)="I $P(^TIU(8925.1,+Y,0),U,4)=""DOC"",($P(^(0),U,7)=11)"
^XTMP("XPDT",7317,"KRN",8989.51,514,20,0)="^8989.512^3^3^3081021^^^"
^XTMP("XPDT",7317,"KRN",8989.51,514,20,1,0)="This is the TIU Document Title that identifies the Anticoagulation Initial"
^XTMP("XPDT",7317,"KRN",8989.51,514,20,2,0)="Assessment Note, which is entered for the patient's first visit upon"
^XTMP("XPDT",7317,"KRN",8989.51,514,20,3,0)="enrollment in the Clinic."
^XTMP("XPDT",7317,"KRN",8989.51,514,30,0)="^8989.513I^1^1"
^XTMP("XPDT",7317,"KRN",8989.51,514,30,1,0)="1^4"
^XTMP("XPDT",7317,"KRN",8989.51,515,-1)="0^32"
^XTMP("XPDT",7317,"KRN",8989.51,515,0)="ORAM TEAM LIST (ALL)^Anticoagulation Team (All)^^^Anticoagulation Team (All)"
^XTMP("XPDT",7317,"KRN",8989.51,515,1)="P^100.21:AEMQ^Select the Patient Team List for ALL Anticoagulation patients."
^XTMP("XPDT",7317,"KRN",8989.51,515,20,0)="^8989.512^4^4^3081022^^^"
^XTMP("XPDT",7317,"KRN",8989.51,515,20,1,0)="The ALL Patient list, shows everyone scheduled for that team for that day"
^XTMP("XPDT",7317,"KRN",8989.51,515,20,2,0)="AND any patients NOT completed on previous days."
^XTMP("XPDT",7317,"KRN",8989.51,515,20,3,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,515,20,4,0)="Patients drop off this list as they are completed in the Anticoagulator."
^XTMP("XPDT",7317,"KRN",8989.51,515,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,515,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,515,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,516,-1)="0^33"
^XTMP("XPDT",7317,"KRN",8989.51,516,0)="ORAM TEAM LIST (COMPLEX)^Anticoagulation Team (Complex)^^^Anticoagulation Team (Complex)"
^XTMP("XPDT",7317,"KRN",8989.51,516,1)="P^100.21:AEMQ^Select the Patient Team List for incomplete Anticoagulation patients."
^XTMP("XPDT",7317,"KRN",8989.51,516,20,0)="^8989.512^4^4^3081022^^"
^XTMP("XPDT",7317,"KRN",8989.51,516,20,1,0)="The complex patient list pulls out these patients so that they are not"
^XTMP("XPDT",7317,"KRN",8989.51,516,20,2,0)="lost on the larger list (they appear on both lists)."
^XTMP("XPDT",7317,"KRN",8989.51,516,20,3,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,516,20,4,0)="Patients drop off this list as they are completed in the Anticoagulator."
^XTMP("XPDT",7317,"KRN",8989.51,516,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,516,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,516,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,518,-1)="0^5"
^XTMP("XPDT",7317,"KRN",8989.51,518,0)="ORAM CLINIC FAX NUMBER^Clinic FAX Number^^^Clinic FAX Number"
^XTMP("XPDT",7317,"KRN",8989.51,518,1)="F^4:25^Enter the phone number of the clinic (e.g., (###)###-####x####)"
^XTMP("XPDT",7317,"KRN",8989.51,518,2)="K:X'?4.25NAP X"
^XTMP("XPDT",7317,"KRN",8989.51,518,20,0)="^8989.512^2^2^3090309^^"
^XTMP("XPDT",7317,"KRN",8989.51,518,20,1,0)="Telephone number, with extension if needed, for FAXes to be sent to the"
^XTMP("XPDT",7317,"KRN",8989.51,518,20,2,0)="anticoagulation clinic. For patient letters."
^XTMP("XPDT",7317,"KRN",8989.51,518,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,518,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,518,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,519,-1)="0^6"
^XTMP("XPDT",7317,"KRN",8989.51,519,0)="ORAM CLINIC PHONE NUMBER^Clinic Phone Number^^^Clinic Phone Number"
^XTMP("XPDT",7317,"KRN",8989.51,519,1)="F^4:25^Enter the phone number of the clinic (e.g., (###)###-####x####)"
^XTMP("XPDT",7317,"KRN",8989.51,519,2)="K:X'?4.25NAP X"
^XTMP("XPDT",7317,"KRN",8989.51,519,20,0)="^8989.512^2^2^3090309^^"
^XTMP("XPDT",7317,"KRN",8989.51,519,20,1,0)="Telephone number, with extension if needed, for patient to contact the"
^XTMP("XPDT",7317,"KRN",8989.51,519,20,2,0)="anticoagulation clinic. For patient letters."
^XTMP("XPDT",7317,"KRN",8989.51,519,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,519,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,519,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,520,-1)="0^7"
^XTMP("XPDT",7317,"KRN",8989.51,520,0)="ORAM CONSULT LINK ENABLED^Consult Link Enabled^^^Consult Link Enabled"
^XTMP("XPDT",7317,"KRN",8989.51,520,1)="Y^^Indicate whether or not the Consult Linkage should be enabled."
^XTMP("XPDT",7317,"KRN",8989.51,520,20,0)="^8989.512^2^2^3081023^^"
^XTMP("XPDT",7317,"KRN",8989.51,520,20,1,0)="Indicates if Consult Linker will be used. If NO: prompt will not be seen"
^XTMP("XPDT",7317,"KRN",8989.51,520,20,2,0)="to complete consult."
^XTMP("XPDT",7317,"KRN",8989.51,520,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,520,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,520,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,521,-1)="0^8"
^XTMP("XPDT",7317,"KRN",8989.51,521,0)="ORAM CONSULT REQUEST SERVICE^Consult Request Service Name^^^Consult Request Service Name"
^XTMP("XPDT",7317,"KRN",8989.51,521,1)="P^123.5:AEMQ^Select the Consult Request Service for the Anticoagulation Clinic."
^XTMP("XPDT",7317,"KRN",8989.51,521,20,0)="^8989.512^3^3^3081211^^^"
^XTMP("XPDT",7317,"KRN",8989.51,521,20,1,0)="This is the reference to the Consult Request Service with which Consult"
^XTMP("XPDT",7317,"KRN",8989.51,521,20,2,0)="data will be associated for the Anticoagulation clinic. It is used only if"
^XTMP("XPDT",7317,"KRN",8989.51,521,20,3,0)="the linkage with the Consult Package is enabled."
^XTMP("XPDT",7317,"KRN",8989.51,521,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,521,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,521,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,522,-1)="0^9"
^XTMP("XPDT",7317,"KRN",8989.51,522,0)="ORAM CPT FOR COMPLEX PHONE^Complex Phone Visit (CPT)^^^Complex Phone Visit (CPT)"
^XTMP("XPDT",7317,"KRN",8989.51,522,1)="P^81:AEMQ^Enter the current CPT code for a Complex Telephone Visit."
^XTMP("XPDT",7317,"KRN",8989.51,522,3)="I +$$STATCHK^ICPTAPIU(+Y,DT)=1"
^XTMP("XPDT",7317,"KRN",8989.51,522,20,0)="^^2^2^3081021^"
^XTMP("XPDT",7317,"KRN",8989.51,522,20,1,0)="This is the CPT code for a Complex Telephone Visit (i.e., HC PRO PHONE"
^XTMP("XPDT",7317,"KRN",8989.51,522,20,2,0)="CALL 21-30 MIN (CPT-4 98968), as of 10/2008)."
^XTMP("XPDT",7317,"KRN",8989.51,522,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,522,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,522,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,523,-1)="0^10"
^XTMP("XPDT",7317,"KRN",8989.51,523,0)="ORAM CPT FOR INITIAL VISIT^Initial Office Visit (CPT)^^^Initial Office Visit (CPT)"
^XTMP("XPDT",7317,"KRN",8989.51,523,1)="P^81:AEMQ^Enter the CPT code for the Initial Office Visit"
^XTMP("XPDT",7317,"KRN",8989.51,523,3)="I +$$STATCHK^ICPTAPIU(+Y,DT)=1"
^XTMP("XPDT",7317,"KRN",8989.51,523,20,0)="^^2^2^3081021^"
^XTMP("XPDT",7317,"KRN",8989.51,523,20,1,0)="This is the CPT code for the Initial Office Visit (i.e., ANTICOAG MGMT, "
^XTMP("XPDT",7317,"KRN",8989.51,523,20,2,0)="INIT (CPT-4 99363), as of 10/2008)."
^XTMP("XPDT",7317,"KRN",8989.51,523,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,523,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,523,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,524,-1)="0^11"
^XTMP("XPDT",7317,"KRN",8989.51,524,0)="ORAM CPT FOR LETTER TO PT^Letter To Patient (CPT)^^^Letter to Patient (CPT)"
^XTMP("XPDT",7317,"KRN",8989.51,524,1)="P^81:AEMQ^Enter the CPT code for Letter to patient."
^XTMP("XPDT",7317,"KRN",8989.51,524,3)="I +$$STATCHK^ICPTAPIU(+Y,DT)=1"
^XTMP("XPDT",7317,"KRN",8989.51,524,20,0)="^^2^2^3081021^"
^XTMP("XPDT",7317,"KRN",8989.51,524,20,1,0)="This is the CPT code for a Letter to the Patient (i.e., (CPT-4 98966), as"
^XTMP("XPDT",7317,"KRN",8989.51,524,20,2,0)="of 10/2008)."
^XTMP("XPDT",7317,"KRN",8989.51,524,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,524,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,524,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,525,-1)="0^12"
^XTMP("XPDT",7317,"KRN",8989.51,525,0)="ORAM CPT FOR ORIENTATION^Orientation Class (CPT)^^^Orientation Class (CPT)"
^XTMP("XPDT",7317,"KRN",8989.51,525,1)="P^81:AEMQ^This is the current CPT code for the Orientation Class Visit."
^XTMP("XPDT",7317,"KRN",8989.51,525,3)="I +$$STATCHK^ICPTAPIU(+Y,DT)=1"
^XTMP("XPDT",7317,"KRN",8989.51,525,20,0)="^^2^2^3081021^"
^XTMP("XPDT",7317,"KRN",8989.51,525,20,1,0)="This is the CPT code for the Orientation Class Visit (i.e., GROUP HEALTH "
^XTMP("XPDT",7317,"KRN",8989.51,525,20,2,0)="EDUCATION (CPT-4 99078), as of 10/2008)."
^XTMP("XPDT",7317,"KRN",8989.51,525,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,525,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,525,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,526,-1)="0^13"
^XTMP("XPDT",7317,"KRN",8989.51,526,0)="ORAM CPT FOR SIMPLE PHONE^Simple Phone Visit (CPT)^^^Simple Telephone Visit (CPT)"
^XTMP("XPDT",7317,"KRN",8989.51,526,1)="P^81:AEMQ^Current CPT code for a Simple Telephone Visit."
^XTMP("XPDT",7317,"KRN",8989.51,526,3)="I +$$STATCHK^ICPTAPIU(+Y,DT)=1"
^XTMP("XPDT",7317,"KRN",8989.51,526,20,0)="^8989.512^2^2^3081022^^^^"
^XTMP("XPDT",7317,"KRN",8989.51,526,20,1,0)="This is the CPT code for a Simple Telephone Visit (i.e., HC PRO PHONE CALL"
^XTMP("XPDT",7317,"KRN",8989.51,526,20,2,0)="5-10 MIN (CPT-4 98966), as of 10/2008)."
^XTMP("XPDT",7317,"KRN",8989.51,526,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,526,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,526,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,527,-1)="0^14"
^XTMP("XPDT",7317,"KRN",8989.51,527,0)="ORAM CPT FOR SUBSEQUENT VISIT^Subsequent Visit (CPT)^^^Subsequent Office Visit (CPT)"
^XTMP("XPDT",7317,"KRN",8989.51,527,1)="P^81:AEMQ^Enter the CPT code for a Subsequent Office Visit."
^XTMP("XPDT",7317,"KRN",8989.51,527,3)="I +$$STATCHK^ICPTAPIU(+Y,DT)=1"
^XTMP("XPDT",7317,"KRN",8989.51,527,20,0)="^^2^2^3081021^"
^XTMP("XPDT",7317,"KRN",8989.51,527,20,1,0)="This is the CPT code for Subsequent Anticoagulation Management (i.e.,"
^XTMP("XPDT",7317,"KRN",8989.51,527,20,2,0)="ANTICOAG MGMT, SUBSEQ (CPT-4 99364), as of 10/2008)."
^XTMP("XPDT",7317,"KRN",8989.51,527,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,527,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,527,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,528,-1)="0^16"
^XTMP("XPDT",7317,"KRN",8989.51,528,0)="ORAM DSS ID^DSS ID^^^DSS ID"
^XTMP("XPDT",7317,"KRN",8989.51,528,1)="P^40.7:AEMQ^Select the Stop Code for the Anticoagulation Clinic."
^XTMP("XPDT",7317,"KRN",8989.51,528,20,0)="^^1^1^3081022^"
^XTMP("XPDT",7317,"KRN",8989.51,528,20,1,0)="This is the stop code for the Anticoagulation Clinic."
^XTMP("XPDT",7317,"KRN",8989.51,528,30,0)="^8989.513I^1^1"
^XTMP("XPDT",7317,"KRN",8989.51,528,30,1,0)="1^4"
^XTMP("XPDT",7317,"KRN",8989.51,529,-1)="0^17"
^XTMP("XPDT",7317,"KRN",8989.51,529,0)="ORAM DSS UNIT^DSS Unit^^^DSS Unit"
^XTMP("XPDT",7317,"KRN",8989.51,529,1)="P^724:AEMQ^Select the DSS Unit for the Anticoagulation Clinic."
^XTMP("XPDT",7317,"KRN",8989.51,529,20,0)="^^2^2^3081022^"
^XTMP("XPDT",7317,"KRN",8989.51,529,20,1,0)="This is the reference to the DSS Unit to which the anticoagulation data"
^XTMP("XPDT",7317,"KRN",8989.51,529,20,2,0)="will be associated."
^XTMP("XPDT",7317,"KRN",8989.51,529,30,0)="^8989.513I^1^1"
^XTMP("XPDT",7317,"KRN",8989.51,529,30,1,0)="1^4"
^XTMP("XPDT",7317,"KRN",8989.51,530,-1)="0^41"
^XTMP("XPDT",7317,"KRN",8989.51,530,0)="ORAM HCT/HGB REFERENCE^Hematocrit (HCT) or Hemoglobin (Hgb)^^^Hematocrit (HCT) or Hemoglobin (Hgb)"
^XTMP("XPDT",7317,"KRN",8989.51,530,1)="P^60:AEMQ^Select the Laboratory Test for Hematocrit or Hemoglobin."
^XTMP("XPDT",7317,"KRN",8989.51,530,3)="I +$$VALIDLAB^ORAMX(+Y)"
^XTMP("XPDT",7317,"KRN",8989.51,530,20,0)="^^3^3^3091214^"
^XTMP("XPDT",7317,"KRN",8989.51,530,20,1,0)="This is the reference to the Lab Test for Hematocrit (HCT) or Hemoglobin "
^XTMP("XPDT",7317,"KRN",8989.51,530,20,2,0)="(Hgb). It will determine whether the Demographics Tab will display the "
^XTMP("XPDT",7317,"KRN",8989.51,530,20,3,0)="most recent Hematocrit or the last Hemoglobin."
^XTMP("XPDT",7317,"KRN",8989.51,530,30,0)="^8989.513I^1^1"
^XTMP("XPDT",7317,"KRN",8989.51,530,30,1,0)="1^4"
^XTMP("XPDT",7317,"KRN",8989.51,532,-1)="0^22"
^XTMP("XPDT",7317,"KRN",8989.51,532,0)="ORAM MEDICAL CENTER NAME^Medical Center Name^^^Medical Center Name"
^XTMP("XPDT",7317,"KRN",8989.51,532,1)="F^3:70^Answer must be 3-70 characters in length."
^XTMP("XPDT",7317,"KRN",8989.51,532,20,0)="^8989.512^1^1^3090306^^"
^XTMP("XPDT",7317,"KRN",8989.51,532,20,1,0)="Name of medical facility for letter head."
^XTMP("XPDT",7317,"KRN",8989.51,532,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,532,30,1,0)="1^4"
^XTMP("XPDT",7317,"KRN",8989.51,532,30,2,0)="2^4.2"
^XTMP("XPDT",7317,"KRN",8989.51,533,-1)="0^23"
^XTMP("XPDT",7317,"KRN",8989.51,533,0)="ORAM NON-COUNT LOCATION^Anticoagulation NON-COUNT Clinic^^^Anticoagulation NON-COUNT Clinic"
^XTMP("XPDT",7317,"KRN",8989.51,533,1)="P^44:AEMQ^NON-COUNT Clinic for Anticoagulation."
^XTMP("XPDT",7317,"KRN",8989.51,533,3)="I $P(^SC(+Y,0),U,3)=""C"",((+$G(^(""I""))'>0)!(+$P($G(^(""I"")),U,2)>0))"
^XTMP("XPDT",7317,"KRN",8989.51,533,20,0)="^8989.512^19^19^3081022^^"
^XTMP("XPDT",7317,"KRN",8989.51,533,20,1,0)="Clinic Locations "
^XTMP("XPDT",7317,"KRN",8989.51,533,20,2,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,533,20,3,0)="Without PCE Functions: Clinic location you choose is the clinic the note"
^XTMP("XPDT",7317,"KRN",8989.51,533,20,4,0)="will be associated with.  This requires a number from the Hospital"
^XTMP("XPDT",7317,"KRN",8989.51,533,20,5,0)="Location file.  "
^XTMP("XPDT",7317,"KRN",8989.51,533,20,6,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,533,20,7,0)="If you do NOT use the PCE function, then your site is responsible for"
^XTMP("XPDT",7317,"KRN",8989.51,533,20,8,0)="encounters, etc.  The program does NOT care if you use a count or a"
^XTMP("XPDT",7317,"KRN",8989.51,533,20,9,0)="non-count clinic.  "
^XTMP("XPDT",7317,"KRN",8989.51,533,20,10,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,533,20,11,0)="With PCE Functions: If you DO use PCE functions, then you will be asked"
^XTMP("XPDT",7317,"KRN",8989.51,533,20,12,0)="for three clinics, one for face contact (the one on the yellow sheet), one"
^XTMP("XPDT",7317,"KRN",8989.51,533,20,13,0)="for phone contact, and one that is non count (these are on the PCE form)."
^XTMP("XPDT",7317,"KRN",8989.51,533,20,14,0)="The ""VISIT""  location (the ANTICOAG VISIT Clinic Location) should be a"
^XTMP("XPDT",7317,"KRN",8989.51,533,20,15,0)="Clinic for FACE to FACE visits.  The program does not care if you use the"
^XTMP("XPDT",7317,"KRN",8989.51,533,20,16,0)="same clinic for both the phone and face to face, but for PCE credit they"
^XTMP("XPDT",7317,"KRN",8989.51,533,20,17,0)="must be COUNT CLINICS."
^XTMP("XPDT",7317,"KRN",8989.51,533,20,18,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,533,20,19,0)="The non-count clinic is used for notes only, when no PCE data is recorded."
^XTMP("XPDT",7317,"KRN",8989.51,533,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,533,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,533,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,534,-1)="0^24"
^XTMP("XPDT",7317,"KRN",8989.51,534,0)="ORAM PCE LINK ENABLED^PCE Link Enabled^^^PCE Link Enabled"
^XTMP("XPDT",7317,"KRN",8989.51,534,1)="Y^^Indicate whether the interface to PCE should be enabled."
^XTMP("XPDT",7317,"KRN",8989.51,534,20,0)="^8989.512^3^3^3081030^^"
^XTMP("XPDT",7317,"KRN",8989.51,534,20,1,0)="Indicates if interface with PCE will be used. If NO: prompt will not be"
^XTMP("XPDT",7317,"KRN",8989.51,534,20,2,0)="seen to enter PCE information, and the information will not be passed to"
^XTMP("XPDT",7317,"KRN",8989.51,534,20,3,0)="the Event Capture system."
^XTMP("XPDT",7317,"KRN",8989.51,534,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,534,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,534,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,535,-1)="0^25"
^XTMP("XPDT",7317,"KRN",8989.51,535,0)="ORAM PHONE CLINIC^Anticoagulation PHONE Clinic Location^^^Anticoagulation PHONE Clinic Location"
^XTMP("XPDT",7317,"KRN",8989.51,535,1)="P^44:AEMQ^Telephone Clinic for Anticoagulation."
^XTMP("XPDT",7317,"KRN",8989.51,535,3)="I $P(^SC(+Y,0),U,3)=""C"",((+$G(^(""I""))'>0)!(+$P($G(^(""I"")),U,2)>0))"
^XTMP("XPDT",7317,"KRN",8989.51,535,20,0)="^8989.512^19^19^3081022^^"
^XTMP("XPDT",7317,"KRN",8989.51,535,20,1,0)="Clinic Locations "
^XTMP("XPDT",7317,"KRN",8989.51,535,20,2,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,535,20,3,0)="Without PCE Functions: Clinic location you choose is the clinic the note"
^XTMP("XPDT",7317,"KRN",8989.51,535,20,4,0)="will be associated with.  This requires a number from the Hospital"
^XTMP("XPDT",7317,"KRN",8989.51,535,20,5,0)="Location file.  "
^XTMP("XPDT",7317,"KRN",8989.51,535,20,6,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,535,20,7,0)="If you do NOT use the PCE function, then your site is responsible for"
^XTMP("XPDT",7317,"KRN",8989.51,535,20,8,0)="encounters, etc.  The program does NOT care if you use a count or a"
^XTMP("XPDT",7317,"KRN",8989.51,535,20,9,0)="non-count clinic.  "
^XTMP("XPDT",7317,"KRN",8989.51,535,20,10,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,535,20,11,0)="With PCE Functions: If you DO use PCE functions, then you will be asked"
^XTMP("XPDT",7317,"KRN",8989.51,535,20,12,0)="for three clinics, one for face contact (the one on the yellow sheet), one"
^XTMP("XPDT",7317,"KRN",8989.51,535,20,13,0)="for phone contact, and one that is non count (these are on the PCE form)."
^XTMP("XPDT",7317,"KRN",8989.51,535,20,14,0)="The ""VISIT""  location (the ANTICOAG VISIT Clinic Location) should be a"
^XTMP("XPDT",7317,"KRN",8989.51,535,20,15,0)="Clinic for FACE to FACE visits.  The program does not care if you use the"
^XTMP("XPDT",7317,"KRN",8989.51,535,20,16,0)="same clinic for both the phone and face to face, but for PCE credit they"
^XTMP("XPDT",7317,"KRN",8989.51,535,20,17,0)="must be COUNT CLINICS."
^XTMP("XPDT",7317,"KRN",8989.51,535,20,18,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,535,20,19,0)="The non-count clinic is used for notes only, when no PCE data is recorded."
^XTMP("XPDT",7317,"KRN",8989.51,535,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,535,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,535,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,536,-1)="0^26"
^XTMP("XPDT",7317,"KRN",8989.51,536,0)="ORAM POINT OF CONTACT NAME^Point of Contact Name^^^Point of Contact Name"
^XTMP("XPDT",7317,"KRN",8989.51,536,1)="F^1:45^Answer must be 1-45 characters in length."
^XTMP("XPDT",7317,"KRN",8989.51,536,20,0)="^8989.512^2^2^3081022^^"
^XTMP("XPDT",7317,"KRN",8989.51,536,20,1,0)="Name of Contact Person (or Clinic) for the ""CALL IF QUESTIONS"" block on"
^XTMP("XPDT",7317,"KRN",8989.51,536,20,2,0)="patient letters."
^XTMP("XPDT",7317,"KRN",8989.51,536,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,536,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,536,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,537,-1)="0^27"
^XTMP("XPDT",7317,"KRN",8989.51,537,0)="ORAM RAV FILE PATH^Complete path to network folder^^^Complete path to network folder"
^XTMP("XPDT",7317,"KRN",8989.51,537,1)="F^1:99^Answer must be 1-99 characters in length."
^XTMP("XPDT",7317,"KRN",8989.51,537,2)="K:X'?1.99ANP X"
^XTMP("XPDT",7317,"KRN",8989.51,537,20,0)="^8989.512^7^7^3090407^^^"
^XTMP("XPDT",7317,"KRN",8989.51,537,20,1,0)="To use the letter programs the Anticoagulator needs to know where to find"
^XTMP("XPDT",7317,"KRN",8989.51,537,20,2,0)="them.  This path is where you put the 2 .rav files (cvisit.rav and"
^XTMP("XPDT",7317,"KRN",8989.51,537,20,3,0)="mappt.rav).  Usually placed in the same network file as the the .EXE file"
^XTMP("XPDT",7317,"KRN",8989.51,537,20,4,0)="for the program for ease of updating, etc."
^XTMP("XPDT",7317,"KRN",8989.51,537,20,5,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,537,20,6,0)="This field contains the path up to the slash before the exe.  Portland"
^XTMP("XPDT",7317,"KRN",8989.51,537,20,7,0)="example: \\vhaporfpc11\ClinApps\DelphiExe\antiC\"
^XTMP("XPDT",7317,"KRN",8989.51,537,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,537,30,1,0)="1^4"
^XTMP("XPDT",7317,"KRN",8989.51,537,30,2,0)="2^4.2"
^XTMP("XPDT",7317,"KRN",8989.51,538,-1)="0^28"
^XTMP("XPDT",7317,"KRN",8989.51,538,0)="ORAM SIGNATURE BLOCK NAME^Signature Block Name or Clinic^^^Signature Block Name or Clinic"
^XTMP("XPDT",7317,"KRN",8989.51,538,1)="F^1:45^Answer must be 1-45 characters in length."
^XTMP("XPDT",7317,"KRN",8989.51,538,20,0)="^^1^1^3081022^"
^XTMP("XPDT",7317,"KRN",8989.51,538,20,1,0)="Signing name to be used in the letter signature blocks."
^XTMP("XPDT",7317,"KRN",8989.51,538,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,538,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,538,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,539,-1)="0^29"
^XTMP("XPDT",7317,"KRN",8989.51,539,0)="ORAM SIGNATURE BLOCK TITLE^Signature Block Title^^^Signature Block Title"
^XTMP("XPDT",7317,"KRN",8989.51,539,1)="F^1:45^Answer must be 1-45 characters in length."
^XTMP("XPDT",7317,"KRN",8989.51,539,20,0)="^8989.512^1^1^3081022^^^"
^XTMP("XPDT",7317,"KRN",8989.51,539,20,1,0)="Title used in letter signature blocks."
^XTMP("XPDT",7317,"KRN",8989.51,539,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,539,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,539,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,540,-1)="0^35"
^XTMP("XPDT",7317,"KRN",8989.51,540,0)="ORAM CLINIC NAME^Clinic Name^^^Clinic Name"
^XTMP("XPDT",7317,"KRN",8989.51,540,1)="F^3:30^Name of the Clinic as it will appear in the Choose Location ComboBox."
^XTMP("XPDT",7317,"KRN",8989.51,540,20,0)="^^3^3^3090305^"
^XTMP("XPDT",7317,"KRN",8989.51,540,20,1,0)="Specifies the name of the Clinic with which the user may associate the "
^XTMP("XPDT",7317,"KRN",8989.51,540,20,2,0)="patient whose flowsheet is being viewed/entered (3 - 30 characters in "
^XTMP("XPDT",7317,"KRN",8989.51,540,20,3,0)="length)."
^XTMP("XPDT",7317,"KRN",8989.51,540,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,540,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,540,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,542,-1)="0^34"
^XTMP("XPDT",7317,"KRN",8989.51,542,0)="ORAM VISIT LOCATION^Anticoagulation VISIT Clinic Location^^^Anticoagulation VISIT Clinic Location"
^XTMP("XPDT",7317,"KRN",8989.51,542,1)="P^44:AEMQ^Face-to-face Clinic for Anticoagulation."
^XTMP("XPDT",7317,"KRN",8989.51,542,3)="I $P(^SC(+Y,0),U,3)=""C"",((+$G(^(""I""))'>0)!(+$P($G(^(""I"")),U,2)>0))"
^XTMP("XPDT",7317,"KRN",8989.51,542,20,0)="^^19^19^3081022^"
^XTMP("XPDT",7317,"KRN",8989.51,542,20,1,0)="Clinic Locations "
^XTMP("XPDT",7317,"KRN",8989.51,542,20,2,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,542,20,3,0)="Without PCE Functions: Clinic location you choose is the clinic the note"
^XTMP("XPDT",7317,"KRN",8989.51,542,20,4,0)="will be associated with.  This requires a number from the Hospital"
^XTMP("XPDT",7317,"KRN",8989.51,542,20,5,0)="Location file.  "
^XTMP("XPDT",7317,"KRN",8989.51,542,20,6,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,542,20,7,0)="If you do NOT use the PCE function, then your site is responsible for"
^XTMP("XPDT",7317,"KRN",8989.51,542,20,8,0)="encounters, etc.  The program does NOT care if you use a count or a"
^XTMP("XPDT",7317,"KRN",8989.51,542,20,9,0)="non-count clinic.  "
^XTMP("XPDT",7317,"KRN",8989.51,542,20,10,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,542,20,11,0)="With PCE Functions: If you DO use PCE functions, then you will be asked"
^XTMP("XPDT",7317,"KRN",8989.51,542,20,12,0)="for three clinics, one for face contact (the one on the yellow sheet), one"
^XTMP("XPDT",7317,"KRN",8989.51,542,20,13,0)="for phone contact, and one that is non count (these are on the PCE form)."
^XTMP("XPDT",7317,"KRN",8989.51,542,20,14,0)="The ""VISIT""  location (the ANTICOAG VISIT Clinic Location) should be a"
^XTMP("XPDT",7317,"KRN",8989.51,542,20,15,0)="Clinic for FACE to FACE visits.  The program does not care if you use the"
^XTMP("XPDT",7317,"KRN",8989.51,542,20,16,0)="same clinic for both the phone and face to face, but for PCE credit they"
^XTMP("XPDT",7317,"KRN",8989.51,542,20,17,0)="must be COUNT CLINICS."
^XTMP("XPDT",7317,"KRN",8989.51,542,20,18,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,542,20,19,0)="The non-count clinic is used for notes only, when no PCE data is recorded."
^XTMP("XPDT",7317,"KRN",8989.51,542,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,542,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,542,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,543,-1)="0^36"
^XTMP("XPDT",7317,"KRN",8989.51,543,0)="ORAM DEFAULT PILL STRENGTH^Default Pill Strength^0^^Default Pill Strength"
^XTMP("XPDT",7317,"KRN",8989.51,543,1)="N^2:10:2^This is the default pill strength for your clinic (2-10 mg)."
^XTMP("XPDT",7317,"KRN",8989.51,543,4,0)="^8989.514^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,543,4,1,0)="Anticoagulation"
^XTMP("XPDT",7317,"KRN",8989.51,543,4,2,0)="Strength"
^XTMP("XPDT",7317,"KRN",8989.51,543,4,"B","Anticoagulation",1)=""
^XTMP("XPDT",7317,"KRN",8989.51,543,4,"B","Strength",2)=""
^XTMP("XPDT",7317,"KRN",8989.51,543,20,0)="^^3^3^3090422^"
^XTMP("XPDT",7317,"KRN",8989.51,543,20,1,0)="This is the default Pill Strength in milligrams for the Clinic in question"
^XTMP("XPDT",7317,"KRN",8989.51,543,20,2,0)="(e.g., 2.5, 5, or 10). If you do not specify a pill strength, the program "
^XTMP("XPDT",7317,"KRN",8989.51,543,20,3,0)="will default to 5 mg."
^XTMP("XPDT",7317,"KRN",8989.51,543,30,0)="^8989.513I^1^1"
^XTMP("XPDT",7317,"KRN",8989.51,543,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,546,-1)="0^37"
^XTMP("XPDT",7317,"KRN",8989.51,546,0)="ORAM INCL TIME W/NEXT INR DATE^Include Time with Next INR Date^0^^Include Time with Next INR"
^XTMP("XPDT",7317,"KRN",8989.51,546,1)="S^0:None;1:Time of Day;2:Morning;3:Afternoon;4:Lab Procedures as Instructed^Will Time of Day be included with INR Draw Date?"
^XTMP("XPDT",7317,"KRN",8989.51,546,20,0)="^^11^11^3090909^"
^XTMP("XPDT",7317,"KRN",8989.51,546,20,1,0)="Please indicate whether time of day will be asked for, and/or included in"
^XTMP("XPDT",7317,"KRN",8989.51,546,20,2,0)="the instructions in Patient Letters, when specifying the Return for INR"
^XTMP("XPDT",7317,"KRN",8989.51,546,20,3,0)="Date."
^XTMP("XPDT",7317,"KRN",8989.51,546,20,4,0)=" "
^XTMP("XPDT",7317,"KRN",8989.51,546,20,5,0)="The following values may be selected:"
^XTMP("XPDT",7317,"KRN",8989.51,546,20,6,0)="        0 - None (i.e., no time of day will be asked or included)"
^XTMP("XPDT",7317,"KRN",8989.51,546,20,7,0)="        1 - Time of Day (a specific time will be prompted for & included)"
^XTMP("XPDT",7317,"KRN",8989.51,546,20,8,0)="        2 - Morning (pt. will be instructed to arrive in the morning)"
^XTMP("XPDT",7317,"KRN",8989.51,546,20,9,0)="        3 - Afternoon (pt. will be instructed to arrive in the afternoon)"
^XTMP("XPDT",7317,"KRN",8989.51,546,20,10,0)="        4 - Lab Procedures as Instructed (pt. will be instructed to"
^XTMP("XPDT",7317,"KRN",8989.51,546,20,11,0)="              follow local lab procedures)"
^XTMP("XPDT",7317,"KRN",8989.51,546,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,546,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,546,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,547,-1)="0^38"
^XTMP("XPDT",7317,"KRN",8989.51,547,0)="ORAM TOLL FREE PHONE^Toll Free Phone Number^0^^Toll Free Phone Number"
^XTMP("XPDT",7317,"KRN",8989.51,547,1)="F^4:25^Enter the toll free phone number for the clinic (e.g., 1-800-###-####)"
^XTMP("XPDT",7317,"KRN",8989.51,547,2)="K:X'?4.25NAP X"
^XTMP("XPDT",7317,"KRN",8989.51,547,20,0)="^^2^2^3090514^"
^XTMP("XPDT",7317,"KRN",8989.51,547,20,1,0)="Toll free telephone number, for patient to contact the anticoagulation"
^XTMP("XPDT",7317,"KRN",8989.51,547,20,2,0)="clinic. For patient letters."
^XTMP("XPDT",7317,"KRN",8989.51,547,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,547,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,547,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,578,-1)="0^39"
^XTMP("XPDT",7317,"KRN",8989.51,578,0)="ORAM INR QUICK ORDER^INR Quick Order^^^INR Quick Order"
^XTMP("XPDT",7317,"KRN",8989.51,578,1)="P^101.41:AEMQ^Select the Quick Order for INR."
^XTMP("XPDT",7317,"KRN",8989.51,578,3)="I $P($G(^ORD(101.41,+Y,0)),U,3)']"""""
^XTMP("XPDT",7317,"KRN",8989.51,578,20,0)="^^17^17^3090805^"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,1,0)="This is the reference to the Quick Order Dialog for the INR (International"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,2,0)="Normalized Ratio) for Prothrombin Times."
^XTMP("XPDT",7317,"KRN",8989.51,578,20,3,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,578,20,4,0)="INR: International normalized ratio, a system established by the World"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,5,0)="Health Organization (WHO) and the International Committee on Thrombosis"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,6,0)="and Hemostasis for reporting the results of blood coagulation (clotting)"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,7,0)="tests. All results are standardized using the international sensitivity"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,8,0)="index for the particular thromboplastin reagent and instrument combination"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,9,0)="utilized to perform the test."
^XTMP("XPDT",7317,"KRN",8989.51,578,20,10,0)="                                 "
^XTMP("XPDT",7317,"KRN",8989.51,578,20,11,0)="For example, a person taking the anticoagulant (""blood thinner"") warfarin"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,12,0)="(brand name: Coumadin) might optimally maintain a prothrombin time (a ""pro"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,13,0)="time"" or PT) of 2 to 3 INR. No matter what laboratory checks the"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,14,0)="prothrombin time, the result should be the same even if different"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,15,0)="thromboplastins and instruments are used. This international"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,16,0)="standardization permits the patient on warfarin to travel and still obtain"
^XTMP("XPDT",7317,"KRN",8989.51,578,20,17,0)="comparable test results."
^XTMP("XPDT",7317,"KRN",8989.51,578,30,0)="^8989.513I^1^1"
^XTMP("XPDT",7317,"KRN",8989.51,578,30,1,0)="1^4"
^XTMP("XPDT",7317,"KRN",8989.51,579,-1)="0^40"
^XTMP("XPDT",7317,"KRN",8989.51,579,0)="ORAM CBC QUICK ORDER^CBC Quick Order^^^CBC Quick Order"
^XTMP("XPDT",7317,"KRN",8989.51,579,1)="P^101.41:AEQM^Choose the Quick Order for CBC."
^XTMP("XPDT",7317,"KRN",8989.51,579,3)="I $P($G(^ORD(101.41,+Y,0)),U,3)']"""""
^XTMP("XPDT",7317,"KRN",8989.51,579,20,0)="^^2^2^3090805^"
^XTMP("XPDT",7317,"KRN",8989.51,579,20,1,0)="This is the reference to the Quick Order Dialog for Complete Blood Count"
^XTMP("XPDT",7317,"KRN",8989.51,579,20,2,0)="(CBC)."
^XTMP("XPDT",7317,"KRN",8989.51,579,30,0)="^8989.513I^1^1"
^XTMP("XPDT",7317,"KRN",8989.51,579,30,1,0)="1^4"
^XTMP("XPDT",7317,"KRN",8989.51,584,-1)="0^42"
^XTMP("XPDT",7317,"KRN",8989.51,584,0)="ORAM INDICATIONS FOR CARE^Indications for Care^1^Indication Text^ICD-9-CM Diagnosis"
^XTMP("XPDT",7317,"KRN",8989.51,584,1)="P^80^Enter the current ICD-9-CM code for the Indicator."
^XTMP("XPDT",7317,"KRN",8989.51,584,3)="I +$$STATCHK^ICDAPIU($P($G(^ICD9(+Y,0)),U),DT)=1"
^XTMP("XPDT",7317,"KRN",8989.51,584,6)="F^2:30^Please enter the text that will identify the Indicator"
^XTMP("XPDT",7317,"KRN",8989.51,584,20,0)="^8989.512^1^1^3091112^^^^"
^XTMP("XPDT",7317,"KRN",8989.51,584,20,1,0)="These are the Indications for care and their associated ICD-9-CM codes."
^XTMP("XPDT",7317,"KRN",8989.51,584,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,584,30,1,0)="1^4.2"
^XTMP("XPDT",7317,"KRN",8989.51,584,30,2,0)="2^9.4"
^XTMP("XPDT",7317,"KRN",8989.51,585,-1)="0^43"
^XTMP("XPDT",7317,"KRN",8989.51,585,0)="ORAM AUTO PRIMARY INDICATION^Automatic Indication for Care^0^^Automatic Indication for Care (ICD-9)"
^XTMP("XPDT",7317,"KRN",8989.51,585,1)="P^80:AEMQ^Enter the current ICD-9-CM code for the Indication."
^XTMP("XPDT",7317,"KRN",8989.51,585,3)="I +$$STATCHK^ICDAPIU($P($G(^ICD9(+Y,0)),U),DT)=1"
^XTMP("XPDT",7317,"KRN",8989.51,585,6)="^^"
^XTMP("XPDT",7317,"KRN",8989.51,585,20,0)="^8989.512^7^7^3091130^^"
^XTMP("XPDT",7317,"KRN",8989.51,585,20,1,0)="This is an Indication for care which will automatically be filed as the "
^XTMP("XPDT",7317,"KRN",8989.51,585,20,2,0)="Primary Indication for each visit to the applicable Clinic."
^XTMP("XPDT",7317,"KRN",8989.51,585,20,3,0)=" "
^XTMP("XPDT",7317,"KRN",8989.51,585,20,4,0)="(e.g., if all visits to a non-licensed provider should be filed with "
^XTMP("XPDT",7317,"KRN",8989.51,585,20,5,0)="V58.83 ENCTR THERAP DRUG MONITOR as the primary indication, you can"
^XTMP("XPDT",7317,"KRN",8989.51,585,20,6,0)="specify that with this parameter, and the user will still be able to "
^XTMP("XPDT",7317,"KRN",8989.51,585,20,7,0)="select another indication from the list as the secondary indication)."
^XTMP("XPDT",7317,"KRN",8989.51,585,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,585,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,585,30,2,0)="2^9.4"
^XTMP("XPDT",7317,"KRN",8989.51,627,-1)="0^45"
^XTMP("XPDT",7317,"KRN",8989.51,627,0)="ORAM APPT MATCH LOOK-BACK^Look-back Days for Appointment Matching^0^^Look-back Days for Appointment Matching"
^XTMP("XPDT",7317,"KRN",8989.51,627,1)="N^0:7^This is the inclusive lower limit (0-7 days) for appointment matching."
^XTMP("XPDT",7317,"KRN",8989.51,627,20,0)="^8989.512^9^9^3100114^^"
^XTMP("XPDT",7317,"KRN",8989.51,627,20,1,0)="This is the whole number of days to look-back when attempting to match the"
^XTMP("XPDT",7317,"KRN",8989.51,627,20,2,0)="Anticoagulation Encounter to a scheduled appointment in the VistA "
^XTMP("XPDT",7317,"KRN",8989.51,627,20,3,0)="Scheduling Package."
^XTMP("XPDT",7317,"KRN",8989.51,627,20,4,0)=" "
^XTMP("XPDT",7317,"KRN",8989.51,627,20,5,0)="Please enter a number between 0 and 7, no decimal digits."
^XTMP("XPDT",7317,"KRN",8989.51,627,20,6,0)=" "
^XTMP("XPDT",7317,"KRN",8989.51,627,20,7,0)="The default will be one (1) day (i.e., yesterday). A value of zero (0)"
^XTMP("XPDT",7317,"KRN",8989.51,627,20,8,0)="will restrict the search to begin with today's appointments (i.e.,"
^XTMP("XPDT",7317,"KRN",8989.51,627,20,9,0)="T@00:00)."
^XTMP("XPDT",7317,"KRN",8989.51,627,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,627,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,627,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.51,628,-1)="0^44"
^XTMP("XPDT",7317,"KRN",8989.51,628,0)="ORAM APPT MATCH LOOK-AHEAD^Look-ahead Days for Appointment Matching^0^^Look-ahead Days for Appointment Matching"
^XTMP("XPDT",7317,"KRN",8989.51,628,1)="N^0:3^This is the inclusive upper limit (0-3 days) for appointment matching."
^XTMP("XPDT",7317,"KRN",8989.51,628,20,0)="^^8^8^3100114^"
^XTMP("XPDT",7317,"KRN",8989.51,628,20,1,0)="This is the whole number of days to look-ahead (into the future) when"
^XTMP("XPDT",7317,"KRN",8989.51,628,20,2,0)="attempting to match the Anticoagulation Encounter to a scheduled"
^XTMP("XPDT",7317,"KRN",8989.51,628,20,3,0)="appointment in the VistA Scheduling Package."
^XTMP("XPDT",7317,"KRN",8989.51,628,20,4,0)=" "
^XTMP("XPDT",7317,"KRN",8989.51,628,20,5,0)="Please enter a number between 0 and 3, no decimal digits."
^XTMP("XPDT",7317,"KRN",8989.51,628,20,6,0)=" "
^XTMP("XPDT",7317,"KRN",8989.51,628,20,7,0)="The default will be one (1) day (i.e., tomorrow). A value of zero (0) will"
^XTMP("XPDT",7317,"KRN",8989.51,628,20,8,0)="restrict the search to end with today's appointments (i.e., T@23:59)."
^XTMP("XPDT",7317,"KRN",8989.51,628,30,0)="^8989.513I^2^2"
^XTMP("XPDT",7317,"KRN",8989.51,628,30,1,0)="1^44"
^XTMP("XPDT",7317,"KRN",8989.51,628,30,2,0)="2^4"
^XTMP("XPDT",7317,"KRN",8989.52,115,-1)="0^2"
^XTMP("XPDT",7317,"KRN",8989.52,115,0)="ORAM SITE PARAMETERS^Anticoagulation Site Params^4"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,0)="^8989.521IA^16^16"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,1,0)="10^ORAM MEDICAL CENTER NAME"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,2,0)="20^ORAM RAV FILE PATH"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,3,0)="30^ORAM INR QUICK ORDER"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,4,0)="40^ORAM CBC QUICK ORDER"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,5,0)="50^ORAM HCT/HGB REFERENCE"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,6,0)="60^ORAM INITIAL NOTE"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,7,0)="70^ORAM INTERIM NOTE"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,8,0)="80^ORAM DISCHARGE NOTE"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,9,0)="90^ORAM CPT FOR SIMPLE PHONE"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,10,0)="100^ORAM CPT FOR COMPLEX PHONE"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,11,0)="110^ORAM CPT FOR LETTER TO PT"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,12,0)="120^ORAM CPT FOR ORIENTATION"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,13,0)="130^ORAM CPT FOR INITIAL VISIT"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,14,0)="140^ORAM CPT FOR SUBSEQUENT VISIT"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,15,0)="150^ORAM DSS UNIT"
^XTMP("XPDT",7317,"KRN",8989.52,115,10,16,0)="160^ORAM DSS ID"
^XTMP("XPDT",7317,"KRN",8989.52,116,-1)="0^1"
^XTMP("XPDT",7317,"KRN",8989.52,116,0)="ORAM CLINIC PARAMETERS^Anticoagulation Clinic Params^44"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,0)="^8989.521IA^29^29"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,1,0)="10^ORAM TEAM LIST (ALL)"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,2,0)="20^ORAM TEAM LIST (COMPLEX)"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,3,0)="30^ORAM ADDRESS LINE 1"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,4,0)="40^ORAM ADDRESS LINE 2"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,5,0)="50^ORAM ADDRESS LINE 3"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,6,0)="60^ORAM CLINIC PHONE NUMBER"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,7,0)="70^ORAM CLINIC FAX NUMBER"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,8,0)="80^ORAM POINT OF CONTACT NAME"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,9,0)="90^ORAM SIGNATURE BLOCK NAME"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,10,0)="100^ORAM SIGNATURE BLOCK TITLE"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,11,0)="110^ORAM CONSULT LINK ENABLED"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,12,0)="120^ORAM CONSULT REQUEST SERVICE"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,13,0)="130^ORAM PCE LINK ENABLED"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,14,0)="140^ORAM VISIT LOCATION"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,15,0)="5^ORAM CLINIC NAME"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,16,0)="150^ORAM PHONE CLINIC"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,17,0)="160^ORAM NON-COUNT LOCATION"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,18,0)="170^ORAM DEFAULT PILL STRENGTH"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,19,0)="75^ORAM TOLL FREE PHONE"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,20,0)="175^ORAM INCL TIME W/NEXT INR DATE"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,21,0)="131^ORAM CPT FOR SIMPLE PHONE"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,22,0)="132^ORAM CPT FOR COMPLEX PHONE"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,23,0)="133^ORAM CPT FOR LETTER TO PT"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,24,0)="134^ORAM CPT FOR ORIENTATION"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,25,0)="135^ORAM CPT FOR INITIAL VISIT"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,26,0)="136^ORAM CPT FOR SUBSEQUENT VISIT"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,27,0)="130.5^ORAM AUTO PRIMARY INDICATION"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,28,0)="180^ORAM APPT MATCH LOOK-BACK"
^XTMP("XPDT",7317,"KRN",8989.52,116,10,29,0)="185^ORAM APPT MATCH LOOK-AHEAD"
^XTMP("XPDT",7317,"KRN",8994,3164,-1)="0^11"
^XTMP("XPDT",7317,"KRN",8994,3164,0)="ORAM1 COMPTEST^COMPTEST^ORAM1^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3164,1,0)="^^1^1^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3164,1,1,0)="Files complications for the current flowsheet entry."
^XTMP("XPDT",7317,"KRN",8994,3164,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3164,2,1,0)="COMMARR^2^^^1"
^XTMP("XPDT",7317,"KRN",8994,3164,2,"B","COMMARR",1)=""
^XTMP("XPDT",7317,"KRN",8994,3164,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3165,-1)="0^20"
^XTMP("XPDT",7317,"KRN",8994,3165,0)="ORAM1 PTENTER^PTENTER^ORAM1^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3165,1,0)="^^1^1^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3165,1,1,0)="Adds a new patient to the Anticoagulation Flowsheet file (#103)."
^XTMP("XPDT",7317,"KRN",8994,3165,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3165,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3165,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3165,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3166,-1)="0^13"
^XTMP("XPDT",7317,"KRN",8994,3166,0)="ORAM1 FLOWTT^FLOWTT^ORAM1^2^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3166,1,0)="^^1^1^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3166,1,1,0)="Retrieves flowsheet data for the current patient."
^XTMP("XPDT",7317,"KRN",8994,3166,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3166,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3166,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3166,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3167,-1)="0^18"
^XTMP("XPDT",7317,"KRN",8994,3167,0)="ORAM1 PCGOAL^PCGOAL^ORAM1^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3167,1,0)="^^3^3^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3167,1,1,0)="Calculates percent in goal from filed INR entries for Anticoagulation"
^XTMP("XPDT",7317,"KRN",8994,3167,1,2,0)="Management patients - can do either Stable or all patients (pass 1 as "
^XTMP("XPDT",7317,"KRN",8994,3167,1,3,0)="second parameter for stable)."
^XTMP("XPDT",7317,"KRN",8994,3167,2,0)="^8994.02A^2^2"
^XTMP("XPDT",7317,"KRN",8994,3167,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3167,2,2,0)="CMPLX^1^^^2"
^XTMP("XPDT",7317,"KRN",8994,3167,2,2,1,0)="^8994.021^2^2^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3167,2,2,1,1,0)="OPTIONAL,  IF MISSING, CLACULATES ON ALL VISITS; IF 1 ONLY CALCULATES ON "
^XTMP("XPDT",7317,"KRN",8994,3167,2,2,1,2,0)="NON-COMPLX VISITS"
^XTMP("XPDT",7317,"KRN",8994,3167,2,"B","CMPLX",2)=""
^XTMP("XPDT",7317,"KRN",8994,3167,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3167,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3167,2,"PARAMSEQ",2,2)=""
^XTMP("XPDT",7317,"KRN",8994,3168,-1)="0^9"
^XTMP("XPDT",7317,"KRN",8994,3168,0)="ORAM1 ACDATA^ACDATA^ORAM1^2^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3168,1,0)="^8994.01^2^2^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3168,1,1,0)="Retrieves record header information (e.g., indication for treatment,"
^XTMP("XPDT",7317,"KRN",8994,3168,1,2,0)="permissions, risks, goals, etc.) for the current patient."
^XTMP("XPDT",7317,"KRN",8994,3168,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3168,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3168,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3168,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3169,-1)="0^10"
^XTMP("XPDT",7317,"KRN",8994,3169,0)="ORAM1 ADDTOP^ADDTOP^ORAM1^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3169,1,0)="^8994.01^1^1^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3169,1,1,0)="Files record header information for the current patient and care episode."
^XTMP("XPDT",7317,"KRN",8994,3169,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3169,2,1,0)="TOPARR^2^^^1"
^XTMP("XPDT",7317,"KRN",8994,3169,2,"B","TOPARR",1)=""
^XTMP("XPDT",7317,"KRN",8994,3169,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3170,-1)="0^15"
^XTMP("XPDT",7317,"KRN",8994,3170,0)="ORAM1 LOCK^LOCK^ORAM1^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3170,1,0)="^^2^2^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3170,1,1,0)="Sets lock in Anticoagulation Flowsheet file (#103) so that only one person"
^XTMP("XPDT",7317,"KRN",8994,3170,1,2,0)="can edit a given patient's record at a time."
^XTMP("XPDT",7317,"KRN",8994,3170,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3170,2,1,0)="DATA^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3170,2,"B","DATA",1)=""
^XTMP("XPDT",7317,"KRN",8994,3170,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3170,3,0)="^^1^1^3050415^"
^XTMP("XPDT",7317,"KRN",8994,3170,3,1,0)="DFN^DUZ"
^XTMP("XPDT",7317,"KRN",8994,3171,-1)="0^16"
^XTMP("XPDT",7317,"KRN",8994,3171,0)="ORAM1 LOG^LOGIT^ORAM1^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3171,1,0)="^^1^1^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3171,1,1,0)="Updates Anticoagulation Flowsheet file (#103) and adds log entry."
^XTMP("XPDT",7317,"KRN",8994,3171,2,0)="^8994.02A^2^2"
^XTMP("XPDT",7317,"KRN",8994,3171,2,1,0)="FSARRAY^2^^^1"
^XTMP("XPDT",7317,"KRN",8994,3171,2,2,0)="COMP^1^^^2"
^XTMP("XPDT",7317,"KRN",8994,3171,2,2,1,0)="^8994.021^4^4^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3171,2,2,1,1,0)="COMP=0 Will remove this entry's complication indication code (instead of"
^XTMP("XPDT",7317,"KRN",8994,3171,2,2,1,2,0)="1= Major Bleed, 2=Clot, 3=Minor Bleed), the original complicatons will "
^XTMP("XPDT",7317,"KRN",8994,3171,2,2,1,3,0)="stay in the file, but they will no longer be visible or considered in "
^XTMP("XPDT",7317,"KRN",8994,3171,2,2,1,4,0)="reports based on the COMPLICATION code (104)."
^XTMP("XPDT",7317,"KRN",8994,3171,2,"B","COMP",2)=""
^XTMP("XPDT",7317,"KRN",8994,3171,2,"B","FSARRAY",1)=""
^XTMP("XPDT",7317,"KRN",8994,3171,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3171,2,"PARAMSEQ",2,2)=""
^XTMP("XPDT",7317,"KRN",8994,3172,-1)="0^17"
^XTMP("XPDT",7317,"KRN",8994,3172,0)="ORAM1 OUTINR^OUTINR^ORAM1^2^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3172,1,0)="^^2^2^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3172,1,1,0)="Receives outside INR values and returns value^date (in $H format) for "
^XTMP("XPDT",7317,"KRN",8994,3172,1,2,0)="graphing."
^XTMP("XPDT",7317,"KRN",8994,3172,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3172,2,1,0)="INRSTRING^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3172,2,"B","INRSTRING",1)=""
^XTMP("XPDT",7317,"KRN",8994,3172,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3174,-1)="0^19"
^XTMP("XPDT",7317,"KRN",8994,3174,0)="ORAM1 PTCHECK^PTCHECK^ORAM1^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3174,1,0)="^^2^2^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3174,1,1,0)="Boolean RPC. Checks to see if patient is in Anticoagulation Flowsheet file"
^XTMP("XPDT",7317,"KRN",8994,3174,1,2,0)="(#103)."
^XTMP("XPDT",7317,"KRN",8994,3174,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3174,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3174,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3174,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3175,-1)="0^14"
^XTMP("XPDT",7317,"KRN",8994,3175,0)="ORAM1 GETPT^GETPT^ORAM1^2^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3175,1,0)="^^1^1^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3175,1,1,0)="Returns list of patients from Anticoagulation Flowsheet file (#103)."
^XTMP("XPDT",7317,"KRN",8994,3176,-1)="0^21"
^XTMP("XPDT",7317,"KRN",8994,3176,0)="ORAM1 TERASE^TERASE^ORAM1^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3176,1,0)="^^1^1^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3176,1,1,0)="Removes a patient from the Anticoagulation Team List."
^XTMP("XPDT",7317,"KRN",8994,3176,2,0)="^8994.02A^2^2"
^XTMP("XPDT",7317,"KRN",8994,3176,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3176,2,2,0)="COMP^1^^^2"
^XTMP("XPDT",7317,"KRN",8994,3176,2,"B","COMP",2)=""
^XTMP("XPDT",7317,"KRN",8994,3176,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3176,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3176,2,"PARAMSEQ",2,2)=""
^XTMP("XPDT",7317,"KRN",8994,3177,-1)="0^22"
^XTMP("XPDT",7317,"KRN",8994,3177,0)="ORAM1 UNLOCK^UNLOCK^ORAM1^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3177,1,0)="^^1^1^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3177,1,1,0)="Unlocks a patient's record in the Anticoagulation Flowsheet file (#103)."
^XTMP("XPDT",7317,"KRN",8994,3177,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3177,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3177,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3177,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3178,-1)="0^24"
^XTMP("XPDT",7317,"KRN",8994,3178,0)="ORAM2 NOACT^NOACT^ORAM2^2^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3178,1,0)="^^2^2^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3178,1,1,0)="Checks Anticoagulation Flowsheet file (#103) for patients not seen within"
^XTMP("XPDT",7317,"KRN",8994,3178,1,2,0)="the user-specified number of days."
^XTMP("XPDT",7317,"KRN",8994,3178,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3178,2,1,0)="DAYS^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3178,2,"B","DAYS",1)=""
^XTMP("XPDT",7317,"KRN",8994,3178,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3179,-1)="0^27"
^XTMP("XPDT",7317,"KRN",8994,3179,0)="ORAM2 SHOWRATE^SHOWRATE^ORAM2^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3179,1,0)="^^2^2^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3179,1,1,0)="Returns percentage of visits in which the patient was on time or within"
^XTMP("XPDT",7317,"KRN",8994,3179,1,2,0)="one day (before or after) scheduled draw date."
^XTMP("XPDT",7317,"KRN",8994,3179,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3179,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3179,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3179,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3180,-1)="0^25"
^XTMP("XPDT",7317,"KRN",8994,3180,0)="ORAM2 PTAPPT^PTAPPT^ORAM2^2^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3180,1,0)="^^2^2^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3180,1,1,0)="Returns the number of patients scheduled in the Anticoagulation clinic per"
^XTMP("XPDT",7317,"KRN",8994,3180,1,2,0)="day for the next 30 days.  Only days with appointments are displayed."
^XTMP("XPDT",7317,"KRN",8994,3181,-1)="0^26"
^XTMP("XPDT",7317,"KRN",8994,3181,0)="ORAM2 REMIND^REMIND^ORAM2^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3181,1,0)="^^2^2^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3181,1,1,0)="Sets date and text for ACM Reminder (can also be set as part of a complete"
^XTMP("XPDT",7317,"KRN",8994,3181,1,2,0)="visit entry)."
^XTMP("XPDT",7317,"KRN",8994,3181,2,0)="^8994.02A^3^3"
^XTMP("XPDT",7317,"KRN",8994,3181,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3181,2,2,0)="DATE^1^^^2"
^XTMP("XPDT",7317,"KRN",8994,3181,2,2,1,0)="^^2^2^3080925^"
^XTMP("XPDT",7317,"KRN",8994,3181,2,2,1,1,0)="Date the patient specific reminder that will start appearing when the"
^XTMP("XPDT",7317,"KRN",8994,3181,2,2,1,2,0)="ANTICOAGULATOR is accessed."
^XTMP("XPDT",7317,"KRN",8994,3181,2,3,0)="RTEXT^1^^^3"
^XTMP("XPDT",7317,"KRN",8994,3181,2,3,1,0)="^8994.021^1^1^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3181,2,3,1,1,0)="Actual carrot ('^') deliminated text (by line) of the reminder."
^XTMP("XPDT",7317,"KRN",8994,3181,2,"B","DATE",2)=""
^XTMP("XPDT",7317,"KRN",8994,3181,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3181,2,"B","RTEXT",3)=""
^XTMP("XPDT",7317,"KRN",8994,3181,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3181,2,"PARAMSEQ",2,2)=""
^XTMP("XPDT",7317,"KRN",8994,3181,2,"PARAMSEQ",3,3)=""
^XTMP("XPDT",7317,"KRN",8994,3182,-1)="0^28"
^XTMP("XPDT",7317,"KRN",8994,3182,0)="ORAM2 TEAMCHK^TEAMCHK^ORAM2^2^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3182,1,0)="^^2^2^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3182,1,1,0)="Checks list of teams to be sure they are in the OE/RR LIST file (#100.21),"
^XTMP("XPDT",7317,"KRN",8994,3182,1,2,0)="and returns the IEN and Clinic Name."
^XTMP("XPDT",7317,"KRN",8994,3182,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3182,2,1,0)="TEAMS^2^^^1"
^XTMP("XPDT",7317,"KRN",8994,3182,2,"B","TEAMS",1)=""
^XTMP("XPDT",7317,"KRN",8994,3182,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3183,-1)="0^23"
^XTMP("XPDT",7317,"KRN",8994,3183,0)="ORAM2 ALLGOAL^ALLGOAL^ORAM2^2^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3183,1,0)="^8994.01^2^2^3091211^^^"
^XTMP("XPDT",7317,"KRN",8994,3183,1,1,0)="Returns the percentage of patients in the Anticoagulation Flowsheet file"
^XTMP("XPDT",7317,"KRN",8994,3183,1,2,0)="(#103) whose last INRs (within the specified number of days) were in-goal."
^XTMP("XPDT",7317,"KRN",8994,3183,2,0)="^8994.02A^2^2"
^XTMP("XPDT",7317,"KRN",8994,3183,2,1,0)="DAYS^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3183,2,1,1,0)="^8994.021^1^1^3091211^^^"
^XTMP("XPDT",7317,"KRN",8994,3183,2,1,1,1,0)="NUMBER OF DAYS BACK TO INCLUDE A PT VISIT"
^XTMP("XPDT",7317,"KRN",8994,3183,2,2,0)="CLINIC^1^^^2"
^XTMP("XPDT",7317,"KRN",8994,3183,2,2,1,0)="^^1^1^3091211^"
^XTMP("XPDT",7317,"KRN",8994,3183,2,2,1,1,0)="IEN of Clinic in Hospital Location File."
^XTMP("XPDT",7317,"KRN",8994,3183,2,"B","CLINIC",2)=""
^XTMP("XPDT",7317,"KRN",8994,3183,2,"B","DAYS",1)=""
^XTMP("XPDT",7317,"KRN",8994,3183,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3183,2,"PARAMSEQ",2,2)=""
^XTMP("XPDT",7317,"KRN",8994,3183,3,0)="^8994.03^1^1^3091211^^^"
^XTMP("XPDT",7317,"KRN",8994,3183,3,1,0)="RETURNS A DELIMINITED LIST OF THOSE PT'S OUT OF RANGE ON THEIR LAST VISIT."
^XTMP("XPDT",7317,"KRN",8994,3184,-1)="0^31"
^XTMP("XPDT",7317,"KRN",8994,3184,0)="ORAM3 PTADR^PTADR^ORAM3^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3184,1,0)="^^2^2^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3184,1,1,0)="Retrieves contact information. Will also check for active temporary "
^XTMP("XPDT",7317,"KRN",8994,3184,1,2,0)="information."
^XTMP("XPDT",7317,"KRN",8994,3184,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3184,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3184,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3184,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3185,-1)="0^29"
^XTMP("XPDT",7317,"KRN",8994,3185,0)="ORAM3 COMPENT^COMPENT^ORAM3^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3185,1,0)="^^2^2^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3185,1,1,0)="Enters complication note into the Anticoagulation Flowsheet file (#103)."
^XTMP("XPDT",7317,"KRN",8994,3185,1,2,0)="Can also be entered as part of a complete visit entry."
^XTMP("XPDT",7317,"KRN",8994,3185,2,0)="^8994.02A^5^5"
^XTMP("XPDT",7317,"KRN",8994,3185,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3185,2,2,0)="DUZ^1^^^2"
^XTMP("XPDT",7317,"KRN",8994,3185,2,3,0)="CCODE^1^^^3"
^XTMP("XPDT",7317,"KRN",8994,3185,2,3,1,0)="^^1^1^3080918^"
^XTMP("XPDT",7317,"KRN",8994,3185,2,3,1,1,0)="CODE TO NOTE IF COMPLICATION IS MAJOR, MINOR OR BOTH"
^XTMP("XPDT",7317,"KRN",8994,3185,2,4,0)="CTEXT^1^^^4"
^XTMP("XPDT",7317,"KRN",8994,3185,2,4,1,0)="^^1^1^3080918^"
^XTMP("XPDT",7317,"KRN",8994,3185,2,4,1,1,0)="Carroted ('^') string of complication types/comments"
^XTMP("XPDT",7317,"KRN",8994,3185,2,5,0)="CDATE^1^^^5"
^XTMP("XPDT",7317,"KRN",8994,3185,2,5,1,0)="^8994.021^4^4^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3185,2,5,1,1,0)="'ENGLISH' DATE OF THE COMPLICATION;"
^XTMP("XPDT",7317,"KRN",8994,3185,2,5,1,2,0)="This is the date for the flow sheet to put the, probably historic, entry "
^XTMP("XPDT",7317,"KRN",8994,3185,2,5,1,3,0)="in the proper order in the flow sheet.  DATE/TIME stamp is in the file, "
^XTMP("XPDT",7317,"KRN",8994,3185,2,5,1,4,0)="but not visible in the flow sheet."
^XTMP("XPDT",7317,"KRN",8994,3185,2,"B","CCODE",3)=""
^XTMP("XPDT",7317,"KRN",8994,3185,2,"B","CDATE",5)=""
^XTMP("XPDT",7317,"KRN",8994,3185,2,"B","CTEXT",4)=""
^XTMP("XPDT",7317,"KRN",8994,3185,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3185,2,"B","DUZ",2)=""
^XTMP("XPDT",7317,"KRN",8994,3185,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3185,2,"PARAMSEQ",2,2)=""
^XTMP("XPDT",7317,"KRN",8994,3185,2,"PARAMSEQ",3,3)=""
^XTMP("XPDT",7317,"KRN",8994,3185,2,"PARAMSEQ",4,4)=""
^XTMP("XPDT",7317,"KRN",8994,3185,2,"PARAMSEQ",5,5)=""
^XTMP("XPDT",7317,"KRN",8994,3185,3,0)="^^1^1^3080918^"
^XTMP("XPDT",7317,"KRN",8994,3185,3,1,0)="Returns a 1 if filed."
^XTMP("XPDT",7317,"KRN",8994,3187,-1)="0^32"
^XTMP("XPDT",7317,"KRN",8994,3187,0)="ORAM3 PTFONE^PTFONE^ORAM3^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3187,1,0)="^^1^1^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3187,1,1,0)="Gets home phone^work phone for the patient in question."
^XTMP("XPDT",7317,"KRN",8994,3187,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3187,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3187,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3187,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3188,-1)="0^1"
^XTMP("XPDT",7317,"KRN",8994,3188,0)="ORAM CONCOMP^CONCOMP^ORAM^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3188,1,0)="^8994.01^2^2^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3188,1,1,0)="Receives the Consult Number, the note number and the DUZ; completes the"
^XTMP("XPDT",7317,"KRN",8994,3188,1,2,0)="consult with the note."
^XTMP("XPDT",7317,"KRN",8994,3188,2,0)="^8994.02A^3^3"
^XTMP("XPDT",7317,"KRN",8994,3188,2,1,0)="ORAMCNUM^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3188,2,2,0)="ORAMNUM^1^^^2"
^XTMP("XPDT",7317,"KRN",8994,3188,2,3,0)="DUZ^1^^^3"
^XTMP("XPDT",7317,"KRN",8994,3188,2,"B","DUZ",3)=""
^XTMP("XPDT",7317,"KRN",8994,3188,2,"B","ORAMCNUM",1)=""
^XTMP("XPDT",7317,"KRN",8994,3188,2,"B","ORAMNUM",2)=""
^XTMP("XPDT",7317,"KRN",8994,3188,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3188,2,"PARAMSEQ",2,2)=""
^XTMP("XPDT",7317,"KRN",8994,3188,2,"PARAMSEQ",3,3)=""
^XTMP("XPDT",7317,"KRN",8994,3189,-1)="0^33"
^XTMP("XPDT",7317,"KRN",8994,3189,0)="ORAMSET GET^GET^ORAMSET^2^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3189,1,0)="^8994.01^2^2^3090306^^^"
^XTMP("XPDT",7317,"KRN",8994,3189,1,1,0)="Returns the Anticoagulation Manager parameters for the division which the"
^XTMP("XPDT",7317,"KRN",8994,3189,1,2,0)="user is logged into."
^XTMP("XPDT",7317,"KRN",8994,3189,2,0)="^8994.02A^^0"
^XTMP("XPDT",7317,"KRN",8994,3189,3,0)="^8994.03^3^3^3090306^^^^"
^XTMP("XPDT",7317,"KRN",8994,3189,3,1,0)="SITE NAME^PATIENT LIST ALL #^PT LIST COMPLEX #^START NOTE^INTERIM "
^XTMP("XPDT",7317,"KRN",8994,3189,3,2,0)="NOTE^D/C NOTE^SIMPLE PHONE PCE CODE^MOD PHONE^ COMPLEX PHONE^CLASS "
^XTMP("XPDT",7317,"KRN",8994,3189,3,3,0)="ORIENTATIN CODE^OFFICE VISIT CODE^CONSUL LINKER Y/N^PCE Y/N"
^XTMP("XPDT",7317,"KRN",8994,3190,-1)="0^2"
^XTMP("XPDT",7317,"KRN",8994,3190,0)="ORAM HCT^HCT^ORAM^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3190,1,0)="^8994.01^1^1^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3190,1,1,0)="Returns the patient's most recent Hematocrit (HCT)."
^XTMP("XPDT",7317,"KRN",8994,3190,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3190,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3190,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3190,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3190,3,0)="^^2^2^3050415^"
^XTMP("XPDT",7317,"KRN",8994,3190,3,1,0)="RETURNS"
^XTMP("XPDT",7317,"KRN",8994,3190,3,2,0)="MOST RECENT HCT^DATE^DIFFERENCE BETWEN THIS VALUE AND LAST FLOWSHEET HCT"
^XTMP("XPDT",7317,"KRN",8994,3191,-1)="0^3"
^XTMP("XPDT",7317,"KRN",8994,3191,0)="ORAM INR^INR^ORAM^2^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3191,1,0)="^8994.01^1^1^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3191,1,1,0)="Returns last 6 months of INR values and dates."
^XTMP("XPDT",7317,"KRN",8994,3191,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3191,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3191,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3191,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3191,3,0)="^^3^3^3050415^"
^XTMP("XPDT",7317,"KRN",8994,3191,3,1,0)="ARRAY OF"
^XTMP("XPDT",7317,"KRN",8994,3191,3,2,0)="INR^DATE"
^XTMP("XPDT",7317,"KRN",8994,3191,3,3,0)="FOR LAST 180 DAYS"
^XTMP("XPDT",7317,"KRN",8994,3194,-1)="0^6"
^XTMP("XPDT",7317,"KRN",8994,3194,0)="ORAM PATIENT^PATIENT^ORAM^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3194,1,0)="^8994.01^1^1^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3194,1,1,0)="Returns the requested patient's Name, Gender, SSN, and Inpatient Status."
^XTMP("XPDT",7317,"KRN",8994,3194,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3194,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3194,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3194,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3194,3,0)="^8994.03^2^2^3060314^^"
^XTMP("XPDT",7317,"KRN",8994,3194,3,1,0)="RETURNS"
^XTMP("XPDT",7317,"KRN",8994,3194,3,2,0)="DFN^NAME^GENDER^CURRENT ADM"
^XTMP("XPDT",7317,"KRN",8994,3195,-1)="0^7"
^XTMP("XPDT",7317,"KRN",8994,3195,0)="ORAM PROVIDER^PROVIDER^ORAM^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3195,1,0)="^8994.01^1^1^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3195,1,1,0)="Returns provider DUZ and name."
^XTMP("XPDT",7317,"KRN",8994,3196,-1)="0^8"
^XTMP("XPDT",7317,"KRN",8994,3196,0)="ORAM SIGCHECK^SIGCHECK^ORAM^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3196,1,0)="^8994.01^1^1^3090113^^"
^XTMP("XPDT",7317,"KRN",8994,3196,1,1,0)="Validates the Electronic Signature Code entered by the user."
^XTMP("XPDT",7317,"KRN",8994,3196,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7317,"KRN",8994,3196,2,1,0)="ESCODE^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3196,2,"B","ESCODE",1)=""
^XTMP("XPDT",7317,"KRN",8994,3196,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3197,-1)="0^34"
^XTMP("XPDT",7317,"KRN",8994,3197,0)="ORAMX CONSULT^CONSULT^ORAMX^2^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3197,1,0)="^^3^3^3090113^"
^XTMP("XPDT",7317,"KRN",8994,3197,1,1,0)="Send DFN and the name of the Consult Service (from the ORAM CONSULT "
^XTMP("XPDT",7317,"KRN",8994,3197,1,2,0)="REQUEST SERVICE parameter). Returns pending and active consults which meet"
^XTMP("XPDT",7317,"KRN",8994,3197,1,3,0)="those criteria."
^XTMP("XPDT",7317,"KRN",8994,3197,2,0)="^8994.02A^2^2"
^XTMP("XPDT",7317,"KRN",8994,3197,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3197,2,2,0)="CNAME^1^^^2"
^XTMP("XPDT",7317,"KRN",8994,3197,2,"B","CNAME",2)=""
^XTMP("XPDT",7317,"KRN",8994,3197,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3197,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3197,2,"PARAMSEQ",2,2)=""
^XTMP("XPDT",7317,"KRN",8994,3199,-1)="0^35"
^XTMP("XPDT",7317,"KRN",8994,3199,0)="ORAMX PCESET^PCESET^ORAMX^1^P^0^^0"
^XTMP("XPDT",7317,"KRN",8994,3199,1,0)="^^1^1^3090224^"
^XTMP("XPDT",7317,"KRN",8994,3199,1,1,0)="Checks for service connection, etc, for PCE data call or files PCE data."
^XTMP("XPDT",7317,"KRN",8994,3199,2,0)="^8994.02A^3^3"
^XTMP("XPDT",7317,"KRN",8994,3199,2,1,0)="DFN^1^^^1"
^XTMP("XPDT",7317,"KRN",8994,3199,2,1,1,0)="^^1^1^3090224^"
^XTMP("XPDT",7317,"KRN",8994,3199,2,1,1,1,0)="The IEN of the Patient in the Patient File (#2)."
^XTMP("XPDT",7317,"KRN",8994,3199,2,2,0)="DATA1^1^^^2"
^XTMP("XPDT",7317,"KRN",8994,3199,2,2,1,0)="^^1^1^3090224^"
^XTMP("XPDT",7317,"KRN",8994,3199,2,2,1,1,0)="Data string from the Anticoagulation Management Program."
^XTMP("XPDT",7317,"KRN",8994,3199,2,3,0)="HOSLOC^1^^^3"
^XTMP("XPDT",7317,"KRN",8994,3199,2,3,1,0)="^^1^1^3090224^"
^XTMP("XPDT",7317,"KRN",8994,3199,2,3,1,1,0)="Visit location from the Hospital Location File."
^XTMP("XPDT",7317,"KRN",8994,3199,2,"B","DATA1",2)=""
^XTMP("XPDT",7317,"KRN",8994,3199,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3199,2,"B","HOSLOC",3)=""
^XTMP("XPDT",7317,"KRN",8994,3199,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3199,2,"PARAMSEQ",2,2)=""
^XTMP("XPDT",7317,"KRN",8994,3199,2,"PARAMSEQ",3,3)=""
^XTMP("XPDT",7317,"KRN",8994,3199,3,0)="^^5^5^3090224^"
^XTMP("XPDT",7317,"KRN",8994,3199,3,1,0)="If checking Service Connection/Exposures, returns in this format:"
^XTMP("XPDT",7317,"KRN",8994,3199,3,2,0)=" "
^XTMP("XPDT",7317,"KRN",8994,3199,3,3,0)=" SCSEL|SC^1^0|AO^0^|IR^1^0|EC^1^1|MST^1^0|HNC^0^|CV^0^"""
^XTMP("XPDT",7317,"KRN",8994,3199,3,4,0)=" "
^XTMP("XPDT",7317,"KRN",8994,3199,3,5,0)="'1' indicates that an answer is needed from the provider."
^XTMP("XPDT",7317,"KRN",8994,3200,-1)="0^36"
^XTMP("XPDT",7317,"KRN",8994,3200,0)="ORAMSET GETCLINS^GETCLINS^ORAMSET^2^S^^^0"
^XTMP("XPDT",7317,"KRN",8994,3200,1,0)="^^2^2^3090306^"
^XTMP("XPDT",7317,"KRN",8994,3200,1,1,0)="This RPC fetches the list of Clinic Names from the configuration of the "
^XTMP("XPDT",7317,"KRN",8994,3200,1,2,0)="Anticoagulation Management Application."
^XTMP("XPDT",7317,"KRN",8994,3200,3,0)="^^8^8^3090306^"
^XTMP("XPDT",7317,"KRN",8994,3200,3,1,0)="Returns an array in the following format:"
^XTMP("XPDT",7317,"KRN",8994,3200,3,2,0)=" "
^XTMP("XPDT",7317,"KRN",8994,3200,3,3,0)="RESULT(1)=""SLC - Anticoagulation^384;SC("""
^XTMP("XPDT",7317,"KRN",8994,3200,3,4,0)="RESULT(2)=""POC - Anticoagulation^386;SC("""
^XTMP("XPDT",7317,"KRN",8994,3200,3,5,0)="RESULT(3)=""Ely - Anticoagulation^388;SC("""
^XTMP("XPDT",7317,"KRN",8994,3200,3,6,0)=" "
^XTMP("XPDT",7317,"KRN",8994,3200,3,7,0)="where ^-piece 1 = Clinic Name, and"
^XTMP("XPDT",7317,"KRN",8994,3200,3,8,0)="      ^-piece 2 = Variable pointer to file 44 (Hospital Location)"
^XTMP("XPDT",7317,"KRN",8994,3299,-1)="0^37"
^XTMP("XPDT",7317,"KRN",8994,3299,0)="ORAM ORDER^ORDER^ORAM^1^S^^^0"
^XTMP("XPDT",7317,"KRN",8994,3299,1,0)="^^2^2^3090807^"
^XTMP("XPDT",7317,"KRN",8994,3299,1,1,0)="This RPC supports placing INR and CBC orders from the Anticoagulator "
^XTMP("XPDT",7317,"KRN",8994,3299,1,2,0)="application."
^XTMP("XPDT",7317,"KRN",8994,3299,2,0)="^8994.02A^5^5"
^XTMP("XPDT",7317,"KRN",8994,3299,2,1,0)="DFN^1^^1^1"
^XTMP("XPDT",7317,"KRN",8994,3299,2,1,1,0)="^^1^1^3090807^"
^XTMP("XPDT",7317,"KRN",8994,3299,2,1,1,1,0)="This is the patient id (i.e., the entry number of the patient in file 2)."
^XTMP("XPDT",7317,"KRN",8994,3299,2,2,0)="ORDOC^1^^1^2"
^XTMP("XPDT",7317,"KRN",8994,3299,2,2,1,0)="^^1^1^3090807^"
^XTMP("XPDT",7317,"KRN",8994,3299,2,2,1,1,0)="This is the ID of the ordering provider in file 200 (i.e., his ""DUZ"")."
^XTMP("XPDT",7317,"KRN",8994,3299,2,3,0)="ORQO^1^^1^3"
^XTMP("XPDT",7317,"KRN",8994,3299,2,3,1,0)="^^2^2^3090807^"
^XTMP("XPDT",7317,"KRN",8994,3299,2,3,1,1,0)="This is the internal entry number of the Quick Order to be placed (for "
^XTMP("XPDT",7317,"KRN",8994,3299,2,3,1,2,0)="either INR or CBC) in the Order Dialog file #101.41."
^XTMP("XPDT",7317,"KRN",8994,3299,2,4,0)="ORLOC^1^^1^4"
^XTMP("XPDT",7317,"KRN",8994,3299,2,4,1,0)="^^2^2^3090807^"
^XTMP("XPDT",7317,"KRN",8994,3299,2,4,1,1,0)="This is the internal entry number of the ordering location in the "
^XTMP("XPDT",7317,"KRN",8994,3299,2,4,1,2,0)="Hospital Location file (#42)."
^XTMP("XPDT",7317,"KRN",8994,3299,2,5,0)="ORCDT^1^^1^5"
^XTMP("XPDT",7317,"KRN",8994,3299,2,5,1,0)="^^2^2^3090807^"
^XTMP("XPDT",7317,"KRN",8994,3299,2,5,1,1,0)="This is the expected Collection Date/Time of the lab test being ordered, "
^XTMP("XPDT",7317,"KRN",8994,3299,2,5,1,2,0)="in external date/time format."
^XTMP("XPDT",7317,"KRN",8994,3299,2,"B","DFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3299,2,"B","ORCDT",5)=""
^XTMP("XPDT",7317,"KRN",8994,3299,2,"B","ORDOC",2)=""
^XTMP("XPDT",7317,"KRN",8994,3299,2,"B","ORLOC",4)=""
^XTMP("XPDT",7317,"KRN",8994,3299,2,"B","ORQO",3)=""
^XTMP("XPDT",7317,"KRN",8994,3299,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3299,2,"PARAMSEQ",2,2)=""
^XTMP("XPDT",7317,"KRN",8994,3299,2,"PARAMSEQ",3,3)=""
^XTMP("XPDT",7317,"KRN",8994,3299,2,"PARAMSEQ",4,4)=""
^XTMP("XPDT",7317,"KRN",8994,3299,2,"PARAMSEQ",5,5)=""
^XTMP("XPDT",7317,"KRN",8994,3308,-1)="0^38"
^XTMP("XPDT",7317,"KRN",8994,3308,0)="ORAMSET INDICS^INDICS^ORAMSET^2^S"
^XTMP("XPDT",7317,"KRN",8994,3308,1,0)="^8994.01^2^2^3091112^^"
^XTMP("XPDT",7317,"KRN",8994,3308,1,1,0)="This call populates the list of selectable indications for "
^XTMP("XPDT",7317,"KRN",8994,3308,1,2,0)="Anticoagulation therapy."
^XTMP("XPDT",7317,"KRN",8994,3308,3,0)="^8994.03^15^15^3091112^^"
^XTMP("XPDT",7317,"KRN",8994,3308,3,1,0)="The call returns the list of indications defined for the Clinic -> "
^XTMP("XPDT",7317,"KRN",8994,3308,3,2,0)="Division -> Package (in that precedence) as Name^Value pairs. The default"
^XTMP("XPDT",7317,"KRN",8994,3308,3,3,0)="list (i.e., where Entity = Package) is:"
^XTMP("XPDT",7317,"KRN",8994,3308,3,4,0)=" "
^XTMP("XPDT",7317,"KRN",8994,3308,3,5,0)="RESULT=10"
^XTMP("XPDT",7317,"KRN",8994,3308,3,6,0)="RESULT(1)=""A Fib^427.31"""
^XTMP("XPDT",7317,"KRN",8994,3308,3,7,0)="RESULT(2)=""A Flutter^427.32"""
^XTMP("XPDT",7317,"KRN",8994,3308,3,8,0)="RESULT(3)=""CVA^436."""
^XTMP("XPDT",7317,"KRN",8994,3308,3,9,0)="RESULT(4)=""DVT^453.89"""
^XTMP("XPDT",7317,"KRN",8994,3308,3,10,0)="RESULT(5)=""Hypercoag State^289.81"""
^XTMP("XPDT",7317,"KRN",8994,3308,3,11,0)="RESULT(6)=""L/T (Current) Anticoag Use^V58.61"""
^XTMP("XPDT",7317,"KRN",8994,3308,3,12,0)="RESULT(7)=""PE^415.19"""
^XTMP("XPDT",7317,"KRN",8994,3308,3,13,0)="RESULT(8)=""TIA^435.9"""
^XTMP("XPDT",7317,"KRN",8994,3308,3,14,0)="RESULT(9)=""Valve-Mech^V43.3"""
^XTMP("XPDT",7317,"KRN",8994,3308,3,15,0)="RESULT(10)=""Valve-Tissue^V42.2"""
^XTMP("XPDT",7317,"KRN",8994,3354,-1)="0^39"
^XTMP("XPDT",7317,"KRN",8994,3354,0)="ORAM APPTMTCH^APPTMTCH^ORAM^1^S"
^XTMP("XPDT",7317,"KRN",8994,3354,1,0)="^^2^2^3100115^"
^XTMP("XPDT",7317,"KRN",8994,3354,1,1,0)="This RPC supports revision of the appointment match when the user selects "
^XTMP("XPDT",7317,"KRN",8994,3354,1,2,0)="a new Clinic in Anticoagulator."
^XTMP("XPDT",7317,"KRN",8994,3354,2,0)="^8994.02A^2^2"
^XTMP("XPDT",7317,"KRN",8994,3354,2,1,0)="ORAMDFN^1^^1^1"
^XTMP("XPDT",7317,"KRN",8994,3354,2,1,1,0)="^^1^1^3100115^"
^XTMP("XPDT",7317,"KRN",8994,3354,2,1,1,1,0)="Patient ID."
^XTMP("XPDT",7317,"KRN",8994,3354,2,2,0)="ORAMCL^1^^1^2"
^XTMP("XPDT",7317,"KRN",8994,3354,2,2,1,0)="^^2^2^3100115^"
^XTMP("XPDT",7317,"KRN",8994,3354,2,2,1,1,0)="This is the internal entry number of the Clinic in the Hospital Location "
^XTMP("XPDT",7317,"KRN",8994,3354,2,2,1,2,0)="File (#44)."
^XTMP("XPDT",7317,"KRN",8994,3354,2,"B","ORAMCL",2)=""
^XTMP("XPDT",7317,"KRN",8994,3354,2,"B","ORAMDFN",1)=""
^XTMP("XPDT",7317,"KRN",8994,3354,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7317,"KRN",8994,3354,2,"PARAMSEQ",2,2)=""
^XTMP("XPDT",7317,"KRN",8994,3354,3,0)="^^3^3^3100115^"
^XTMP("XPDT",7317,"KRN",8994,3354,3,1,0)="A VA FileMan date/time is returned. If a match is found, the date and "
^XTMP("XPDT",7317,"KRN",8994,3354,3,2,0)="time of the appointment will be returned. Otherwise the system date/time "
^XTMP("XPDT",7317,"KRN",8994,3354,3,3,0)="at the time the RPC was invoked will be returned."
^XTMP("XPDT",7317,"MBREQ")="0"
^XTMP("XPDT",7317,"ORD",5,.4)=".4;5;;;EDEOUT^DIFROMSO(.4,DA,"""",XPDA);FPRE^DIFROMSI(.4,"""",XPDA);EPRE^DIFROMSI(.4,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.4,DA,"""",XPDA);DEL^DIFROMSK(.4,"""",%)"
^XTMP("XPDT",7317,"ORD",5,.4,0)="PRINT TEMPLATE"
^XTMP("XPDT",7317,"ORD",6,.401)=".401;6;;;EDEOUT^DIFROMSO(.401,DA,"""",XPDA);FPRE^DIFROMSI(.401,"""",XPDA);EPRE^DIFROMSI(.401,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.401,DA,"""",XPDA);DEL^DIFROMSK(.401,"""",%)"
^XTMP("XPDT",7317,"ORD",6,.401,0)="SORT TEMPLATE"
^XTMP("XPDT",7317,"ORD",16,8994)="8994;16;1;;;;;;;RPCDEL^XPDIA1"
^XTMP("XPDT",7317,"ORD",16,8994,0)="REMOTE PROCEDURE"
^XTMP("XPDT",7317,"ORD",18,19)="19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA"
^XTMP("XPDT",7317,"ORD",18,19,0)="OPTION"
^XTMP("XPDT",7317,"ORD",20,8989.51)="8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)"
^XTMP("XPDT",7317,"ORD",20,8989.51,0)="PARAMETER DEFINITION"
^XTMP("XPDT",7317,"ORD",21,8989.52)="8989.52;21;1;;PAR2E1^XPDTA2;PAR2F1^XPDIA3;PAR2E1^XPDIA3;PAR2F2^XPDIA3;;PAR2DEL^XPDIA3(%)"
^XTMP("XPDT",7317,"ORD",21,8989.52,0)="PARAMETER TEMPLATE"
^XTMP("XPDT",7317,"PGL",101.24,0,13,.13)="RPC^P8994'^XWB(8994,^0;13^Q"
^XTMP("XPDT",7317,"PGL",101.24,0,18,.18)="DETAIL REPORT^*P101.24'^ORD(101.24,^0;18^S DIC(""S"")=""I $P(^(0),""""^"""",8)=""""CD"""""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X"
^XTMP("XPDT",7317,"PGL",101.24,0,21,.192)="REPORT COMPONENT^P142.1'^GMT(142.1,^0;21^Q"
^XTMP("XPDT",7317,"PKG",22,-1)="1^1"
^XTMP("XPDT",7317,"PKG",22,0)="ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting"
^XTMP("XPDT",7317,"PKG",22,20,0)="^9.402P^^"
^XTMP("XPDT",7317,"PKG",22,22,0)="^9.49I^1^1"
^XTMP("XPDT",7317,"PKG",22,22,1,0)="3.0^2971217^2980204^64"
^XTMP("XPDT",7317,"PKG",22,22,1,"PAH",1,0)="307^3100205"
^XTMP("XPDT",7317,"PKG",22,22,1,"PAH",1,1,0)="^^2^2^3100205"
^XTMP("XPDT",7317,"PKG",22,22,1,"PAH",1,1,1,0)="The description of this patch may be found in the National Patch Module"
^XTMP("XPDT",7317,"PKG",22,22,1,"PAH",1,1,2,0)="under OR*3*307."
^XTMP("XPDT",7317,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7317,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7317,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7317,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7317,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7317,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7317,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7317,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7317,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7317,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7317,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7317,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7317,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7317,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7317,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7317,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7317,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7317,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7317,"QUES","XPM1","B")=""
^XTMP("XPDT",7317,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7317,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7317,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7317,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7317,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7317,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7317,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7317,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7317,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7317,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7317,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7317,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7317,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7317,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7317,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7317,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7317,"RTN")="9"
^XTMP("XPDT",7317,"RTN","ORAM")="0^1^B73547514^n/a"
^XTMP("XPDT",7317,"RTN","ORAM",1,0)="ORAM ;POR/RSF - ANTICOAGULATION MANAGEMENT RPCS (1 of 4) ;01/25/10  08:27"
^XTMP("XPDT",7317,"RTN","ORAM",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307**;Dec 17, 1997;Build 60"
^XTMP("XPDT",7317,"RTN","ORAM",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7317,"RTN","ORAM",4,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM",5,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",6,0)="PATIENT(RESULT,ORAMDFN) ;Returns current Patient info as:"
^XTMP("XPDT",7317,"RTN","ORAM",7,0)=" ;DFN^NAME^GENDER^ADMISSION^CURRENT DT/TIME (internal)^SSN^CURRENT DT/TIME (external)^CLINIC LOCATION^DTIME"
^XTMP("XPDT",7317,"RTN","ORAM",8,0)=" ;RPC=ORAM PATIENT"
^XTMP("XPDT",7317,"RTN","ORAM",9,0)=" N CURADM,PTNAME,GENDER,ORAMNOW,ORAMRD,ORAMSSN,ORAMPLOC,ORAMVDT"
^XTMP("XPDT",7317,"RTN","ORAM",10,0)=" I '$G(ORAMDFN) D"
^XTMP("XPDT",7317,"RTN","ORAM",11,0)=" . N DIC,X,Y"
^XTMP("XPDT",7317,"RTN","ORAM",12,0)=" . S DIC=""^DPT("",DIC(0)=""Z"",X="" """
^XTMP("XPDT",7317,"RTN","ORAM",13,0)=" . D ^DIC"
^XTMP("XPDT",7317,"RTN","ORAM",14,0)=" . S ORAMDFN=+$G(Y)"
^XTMP("XPDT",7317,"RTN","ORAM",15,0)=" I ORAMDFN<1 S ORAMDFN=0 G PATIENTQ"
^XTMP("XPDT",7317,"RTN","ORAM",16,0)=" S CURADM=$G(^DPT(ORAMDFN,.105))   ;CHECKS IF PATIENT IS ADMITTED"
^XTMP("XPDT",7317,"RTN","ORAM",17,0)=" S PTNAME=$P(^DPT(ORAMDFN,0),U)"
^XTMP("XPDT",7317,"RTN","ORAM",18,0)=" I $L(PTNAME)>19 D"
^XTMP("XPDT",7317,"RTN","ORAM",19,0)=" . N ORFMT"
^XTMP("XPDT",7317,"RTN","ORAM",20,0)=" . F ORFMT=""LAST,FIRST MI"",""LAST,FI MI"" S PTNAME=$$NAME^ORAMX(PTNAME,ORFMT) Q:$L(PTNAME)'>19"
^XTMP("XPDT",7317,"RTN","ORAM",21,0)=" S GENDER=$P(^DPT(ORAMDFN,0),U,2)"
^XTMP("XPDT",7317,"RTN","ORAM",22,0)=" S ORAMSSN=$P(^DPT(ORAMDFN,0),U,9)"
^XTMP("XPDT",7317,"RTN","ORAM",23,0)=" S ORAMNOW=$$NOW^XLFDT S ORAMRD=$$FMTE^XLFDT($E(ORAMNOW,1,12),2)"
^XTMP("XPDT",7317,"RTN","ORAM",24,0)=" S ORAMPLOC=$P($G(^ORAM(103,ORAMDFN,6)),U,2)"
^XTMP("XPDT",7317,"RTN","ORAM",25,0)=" S:+ORAMPLOC>0 ORAMPLOC=ORAMPLOC_"";SC("""
^XTMP("XPDT",7317,"RTN","ORAM",26,0)=" S ORAMVDT=$$GETAPPT(ORAMDFN,+ORAMPLOC)"
^XTMP("XPDT",7317,"RTN","ORAM",27,0)=" S:$L($P(ORAMRD,""/"",1))=1 $P(ORAMRD,""/"",1)=""0""_$P(ORAMRD,""/"",1)"
^XTMP("XPDT",7317,"RTN","ORAM",28,0)=" S:$L($P(ORAMRD,""/"",2))=1 $P(ORAMRD,""/"",2)=""0""_$P(ORAMRD,""/"",2)"
^XTMP("XPDT",7317,"RTN","ORAM",29,0)=" S RESULT=$G(ORAMDFN)_U_$G(PTNAME)_U_$G(GENDER)_U_$G(CURADM)_U_ORAMNOW_U_$G(ORAMSSN)_U_$G(ORAMRD)_U_ORAMPLOC_U_$G(DTIME)_U_ORAMVDT"
^XTMP("XPDT",7317,"RTN","ORAM",30,0)="PATIENTQ Q"
^XTMP("XPDT",7317,"RTN","ORAM",31,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",32,0)="APPTMTCH(RESULT,ORAMDFN,ORAMCL) ; Find appt match on clinic change"
^XTMP("XPDT",7317,"RTN","ORAM",33,0)=" S RESULT=$$GETAPPT(ORAMDFN,+ORAMCL)"
^XTMP("XPDT",7317,"RTN","ORAM",34,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM",35,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",36,0)="GETAPPT(ORAMDFN,ORAMCL) ; Find most recent appointment to Clinic from t-1 to t+1 days"
^XTMP("XPDT",7317,"RTN","ORAM",37,0)=" N ORAMC,ORAMEDT,ORAMLDT,ORAMOK,ORAMY,ORAMDIFF,ORAMTCL,ORAMVCL,ORAMLAD,ORAMLBD,ORAMFLTR,ORAMAPPT"
^XTMP("XPDT",7317,"RTN","ORAM",38,0)=" S ORAMOK=0"
^XTMP("XPDT",7317,"RTN","ORAM",39,0)=" S ORAMY=$$NOW^XLFDT"
^XTMP("XPDT",7317,"RTN","ORAM",40,0)=" I +ORAMCL'>0 G GETAPPX"
^XTMP("XPDT",7317,"RTN","ORAM",41,0)=" S ORAMLBD=$$GET^XPAR(ORAMCL_"";SC(^ALL"",""ORAM APPT MATCH LOOK-BACK"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAM",42,0)=" S ORAMDIFF=$S(ORAMLBD]"""":-ORAMLBD,1:-1)"
^XTMP("XPDT",7317,"RTN","ORAM",43,0)=" S ORAMEDT=$$FMADD^XLFDT(DT,ORAMDIFF)"
^XTMP("XPDT",7317,"RTN","ORAM",44,0)=" S ORAMLAD=$$GET^XPAR(ORAMCL_"";SC(^ALL"",""ORAM APPT MATCH LOOK-AHEAD"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAM",45,0)=" S ORAMDIFF=$S(ORAMLAD]"""":ORAMLAD,1:1)"
^XTMP("XPDT",7317,"RTN","ORAM",46,0)=" S ORAMLDT=$$FMADD^XLFDT(DT,ORAMDIFF)_"".2359"""
^XTMP("XPDT",7317,"RTN","ORAM",47,0)=" S ORAMVCL=$$GET^XPAR(ORAMCL_"";SC("",""ORAM VISIT LOCATION"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAM",48,0)=" S ORAMTCL=$$GET^XPAR(ORAMCL_"";SC("",""ORAM PHONE CLINIC"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAM",49,0)=" F ORAMC=ORAMVCL,ORAMTCL D"
^XTMP("XPDT",7317,"RTN","ORAM",50,0)=" . N ORAMOK"
^XTMP("XPDT",7317,"RTN","ORAM",51,0)=" . S ORAMFLTR(1)=ORAMEDT_"";""_ORAMLDT"
^XTMP("XPDT",7317,"RTN","ORAM",52,0)=" . S ORAMFLTR(2)=ORAMC"
^XTMP("XPDT",7317,"RTN","ORAM",53,0)=" . S ORAMFLTR(3)=""R;I;NT"""
^XTMP("XPDT",7317,"RTN","ORAM",54,0)=" . S ORAMFLTR(4)=ORAMDFN"
^XTMP("XPDT",7317,"RTN","ORAM",55,0)=" . S ORAMFLTR(""MAX"")=-3"
^XTMP("XPDT",7317,"RTN","ORAM",56,0)=" . S ORAMFLTR(""FLDS"")=""1;2;4"""
^XTMP("XPDT",7317,"RTN","ORAM",57,0)=" . S ORAMOK=$$SDAPI^SDAMA301(.ORAMFLTR)"
^XTMP("XPDT",7317,"RTN","ORAM",58,0)=" . I +ORAMOK>0 M ORAMAPPT=^TMP($J,""SDAMA301"")"
^XTMP("XPDT",7317,"RTN","ORAM",59,0)=" I +$D(ORAMAPPT)>9 S ORAMY=$$NEAREST($NA(ORAMAPPT(ORAMDFN)))"
^XTMP("XPDT",7317,"RTN","ORAM",60,0)=" K ^TMP($J,""SDAMA301"")"
^XTMP("XPDT",7317,"RTN","ORAM",61,0)="GETAPPX Q ORAMY"
^XTMP("XPDT",7317,"RTN","ORAM",62,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",63,0)="NEAREST(APPTS) ; Find the nearest appointment to NOW"
^XTMP("XPDT",7317,"RTN","ORAM",64,0)=" N ORC,ORI,ORY,ORNOW,ORDIFFS S (ORC,ORY)=0,ORNOW=$$NOW^XLFDT"
^XTMP("XPDT",7317,"RTN","ORAM",65,0)=" F  S ORC=$O(@APPTS@(ORC)) Q:+ORC'>0  D"
^XTMP("XPDT",7317,"RTN","ORAM",66,0)=" . N ORDT S ORDT=0"
^XTMP("XPDT",7317,"RTN","ORAM",67,0)=" . F  S ORDT=$O(@APPTS@(ORC,ORDT)) Q:+ORDT'>0  S ORDIFFS($$ABS^XLFMTH($$FMDIFF^XLFDT(ORNOW,ORDT,2)))=ORDT"
^XTMP("XPDT",7317,"RTN","ORAM",68,0)=" S ORI=$O(ORDIFFS(0))"
^XTMP("XPDT",7317,"RTN","ORAM",69,0)=" S:+ORI>0 ORY=ORDIFFS(ORI)"
^XTMP("XPDT",7317,"RTN","ORAM",70,0)=" Q ORY"
^XTMP("XPDT",7317,"RTN","ORAM",71,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",72,0)="PROVIDER(RESULT) ;GETS DUZ/NAME OF PROVIDER WHO IS SIGNED IN"
^XTMP("XPDT",7317,"RTN","ORAM",73,0)=" ;;RPC=ORAM PROVIDER"
^XTMP("XPDT",7317,"RTN","ORAM",74,0)=" N PN,INIT"
^XTMP("XPDT",7317,"RTN","ORAM",75,0)=" S DUZ=$G(DUZ)"
^XTMP("XPDT",7317,"RTN","ORAM",76,0)=" S PN=$P(^VA(200,DUZ,0),U)"
^XTMP("XPDT",7317,"RTN","ORAM",77,0)=" S INIT=$P(^VA(200,DUZ,0),U,2)"
^XTMP("XPDT",7317,"RTN","ORAM",78,0)=" S RESULT=$G(DUZ)_U_PN_U_$G(INIT)"
^XTMP("XPDT",7317,"RTN","ORAM",79,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM",80,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",81,0)="INRCHK(ORAMQO) ; Resolve Lab Test id from Quick Order"
^XTMP("XPDT",7317,"RTN","ORAM",82,0)=" N TST,N,ORAM60,ORAMT2,ORAMTT,ORAMPP,ORAMTST,ORAMTSTN,ORAMNEW,ORAML,ORAMT60,ORAMORD,ORY"
^XTMP("XPDT",7317,"RTN","ORAM",83,0)=" S ORAMORD=$$QOORD(ORAMQO),ORY="""""
^XTMP("XPDT",7317,"RTN","ORAM",84,0)=" I +$G(ORAMQO) D"
^XTMP("XPDT",7317,"RTN","ORAM",85,0)=" . N ORAMC"
^XTMP("XPDT",7317,"RTN","ORAM",86,0)=" . S ORAM60=+$P(^ORD(101.43,ORAMORD,0),U,2) Q:'+$G(ORAM60)"
^XTMP("XPDT",7317,"RTN","ORAM",87,0)=" . S ORAMT60=$P($P($G(^LAB(60,ORAM60,0)),U,5),"";"",2) I +$G(ORAMT60) S ORY=ORAMT60 Q"
^XTMP("XPDT",7317,"RTN","ORAM",88,0)=" . I '$G(ORAMT60),$D(^LAB(60,ORAM60,2,0)) S ORAMC=0 F  S ORAMC=$O(^LAB(60,ORAM60,2,ORAMC)) Q:'+$G(ORAMC)!(+$G(ORY))  D"
^XTMP("XPDT",7317,"RTN","ORAM",89,0)=" .. S ORAMNEW=^LAB(60,ORAM60,2,ORAMC,0) I +ORAMNEW>0,$$ISINR(ORAMNEW) S ORY=$P($P($G(^LAB(60,ORAMNEW,0)),U,5),"";"",2) Q"
^XTMP("XPDT",7317,"RTN","ORAM",90,0)=" Q ORY"
^XTMP("XPDT",7317,"RTN","ORAM",91,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",92,0)="ISINR(ORTEST) ; Is the lab test an INR?"
^XTMP("XPDT",7317,"RTN","ORAM",93,0)=" N ORY,ORNM S ORY=0"
^XTMP("XPDT",7317,"RTN","ORAM",94,0)=" S ORNM=$P($G(^LAB(60,ORTEST,0)),U)"
^XTMP("XPDT",7317,"RTN","ORAM",95,0)=" S ORY=$S(ORNM[""INR"":1,(ORNM[""INT"")&(ORNM[""NORM"")&(ORNM[""RAT""):1,1:0)"
^XTMP("XPDT",7317,"RTN","ORAM",96,0)=" Q ORY"
^XTMP("XPDT",7317,"RTN","ORAM",97,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",98,0)="LABCHK(RESULT) ;"
^XTMP("XPDT",7317,"RTN","ORAM",99,0)=" ;;RPC=ORAM ORDERABLES"
^XTMP("XPDT",7317,"RTN","ORAM",100,0)=" N ORAMINR,ORAMCBC,C,Y S (C,Y)=0,RESULT=""0|0"""
^XTMP("XPDT",7317,"RTN","ORAM",101,0)=" S ORAMINR=0 F  S ORAMINR=$O(^ORD(101.43,""B"",""INR"",ORAMINR)) Q:'+$G(ORAMINR)!(+$G(C))  I +$G(ORAMINR) S $P(RESULT,""|"")=ORAMINR,C=1"
^XTMP("XPDT",7317,"RTN","ORAM",102,0)=" I $G(ORAMINR)="""" S ORAMINR=0 F  S ORAMINR=$O(^ORD(101.43,""B"",""INR "",ORAMINR)) Q:'+$G(ORAMINR)!(+$G(C))  I +$G(ORAMINR) S $P(RESULT,""|"")=ORAMINR,C=1"
^XTMP("XPDT",7317,"RTN","ORAM",103,0)=" I $G(ORAMINR)="""" S ORAMINR=0 F  S ORAMINR=$O(^ORD(101.43,""B"",""INR/PT"",ORAMINR)) Q:'+$G(ORAMINR)!(+$G(C))  I +$G(ORAMINR) S $P(RESULT,""|"")=ORAMINR,C=1"
^XTMP("XPDT",7317,"RTN","ORAM",104,0)=" I $G(ORAMINR)="""" S ORAMINR=0 F  S ORAMINR=$O(^ORD(101.43,""B"",""PT"",ORAMINR)) Q:'+$G(ORAMINR)!(+$G(C))  I +$G(ORAMINR) S $P(RESULT,""|"")=ORAMINR,C=1"
^XTMP("XPDT",7317,"RTN","ORAM",105,0)=" S ORAMCBC=0 F  S ORAMCBC=$O(^ORD(101.43,""B"",""CBC"",ORAMCBC)) Q:'+$G(ORAMCBC)!(+$G(Y))  I +$G(ORAMCBC) S $P(RESULT,""|"",2)=ORAMCBC,Y=1"
^XTMP("XPDT",7317,"RTN","ORAM",106,0)=" I $G(ORAMCBC)="""" S ORAMCBC=$O(^ORD(101.43,""B"",""CBC "",ORAMCBC)) Q:'+$G(ORAMCBC)!(+$G(Y))  I +$G(ORAMCBC) S $P(RESULT,""|"",2)=ORAMCBC,Y=1"
^XTMP("XPDT",7317,"RTN","ORAM",107,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM",108,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",109,0)="SIGCHECK(RESULT,ESCODE) ;"
^XTMP("XPDT",7317,"RTN","ORAM",110,0)=" ;;CHECKS SIG CODE"
^XTMP("XPDT",7317,"RTN","ORAM",111,0)=" ;;RPC=ORAM SIGCHECK"
^XTMP("XPDT",7317,"RTN","ORAM",112,0)=" N SUCCESS,X"
^XTMP("XPDT",7317,"RTN","ORAM",113,0)=" S SUCCESS=0"
^XTMP("XPDT",7317,"RTN","ORAM",114,0)=" Q:ESCODE="""""
^XTMP("XPDT",7317,"RTN","ORAM",115,0)=" S X=ESCODE D HASH^XUSHSHP"
^XTMP("XPDT",7317,"RTN","ORAM",116,0)=" I $P($G(^VA(200,DUZ,20)),U,4)=X S SUCCESS=1 ;SIG CODE CORRECT"
^XTMP("XPDT",7317,"RTN","ORAM",117,0)=" S RESULT=$G(SUCCESS)"
^XTMP("XPDT",7317,"RTN","ORAM",118,0)="SIGQ Q"
^XTMP("XPDT",7317,"RTN","ORAM",119,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",120,0)="HCT(RESULT,ORAMDFN) ;GET HCT"
^XTMP("XPDT",7317,"RTN","ORAM",121,0)=" ;;GETS MOST RECENT HCT"
^XTMP("XPDT",7317,"RTN","ORAM",122,0)=" ;;RPC=ORAM HCT"
^XTMP("XPDT",7317,"RTN","ORAM",123,0)=" N HCT,LDATE,HCTDATE,LOOPCNT,HCTDIFF,LRDFN,ORAMS,ORAMHCT,ORAMDNM,OHCT,OHCTD,ORAMFM,ORAMHCTN"
^XTMP("XPDT",7317,"RTN","ORAM",124,0)=" I '$G(ORAMDFN) S RESULT="""" Q  ;IF DFN IS NOT PASSED, EXIT"
^XTMP("XPDT",7317,"RTN","ORAM",125,0)=" S LRDFN=$$LAB($G(ORAMDFN)) Q:'+LRDFN"
^XTMP("XPDT",7317,"RTN","ORAM",126,0)=" S ORAMHCT=$$GET^XPAR(""ALL"",""ORAM HCT/HGB REFERENCE"",1,""B"")"
^XTMP("XPDT",7317,"RTN","ORAM",127,0)=" I +$G(ORAMHCT)'>0 S RESULT=""HCT Param not set."" Q"
^XTMP("XPDT",7317,"RTN","ORAM",128,0)=" S ORAMHCTN=$P(ORAMHCT,U,2),ORAMHCT=$P(ORAMHCT,U)"
^XTMP("XPDT",7317,"RTN","ORAM",129,0)=" ; Get Lab Data Name based on IEN in ^LAB(60,"
^XTMP("XPDT",7317,"RTN","ORAM",130,0)=" S ORAMDNM=$P($P(^LAB(60,+ORAMHCT,0),U,5),"";"",2) Q:ORAMDNM']"""""
^XTMP("XPDT",7317,"RTN","ORAM",131,0)=" S LDATE=0 F  SET LDATE=$O(^LR(LRDFN,""CH"",LDATE)) S LOOPCNT=0 Q:LDATE=""""!(+$G(HCT))  D  Q:LOOPCNT"
^XTMP("XPDT",7317,"RTN","ORAM",132,0)=" . S RESULT=$G(^LR(LRDFN,""CH"",LDATE,ORAMDNM))"
^XTMP("XPDT",7317,"RTN","ORAM",133,0)=" . Q:RESULT="""""
^XTMP("XPDT",7317,"RTN","ORAM",134,0)=" . Q:$P(RESULT,U,1)=""""  ;QUIT IF NO HCT DATA"
^XTMP("XPDT",7317,"RTN","ORAM",135,0)=" . S HCT=$P(RESULT,U,1)  ;HCT"
^XTMP("XPDT",7317,"RTN","ORAM",136,0)=" . S HCTDATE=9999999-LDATE"
^XTMP("XPDT",7317,"RTN","ORAM",137,0)=" . S LOOPCNT=1"
^XTMP("XPDT",7317,"RTN","ORAM",138,0)=" . Q:+HCT"
^XTMP("XPDT",7317,"RTN","ORAM",139,0)=" I LDATE="""" S RESULT=""NONE"""
^XTMP("XPDT",7317,"RTN","ORAM",140,0)=" I $D(^ORAM(103,ORAMDFN,6)),($L($P(^ORAM(103,ORAMDFN,6),U,4),""|"")=3) D"
^XTMP("XPDT",7317,"RTN","ORAM",141,0)=" . S OHCT=$P($P(^ORAM(103,ORAMDFN,6),U,4),""|""),OHCTD=$P($P(^ORAM(103,ORAMDFN,6),U,4),""|"",2)"
^XTMP("XPDT",7317,"RTN","ORAM",142,0)=" . I +$G(OHCT) D DT^DILF(,OHCTD,.ORAMFM)"
^XTMP("XPDT",7317,"RTN","ORAM",143,0)=" I +$G(HCTDATE),$G(ORAMFM)>HCTDATE S HCT=OHCT_"" (Outside Lab)"",HCTDATE=ORAMFM,ORAMHCTN=""HCT"""
^XTMP("XPDT",7317,"RTN","ORAM",144,0)=" I '+$G(HCTDATE) S:+$G(OHCT) HCT=OHCT_"" (Outside Lab)"",ORAMHCTN=""HCT"" S:$G(ORAMFM)'="""" HCTDATE=ORAMFM"
^XTMP("XPDT",7317,"RTN","ORAM",145,0)=" I +$G(HCTDATE) S HCTDATE=$$FMTE^XLFDT($E(HCTDATE,1,7),2)"
^XTMP("XPDT",7317,"RTN","ORAM",146,0)=" S RESULT=$G(HCT)_U_$G(HCTDATE)_U_ORAMHCTN"
^XTMP("XPDT",7317,"RTN","ORAM",147,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM",148,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",149,0)="INR(RESULT,ORAMDFN) ; Gets most recent INR"
^XTMP("XPDT",7317,"RTN","ORAM",150,0)=" ;;RPC=ORAM INR"
^XTMP("XPDT",7317,"RTN","ORAM",151,0)=" N LDATE,INR,INRFD,LRDFN,HDATE,TDIFF,SIXMON,COUNT,SCORE,ORAMITST,INRHD,INRRD"
^XTMP("XPDT",7317,"RTN","ORAM",152,0)=" N ORAMQO"
^XTMP("XPDT",7317,"RTN","ORAM",153,0)=" S RESULT="""""
^XTMP("XPDT",7317,"RTN","ORAM",154,0)=" I '$G(ORAMDFN) Q  ;IF DFN IS NOT PASSED, EXIT"
^XTMP("XPDT",7317,"RTN","ORAM",155,0)=" S LRDFN=$$LAB($G(ORAMDFN)) Q:'+$G(LRDFN)"
^XTMP("XPDT",7317,"RTN","ORAM",156,0)=" S ORAMQO=$$GET^XPAR(""ALL"",""ORAM INR QUICK ORDER"",1,""I"") S ORAMITST=$$INRCHK(ORAMQO)"
^XTMP("XPDT",7317,"RTN","ORAM",157,0)=" I +ORAMITST'>0 Q"
^XTMP("XPDT",7317,"RTN","ORAM",158,0)=" S (LDATE,COUNT)=0,SIXMON=$$FMADD^XLFDT(DT,-180)"
^XTMP("XPDT",7317,"RTN","ORAM",159,0)=" F  S LDATE=$O(^LR(LRDFN,""CH"",LDATE)) Q:+LDATE'>0!(LDATE>(9999999-SIXMON))  D"
^XTMP("XPDT",7317,"RTN","ORAM",160,0)=" . N SCORE,INR,INRFD,INRHD,INRRD,XDT"
^XTMP("XPDT",7317,"RTN","ORAM",161,0)=" . S SCORE=$G(^LR(LRDFN,""CH"",LDATE,ORAMITST))"
^XTMP("XPDT",7317,"RTN","ORAM",162,0)=" . Q:SCORE=""""  ;QUIT IF NO INR TEST"
^XTMP("XPDT",7317,"RTN","ORAM",163,0)=" . S INR=$P(SCORE,U)  ;INR"
^XTMP("XPDT",7317,"RTN","ORAM",164,0)=" . Q:INR=""""  ;QUIT IF NO INR DATA"
^XTMP("XPDT",7317,"RTN","ORAM",165,0)=" . S INRFD=9999999-LDATE"
^XTMP("XPDT",7317,"RTN","ORAM",166,0)=" . S XDT=$P(INRFD,""."") S INRHD=$$FMTH^XLFDT(XDT,1),INRRD=$$FMTE^XLFDT(XDT,""2P"")"
^XTMP("XPDT",7317,"RTN","ORAM",167,0)=" . S RESULT(COUNT)=$G(INR)_""^^""_$G(INRRD)_U_$G(INRHD)"
^XTMP("XPDT",7317,"RTN","ORAM",168,0)=" . Q:INRFD<SIXMON  ;Q WHEN SEARCHED LAST 6 MONTHS"
^XTMP("XPDT",7317,"RTN","ORAM",169,0)=" . S COUNT=COUNT+1"
^XTMP("XPDT",7317,"RTN","ORAM",170,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM",171,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",172,0)="CONCOMP(RESULT,ORAMCNUM,ORAMNNUM,ORAMDUZ) ;"
^XTMP("XPDT",7317,"RTN","ORAM",173,0)=" ;;BRINGS IN CONSULT NUMBER(ORAMCNUM)"
^XTMP("XPDT",7317,"RTN","ORAM",174,0)=" ;;BRINGS IN NOTE NUMBER(ORAMNNUM), COMPLETES CONSULT"
^XTMP("XPDT",7317,"RTN","ORAM",175,0)=" ;;RPC=ORAM CONCOMP"
^XTMP("XPDT",7317,"RTN","ORAM",176,0)=" N ORAMCST"
^XTMP("XPDT",7317,"RTN","ORAM",177,0)=" S RESULT=0"
^XTMP("XPDT",7317,"RTN","ORAM",178,0)=" S ORAMCST=$S($$STATUS^TIULC(ORAMNNUM)=""completed"":""COMPLETE"",1:""INCOMPLETE"")"
^XTMP("XPDT",7317,"RTN","ORAM",179,0)=" D GET^GMRCTIU(ORAMCNUM,ORAMNNUM,ORAMCST,ORAMDUZ)"
^XTMP("XPDT",7317,"RTN","ORAM",180,0)=" S RESULT=1"
^XTMP("XPDT",7317,"RTN","ORAM",181,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM",182,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",183,0)="LAB(DFN) ;GET LAB NUMBER"
^XTMP("XPDT",7317,"RTN","ORAM",184,0)=" N LRDFN"
^XTMP("XPDT",7317,"RTN","ORAM",185,0)=" IF 'DFN S LRDFN="""" G LABQ ;IF DFN IS NOT PASSED, EXIT"
^XTMP("XPDT",7317,"RTN","ORAM",186,0)=" S LRDFN=$G(^DPT(DFN,""LR""))"
^XTMP("XPDT",7317,"RTN","ORAM",187,0)="LABQ Q LRDFN"
^XTMP("XPDT",7317,"RTN","ORAM",188,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM",189,0)="ORDER(ORESULT,DFN,ORDOC,ORLOC,ORQO,ORCDT) ; Place Quick Order for INR or CBC"
^XTMP("XPDT",7317,"RTN","ORAM",190,0)=" ; RPC ORAM ORDER"
^XTMP("XPDT",7317,"RTN","ORAM",191,0)=" ;  in: DFN   - pt id file 2"
^XTMP("XPDT",7317,"RTN","ORAM",192,0)=" ;      ORDOC - ordering provider id file 200"
^XTMP("XPDT",7317,"RTN","ORAM",193,0)=" ;      ORLOC - location id file 42"
^XTMP("XPDT",7317,"RTN","ORAM",194,0)=" ;      ORQO  - quick order id file 101.41"
^XTMP("XPDT",7317,"RTN","ORAM",195,0)=" ;      ORCDT - collection date/time"
^XTMP("XPDT",7317,"RTN","ORAM",196,0)=" N ORANS,ORDIALOG,ORDG,ORDLG"
^XTMP("XPDT",7317,"RTN","ORAM",197,0)=" I +$G(DFN)'>0 S ORESULT=""0^invalid Patient id"" Q"
^XTMP("XPDT",7317,"RTN","ORAM",198,0)=" I +$G(ORDOC)'>0 S ORESULT=""0^invalid Provider id"" Q"
^XTMP("XPDT",7317,"RTN","ORAM",199,0)=" I +$G(ORLOC)'>0 S ORESULT=""0^invalid Location id"" Q"
^XTMP("XPDT",7317,"RTN","ORAM",200,0)=" I +$G(ORQO)'>0 S ORESULT=""0^invalid Quick Order id"" Q"
^XTMP("XPDT",7317,"RTN","ORAM",201,0)=" I $G(ORCDT)']"""" S ORESULT=""0^invalid Collection Date/Time"" Q"
^XTMP("XPDT",7317,"RTN","ORAM",202,0)=" D GETQDLG^ORCD(ORQO)"
^XTMP("XPDT",7317,"RTN","ORAM",203,0)=" I '$D(ORDIALOG) S ORESULT=""0^invalid Quick Order id"" Q"
^XTMP("XPDT",7317,"RTN","ORAM",204,0)=" S ORDLG=$$GET1^DIQ(101.41,+ORDIALOG_"","",.01)"
^XTMP("XPDT",7317,"RTN","ORAM",205,0)=" I ORDLG']"""" S ORESULT=""0^invalid Quick Order id"" Q"
^XTMP("XPDT",7317,"RTN","ORAM",206,0)=" S ORDG=$$GET1^DIQ(101.41,ORQO_"","",5,""I"")"
^XTMP("XPDT",7317,"RTN","ORAM",207,0)=" I +ORDG'>0 S ORESULT=""0^invalid Quick Order id - no Display Group"" Q"
^XTMP("XPDT",7317,"RTN","ORAM",208,0)=" S ORDIALOG(6,1)=$$IDATE(ORCDT)"
^XTMP("XPDT",7317,"RTN","ORAM",209,0)=" D SAVE^ORWDX(.ORESULT,DFN,ORDOC,ORLOC,ORDLG,ORDG,ORQO,"""",.ORDIALOG) ; Place the order"
^XTMP("XPDT",7317,"RTN","ORAM",210,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM",211,0)="IDATE(ORX) ; Convert External Date/time to FM Internal format"
^XTMP("XPDT",7317,"RTN","ORAM",212,0)=" N ORY S ORY="""""
^XTMP("XPDT",7317,"RTN","ORAM",213,0)=" D DT^DILF(""T"",ORX,.ORY) S:+ORY'>0 ORY="""""
^XTMP("XPDT",7317,"RTN","ORAM",214,0)=" Q ORY"
^XTMP("XPDT",7317,"RTN","ORAM",215,0)="QOORD(ORQO) ; Given Quick Order, find the IEN of the Orderable Item"
^XTMP("XPDT",7317,"RTN","ORAM",216,0)=" N ORI,ORDIALOG,ORY S ORY=0"
^XTMP("XPDT",7317,"RTN","ORAM",217,0)=" D GETQDLG^ORCD(+$G(ORQO))"
^XTMP("XPDT",7317,"RTN","ORAM",218,0)=" I '$D(ORDIALOG) G QOORDX"
^XTMP("XPDT",7317,"RTN","ORAM",219,0)=" S ORI=0"
^XTMP("XPDT",7317,"RTN","ORAM",220,0)=" F  S ORI=$O(ORDIALOG(ORI)) Q:ORI'>0!+ORY>0  D"
^XTMP("XPDT",7317,"RTN","ORAM",221,0)=" . I $G(ORDIALOG(ORI))[""ORDERABLE"" S ORY=$G(ORDIALOG(ORI,1))"
^XTMP("XPDT",7317,"RTN","ORAM",222,0)="QOORDX Q ORY"
^XTMP("XPDT",7317,"RTN","ORAM1")="0^2^B159543113^n/a"
^XTMP("XPDT",7317,"RTN","ORAM1",1,0)="ORAM1 ;POR/RSF - ANTICOAGULATION MANAGEMENT RPCS (2 of 4) ;01/22/10  16:13"
^XTMP("XPDT",7317,"RTN","ORAM1",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307**;Dec 17, 1997;Build 60"
^XTMP("XPDT",7317,"RTN","ORAM1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7317,"RTN","ORAM1",4,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",5,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",6,0)="TERASE(RESULT,ORAMDFN,ORAMCOMP) ; Manage Team Lists"
^XTMP("XPDT",7317,"RTN","ORAM1",7,0)=" N ORAMKEY,ORAMTMP,ORAMCEY,ORAMCLIN,ORAMCLNM,ORAMCOM,ORAMALL,ORAMCPLX,ORAMENT,QQ,DA,DIK,D0"
^XTMP("XPDT",7317,"RTN","ORAM1",8,0)=" Q:'+$G(ORAMDFN)"
^XTMP("XPDT",7317,"RTN","ORAM1",9,0)=" S ORAMCLIN=+$P($G(^ORAM(103,ORAMDFN,6)),U,2),ORAMENT=$S(+ORAMCLIN>0:ORAMCLIN_"";SC("",1:""ALL"")"
^XTMP("XPDT",7317,"RTN","ORAM1",10,0)=" I +ORAMCLIN S ORAMCLNM=$$EXTERNAL^DILFD(103,101,"""",ORAMCLIN)"
^XTMP("XPDT",7317,"RTN","ORAM1",11,0)=" S ORAMALL=$$GET^XPAR(ORAMENT,""ORAM TEAM LIST (ALL)"",1,""I""),ORAMCPLX=$$GET^XPAR(ORAMENT,""ORAM TEAM LIST (COMPLEX)"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAM1",12,0)=" I +$G(ORAMALL) D  I 1"
^XTMP("XPDT",7317,"RTN","ORAM1",13,0)=" . S DA(1)=ORAMALL,DIK=""^OR(100.21""_"",""_DA(1)_"",10,"""
^XTMP("XPDT",7317,"RTN","ORAM1",14,0)=" . S ORAMTMP=ORAMDFN_"";DPT("""
^XTMP("XPDT",7317,"RTN","ORAM1",15,0)=" . S ORAMKEY=$O(^OR(100.21,ORAMALL,10,""B"",ORAMTMP,0)) Q:+ORAMKEY'>0  S DA=ORAMKEY"
^XTMP("XPDT",7317,"RTN","ORAM1",16,0)=" . D ^DIK"
^XTMP("XPDT",7317,"RTN","ORAM1",17,0)=" . K DA,DIK"
^XTMP("XPDT",7317,"RTN","ORAM1",18,0)=" . K D0"
^XTMP("XPDT",7317,"RTN","ORAM1",19,0)=" . S RESULT=1"
^XTMP("XPDT",7317,"RTN","ORAM1",20,0)=" E  S RESULT=""0^ORAM TEAM LIST (ALL) not defined for Clinic ""_ORAMCLNM_""."""
^XTMP("XPDT",7317,"RTN","ORAM1",21,0)=" I +$G(ORAMCPLX) D  I 1"
^XTMP("XPDT",7317,"RTN","ORAM1",22,0)=" . S DA(1)=ORAMCPLX,DIK=""^OR(100.21""_"",""_DA(1)_"",10,"""
^XTMP("XPDT",7317,"RTN","ORAM1",23,0)=" . S ORAMCEY=$O(^OR(100.21,ORAMCPLX,10,""B"",ORAMTMP,0)) Q:+ORAMCEY'>0  S DA=ORAMCEY"
^XTMP("XPDT",7317,"RTN","ORAM1",24,0)=" . D ^DIK"
^XTMP("XPDT",7317,"RTN","ORAM1",25,0)=" . K DA,DIK"
^XTMP("XPDT",7317,"RTN","ORAM1",26,0)=" . S:'$D(RESULT) RESULT=1"
^XTMP("XPDT",7317,"RTN","ORAM1",27,0)=" E  S RESULT=""0^ORAM TEAM LIST (COMPLEX) not defined for Clinic ""_ORAMCLNM_""."""
^XTMP("XPDT",7317,"RTN","ORAM1",28,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",29,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",30,0)="ICDCODE(RESULT,ICODE) ; Map ICD Code"
^XTMP("XPDT",7317,"RTN","ORAM1",31,0)=" N ORAMICD"
^XTMP("XPDT",7317,"RTN","ORAM1",32,0)=" S ORAMICD=ICODE_"" """
^XTMP("XPDT",7317,"RTN","ORAM1",33,0)=" S RESULT=$O(^ICD9(""AB"",ORAMICD,0))"
^XTMP("XPDT",7317,"RTN","ORAM1",34,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",35,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",36,0)="PTCHECK(RESULT,ORAMDFN) ; CHECKS TO SEE IF PT IS IN FILE"
^XTMP("XPDT",7317,"RTN","ORAM1",37,0)=" N ORPTLOC"
^XTMP("XPDT",7317,"RTN","ORAM1",38,0)=" Q:'+$G(ORAMDFN)"
^XTMP("XPDT",7317,"RTN","ORAM1",39,0)=" S RESULT=0"
^XTMP("XPDT",7317,"RTN","ORAM1",40,0)=" I $S('$D(^ORAM(103,ORAMDFN)):1,+$O(^ORAM(103,ORAMDFN,3,0))'>0:1,1:0) S RESULT=1 Q"
^XTMP("XPDT",7317,"RTN","ORAM1",41,0)=" S ORPTLOC=$P($G(^ORAM(103,ORAMDFN,6)),U,2)"
^XTMP("XPDT",7317,"RTN","ORAM1",42,0)=" I ORPTLOC']"""" S RESULT=2 Q"
^XTMP("XPDT",7317,"RTN","ORAM1",43,0)=" I +ORPTLOC,'$L($$GET^XPAR(ORPTLOC_"";SC(^DIV.`""_DUZ(2),""ORAM CLINIC NAME"",1,""I"")) S RESULT=99"
^XTMP("XPDT",7317,"RTN","ORAM1",44,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",45,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",46,0)="PTENTER(RESULT,DFN) ; ENTERS PATIENT INTO FILE WITH ALL DATES = TODAY"
^XTMP("XPDT",7317,"RTN","ORAM1",47,0)=" N DO,DD,DIC,DINUM,X"
^XTMP("XPDT",7317,"RTN","ORAM1",48,0)=" S DIC=""^ORAM(103,"""
^XTMP("XPDT",7317,"RTN","ORAM1",49,0)=" S DIC(0)=""Z"""
^XTMP("XPDT",7317,"RTN","ORAM1",50,0)=" S (DINUM,X)=DFN"
^XTMP("XPDT",7317,"RTN","ORAM1",51,0)=" D FILE^DICN"
^XTMP("XPDT",7317,"RTN","ORAM1",52,0)=" K DO,DD"
^XTMP("XPDT",7317,"RTN","ORAM1",53,0)=" S RESULT=1"
^XTMP("XPDT",7317,"RTN","ORAM1",54,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",55,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",56,0)="ACDATA(RESULT,DFN) ; HEADING DATA"
^XTMP("XPDT",7317,"RTN","ORAM1",57,0)=" N ORAMSTOT,ORAMRTOT,ORAMRAT,ORAMMSGT,ORAMRAT,ORAMBRT,ORAMX,ORI,ORLINE"
^XTMP("XPDT",7317,"RTN","ORAM1",58,0)=" N ORAMD0,ORAMD4,ORAMD5,ORAMD6,ORAMD9,ORAMD15,ORAMD17,ORAMD18"
^XTMP("XPDT",7317,"RTN","ORAM1",59,0)=" N ORAMT4,ORAMT5,ORAMT6,ORAMT9,ORAMT15,ORAMT17,ORAMT18"
^XTMP("XPDT",7317,"RTN","ORAM1",60,0)=" S ORAMX=0"
^XTMP("XPDT",7317,"RTN","ORAM1",61,0)=" I '$D(^ORAM(103,DFN)) D  ;IF NOT IN FILE ALREADY..."
^XTMP("XPDT",7317,"RTN","ORAM1",62,0)=" . N DD,DIC,DINUM,DO,X"
^XTMP("XPDT",7317,"RTN","ORAM1",63,0)=" . S DIC=""^ORAM(103,"""
^XTMP("XPDT",7317,"RTN","ORAM1",64,0)=" . S DIC(0)=""Z"""
^XTMP("XPDT",7317,"RTN","ORAM1",65,0)=" . S (DINUM,X)=DFN"
^XTMP("XPDT",7317,"RTN","ORAM1",66,0)=" . D FILE^DICN"
^XTMP("XPDT",7317,"RTN","ORAM1",67,0)=" . K DO,DD"
^XTMP("XPDT",7317,"RTN","ORAM1",68,0)=" . S ORAMX=1"
^XTMP("XPDT",7317,"RTN","ORAM1",69,0)=" I ORAMX=1 S RESULT(0)=0 G ACDATAQ"
^XTMP("XPDT",7317,"RTN","ORAM1",70,0)=" S ORAMD0=^ORAM(103,DFN,0)"
^XTMP("XPDT",7317,"RTN","ORAM1",71,0)=" S ORI=0 F  S ORI=$O(^ORAM(103,DFN,1,ORI)) Q:+ORI'>0  S ORLINE=$G(^ORAM(103,DFN,1,ORI,0)) S:ORLINE="""" ORLINE="" "" S ORAMSTOT=$G(ORAMSTOT)_U_ORLINE"
^XTMP("XPDT",7317,"RTN","ORAM1",72,0)=" S ORI=0 F  S ORI=$O(^ORAM(103,DFN,2,ORI)) Q:+ORI'>0  S ORLINE=$G(^ORAM(103,DFN,2,ORI,0)) S:ORLINE="""" ORLINE="" "" S ORAMRTOT=$G(ORAMRTOT)_U_ORLINE"
^XTMP("XPDT",7317,"RTN","ORAM1",73,0)=" S ORI=0 F  S ORI=$O(^ORAM(103,DFN,4,ORI)) Q:+ORI'>0  S ORLINE=$G(^ORAM(103,DFN,4,ORI,0)) S:ORLINE="""" ORLINE="" "" S ORAMMSGT=$G(ORAMMSGT)_U_ORLINE"
^XTMP("XPDT",7317,"RTN","ORAM1",74,0)=" S ORI=0 F  S ORI=$O(^ORAM(103,DFN,5,ORI)) Q:+ORI'>0  S ORLINE=$G(^ORAM(103,DFN,5,ORI,0)) S:ORLINE="""" ORLINE="" "" S ORAMRAT=$G(ORAMRAT)_U_ORLINE"
^XTMP("XPDT",7317,"RTN","ORAM1",75,0)=" S ORI=0 F  S ORI=$O(^ORAM(103,DFN,7,ORI)) Q:+ORI'>0  S ORLINE=$G(^ORAM(103,DFN,7,ORI,0)) S:ORLINE="""" ORLINE="" "" S ORAMBRT=$G(ORAMBRT)_U_ORLINE"
^XTMP("XPDT",7317,"RTN","ORAM1",76,0)=" S RESULT(0)=$G(ORAMSTOT)"
^XTMP("XPDT",7317,"RTN","ORAM1",77,0)=" S RESULT(1)=$G(ORAMRTOT)"
^XTMP("XPDT",7317,"RTN","ORAM1",78,0)=" S RESULT(2)=$G(ORAMMSGT)"
^XTMP("XPDT",7317,"RTN","ORAM1",79,0)=" S RESULT(4)=$G(ORAMRAT)"
^XTMP("XPDT",7317,"RTN","ORAM1",80,0)=" S RESULT(5)=$S($G(ORAMBRT)]"""":$P($G(^ORAM(103,DFN,6)),""^"",5)_""^""_$P($G(ORAMBRT),""^"",2,99),1:"""")"
^XTMP("XPDT",7317,"RTN","ORAM1",81,0)=" S ORAMD4=$P(ORAMD0,""^"",4),ORAMD5=$P(ORAMD0,""^"",5),ORAMD6=$P(ORAMD0,""^"",6),ORAMD9=$P(ORAMD0,""^"",9),ORAMD15=$P(ORAMD0,""^"",15),ORAMD17=$P(ORAMD0,""^"",17),ORAMD18=$P(ORAMD0,""^"",18)"
^XTMP("XPDT",7317,"RTN","ORAM1",82,0)=" S ORAMT4=$$FMTE^XLFDT($E($G(ORAMD4),1,12),""2P""),ORAMT5=$$FMTE^XLFDT($E($G(ORAMD5),1,12),""2P""),ORAMT6=$$FMTE^XLFDT($E($G(ORAMD6),1,12),""2P""),ORAMT9=$$FMTE^XLFDT($E($G(ORAMD9),1,12),""2P"")"
^XTMP("XPDT",7317,"RTN","ORAM1",83,0)=" S ORAMT15=$$FMTE^XLFDT($E($G(ORAMD15),1,12),""2P""),ORAMT17=$$FMTE^XLFDT($E($G(ORAMD17),1,12),""2P""),ORAMT18=$$FMTE^XLFDT($E($G(ORAMD18),1,12),""2P"")"
^XTMP("XPDT",7317,"RTN","ORAM1",84,0)=" S:$L($P(ORAMT4,""/"",1))=1 $P(ORAMT4,""/"",1)=""0""_$P(ORAMT4,""/"",1)"
^XTMP("XPDT",7317,"RTN","ORAM1",85,0)=" S:$L($P(ORAMT4,""/"",2))=1 $P(ORAMT4,""/"",2)=""0""_$P(ORAMT4,""/"",2)"
^XTMP("XPDT",7317,"RTN","ORAM1",86,0)=" S:$L($P(ORAMT15,""/"",1))=1 $P(ORAMT15,""/"",1)=""0""_$P(ORAMT15,""/"",1)"
^XTMP("XPDT",7317,"RTN","ORAM1",87,0)=" S:$L($P(ORAMT15,""/"",2))=1 $P(ORAMT15,""/"",2)=""0""_$P(ORAMT15,""/"",2)"
^XTMP("XPDT",7317,"RTN","ORAM1",88,0)=" S:$L($P(ORAMT17,""/"",1))=1 $P(ORAMT17,""/"",1)=""0""_$P(ORAMT17,""/"",1)"
^XTMP("XPDT",7317,"RTN","ORAM1",89,0)=" S:$L($P(ORAMT17,""/"",2))=1 $P(ORAMT17,""/"",2)=""0""_$P(ORAMT17,""/"",2)"
^XTMP("XPDT",7317,"RTN","ORAM1",90,0)=" S:$L($P(ORAMT18,""/"",1))=1 $P(ORAMT18,""/"",1)=""0""_$P(ORAMT18,""/"",1)"
^XTMP("XPDT",7317,"RTN","ORAM1",91,0)=" S:$L($P(ORAMT18,""/"",2))=1 $P(ORAMT18,""/"",2)=""0""_$P(ORAMT18,""/"",2)"
^XTMP("XPDT",7317,"RTN","ORAM1",92,0)=" S $P(ORAMD0,""^"",4)=$G(ORAMT4),$P(ORAMD0,""^"",5)=$G(ORAMT5),$P(ORAMD0,""^"",6)=$G(ORAMT6),$P(ORAMD0,""^"",9)=$G(ORAMT9),$P(ORAMD0,""^"",15)=$G(ORAMT15),$P(ORAMD0,""^"",17)=$G(ORAMT17),$P(ORAMD0,""^"",18)=$G(ORAMT18)"
^XTMP("XPDT",7317,"RTN","ORAM1",93,0)=" S RESULT(3)=ORAMD0 S:$D(^ORAM(103,DFN,6)) RESULT(3)=RESULT(3)_""^""_$P(^ORAM(103,DFN,6),""^"")"
^XTMP("XPDT",7317,"RTN","ORAM1",94,0)="ACDATAQ Q"
^XTMP("XPDT",7317,"RTN","ORAM1",95,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",96,0)="ADDTOP(RESULT,TOPARR) ; File ANTICOAG data"
^XTMP("XPDT",7317,"RTN","ORAM1",97,0)=" N ORAM0,SI,RISK,PEEP,ORAMSIL,ORAMRL,ORAMPEPL,ORAMDAY,ORAMST,ORAMBACK,ORAMSTP,ORAMOR,ORAMFB,ORAMREM,ORAMRML,ORAMR,ORAMC"
^XTMP("XPDT",7317,"RTN","ORAM1",98,0)=" N ORAMBRG,ORAMBRGC,ORAMBRGL,OLDRTN,DFN,R,X"
^XTMP("XPDT",7317,"RTN","ORAM1",99,0)=" D NOW^%DTC S ORAMDAY=X"
^XTMP("XPDT",7317,"RTN","ORAM1",100,0)=" S DFN=TOPARR(0),ORAM0=TOPARR(1),SI=TOPARR(2),RISK=TOPARR(3),PEEP=TOPARR(4),ORAMREM=TOPARR(5)"
^XTMP("XPDT",7317,"RTN","ORAM1",101,0)=" S ORAMBRG=$G(TOPARR(6)),ORAMBRGC=$G(TOPARR(7))"
^XTMP("XPDT",7317,"RTN","ORAM1",102,0)=" S OLDRTN=$P($G(^ORAM(103,DFN,0)),""^"",4)"
^XTMP("XPDT",7317,"RTN","ORAM1",103,0)=" I SI'="""" K ^ORAM(103,DFN,1) S ORAMSIL=$L(SI,""^""),^ORAM(103,DFN,1,0)=""^^""_ORAMSIL_""^""_ORAMSIL_""^""_ORAMDAY_""^"" F R=1:1:ORAMSIL D"
^XTMP("XPDT",7317,"RTN","ORAM1",104,0)=" . S ^ORAM(103,DFN,1,R,0)=$P(SI,""^"",R)"
^XTMP("XPDT",7317,"RTN","ORAM1",105,0)=" I RISK'="""" K ^ORAM(103,DFN,2) S ORAMRL=$L(RISK,""^""),^ORAM(103,DFN,2,0)=""^^""_ORAMRL_""^""_ORAMRL_""^""_ORAMDAY_""^"" F R=1:1:ORAMRL D"
^XTMP("XPDT",7317,"RTN","ORAM1",106,0)=" . S ^ORAM(103,DFN,2,R,0)=$P(RISK,""^"",R)"
^XTMP("XPDT",7317,"RTN","ORAM1",107,0)=" I PEEP'="""" K ^ORAM(103,DFN,4) S ORAMPEPL=$L(PEEP,""^""),^ORAM(103,DFN,4,0)=""^^""_ORAMPEPL_""^""_ORAMPEPL_""^""_ORAMDAY_""^"" F R=1:1:ORAMPEPL D"
^XTMP("XPDT",7317,"RTN","ORAM1",108,0)=" . S ^ORAM(103,DFN,4,R,0)=$P(PEEP,""^"",R)"
^XTMP("XPDT",7317,"RTN","ORAM1",109,0)=" K ^ORAM(103,DFN,5)"
^XTMP("XPDT",7317,"RTN","ORAM1",110,0)=" I ORAMREM'="""" D"
^XTMP("XPDT",7317,"RTN","ORAM1",111,0)=" . S ORAMRML=$L(ORAMREM,""^""),^ORAM(103,DFN,5,0)=""^^""_ORAMRML_""^""_ORAMRML_""^""_ORAMDAY_""^"""
^XTMP("XPDT",7317,"RTN","ORAM1",112,0)=" . F R=1:1:ORAMRML S ^ORAM(103,DFN,5,R,0)=$P(ORAMREM,""^"",R)"
^XTMP("XPDT",7317,"RTN","ORAM1",113,0)=" S $P(^ORAM(103,DFN,6),U,5)=+ORAMBRG"
^XTMP("XPDT",7317,"RTN","ORAM1",114,0)=" K ^ORAM(103,DFN,7)"
^XTMP("XPDT",7317,"RTN","ORAM1",115,0)=" I +ORAMBRG,(ORAMBRGC]"""") D"
^XTMP("XPDT",7317,"RTN","ORAM1",116,0)=" . S ORAMBRGL=$L(ORAMBRGC,""^""),^ORAM(103,DFN,7,0)=""^^""_ORAMBRGL_""^""_ORAMBRGL_""^""_ORAMDAY_""^"""
^XTMP("XPDT",7317,"RTN","ORAM1",117,0)=" . F R=1:1:ORAMBRGL S ^ORAM(103,DFN,7,R,0)=$P(ORAMBRGC,""^"",R)"
^XTMP("XPDT",7317,"RTN","ORAM1",118,0)=" I $P($G(ORAM0),""^"",4)'="""" S X="""",ORAMBACK=$P(ORAM0,""^"",4) D DT^DILF(""TS"",ORAMBACK,.X) S $P(ORAM0,""^"",4)=X"
^XTMP("XPDT",7317,"RTN","ORAM1",119,0)=" I $P($G(ORAM0),""^"",15)'="""" S X="""",ORAMFB=$P(ORAM0,""^"",15) D DT^DILF(,ORAMFB,.X) S $P(ORAM0,""^"",15)=X"
^XTMP("XPDT",7317,"RTN","ORAM1",120,0)=" I $P($G(ORAM0),""^"",17)'="""" S X="""",ORAMC=$P(ORAM0,""^"",17) D DT^DILF(,ORAMC,.X) S $P(ORAM0,""^"",17)=X"
^XTMP("XPDT",7317,"RTN","ORAM1",121,0)=" I $P($G(ORAM0),""^"",18)'="""" S X="""",ORAMR=$P(ORAM0,""^"",18) D DT^DILF(,ORAMR,.X) S $P(ORAM0,""^"",18)=X"
^XTMP("XPDT",7317,"RTN","ORAM1",122,0)=" I OLDRTN'="""" K ^ORAM(103,""L"",OLDRTN,DFN)"
^XTMP("XPDT",7317,"RTN","ORAM1",123,0)=" S ^ORAM(103,DFN,0)=ORAM0 S:$P($G(ORAM0),""^"",4)'="""" ^ORAM(103,""L"",$P(ORAM0,""^"",4),DFN)="""""
^XTMP("XPDT",7317,"RTN","ORAM1",124,0)=" I $P(^ORAM(103,DFN,0),""^"",13)="""" S $P(^ORAM(103,DFN,0),""^"",13)=""SAVE"""
^XTMP("XPDT",7317,"RTN","ORAM1",125,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",126,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",127,0)="OUTINR(RESULT,ORAMINR) ; INR VALUES FROM OUTSIDE LAB"
^XTMP("XPDT",7317,"RTN","ORAM1",128,0)=" N ORAMLEN,ORAMPI,ORAMRI,ORAMZANY,ORAMHDT,ORAMNDT"
^XTMP("XPDT",7317,"RTN","ORAM1",129,0)=" S ORAMLEN=$L($G(ORAMINR),""^""),ORAMRI=0"
^XTMP("XPDT",7317,"RTN","ORAM1",130,0)=" F ORAMPI=1:2:ORAMLEN D"
^XTMP("XPDT",7317,"RTN","ORAM1",131,0)=" . N %H,ORAMDT,X"
^XTMP("XPDT",7317,"RTN","ORAM1",132,0)=" . S ORAMDT=$P(ORAMINR,""^"",ORAMPI+1) I $L(ORAMDT) D DT^DILF(""E"",ORAMDT,.ORAMZANY) S X=ORAMZANY D H^%DTC S ORAMHDT=%H,ORAMNDT=$$FMTE^XLFDT(X,""2P"")"
^XTMP("XPDT",7317,"RTN","ORAM1",133,0)=" . I $L(ORAMDT) S RESULT(ORAMRI)=$P(ORAMINR,""^"",ORAMPI)_""^""_$G(ORAMHDT)_""^""_$G(ORAMNDT)"
^XTMP("XPDT",7317,"RTN","ORAM1",134,0)=" . E  S RESULT(ORAMRI)=""^^"""
^XTMP("XPDT",7317,"RTN","ORAM1",135,0)=" . S ORAMRI=ORAMRI+1"
^XTMP("XPDT",7317,"RTN","ORAM1",136,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",137,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",138,0)="PCGOAL(RESULT,DFN,CMPLX) ; % of time Pt in current goal"
^XTMP("XPDT",7317,"RTN","ORAM1",139,0)=" N ORAMSNO,ORAMPC,R,ORAMGOOD,ORAMDATE"
^XTMP("XPDT",7317,"RTN","ORAM1",140,0)=" S R=0,ORAMGOOD=0,ORAMDATE=0"
^XTMP("XPDT",7317,"RTN","ORAM1",141,0)=" S ORAMSNO=0 F  S ORAMSNO=$O(^ORAM(103,DFN,3,ORAMSNO)) Q:'ORAMSNO  D"
^XTMP("XPDT",7317,"RTN","ORAM1",142,0)=" . N ORAMD0,ORAMINR,ORAMGOAL,ORAMGLOW,ORAMHIGH,LCNT,ORAMND"
^XTMP("XPDT",7317,"RTN","ORAM1",143,0)=" . S ORAMD0=$G(^ORAM(103,DFN,3,ORAMSNO,0)),LCNT=$P($G(^ORAM(103,DFN,3,ORAMSNO,1,0)),""^"",3)-1"
^XTMP("XPDT",7317,"RTN","ORAM1",144,0)=" . I $G(CMPLX)=1,$G(^ORAM(103,DFN,3,ORAMSNO,1,LCNT,0))[""COMPLEX PATIENT"" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",145,0)=" . S ORAMND=$P(ORAMD0,""^""),ORAMINR=$P(ORAMD0,""^"",3),ORAMGOAL=$P(ORAMD0,""^"",12),ORAMGLOW=$P(ORAMGOAL,""-""),ORAMHIGH=$P(ORAMGOAL,""-"",2) S:ORAMHIGH["" "" ORAMHIGH=$P(ORAMHIGH,"" "",2)"
^XTMP("XPDT",7317,"RTN","ORAM1",146,0)=" . S ORAMGLOW=ORAMGLOW-(.1*ORAMGLOW),ORAMHIGH=ORAMHIGH+(.1*ORAMHIGH)"
^XTMP("XPDT",7317,"RTN","ORAM1",147,0)=" . I (ORAMND'=ORAMDATE)&(ORAMINR) S R=R+1,ORAMDATE=ORAMND I ((ORAMINR'<ORAMGLOW)&(ORAMINR'>ORAMHIGH)) S ORAMGOOD=ORAMGOOD+1"
^XTMP("XPDT",7317,"RTN","ORAM1",148,0)=" I R>0 S ORAMPC=(ORAMGOOD/R)*100,ORAMPC=$E(ORAMPC,1,4)"
^XTMP("XPDT",7317,"RTN","ORAM1",149,0)=" S RESULT=$G(ORAMPC)_""^""_$G(R)"
^XTMP("XPDT",7317,"RTN","ORAM1",150,0)="PCGOALQ Q"
^XTMP("XPDT",7317,"RTN","ORAM1",151,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",152,0)="COMPTEST(RESULT,COMMARR) ; File Flow Sheet Data"
^XTMP("XPDT",7317,"RTN","ORAM1",153,0)=" ; RPC: ORAM1 COMPTEST"
^XTMP("XPDT",7317,"RTN","ORAM1",154,0)=" N ORAMDFN,ORAMZERO,ORAMCOMM,ORAMDT,ORAMX,ORAMCL,ORAMTEMP,ORAMSAVE,ORAMRD,ORAMCOMPL,ORAMCCNT,DA,DIK,R,X"
^XTMP("XPDT",7317,"RTN","ORAM1",155,0)=" N ORAMICNT,ORAMIOFF"
^XTMP("XPDT",7317,"RTN","ORAM1",156,0)=" S ORAMDFN=COMMARR(0),ORAMZERO=COMMARR(1),ORAMSAVE=COMMARR(2),ORAMRD=COMMARR(3),ORAMCOMPL=COMMARR(4),ORAMCCNT=COMMARR(5)"
^XTMP("XPDT",7317,"RTN","ORAM1",157,0)=" S ORAMIOFF=+ORAMCCNT+6,ORAMICNT=COMMARR(ORAMIOFF)"
^XTMP("XPDT",7317,"RTN","ORAM1",158,0)=" S ORAMTEMP=$P(ORAMZERO,""^"",1) D DT^DILF(,ORAMTEMP,.X) S $P(ORAMZERO,""^"",1)=X"
^XTMP("XPDT",7317,"RTN","ORAM1",159,0)=" S ORAMDT=$$NOW^XLFDT,$P(ORAMZERO,""^"",9)=ORAMDT"
^XTMP("XPDT",7317,"RTN","ORAM1",160,0)=" S ORAMX=$O(^ORAM(103,ORAMDFN,3,"" ""),-1)"
^XTMP("XPDT",7317,"RTN","ORAM1",161,0)=" I 'ORAMX S ORAMX=0"
^XTMP("XPDT",7317,"RTN","ORAM1",162,0)=" I $P(^ORAM(103,ORAMDFN,0),""^"",13)=""TEMPSAVE"" K DIK,DA S DIK=""^ORAM(103,""_ORAMDFN_"",3,"",DA(1)=ORAMDFN,DA=ORAMX D ^DIK"
^XTMP("XPDT",7317,"RTN","ORAM1",163,0)=" I $P(^ORAM(103,ORAMDFN,0),""^"",13)=""SAVE"" S ORAMX=ORAMX+1"
^XTMP("XPDT",7317,"RTN","ORAM1",164,0)=" ; Execute KILL Logic for cross-refs on update"
^XTMP("XPDT",7317,"RTN","ORAM1",165,0)=" I $D(^ORAM(103,ORAMDFN)) D"
^XTMP("XPDT",7317,"RTN","ORAM1",166,0)=" . S DIK=""^ORAM(103,"""
^XTMP("XPDT",7317,"RTN","ORAM1",167,0)=" . S DA=ORAMDFN"
^XTMP("XPDT",7317,"RTN","ORAM1",168,0)=" . D IX2^DIK"
^XTMP("XPDT",7317,"RTN","ORAM1",169,0)=" S ^ORAM(103,ORAMDFN,3,0)=""^103.011DA^""_ORAMX_""^""_ORAMX"
^XTMP("XPDT",7317,"RTN","ORAM1",170,0)=" S ^ORAM(103,ORAMDFN,3,ORAMX,0)=ORAMZERO"
^XTMP("XPDT",7317,"RTN","ORAM1",171,0)=" I $P(ORAMRD,U,4)]"""" S $P(^ORAM(103,ORAMDFN,6),U,1,4)=ORAMRD"
^XTMP("XPDT",7317,"RTN","ORAM1",172,0)=" E  S $P(^ORAM(103,ORAMDFN,6),U,1,3)=$P(ORAMRD,U,1,3)"
^XTMP("XPDT",7317,"RTN","ORAM1",173,0)=" ; If there are comments, file them"
^XTMP("XPDT",7317,"RTN","ORAM1",174,0)=" I +ORAMCCNT>0 F R=1:1:(ORAMCCNT) D"
^XTMP("XPDT",7317,"RTN","ORAM1",175,0)=" . S ^ORAM(103,ORAMDFN,3,ORAMX,1,R,0)=COMMARR(R+5)"
^XTMP("XPDT",7317,"RTN","ORAM1",176,0)=" . S ^ORAM(103,ORAMDFN,3,ORAMX,1,0)=""^^""_ORAMCCNT_""^""_ORAMCCNT_""^""_$P(ORAMZERO,""^"",1)_""^"""
^XTMP("XPDT",7317,"RTN","ORAM1",177,0)=" ; If there are complications, file them"
^XTMP("XPDT",7317,"RTN","ORAM1",178,0)=" I $L(ORAMCOMPL)>0 D"
^XTMP("XPDT",7317,"RTN","ORAM1",179,0)=" . N P1,P2,X"
^XTMP("XPDT",7317,"RTN","ORAM1",180,0)=" . S P1=$P(ORAMCOMPL,""|""),P2=$P(ORAMCOMPL,""|"",2)"
^XTMP("XPDT",7317,"RTN","ORAM1",181,0)=" . I P1>99 S P1=2 ;CLOT in the 100 range..."
^XTMP("XPDT",7317,"RTN","ORAM1",182,0)=" . E  I P1#10>0 S P1=1 ;MAJOR BLEED"
^XTMP("XPDT",7317,"RTN","ORAM1",183,0)=" . E  I P1=10 S P1=3 ;MINOR BLEED"
^XTMP("XPDT",7317,"RTN","ORAM1",184,0)=" . S:+$G(P1) $P(^ORAM(103,ORAMDFN,3,ORAMX,0),""^"",2)=P1"
^XTMP("XPDT",7317,"RTN","ORAM1",185,0)=" . F X=1:1:$L(P2,""^"") D"
^XTMP("XPDT",7317,"RTN","ORAM1",186,0)=" .. S ^ORAM(103,ORAMDFN,3,ORAMX,2,X,0)=$P(P2,""^"",X)"
^XTMP("XPDT",7317,"RTN","ORAM1",187,0)=" . S ^ORAM(103,ORAMDFN,3,ORAMX,2,0)=""^^""_$L(P2,""^"")-1_""^""_$L(P2,""^"")-1_""^""_$P(ORAMZERO,""^"",1)_""^"""
^XTMP("XPDT",7317,"RTN","ORAM1",188,0)=" ; If there are Patient Instructions, file them"
^XTMP("XPDT",7317,"RTN","ORAM1",189,0)=" I +ORAMICNT>0 F R=1:1:(ORAMICNT) D"
^XTMP("XPDT",7317,"RTN","ORAM1",190,0)=" . N ORLINE S ORLINE=COMMARR(R+ORAMIOFF)"
^XTMP("XPDT",7317,"RTN","ORAM1",191,0)=" . S ^ORAM(103,ORAMDFN,3,ORAMX,3,R,0)=$S(ORLINE="""":"" "",1:ORLINE)"
^XTMP("XPDT",7317,"RTN","ORAM1",192,0)=" . S ^ORAM(103,ORAMDFN,3,ORAMX,3,0)=""^^""_ORAMICNT_""^""_ORAMICNT_""^""_$P(ORAMZERO,""^"",1)_""^"""
^XTMP("XPDT",7317,"RTN","ORAM1",193,0)=" S ^ORAM(103,ORAMDFN,3,""B"",$P(ORAMZERO,""^"",1),ORAMX)="""""
^XTMP("XPDT",7317,"RTN","ORAM1",194,0)=" S $P(^ORAM(103,ORAMDFN,0),""^"",13)=ORAMSAVE"
^XTMP("XPDT",7317,"RTN","ORAM1",195,0)=" ; Update all cross-refs for Flow Sheet entry"
^XTMP("XPDT",7317,"RTN","ORAM1",196,0)=" S DIK=""^ORAM(103,"""
^XTMP("XPDT",7317,"RTN","ORAM1",197,0)=" S DA=ORAMDFN"
^XTMP("XPDT",7317,"RTN","ORAM1",198,0)=" D IX^DIK"
^XTMP("XPDT",7317,"RTN","ORAM1",199,0)=" S RESULT=1"
^XTMP("XPDT",7317,"RTN","ORAM1",200,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",201,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",202,0)="FLOWTT(RESULT,DFN) ; GETS ANTICOAG FLOWSHEET DATA"
^XTMP("XPDT",7317,"RTN","ORAM1",203,0)=" N FSARR,COMARR,ORAMI,ORI,ORX"
^XTMP("XPDT",7317,"RTN","ORAM1",204,0)=" S (ORI,ORAMI,ORX)=0"
^XTMP("XPDT",7317,"RTN","ORAM1",205,0)=" F  S ORI=$O(^ORAM(103,DFN,3,""B"",ORI)) Q:+ORI'>0  D"
^XTMP("XPDT",7317,"RTN","ORAM1",206,0)=" . N ORJ S ORJ=0"
^XTMP("XPDT",7317,"RTN","ORAM1",207,0)=" . F  S ORJ=$O(^ORAM(103,DFN,3,""B"",ORI,ORJ)) Q:+ORJ'>0  D"
^XTMP("XPDT",7317,"RTN","ORAM1",208,0)=" .. N ORAMACFS,ORAMCOM,ORAMCOMP,ORAMCC,ORAMPROV,ORAMLCNT,ORAMTOT,ORAMT"
^XTMP("XPDT",7317,"RTN","ORAM1",209,0)=" .. S ORAMACFS=^ORAM(103,DFN,3,ORJ,0),ORAMCC=$P(ORAMACFS,U,2)"
^XTMP("XPDT",7317,"RTN","ORAM1",210,0)=" .. S ORAMCOM=$P(ORAMACFS,U),$P(ORAMACFS,U)=$$FMTE^XLFDT(ORAMCOM,""2P""),$P(ORAMACFS,U,2)=ORJ"
^XTMP("XPDT",7317,"RTN","ORAM1",211,0)=" .. S ORAMPROV=$P(ORAMACFS,U,10) I +$G(ORAMPROV) S $P(ORAMACFS,U,10)=$P(^VA(200,ORAMPROV,0),U)"
^XTMP("XPDT",7317,"RTN","ORAM1",212,0)=" .. S ORAMLCNT=+$O(^ORAM(103,DFN,3,ORJ,1,""""),-1)"
^XTMP("XPDT",7317,"RTN","ORAM1",213,0)=" .. S ORAMCOMP=$O(^ORAM(103,DFN,3,ORJ,2,""""),-1)"
^XTMP("XPDT",7317,"RTN","ORAM1",214,0)=" .. S ORAMT=ORAMLCNT"
^XTMP("XPDT",7317,"RTN","ORAM1",215,0)=" .. S:+$G(ORAMCC) ORAMT=$G(ORAMLCNT)_"",""_$G(ORAMCOMP)"
^XTMP("XPDT",7317,"RTN","ORAM1",216,0)=" .. S ORAMTOT=$G(ORAMLCNT)+$G(ORAMCOMP)"
^XTMP("XPDT",7317,"RTN","ORAM1",217,0)=" .. I +$G(ORAMTOT) D"
^XTMP("XPDT",7317,"RTN","ORAM1",218,0)=" ... S RESULT(ORAMI)=$G(ORAMT)_""|""_$G(ORAMACFS)"
^XTMP("XPDT",7317,"RTN","ORAM1",219,0)=" ... I +$G(ORAMLCNT) F ORX=(ORAMI+1):1:(ORAMLCNT+ORAMI) S RESULT(ORX)=$G(^ORAM(103,DFN,3,ORJ,1,(ORX-ORAMI),0))"
^XTMP("XPDT",7317,"RTN","ORAM1",220,0)=" ... I +$G(ORAMCC),+$G(ORAMCOMP) D"
^XTMP("XPDT",7317,"RTN","ORAM1",221,0)=" .... S ORAMI=ORX+2,RESULT(ORAMI)=""Complications noted:"""
^XTMP("XPDT",7317,"RTN","ORAM1",222,0)=" .... F ORX=(ORAMI+2):1:(ORAMCOMP+ORAMI) D"
^XTMP("XPDT",7317,"RTN","ORAM1",223,0)=" ..... N ORAMCMPL"
^XTMP("XPDT",7317,"RTN","ORAM1",224,0)=" ..... S ORAMCMPL=$G(^ORAM(103,DFN,3,ORJ,2,(ORX-ORAMI),0))"
^XTMP("XPDT",7317,"RTN","ORAM1",225,0)=" ..... S RESULT(ORX)=$S((ORAMCMPL[""MB:"")!(ORAMCMPL[""C:""):$P(ORAMCMPL,"":"",2),1:ORAMCMPL)"
^XTMP("XPDT",7317,"RTN","ORAM1",226,0)=" .. E  S RESULT(ORAMI+1)=""0|""_$G(ORAMACFS)"
^XTMP("XPDT",7317,"RTN","ORAM1",227,0)=" .. S ORAMI=ORX+1"
^XTMP("XPDT",7317,"RTN","ORAM1",228,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",229,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",230,0)="LOGIT(RESULT,FSARRAY,ORAMCOMP) ; RPC= ORAM1 LOG"
^XTMP("XPDT",7317,"RTN","ORAM1",231,0)=" N ORAMDATE,ORAMINR,ORAMPTN,ORAMTWD,ORAMLOG,ORAMLOGN,TODAY,TTIME,COUNT,ORAMODFN,ORAMOD,ORAMND,ORAMNEWD,AROW"
^XTMP("XPDT",7317,"RTN","ORAM1",232,0)=" N %,DA,DIK,ORAMDFN,ORAMRSF,R,X"
^XTMP("XPDT",7317,"RTN","ORAM1",233,0)=" S RESULT=0"
^XTMP("XPDT",7317,"RTN","ORAM1",234,0)=" D NOW^%DTC S TODAY=X,TTIME=%"
^XTMP("XPDT",7317,"RTN","ORAM1",235,0)=" ;FIRST GET THE OLD FLOW SHEET DATA AND SAVE TO THE LOG FILE"
^XTMP("XPDT",7317,"RTN","ORAM1",236,0)=" S ORAMDFN=$G(FSARRAY(0)),AROW=$G(FSARRAY(1))"
^XTMP("XPDT",7317,"RTN","ORAM1",237,0)=" S ORAMDATE=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),""^""),ORAMINR=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),""^"",3),ORAMPTN=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),""^"",8),ORAMTWD=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),""^"",6)"
^XTMP("XPDT",7317,"RTN","ORAM1",238,0)=" S ORAMODFN=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),""^"",10),ORAMOD=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),""^"",9)"
^XTMP("XPDT",7317,"RTN","ORAM1",239,0)=" S ORAMLOG=""Original FS ""_AROW_"": DATE=""_$G(ORAMDATE)_"", INR=""_$G(ORAMINR)_"", PT NOTIFIED=""_$G(ORAMPTN)_"", TWD=""_$G(ORAMTWD)_""; ""_ORAMODFN_"" (""_ORAMOD_""): EDITED: ""_FSARRAY(6)_""(""_TODAY_"")"""
^XTMP("XPDT",7317,"RTN","ORAM1",240,0)=" S ORAMLOGN=$P($G(^ORAM(103,ORAMDFN,3,AROW,""LOG"",0)),""^"",3)+1"
^XTMP("XPDT",7317,"RTN","ORAM1",241,0)=" S ^ORAM(103,ORAMDFN,3,AROW,""LOG"",ORAMLOGN,0)=ORAMLOG"
^XTMP("XPDT",7317,"RTN","ORAM1",242,0)=" K ^ORAM(103,ORAMDFN,3,""B"",$G(ORAMDATE),AROW)"
^XTMP("XPDT",7317,"RTN","ORAM1",243,0)=" F ORAMRSF=1:1:$P($G(^ORAM(103,ORAMDFN,3,AROW,1,0)),""^"",3) S COUNT=ORAMLOGN+ORAMRSF,^ORAM(103,ORAMDFN,3,AROW,""LOG"",COUNT,0)=^ORAM(103,ORAMDFN,3,AROW,1,ORAMRSF,0)"
^XTMP("XPDT",7317,"RTN","ORAM1",244,0)=" S ^ORAM(103,ORAMDFN,3,AROW,""LOG"",0)=""^^""_$G(COUNT)_""^""_$G(COUNT)_""^""_TODAY"
^XTMP("XPDT",7317,"RTN","ORAM1",245,0)=" ;NOW SET NEW INFO FOR THE FLOW SHEET ENTRY"
^XTMP("XPDT",7317,"RTN","ORAM1",246,0)=" ;Array order is: DFN;ARow;date;inr;ptnotified;twd;DUZ;#comment lines;comments"
^XTMP("XPDT",7317,"RTN","ORAM1",247,0)=" S ORAMNEWD=$G(FSARRAY(2)) D DT^DILF(,ORAMNEWD,.X) S ORAMNEWD=X"
^XTMP("XPDT",7317,"RTN","ORAM1",248,0)=" S $P(^ORAM(103,ORAMDFN,3,AROW,0),""^"")=$G(ORAMNEWD),$P(^ORAM(103,ORAMDFN,3,AROW,0),""^"",3)=$G(FSARRAY(3)),$P(^ORAM(103,ORAMDFN,3,AROW,0),""^"",8)=$G(FSARRAY(4)),$P(^ORAM(103,ORAMDFN,3,AROW,0),""^"",6)=$G(FSARRAY(5))"
^XTMP("XPDT",7317,"RTN","ORAM1",249,0)=" S $P(^ORAM(103,ORAMDFN,3,AROW,0),""^"",2)=$G(ORAMCOMP)"
^XTMP("XPDT",7317,"RTN","ORAM1",250,0)=" S $P(^ORAM(103,ORAMDFN,3,AROW,0),""^"",10)=$G(FSARRAY(6)),$P(^ORAM(103,ORAMDFN,3,AROW,0),""^"",9)=TTIME"
^XTMP("XPDT",7317,"RTN","ORAM1",251,0)=" I $G(FSARRAY(7))'="""" K ^ORAM(103,ORAMDFN,3,AROW,1) F R=1:1:$G(FSARRAY(7)) D"
^XTMP("XPDT",7317,"RTN","ORAM1",252,0)=" . S ^ORAM(103,ORAMDFN,3,AROW,1,R,0)=$G(FSARRAY(R+7))"
^XTMP("XPDT",7317,"RTN","ORAM1",253,0)=" S ^ORAM(103,ORAMDFN,3,AROW,1,0)=""^^""_$G(FSARRAY(7))_""^""_$G(FSARRAY(7))_""^""_TODAY_""^""  ;$E(ORAMDT,1,7)_""^"""
^XTMP("XPDT",7317,"RTN","ORAM1",254,0)=" S ^ORAM(103,ORAMDFN,3,""B"",$G(ORAMNEWD),AROW)="""""
^XTMP("XPDT",7317,"RTN","ORAM1",255,0)=" S DIK=""^ORAM(103,"""
^XTMP("XPDT",7317,"RTN","ORAM1",256,0)=" S DA(1)=ORAMDFN,DA=AROW"
^XTMP("XPDT",7317,"RTN","ORAM1",257,0)=" D IX^DIK"
^XTMP("XPDT",7317,"RTN","ORAM1",258,0)=" S RESULT=1"
^XTMP("XPDT",7317,"RTN","ORAM1",259,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",260,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",261,0)="LOCK(RESULT,DATA) ; Locks form   RPC=ORAM1 LOCK"
^XTMP("XPDT",7317,"RTN","ORAM1",262,0)=" N X"
^XTMP("XPDT",7317,"RTN","ORAM1",263,0)=" S RESULT=0"
^XTMP("XPDT",7317,"RTN","ORAM1",264,0)=" Q:$P($G(DATA),""^"")="""""
^XTMP("XPDT",7317,"RTN","ORAM1",265,0)=" Q:$D(^ORAM(103,$P(DATA,""^"")))=0"
^XTMP("XPDT",7317,"RTN","ORAM1",266,0)=" D NOW^%DTC N ORAMTDAY S ORAMTDAY=X"
^XTMP("XPDT",7317,"RTN","ORAM1",267,0)=" I $P(^ORAM(103,$P(DATA,""^""),0),""^"",18,19)="""" S $P(^ORAM(103,$P(DATA,""^""),0),""^"",18)=""^"""
^XTMP("XPDT",7317,"RTN","ORAM1",268,0)=" S $P(^ORAM(103,$P(DATA,""^""),0),""^"",19)=1_""|""_$P(^VA(200,$P(DATA,""^"",2),0),""^"")_""|""_ORAMTDAY,RESULT=1"
^XTMP("XPDT",7317,"RTN","ORAM1",269,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",270,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",271,0)="UNLOCK(RESULT,DFN) ; Unlocks form  RPC=ORAM1 UNLOCK"
^XTMP("XPDT",7317,"RTN","ORAM1",272,0)=" S RESULT=0"
^XTMP("XPDT",7317,"RTN","ORAM1",273,0)=" Q:DFN<1"
^XTMP("XPDT",7317,"RTN","ORAM1",274,0)=" Q:$D(^ORAM(103,DFN))=0"
^XTMP("XPDT",7317,"RTN","ORAM1",275,0)=" S $P(^ORAM(103,DFN,0),""^"",19)=0,RESULT=1"
^XTMP("XPDT",7317,"RTN","ORAM1",276,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",277,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",278,0)="GETPT(RESULT) ; Get Pt list  RPC=ORAM1 PT LIST"
^XTMP("XPDT",7317,"RTN","ORAM1",279,0)=" N ORAMPT"
^XTMP("XPDT",7317,"RTN","ORAM1",280,0)=" S ORAMPT=0 F  S ORAMPT=$O(^ORAM(103,""B"",ORAMPT)) Q:ORAMPT=""""  D"
^XTMP("XPDT",7317,"RTN","ORAM1",281,0)=" . S RESULT($G(ORAMPT))=$G(ORAMPT)_""^""_$P(^DPT(ORAMPT,0),""^"")_""^""_$E($P(^DPT(ORAMPT,0),""^"",9),6,9)"
^XTMP("XPDT",7317,"RTN","ORAM1",282,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",283,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM1",284,0)="SETHCT(RESULT,ORAMORD) ; SET HCT LAB ITEM NUMBER"
^XTMP("XPDT",7317,"RTN","ORAM1",285,0)=" Q:'+$G(ORAMORD)"
^XTMP("XPDT",7317,"RTN","ORAM1",286,0)=" N ORAMX,ORAML60,ORAMCH S ORAMX=0 F  S ORAMX=$O(^ORD(101.43,$G(ORAMORD),10,ORAMX)) Q:'+$G(ORAMX)!+$G(ORAMCH)  D"
^XTMP("XPDT",7317,"RTN","ORAM1",287,0)=" . I $P(^ORD(101.43,$G(ORAMORD),10,ORAMX,0),""^"")[""HCT"" S ORAML60=+$P(^(0),""^"",2)"
^XTMP("XPDT",7317,"RTN","ORAM1",288,0)=" . I +$G(ORAML60) S ORAMCH=$P($P(^LAB(60,ORAML60,0),""^"",5),"";"",2) S RESULT=ORAMCH"
^XTMP("XPDT",7317,"RTN","ORAM1",289,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM1",290,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM2")="0^3^B120270114^n/a"
^XTMP("XPDT",7317,"RTN","ORAM2",1,0)="ORAM2 ;POR/RSF - ANTICOAGULATION MANAGEMENT RPCS (3 of 4) ;01/29/10  21:37"
^XTMP("XPDT",7317,"RTN","ORAM2",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307**;Dec 17, 1997;Build 60"
^XTMP("XPDT",7317,"RTN","ORAM2",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7317,"RTN","ORAM2",4,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM2",5,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM2",6,0)="ALLGOAL(RESULT,DAYS,CLINIC) ; last inr for all pts seen in last x days"
^XTMP("XPDT",7317,"RTN","ORAM2",7,0)=" ;;RPC = ORAM2 ALLGOAL"
^XTMP("XPDT",7317,"RTN","ORAM2",8,0)=" N ORAMDFN,ORAMNOW,ORAMCUT,ORAMCNT,ORAMPC,ORAMGOOD,ORAMBAD,ORAMBL"
^XTMP("XPDT",7317,"RTN","ORAM2",9,0)=" S ORAMDFN=0,ORAMCNT=0,ORAMGOOD=0,ORAMBAD=0"
^XTMP("XPDT",7317,"RTN","ORAM2",10,0)=" S ORAMNOW=$$NOW^XLFDT"
^XTMP("XPDT",7317,"RTN","ORAM2",11,0)=" S ORAMCUT=$$FMADD^XLFDT(ORAMNOW,-DAYS)"
^XTMP("XPDT",7317,"RTN","ORAM2",12,0)=" F  S ORAMDFN=$O(^ORAM(103,ORAMDFN)) Q:'ORAMDFN  D"
^XTMP("XPDT",7317,"RTN","ORAM2",13,0)=" . N ORAMFS,ORAM3D0,ORAMDATE,ORAMCLIN"
^XTMP("XPDT",7317,"RTN","ORAM2",14,0)=" . S ORAMFS=$O(^ORAM(103,ORAMDFN,3,"" ""),-1) Q:$G(ORAMFS)="""""
^XTMP("XPDT",7317,"RTN","ORAM2",15,0)=" . S ORAMCLIN=$P($G(^ORAM(103,ORAMDFN,6)),U,2)"
^XTMP("XPDT",7317,"RTN","ORAM2",16,0)=" . I +$G(CLINIC),(ORAMCLIN'=CLINIC) Q"
^XTMP("XPDT",7317,"RTN","ORAM2",17,0)=" . S ORAM3D0=$G(^ORAM(103,ORAMDFN,3,ORAMFS,0)),ORAMDATE=$P(ORAM3D0,""^"")"
^XTMP("XPDT",7317,"RTN","ORAM2",18,0)=" . I ($G(ORAMDATE)>$G(ORAMCUT)) D"
^XTMP("XPDT",7317,"RTN","ORAM2",19,0)=" .. N ORAMINR,ORAMGOAL,ORAMGLO,ORAMGHI"
^XTMP("XPDT",7317,"RTN","ORAM2",20,0)=" .. S ORAMINR=$P(ORAM3D0,""^"",3),ORAMGOAL=$P(ORAM3D0,""^"",12),ORAMGLO=$P(ORAMGOAL,""-""),ORAMGHI=$P(ORAMGOAL,""-"",2) S:ORAMGHI["" "" ORAMGHI=$P(ORAMGHI,"" "",2)"
^XTMP("XPDT",7317,"RTN","ORAM2",21,0)=" .. S ORAMGLO=ORAMGLO-(.1*ORAMGLO),ORAMGHI=ORAMGHI+(.1*ORAMGHI)"
^XTMP("XPDT",7317,"RTN","ORAM2",22,0)=" .. S ORAMCNT=ORAMCNT+1"
^XTMP("XPDT",7317,"RTN","ORAM2",23,0)=" .. I (ORAMINR'<ORAMGLO)&(ORAMINR'>ORAMGHI) S ORAMGOOD=ORAMGOOD+1"
^XTMP("XPDT",7317,"RTN","ORAM2",24,0)=" .. E  D"
^XTMP("XPDT",7317,"RTN","ORAM2",25,0)=" ... N ORAMNAME,ORAMSSN,LINE"
^XTMP("XPDT",7317,"RTN","ORAM2",26,0)=" ... S ORAMBAD=ORAMBAD+1,LINE="""""
^XTMP("XPDT",7317,"RTN","ORAM2",27,0)=" ... S ORAMNAME=$P($P(^DPT(ORAMDFN,0),""^""),"",""),ORAMSSN=$E($P(^DPT(ORAMDFN,0),""^"",9),6,9)"
^XTMP("XPDT",7317,"RTN","ORAM2",28,0)=" ... S LINE=$$SETSTR^VALM1(ORAMNAME,LINE,1,15)"
^XTMP("XPDT",7317,"RTN","ORAM2",29,0)=" ... S LINE=$$SETSTR^VALM1(""(""_ORAMSSN_"")"",LINE,17,6)"
^XTMP("XPDT",7317,"RTN","ORAM2",30,0)=" ... S LINE=$$SETSTR^VALM1($S(+ORAMINR>0:ORAMINR,1:""N/A""),LINE,25,5)"
^XTMP("XPDT",7317,"RTN","ORAM2",31,0)=" ... S LINE=$$SETSTR^VALM1(""(""_ORAMGOAL_"")"",LINE,32,9)"
^XTMP("XPDT",7317,"RTN","ORAM2",32,0)=" ... S RESULT(ORAMBAD)=LINE"
^XTMP("XPDT",7317,"RTN","ORAM2",33,0)=" I ORAMCNT>0 S ORAMPC=$J(((ORAMGOOD/ORAMCNT)*100),3,1)"
^XTMP("XPDT",7317,"RTN","ORAM2",34,0)=" I ORAMBAD'="""" S ORAMBL=$L(ORAMBAD,""^""),$P(ORAMBAD,""^"",1)=ORAMBL"
^XTMP("XPDT",7317,"RTN","ORAM2",35,0)=" S RESULT(0)=$G(ORAMPC)"
^XTMP("XPDT",7317,"RTN","ORAM2",36,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM2",37,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM2",38,0)="PTAPPT(RESULT,CLINIC) ; Counts # of pts/day next 45 days"
^XTMP("XPDT",7317,"RTN","ORAM2",39,0)=" ;RPC=ORAM2 PTAPPT"
^XTMP("XPDT",7317,"RTN","ORAM2",40,0)=" N ORAMFDT,ORAMRDT,ORAMCNT"
^XTMP("XPDT",7317,"RTN","ORAM2",41,0)=" S ORAMFDT=$$FMADD^XLFDT(DT,45)_"".2359"",ORAMRDT=DT"
^XTMP("XPDT",7317,"RTN","ORAM2",42,0)=" F  S ORAMRDT=$O(^ORAM(103,""L"",ORAMRDT)) Q:(+ORAMRDT'>0)!(ORAMRDT>ORAMFDT)  D"
^XTMP("XPDT",7317,"RTN","ORAM2",43,0)=" . N ORAMDT,ORAMRD,ORAMDFN"
^XTMP("XPDT",7317,"RTN","ORAM2",44,0)=" . S ORAMDT=$P(ORAMRDT,"".""),ORAMRD=$$FMTE^XLFDT(ORAMDT,""2DF""),ORAMDFN=0"
^XTMP("XPDT",7317,"RTN","ORAM2",45,0)=" . F  S ORAMDFN=$O(^ORAM(103,""L"",ORAMRDT,ORAMDFN)) Q:'ORAMDFN  D"
^XTMP("XPDT",7317,"RTN","ORAM2",46,0)=" .. N ORAMCLIN S ORAMCLIN=$P($G(^ORAM(103,ORAMDFN,6)),U,2)"
^XTMP("XPDT",7317,"RTN","ORAM2",47,0)=" .. Q:ORAMCLIN'=$G(CLINIC)"
^XTMP("XPDT",7317,"RTN","ORAM2",48,0)=" .. S ORAMCNT(ORAMDT)=+$G(ORAMCNT(ORAMDT))+1"
^XTMP("XPDT",7317,"RTN","ORAM2",49,0)=" .. S RESULT(ORAMDT)=ORAMRD_"" - ""_$G(ORAMCNT(ORAMDT))"
^XTMP("XPDT",7317,"RTN","ORAM2",50,0)="PTAPPTQ Q"
^XTMP("XPDT",7317,"RTN","ORAM2",51,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM2",52,0)="NOACT(RESULT,DAYS,CLINIC) ; Finds pts w/o AC activity past X days"
^XTMP("XPDT",7317,"RTN","ORAM2",53,0)=" ;RPC=ORAM2 NOACT"
^XTMP("XPDT",7317,"RTN","ORAM2",54,0)=" N ORAMDT,ORAMFDT,ORAMVST,ORAMDFN,ORAMPT,ORAMSSN,ORAMSTAT,ORAMSORT,ORAMC,ORAMI"
^XTMP("XPDT",7317,"RTN","ORAM2",55,0)=" S ORAMDT=$$NOW^XLFDT,ORAMFDT=$$FMADD^XLFDT(ORAMDT,-DAYS),ORAMDFN=0"
^XTMP("XPDT",7317,"RTN","ORAM2",56,0)=" F  S ORAMDFN=$O(^ORAM(103,ORAMDFN)) Q:+ORAMDFN'>0  D"
^XTMP("XPDT",7317,"RTN","ORAM2",57,0)=" . N ORAMFS,ORAMCLIN S ORAMCLIN=$P($G(^ORAM(103,ORAMDFN,6)),U,2)"
^XTMP("XPDT",7317,"RTN","ORAM2",58,0)=" . Q:ORAMCLIN'=$G(CLINIC)"
^XTMP("XPDT",7317,"RTN","ORAM2",59,0)=" . S ORAMFS=$O(^ORAM(103,ORAMDFN,3,"" ""),-1) Q:ORAMFS']"""""
^XTMP("XPDT",7317,"RTN","ORAM2",60,0)=" . S ORAMSTAT=$P(^ORAM(103,ORAMDFN,0),""^"",10),ORAMVST=$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),""^"")"
^XTMP("XPDT",7317,"RTN","ORAM2",61,0)=" . I ORAMSTAT'=2&(ORAMVST'>ORAMFDT) D"
^XTMP("XPDT",7317,"RTN","ORAM2",62,0)=" . . N LINE S LINE="""""
^XTMP("XPDT",7317,"RTN","ORAM2",63,0)=" . . S ORAMPT=$P(^DPT(ORAMDFN,0),""^""),ORAMPT=$P(ORAMPT,"",""),ORAMSSN=$E($P(^DPT(ORAMDFN,0),""^"",9),6,9)"
^XTMP("XPDT",7317,"RTN","ORAM2",64,0)=" . . S LINE=$$SETSTR^VALM1(ORAMPT,LINE,1,15)"
^XTMP("XPDT",7317,"RTN","ORAM2",65,0)=" . . S LINE=$$SETSTR^VALM1(""(""_ORAMSSN_"")"",LINE,17,6)"
^XTMP("XPDT",7317,"RTN","ORAM2",66,0)=" . . S LINE=$$SETSTR^VALM1(""Last Seen: ""_$$FMTE^XLFDT($P(ORAMVST,"".""),""2DF""),LINE,25,19)"
^XTMP("XPDT",7317,"RTN","ORAM2",67,0)=" . . S ORAMSORT($P(ORAMVST,"".""),ORAMPT_ORAMSSN)=LINE"
^XTMP("XPDT",7317,"RTN","ORAM2",68,0)=" S (ORAMC,ORAMI)=0"
^XTMP("XPDT",7317,"RTN","ORAM2",69,0)=" F  S ORAMI=$O(ORAMSORT(ORAMI)) Q:+ORAMI'>0  D"
^XTMP("XPDT",7317,"RTN","ORAM2",70,0)=" . N ORAMJ S ORAMJ="""""
^XTMP("XPDT",7317,"RTN","ORAM2",71,0)=" . F  S ORAMJ=$O(ORAMSORT(ORAMI,ORAMJ)) Q:ORAMJ']""""  D"
^XTMP("XPDT",7317,"RTN","ORAM2",72,0)=" . . S ORAMC=ORAMC+1,RESULT(ORAMC)=$G(ORAMSORT(ORAMI,ORAMJ))"
^XTMP("XPDT",7317,"RTN","ORAM2",73,0)=" I ORAMC=0 S RESULT(0)=""No patients lost to follow-up ""_DAYS_"" days or longer."""
^XTMP("XPDT",7317,"RTN","ORAM2",74,0)="NOACTQ Q"
^XTMP("XPDT",7317,"RTN","ORAM2",75,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM2",76,0)="SHOWRATE(RESULT,DFN) ; CALCULATES SHOWRATE"
^XTMP("XPDT",7317,"RTN","ORAM2",77,0)=" ;;RPC=ORAM2 NOSHOW"
^XTMP("XPDT",7317,"RTN","ORAM2",78,0)=" N ORAMFSDT,ORAMFS,ORAMR,ORAMARR,ORAMPC,ORAMPTT0,ORAMRDT,ORAMRDT0"
^XTMP("XPDT",7317,"RTN","ORAM2",79,0)=" S ORAMR=0,ORAMPTT0=0,ORAMRDT0="""""
^XTMP("XPDT",7317,"RTN","ORAM2",80,0)=" S ORAMFSDT=0 F  S ORAMFSDT=$O(^ORAM(103,DFN,3,""B"",ORAMFSDT)) Q:'ORAMFSDT  D"
^XTMP("XPDT",7317,"RTN","ORAM2",81,0)=" . S ORAMFS=0 F  S ORAMFS=$O(^ORAM(103,DFN,3,""B"",ORAMFSDT,ORAMFS)) Q:'ORAMFS  D"
^XTMP("XPDT",7317,"RTN","ORAM2",82,0)=" .. N ORAMD0,ORAMSD,ORAMSCR,ORAMPTT,ORAMLCNT,ORAMLLN,ORAMDIFF"
^XTMP("XPDT",7317,"RTN","ORAM2",83,0)=" .. S ORAMD0=$G(^ORAM(103,DFN,3,ORAMFS,0)),ORAMSCR=$P(ORAMD0,""^"",13),ORAMSD=$P($P(ORAMD0,""^""),"".""),ORAMPTT=$P(ORAMD0,""^"",3)"
^XTMP("XPDT",7317,"RTN","ORAM2",84,0)=" .. S ORAMLCNT=$P($G(^ORAM(103,DFN,3,ORAMFS,1,0)),""^"",3) Q:'ORAMLCNT"
^XTMP("XPDT",7317,"RTN","ORAM2",85,0)=" .. S ORAMLLN=$G(^ORAM(103,DFN,3,ORAMFS,1,ORAMLCNT,0))"
^XTMP("XPDT",7317,"RTN","ORAM2",86,0)=" .. S ORAMRDT=$S($G(ORAMLLN)[""Next draw:"":$P($G(ORAMLLN),"" "",3),$G(ORAMLLN)[""Callback:"":""C"",$G(ORAMLLN)[""Missed Appt;"":""M"",$G(ORAMLLN)[""Edited by:"":""E"",1:$P($G(ORAMLLN),"" ""))"
^XTMP("XPDT",7317,"RTN","ORAM2",87,0)=" .. I ORAMRDT=""E"" S ORAMLCNT=ORAMLCNT-1,ORAMLLN=$G(^ORAM(103,DFN,3,ORAMFS,1,ORAMLCNT,0))"
^XTMP("XPDT",7317,"RTN","ORAM2",88,0)=" .. I  S ORAMRDT=$S($G(ORAMLLN)[""Next draw:"":$P($G(ORAMLLN),"" "",3),$G(ORAMLLN)[""Callback:"":$P($G(ORAMLLN),"" "",2),$G(ORAMLLN)[""Missed Appt;"":""Q"",1:$P($G(ORAMLLN),"" ""))"
^XTMP("XPDT",7317,"RTN","ORAM2",89,0)=" .. I ORAMRDT=""M"" S ORAMRDT=$P($G(ORAMLLN),"" "",4),ORAMR=ORAMR+1 D DT^DILF(""T"",ORAMRDT,.ORAMRDT) S ORAMRDT0=ORAMRDT Q  ;NOTE PT MISSED DRAW, ADD ONE TO DENOMINATOR"
^XTMP("XPDT",7317,"RTN","ORAM2",90,0)=" .. I $L(ORAMRDT)>1 D DT^DILF(""T"",ORAMRDT,.ORAMRDT)"
^XTMP("XPDT",7317,"RTN","ORAM2",91,0)=" .. I ORAMRDT=""C"" S ORAMRDT=$P($G(ORAMLLN),"" "",2) D DT^DILF(""T"",ORAMRDT,.ORAMRDT) S ORAMRDT=$$FMADD^XLFDT(ORAMRDT,-1)"
^XTMP("XPDT",7317,"RTN","ORAM2",92,0)=" .. I 'ORAMPTT!($G(ORAMPTT0)=$G(ORAMPTT)) S ORAMRDT0=ORAMRDT Q"
^XTMP("XPDT",7317,"RTN","ORAM2",93,0)=" .. S ORAMPTT0=ORAMPTT"
^XTMP("XPDT",7317,"RTN","ORAM2",94,0)=" .. I ORAMRDT0'="""" S ORAMDIFF=$$FMDIFF^XLFDT(ORAMSD,ORAMRDT0,2) S ORAMR=ORAMR+1 I ORAMDIFF>-172801&(ORAMDIFF<172801) S ORAMARR(0)=$G(ORAMARR(0))+1"
^XTMP("XPDT",7317,"RTN","ORAM2",95,0)=" .. S ORAMRDT0=ORAMRDT"
^XTMP("XPDT",7317,"RTN","ORAM2",96,0)=" I ORAMR>0 S ORAMPC=($G(ORAMARR(0))/ORAMR)*100,ORAMPC=$E(ORAMPC,1,4)"
^XTMP("XPDT",7317,"RTN","ORAM2",97,0)=" S RESULT=$G(ORAMPC)_""^""_$G(ORAMR)"
^XTMP("XPDT",7317,"RTN","ORAM2",98,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM2",99,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM2",100,0)="RPTSTART(ROOT,DFN,ID,ALPHA,OMEGA,DTRANGE,REMOTE,MAX,ORFHIE) ;"
^XTMP("XPDT",7317,"RTN","ORAM2",101,0)=" ;;"
^XTMP("XPDT",7317,"RTN","ORAM2",102,0)=" D START^ORWRP(80,""RPT^ORAM2(.ROOT,.DFN,.ID,.ALPHA,.OMEGA,.DTRANGE,.REMOTE,.MAX,.ORFHIE)"",999)"
^XTMP("XPDT",7317,"RTN","ORAM2",103,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM2",104,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM2",105,0)="RPT(ROOT,DFN,ID,ALPHA,OMEGA,DTRANGE,REMOTE,MAX,ORFHIE) ;"
^XTMP("XPDT",7317,"RTN","ORAM2",106,0)=" N ORAMCNT,ORAMJ,ORAMHCT,ORAMCLIN,ORAMPIND"
^XTMP("XPDT",7317,"RTN","ORAM2",107,0)=" I '$D(^ORAM(103,""B"",DFN)) Q"
^XTMP("XPDT",7317,"RTN","ORAM2",108,0)=" W $P(^DPT(DFN,0),""^""),""  "",$E($P(^DPT(DFN,0),""^"",9),1,3),""-"",$E($P(^DPT(DFN,0),""^"",9),4,5),""-"",$E($P(^DPT(DFN,0),""^"",9),6,9)"
^XTMP("XPDT",7317,"RTN","ORAM2",109,0)=" I $P(^ORAM(103,DFN,0),""^"",10)=1 W !,?10,""******* COMPLEX PATIENT *******"""
^XTMP("XPDT",7317,"RTN","ORAM2",110,0)=" S ORAMCLIN=$P($G(^ORAM(103,DFN,6)),U,2),ORAMPIND="""""
^XTMP("XPDT",7317,"RTN","ORAM2",111,0)=" I +ORAMCLIN D"
^XTMP("XPDT",7317,"RTN","ORAM2",112,0)=" . N ICDC"
^XTMP("XPDT",7317,"RTN","ORAM2",113,0)=" . S ICDC=$$GET^XPAR(ORAMCLIN_"";SC("",""ORAM AUTO PRIMARY INDICATION"",1,""E"")"
^XTMP("XPDT",7317,"RTN","ORAM2",114,0)=" . I ICDC]"""" D"
^XTMP("XPDT",7317,"RTN","ORAM2",115,0)=" . . N ICDD,ICDDL,ICDDESC"
^XTMP("XPDT",7317,"RTN","ORAM2",116,0)=" . . S ICDDL=$$ICDD^ICDCODE(ICDC,""ICDDESC"",DT)"
^XTMP("XPDT",7317,"RTN","ORAM2",117,0)=" . . S ORAMPIND=ICDC_U_$$TITLE^XLFSTR($G(ICDDESC(1)))_"" (""_ICDC_"")"""
^XTMP("XPDT",7317,"RTN","ORAM2",118,0)=" I ORAMPIND]"""" D"
^XTMP("XPDT",7317,"RTN","ORAM2",119,0)=" . W !!,""Primary Indication: "",$P(ORAMPIND,U,2)"
^XTMP("XPDT",7317,"RTN","ORAM2",120,0)=" . W !,""  Add'l Indication: "",$P($P(^ORAM(103,DFN,0),""^"",3),""=""),"" ("",$P($P(^ORAM(103,DFN,0),""^"",3),""="",2),"")"""
^XTMP("XPDT",7317,"RTN","ORAM2",121,0)=" . W !,""          Goal INR: "",$P(^ORAM(103,DFN,0),""^"",2)"
^XTMP("XPDT",7317,"RTN","ORAM2",122,0)=" E  D"
^XTMP("XPDT",7317,"RTN","ORAM2",123,0)=" . W !!,""Primary Indication: "",$P($P(^ORAM(103,DFN,0),""^"",3),""=""),"" ("",$P($P(^ORAM(103,DFN,0),""^"",3),""="",2),"")"",?38,""Goal INR: "",$P(^ORAM(103,DFN,0),""^"",2)"
^XTMP("XPDT",7317,"RTN","ORAM2",124,0)=" D HCT^ORAM(.ORAMHCT,DFN)"
^XTMP("XPDT",7317,"RTN","ORAM2",125,0)=" I $L(ORAMHCT,U)>1 D  I 1"
^XTMP("XPDT",7317,"RTN","ORAM2",126,0)=" . W !?10,""Last "",$S($$UP^XLFSTR($P(ORAMHCT,U,3))[""HGB"":""Hgb"",$$UP^XLFSTR($P(ORAMHCT,U,3))[""HEMOGLOBIN"":""Hgb"",1:""HCT""),"": """
^XTMP("XPDT",7317,"RTN","ORAM2",127,0)=" . W $S($P(ORAMHCT,U)]"""":$P(ORAMHCT,U),1:""No result""),"" on "",$S($P(ORAMHCT,U,2)]"""":$P(ORAMHCT,U,2),1:""file"")"
^XTMP("XPDT",7317,"RTN","ORAM2",128,0)=" E  W !?10,ORAMHCT"
^XTMP("XPDT",7317,"RTN","ORAM2",129,0)=" I +$P($G(^ORAM(103,DFN,6)),U,5)!+$O(^ORAM(103,DFN,7,0)) D"
^XTMP("XPDT",7317,"RTN","ORAM2",130,0)=" . W !!,""Patient is Eligible for LMWH Bridging"""
^XTMP("XPDT",7317,"RTN","ORAM2",131,0)=" . I +$O(^ORAM(103,DFN,7,0)) D"
^XTMP("XPDT",7317,"RTN","ORAM2",132,0)=" .. N ORI S ORI=0"
^XTMP("XPDT",7317,"RTN","ORAM2",133,0)=" .. W "":"""
^XTMP("XPDT",7317,"RTN","ORAM2",134,0)=" .. F  S ORI=$O(^ORAM(103,DFN,7,ORI)) Q:+ORI'>0  W !?2,$G(^ORAM(103,DFN,7,ORI,0))"
^XTMP("XPDT",7317,"RTN","ORAM2",135,0)=" . E  W ""."""
^XTMP("XPDT",7317,"RTN","ORAM2",136,0)=" I $P($G(^ORAM(103,DFN,1,0)),""^"",3)>0 S ORAMCNT=$P(^ORAM(103,DFN,1,0),""^"",3) D"
^XTMP("XPDT",7317,"RTN","ORAM2",137,0)=" . W !!,""Special Instructions:"""
^XTMP("XPDT",7317,"RTN","ORAM2",138,0)=" . F ORAMJ=1:1:ORAMCNT W !?2,^ORAM(103,DFN,1,ORAMJ,0)"
^XTMP("XPDT",7317,"RTN","ORAM2",139,0)=" I $P(^ORAM(103,DFN,0),""^"",11)=2 W !?2,""Pt has given permission to leave anticoag msg on msg machine."""
^XTMP("XPDT",7317,"RTN","ORAM2",140,0)=" I $P($G(^ORAM(103,DFN,4,0)),""^"",3)>0 S ORAMCNT=$P(^ORAM(103,DFN,4,0),""^"",3) D"
^XTMP("XPDT",7317,"RTN","ORAM2",141,0)=" . W !?2,""OK to leave anticoagulation message with:"""
^XTMP("XPDT",7317,"RTN","ORAM2",142,0)=" . F ORAMJ=1:1:ORAMCNT W !?4,^ORAM(103,DFN,4,ORAMJ,0)"
^XTMP("XPDT",7317,"RTN","ORAM2",143,0)=" I $P($G(^ORAM(103,DFN,2,0)),""^"",3)>0 S ORAMCNT=$P(^ORAM(103,DFN,2,0),""^"",3) D"
^XTMP("XPDT",7317,"RTN","ORAM2",144,0)=" . W !!,""Secondary Indication(s)/Risk Factors:"""
^XTMP("XPDT",7317,"RTN","ORAM2",145,0)=" . F ORAMJ=1:1:ORAMCNT W !?2,^ORAM(103,DFN,2,ORAMJ,0)"
^XTMP("XPDT",7317,"RTN","ORAM2",146,0)=" W !"
^XTMP("XPDT",7317,"RTN","ORAM2",147,0)=" I $P(^ORAM(103,DFN,0),""^"",5)'="""" W !,""Start Date: "",$P(^ORAM(103,DFN,0),""^"",5)"
^XTMP("XPDT",7317,"RTN","ORAM2",148,0)=" I $P(^ORAM(103,DFN,0),""^"",7)'="""" W ?35,""Duration: "",$P(^ORAM(103,DFN,0),""^"",7)"
^XTMP("XPDT",7317,"RTN","ORAM2",149,0)="  W !,""==========================================================================="""
^XTMP("XPDT",7317,"RTN","ORAM2",150,0)="  W !,""DATE"",?10,""INR"",?18,""Notified"",?30,""TWD"",?36,""Comments:"""
^XTMP("XPDT",7317,"RTN","ORAM2",151,0)="  W !,""---------------------------------------------------------------------------"""
^XTMP("XPDT",7317,"RTN","ORAM2",152,0)=" I $D(^ORAM(103,DFN,3,""B"")) D"
^XTMP("XPDT",7317,"RTN","ORAM2",153,0)=" . N ORAMFSD S ORAMFSD="" "",ORAMCNT=0"
^XTMP("XPDT",7317,"RTN","ORAM2",154,0)=" . F  S ORAMFSD=$O(^ORAM(103,DFN,3,ORAMFSD),-1) Q:$G(ORAMFSD)<1  D"
^XTMP("XPDT",7317,"RTN","ORAM2",155,0)=" .. I $$DTCHK(DFN,ALPHA,OMEGA,ORAMFSD)=0 Q  ;need to change this to the new date"
^XTMP("XPDT",7317,"RTN","ORAM2",156,0)=" .. N ORAMDD1,ORAMDOSE,ORAMPS,ORAMPNOT"
^XTMP("XPDT",7317,"RTN","ORAM2",157,0)=" .. I '+$D(^ORAM(103,DFN,3,ORAMFSD,""LOG"",0)) W !,$$FMTE^XLFDT($E($P(^ORAM(103,DFN,3,ORAMFSD,0),""^"",9),1,7),2)  ;changed from $P(^ORAM(103,DFN,3,ORAMCNT,0),""^"")"
^XTMP("XPDT",7317,"RTN","ORAM2",158,0)=" .. I +$D(^ORAM(103,DFN,3,ORAMFSD,""LOG"",0)) S ORAMDD1=$P($P(^ORAM(103,DFN,3,ORAMFSD,""LOG"",1,0),""("",2),""."") Q:'+$G(ORAMDD1)  W !,$$FMTE^XLFDT(ORAMDD1,2)"
^XTMP("XPDT",7317,"RTN","ORAM2",159,0)=" .. S ORAMPNOT=$$WRAP^ORAMX($P(^ORAM(103,DFN,3,ORAMFSD,0),""^"",8),11)"
^XTMP("XPDT",7317,"RTN","ORAM2",160,0)=" .. W ?11,$P(^ORAM(103,DFN,3,ORAMFSD,0),""^"",3) ;INR"
^XTMP("XPDT",7317,"RTN","ORAM2",161,0)=" .. W ?18,$P(ORAMPNOT,""|"") ;Pt Notified"
^XTMP("XPDT",7317,"RTN","ORAM2",162,0)=" .. W ?30,$P(^ORAM(103,DFN,3,ORAMFSD,0),""^"",6) ;TWD"
^XTMP("XPDT",7317,"RTN","ORAM2",163,0)=" .. ; Comments"
^XTMP("XPDT",7317,"RTN","ORAM2",164,0)=" .. I $P($G(^ORAM(103,DFN,3,ORAMFSD,1,0)),""^"",3)>0 D  I 1"
^XTMP("XPDT",7317,"RTN","ORAM2",165,0)=" ... N ORAMCC,ORAMCLN S (ORAMCC,ORAMCLN)=0"
^XTMP("XPDT",7317,"RTN","ORAM2",166,0)=" ... F  S ORAMCLN=$O(^ORAM(103,DFN,3,ORAMFSD,1,ORAMCLN)) Q:+ORAMCLN'>0  D"
^XTMP("XPDT",7317,"RTN","ORAM2",167,0)=" .... I $P(^ORAM(103,DFN,3,ORAMFSD,0),""^"",3)'="""",ORAMCLN=2 W ?10,$$FMTE^XLFDT($P(^ORAM(103,DFN,3,ORAMFSD,0),""^""),2)"
^XTMP("XPDT",7317,"RTN","ORAM2",168,0)=" .... W:ORAMCLN>1 ?18,$P(ORAMPNOT,""|"",ORAMCLN)"
^XTMP("XPDT",7317,"RTN","ORAM2",169,0)=" .... W ?38,^ORAM(103,DFN,3,ORAMFSD,1,ORAMCLN,0),!"
^XTMP("XPDT",7317,"RTN","ORAM2",170,0)=" .... S ORAMCC=ORAMCC+1"
^XTMP("XPDT",7317,"RTN","ORAM2",171,0)=" ... I $L(ORAMPNOT,""|"")>ORAMCC D"
^XTMP("XPDT",7317,"RTN","ORAM2",172,0)=" .... N ORAMI S ORAMI=0 F ORAMI=ORAMCC+1:1:$L(ORAMPNOT,""|"") W ?18,$P(ORAMPNOT,""|"",ORAMI),!"
^XTMP("XPDT",7317,"RTN","ORAM2",173,0)=" .. E  D  W !"
^XTMP("XPDT",7317,"RTN","ORAM2",174,0)=" ... I $L(ORAMPNOT,""|"")>1 D"
^XTMP("XPDT",7317,"RTN","ORAM2",175,0)=" .... N ORAMI S ORAMI=0 F ORAMI=2:1:$L(ORAMPNOT,""|"") W ?18,$P(ORAMPNOT,""|"",ORAMI),!"
^XTMP("XPDT",7317,"RTN","ORAM2",176,0)=" .. ; Patient Instructions"
^XTMP("XPDT",7317,"RTN","ORAM2",177,0)=" .. I +$O(^ORAM(103,DFN,3,ORAMFSD,3,0)) D"
^XTMP("XPDT",7317,"RTN","ORAM2",178,0)=" ... N ORI S ORI=0"
^XTMP("XPDT",7317,"RTN","ORAM2",179,0)=" ... W !,""Patient Instructions (from Letter):"""
^XTMP("XPDT",7317,"RTN","ORAM2",180,0)=" ... F  S ORI=$O(^ORAM(103,DFN,3,ORAMFSD,3,ORI)) Q:+ORI'>0  D"
^XTMP("XPDT",7317,"RTN","ORAM2",181,0)=" .... N ORPILN,ORJ S ORPILN=$G(^ORAM(103,DFN,3,ORAMFSD,3,ORI,0))"
^XTMP("XPDT",7317,"RTN","ORAM2",182,0)=" .... S:$L(ORPILN)>77 ORPILN=$$WRAP^ORAMX(ORPILN,77)"
^XTMP("XPDT",7317,"RTN","ORAM2",183,0)=" .... F ORJ=1:1:$L(ORPILN,""|"") W !?2,$P(ORPILN,""|"",ORJ)"
^XTMP("XPDT",7317,"RTN","ORAM2",184,0)=" ... W !"
^XTMP("XPDT",7317,"RTN","ORAM2",185,0)=" .. ; Daily Dosing"
^XTMP("XPDT",7317,"RTN","ORAM2",186,0)=" .. S ORAMDOSE=$P(^ORAM(103,DFN,3,ORAMFSD,0),""^"",7)"
^XTMP("XPDT",7317,"RTN","ORAM2",187,0)=" .. I $L(ORAMDOSE) D"
^XTMP("XPDT",7317,"RTN","ORAM2",188,0)=" ... N ORAMTP,ORAMTM,ORI"
^XTMP("XPDT",7317,"RTN","ORAM2",189,0)=" ... S ORAMPS=$P(^ORAM(103,DFN,3,ORAMFSD,0),""^"",5),(ORAMTP,ORAMTM)=0"
^XTMP("XPDT",7317,"RTN","ORAM2",190,0)=" ... W !,""Current Dosing (using "",ORAMPS,"" mg tab):"",!"
^XTMP("XPDT",7317,"RTN","ORAM2",191,0)=" ... W ?4,""Sun"",?8,""Mon"",?12,""Tue"",?16,""Wed"",?20,""Thu"",?24,""Fri"",?28,""Sat"",?32,""Tot"",!"
^XTMP("XPDT",7317,"RTN","ORAM2",192,0)=" ... W ""Tab"" F ORI=1:1:$L(ORAMDOSE,""|"") S ORAMTP=ORAMTP+($P(ORAMDOSE,""|"",ORI)/ORAMPS) W ?(4*ORI),$J(($P(ORAMDOSE,""|"",ORI)/ORAMPS),3)"
^XTMP("XPDT",7317,"RTN","ORAM2",193,0)=" ... W ?32,$J(ORAMTP,3),!"
^XTMP("XPDT",7317,"RTN","ORAM2",194,0)=" ... W ""mgs"" F ORI=1:1:$L(ORAMDOSE,""|"") S ORAMTM=ORAMTM+$P(ORAMDOSE,""|"",ORI) W ?(4*ORI),$J($P(ORAMDOSE,""|"",ORI),3)"
^XTMP("XPDT",7317,"RTN","ORAM2",195,0)=" ... W ?32,$J(ORAMTM,3),!"
^XTMP("XPDT",7317,"RTN","ORAM2",196,0)=" .. ; Complications"
^XTMP("XPDT",7317,"RTN","ORAM2",197,0)=" .. I +$P(^ORAM(103,DFN,3,ORAMFSD,0),""^"",2) D"
^XTMP("XPDT",7317,"RTN","ORAM2",198,0)=" ... N ORAMCTXT,ORAMCMPL"
^XTMP("XPDT",7317,"RTN","ORAM2",199,0)=" ... S ORAMCTXT=$S($P(^ORAM(103,DFN,3,ORAMFSD,0),""^"",2)=1:""Major Bleed "",$P(^(0),""^"",2)=2:""Complication(s) "",$P(^(0),""^"",2)=3:""Minor Bleed "",1:"""")"
^XTMP("XPDT",7317,"RTN","ORAM2",200,0)=" ... I $D(^ORAM(103,DFN,3,ORAMFSD,2)) N ORAMRSF S ORAMRSF=0 F  S ORAMRSF=$O(^ORAM(103,DFN,3,ORAMFSD,2,ORAMRSF)) Q:ORAMRSF<1  D"
^XTMP("XPDT",7317,"RTN","ORAM2",201,0)=" .... N ORI"
^XTMP("XPDT",7317,"RTN","ORAM2",202,0)=" .... I ORAMRSF=1 W ?38,ORAMCTXT,""noted: ("",^ORAM(103,DFN,3,ORAMFSD,2,ORAMRSF,0),"")"",! Q"
^XTMP("XPDT",7317,"RTN","ORAM2",203,0)=" .... S ORAMCMPL=^ORAM(103,DFN,3,ORAMFSD,2,ORAMRSF,0)"
^XTMP("XPDT",7317,"RTN","ORAM2",204,0)=" .... I $S(ORAMCMPL[""MB:"":1,ORAMCMPL[""C:"":1,1:0) S ORAMCMPL=$P(ORAMCMPL,"":"",2)"
^XTMP("XPDT",7317,"RTN","ORAM2",205,0)=" .... I $L(ORAMCMPL)>37 S ORAMCMPL=$$WRAP^ORAMX(ORAMCMPL,37)"
^XTMP("XPDT",7317,"RTN","ORAM2",206,0)=" .... F ORI=1:1:$L(ORAMCMPL,""|"") W ?$S(ORI=1:38,1:40),$P(ORAMCMPL,""|"",ORI),!"
^XTMP("XPDT",7317,"RTN","ORAM2",207,0)=" .. W ?38,""-------------------------------------"",!"
^XTMP("XPDT",7317,"RTN","ORAM2",208,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM2",209,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM2",210,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM2",211,0)="DTCHK(DFN,ALPHA,OMEGA,ORAMFSD) ; CHECKS DATE RANGE WITH ALPHA AND OMEGA FROM CPRS"
^XTMP("XPDT",7317,"RTN","ORAM2",212,0)=" N ORAMFDT,ORAMVAL"
^XTMP("XPDT",7317,"RTN","ORAM2",213,0)=" S ORAMVAL=0"
^XTMP("XPDT",7317,"RTN","ORAM2",214,0)=" S ORAMFDT=$P(^ORAM(103,DFN,3,ORAMFSD,0),""^"")"
^XTMP("XPDT",7317,"RTN","ORAM2",215,0)=" S:ORAMFDT'<ALPHA ORAMVAL=1"
^XTMP("XPDT",7317,"RTN","ORAM2",216,0)=" S:ORAMFDT>OMEGA ORAMVAL=0"
^XTMP("XPDT",7317,"RTN","ORAM2",217,0)=" Q ORAMVAL"
^XTMP("XPDT",7317,"RTN","ORAM2",218,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM2",219,0)="TEAMCHK(RESULT,ORAMTMS) ; SET-UP VERIFY NAMES"
^XTMP("XPDT",7317,"RTN","ORAM2",220,0)=" ;RPC=ORAM2 TEAM CHECK"
^XTMP("XPDT",7317,"RTN","ORAM2",221,0)=" N ORAMSKIP,ORAMI,ORAMERR"
^XTMP("XPDT",7317,"RTN","ORAM2",222,0)=" Q:$G(ORAMTMS)="""""
^XTMP("XPDT",7317,"RTN","ORAM2",223,0)=" F ORAMI=1:1:20 S ORAMSKIP=$G(ORAMSKIP)_"" """
^XTMP("XPDT",7317,"RTN","ORAM2",224,0)=" S ORAMERR=0"
^XTMP("XPDT",7317,"RTN","ORAM2",225,0)=" F ORAMI=1:1:$L(ORAMTMS,""^"") D"
^XTMP("XPDT",7317,"RTN","ORAM2",226,0)=" . N ORAMN"
^XTMP("XPDT",7317,"RTN","ORAM2",227,0)=" . I $P(ORAMTMS,""^"",ORAMI)'="""" S ORAMN=$P(ORAMTMS,""^"",ORAMI) D"
^XTMP("XPDT",7317,"RTN","ORAM2",228,0)=" .. S RESULT(ORAMI)=ORAMN_$E(ORAMSKIP,1,(20-$L(ORAMN)))"
^XTMP("XPDT",7317,"RTN","ORAM2",229,0)=" .. I $D(^OR(100.21,ORAMN)) S RESULT(ORAMI)=RESULT(ORAMI)_$P(^OR(100.21,ORAMN,0),""^"")"
^XTMP("XPDT",7317,"RTN","ORAM2",230,0)=" .. E  S RESULT(ORAMI)=RESULT(ORAMI)_""clinic not found."",ORAMERR=$G(ORAMERR)+1"
^XTMP("XPDT",7317,"RTN","ORAM2",231,0)=" S RESULT(0)=$G(ORAMERR)"
^XTMP("XPDT",7317,"RTN","ORAM2",232,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM2",233,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM2",234,0)="REMIND(RESULT,ORAMDFN,ORAMDT,ORAMREM) ; RPC=ORAM2 REMINDER"
^XTMP("XPDT",7317,"RTN","ORAM2",235,0)=" N ORAMRML,ORAMDAY,ORAMR,D0,DA,DIK,X"
^XTMP("XPDT",7317,"RTN","ORAM2",236,0)=" Q:'+$G(ORAMDFN)  Q:$G(ORAMDT)=""""  Q:$G(ORAMREM)="""""
^XTMP("XPDT",7317,"RTN","ORAM2",237,0)=" S RESULT=0"
^XTMP("XPDT",7317,"RTN","ORAM2",238,0)=" D NOW^%DTC S ORAMDAY=X D DT^DILF(,ORAMDT,.X) S ORAMDT=X"
^XTMP("XPDT",7317,"RTN","ORAM2",239,0)=" S $P(^ORAM(103,ORAMDFN,0),""^"",18)=$G(ORAMDT)"
^XTMP("XPDT",7317,"RTN","ORAM2",240,0)=" K ^ORAM(103,ORAMDFN,5)"
^XTMP("XPDT",7317,"RTN","ORAM2",241,0)=" S ORAMRML=$L(ORAMREM,""^""),^ORAM(103,ORAMDFN,5,0)=""^^""_ORAMRML_""^""_ORAMRML_""^""_ORAMDAY_""^"""
^XTMP("XPDT",7317,"RTN","ORAM2",242,0)=" F ORAMR=1:1:ORAMRML D"
^XTMP("XPDT",7317,"RTN","ORAM2",243,0)=" . S ^ORAM(103,ORAMDFN,5,ORAMR,0)=$P(ORAMREM,""^"",ORAMR)"
^XTMP("XPDT",7317,"RTN","ORAM2",244,0)=" S DIK=""^ORAM(103,"",DA=ORAMDFN"
^XTMP("XPDT",7317,"RTN","ORAM2",245,0)=" D IX^DIK"
^XTMP("XPDT",7317,"RTN","ORAM2",246,0)=" S RESULT=1"
^XTMP("XPDT",7317,"RTN","ORAM2",247,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM3")="0^4^B38571379^n/a"
^XTMP("XPDT",7317,"RTN","ORAM3",1,0)="ORAM3 ;POR/RSF - ANTICOAGULATION MANAGEMENT RPCS (4 of 4)  ;12/09/09  14:44"
^XTMP("XPDT",7317,"RTN","ORAM3",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307**;Dec 17, 1997;Build 60"
^XTMP("XPDT",7317,"RTN","ORAM3",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7317,"RTN","ORAM3",4,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM3",5,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM3",6,0)="PTADR(RESULT,ORAMDFN) ;GET PT ADDRESS"
^XTMP("XPDT",7317,"RTN","ORAM3",7,0)=" ;;CALLED BY ORAM3 ADDRESS"
^XTMP("XPDT",7317,"RTN","ORAM3",8,0)=" N ORAMADD,ORAMADD2,ORAMADD3,ORAMCITY,ORAMCODE,ORAMST,ORAMZIP,ORAMBAD,ORAMT"
^XTMP("XPDT",7317,"RTN","ORAM3",9,0)=" S ORAMT=.11,ORAMST="""",ORAMBAD=0"
^XTMP("XPDT",7317,"RTN","ORAM3",10,0)=" I '$G(ORAMDFN) S RESULT=""NONE"" Q"
^XTMP("XPDT",7317,"RTN","ORAM3",11,0)=" I $$TMPCHK(ORAMDFN)=1 S ORAMT=.121"
^XTMP("XPDT",7317,"RTN","ORAM3",12,0)=" S ORAMADD=$P($G(^DPT(ORAMDFN,ORAMT)),""^""),ORAMADD2=$P($G(^DPT(ORAMDFN,ORAMT)),""^"",2),ORAMADD3=$P($G(^DPT(ORAMDFN,ORAMT)),""^"",3)"
^XTMP("XPDT",7317,"RTN","ORAM3",13,0)=" S ORAMCITY=$P($G(^DPT(ORAMDFN,ORAMT)),""^"",4),ORAMCODE=$P($G(^DPT(ORAMDFN,ORAMT)),""^"",5),ORAMZIP=$P($G(^DPT(ORAMDFN,ORAMT)),""^"",6),ORAMBAD=$P($G(^DPT(ORAMDFN,.11)),""^"",16)"
^XTMP("XPDT",7317,"RTN","ORAM3",14,0)=" I ORAMCODE S ORAMST=$P($G(^DIC(5,$G(ORAMCODE),0)),""^"",2)"
^XTMP("XPDT",7317,"RTN","ORAM3",15,0)=" S:$G(ORAMBAD)="""" ORAMBAD=0"
^XTMP("XPDT",7317,"RTN","ORAM3",16,0)=" S RESULT=ORAMADD_""^""_ORAMADD2_""^""_ORAMADD3_""^""_ORAMCITY_""^""_ORAMST_""^""_ORAMZIP_""^""_$G(ORAMBAD)_""^""_$G(ORAMT)"
^XTMP("XPDT",7317,"RTN","ORAM3",17,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM3",18,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM3",19,0)="PTFONE(RESULT,ORAMDFN) ;GET PT PHONE NUMBERS"
^XTMP("XPDT",7317,"RTN","ORAM3",20,0)=" ;;RPC=ORAM3 PHONE"
^XTMP("XPDT",7317,"RTN","ORAM3",21,0)=" ;;RESULT=HOMEPHONE^WORKPHONE^CELLNUMBER^PAGER^EMAIL"
^XTMP("XPDT",7317,"RTN","ORAM3",22,0)=" N ORAMF1,ORAMF2,ORAMFC,ORAMP,ORAMEM,ORAMT S ORAMT=0"
^XTMP("XPDT",7317,"RTN","ORAM3",23,0)=" I '$G(ORAMDFN) S RESULT=""NONE"" Q"
^XTMP("XPDT",7317,"RTN","ORAM3",24,0)=" I $$TMPCHK(ORAMDFN)=1 S ORAMT=1"
^XTMP("XPDT",7317,"RTN","ORAM3",25,0)=" I ORAMT=0 D"
^XTMP("XPDT",7317,"RTN","ORAM3",26,0)=" . S ORAMF1=$P($G(^DPT(ORAMDFN,.13)),""^""),ORAMF2=$P($G(^DPT(ORAMDFN,.13)),""^"",2)"
^XTMP("XPDT",7317,"RTN","ORAM3",27,0)=" . S ORAMFC=$P($G(^DPT(ORAMDFN,.13)),""^"",4),ORAMP=$P($G(^DPT(ORAMDFN,.13)),""^"",5),ORAMEM=$P($G(^DPT(ORAMDFN,.13)),""^"",3)"
^XTMP("XPDT",7317,"RTN","ORAM3",28,0)=" I ORAMT=1 D"
^XTMP("XPDT",7317,"RTN","ORAM3",29,0)=" . S ORAMF1=$P($G(^DPT(ORAMDFN,.121)),""^"",10),ORAMF2=$P($G(^DPT(ORAMDFN,.13)),""^"",2)"
^XTMP("XPDT",7317,"RTN","ORAM3",30,0)=" . S ORAMFC=$P($G(^DPT(ORAMDFN,.13)),""^"",4),ORAMP=$P($G(^DPT(ORAMDFN,.13)),""^"",5),ORAMEM=$P($G(^DPT(ORAMDFN,.13)),""^"",3)"
^XTMP("XPDT",7317,"RTN","ORAM3",31,0)=" S RESULT=$G(ORAMF1)_""^""_$G(ORAMF2)_""^""_$G(ORAMFC)_""^""_$G(ORAMP)_""^""_$G(ORAMEM)_""^""_$G(ORAMT)"
^XTMP("XPDT",7317,"RTN","ORAM3",32,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM3",33,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM3",34,0)="TMPCHK(ORAMDFN) ;"
^XTMP("XPDT",7317,"RTN","ORAM3",35,0)=" ;;"
^XTMP("XPDT",7317,"RTN","ORAM3",36,0)=" N ORAMTMP S ORAMTMP=0"
^XTMP("XPDT",7317,"RTN","ORAM3",37,0)=" I $D(^DPT(ORAMDFN,.121)),$P(^DPT(ORAMDFN,.121),""^"",9)=""Y"" D"
^XTMP("XPDT",7317,"RTN","ORAM3",38,0)=" . Q:$P(^DPT(ORAMDFN,.121),""^"",7)>DT  ;START DATE"
^XTMP("XPDT",7317,"RTN","ORAM3",39,0)=" . I $P(^DPT(ORAMDFN,.121),""^"",8)'="""" Q:DT>$P(^DPT(ORAMDFN,.121),""^"",8)  ;END DATE"
^XTMP("XPDT",7317,"RTN","ORAM3",40,0)=" . S ORAMTMP=1"
^XTMP("XPDT",7317,"RTN","ORAM3",41,0)=" Q ORAMTMP"
^XTMP("XPDT",7317,"RTN","ORAM3",42,0)=" ;RSF 10/08/08  CHANGE TO CODE DUE TO NEWLY DISCOVERED PROBLEM WITH 'COMPLICATIONS'"
^XTMP("XPDT",7317,"RTN","ORAM3",43,0)="COMPENT(RESULT,ORAMDFN,ORAMDUZ,ORAMC,ORAMCT,ORAMD2) ;"
^XTMP("XPDT",7317,"RTN","ORAM3",44,0)=" ;RPC=ORAM3 COMPLICATION"
^XTMP("XPDT",7317,"RTN","ORAM3",45,0)=" Q:'+$G(ORAMDFN)"
^XTMP("XPDT",7317,"RTN","ORAM3",46,0)=" Q:'$G(ORAMDUZ)"
^XTMP("XPDT",7317,"RTN","ORAM3",47,0)=" Q:'+$G(ORAMC)"
^XTMP("XPDT",7317,"RTN","ORAM3",48,0)=" Q:$G(ORAMD2)="""""
^XTMP("XPDT",7317,"RTN","ORAM3",49,0)=" N ORAMD3,ORAMX D DT^DILF(,ORAMD2,.ORAMX) S ORAMD3=ORAMX"
^XTMP("XPDT",7317,"RTN","ORAM3",50,0)=" N ORAMNOW,ORAMDAY,X,% D NOW^%DTC S ORAMNOW=%,ORAMDAY=X"
^XTMP("XPDT",7317,"RTN","ORAM3",51,0)=" N ORAMNX S ORAMNX=$O(^ORAM(103,ORAMDFN,3,"" ""),-1)+1"
^XTMP("XPDT",7317,"RTN","ORAM3",52,0)=" N ORAMC2,ORAMLLOC,ORAMPS,ORAMDD,ORAMTWD,ORAML,OERR"
^XTMP("XPDT",7317,"RTN","ORAM3",53,0)=" I '$G(ORAMNX) S ORAMNX=1"
^XTMP("XPDT",7317,"RTN","ORAM3",54,0)=" I ORAMNX>1 D"
^XTMP("XPDT",7317,"RTN","ORAM3",55,0)=" . S ORAML=ORAMNX-1,ORAMLLOC=$P(^ORAM(103,ORAMDFN,3,ORAML,0),""^"",4),ORAMPS=$P(^(0),""^"",5),ORAMTWD=$P(^(0),""^"",6),ORAMDD=$P(^(0),""^"",7)"
^XTMP("XPDT",7317,"RTN","ORAM3",56,0)=" I ORAMC>99 S ORAMC2=2  ;CLOT in the 100 range...I P1>100,P1#100>0 S P1=3 Q"
^XTMP("XPDT",7317,"RTN","ORAM3",57,0)=" I ORAMC#10>0 S ORAMC2=1  ;MAJOR BLEED I P1>99 S P1=2 Q"
^XTMP("XPDT",7317,"RTN","ORAM3",58,0)=" I ORAMC=10 S ORAMC2=3  ;MINOR BLEED"
^XTMP("XPDT",7317,"RTN","ORAM3",59,0)=" N DA,IENS,ORAMRSF,ORAMF"
^XTMP("XPDT",7317,"RTN","ORAM3",60,0)=" S IENS=""+1,""_ORAMDFN_"","""
^XTMP("XPDT",7317,"RTN","ORAM3",61,0)=" S DA=ORAMNX,DA(1)=ORAMDFN"
^XTMP("XPDT",7317,"RTN","ORAM3",62,0)=" S ORAMRSF(103.011,IENS,.01)=ORAMD3  ;COMPLICATION DATE"
^XTMP("XPDT",7317,"RTN","ORAM3",63,0)=" S ORAMRSF(103.011,IENS,30)=ORAMLLOC  ;LAB DRAW LOC"
^XTMP("XPDT",7317,"RTN","ORAM3",64,0)=" S ORAMRSF(103.011,IENS,40)=ORAMPS  ;PILL STRENGTH"
^XTMP("XPDT",7317,"RTN","ORAM3",65,0)=" S ORAMRSF(103.011,IENS,50)=ORAMTWD  ;TOTAL WEEK DOSE"
^XTMP("XPDT",7317,"RTN","ORAM3",66,0)=" S ORAMRSF(103.011,IENS,60)=ORAMDD  ;DAILY DOSING"
^XTMP("XPDT",7317,"RTN","ORAM3",67,0)=" S ORAMRSF(103.011,IENS,80)=ORAMNOW"
^XTMP("XPDT",7317,"RTN","ORAM3",68,0)=" S ORAMRSF(103.011,IENS,90)=ORAMDUZ  ;PROVIDER"
^XTMP("XPDT",7317,"RTN","ORAM3",69,0)=" S ORAMRSF(103.011,IENS,104)=ORAMC2  ;COMPLICATION CODE"
^XTMP("XPDT",7317,"RTN","ORAM3",70,0)=" K ORAMF"
^XTMP("XPDT",7317,"RTN","ORAM3",71,0)=" S ORAMF(ORAMNX)=DA"
^XTMP("XPDT",7317,"RTN","ORAM3",72,0)=" K OERR"
^XTMP("XPDT",7317,"RTN","ORAM3",73,0)=" D UPDATE^DIE("""",""ORAMRSF"",""ORAMF"",""OERR"")"
^XTMP("XPDT",7317,"RTN","ORAM3",74,0)=" S ^ORAM(103,ORAMDFN,3,ORAMNX,2,1,0)=ORAMD2"
^XTMP("XPDT",7317,"RTN","ORAM3",75,0)=" I $L(ORAMCT,""^"")>0 N ORAMCC F ORAMCC=1:1:$L(ORAMCT,""^"") D  S ^ORAM(103,ORAMDFN,3,ORAMNX,2,0)=""^^""_ORAMCC_""^""_ORAMCC_""^""_ORAMDAY_""^"""
^XTMP("XPDT",7317,"RTN","ORAM3",76,0)=" . S ^ORAM(103,ORAMDFN,3,ORAMNX,2,ORAMCC+1,0)=$P(ORAMCT,""^"",ORAMCC)"
^XTMP("XPDT",7317,"RTN","ORAM3",77,0)=" S RESULT=1"
^XTMP("XPDT",7317,"RTN","ORAM3",78,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM3",79,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM3",80,0)="TLISTS ; Erases and sets Team Lists for Anticoagulation Clinics"
^XTMP("XPDT",7317,"RTN","ORAM3",81,0)=" ; Option: ORAM SET TEAMS"
^XTMP("XPDT",7317,"RTN","ORAM3",82,0)=" N ORAMLIST  ;ARRAYS OF TEAMS"
^XTMP("XPDT",7317,"RTN","ORAM3",83,0)=" D FTL(.ORAMLIST)"
^XTMP("XPDT",7317,"RTN","ORAM3",84,0)=" I '$D(ORAMLIST) Q  ;No lists defined"
^XTMP("XPDT",7317,"RTN","ORAM3",85,0)=" D ETEAM(.ORAMLIST)  ;ERASE ALL TEAM LISTS"
^XTMP("XPDT",7317,"RTN","ORAM3",86,0)=" D MTEAM(.ORAMLIST)  ;FORM TODAY'S TEAM LISTS"
^XTMP("XPDT",7317,"RTN","ORAM3",87,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM3",88,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM3",89,0)="FTL(ORAMLIST) ;FIND TEAM LISTS  CALLED FROM TLISTS"
^XTMP("XPDT",7317,"RTN","ORAM3",90,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM3",91,0)=" N ORAMI,ORAMCLST S ORAMI=0"
^XTMP("XPDT",7317,"RTN","ORAM3",92,0)=" D GETCLINS^ORAMSET(.ORAMCLST)"
^XTMP("XPDT",7317,"RTN","ORAM3",93,0)=" I +$G(ORAMCLST(0))'>0 Q  ;Site not SET UP"
^XTMP("XPDT",7317,"RTN","ORAM3",94,0)=" ; Loop through Clinics, get team lists for each"
^XTMP("XPDT",7317,"RTN","ORAM3",95,0)=" F  S ORAMI=$O(ORAMCLST(ORAMI)) Q:+ORAMI'>0  D"
^XTMP("XPDT",7317,"RTN","ORAM3",96,0)=" . N ORAMCL,ORAMALL,ORAMCPLX"
^XTMP("XPDT",7317,"RTN","ORAM3",97,0)=" . S ORAMCL=$P($G(ORAMCLST(ORAMI)),U,2) Q:+ORAMCL'>0"
^XTMP("XPDT",7317,"RTN","ORAM3",98,0)=" . S ORAMALL=$$GET^XPAR(ORAMCL,""ORAM TEAM LIST (ALL)"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAM3",99,0)=" . S:ORAMALL]"""" ORAMLIST(ORAMCL,""ALL"")=ORAMALL"
^XTMP("XPDT",7317,"RTN","ORAM3",100,0)=" . S ORAMCPLX=$$GET^XPAR(ORAMCL,""ORAM TEAM LIST (COMPLEX)"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAM3",101,0)=" . S:ORAMCPLX]"""" ORAMLIST(ORAMCL,""COMPLEX"")=ORAMCPLX"
^XTMP("XPDT",7317,"RTN","ORAM3",102,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM3",103,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM3",104,0)="ETEAM(ORAMLIST) ; Remove all Anticoagulation Patients from their respective lists"
^XTMP("XPDT",7317,"RTN","ORAM3",105,0)=" ; called from TLISTS"
^XTMP("XPDT",7317,"RTN","ORAM3",106,0)=" N ORAMI S ORAMI="""""
^XTMP("XPDT",7317,"RTN","ORAM3",107,0)=" F  S ORAMI=$O(ORAMLIST(ORAMI)) Q:ORAMI']""""  D"
^XTMP("XPDT",7317,"RTN","ORAM3",108,0)=" . N ORAML S ORAML="""""
^XTMP("XPDT",7317,"RTN","ORAM3",109,0)=" . F  S ORAML=$O(ORAMLIST(ORAMI,ORAML)) Q:ORAML']""""  D"
^XTMP("XPDT",7317,"RTN","ORAM3",110,0)=" . . N DO,DA,DIK"
^XTMP("XPDT",7317,"RTN","ORAM3",111,0)=" . . S DA(1)=ORAMLIST(ORAMI,ORAML),DIK=""^OR(100.21""_"",""_DA(1)_"",10,"""
^XTMP("XPDT",7317,"RTN","ORAM3",112,0)=" . . S DA=0 F  S DA=$O(^OR(100.21,DA(1),10,DA)) Q:+DA'>0  D"
^XTMP("XPDT",7317,"RTN","ORAM3",113,0)=" . . . D ^DIK"
^XTMP("XPDT",7317,"RTN","ORAM3",114,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM3",115,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAM3",116,0)="MTEAM(ORAMLIST) ; Build Today's Team Lists"
^XTMP("XPDT",7317,"RTN","ORAM3",117,0)=" ; CALLED FROM TLISTS"
^XTMP("XPDT",7317,"RTN","ORAM3",118,0)=" N ORAMCL S ORAMCL="""""
^XTMP("XPDT",7317,"RTN","ORAM3",119,0)=" ; Loop through ORAMLIST by clinic location"
^XTMP("XPDT",7317,"RTN","ORAM3",120,0)=" F  S ORAMCL=$O(ORAMLIST(ORAMCL)) Q:ORAMCL']""""  D"
^XTMP("XPDT",7317,"RTN","ORAM3",121,0)=" . N ORAMCN,ORAMCA,ORAMCC,ORAMDFN"
^XTMP("XPDT",7317,"RTN","ORAM3",122,0)=" . S ORAMCN=+ORAMCL                        ; Pointer to file 44"
^XTMP("XPDT",7317,"RTN","ORAM3",123,0)=" . S ORAMCA=$G(ORAMLIST(ORAMCL,""ALL""))     ; Pointer to ""All"" List"
^XTMP("XPDT",7317,"RTN","ORAM3",124,0)=" . S ORAMCC=$G(ORAMLIST(ORAMCL,""COMPLEX"")) ; Pointer to ""Complex"" List"
^XTMP("XPDT",7317,"RTN","ORAM3",125,0)=" . ; Loop through Anticoagulation Patients by location"
^XTMP("XPDT",7317,"RTN","ORAM3",126,0)=" . S ORAMDFN=0"
^XTMP("XPDT",7317,"RTN","ORAM3",127,0)=" . F  S ORAMDFN=$O(^ORAM(103,""CL"",ORAMCN,ORAMDFN)) Q:+ORAMDFN'>0  D"
^XTMP("XPDT",7317,"RTN","ORAM3",128,0)=" . . N ORAMD0,ORAMRDT,ORAMCPLX,ORAMNDCB,ORAMAXDT"
^XTMP("XPDT",7317,"RTN","ORAM3",129,0)=" . . S ORAMD0=$G(^ORAM(103,ORAMDFN,0))"
^XTMP("XPDT",7317,"RTN","ORAM3",130,0)=" . . S ORAMRDT=$P(ORAMD0,U,4)   ; Pt's Return Date"
^XTMP("XPDT",7317,"RTN","ORAM3",131,0)=" . . S ORAMAXDT=DT_"".2359""      ; Upper bound for return date range"
^XTMP("XPDT",7317,"RTN","ORAM3",132,0)=" . . S ORAMCPLX=$P(ORAMD0,U,10) ; Pt's Complexity"
^XTMP("XPDT",7317,"RTN","ORAM3",133,0)=" . . S ORAMNDCB=$P(ORAMD0,U,20) ; Next Day Callback"
^XTMP("XPDT",7317,"RTN","ORAM3",134,0)=" . . ; if next day callback, increment return date, disregard time"
^XTMP("XPDT",7317,"RTN","ORAM3",135,0)=" . . I +ORAMNDCB S ORAMRDT=$$FMADD^XLFDT($P(ORAMRDT,"".""),1)"
^XTMP("XPDT",7317,"RTN","ORAM3",136,0)=" . . ; if future return date or pt inactive, quit to next pt"
^XTMP("XPDT",7317,"RTN","ORAM3",137,0)=" . . I (ORAMRDT>ORAMAXDT)!(ORAMCPLX=2) Q"
^XTMP("XPDT",7317,"RTN","ORAM3",138,0)=" . . ; otherwise, add pt to appropriate list(s) for location"
^XTMP("XPDT",7317,"RTN","ORAM3",139,0)=" . . D ADDLIST(ORAMDFN,ORAMCA) ; All active pts on ""ALL"" List"
^XTMP("XPDT",7317,"RTN","ORAM3",140,0)=" . . I ORAMCPLX=1 D ADDLIST(ORAMDFN,ORAMCC) ; Complex pts also on ""COMPLEX"" List"
^XTMP("XPDT",7317,"RTN","ORAM3",141,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAM3",142,0)="ADDLIST(ORAMDFN,ORAMLDA) ; Add pt to Team List / Assure record is UNLOCKED"
^XTMP("XPDT",7317,"RTN","ORAM3",143,0)=" N DIC,DA,DO,X,ORAMLR"
^XTMP("XPDT",7317,"RTN","ORAM3",144,0)=" S X=ORAMDFN_"";DPT("""
^XTMP("XPDT",7317,"RTN","ORAM3",145,0)=" S DA(1)=ORAMLDA,DIC=""^OR(100.21""_"",""_DA(1)_"",10,"",DIC(0)=""L"" D FILE^DICN"
^XTMP("XPDT",7317,"RTN","ORAM3",146,0)=" D UNLOCK^ORAM1(.ORAMLR,ORAMDFN)"
^XTMP("XPDT",7317,"RTN","ORAM3",147,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMSET")="0^5^B40743224^n/a"
^XTMP("XPDT",7317,"RTN","ORAMSET",1,0)="ORAMSET ; ISL/JER - Anticoagulation Setup ;12/17/09  08:38"
^XTMP("XPDT",7317,"RTN","ORAMSET",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307**;Dec 17, 1997;Build 60"
^XTMP("XPDT",7317,"RTN","ORAMSET",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7317,"RTN","ORAMSET",4,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMSET",5,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMSET",6,0)="SET ; Enter Parameters"
^XTMP("XPDT",7317,"RTN","ORAMSET",7,0)=" N ORAMDIV,ORAMPARM,DIRUT,DUOUT,DTOUT,ORT0,ORAMTOUT K DIROUT"
^XTMP("XPDT",7317,"RTN","ORAMSET",8,0)=" S ORAMDIV=$$GETDIV Q:+ORAMDIV'>0"
^XTMP("XPDT",7317,"RTN","ORAMSET",9,0)=" S ORT0=$$NOW^XLFDT"
^XTMP("XPDT",7317,"RTN","ORAMSET",10,0)=" D TED^XPAREDIT(""ORAM PARAMETERS"",""B"",ORAMDIV) Q:+$G(DIROUT)!+$$TIMEOUT(ORT0)"
^XTMP("XPDT",7317,"RTN","ORAMSET",11,0)=" ; If Consult Link Enabled, ask Consult Request Service"
^XTMP("XPDT",7317,"RTN","ORAMSET",12,0)=" I +$$GET^XPAR(ORAMDIV,""ORAM CONSULT LINK ENABLED"") D  Q:+$D(DUOUT)!+$D(DTOUT)"
^XTMP("XPDT",7317,"RTN","ORAMSET",13,0)=" . S ORAMPARM=+$$GETPARM(""ORAM CONSULT REQUEST SERVICE"")_U_""Consult Request Service"" Q:+ORAMPARM'>0"
^XTMP("XPDT",7317,"RTN","ORAMSET",14,0)=" . D EDIT^XPAREDIT(ORAMDIV,ORAMPARM)"
^XTMP("XPDT",7317,"RTN","ORAMSET",15,0)=" ; Ask PCE Link Enabled"
^XTMP("XPDT",7317,"RTN","ORAMSET",16,0)=" S ORAMPARM=+$$GETPARM(""ORAM PCE LINK ENABLED"")_U_""PCE Link Enabled"" Q:+ORAMPARM'>0"
^XTMP("XPDT",7317,"RTN","ORAMSET",17,0)=" D EDIT^XPAREDIT(ORAMDIV,ORAMPARM) Q:+$G(DIROUT)!+$G(DIRUT)!+$D(DTOUT)"
^XTMP("XPDT",7317,"RTN","ORAMSET",18,0)=" ; Continue with PCE Parameter Template if TRUE"
^XTMP("XPDT",7317,"RTN","ORAMSET",19,0)=" I +$$GET^XPAR(ORAMDIV,""ORAM PCE LINK ENABLED"") D  Q:+$G(DIROUT)!+$G(ORAMTOUT)"
^XTMP("XPDT",7317,"RTN","ORAMSET",20,0)=" . S ORT0=$$NOW^XLFDT"
^XTMP("XPDT",7317,"RTN","ORAMSET",21,0)=" . D TED^XPAREDIT(""ORAM PCE PARAMETERS"",""B"",ORAMDIV)"
^XTMP("XPDT",7317,"RTN","ORAMSET",22,0)=" . S ORAMTOUT=$$TIMEOUT(ORT0)"
^XTMP("XPDT",7317,"RTN","ORAMSET",23,0)=" ; Continue with Letter Template"
^XTMP("XPDT",7317,"RTN","ORAMSET",24,0)=" D TED^XPAREDIT(""ORAM LETTER PARAMETERS"",""B"",ORAMDIV)"
^XTMP("XPDT",7317,"RTN","ORAMSET",25,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMSET",26,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMSET",27,0)="SETDIV ; Enter Site Parameters"
^XTMP("XPDT",7317,"RTN","ORAMSET",28,0)=" N ORAMDIV,DIRUT,DUOUT,DTOUT K DIROUT"
^XTMP("XPDT",7317,"RTN","ORAMSET",29,0)=" S ORAMDIV=$$GETDIV Q:+ORAMDIV'>0"
^XTMP("XPDT",7317,"RTN","ORAMSET",30,0)=" D TED^XPAREDIT(""ORAM SITE PARAMETERS"",""BA"",ORAMDIV)"
^XTMP("XPDT",7317,"RTN","ORAMSET",31,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMSET",32,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMSET",33,0)="SETCLIN ; Enter Clinic Parameters"
^XTMP("XPDT",7317,"RTN","ORAMSET",34,0)=" N ORAMCLIN,DIRUT,DUOUT,DTOUT K DIROUT"
^XTMP("XPDT",7317,"RTN","ORAMSET",35,0)=" S ORAMCLIN=$$SELLOC Q:+ORAMCLIN'>0"
^XTMP("XPDT",7317,"RTN","ORAMSET",36,0)=" D TED^XPAREDIT(""ORAM CLINIC PARAMETERS"",""BA"",ORAMCLIN)"
^XTMP("XPDT",7317,"RTN","ORAMSET",37,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMSET",38,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMSET",39,0)="TIMEOUT(T0) ; Evaluate whether TED^XPAREDIT timed-out (since it NEWs DTOUT and DIRUT)"
^XTMP("XPDT",7317,"RTN","ORAMSET",40,0)=" Q $S($$FMDIFF^XLFDT($$NOW^XLFDT,T0,2)'<DTIME:1,1:0)"
^XTMP("XPDT",7317,"RTN","ORAMSET",41,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMSET",42,0)="GETCLINS(RESULT) ; Get Clinics"
^XTMP("XPDT",7317,"RTN","ORAMSET",43,0)=" N LIST,ERR,ORAME,ORAMI S ORAME="""",ORAMI=0"
^XTMP("XPDT",7317,"RTN","ORAMSET",44,0)=" D ENVAL^XPAR(.LIST,""ORAM CLINIC NAME"",1,.ERR)"
^XTMP("XPDT",7317,"RTN","ORAMSET",45,0)=" I 'LIST S RESULT(0)=0 Q"
^XTMP("XPDT",7317,"RTN","ORAMSET",46,0)=" F  S ORAME=$O(LIST(ORAME)) Q:ORAME']""""  D"
^XTMP("XPDT",7317,"RTN","ORAMSET",47,0)=" . N ORAMV S ORAMV=$G(LIST(ORAME,1)) Q:ORAMV']"""""
^XTMP("XPDT",7317,"RTN","ORAMSET",48,0)=" . S ORAMI=ORAMI+1,RESULT(ORAMI)=ORAMV_U_ORAME"
^XTMP("XPDT",7317,"RTN","ORAMSET",49,0)=" . S RESULT(0)=ORAMI"
^XTMP("XPDT",7317,"RTN","ORAMSET",50,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMSET",51,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMSET",52,0)="CLIN4PT(RESULT,ORAMDFN) ; Get the Clinic which is following the patient"
^XTMP("XPDT",7317,"RTN","ORAMSET",53,0)=" N ORAMCL"
^XTMP("XPDT",7317,"RTN","ORAMSET",54,0)=" S ORAMCL=$P($G(^ORAM(103,ORAMDFN,6)),U,2)"
^XTMP("XPDT",7317,"RTN","ORAMSET",55,0)=" S RESULT=$S(+ORAMCL>0:ORAMCL_"";SC("",1:0)"
^XTMP("XPDT",7317,"RTN","ORAMSET",56,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMSET",57,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMSET",58,0)="GET(RESULT,ORAMENT) ; Get Parameters"
^XTMP("XPDT",7317,"RTN","ORAMSET",59,0)=" N ADD1,ADD2,ADD3,DNOTE,ENOTE,INOTE,ATEAM,CBCQO,CTEAM,CFAX,CPHONE,ORAMALL"
^XTMP("XPDT",7317,"RTN","ORAMSET",60,0)=" N CENAB,CSVC,CPLXPH,IVST,LTR,ORIENT,SMPLPH,SVST,DSSID,DSSUNIT,HCT,HCTNM,NLABTM,TOLLFREE"
^XTMP("XPDT",7317,"RTN","ORAMSET",61,0)=" N INRQO,MCNM,NCLOC,PCEON,PHCLIN,POCNM,RPATH,SIGNM,SIGTTL,SITENM,VLOC,PILLSTR,ICDC,DPIND"
^XTMP("XPDT",7317,"RTN","ORAMSET",62,0)=" S ORAMENT=$S($G(ORAMENT)]"""":$G(ORAMENT),1:""ALL""),DPIND="""""
^XTMP("XPDT",7317,"RTN","ORAMSET",63,0)=" S ORAMALL=$S(ORAMENT[""ALL"":ORAMENT,1:""ALL^""_ORAMENT)"
^XTMP("XPDT",7317,"RTN","ORAMSET",64,0)=" S ADD1=$$GET^XPAR(ORAMENT,""ORAM ADDRESS LINE 1"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",65,0)=" S ADD2=$$GET^XPAR(ORAMENT,""ORAM ADDRESS LINE 2"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",66,0)=" S ADD3=$$GET^XPAR(ORAMENT,""ORAM ADDRESS LINE 3"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",67,0)=" S DNOTE=$$GET^XPAR(ORAMALL,""ORAM DISCHARGE NOTE"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",68,0)=" S ENOTE=$$GET^XPAR(ORAMALL,""ORAM INTERIM NOTE"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",69,0)=" S INOTE=$$GET^XPAR(ORAMALL,""ORAM INITIAL NOTE"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",70,0)=" S ATEAM=$$GET^XPAR(ORAMENT,""ORAM TEAM LIST (ALL)"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",71,0)=" S CTEAM=$$GET^XPAR(ORAMENT,""ORAM TEAM LIST (COMPLEX)"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",72,0)=" S CBCQO=$$GET^XPAR(ORAMALL,""ORAM CBC QUICK ORDER"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",73,0)=" S CFAX=$$GET^XPAR(ORAMENT,""ORAM CLINIC FAX NUMBER"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",74,0)=" S CPHONE=$$GET^XPAR(ORAMENT,""ORAM CLINIC PHONE NUMBER"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",75,0)=" S TOLLFREE=$$GET^XPAR(ORAMENT,""ORAM TOLL FREE PHONE"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",76,0)=" S CENAB=$$GET^XPAR(ORAMENT,""ORAM CONSULT LINK ENABLED"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",77,0)=" S CSVC=$$GET^XPAR(ORAMENT,""ORAM CONSULT REQUEST SERVICE"",1,""E"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",78,0)=" S CPLXPH=$$GET^XPAR(ORAMALL,""ORAM CPT FOR COMPLEX PHONE"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",79,0)=" S IVST=$$GET^XPAR(ORAMALL,""ORAM CPT FOR INITIAL VISIT"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",80,0)=" S LTR=$$GET^XPAR(ORAMALL,""ORAM CPT FOR LETTER TO PT"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",81,0)=" S ORIENT=$$GET^XPAR(ORAMALL,""ORAM CPT FOR ORIENTATION"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",82,0)=" S SMPLPH=$$GET^XPAR(ORAMALL,""ORAM CPT FOR SIMPLE PHONE"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",83,0)=" S SVST=$$GET^XPAR(ORAMALL,""ORAM CPT FOR SUBSEQUENT VISIT"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",84,0)=" S DSSID=$$GET^XPAR(ORAMALL,""ORAM DSS ID"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",85,0)=" S DSSUNIT=$$GET^XPAR(ORAMALL,""ORAM DSS UNIT"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",86,0)=" S HCT=$$GET^XPAR(ORAMALL,""ORAM HCT/HGB REFERENCE"",1,""B"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",87,0)=" S HCTNM=$P(HCT,U,2)"
^XTMP("XPDT",7317,"RTN","ORAMSET",88,0)=" S HCT=$P(HCT,U)"
^XTMP("XPDT",7317,"RTN","ORAMSET",89,0)=" S INRQO=$$GET^XPAR(ORAMALL,""ORAM INR QUICK ORDER"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",90,0)=" S MCNM=$$GET^XPAR(ORAMALL,""ORAM MEDICAL CENTER NAME"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",91,0)=" S NCLOC=$$GET^XPAR(ORAMENT,""ORAM NON-COUNT LOCATION"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",92,0)=" S PCEON=$$GET^XPAR(ORAMENT,""ORAM PCE LINK ENABLED"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",93,0)=" S ICDC=$$GET^XPAR(ORAMENT,""ORAM AUTO PRIMARY INDICATION"",1,""E"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",94,0)=" I ICDC]"""" D"
^XTMP("XPDT",7317,"RTN","ORAMSET",95,0)=" . N ICDD,ICDDL,ICDDESC"
^XTMP("XPDT",7317,"RTN","ORAMSET",96,0)=" . S ICDDL=$$ICDD^ICDCODE(ICDC,""ICDDESC"",DT)"
^XTMP("XPDT",7317,"RTN","ORAMSET",97,0)=" . S DPIND=ICDC_U_$$TITLE^XLFSTR($G(ICDDESC(1)))_"" (""_ICDC_"")"""
^XTMP("XPDT",7317,"RTN","ORAMSET",98,0)=" S PHCLIN=$$GET^XPAR(ORAMENT,""ORAM PHONE CLINIC"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",99,0)=" S PILLSTR=$$GET^XPAR(ORAMENT,""ORAM DEFAULT PILL STRENGTH"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",100,0)=" S NLABTM=$$GET^XPAR(ORAMENT,""ORAM INCL TIME W/NEXT INR DATE"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",101,0)=" S POCNM=$$GET^XPAR(ORAMENT,""ORAM POINT OF CONTACT NAME"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",102,0)=" S RPATH=$$GET^XPAR(ORAMALL,""ORAM RAV FILE PATH"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",103,0)=" S SIGNM=$$GET^XPAR(ORAMENT,""ORAM SIGNATURE BLOCK NAME"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",104,0)=" S SIGTTL=$$GET^XPAR(ORAMENT,""ORAM SIGNATURE BLOCK TITLE"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",105,0)=" S SITENM=$$GET^XPAR(ORAMENT,""ORAM CLINIC NAME"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",106,0)=" S VLOC=$$GET^XPAR(ORAMENT,""ORAM VISIT LOCATION"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",107,0)=" S RESULT(0)=SITENM_U_ATEAM_U_CTEAM_U_INOTE_U_ENOTE_U_DNOTE_U_SMPLPH_U_SVST_U_CPLXPH_U_ORIENT_U_IVST_U_CENAB_U_PCEON_U_LTR_U_U_ADD1_U_ADD2_U_ADD3"
^XTMP("XPDT",7317,"RTN","ORAMSET",108,0)=" S RESULT(1)=SIGNM_U_SIGTTL_U_POCNM_U_CPHONE_""|""_CFAX_U_MCNM_U_PILLSTR_U_NLABTM_U_TOLLFREE"
^XTMP("XPDT",7317,"RTN","ORAMSET",109,0)=" S RESULT(2)=VLOC_""|""_PHCLIN_""|""_NCLOC_U_INRQO_""|""_CBCQO_U_DUZ(2)_U_DSSUNIT_U_DSSID_U_CSVC_U_HCT_""|""_HCTNM_U_RPATH_U_DPIND"
^XTMP("XPDT",7317,"RTN","ORAMSET",110,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMSET",111,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMSET",112,0)="INDICS(RESULT) ; RPC To Get indications for care"
^XTMP("XPDT",7317,"RTN","ORAMSET",113,0)=" D GETLST^XPAR(.RESULT,""SYS^PKG"",""ORAM INDICATIONS FOR CARE"",""E"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",114,0)=" I +RESULT'>0 S RESULT(0)=0"
^XTMP("XPDT",7317,"RTN","ORAMSET",115,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMSET",116,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMSET",117,0)="GETDIV() ; get division"
^XTMP("XPDT",7317,"RTN","ORAMSET",118,0)=" N DIV,ORAMY"
^XTMP("XPDT",7317,"RTN","ORAMSET",119,0)=" S DIV=$$KSP^XUPARAM(""INST""),ORAMY=0"
^XTMP("XPDT",7317,"RTN","ORAMSET",120,0)=" I $$GET1^DIQ(4,DIV_"","",5,""I"")'=""Y"" S ORAMY=DIV_"";DIC(4,"" I 1"
^XTMP("XPDT",7317,"RTN","ORAMSET",121,0)=" E  S ORAMY=$$SELDIV"
^XTMP("XPDT",7317,"RTN","ORAMSET",122,0)=" Q ORAMY"
^XTMP("XPDT",7317,"RTN","ORAMSET",123,0)="SELDIV() ; select division"
^XTMP("XPDT",7317,"RTN","ORAMSET",124,0)=" N DIC,X,Y"
^XTMP("XPDT",7317,"RTN","ORAMSET",125,0)=" W !!,""Enter Anticoagulation Management Parameters by Division:"",!"
^XTMP("XPDT",7317,"RTN","ORAMSET",126,0)=" S DIC=4,DIC(0)=""AEMQ"",DIC(""S"")=""I +$O(^DG(40.8,""""AD"""",+Y,0))"""
^XTMP("XPDT",7317,"RTN","ORAMSET",127,0)=" D ^DIC S:+Y>0 Y=+Y_"";DIC(4,"""
^XTMP("XPDT",7317,"RTN","ORAMSET",128,0)=" Q Y"
^XTMP("XPDT",7317,"RTN","ORAMSET",129,0)="SELLOC() ; select hospital location"
^XTMP("XPDT",7317,"RTN","ORAMSET",130,0)=" N DIC,X,Y,TIUAPDT S DIC=44,DIC(0)=""AEMQ"""
^XTMP("XPDT",7317,"RTN","ORAMSET",131,0)=" S DIC(""A"")=""Select CLINIC: """
^XTMP("XPDT",7317,"RTN","ORAMSET",132,0)=" S DIC(""S"")=""I $$GOODLOC^ORAMSET(Y)"""
^XTMP("XPDT",7317,"RTN","ORAMSET",133,0)=" D ^DIC K DIC(""S"") S:+Y>0 Y=+Y_"";SC("""
^XTMP("XPDT",7317,"RTN","ORAMSET",134,0)=" Q Y"
^XTMP("XPDT",7317,"RTN","ORAMSET",135,0)="GOODLOC(LOC) ; Returns 1 if ^SC hospital location IFN LOC is good, else 0"
^XTMP("XPDT",7317,"RTN","ORAMSET",136,0)=" N GOODLOC,INACTIVE,OOS,CLINIC,NONCOUNT S (GOODLOC,INACTIVE,NONCOUNT)=0"
^XTMP("XPDT",7317,"RTN","ORAMSET",137,0)=" I +$G(^SC(LOC,""I""))>0,(+$G(^(""I""))'>DT) D"
^XTMP("XPDT",7317,"RTN","ORAMSET",138,0)=" . S INACTIVE=1"
^XTMP("XPDT",7317,"RTN","ORAMSET",139,0)=" . ; check if reactivated:"
^XTMP("XPDT",7317,"RTN","ORAMSET",140,0)=" . I +$P($G(^(""I"")),U,2)>0,$P($G(^(""I"")),U,2)'>DT S INACTIVE=0"
^XTMP("XPDT",7317,"RTN","ORAMSET",141,0)=" S OOS=+$D(^SC(LOC,""OOS"")) ; Occasion of service"
^XTMP("XPDT",7317,"RTN","ORAMSET",142,0)=" S CLINIC=+($P(^SC(LOC,0),U,3)=""C"")"
^XTMP("XPDT",7317,"RTN","ORAMSET",143,0)=" S NONCOUNT=$S($P(^SC(LOC,0),U,17)=""Y"":1,1:0)"
^XTMP("XPDT",7317,"RTN","ORAMSET",144,0)=" I 'INACTIVE,'OOS,'NONCOUNT,CLINIC S GOODLOC=1"
^XTMP("XPDT",7317,"RTN","ORAMSET",145,0)=" Q GOODLOC"
^XTMP("XPDT",7317,"RTN","ORAMSET",146,0)="GETPARM(X) ; Get parameter as IEN^NAME"
^XTMP("XPDT",7317,"RTN","ORAMSET",147,0)=" N DIC,Y S DIC=8989.51,DIC(0)=""MQ"""
^XTMP("XPDT",7317,"RTN","ORAMSET",148,0)=" D ^DIC"
^XTMP("XPDT",7317,"RTN","ORAMSET",149,0)=" Q Y"
^XTMP("XPDT",7317,"RTN","ORAMTTR")="0^7^B84948729^n/a"
^XTMP("XPDT",7317,"RTN","ORAMTTR",1,0)="ORAMTTR ; POR/RSF - Rosendaal Calculations, Individual & Group ;11/13/09  10:44"
^XTMP("XPDT",7317,"RTN","ORAMTTR",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307**;Dec 17, 1997;Build 60"
^XTMP("XPDT",7317,"RTN","ORAMTTR",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7317,"RTN","ORAMTTR",4,0)=" ;needs testing in system with new file and parameters"
^XTMP("XPDT",7317,"RTN","ORAMTTR",5,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",6,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMTTR",7,0)="MAIN ; Rosendaal TTR Option"
^XTMP("XPDT",7317,"RTN","ORAMTTR",8,0)=" N RESULT"
^XTMP("XPDT",7317,"RTN","ORAMTTR",9,0)=" D NROSENT(.RESULT)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",10,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",11,0)="SINGLE ; TTR for Individual"
^XTMP("XPDT",7317,"RTN","ORAMTTR",12,0)=" N ORAMDFN,ORAMED,ORAMSD,DUOUT,DTOUT,DIRUT,RESULT"
^XTMP("XPDT",7317,"RTN","ORAMTTR",13,0)=" S (ORAMED,ORAMSD)="""""
^XTMP("XPDT",7317,"RTN","ORAMTTR",14,0)=" W !!,""Single Patient TRR Calculation (Rosendaal Method):"",!"
^XTMP("XPDT",7317,"RTN","ORAMTTR",15,0)=" S ORAMDFN=+$$PATIENT^ORAMX Q:+ORAMDFN'>0"
^XTMP("XPDT",7317,"RTN","ORAMTTR",16,0)=" F  D  Q:+ORAMED>+ORAMSD!$D(DIRUT)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",17,0)=" . W !"
^XTMP("XPDT",7317,"RTN","ORAMTTR",18,0)=" . S ORAMSD=+$$READ^ORAMX(""DA^::E"",""Please Enter START Date: "",""T-90"",""Enter a start date for the report"")"
^XTMP("XPDT",7317,"RTN","ORAMTTR",19,0)=" . Q:'ORAMSD"
^XTMP("XPDT",7317,"RTN","ORAMTTR",20,0)=" . S ORAMED=+$$READ^ORAMX(""DA^::E"",""  Please Enter END Date: "",""T"",""Enter an INCLUSIVE end date for the report"")"
^XTMP("XPDT",7317,"RTN","ORAMTTR",21,0)=" . Q:'ORAMED"
^XTMP("XPDT",7317,"RTN","ORAMTTR",22,0)=" . I $L(ORAMED,""."")=1 S ORAMED=ORAMED_"".2359"""
^XTMP("XPDT",7317,"RTN","ORAMTTR",23,0)=" . I ORAMSD>ORAMED W !,""END DATE must be more recent than the START DATE"" S (ORAMSD,ORAMED)="""""
^XTMP("XPDT",7317,"RTN","ORAMTTR",24,0)=" Q:$S(+ORAMDFN'>0:1,ORAMED'>0:1,ORAMSD'>0:1,1:0)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",25,0)=" D NRINDV(.RESULT,ORAMDFN,ORAMSD,ORAMED,1)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",26,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",27,0)="NROSENT(RESULT) ;"
^XTMP("XPDT",7317,"RTN","ORAMTTR",28,0)=" N ORAMSD,ORAMED,ORAMDFN,ORAMFSD,ORAMCLIN,ORAMPT,ORAMDATE,LG,HG,V1,V2,D1,D2,ORAMDAYS"
^XTMP("XPDT",7317,"RTN","ORAMTTR",29,0)=" N ORAMDIG,ORAMTD,ORAMCARR,TOTS,CNT,ORSITE"
^XTMP("XPDT",7317,"RTN","ORAMTTR",30,0)=" K ^TMP(""ORAM"",$J)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",31,0)=" W !!,""Rosendaal method for percentage of INR scores in therapeutic range"",!"
^XTMP("XPDT",7317,"RTN","ORAMTTR",32,0)="SD1 ; Get date range for calculations"
^XTMP("XPDT",7317,"RTN","ORAMTTR",33,0)=" S ORAMSD=+$$READ^ORAMX(""DA^::E"",""Please Enter START Date: "",""T-90"",""Enter a start date for the report"")"
^XTMP("XPDT",7317,"RTN","ORAMTTR",34,0)=" Q:'ORAMSD"
^XTMP("XPDT",7317,"RTN","ORAMTTR",35,0)=" S ORAMED=+$$READ^ORAMX(""DA^::E"",""  Please Enter END Date: "",""T"",""Enter an INCLUSIVE end date for the report"")"
^XTMP("XPDT",7317,"RTN","ORAMTTR",36,0)=" Q:'ORAMED"
^XTMP("XPDT",7317,"RTN","ORAMTTR",37,0)=" I $L(ORAMED,""."")=1 S ORAMED=ORAMED_"".2359"""
^XTMP("XPDT",7317,"RTN","ORAMTTR",38,0)=" I ORAMSD>ORAMED W !,""END DATE must be more recent than the START DATE"" S (ORAMSD,ORAMED)="""" G SD1"
^XTMP("XPDT",7317,"RTN","ORAMTTR",39,0)=" S ORAMDFN=0 F  S ORAMDFN=$O(^ORAM(103,ORAMDFN)) Q:'$G(ORAMDFN)  D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",40,0)=" . N ORAMFS,ORAMDD,PGR"
^XTMP("XPDT",7317,"RTN","ORAMTTR",41,0)=" . Q:'+$D(^ORAM(103,ORAMDFN,3))  ;go to next pt if no flow sheet entries"
^XTMP("XPDT",7317,"RTN","ORAMTTR",42,0)=" . Q:'$D(^ORAM(103,ORAMDFN,6))  Q:$P(^ORAM(103,ORAMDFN,6),U,2)=""""  ;QUIT IF NO CLINIC ASSIGNED"
^XTMP("XPDT",7317,"RTN","ORAMTTR",43,0)=" . S ORAMCLIN=$P(^ORAM(103,ORAMDFN,6),U,2)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",44,0)=" . ; 1. Get local labs for patient w/in date range"
^XTMP("XPDT",7317,"RTN","ORAMTTR",45,0)=" . D NGETINR(ORAMDFN,ORAMCLIN,ORAMSD,ORAMED)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",46,0)=" . ; 2. Next, loop thru flow sheets for patient to gather goal ranges"
^XTMP("XPDT",7317,"RTN","ORAMTTR",47,0)=" . S ORAMDD=ORAMSD-.01"
^XTMP("XPDT",7317,"RTN","ORAMTTR",48,0)=" . F  S ORAMDD=$O(^ORAM(103,ORAMDFN,3,""B"",ORAMDD)) Q:'+$G(ORAMDD)  D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",49,0)=" .. S ORAMFS=0 F  S ORAMFS=$O(^ORAM(103,ORAMDFN,3,""B"",ORAMDD,ORAMFS)) Q:'+$G(ORAMFS)  D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",50,0)=" ... I $G(PGR)="""" S PGR=0 I ORAMFS>2 S PGR=$P(^ORAM(103,ORAMDFN,3,(ORAMFS-1),0),U,12) S:$G(PGR)="""" PGR=0"
^XTMP("XPDT",7317,"RTN","ORAMTTR",51,0)=" ... S ORAMFSD=$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U) Q:$G(ORAMFSD)<ORAMSD  Q:$G(ORAMFSD)>ORAMED  ;OUT OF DATE RANGE"
^XTMP("XPDT",7317,"RTN","ORAMTTR",52,0)=" ... I $P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U,3)="""",'+$D(^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD)) Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",53,0)=" ... I +$D(^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD)) S ^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD)=$P(^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD),U)_U_$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U,12)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",54,0)=" ... I '+$D(^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD)) S ^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD)=$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U,3)_U_$P(^(0),U,12)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",55,0)=" ; 3. Loop thru array of pts & INRs collected in prior steps"
^XTMP("XPDT",7317,"RTN","ORAMTTR",56,0)=" ;    Format: ^TMP(""ORAM"",$J,CLINIC,DFN,FMDATE)=INR_VALUE ^GOAL RANGE"
^XTMP("XPDT",7317,"RTN","ORAMTTR",57,0)=" S ORAMCLIN=0"
^XTMP("XPDT",7317,"RTN","ORAMTTR",58,0)=" F  S ORAMCLIN=$O(^TMP(""ORAM"",$J,ORAMCLIN)) Q:$G(ORAMCLIN)=""""  D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",59,0)=" . N ORAMPT S ORAMPT=0"
^XTMP("XPDT",7317,"RTN","ORAMTTR",60,0)=" . F  S ORAMPT=$O(^TMP(""ORAM"",$J,ORAMCLIN,ORAMPT)) Q:'+$G(ORAMPT)  D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",61,0)=" .. N ORAMDATE S ORAMDATE=0"
^XTMP("XPDT",7317,"RTN","ORAMTTR",62,0)=" .. S (LG,HG,V1,V1,D1,D2)="""""
^XTMP("XPDT",7317,"RTN","ORAMTTR",63,0)=" .. F  S ORAMDATE=$O(^TMP(""ORAM"",$J,ORAMCLIN,ORAMPT,ORAMDATE)) Q:'+$G(ORAMDATE)  D NGETFS(.ORAMCARR,ORAMCLIN,ORAMPT,ORAMDATE,.D1,.D2,.V1,.V2,.PGR,.LG,.HG,.ORAMDIG,.ORAMTD)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",64,0)=" I $G(ORAMDIG)<1 S RESULT=""0^0"" W !!?2,""Unable to calulate TTR (may be due to a short time frame with few repeat"",!?2,""readings on the same patients).""  Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",65,0)=" S TOTS=$TR($J((ORAMDIG/ORAMTD)*100,8,1),"" "","""")"
^XTMP("XPDT",7317,"RTN","ORAMTTR",66,0)=" S ORSITE=$$NAME^VASITE"
^XTMP("XPDT",7317,"RTN","ORAMTTR",67,0)=" S:ORSITE']"""" ORSITE=$P($$SITE^VASITE,U,2)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",68,0)=" W @IOF,""Results of Rosendaal Method for Time in Therapeutic Range:"""
^XTMP("XPDT",7317,"RTN","ORAMTTR",69,0)=" W !!,""Facility-wide for "",ORSITE,"" for "",$$FMTE^XLFDT(ORAMSD,2),"" - "",$$FMTE^XLFDT(ORAMED,2)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",70,0)=" W !,""TTR = "",TOTS,""% (TOTAL DAYS IN GOAL: "",$TR($J(ORAMDIG,8,1),"" "",""""),"" TOTAL DAYS: "",$TR($J(ORAMTD,8,1),"" "",""""),"")"""
^XTMP("XPDT",7317,"RTN","ORAMTTR",71,0)=" I +$O(ORAMCARR(0)) W !!,""Results by Clinic:"""
^XTMP("XPDT",7317,"RTN","ORAMTTR",72,0)=" S CNT=0 F  S CNT=$O(ORAMCARR(CNT)) Q:$G(CNT)=""""  D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",73,0)=" . N CTOT S CTOT=$TR($J(($P(ORAMCARR(CNT),U,2)/$P(ORAMCARR(CNT),U))*100,8,1),"" "",""""),$P(ORAMCARR(CNT),U,2)=$TR($J($P(ORAMCARR(CNT),U,2),8,1),"" "",""""),$P(ORAMCARR(CNT),U,3)=CTOT"
^XTMP("XPDT",7317,"RTN","ORAMTTR",74,0)=" . W !,$E($P(^SC(CNT,0),U),1,21),"": TTR = "",CTOT,""% (Total days in goal: "",$TR($J($P(ORAMCARR(CNT),U,2),8,1),"" "",""""),"" TOTAL DAYS: "",$TR($J($P(ORAMCARR(CNT),U),8,1),"" "",""""),"")"",!"
^XTMP("XPDT",7317,"RTN","ORAMTTR",75,0)=" . S ORAMCARR(CNT)=$P(^SC(CNT,0),U)_U_$P(ORAMCARR(CNT),U,2,3)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",76,0)=" M RESULT=ORAMCARR"
^XTMP("XPDT",7317,"RTN","ORAMTTR",77,0)=" S RESULT(0)=TOTS_U_$TR($J(ORAMDIG,8,1),"" "","""")_U_$TR($J(ORAMTD,8,1),"" "","""")"
^XTMP("XPDT",7317,"RTN","ORAMTTR",78,0)=" K ^TMP(""ORAM"",$J)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",79,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",80,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMTTR",81,0)="NRINDV(RESULT,ORAMDFN,ORAMSD,ORAMED,ORAMWON) ; TTR for single patient"
^XTMP("XPDT",7317,"RTN","ORAMTTR",82,0)=" N ORAMFS,ORAMDD,PGR,ORAMCLIN"
^XTMP("XPDT",7317,"RTN","ORAMTTR",83,0)=" S RESULT=""NA"""
^XTMP("XPDT",7317,"RTN","ORAMTTR",84,0)=" K ^TMP(""ORAM"",$J)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",85,0)=" Q:'+$D(^ORAM(103,ORAMDFN))  ;NOT IN FILE YET"
^XTMP("XPDT",7317,"RTN","ORAMTTR",86,0)=" Q:'+$D(^ORAM(103,ORAMDFN,3))  ;NO FS ENTRIES YET"
^XTMP("XPDT",7317,"RTN","ORAMTTR",87,0)=" Q:'$D(^ORAM(103,ORAMDFN,6))  Q:$P(^ORAM(103,ORAMDFN,6),U,2)=""""  ;QUIT IF NO CLINIC ASSIGNED"
^XTMP("XPDT",7317,"RTN","ORAMTTR",88,0)=" S:$G(ORAMSD)="""" ORAMSD=$P(^ORAM(103,ORAMDFN,3,1,0),U)  ;IF NO DEFINED START DATE, DO FOR THE WHOLE TIME IN CLINIC."
^XTMP("XPDT",7317,"RTN","ORAMTTR",89,0)=" S:$G(ORAMED)="""" ORAMED=DT"
^XTMP("XPDT",7317,"RTN","ORAMTTR",90,0)=" S:$G(ORAMWON)="""" ORAMWON=0  ;IF A NUMBER WILL WRITE RESULTS TO THE SCREEN"
^XTMP("XPDT",7317,"RTN","ORAMTTR",91,0)=" S ORAMCLIN=$P(^ORAM(103,ORAMDFN,6),U,2)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",92,0)=" D NGETINR(ORAMDFN,ORAMCLIN,ORAMSD,ORAMED)  ;GETS LOCAL INR VALUES IN FORM ^TMP(""ORAM"",$J,CLINIC,DFN,FM_DATE)=VALUE^"
^XTMP("XPDT",7317,"RTN","ORAMTTR",93,0)=" S ORAMDD=ORAMSD-.01"
^XTMP("XPDT",7317,"RTN","ORAMTTR",94,0)=" F  S ORAMDD=$O(^ORAM(103,ORAMDFN,3,""B"",ORAMDD)) Q:'+$G(ORAMDD)  D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",95,0)=" . S ORAMFS=0 F  S ORAMFS=$O(^ORAM(103,ORAMDFN,3,""B"",ORAMDD,ORAMFS)) Q:'+$G(ORAMFS)  D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",96,0)=" .. N ORAMFSD"
^XTMP("XPDT",7317,"RTN","ORAMTTR",97,0)=" .. I $G(PGR)="""" S PGR=0 I ORAMFS>2 S PGR=$P(^ORAM(103,ORAMDFN,3,(ORAMFS-1),0),U,12) S:$G(PGR)="""" PGR=0"
^XTMP("XPDT",7317,"RTN","ORAMTTR",98,0)=" .. S ORAMFSD=$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U) Q:$G(ORAMFSD)<ORAMSD  Q:$G(ORAMFSD)>ORAMED  ;OUT OF DATE RANGE"
^XTMP("XPDT",7317,"RTN","ORAMTTR",99,0)=" .. I $P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U,3)="""",'+$D(^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD)) Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",100,0)=" .. I +$D(^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD)) S ^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD)=$P(^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD),U)_U_$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U,12)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",101,0)=" .. I '+$D(^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD)) S ^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMFSD)=$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U,3)_U_$P(^(0),U,12)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",102,0)=" Q:'$D(^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN))"
^XTMP("XPDT",7317,"RTN","ORAMTTR",103,0)=" ;FORMED ARRAY OF PATIENTS AND SCORES IN THE DATE RANGE; FORMAT ^TMP(""ORAM"",$J,CLINIC,DFN,FMDATE)=INR_VALUE ^ GOAL RANGE."
^XTMP("XPDT",7317,"RTN","ORAMTTR",104,0)=" N ORAMDATE,LG,HG,V1,V2,D1,D2,ORAMDAYS,ORAMDIG,ORAMTD"
^XTMP("XPDT",7317,"RTN","ORAMTTR",105,0)=" N ORAMC2,ORAMPT,ORAMCARR S ORAMC2=ORAMCLIN,ORAMPT=ORAMDFN"
^XTMP("XPDT",7317,"RTN","ORAMTTR",106,0)=" S ORAMDATE=0 F  S ORAMDATE=$O(^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMDATE)) Q:'+$G(ORAMDATE)  D NGETFS(.ORAMCARR,ORAMCLIN,ORAMDFN,ORAMDATE,.D1,.D2,.V1,.V2,.PGR,.LG,.HG,.ORAMDIG,.ORAMTD)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",107,0)=" I $G(ORAMDIG)<1 S RESULT=""0^0"" W:+$G(ORAMWON) !!?2,""Unable to calulate TTR (may be due to a short time frame with few repeat"",!?2,""readings on the same patient).""  Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",108,0)=" N TOTS S TOTS=$TR($J((ORAMDIG/ORAMTD)*100,8,1),"" "","""")"
^XTMP("XPDT",7317,"RTN","ORAMTTR",109,0)=" I +$G(ORAMWON) D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",110,0)=" . W !!,""Rosendaal method for percentage of INR scores in therapeutic range"",!"
^XTMP("XPDT",7317,"RTN","ORAMTTR",111,0)=" . W !,?5,$E($P(^DPT($G(ORAMDFN),0),U),1,10)_"" (""_$E($P(^(0),U,9),6,9)_"") for "",$$FMTE^XLFDT(ORAMSD,2),"" - "",$$FMTE^XLFDT(ORAMED,2)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",112,0)=" . W !,?5,""TTR = "",TOTS,""%  (TOTAL DAYS IN GOAL: "",$TR($J(ORAMDIG,8,1),"" "",""""),""  TOTAL DAYS: "",$TR($J(ORAMTD,8,1),"" "",""""),"")"",!"
^XTMP("XPDT",7317,"RTN","ORAMTTR",113,0)=" S RESULT=TOTS_U_$TR($J(ORAMDIG,8,1),"" "","""")_U_$TR($J(ORAMTD,8,1),"" "","""")"
^XTMP("XPDT",7317,"RTN","ORAMTTR",114,0)=" K ^TMP(""ORAM"",$J)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",115,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",116,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMTTR",117,0)="NGETINR(ORAMDFN,ORAMCLIN,ORAMSD,ORAMED) ; Get local INRs - sort by clinic, patient, & date"
^XTMP("XPDT",7317,"RTN","ORAMTTR",118,0)=" N LDATE,INR,LRDFN,ORAMITST,ORAMQO,INRHD,INRRD,RSD,RED"
^XTMP("XPDT",7317,"RTN","ORAMTTR",119,0)=" I '$G(ORAMDFN) Q  ;IF DFN IS NOT PASSED, EXIT"
^XTMP("XPDT",7317,"RTN","ORAMTTR",120,0)=" S LRDFN=$G(^DPT(ORAMDFN,""LR"")) Q:'+$G(LRDFN)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",121,0)=" S RSD=9999999-(ORAMSD-.01)  ;REVERSE START DATE"
^XTMP("XPDT",7317,"RTN","ORAMTTR",122,0)=" S RED=9999999-ORAMED"
^XTMP("XPDT",7317,"RTN","ORAMTTR",123,0)=" N ORAMITST,ORAMORD S ORAMQO=$$GET^XPAR(""ALL"",""ORAM INR QUICK ORDER"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORAMTTR",124,0)=" I +ORAMQO'>0 W !!,""Parameter ORAM QUICK ORDER not yet established. Please contact your CAC."",! Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",125,0)=" S ORAMITST=$$INRCHK^ORAM(ORAMQO)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",126,0)=" I +ORAMITST'>0 W !!,""Parameter ORAM QUICK ORDER not properly set up. Please contact your CAC."",! Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",127,0)=" S LDATE=RSD F  SET LDATE=$O(^LR(LRDFN,""CH"",LDATE),-1) Q:LDATE<1!(LDATE<RED)  D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",128,0)=" . N SCORE S SCORE=$G(^LR(LRDFN,""CH"",LDATE,ORAMITST))  ;648149"
^XTMP("XPDT",7317,"RTN","ORAMTTR",129,0)=" . Q:SCORE=""""  ;QUIT IF NO INR TEST"
^XTMP("XPDT",7317,"RTN","ORAMTTR",130,0)=" . Q:$P(SCORE,U,1)=""""  ;QUIT IF NO INR DATA"
^XTMP("XPDT",7317,"RTN","ORAMTTR",131,0)=" . S INR=$P(SCORE,U,1)  ;INR"
^XTMP("XPDT",7317,"RTN","ORAMTTR",132,0)=" . N ORAMX S ORAMX=$E((9999999-LDATE),1,7)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",133,0)=" . S ^TMP(""ORAM"",$J,ORAMCLIN,ORAMDFN,ORAMX)=$G(INR)_U"
^XTMP("XPDT",7317,"RTN","ORAMTTR",134,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",135,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMTTR",136,0)="NGETFS(ORAMCARR,ORAMCLIN,ORAMPT,ORAMDATE,D1,D2,V1,V2,PGR,LG,HG,ORAMDIG,ORAMTD) ; Check flow sheet entries vs. goals"
^XTMP("XPDT",7317,"RTN","ORAMTTR",137,0)=" N CG,ORAMZ,ORAMDAYS"
^XTMP("XPDT",7317,"RTN","ORAMTTR",138,0)=" S CG=$P(^TMP(""ORAM"",$J,ORAMCLIN,ORAMPT,ORAMDATE),U,2),ORAMZ=0"
^XTMP("XPDT",7317,"RTN","ORAMTTR",139,0)=" I $G(CG)="""",'+$G(LG) Q:'+$G(PGR)  S CG=PGR  ;BRINGS IN THE LAST GOAL INFO THAT SHOULD BE IN EFFECT FOR THE FIRST SEGMENT"
^XTMP("XPDT",7317,"RTN","ORAMTTR",140,0)=" I $G(CG)'="""" S LG=$P(CG,""-""),HG=$P(CG,""-"",2)  S:HG["" "" HG=$P(HG,"" "",2)  ;USES NEW ONE IF AVAILABLE"
^XTMP("XPDT",7317,"RTN","ORAMTTR",141,0)=" Q:$P(^TMP(""ORAM"",$J,ORAMCLIN,ORAMPT,ORAMDATE),U)="""""
^XTMP("XPDT",7317,"RTN","ORAMTTR",142,0)=" N ORAMIV S ORAMIV=$P(^TMP(""ORAM"",$J,ORAMCLIN,ORAMPT,ORAMDATE),U) S:ORAMIV["">"" ORAMIV=$P(ORAMIV,"">"",2) S:ORAMIV[""<"" ORAMIV=$P(ORAMIV,""<"",2)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",143,0)=" Q:'+ORAMIV  ;QUITS IF NOT A NUMBER AFTER CHECKING FOR > AND < SIGNS"
^XTMP("XPDT",7317,"RTN","ORAMTTR",144,0)=" S D2=ORAMDATE S V2=ORAMIV_U_$S(ORAMIV>HG:""H"",ORAMIV<LG:""L"",1:""G"")  ;IF OUT OF RANGE LISTS H OR L OTHERWISE G"
^XTMP("XPDT",7317,"RTN","ORAMTTR",145,0)=" I $G(D1)="""" S ORAMZ=1"
^XTMP("XPDT",7317,"RTN","ORAMTTR",146,0)=" I '+$G(ORAMZ) D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",147,0)=" . S ORAMDAYS=$$FMDIFF^XLFDT(D2,D1,1)  ;DAYS DIFFERENCE BETWEEN THE LAST TWO INRS"
^XTMP("XPDT",7317,"RTN","ORAMTTR",148,0)=" . S ORAMTD=$G(ORAMTD)+ORAMDAYS"
^XTMP("XPDT",7317,"RTN","ORAMTTR",149,0)=" . S $P(ORAMCARR(ORAMCLIN),U)=($P($G(ORAMCARR(ORAMCLIN)),U)+ORAMDAYS)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",150,0)=" . I $P(V1,U,2)=$P(V2,U,2) S:$P(V1,U,2)=""G"" ORAMDIG=$G(ORAMDIG)+ORAMDAYS,$P(ORAMCARR(ORAMCLIN),U,2)=$P(ORAMCARR(ORAMCLIN),U,2)+ORAMDAYS  ;IF ALL IN GOAL, ALL GOOD, OTHERWISE 0 IN GOAL"
^XTMP("XPDT",7317,"RTN","ORAMTTR",151,0)=" . I $P(V1,U,2)'=$P(V2,U,2) D  ;WAS IN GOAL IN ONLY ONE OF THE READINGS (OR ONE H AND ONE L)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",152,0)=" .. N DIFF S DIFF=$$ABS^XLFMTH($P(V1,U)-$P(V2,U)) N NUMC,NUMPC S:$P(V1,U,2)=""G"" NUMC=$P(V1,U)_U_$P(V2,U,2) S:$P(V2,U,2)=""G"" NUMC=$P(V2,U)_U_$P(V1,U,2)"
^XTMP("XPDT",7317,"RTN","ORAMTTR",153,0)=" .. I $G(NUMC)'="""" D"
^XTMP("XPDT",7317,"RTN","ORAMTTR",154,0)=" ... I $P(NUMC,U,2)=""L"" S NUMPC=$$ABS^XLFMTH(LG-$P(NUMC,U)),NUMPC=NUMPC/DIFF"
^XTMP("XPDT",7317,"RTN","ORAMTTR",155,0)=" ... I $P(NUMC,U,2)=""H"" S NUMPC=$$ABS^XLFMTH(HG-$P(NUMC,U)),NUMPC=NUMPC/DIFF"
^XTMP("XPDT",7317,"RTN","ORAMTTR",156,0)=" .. I $G(NUMC)="""" D  ; FOR THE RARE CASE OF A SKIPPED GOAL RANGE, SO NOT =, BUT ONE IS LOW AND THE OTHER HIGH"
^XTMP("XPDT",7317,"RTN","ORAMTTR",157,0)=" ... S NUMPC=$$ABS^XLFMTH(HG-LG),NUMPC=NUMPC/DIFF"
^XTMP("XPDT",7317,"RTN","ORAMTTR",158,0)=" .. S ORAMDIG=$G(ORAMDIG)+$TR($J(NUMPC*ORAMDAYS,8.3),"" "","""")"
^XTMP("XPDT",7317,"RTN","ORAMTTR",159,0)=" .. S $P(ORAMCARR(ORAMCLIN),U,2)=($P(ORAMCARR(ORAMCLIN),U,2)+$TR($J(NUMPC*ORAMDAYS,8.3),"" "",""""))"
^XTMP("XPDT",7317,"RTN","ORAMTTR",160,0)=" S D1=D2,V1=V2"
^XTMP("XPDT",7317,"RTN","ORAMTTR",161,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMTTR",162,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMX")="0^6^B147643525^n/a"
^XTMP("XPDT",7317,"RTN","ORAMX",1,0)="ORAMX ;POR/RSF - ADDITIONAL ANTICOAGULATION CALLS ;12/08/09  16:26"
^XTMP("XPDT",7317,"RTN","ORAMX",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307**;Dec 17, 1997;Build 60"
^XTMP("XPDT",7317,"RTN","ORAMX",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7317,"RTN","ORAMX",4,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMX",5,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMX",6,0)="COMPRPT  ; Complications Report [ORAM COMPLICATIONS REPORT]"
^XTMP("XPDT",7317,"RTN","ORAMX",7,0)=" N DIRUT,ORAMSDT,ORAMEDT,ORAMSD,ORAMED,ORAMM,ORAMDL,ORAMT,ORAFMT,ORAMDFN,ORAMCNT,ORAMARR,ORAMINCM,ORAMSORT"
^XTMP("XPDT",7317,"RTN","ORAMX",8,0)=" S (ORAMED,ORAMSD)="""",ORAMINCM=1"
^XTMP("XPDT",7317,"RTN","ORAMX",9,0)=" W !!,""Anticoagulation Complications Report"",!"
^XTMP("XPDT",7317,"RTN","ORAMX",10,0)=" F  D  Q:+ORAMED>+ORAMSD!+$G(DIRUT)"
^XTMP("XPDT",7317,"RTN","ORAMX",11,0)=" . S ORAMSD=+$$READ(""DA^::E"",""    Please Enter START Date: "",""T-90"",""Enter a start date for the report"")"
^XTMP("XPDT",7317,"RTN","ORAMX",12,0)=" . Q:'ORAMSD"
^XTMP("XPDT",7317,"RTN","ORAMX",13,0)=" . S ORAMED=+$$READ(""DA^::E"",""      Please Enter END Date: "",""T"",""Enter an INCLUSIVE end date for the report"")"
^XTMP("XPDT",7317,"RTN","ORAMX",14,0)=" . Q:'ORAMED"
^XTMP("XPDT",7317,"RTN","ORAMX",15,0)=" . I $L(ORAMED,""."")=1 S ORAMED=ORAMED_"".2359"""
^XTMP("XPDT",7317,"RTN","ORAMX",16,0)=" . I ORAMSD>ORAMED W !,""END DATE must be more recent than the START DATE"" S (ORAMSD,ORAMED)="""""
^XTMP("XPDT",7317,"RTN","ORAMX",17,0)=" Q:$S(ORAMSD'>0:1,ORAMED'>0:1,1:0)"
^XTMP("XPDT",7317,"RTN","ORAMX",18,0)=" S ORAMSDT=$$FMTE^XLFDT(ORAMSD,2),ORAMEDT=$$FMTE^XLFDT(ORAMED,2)"
^XTMP("XPDT",7317,"RTN","ORAMX",19,0)=" W ! S ORAFMT=$$READ(""SA^r:Report;e:Export to Spreadsheet"",""      Please Specify Format: "",""Report"")"
^XTMP("XPDT",7317,"RTN","ORAMX",20,0)=" Q:+$G(DIRUT)"
^XTMP("XPDT",7317,"RTN","ORAMX",21,0)=" S:""Ee""[$P(ORAFMT,U) ORAMDL=1 S:""Rr""[$P(ORAFMT,U) ORAMDL=0"
^XTMP("XPDT",7317,"RTN","ORAMX",22,0)=" W ! S ORAMSORT=$$READ(""SA^c:Clinic;d:Division"",""              Sort/Tally By: "",""Clinic"")"
^XTMP("XPDT",7317,"RTN","ORAMX",23,0)=" Q:+$G(DIRUT)"
^XTMP("XPDT",7317,"RTN","ORAMX",24,0)=" S ORAMSORT=$P(ORAMSORT,U)"
^XTMP("XPDT",7317,"RTN","ORAMX",25,0)=" W ! S ORAMINCM=+$$READ(""YA"",""Include Minor Complications? "",""YES"")"
^XTMP("XPDT",7317,"RTN","ORAMX",26,0)=" Q:+$G(DIRUT)"
^XTMP("XPDT",7317,"RTN","ORAMX",27,0)=" S (ORAMCNT,ORAMDFN)=0"
^XTMP("XPDT",7317,"RTN","ORAMX",28,0)=" F  S ORAMDFN=$O(^ORAM(103,ORAMDFN)) Q:'$G(ORAMDFN)  D"
^XTMP("XPDT",7317,"RTN","ORAMX",29,0)=" . N ORAMFS S ORAMFS="" """
^XTMP("XPDT",7317,"RTN","ORAMX",30,0)=" . F  S ORAMFS=$O(^ORAM(103,ORAMDFN,3,ORAMFS),-1) Q:'+$G(ORAMFS)  D"
^XTMP("XPDT",7317,"RTN","ORAMX",31,0)=" .. N ORAMCP"
^XTMP("XPDT",7317,"RTN","ORAMX",32,0)=" .. I $P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U)<ORAMSD Q"
^XTMP("XPDT",7317,"RTN","ORAMX",33,0)=" .. I $P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U)>ORAMED Q"
^XTMP("XPDT",7317,"RTN","ORAMX",34,0)=" .. S ORAMCP=$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U,2)"
^XTMP("XPDT",7317,"RTN","ORAMX",35,0)=" .. I +$G(ORAMCP) D"
^XTMP("XPDT",7317,"RTN","ORAMX",36,0)=" ... N ORAMLOC,ORAMM,ORAMCLNO,ORAMCLNM,ORAMDIVN,ORAMDIV"
^XTMP("XPDT",7317,"RTN","ORAMX",37,0)=" ... I (+ORAMINCM'>0),(ORAMCP>2) Q"
^XTMP("XPDT",7317,"RTN","ORAMX",38,0)=" ... S ORAMCLNO=+$P($G(^ORAM(103,ORAMDFN,6)),U,2)"
^XTMP("XPDT",7317,"RTN","ORAMX",39,0)=" ... I ORAMCLNO>0 D"
^XTMP("XPDT",7317,"RTN","ORAMX",40,0)=" .... S ORAMDIVN=+$P($G(^SC(ORAMCLNO,0)),U,15)"
^XTMP("XPDT",7317,"RTN","ORAMX",41,0)=" .... S ORAMCLNM=$$EXTERNAL^DILFD(103,101,"""",ORAMCLNO) S:$G(ORAMCLNM)="""" ORAMCLNM=""CLINIC UNKNOWN"""
^XTMP("XPDT",7317,"RTN","ORAMX",42,0)=" .... S ORAMDIV=$$EXTERNAL^DILFD(44,3.5,"""",ORAMDIVN) S:$G(ORAMDIV)="""" ORAMDIV=""DIVISION UNKNOWN"""
^XTMP("XPDT",7317,"RTN","ORAMX",43,0)=" ... E  S ORAMCLNM=""CLINIC UNKNOWN"",ORAMDIV=""DIVISION UNKNOWN"""
^XTMP("XPDT",7317,"RTN","ORAMX",44,0)=" ... S ORAMLOC=$S(ORAMSORT=""c"":ORAMCLNM,1:ORAMDIV)"
^XTMP("XPDT",7317,"RTN","ORAMX",45,0)=" ... S ORAMARR(ORAMLOC,0)=$G(ORAMARR(ORAMLOC,0))+1"
^XTMP("XPDT",7317,"RTN","ORAMX",46,0)=" ... S ORAMM=$E($P(^DPT($G(ORAMDFN),0),U),1,10)_"" (""_$E($P(^(0),U,9),6,9)_"")"""
^XTMP("XPDT",7317,"RTN","ORAMX",47,0)=" ... I ORAMCP=1!(+ORAMINCM&(ORAMCP=3)) D"
^XTMP("XPDT",7317,"RTN","ORAMX",48,0)=" .... S ORAMARR(ORAMLOC,""B"",0)=$G(ORAMARR(ORAMLOC,""B"",0))+1"
^XTMP("XPDT",7317,"RTN","ORAMX",49,0)=" .... S ORAMARR(ORAMLOC,""B"",ORAMDFN,$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U)_ORAMFS,1)=ORAMM_"": INR Draw date - ""_$$FMTE^XLFDT($P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U),""2P"")"
^XTMP("XPDT",7317,"RTN","ORAMX",50,0)=" .... N ORAMJ S ORAMJ=0"
^XTMP("XPDT",7317,"RTN","ORAMX",51,0)=" .... F  S ORAMJ=$O(^ORAM(103,ORAMDFN,3,ORAMFS,2,ORAMJ)) Q:+ORAMJ'>0  D"
^XTMP("XPDT",7317,"RTN","ORAMX",52,0)=" ..... N ORAMCMPL,ORAMFS0"
^XTMP("XPDT",7317,"RTN","ORAMX",53,0)=" ..... S ORAMFS0=$G(^ORAM(103,ORAMDFN,3,ORAMFS,0))"
^XTMP("XPDT",7317,"RTN","ORAMX",54,0)=" ..... S ORAMCMPL=$G(^ORAM(103,ORAMDFN,3,ORAMFS,2,ORAMJ,0))"
^XTMP("XPDT",7317,"RTN","ORAMX",55,0)=" ..... S:$L(ORAMCMPL,"":"")>1 ORAMCMPL=$S($P(ORAMCMPL,"":"")=""MB"":""Major Bleed: "",$P(ORAMCMPL,"":"")=""C"":""  "",1:ORAMCMPL)_$P(ORAMCMPL,"":"",2)"
^XTMP("XPDT",7317,"RTN","ORAMX",56,0)=" ..... S ORAMARR(ORAMLOC,""B"",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,1_"".""_ORAMJ)=$S(ORAMJ=1:""Complication date: "",1:"""")_ORAMCMPL"
^XTMP("XPDT",7317,"RTN","ORAMX",57,0)=" ..... S ORAMARR(ORAMLOC,""BX"",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,99)=$TR(ORAMLOC,"";"","","")_"";""_$S(ORAMCP=3:""Minor Bleed"",1:""Hemorrhagic"")_"";""_ORAMM_"";""_$$FMTE^XLFDT($P(ORAMFS0,U),""2P"")_"";"""
^XTMP("XPDT",7317,"RTN","ORAMX",58,0)=" ..... S ORAMARR(ORAMLOC,""BX"",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,99)=ORAMARR(ORAMLOC,""BX"",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,99)_$G(^ORAM(103,ORAMDFN,3,ORAMFS,2,1,0))"
^XTMP("XPDT",7317,"RTN","ORAMX",59,0)=" ... I ORAMCP=2 D"
^XTMP("XPDT",7317,"RTN","ORAMX",60,0)=" .... S ORAMARR(ORAMLOC,""C"",0)=$G(ORAMARR(ORAMLOC,""C"",0))+1"
^XTMP("XPDT",7317,"RTN","ORAMX",61,0)=" .... S ORAMARR(ORAMLOC,""C"",ORAMDFN,$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U)_ORAMFS,1)=ORAMM_"": INR Draw date - ""_$$FMTE^XLFDT($P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U),""2P"")"
^XTMP("XPDT",7317,"RTN","ORAMX",62,0)=" .... N ORAMJ S ORAMJ=0"
^XTMP("XPDT",7317,"RTN","ORAMX",63,0)=" .... F  S ORAMJ=$O(^ORAM(103,ORAMDFN,3,ORAMFS,2,ORAMJ)) Q:'+$G(ORAMJ)  D"
^XTMP("XPDT",7317,"RTN","ORAMX",64,0)=" ..... N ORAMCMPL,ORAMFS0"
^XTMP("XPDT",7317,"RTN","ORAMX",65,0)=" ..... S ORAMFS0=$G(^ORAM(103,ORAMDFN,3,ORAMFS,0))"
^XTMP("XPDT",7317,"RTN","ORAMX",66,0)=" ..... S ORAMCMPL=^ORAM(103,ORAMDFN,3,ORAMFS,2,ORAMJ,0)"
^XTMP("XPDT",7317,"RTN","ORAMX",67,0)=" ..... S:$L(ORAMCMPL,"":"")>1 ORAMCMPL=$S($P(ORAMCMPL,"":"")=""MB"":""Major Bleed: "",$P(ORAMCMPL,"":"")=""C"":""  "",1:ORAMCMPL)_$P(ORAMCMPL,"":"",2)"
^XTMP("XPDT",7317,"RTN","ORAMX",68,0)=" ..... S ORAMARR(ORAMLOC,""C"",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,1_"".""_ORAMJ)=$S(ORAMJ=1:""Complication date: "",1:"""")_ORAMCMPL"
^XTMP("XPDT",7317,"RTN","ORAMX",69,0)=" ..... S ORAMARR(ORAMLOC,""CX"",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,99)=$TR(ORAMLOC,"";"","","")_"";Thrombotic;""_ORAMM_"";""_$$FMTE^XLFDT($P(ORAMFS0,U),""2P"")_"";""_$G(^ORAM(103,ORAMDFN,3,ORAMFS,2,1,0))"
^XTMP("XPDT",7317,"RTN","ORAMX",70,0)=" I ORAMDL=0 D COMP0(.ORAMARR,ORAMSDT,ORAMEDT,ORAMINCM)"
^XTMP("XPDT",7317,"RTN","ORAMX",71,0)=" I ORAMDL=1 D COMP1(.ORAMARR,ORAMSDT,ORAMEDT,ORAMINCM,ORAMSORT)"
^XTMP("XPDT",7317,"RTN","ORAMX",72,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMX",73,0)="COMP0(ORAMARR,ORAMSDT,ORAMEDT,ORAMINCM) ; Print Report Format"
^XTMP("XPDT",7317,"RTN","ORAMX",74,0)=" N OCLINIC"
^XTMP("XPDT",7317,"RTN","ORAMX",75,0)=" W @IOF,""COMPLICATIONS REPORT - ANTICOAGULATION: "",ORAMSDT,"" - "",ORAMEDT,!,$S('ORAMINCM:""  (** EXCLUDING MINOR COMPLICATIONS **)""_$C(13)_$C(10),1:"""")"
^XTMP("XPDT",7317,"RTN","ORAMX",76,0)=" I '$D(ORAMARR) W !,?5,""No Complications Noted.""  Q"
^XTMP("XPDT",7317,"RTN","ORAMX",77,0)=" S OCLINIC="""""
^XTMP("XPDT",7317,"RTN","ORAMX",78,0)=" F  S OCLINIC=$O(ORAMARR(OCLINIC)) Q:OCLINIC']""""  D"
^XTMP("XPDT",7317,"RTN","ORAMX",79,0)=" . W !!,?5,OCLINIC,"": Total Complications - "",ORAMARR(OCLINIC,0)"
^XTMP("XPDT",7317,"RTN","ORAMX",80,0)=" . I $G(ORAMARR(OCLINIC,""B"",0))>0 D  ;BLEEDS FOR THIS CLINIC"
^XTMP("XPDT",7317,"RTN","ORAMX",81,0)=" .. N ODFN"
^XTMP("XPDT",7317,"RTN","ORAMX",82,0)=" .. W !!,?7,"" Bleeds ("",ORAMARR(OCLINIC,""B"",0),"")"",!"
^XTMP("XPDT",7317,"RTN","ORAMX",83,0)=" .. W !,?7,"" Details:"""
^XTMP("XPDT",7317,"RTN","ORAMX",84,0)=" .. S ODFN=0 F  S ODFN=$O(ORAMARR(OCLINIC,""B"",ODFN)) Q:+ODFN'>0  D"
^XTMP("XPDT",7317,"RTN","ORAMX",85,0)=" ... N OCDATE S OCDATE=0"
^XTMP("XPDT",7317,"RTN","ORAMX",86,0)=" ... F  S OCDATE=$O(ORAMARR(OCLINIC,""B"",ODFN,OCDATE)) Q:+OCDATE'>0  D"
^XTMP("XPDT",7317,"RTN","ORAMX",87,0)=" .... N OCNT S OCNT=0 W !"
^XTMP("XPDT",7317,"RTN","ORAMX",88,0)=" .... F  S OCNT=$O(ORAMARR(OCLINIC,""B"",ODFN,OCDATE,OCNT)) Q:+OCNT'>0  D"
^XTMP("XPDT",7317,"RTN","ORAMX",89,0)=" ..... W !,?8,ORAMARR(OCLINIC,""B"",ODFN,OCDATE,OCNT)"
^XTMP("XPDT",7317,"RTN","ORAMX",90,0)=" . I $G(ORAMARR(OCLINIC,""C"",0))>0 D  ;CLOTS FOR THIS CLINIC"
^XTMP("XPDT",7317,"RTN","ORAMX",91,0)=" .. N ODFN"
^XTMP("XPDT",7317,"RTN","ORAMX",92,0)=" .. W !!,?7,"" Clots ("",ORAMARR(OCLINIC,""C"",0),"")"",!"
^XTMP("XPDT",7317,"RTN","ORAMX",93,0)=" .. W !,?7,"" Details:"""
^XTMP("XPDT",7317,"RTN","ORAMX",94,0)=" .. S ODFN=0 F  S ODFN=$O(ORAMARR(OCLINIC,""C"",ODFN)) Q:+ODFN'>0  D"
^XTMP("XPDT",7317,"RTN","ORAMX",95,0)=" ... N OCDATE S OCDATE=0"
^XTMP("XPDT",7317,"RTN","ORAMX",96,0)=" ... F  S OCDATE=$O(ORAMARR(OCLINIC,""C"",ODFN,OCDATE)) Q:+OCDATE'>0  D"
^XTMP("XPDT",7317,"RTN","ORAMX",97,0)=" .... N OCNT S OCNT=0 W !"
^XTMP("XPDT",7317,"RTN","ORAMX",98,0)=" .... F  S OCNT=$O(ORAMARR(OCLINIC,""C"",ODFN,OCDATE,OCNT)) Q:+OCNT'>0  D"
^XTMP("XPDT",7317,"RTN","ORAMX",99,0)=" ..... W !,?8,ORAMARR(OCLINIC,""C"",ODFN,OCDATE,OCNT)"
^XTMP("XPDT",7317,"RTN","ORAMX",100,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMX",101,0)="COMP1(ORAMARR,ORAMSDT,ORAMEDT,ORAMINCM,ORAMSORT) ; Print Export Format"
^XTMP("XPDT",7317,"RTN","ORAMX",102,0)=" N OCLINIC"
^XTMP("XPDT",7317,"RTN","ORAMX",103,0)=" W @IOF,""COMPLICATIONS REPORT - ANTICOAGULATION: "",ORAMSDT,"" - "",ORAMEDT,!,$S('ORAMINCM:""  (** EXCLUDING MINOR COMPLICATIONS **)""_$C(13)_$C(10),1:"""")"
^XTMP("XPDT",7317,"RTN","ORAMX",104,0)=" I '$D(ORAMARR) W !,?5,""No Complications Noted.""  Q"
^XTMP("XPDT",7317,"RTN","ORAMX",105,0)=" W !,$S(ORAMSORT=""c"":""Clinic"",1:""Division""),"";Event;Patient;INR Draw Date;Complication Date"""
^XTMP("XPDT",7317,"RTN","ORAMX",106,0)=" S OCLINIC="""" F  S OCLINIC=$O(ORAMARR(OCLINIC)) Q:OCLINIC']""""  D"
^XTMP("XPDT",7317,"RTN","ORAMX",107,0)=" . I $D(ORAMARR(OCLINIC,""BX"")) D  ;BLEEDS FOR THIS CLINIC"
^XTMP("XPDT",7317,"RTN","ORAMX",108,0)=" .. N ODFN S ODFN=0 F  S ODFN=$O(ORAMARR(OCLINIC,""BX"",ODFN)) Q:'+$G(ODFN)  D"
^XTMP("XPDT",7317,"RTN","ORAMX",109,0)=" ... N OCDATE S OCDATE=0 F  S OCDATE=$O(ORAMARR(OCLINIC,""BX"",ODFN,OCDATE)) Q:'+$G(OCDATE)  D"
^XTMP("XPDT",7317,"RTN","ORAMX",110,0)=" .... W !,ORAMARR(OCLINIC,""BX"",ODFN,OCDATE,99)"
^XTMP("XPDT",7317,"RTN","ORAMX",111,0)=" . I $D(ORAMARR(OCLINIC,""CX"")) D  ;CLOTS FOR THIS CLINIC"
^XTMP("XPDT",7317,"RTN","ORAMX",112,0)=" .. N ODFN S ODFN=0 F  S ODFN=$O(ORAMARR(OCLINIC,""CX"",ODFN)) Q:'+$G(ODFN)  D"
^XTMP("XPDT",7317,"RTN","ORAMX",113,0)=" ... N OCDATE S OCDATE=0 F  S OCDATE=$O(ORAMARR(OCLINIC,""CX"",ODFN,OCDATE)) Q:'+$G(OCDATE)  D"
^XTMP("XPDT",7317,"RTN","ORAMX",114,0)=" .... W !,ORAMARR(OCLINIC,""CX"",ODFN,OCDATE,99)"
^XTMP("XPDT",7317,"RTN","ORAMX",115,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMX",116,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMX",117,0)="CONSULT(RESULT,ORAMDFN,ORAMCNM) ; Called from RPC=ORAMX CONSULT"
^XTMP("XPDT",7317,"RTN","ORAMX",118,0)=" I '+$G(ORAMDFN) S RESULT(0)=0 Q"
^XTMP("XPDT",7317,"RTN","ORAMX",119,0)=" I $G(ORAMCNM)="""" S RESULT(0)=0 Q"
^XTMP("XPDT",7317,"RTN","ORAMX",120,0)=" N ORAMCLST S ORAMCLST(0)=0"
^XTMP("XPDT",7317,"RTN","ORAMX",121,0)=" D RPCLIST^GMRCTIU(.ORAMCLST,ORAMDFN)"
^XTMP("XPDT",7317,"RTN","ORAMX",122,0)=" Q:ORAMCLST(0)=0  ;SHOULD BE NUMBER IN THE ARRAY"
^XTMP("XPDT",7317,"RTN","ORAMX",123,0)=" I ORAMCLST(0)>0 D"
^XTMP("XPDT",7317,"RTN","ORAMX",124,0)=" . N ORAMC S ORAMC=0 F  S ORAMC=$O(ORAMCLST(ORAMC)) Q:'+$G(ORAMC)  D"
^XTMP("XPDT",7317,"RTN","ORAMX",125,0)=" .. Q:ORAMCNM'=$P(ORAMCLST(ORAMC),U,3)"
^XTMP("XPDT",7317,"RTN","ORAMX",126,0)=" .. N ORAMK S ORAMK=0"
^XTMP("XPDT",7317,"RTN","ORAMX",127,0)=" .. I $P(ORAMCLST(ORAMC),U,5)=""PENDING"" S ORAMK=1"
^XTMP("XPDT",7317,"RTN","ORAMX",128,0)=" .. I $P(ORAMCLST(ORAMC),U,5)=""ACTIVE"" S ORAMK=1"
^XTMP("XPDT",7317,"RTN","ORAMX",129,0)=" .. Q:'+ORAMK"
^XTMP("XPDT",7317,"RTN","ORAMX",130,0)=" .. N ORAMD S ORAMD=$$FMTE^XLFDT($P(ORAMCLST(ORAMC),U,2),""2P"")"
^XTMP("XPDT",7317,"RTN","ORAMX",131,0)=" .. S RESULT(ORAMC)=ORAMD_"":  ""_$P(ORAMCLST(ORAMC),U,3)_""  ^""_$P(ORAMCLST(ORAMC),U,1)"
^XTMP("XPDT",7317,"RTN","ORAMX",132,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMX",133,0)="PCESET(RESULT,ORAMDFN,ORAMD1,ORAMSC44,ORAMEDT,ORAMSVC,ORAMNARR,ORAMPDX) ; RPC to file PCE Data"
^XTMP("XPDT",7317,"RTN","ORAMX",134,0)=" ; RPC = ORAMX PCESET"
^XTMP("XPDT",7317,"RTN","ORAMX",135,0)=" ; ORAMDFN  = Pt. ID"
^XTMP("XPDT",7317,"RTN","ORAMX",136,0)=" ; ORAMD1   = Data string e.g., 1143|300|99363|427.31|^SC~0^IR~0^EC~1^MST~0^HNC~1^SHAD~0"
^XTMP("XPDT",7317,"RTN","ORAMX",137,0)=" ; ORAMSC44 = Hospital Location IEN"
^XTMP("XPDT",7317,"RTN","ORAMX",138,0)=" ; ORAMEDT  = Encounter Date/Time"
^XTMP("XPDT",7317,"RTN","ORAMX",139,0)=" ; ORAMSVC  = Service Category (e.g., ""A""mbulatory or ""T""elecommunications)"
^XTMP("XPDT",7317,"RTN","ORAMX",140,0)=" ; ORAMNARR = Provider Narrative for Dx"
^XTMP("XPDT",7317,"RTN","ORAMX",141,0)=" ; ORAMPDX  = Automatic Primary Indication code for Clinic"
^XTMP("XPDT",7317,"RTN","ORAMX",142,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMX",143,0)=" I '+$G(ORAMDFN) S RESULT=99 Q"
^XTMP("XPDT",7317,"RTN","ORAMX",144,0)=" I '+$G(ORAMSC44) S RESULT=99 Q"
^XTMP("XPDT",7317,"RTN","ORAMX",145,0)=" I $G(ORAMD1)']"""" S RESULT=99 Q"
^XTMP("XPDT",7317,"RTN","ORAMX",146,0)=" N ORAMNOW,ORAMDAY S ORAMNOW=$$NOW^XLFDT"
^XTMP("XPDT",7317,"RTN","ORAMX",147,0)=" S RESULT=0,ORAMEDT=$G(ORAMEDT,ORAMNOW),ORAMDAY=$P(ORAMEDT,"".""),ORAMSVC=$G(ORAMSVC,""A"")"
^XTMP("XPDT",7317,"RTN","ORAMX",148,0)=" I $G(ORAMD1)'="""" D"
^XTMP("XPDT",7317,"RTN","ORAMX",149,0)=" . N ORAMDUZ,ORAMCPT,ORAMSC,ORAMDX,ORAMQ,ORAMVST,ERRARR,ERRPROB,ORAMPDXC,ORAMPDXT,ORAMPDXN"
^XTMP("XPDT",7317,"RTN","ORAMX",150,0)=" . S ORAMDUZ=$P(ORAMD1,""|""),ORAMSC=$P(ORAMD1,""|"",2),ORAMCPT=$P(ORAMD1,""|"",3),ORAMQ=$P(ORAMD1,""|"",5)"
^XTMP("XPDT",7317,"RTN","ORAMX",151,0)=" . S ORAMDX=+$$CODEN^ICDCODE($P(ORAMD1,""|"",4),80)"
^XTMP("XPDT",7317,"RTN","ORAMX",152,0)=" . I +ORAMDX'>0 S RESULT=99 Q"
^XTMP("XPDT",7317,"RTN","ORAMX",153,0)=" . I $G(ORAMPDX)]"""" D"
^XTMP("XPDT",7317,"RTN","ORAMX",154,0)=" . . S ORAMPDXC=$P(ORAMPDX,U),ORAMPDXT=$P(ORAMPDX,U,2)"
^XTMP("XPDT",7317,"RTN","ORAMX",155,0)=" . . S ORAMPDXN=+$$CODEN^ICDCODE(ORAMPDXC,80)"
^XTMP("XPDT",7317,"RTN","ORAMX",156,0)=" . . S ^TMP(""ORAMPCE"",$J,""DX/PL"",1,""DIAGNOSIS"")=$G(ORAMPDXN)"
^XTMP("XPDT",7317,"RTN","ORAMX",157,0)=" . . S ^TMP(""ORAMPCE"",$J,""DX/PL"",1,""PRIMARY"")=""P"""
^XTMP("XPDT",7317,"RTN","ORAMX",158,0)=" . . S:ORAMPDXT]"""" ^TMP(""ORAMPCE"",$J,""DX/PL"",1,""NARRATIVE"")=ORAMPDXT"
^XTMP("XPDT",7317,"RTN","ORAMX",159,0)=" . . S ^TMP(""ORAMPCE"",$J,""DX/PL"",2,""DIAGNOSIS"")=$G(ORAMDX)"
^XTMP("XPDT",7317,"RTN","ORAMX",160,0)=" . . S ^TMP(""ORAMPCE"",$J,""DX/PL"",2,""PRIMARY"")=""S"""
^XTMP("XPDT",7317,"RTN","ORAMX",161,0)=" . . S:$G(ORAMNARR)]"""" ^TMP(""ORAMPCE"",$J,""DX/PL"",2,""NARRATIVE"")=ORAMNARR"
^XTMP("XPDT",7317,"RTN","ORAMX",162,0)=" . E  D"
^XTMP("XPDT",7317,"RTN","ORAMX",163,0)=" . . S ^TMP(""ORAMPCE"",$J,""DX/PL"",1,""DIAGNOSIS"")=$G(ORAMDX)"
^XTMP("XPDT",7317,"RTN","ORAMX",164,0)=" . . S ^TMP(""ORAMPCE"",$J,""DX/PL"",1,""PRIMARY"")=""P"""
^XTMP("XPDT",7317,"RTN","ORAMX",165,0)=" . . S:$G(ORAMNARR)]"""" ^TMP(""ORAMPCE"",$J,""DX/PL"",1,""NARRATIVE"")=ORAMNARR"
^XTMP("XPDT",7317,"RTN","ORAMX",166,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""DSS ID"")=$G(ORAMSC)  ;STOP CODE 40.7"
^XTMP("XPDT",7317,"RTN","ORAMX",167,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""ENC D/T"")=ORAMEDT"
^XTMP("XPDT",7317,"RTN","ORAMX",168,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""HOS LOC"")=ORAMSC44  ;9727 ;8005"
^XTMP("XPDT",7317,"RTN","ORAMX",169,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""PATIENT"")=ORAMDFN"
^XTMP("XPDT",7317,"RTN","ORAMX",170,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""ENCOUNTER TYPE"")=""P""  ;PRIMARY OR ANCILLARY"
^XTMP("XPDT",7317,"RTN","ORAMX",171,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""SERVICE CATEGORY"")=ORAMSVC"
^XTMP("XPDT",7317,"RTN","ORAMX",172,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""CHECKOUT D/T"")=$$NOW^XLFDT"
^XTMP("XPDT",7317,"RTN","ORAMX",173,0)=" . S ^TMP(""ORAMPCE"",$J,""PROCEDURE"",1,""PROCEDURE"")=$G(ORAMCPT)"
^XTMP("XPDT",7317,"RTN","ORAMX",174,0)=" . S ^TMP(""ORAMPCE"",$J,""PROCEDURE"",1,""DIAGNOSIS"")=$S($G(ORAMPDXN)]"""":ORAMPDXN,1:$G(ORAMDX))"
^XTMP("XPDT",7317,"RTN","ORAMX",175,0)=" . S ^TMP(""ORAMPCE"",$J,""PROCEDURE"",1,""EVENT D/T"")=ORAMEDT"
^XTMP("XPDT",7317,"RTN","ORAMX",176,0)=" . S ^TMP(""ORAMPCE"",$J,""PROCEDURE"",1,""QTY"")=1"
^XTMP("XPDT",7317,"RTN","ORAMX",177,0)=" . S ^TMP(""ORAMPCE"",$J,""PROCEDURE"",1,""ENC PROVIDER"")=$G(ORAMDUZ)  ;FILE 200"
^XTMP("XPDT",7317,"RTN","ORAMX",178,0)=" . S ^TMP(""ORAMPCE"",$J,""PROCEDURE"",1,""PRIMARY"")=1"
^XTMP("XPDT",7317,"RTN","ORAMX",179,0)=" . S ^TMP(""ORAMPCE"",$J,""PROCEDURE"",1,""DEPARTMENT"")=$G(ORAMSC)  ;STOP CODE 40.7"
^XTMP("XPDT",7317,"RTN","ORAMX",180,0)=" . ;comes in like: ^SC~0^IR~0^EC~1^MST~0"
^XTMP("XPDT",7317,"RTN","ORAMX",181,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""SC"")="""""
^XTMP("XPDT",7317,"RTN","ORAMX",182,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""AO"")="""""
^XTMP("XPDT",7317,"RTN","ORAMX",183,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""IR"")="""""
^XTMP("XPDT",7317,"RTN","ORAMX",184,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""EC"")="""""
^XTMP("XPDT",7317,"RTN","ORAMX",185,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""MST"")="""""
^XTMP("XPDT",7317,"RTN","ORAMX",186,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""HNC"")="""""
^XTMP("XPDT",7317,"RTN","ORAMX",187,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""CV"")="""""
^XTMP("XPDT",7317,"RTN","ORAMX",188,0)=" . S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,""SHAD"")="""""
^XTMP("XPDT",7317,"RTN","ORAMX",189,0)=" . N ORAMCNT,I S ORAMCNT=$L(ORAMQ,U)"
^XTMP("XPDT",7317,"RTN","ORAMX",190,0)=" . I +$G(ORAMCNT) F I=2:1:ORAMCNT D"
^XTMP("XPDT",7317,"RTN","ORAMX",191,0)=" .. N T S T=$P(ORAMQ,U,I) Q:$G(T)="""""
^XTMP("XPDT",7317,"RTN","ORAMX",192,0)=" .. I $P(T,""~"",1)'="""" S ^TMP(""ORAMPCE"",$J,""ENCOUNTER"",1,$P(T,""~"",1))=$P(T,""~"",2)"
^XTMP("XPDT",7317,"RTN","ORAMX",193,0)=" . S RESULT=$$DATA2PCE^PXAPI(""^TMP(""""ORAMPCE"""",$J)"",""ORAM"",""ORAM ANTICOAGULATION MANAGEMENT PROGRAM"",.ORAMVST,DUZ,,.ERRARR,,.ERRPROB)"
^XTMP("XPDT",7317,"RTN","ORAMX",194,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMX",195,0)="WRAP(TEXT,LENGTH) ; Breaks text string into substrings of length LENGTH"
^XTMP("XPDT",7317,"RTN","ORAMX",196,0)=" N ORAMI,ORAMJ,LINE,ORAMX,ORAMX1,ORAMX2,ORAMY"
^XTMP("XPDT",7317,"RTN","ORAMX",197,0)=" I $G(TEXT)']"""" Q """""
^XTMP("XPDT",7317,"RTN","ORAMX",198,0)=" F ORAMI=1:1 D  Q:ORAMI=$L(TEXT,"" "")"
^XTMP("XPDT",7317,"RTN","ORAMX",199,0)=" . S ORAMX=$P(TEXT,"" "",ORAMI)"
^XTMP("XPDT",7317,"RTN","ORAMX",200,0)=" . I $L(ORAMX)>LENGTH D"
^XTMP("XPDT",7317,"RTN","ORAMX",201,0)=" . . S ORAMX1=$E(ORAMX,1,LENGTH),ORAMX2=$E(ORAMX,LENGTH+1,$L(ORAMX))"
^XTMP("XPDT",7317,"RTN","ORAMX",202,0)=" . . S $P(TEXT,"" "",ORAMI)=ORAMX1_"" ""_ORAMX2"
^XTMP("XPDT",7317,"RTN","ORAMX",203,0)=" S LINE=1,ORAMX(1)=$P(TEXT,"" "")"
^XTMP("XPDT",7317,"RTN","ORAMX",204,0)=" F ORAMI=2:1 D  Q:ORAMI'<$L(TEXT,"" "")"
^XTMP("XPDT",7317,"RTN","ORAMX",205,0)=" . S:$L($G(ORAMX(LINE))_"" ""_$P(TEXT,"" "",ORAMI))>LENGTH LINE=LINE+1,ORAMY=1"
^XTMP("XPDT",7317,"RTN","ORAMX",206,0)=" . S ORAMX(LINE)=$G(ORAMX(LINE))_$S(+$G(ORAMY):"""",1:"" "")_$P(TEXT,"" "",ORAMI),ORAMY=0"
^XTMP("XPDT",7317,"RTN","ORAMX",207,0)=" S ORAMJ=0,TEXT="""" F ORAMI=1:1 S ORAMJ=$O(ORAMX(ORAMJ)) Q:+ORAMJ'>0  S TEXT=TEXT_$S(ORAMI=1:"""",1:""|"")_ORAMX(ORAMJ)"
^XTMP("XPDT",7317,"RTN","ORAMX",208,0)=" Q TEXT"
^XTMP("XPDT",7317,"RTN","ORAMX",209,0)="READ(TYPE,PROMPT,DEFAULT,HELP,SCREEN) ; Calls reader, returns response"
^XTMP("XPDT",7317,"RTN","ORAMX",210,0)=" N DIR,X,Y"
^XTMP("XPDT",7317,"RTN","ORAMX",211,0)=" S DIR(0)=TYPE"
^XTMP("XPDT",7317,"RTN","ORAMX",212,0)=" I $D(SCREEN) S DIR(""S"")=SCREEN"
^XTMP("XPDT",7317,"RTN","ORAMX",213,0)=" I $G(PROMPT)]"""" S DIR(""A"")=PROMPT"
^XTMP("XPDT",7317,"RTN","ORAMX",214,0)=" I $G(DEFAULT)]"""" S DIR(""B"")=DEFAULT"
^XTMP("XPDT",7317,"RTN","ORAMX",215,0)=" I $D(HELP) S DIR(""?"")=HELP"
^XTMP("XPDT",7317,"RTN","ORAMX",216,0)=" D ^DIR"
^XTMP("XPDT",7317,"RTN","ORAMX",217,0)=" I $G(X)=""@"" S Y=""@"" G READX"
^XTMP("XPDT",7317,"RTN","ORAMX",218,0)=" I Y]"""",($L($G(Y),U)'=2) S Y=Y_U_$G(Y(0),Y)"
^XTMP("XPDT",7317,"RTN","ORAMX",219,0)="READX Q Y"
^XTMP("XPDT",7317,"RTN","ORAMX",220,0)="NAME(X,FMT) ; Call with X=""LAST,FIRST MI"", FMT=Return Format (""LAST, FI"")"
^XTMP("XPDT",7317,"RTN","ORAMX",221,0)=" N ORLAST,ORLI,ORFIRST,ORFI,ORMI,ORI"
^XTMP("XPDT",7317,"RTN","ORAMX",222,0)=" I X']"""" S FMT="""" G NAMEX"
^XTMP("XPDT",7317,"RTN","ORAMX",223,0)=" I $S('$D(FMT):1,'$L(FMT):1,1:0) S FMT=""LAST,FIRST"""
^XTMP("XPDT",7317,"RTN","ORAMX",224,0)=" S FMT=$$LOW^XLFSTR(FMT)"
^XTMP("XPDT",7317,"RTN","ORAMX",225,0)=" S ORLAST=$P(X,"",""),ORLI=$E(ORLAST),ORFIRST=$P(X,"","",2)"
^XTMP("XPDT",7317,"RTN","ORAMX",226,0)=" S ORFI=$E(ORFIRST)"
^XTMP("XPDT",7317,"RTN","ORAMX",227,0)=" S ORMI=$S($P(ORFIRST,"" "",2)'=""NMI"":$E($P(ORFIRST,"" "",2)),1:"""")"
^XTMP("XPDT",7317,"RTN","ORAMX",228,0)=" S ORFIRST=$P(ORFIRST,"" "")"
^XTMP("XPDT",7317,"RTN","ORAMX",229,0)=" F ORI=""last"",""li"",""first"",""fi"",""mi"" I FMT[ORI S FMT=$P(FMT,ORI)_@(""OR""_$$UP^XLFSTR(ORI))_$P(FMT,ORI,2)"
^XTMP("XPDT",7317,"RTN","ORAMX",230,0)="NAMEX Q FMT"
^XTMP("XPDT",7317,"RTN","ORAMX",231,0)="PATIENT() ; Select a patient"
^XTMP("XPDT",7317,"RTN","ORAMX",232,0)=" N X,DIC,Y"
^XTMP("XPDT",7317,"RTN","ORAMX",233,0)=" S DIC=2,DIC(0)=""AEMQ"" D ^DIC"
^XTMP("XPDT",7317,"RTN","ORAMX",234,0)=" Q Y"
^XTMP("XPDT",7317,"RTN","ORAMX",235,0)="VALIDORD(ORDA) ; Screen Orderable for INR"
^XTMP("XPDT",7317,"RTN","ORAMX",236,0)=" N ORDNM,ORY,ORDGDA,ORID S ORDNM="""",ORY=0"
^XTMP("XPDT",7317,"RTN","ORAMX",237,0)=" ; if orderable item inactive, exclude it"
^XTMP("XPDT",7317,"RTN","ORAMX",238,0)=" I +$G(^ORD(101.43,+ORDA,.1))>0 G VOX"
^XTMP("XPDT",7317,"RTN","ORAMX",239,0)=" ; if display group is not LABORATORY, exclude it"
^XTMP("XPDT",7317,"RTN","ORAMX",240,0)=" S ORDGDA=$P($G(^ORD(101.43,+ORDA,0)),U,5)"
^XTMP("XPDT",7317,"RTN","ORAMX",241,0)=" I $S(+ORDGDA'>0:1,$P($G(^ORD(100.98,+ORDGDA,0)),U)'=""LABORATORY"":1,1:0) G VOX"
^XTMP("XPDT",7317,"RTN","ORAMX",242,0)=" ; if ID not valid, exclude it"
^XTMP("XPDT",7317,"RTN","ORAMX",243,0)=" S ORID=+$P($G(^ORD(101.43,+ORDA,0)),U,2)"
^XTMP("XPDT",7317,"RTN","ORAMX",244,0)=" I '$$VALIDLAB(ORID) G VOX"
^XTMP("XPDT",7317,"RTN","ORAMX",245,0)=" ; otherwise, allow selection"
^XTMP("XPDT",7317,"RTN","ORAMX",246,0)=" S ORY=1"
^XTMP("XPDT",7317,"RTN","ORAMX",247,0)="VOX Q ORY"
^XTMP("XPDT",7317,"RTN","ORAMX",248,0)="VALIDLAB(ORID) ; Is lab test valid?"
^XTMP("XPDT",7317,"RTN","ORAMX",249,0)=" N ORY S ORY=0"
^XTMP("XPDT",7317,"RTN","ORAMX",250,0)=" I $S(+ORID'>0:1,'$D(^LAB(60,+ORID,0)):1,1:0) G VLX"
^XTMP("XPDT",7317,"RTN","ORAMX",251,0)=" ; if entry in LABORATORY TEST file (#60) doesn't have a LOCATION (DATA NAME), exclude it"
^XTMP("XPDT",7317,"RTN","ORAMX",252,0)=" I '$L($P($G(^LAB(60,+ORID,0)),U,5)) G VLX"
^XTMP("XPDT",7317,"RTN","ORAMX",253,0)=" ; otherwise, allow selection"
^XTMP("XPDT",7317,"RTN","ORAMX",254,0)=" S ORY=1"
^XTMP("XPDT",7317,"RTN","ORAMX",255,0)="VLX Q ORY"
^XTMP("XPDT",7317,"RTN","ORAMX",256,0)="TEAMLIST(ORLIST) ; Team List Reports"
^XTMP("XPDT",7317,"RTN","ORAMX",257,0)=" N DIC,DHD,FLDS,L,FR,BY,TO,ORCL,ORPAR,ORALIST,ORCLIST"
^XTMP("XPDT",7317,"RTN","ORAMX",258,0)=" S DIC=""^OR(100.21,"",L=0,FLDS=""[ORAM TEAM LIST]"",BY=""[ORAM TEAM LIST]"""
^XTMP("XPDT",7317,"RTN","ORAMX",259,0)=" W !!,""List of "",$S(ORLIST=""A"":""ALL"",1:""COMPLEX""),"" Anticoagulation Patients for a Clinic"",!"
^XTMP("XPDT",7317,"RTN","ORAMX",260,0)=" S ORCL=$$SELLOC^ORAMSET"
^XTMP("XPDT",7317,"RTN","ORAMX",261,0)=" I +ORCL'>0 D  Q"
^XTMP("XPDT",7317,"RTN","ORAMX",262,0)=" . W $C(7),!!,""You must select a Clinic to proceed..."",!"
^XTMP("XPDT",7317,"RTN","ORAMX",263,0)=" D GET^ORAMSET(.ORPAR,ORCL)"
^XTMP("XPDT",7317,"RTN","ORAMX",264,0)=" S ORALIST=$P($G(ORPAR(0)),U,2),ORCLIST=$P($G(ORPAR(0)),U,3)"
^XTMP("XPDT",7317,"RTN","ORAMX",265,0)=" S:+ORALIST ORALIST=$P($G(^OR(100.21,ORALIST,0)),U)"
^XTMP("XPDT",7317,"RTN","ORAMX",266,0)=" S:+ORCLIST ORCLIST=$P($G(^OR(100.21,ORCLIST,0)),U)"
^XTMP("XPDT",7317,"RTN","ORAMX",267,0)=" S (FR,TO,DHD)=$S(ORLIST=""A"":ORALIST,1:ORCLIST)"
^XTMP("XPDT",7317,"RTN","ORAMX",268,0)=" I FR']"""" D  Q"
^XTMP("XPDT",7317,"RTN","ORAMX",269,0)=" . W !,""You must define a list for "",$S(ORLIST=""A"":""ALL"",1:""COMPLEX""),"" Anticoagulation Patients."""
^XTMP("XPDT",7317,"RTN","ORAMX",270,0)=" . W $$READ(""EA"",""Press Return to Continue..."")"
^XTMP("XPDT",7317,"RTN","ORAMX",271,0)=" D EN1^DIP"
^XTMP("XPDT",7317,"RTN","ORAMX",272,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMX",273,0)="NEXTLAB ; Next Lab Report"
^XTMP("XPDT",7317,"RTN","ORAMX",274,0)=" N DIC,DHD,FLDS,L,FR,BY,TO,ORCL,OREDT,ORLDT"
^XTMP("XPDT",7317,"RTN","ORAMX",275,0)=" S DIC=""^ORAM(103,"",L=0,FLDS=""[ORAM TEAM LIST]"",BY=""@CLINIC,NEXT LAB,@PATIENT"",(OREDT,ORLDT)="""""
^XTMP("XPDT",7317,"RTN","ORAMX",276,0)=" W !!,""List Anticoagulation Patients with Pending Lab Draws"",!"
^XTMP("XPDT",7317,"RTN","ORAMX",277,0)=" S ORCL=$$SELLOC^ORAMSET"
^XTMP("XPDT",7317,"RTN","ORAMX",278,0)=" I +ORCL'>0 D  Q"
^XTMP("XPDT",7317,"RTN","ORAMX",279,0)=" . W $C(7),!!,""You must select a Clinic to proceed..."",!"
^XTMP("XPDT",7317,"RTN","ORAMX",280,0)=" S ORCL=$P($G(^SC(+ORCL,0)),U)"
^XTMP("XPDT",7317,"RTN","ORAMX",281,0)=" F  D  Q:+ORLDT>+OREDT!$D(DIRUT)"
^XTMP("XPDT",7317,"RTN","ORAMX",282,0)=" . S OREDT=+$$READ(""DA^::E"",""Please Enter START Date: "",""T"",""Enter a start date for the report"")"
^XTMP("XPDT",7317,"RTN","ORAMX",283,0)=" . Q:'OREDT"
^XTMP("XPDT",7317,"RTN","ORAMX",284,0)=" . S ORLDT=+$$READ(""DA^::E"",""  Please Enter END Date: "",""T+14"",""Enter an INCLUSIVE end date for the report"")"
^XTMP("XPDT",7317,"RTN","ORAMX",285,0)=" . Q:'ORLDT"
^XTMP("XPDT",7317,"RTN","ORAMX",286,0)=" . I $L(ORLDT,""."")=1 S ORLDT=ORLDT_"".2359"""
^XTMP("XPDT",7317,"RTN","ORAMX",287,0)=" . I OREDT>ORLDT W !,""END DATE must be more recent than the START DATE"" S (OREDT,ORLDT)="""""
^XTMP("XPDT",7317,"RTN","ORAMX",288,0)=" Q:$S(OREDT'>0:1,ORLDT'>0:1,1:0)"
^XTMP("XPDT",7317,"RTN","ORAMX",289,0)=" S OREDT=$$FMTE^XLFDT(OREDT,2),ORLDT=$$FMTE^XLFDT(ORLDT,2)"
^XTMP("XPDT",7317,"RTN","ORAMX",290,0)=" S DHD=ORCL_"" Next Lab Report"""
^XTMP("XPDT",7317,"RTN","ORAMX",291,0)=" S FR=ORCL_"",""_OREDT,TO=ORCL_"",""_ORLDT"
^XTMP("XPDT",7317,"RTN","ORAMX",292,0)=" D EN1^DIP"
^XTMP("XPDT",7317,"RTN","ORAMX",293,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMY")="0^^B23662959^n/a"
^XTMP("XPDT",7317,"RTN","ORAMY",1,0)="ORAMY ; ISL/JER - Anticoagulation Management Installation ;12/16/09  15:31"
^XTMP("XPDT",7317,"RTN","ORAMY",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307**;Dec 17, 1997;Build 60"
^XTMP("XPDT",7317,"RTN","ORAMY",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7317,"RTN","ORAMY",4,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMY",5,0)="POST ; Post-install routine"
^XTMP("XPDT",7317,"RTN","ORAMY",6,0)=" D ATTRPT"
^XTMP("XPDT",7317,"RTN","ORAMY",7,0)=" D REGRPCS"
^XTMP("XPDT",7317,"RTN","ORAMY",8,0)=" D PARAM"
^XTMP("XPDT",7317,"RTN","ORAMY",9,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMY",10,0)="ATTRPT ; Set Anticoagulation Flowsheet Report as item in ORRPW REPORT CATEGORIES"
^XTMP("XPDT",7317,"RTN","ORAMY",11,0)=" N ORRIEN,ORRNM,ORERRF,ORFDA,ORAFIEN,ORAFNM,ORLNE"
^XTMP("XPDT",7317,"RTN","ORAMY",12,0)=" N ORMSG,ORTXT"
^XTMP("XPDT",7317,"RTN","ORAMY",13,0)=" K ORMSG"
^XTMP("XPDT",7317,"RTN","ORAMY",14,0)=" D BMES^XPDUTL("" Attaching Anticoagulation Flowsheet to ORRPW REPORT CATEGORIES..."")"
^XTMP("XPDT",7317,"RTN","ORAMY",15,0)=" S ORRNM=""ORRPW REPORT CATEGORIES"""
^XTMP("XPDT",7317,"RTN","ORAMY",16,0)=" S ORRIEN=$$FIND1^DIC(101.24,"""",""X"",ORRNM,"""","""","""")"
^XTMP("XPDT",7317,"RTN","ORAMY",17,0)=" ;If ORRPW REPORT CATEGORIES not found, error"
^XTMP("XPDT",7317,"RTN","ORAMY",18,0)=" I ORRIEN'>0 D  I 1"
^XTMP("XPDT",7317,"RTN","ORAMY",19,0)=" . S ORMSG(1)=""**"""
^XTMP("XPDT",7317,"RTN","ORAMY",20,0)=" . S ORMSG(2)=""** ""_ORRNM_"" not found **"""
^XTMP("XPDT",7317,"RTN","ORAMY",21,0)=" . S ORMSG(3)=""**"""
^XTMP("XPDT",7317,"RTN","ORAMY",22,0)=" . D MES^XPDUTL(.ORMSG) K ORMSG"
^XTMP("XPDT",7317,"RTN","ORAMY",23,0)=" . S ORERRF=1"
^XTMP("XPDT",7317,"RTN","ORAMY",24,0)=" ELSE  D"
^XTMP("XPDT",7317,"RTN","ORAMY",25,0)=" . S ORAFNM=""ORAM ANTICOAG REPORT"""
^XTMP("XPDT",7317,"RTN","ORAMY",26,0)=" . S ORAFIEN=$$FIND1^DIC(101.24,"""",""X"",ORAFNM,"""","""","""")"
^XTMP("XPDT",7317,"RTN","ORAMY",27,0)=" . ;If ORAM ANTICOAG REPORT not found, error"
^XTMP("XPDT",7317,"RTN","ORAMY",28,0)=" . I ORAFIEN'>0 D  Q"
^XTMP("XPDT",7317,"RTN","ORAMY",29,0)=" . . S ORMSG(1)=""**"""
^XTMP("XPDT",7317,"RTN","ORAMY",30,0)=" . . S ORMSG(2)=""** ""_ORAFNM_"" not found **"""
^XTMP("XPDT",7317,"RTN","ORAMY",31,0)=" . . S ORMSG(3)=""**"""
^XTMP("XPDT",7317,"RTN","ORAMY",32,0)=" . . D MES^XPDUTL(.ORMSG) K ORMSG"
^XTMP("XPDT",7317,"RTN","ORAMY",33,0)=" . . S ORERRF=1"
^XTMP("XPDT",7317,"RTN","ORAMY",34,0)=" . ;Attach ORAM ANTICOAG REPORT to ORRPW REPORT CATEGORIES"
^XTMP("XPDT",7317,"RTN","ORAMY",35,0)=" . N ORFDA,ORIEN,ORMSG"
^XTMP("XPDT",7317,"RTN","ORAMY",36,0)=" . S ORFDA(101.241,""?+10,""_ORRIEN_"","",.01)=ORAFIEN"
^XTMP("XPDT",7317,"RTN","ORAMY",37,0)=" . D UPDATE^DIE("""",""ORFDA"",""ORIEN"",""ORMSG"")"
^XTMP("XPDT",7317,"RTN","ORAMY",38,0)=" . ;Check for error"
^XTMP("XPDT",7317,"RTN","ORAMY",39,0)=" . I $D(ORMSG(""DIERR"")) D  Q"
^XTMP("XPDT",7317,"RTN","ORAMY",40,0)=" . . S ORMSG(1)=""**"""
^XTMP("XPDT",7317,"RTN","ORAMY",41,0)=" . . S ORMSG(2)=""** Unable to attach ""_ORAFNM_"" to ""_ORRNM_"" **"""
^XTMP("XPDT",7317,"RTN","ORAMY",42,0)=" . . S ORMSG(3)=""**"""
^XTMP("XPDT",7317,"RTN","ORAMY",43,0)=" . . D MES^XPDUTL(.ORMSG) K ORMSG"
^XTMP("XPDT",7317,"RTN","ORAMY",44,0)=" . . S ORERRF=1"
^XTMP("XPDT",7317,"RTN","ORAMY",45,0)=" . S ORMSG(1)="" """
^XTMP("XPDT",7317,"RTN","ORAMY",46,0)=" . S ORMSG(2)="" ... ""_ORAFNM_$S($G(ORIEN(10,0))=""?"":"" already"",1:"""")_"" attached to ""_ORRNM_"" ..."""
^XTMP("XPDT",7317,"RTN","ORAMY",47,0)=" . D MES^XPDUTL(.ORMSG) K ORMSG"
^XTMP("XPDT",7317,"RTN","ORAMY",48,0)=" ;Check for error"
^XTMP("XPDT",7317,"RTN","ORAMY",49,0)=" I $G(ORERRF) D"
^XTMP("XPDT",7317,"RTN","ORAMY",50,0)=" . S ORMSG(1)=""** Post-installation interrupted"""
^XTMP("XPDT",7317,"RTN","ORAMY",51,0)=" . S ORMSG(2)=""** Please contact Enterprise VistA Support"""
^XTMP("XPDT",7317,"RTN","ORAMY",52,0)=" . D MES^XPDUTL(.ORMSG) K ORMSG"
^XTMP("XPDT",7317,"RTN","ORAMY",53,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMY",54,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMY",55,0)="REGRPCS ; Register RPCS"
^XTMP("XPDT",7317,"RTN","ORAMY",56,0)=" D BMES^XPDUTL("" Registering RPCs with Context Menu ORAM ANTICOAGULATION CONTEXT..."")"
^XTMP("XPDT",7317,"RTN","ORAMY",57,0)=" D REGISTER(""ORAM ANTICOAGULATION CONTEXT"",""ORWPCE SCDIS"")"
^XTMP("XPDT",7317,"RTN","ORAMY",58,0)=" D REGISTER(""ORAM ANTICOAGULATION CONTEXT"",""ORWPCE SCSEL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",59,0)=" D REGISTER(""ORAM ANTICOAGULATION CONTEXT"",""ORWTPP GETCOS"")"
^XTMP("XPDT",7317,"RTN","ORAMY",60,0)=" D REGISTER(""ORAM ANTICOAGULATION CONTEXT"",""ORWTPP GETDCOS"")"
^XTMP("XPDT",7317,"RTN","ORAMY",61,0)=" D REGISTER(""ORAM ANTICOAGULATION CONTEXT"",""TIU SIGN RECORD"")"
^XTMP("XPDT",7317,"RTN","ORAMY",62,0)=" D REGISTER(""ORAM ANTICOAGULATION CONTEXT"",""TIU CREATE RECORD"")"
^XTMP("XPDT",7317,"RTN","ORAMY",63,0)=" D REGISTER(""ORAM ANTICOAGULATION CONTEXT"",""TIU DELETE RECORD"")"
^XTMP("XPDT",7317,"RTN","ORAMY",64,0)=" D REGISTER(""ORAM ANTICOAGULATION CONTEXT"",""TIU REQUIRES COSIGNATURE"")"
^XTMP("XPDT",7317,"RTN","ORAMY",65,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMY",66,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORAMY",67,0)="REGISTER(OPTION,RPC) ; Call FM Updater to register each RPC"
^XTMP("XPDT",7317,"RTN","ORAMY",68,0)=" ; Input  -- OPTION   Option file (#19) Name field (#.01)"
^XTMP("XPDT",7317,"RTN","ORAMY",69,0)=" ;           RPC      RPC sub-file (#19.05) RPC field (#.01)"
^XTMP("XPDT",7317,"RTN","ORAMY",70,0)=" ; Output -- None"
^XTMP("XPDT",7317,"RTN","ORAMY",71,0)=" N FDA,FDAIEN,ERR,DIERR"
^XTMP("XPDT",7317,"RTN","ORAMY",72,0)=" S FDA(19,""?1,"",.01)=OPTION"
^XTMP("XPDT",7317,"RTN","ORAMY",73,0)=" S FDA(19.05,""?+2,?1,"",.01)=RPC"
^XTMP("XPDT",7317,"RTN","ORAMY",74,0)=" D UPDATE^DIE(""E"",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7317,"RTN","ORAMY",75,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMY",76,0)="PARAM ; main (initial) parameter transport routine"
^XTMP("XPDT",7317,"RTN","ORAMY",77,0)=" N ORENT,IDX,ROOT,REF,ORVAL,I"
^XTMP("XPDT",7317,"RTN","ORAMY",78,0)=" D BMES^XPDUTL("" Installing List of Indications for Care..."")"
^XTMP("XPDT",7317,"RTN","ORAMY",79,0)=" S ROOT=$NAME(^TMP(""ORAMY"",$J)) K @ROOT"
^XTMP("XPDT",7317,"RTN","ORAMY",80,0)=" D LOAD(ROOT)"
^XTMP("XPDT",7317,"RTN","ORAMY",81,0)=" S IDX=0,ORENT=""PKG.ORDER ENTRY/RESULTS REPORTING"""
^XTMP("XPDT",7317,"RTN","ORAMY",82,0)=" F  S IDX=$O(@ROOT@(IDX)) Q:'IDX  D"
^XTMP("XPDT",7317,"RTN","ORAMY",83,0)=" . N ORPAR,ORINST,ORIVAL,OREVAL,ORERR"
^XTMP("XPDT",7317,"RTN","ORAMY",84,0)=" . S ORPAR=$P(@ROOT@(IDX,""KEY""),U),ORINST=$P(^(""KEY""),U,2)"
^XTMP("XPDT",7317,"RTN","ORAMY",85,0)=" . S ORIVAL=$P(@ROOT@(IDX,""VAL""),U),OREVAL=$P(^(""VAL""),U,2)"
^XTMP("XPDT",7317,"RTN","ORAMY",86,0)=" . D BMES^XPDUTL("" Installing ""_ORINST_"" = ""_OREVAL)"
^XTMP("XPDT",7317,"RTN","ORAMY",87,0)=" . D EN^XPAR(ORENT,ORPAR,ORINST,ORIVAL,.ORERR)"
^XTMP("XPDT",7317,"RTN","ORAMY",88,0)=" . I +$G(ORERR)>0 D BMES^XPDUTL("" Error Occurred for ""_ORINST_"" = ""_OREVAL_"": ""_$P(ORERR,U,2))"
^XTMP("XPDT",7317,"RTN","ORAMY",89,0)=" K @ROOT"
^XTMP("XPDT",7317,"RTN","ORAMY",90,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMY",91,0)="LOAD(ROOT) ; load data into ^TMP (expects ROOT to be defined)"
^XTMP("XPDT",7317,"RTN","ORAMY",92,0)=" N I,REF"
^XTMP("XPDT",7317,"RTN","ORAMY",93,0)=" S I=1,ROOT=$E(ROOT,1,$L(ROOT)-1)_"","""
^XTMP("XPDT",7317,"RTN","ORAMY",94,0)=" F  S REF=$P($T(DATA+I),"";"",3,999) Q:REF=""""  D"
^XTMP("XPDT",7317,"RTN","ORAMY",95,0)=" . N ORVAL"
^XTMP("XPDT",7317,"RTN","ORAMY",96,0)=" . S ORVAL=$P($T(DATA+I+1),"";"",3,999)"
^XTMP("XPDT",7317,"RTN","ORAMY",97,0)=" . S @(ROOT_REF)=ORVAL,I=I+2"
^XTMP("XPDT",7317,"RTN","ORAMY",98,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORAMY",99,0)="DATA ; parameter data"
^XTMP("XPDT",7317,"RTN","ORAMY",100,0)=" ;;14701,""KEY"")"
^XTMP("XPDT",7317,"RTN","ORAMY",101,0)=" ;;ORAM INDICATIONS FOR CARE^A Fib"
^XTMP("XPDT",7317,"RTN","ORAMY",102,0)=" ;;14701,""VAL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",103,0)=" ;;`2557^427.31"
^XTMP("XPDT",7317,"RTN","ORAMY",104,0)=" ;;14702,""KEY"")"
^XTMP("XPDT",7317,"RTN","ORAMY",105,0)=" ;;ORAM INDICATIONS FOR CARE^A Flutter"
^XTMP("XPDT",7317,"RTN","ORAMY",106,0)=" ;;14702,""VAL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",107,0)=" ;;`2558^427.32"
^XTMP("XPDT",7317,"RTN","ORAMY",108,0)=" ;;14703,""KEY"")"
^XTMP("XPDT",7317,"RTN","ORAMY",109,0)=" ;;ORAM INDICATIONS FOR CARE^CVA"
^XTMP("XPDT",7317,"RTN","ORAMY",110,0)=" ;;14703,""VAL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",111,0)=" ;;`9069^436."
^XTMP("XPDT",7317,"RTN","ORAMY",112,0)=" ;;14704,""KEY"")"
^XTMP("XPDT",7317,"RTN","ORAMY",113,0)=" ;;ORAM INDICATIONS FOR CARE^DVT"
^XTMP("XPDT",7317,"RTN","ORAMY",114,0)=" ;;14704,""VAL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",115,0)=" ;;`15011^453.89"
^XTMP("XPDT",7317,"RTN","ORAMY",116,0)=" ;;14705,""KEY"")"
^XTMP("XPDT",7317,"RTN","ORAMY",117,0)=" ;;ORAM INDICATIONS FOR CARE^Hypercoag State"
^XTMP("XPDT",7317,"RTN","ORAMY",118,0)=" ;;14705,""VAL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",119,0)=" ;;`13798^289.81"
^XTMP("XPDT",7317,"RTN","ORAMY",120,0)=" ;;14706,""KEY"")"
^XTMP("XPDT",7317,"RTN","ORAMY",121,0)=" ;;ORAM INDICATIONS FOR CARE^PE"
^XTMP("XPDT",7317,"RTN","ORAMY",122,0)=" ;;14706,""VAL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",123,0)=" ;;`13157^415.19"
^XTMP("XPDT",7317,"RTN","ORAMY",124,0)=" ;;14707,""KEY"")"
^XTMP("XPDT",7317,"RTN","ORAMY",125,0)=" ;;ORAM INDICATIONS FOR CARE^TIA"
^XTMP("XPDT",7317,"RTN","ORAMY",126,0)=" ;;14707,""VAL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",127,0)=" ;;`2591^435.9"
^XTMP("XPDT",7317,"RTN","ORAMY",128,0)=" ;;14708,""KEY"")"
^XTMP("XPDT",7317,"RTN","ORAMY",129,0)=" ;;ORAM INDICATIONS FOR CARE^Valve-Tissue"
^XTMP("XPDT",7317,"RTN","ORAMY",130,0)=" ;;14708,""VAL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",131,0)=" ;;`11516^V42.2"
^XTMP("XPDT",7317,"RTN","ORAMY",132,0)=" ;;14709,""KEY"")"
^XTMP("XPDT",7317,"RTN","ORAMY",133,0)=" ;;ORAM INDICATIONS FOR CARE^Valve-Mech"
^XTMP("XPDT",7317,"RTN","ORAMY",134,0)=" ;;14709,""VAL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",135,0)=" ;;`11527^V43.3"
^XTMP("XPDT",7317,"RTN","ORAMY",136,0)=" ;;14710,""KEY"")"
^XTMP("XPDT",7317,"RTN","ORAMY",137,0)=" ;;ORAM INDICATIONS FOR CARE^L/T (Current) Anticoag Use"
^XTMP("XPDT",7317,"RTN","ORAMY",138,0)=" ;;14710,""VAL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",139,0)=" ;;`13194^V58.61"
^XTMP("XPDT",7317,"RTN","ORAMY",140,0)=" ;;14711,""KEY"")"
^XTMP("XPDT",7317,"RTN","ORAMY",141,0)=" ;;ORAM INDICATIONS FOR CARE^Enctr for Tx Drug Monitoring"
^XTMP("XPDT",7317,"RTN","ORAMY",142,0)=" ;;14711,""VAL"")"
^XTMP("XPDT",7317,"RTN","ORAMY",143,0)=" ;;`13529^V58.83"
^XTMP("XPDT",7317,"RTN","ORWOR")="0^8^B36027702^B35518390"
^XTMP("XPDT",7317,"RTN","ORWOR",1,0)="ORWOR ; SLC/KCM - Orders Calls;10:54 PM  08/15/2006 ;09/02/09  15:56"
^XTMP("XPDT",7317,"RTN","ORWOR",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,141,163,187,190,215,243,307**;Dec 17, 1997;Build 60"
^XTMP("XPDT",7317,"RTN","ORWOR",3,0)=" ;"
^XTMP("XPDT",7317,"RTN","ORWOR",4,0)="CURRENT(LST,DFN) ; Get Current Orders for a Patient"
^XTMP("XPDT",7317,"RTN","ORWOR",5,0)=" ; Returns two lists in ^TMP(""ORW"",$J), fields and text"
^XTMP("XPDT",7317,"RTN","ORWOR",6,0)=" N TM,IEN,X,X0,X3,CTR,IDX,I"
^XTMP("XPDT",7317,"RTN","ORWOR",7,0)=" K ^TMP(""ORW"",$J)"
^XTMP("XPDT",7317,"RTN","ORWOR",8,0)=" S IDX=0,DFN=DFN_"";DPT("""
^XTMP("XPDT",7317,"RTN","ORWOR",9,0)=" S TM=0 F  S TM=$O(^OR(100,""AC"",DFN,TM)) Q:TM<1  D"
^XTMP("XPDT",7317,"RTN","ORWOR",10,0)=" . S IEN=0 F  S IEN=$O(^OR(100,""AC"",DFN,TM,IEN)) Q:IEN<1  D"
^XTMP("XPDT",7317,"RTN","ORWOR",11,0)=" . . S X0=^OR(100,IEN,0),X3=^(3)"
^XTMP("XPDT",7317,"RTN","ORWOR",12,0)=" . . S X=IEN_U_$P(X0,U,7)_U_$P(X0,U,11)_U_$P(X3,U,6)_U_$P(X3,U,3)"
^XTMP("XPDT",7317,"RTN","ORWOR",13,0)=" . . S ^TMP(""ORW"",$J,IDX+1)=X"
^XTMP("XPDT",7317,"RTN","ORWOR",14,0)=" . . S (CTR,I)=0,X="""""
^XTMP("XPDT",7317,"RTN","ORWOR",15,0)=" . . F  S I=$O(^OR(100,IEN,1,I)) Q:I<1  D  Q:CTR>244"
^XTMP("XPDT",7317,"RTN","ORWOR",16,0)=" . . . S X=X_$E(^OR(100,IEN,1,I,0),1,(245-CTR)),CTR=$L(X)"
^XTMP("XPDT",7317,"RTN","ORWOR",17,0)=" . . S ^TMP(""ORW"",$J,IDX+2)=X,IDX=IDX+2"
^XTMP("XPDT",7317,"RTN","ORWOR",18,0)=" ; S LST=$NA(^TMP(""ORW"",$J))"
^XTMP("XPDT",7317,"RTN","ORWOR",19,0)=" M LST=^TMP(""ORW"",$J)"
^XTMP("XPDT",7317,"RTN","ORWOR",20,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",21,0)="DETAIL(LST,ORID,DFN)    ; Return details of ORID (shell to kill VIDEO subs)"
^XTMP("XPDT",7317,"RTN","ORWOR",22,0)=" Q:'+ORID"
^XTMP("XPDT",7317,"RTN","ORWOR",23,0)=" I $G(DFN) N ORVP S ORVP=DFN_"";DPT("""
^XTMP("XPDT",7317,"RTN","ORWOR",24,0)=" S LST=""^TMP(""""ORTXT"""",$J)"""
^XTMP("XPDT",7317,"RTN","ORWOR",25,0)=" D DETAIL^ORQ2(.LST,ORID)"
^XTMP("XPDT",7317,"RTN","ORWOR",26,0)=" K @LST@(""VIDEO"")"
^XTMP("XPDT",7317,"RTN","ORWOR",27,0)=" S LST=$NA(^TMP(""ORTXT"",$J)),@LST="""""
^XTMP("XPDT",7317,"RTN","ORWOR",28,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",29,0)="RESULT(REF,DFN,ORID,ID)      ; Return results of order identified by ID"
^XTMP("XPDT",7317,"RTN","ORWOR",30,0)=" K ^TMP(""ORXPND"",$J)"
^XTMP("XPDT",7317,"RTN","ORWOR",31,0)=" N ORESULTS,ORVP,LCNT S ORESULTS=1,LCNT=0,ORVP=DFN_"";DPT("""
^XTMP("XPDT",7317,"RTN","ORWOR",32,0)=" D ORDERS^ORCXPND1"
^XTMP("XPDT",7317,"RTN","ORWOR",33,0)=" K ^TMP(""ORXPND"",$J,""VIDEO"")"
^XTMP("XPDT",7317,"RTN","ORWOR",34,0)=" S REF=$NA(^TMP(""ORXPND"",$J))"
^XTMP("XPDT",7317,"RTN","ORWOR",35,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",36,0)="RESHIST(REF,DFN,ORID,ID)      ; Return result history of associated tests identified by ID"
^XTMP("XPDT",7317,"RTN","ORWOR",37,0)=" K ^TMP(""ORXPND"",$J)"
^XTMP("XPDT",7317,"RTN","ORWOR",38,0)=" N ORESULTS,ORVP,LCNT"
^XTMP("XPDT",7317,"RTN","ORWOR",39,0)=" S ORESULTS=1,LCNT=0,ORVP=DFN_"";DPT("""
^XTMP("XPDT",7317,"RTN","ORWOR",40,0)=" D ORDHIST^ORWOR2"
^XTMP("XPDT",7317,"RTN","ORWOR",41,0)=" K ^TMP(""ORXPND"",$J,""VIDEO"")"
^XTMP("XPDT",7317,"RTN","ORWOR",42,0)=" S REF=$NA(^TMP(""ORXPND"",$J))"
^XTMP("XPDT",7317,"RTN","ORWOR",43,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",44,0)="TSALL(LST)      ; Return list of treating specialties"
^XTMP("XPDT",7317,"RTN","ORWOR",45,0)=" N Y S Y=0"
^XTMP("XPDT",7317,"RTN","ORWOR",46,0)=" F  S Y=$O(^DIC(45.7,Y)) Q:'Y  I $$ACTIVE^DGACT(45.7,Y) S LST(Y)=Y_U_$P(^DIC(45.7,Y,0),U)"
^XTMP("XPDT",7317,"RTN","ORWOR",47,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",48,0)="DT(X) ; -- Returns FM date for X (SEE ORCHTAB1)"
^XTMP("XPDT",7317,"RTN","ORWOR",49,0)=" N Y,%DT S %DT=""T"",Y="""" D:X'="""" ^%DT"
^XTMP("XPDT",7317,"RTN","ORWOR",50,0)=" Q +Y"
^XTMP("XPDT",7317,"RTN","ORWOR",51,0)="VWSET(ORERR,VIEW)       ; Set the preferred view for orders"
^XTMP("XPDT",7317,"RTN","ORWOR",52,0)=" ; VIEW:  semi-colon delimited record"
^XTMP("XPDT",7317,"RTN","ORWOR",53,0)=" ;        1 - Relative From Date/Time or """""
^XTMP("XPDT",7317,"RTN","ORWOR",54,0)=" ;        2 - Relative Thru Date/Time or """""
^XTMP("XPDT",7317,"RTN","ORWOR",55,0)=" ;        3 - Filter"
^XTMP("XPDT",7317,"RTN","ORWOR",56,0)=" ;        4 - Display Group Pointer"
^XTMP("XPDT",7317,"RTN","ORWOR",57,0)=" ;        5 - Format (preserve for list manager)"
^XTMP("XPDT",7317,"RTN","ORWOR",58,0)=" ;        6 - chronological display (R or F)"
^XTMP("XPDT",7317,"RTN","ORWOR",59,0)=" ;        7 - sort by display group"
^XTMP("XPDT",7317,"RTN","ORWOR",60,0)=" N FMT"
^XTMP("XPDT",7317,"RTN","ORWOR",61,0)=" ; use short name for display group instead of pointer"
^XTMP("XPDT",7317,"RTN","ORWOR",62,0)=" I $E($P(VIEW,"";"",2))=""T"" S $P(VIEW,"";"",2)=$P($P(VIEW,"";"",2),""@"") ;allows all orders for Today"
^XTMP("XPDT",7317,"RTN","ORWOR",63,0)=" S $P(VIEW,"";"",4)=$P($G(^ORD(100.98,+$P(VIEW,"";"",4),0)),U,3)"
^XTMP("XPDT",7317,"RTN","ORWOR",64,0)=" ; use last saved format, since this is used only by LM"
^XTMP("XPDT",7317,"RTN","ORWOR",65,0)=" S FMT=$P($$GET^XPAR(""ALL"",""ORCH CONTEXT ORDERS"",1,""I""),"";"",5)"
^XTMP("XPDT",7317,"RTN","ORWOR",66,0)=" S:'$L(FMT) FMT=""L"" S $P(VIEW,"";"",5)=FMT"
^XTMP("XPDT",7317,"RTN","ORWOR",67,0)=" ; and save the parameter"
^XTMP("XPDT",7317,"RTN","ORWOR",68,0)=" D EN^XPAR(DUZ_"";VA(200,"",""ORCH CONTEXT ORDERS"",1,VIEW,.ORERR)"
^XTMP("XPDT",7317,"RTN","ORWOR",69,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",70,0)="VWGET(REC)      ; Get the preferred view for orders"
^XTMP("XPDT",7317,"RTN","ORWOR",71,0)=" N FROM,THRU,FILTER,DGRP,FRMT,CHRN,BYGRP,S,VNAME,FL"
^XTMP("XPDT",7317,"RTN","ORWOR",72,0)=" S REC=$$GET^XPAR(""ALL"",""ORCH CONTEXT ORDERS"",1,""I""),S="";"""
^XTMP("XPDT",7317,"RTN","ORWOR",73,0)=" S FROM=$$DT($P(REC,S)),THRU=$$DT($P(REC,S,2)),FILTER=$P(REC,S,3)"
^XTMP("XPDT",7317,"RTN","ORWOR",74,0)=" S DGRP=$P(REC,S,4),FRMT=$P(REC,S,5),CHRN=$P(REC,S,6),BYGRP=$P(REC,S,7)"
^XTMP("XPDT",7317,"RTN","ORWOR",75,0)=" S:'$L(DGRP) DGRP=""ALL"" S DGRP=+$O(^ORD(100.98,""B"",DGRP,0))"
^XTMP("XPDT",7317,"RTN","ORWOR",76,0)=" I FILTER="""" S FILTER=2  ; active orders"
^XTMP("XPDT",7317,"RTN","ORWOR",77,0)=" I CHRN="""" S CHRN=""R""    ; reverse chronological"
^XTMP("XPDT",7317,"RTN","ORWOR",78,0)=" I BYGRP="""" S BYGRP=1    ; sort by display group"
^XTMP("XPDT",7317,"RTN","ORWOR",79,0)=" ; set up view name"
^XTMP("XPDT",7317,"RTN","ORWOR",80,0)=" D REVSTS^ORWORDG(.FL)"
^XTMP("XPDT",7317,"RTN","ORWOR",81,0)=" S I=0 F  S I=$O(FL(I)) Q:'I  Q:+FL(I)=FILTER"
^XTMP("XPDT",7317,"RTN","ORWOR",82,0)=" S VNAME=$P($G(FL(+I)),U,2)"
^XTMP("XPDT",7317,"RTN","ORWOR",83,0)=" I '(""^6^8^9^10^19^20^""[(U_FILTER_U)) S VNAME=VNAME_"" Orders"""
^XTMP("XPDT",7317,"RTN","ORWOR",84,0)=" I FILTER=2 S VNAME=""Active Orders (includes Pending & Recent Activity)"""
^XTMP("XPDT",7317,"RTN","ORWOR",85,0)=" I FILTER=23 S VNAME=""Current Orders (Active & Pending Status Only)"""
^XTMP("XPDT",7317,"RTN","ORWOR",86,0)=" S VNAME=VNAME_"" - ""_$P($G(^ORD(100.98,DGRP,0)),U)"
^XTMP("XPDT",7317,"RTN","ORWOR",87,0)=" I (FROM>0)!(THRU>0) D"
^XTMP("XPDT",7317,"RTN","ORWOR",88,0)=" . S VNAME=VNAME_"" (""_$$FMTE^XLFDT(FROM,""2D"")_"" thru """
^XTMP("XPDT",7317,"RTN","ORWOR",89,0)=" . S VNAME=VNAME_$S(THRU>0:$$FMTE^XLFDT(THRU,""2D""),1:"""")_"")"""
^XTMP("XPDT",7317,"RTN","ORWOR",90,0)=" S REC=FROM_S_THRU_S_FILTER_S_DGRP_S_FRMT_S_CHRN_S_BYGRP_S_VNAME"
^XTMP("XPDT",7317,"RTN","ORWOR",91,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",92,0)="SHEETS(LST,ORVP) ; Return Order Sheets for a patient"
^XTMP("XPDT",7317,"RTN","ORWOR",93,0)=" N ELST,ETYP,ORIFN,TS,I"
^XTMP("XPDT",7317,"RTN","ORWOR",94,0)=" S ORVP=ORVP_"";DPT("""
^XTMP("XPDT",7317,"RTN","ORWOR",95,0)=" S ETYP="""" F  S ETYP=$O(^OR(100,""AEVNT"",ORVP,ETYP)) Q:ETYP=""""  D"
^XTMP("XPDT",7317,"RTN","ORWOR",96,0)=" . S ORIFN=0 F  S ORIFN=$O(^OR(100,""AEVNT"",ORVP,ETYP,ORIFN)) Q:'ORIFN  D"
^XTMP("XPDT",7317,"RTN","ORWOR",97,0)=" . . I (ETYP=""A"")!(ETYP=""T"") S ELST(ETYP,$P($G(^OR(100,+ORIFN,0)),U,13))="""""
^XTMP("XPDT",7317,"RTN","ORWOR",98,0)=" S LST(1)=""C;O^Current View"",I=1"
^XTMP("XPDT",7317,"RTN","ORWOR",99,0)=" S TS="""" F  S TS=$O(ELST(""A"",TS)) Q:TS=""""  D"
^XTMP("XPDT",7317,"RTN","ORWOR",100,0)=" . S I=I+1,LST(I)=""A;""_TS_U_""Admit to ""_$P($G(^DIC(45.7,TS,0)),U)"
^XTMP("XPDT",7317,"RTN","ORWOR",101,0)=" S I=I+1,LST(I)=""A;-1^Admit..."""
^XTMP("XPDT",7317,"RTN","ORWOR",102,0)=" S TS="""" F  S TS=$O(ELST(""T"",TS)) Q:TS=""""  D"
^XTMP("XPDT",7317,"RTN","ORWOR",103,0)=" . S I=I+1,LST(I)=""T;""_TS_U_""Transfer to ""_$P($G(^DIC(45.7,TS,0)),U)"
^XTMP("XPDT",7317,"RTN","ORWOR",104,0)=" I $L($G(^DPT(+ORVP,.1))) D"
^XTMP("XPDT",7317,"RTN","ORWOR",105,0)=" . S I=I+1,LST(I)=""T;-1^Transfer..."""
^XTMP("XPDT",7317,"RTN","ORWOR",106,0)=" . S I=I+1,LST(I)=""D;0^Discharge"""
^XTMP("XPDT",7317,"RTN","ORWOR",107,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",108,0)="EVENTS(LST,EVT) ; Return general delayed events categories for a patient"
^XTMP("XPDT",7317,"RTN","ORWOR",109,0)=" N EVTI"
^XTMP("XPDT",7317,"RTN","ORWOR",110,0)=" S EVTI=0"
^XTMP("XPDT",7317,"RTN","ORWOR",111,0)=" S EVTI=EVTI+1,LST(EVTI)=""A;-1^Admit..."""
^XTMP("XPDT",7317,"RTN","ORWOR",112,0)=" S EVTI=EVTI+1,LST(EVTI)=""T;-1^Transfer..."""
^XTMP("XPDT",7317,"RTN","ORWOR",113,0)=" S EVTI=EVTI+1,LST(EVTI)=""D;0^Discharge"""
^XTMP("XPDT",7317,"RTN","ORWOR",114,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",115,0)="UNSIGN(LST,ORVP,HAVE)   ; Return Unsigned Orders that are not on client"
^XTMP("XPDT",7317,"RTN","ORWOR",116,0)=" N IFN,ACT,X8,ENT,LVL,TM,ILST S ILST=0"
^XTMP("XPDT",7317,"RTN","ORWOR",117,0)=" Q:'$D(^XUSEC(""ORES"",DUZ))&('$D(^XUSEC(""ORELSE"",DUZ))&'$D(^ORAM(103,+ORVP)))"
^XTMP("XPDT",7317,"RTN","ORWOR",118,0)=" S ORVP=ORVP_"";DPT("""
^XTMP("XPDT",7317,"RTN","ORWOR",119,0)=" S ENT=""ALL""_$S($G(^VA(200,DUZ,5)):""^SRV.`""_+^(5),1:"""")"
^XTMP("XPDT",7317,"RTN","ORWOR",120,0)=" S LVL=$$GET^XPAR(ENT,""OR UNSIGNED ORDERS ON EXIT"")"
^XTMP("XPDT",7317,"RTN","ORWOR",121,0)=" Q:'LVL"
^XTMP("XPDT",7317,"RTN","ORWOR",122,0)=" S TM=0 F  S TM=$O(^OR(100,""AS"",ORVP,TM)) Q:TM<1  D"
^XTMP("XPDT",7317,"RTN","ORWOR",123,0)=" . S IFN=0 F  S IFN=$O(^OR(100,""AS"",ORVP,TM,IFN)) Q:IFN<1  D"
^XTMP("XPDT",7317,"RTN","ORWOR",124,0)=" . . S ACT=0 F  S ACT=$O(^OR(100,""AS"",ORVP,TM,IFN,ACT)) Q:ACT<1  D"
^XTMP("XPDT",7317,"RTN","ORWOR",125,0)=" . . . Q:$D(HAVE(IFN_"";""_ACT))                        ;in Changes"
^XTMP("XPDT",7317,"RTN","ORWOR",126,0)=" . . . S X8=$G(^OR(100,IFN,8,ACT,0))"
^XTMP("XPDT",7317,"RTN","ORWOR",127,0)=" . . . I '$S(LVL=1&($P(X8,U,3)=DUZ):1,LVL=2:1,1:0) Q  ;chk user"
^XTMP("XPDT",7317,"RTN","ORWOR",128,0)=" . . . S ILST=ILST+1,LST(ILST)=IFN_"";""_ACT_U_$P(X8,U,3)"
^XTMP("XPDT",7317,"RTN","ORWOR",129,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",130,0)="PKIUSE(RETURN) ; RPC determines user can use PKI Digital Signature"
^XTMP("XPDT",7317,"RTN","ORWOR",131,0)=" S RETURN=0"
^XTMP("XPDT",7317,"RTN","ORWOR",132,0)=" I $$GET^XPAR(""ALL^USR.`""_DUZ,""ORWOR PKI USE"",1,""Q"") S RETURN=1"
^XTMP("XPDT",7317,"RTN","ORWOR",133,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",134,0)="PKISITE(RETURN) ; RPC determines if PKI is turned on at the site"
^XTMP("XPDT",7317,"RTN","ORWOR",135,0)=" S RETURN=0"
^XTMP("XPDT",7317,"RTN","ORWOR",136,0)=" Q:'$L($T(STORESIG^XUSSPKI))  ;Check for Kernel piece"
^XTMP("XPDT",7317,"RTN","ORWOR",137,0)=" Q:'$L($T(DOSE^PSSOPKI1))  ;Check for Pharmacy piece"
^XTMP("XPDT",7317,"RTN","ORWOR",138,0)=" I $$GET^XPAR(""ALL"",""ORWOR PKI SITE"",1,""Q"") S RETURN=1"
^XTMP("XPDT",7317,"RTN","ORWOR",139,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",140,0)="ACTXT(ORY,ORIFN) ;Return detail action information"
^XTMP("XPDT",7317,"RTN","ORWOR",141,0)=" N ORI,CNT,OR0,OR3,OR6"
^XTMP("XPDT",7317,"RTN","ORWOR",142,0)=" K ^TMP(""ORACTXT"",$J)"
^XTMP("XPDT",7317,"RTN","ORWOR",143,0)=" S ORY=""^TMP(""""ORACTXT"""",$J)"",ORI=$P(ORIFN,"";"",2)"
^XTMP("XPDT",7317,"RTN","ORWOR",144,0)=" S CNT=0,ORIFN=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3)),OR6=$G(^(6))"
^XTMP("XPDT",7317,"RTN","ORWOR",145,0)=" F  S ORI=$O(^OR(100,+ORIFN,8,ORI)) Q:ORI'>0  S ACTION=$G(^(ORI,0)) D ACT^ORQ20"
^XTMP("XPDT",7317,"RTN","ORWOR",146,0)=" S ORY=$NA(^TMP(""ORACTXT"",$J)),@ORY="""""
^XTMP("XPDT",7317,"RTN","ORWOR",147,0)=" Q"
^XTMP("XPDT",7317,"RTN","ORWOR",148,0)="EXPIRED(ORY) ;return FM date/time to begin search for expired orders"
^XTMP("XPDT",7317,"RTN","ORWOR",149,0)=" N HRS"
^XTMP("XPDT",7317,"RTN","ORWOR",150,0)=" S HRS=$$GET^XPAR(""ALL"",""ORWOR EXPIRED ORDERS"",1,""I"")"
^XTMP("XPDT",7317,"RTN","ORWOR",151,0)=" S ORY=$$FMADD^XLFDT($$NOW^XLFDT,"""",""-""_HRS,"""","""")"
^XTMP("XPDT",7317,"RTN","ORWOR",152,0)=" Q"
^XTMP("XPDT",7317,"SEC","^DIC",103,103,0,"AUDIT")=""
^XTMP("XPDT",7317,"SEC","^DIC",103,103,0,"DD")="@"
^XTMP("XPDT",7317,"SEC","^DIC",103,103,0,"DEL")=""
^XTMP("XPDT",7317,"SEC","^DIC",103,103,0,"LAYGO")=""
^XTMP("XPDT",7317,"SEC","^DIC",103,103,0,"RD")=""
^XTMP("XPDT",7317,"SEC","^DIC",103,103,0,"WR")=""
^XTMP("XPDT",7317,"VER")="8.0^22.0"
^XTMP("XPDT",7317,"^DD",101.24,101.24,0)="FIELD^^.491^43"
^XTMP("XPDT",7317,"^DD",101.24,101.24,0,"DDA")="N"
^XTMP("XPDT",7317,"^DD",101.24,101.24,0,"DT")="3080416"
^XTMP("XPDT",7317,"^DD",101.24,101.24,0,"ID",.23)="W:$D(^(2)) ""   "",$P(^(2),U,3)"
^XTMP("XPDT",7317,"^DD",101.24,101.24,0,"ID",.24)="W:$D(^(2)) ""   "",$P(^(2),U,4)"
^XTMP("XPDT",7317,"^DD",101.24,101.24,0,"IX","AC",101.24,.02)=""
^XTMP("XPDT",7317,"^DD",101.24,101.24,0,"IX","B",101.24,.01)=""
^XTMP("XPDT",7317,"^DD",101.24,101.24,0,"NM","OE/RR REPORT")=""
^XTMP("XPDT",7317,"^DD",101.24,101.24,0,"PT",101.24,.18)=""
^XTMP("XPDT",7317,"^DD",101.24,101.24,0,"PT",101.241,.01)=""
^XTMP("XPDT",7317,"^DD",101.24,101.24,0,"VRPK")="OR"
^XTMP("XPDT",7317,"^DD",101.24,101.24,0,"VRRV")="1^3070507"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.001,0)="NUMBER^NJ5,0^^ ^K:+X'=X!(X>10000)!(X<1)!(X?.E1"".""1N.N) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.001,3)="Type a Number between 1 and 10000, 0 Decimal Digits"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.001,21,0)="^^1^1^3000921^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.001,21,1,0)="This is the Number field for the file."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.001,"DT")="3000920"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.01,0)="NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.01,1,0)="^.1^^-1"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.01,1,1,0)="101.24^B"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.01,1,1,1)="S ^ORD(101.24,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7317,"^DD",101.24,101.24,.01,1,1,2)="K ^ORD(101.24,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.01,3)="Answer must be 3-30 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.01,21,0)="^^1^1^3000921^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.01,21,1,0)="This is the Name of the report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.01,"DT")="3010510"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,0)="ID^RF^^0;2^K:$L(X)>10!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,1,0)="^.1"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,1,1,0)="101.24^AC"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,1,1,1)="S ^ORD(101.24,""AC"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,1,1,2)="K ^ORD(101.24,""AC"",$E(X,1,30),DA)"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,1,1,"DT")="3001005"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,3)="Answer must be 1-10 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,21,0)="^^4^4^3000921^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,21,1,0)="This is the code that identifies the report.  Each tab in CPRS that"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,21,2,0)="uses reports looks for this ID in order to process the report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,21,3,0)="Each tab also uses a unique set of ID's.  An ID of 5 on the Reports"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,21,4,0)="Tab may not identify the same report on a different tab."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.02,"DT")="3001005"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.03,0)="REMOTE^S^1:YES;2:REMOTE ONLY;^0;3^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.03,21,0)="^^2^2^3000921^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.03,21,1,0)="This field is used to identify which reports allow remote access through"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.03,21,2,0)="Remote Data Views."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.03,"DT")="3050512"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.04,0)="QUALIFIER^S^1:HSType;2:DateTime;3:Imaging;4:NutrAssess;19:MedicineProcedure;39:ListView;5:HSComponent;6:HSWPComponent;28:Surgery;^0;4^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.04,21,0)="^.001^2^2^3010531^^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.04,21,1,0)="This field identifies which qualifier to use when processing the report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.04,21,2,0)="Examples of qualifiers are HSType, DateTime, Imaging and NutrAssess."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.04,"DT")="3011004"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.05,0)="ROUTINE^FI^^0;5^K:$L(X)>8!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.05,3)="Answer must be 1-8 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.05,8.5)="@"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.05,9)="@"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.05,21,0)="^.001^1^1^3001026^^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.05,21,1,0)="This is the routine that is invoked to produce the report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.05,23,0)="^.001^2^2^3001026^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.05,23,1,0)="The Labs Tab does not have a value for this field.  The CPRS executable"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.05,23,2,0)="calls separate RPC's for each report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.05,"DT")="3040126"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.06,0)="ENTRY POINT^FI^^0;6^K:$L(X)>8!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.06,3)="Answer must be 1-8 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.06,8.5)="@"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.06,9)="@"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.06,21,0)="^.001^2^2^3001026^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.06,21,1,0)="This is the entry point for the ROUTINE that is invoked to produce the"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.06,21,2,0)="report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.06,23,0)="^.001^2^2^3001026^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.06,23,1,0)="The Labs Tab does not have a value for this field.  The CPRS executable"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.06,23,2,0)="calls separate RPC's for each report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.06,"DT")="3040126"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.07,0)="CATEGORY^S^0:FIXED;1:FIXED W/DATE;2:FIXED W/HEADER;3:FIXED W/DATE&HEADER;4:SPECIALIZED;5:GRAPHIC;6:LISTVIEW;^0;7^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.07,3)="Enter a category for this report"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.07,21,0)="^^2^2^3001004^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.07,21,1,0)="This field puts reports into a category that is evaluated by the GUI"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.07,21,2,0)="when the report is processed."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.07,"DT")="3010215"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.08,0)="TAB^S^R:REPORTS TAB;L:LABS TAB;C:COVER SHEET;CD:COVER SHEET DETAILS;^0;8^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.08,3)="Enter the appropriate code for this report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.08,21,0)="^.001^1^1^3001003^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.08,21,1,0)="This fields identifies the appropriate tab for a report in CPRS."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.08,"DT")="3001011"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.09,0)="MIXEDCASE^S^1:YES;^0;9^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.09,3)="Enter YES to display the list in mixed case"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.09,21,0)="^^2^2^3001004^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.09,21,1,0)="This is used in the cover sheet and is used to display the returned"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.09,21,2,0)="list in mixed case."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.09,"DT")="3001004"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.1,0)="INVERT^S^1:YES;^0;10^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.1,3)="Enter YES to have the returned list inverted."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.1,21,0)="^^1^1^3001004^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.1,21,1,0)="This field is used to invert a list of data returned in the Cover sheet"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.1,"DT")="3001004"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.11,0)="TEXT COLOR^S^Black:BLACK;Maroon:MAROON;Green:GREEN;Olive:OLIVE;Purple:PURPLE;Teal:TEAL;Red:RED;Lime:LIME;Yellow:YELLOW;Blue:BLUE;Fuchsia:FUCHSIA;Aqua:AQUA;^0;11^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.11,3)="Enter the color for the text"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.11,21,0)="^^1^1^3001004^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.11,21,1,0)="This field determines the text color for the returned data."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.11,"DT")="3001004"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.12,0)="TYPE^S^R:REPORT;H:HTML;L:LISTMAN ONLY;S:SELECTION LIST;V:LISTVIEW;M:MENU;G:GRAPH;^0;12^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.12,3)="Enter the type for this entry."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.12,21,0)="^.001^1^1^3001017^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.12,21,1,0)="This field identifies the type for an entry."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.12,"DT")="3041208"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.13,0)="RPC^P8994'^XWB(8994,^0;13^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.13,3)="Select the RPC that produces this report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.13,21,0)="^^1^1^3001004^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.13,21,1,0)="This is the RPC that is called inside the GUI to produce the report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.13,"DT")="3001004"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.14,0)="DATE FORMAT^S^D:DATE ONLY;T:DATE WITH TIME;^0;14^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.14,3)="Enter the code for the desired date format."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.14,21,0)="^^1^1^3001004^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.14,21,1,0)="This field determines what kind of format to display date/time fields."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.14,"DT")="3001004"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.15,0)="DATE PIECE^NJ2,0^^0;15^K:+X'=X!(X>15)!(X<1)!(X?.E1"".""1N.N) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.15,3)="Type a Number between 1 and 15, 0 Decimal Digits"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.15,21,0)="^^2^2^3001004^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.15,21,1,0)="This is used on the Cover Sheet to determine which piece the date field"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.15,21,2,0)="occupies."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.15,"DT")="3001004"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.16,0)="TAB POSITIONS^F^^0;16^K:$L(X)>15!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.16,3)="Answer must be 1-15 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.16,21,0)="^^2^2^3001005^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.16,21,1,0)="This is the value that will be used for the Tab property for the listbox"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.16,21,2,0)="associated with this report on the Cover Sheet."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.16,"DT")="3001005"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.17,0)="PIECES^F^^0;17^K:$L(X)>20!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.17,3)="Answer must be 1-20 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.17,21,0)="^^2^2^3001011^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.17,21,1,0)="This field is used by the Cover Sheet to determine what pieces of data"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.17,21,2,0)="to display in the listbox."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.17,"DT")="3001011"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.18,0)="DETAIL REPORT^*P101.24'^ORD(101.24,^0;18^S DIC(""S"")=""I $P(^(0),""""^"""",8)=""""CD"""""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.18,3)="Enter the report to get the details for this report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.18,12)="Allow only Cover sheet detail type reports"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.18,12.1)="S DIC(""S"")=""I $P(^(0),""""^"""",8)=""""CD"""""""
^XTMP("XPDT",7317,"^DD",101.24,101.24,.18,21,0)="^^1^1^3001011^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.18,21,1,0)="This field is used to get the details of an item on the cover sheet."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.18,"DT")="3001011"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.19,0)="REPORT TAG^FI^^0;19^K:$L(X)>8!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.19,3)="Answer must be 1-8 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.19,21,0)="^.001^1^1^3010503^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.19,21,1,0)="This is the entry point tag for a report extract."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.19,"DT")="3080507"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.191,0)="REPORT ROUTINE^FI^^0;20^K:$L(X)>8!($L(X)<3) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.191,3)="Answer must be 3-8 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.191,21,0)="^.001^1^1^3010503^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.191,21,1,0)="This is the routine associated with the REPORT TAG for report extracts."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.191,"DT")="3070507"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.192,0)="REPORT COMPONENT^P142.1'^GMT(142.1,^0;21^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.192,21,0)="^.001^1^1^3010503^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.192,21,1,0)="This is the report component associated with this report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.192,"DT")="3010503"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.21,0)="PARAM 1^F^^2;1^K:$L(X)>30!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.21,3)="Answer must be 1-30 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.21,21,0)="^^1^1^3001004^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.21,21,1,0)="This is the 1st parameter passed to the RPC, if needed."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.21,"DT")="3001004"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.22,0)="PARAM 2^F^^2;2^K:$L(X)>30!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.22,3)="Answer must be 1-30 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.22,21,0)="^^1^1^3001004^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.22,21,1,0)="This is the 2nd parameter passed to the RPC, if needed."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.22,"DT")="3001004"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.23,0)="HEADING^F^^2;3^K:$L(X)>75!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.23,1,0)="^.1^^0"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.23,3)="Answer must be 1-75 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.23,21,0)="^^1^1^3001031^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.23,21,1,0)="This is the heading used on the Cover sheet for the list of items."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.23,"DT")="3010510"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.24,0)="DESCRIPTIVE TEXT^RF^^2;4^K:$L(X)>55!($L(X)<2) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.24,3)="Answer must be 2-55 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.24,21,0)="^.001^2^2^3010510^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.24,21,1,0)="This is a more descriptive name than what might be included in the "
^XTMP("XPDT",7317,"^DD",101.24,101.24,.24,21,2,0)="NAME field."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.24,"DT")="3010510"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.25,0)="NODE^F^^2;5^K:$L(X)>10!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.25,3)="Answer must be 1-10 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.25,21,0)="^^2^2^3001005^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.25,21,1,0)="This is used by the Cover Sheet routines to define the node in the ^XTMP"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.25,21,2,0)="global to store the data."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.25,"DT")="3001005"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.26,0)="PRINT TAG^FI^^2;6^K:$L(X)>8!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.26,3)="Answer must be 1-8 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.26,21,0)="^^2^2^3010614^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.26,21,1,0)="This is the entry point tag used when printing reports that do their own"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.26,21,2,0)="Write statements."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.26,"DT")="3070507"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.27,0)="PRINT ROUTINE^FI^^2;7^K:$L(X)>8!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.27,3)="Answer must be 1-8 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.27,21,0)="^^2^2^3010614^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.27,21,1,0)="This is the entry point routine used when printing reports that do their own"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.27,21,2,0)="Write statements."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.27,"DT")="3070507"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.28,0)="EXTRACT TAG^FI^^2;8^K:$L(X)>8!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.28,3)="Answer must be 1-8 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.28,21,0)="^^2^2^3010711^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.28,21,1,0)="This is the entry point for the extract routine that pulls the data from"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.28,21,2,0)="package API's and/or package files."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.28,"DT")="3080318"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.29,0)="EXTRACT ROUTINE^FI^^2;9^K:$L(X)>8!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.29,3)="Answer must be 1-8 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.29,21,0)="^^2^2^3010711^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.29,21,1,0)="This is the extract routine that pulls data from package API's and/or"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.29,21,2,0)="package files."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.29,"DT")="3070507"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.41,0)="SORT ORDER^F^^4;1^K:$L(X)>15!($L(X)<3)!'(X?1N1"":""1N) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.41,3)="Answer must be 3-15 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.41,21,0)="^^6^6^3010717^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.41,21,1,0)="This field is used when sorting columns of data on at grid within CPRS."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.41,21,2,0)="It determines the sort order to be used in a multi-column sort.  The"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.41,21,3,0)="primary sort column is always the column header clicked on by the user."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.41,21,4,0)="If this field has values in the form #:#, then a multi-column sort is"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.41,21,5,0)="done, using the column numbers identified in this field for the second"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.41,21,6,0)="and third level sorting."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.41,"DT")="3010717"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.42,0)="MAXIMUM DAYS BACK^NJ4,0^^4;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"".""1N.N) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.42,3)="Type a Number between 1 and 9999, 0 Decimal Digits"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.42,21,0)="^^1^1^3011004^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.42,21,1,0)="This field restricts the report date range to the maximum value specified."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.42,"DT")="3011004"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.43,0)="FHIE REPORT^F^^4;3^K:$L(X)>10!($L(X)<2) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.43,3)="Answer must be 2-10 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.43,21,0)="^.001^3^3^3040126^^^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.43,21,1,0)="This field identifies reports that are available through FHIE."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.43,21,2,0)="The item in this field is the code for the report available through"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.43,21,3,0)="the FHIE server."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.43,23,0)="^.001^3^3^3040126^^^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.43,23,1,0)="This field is not looked at by reports that have a 'listview' format."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.43,23,2,0)="It is only used by straight text reports that go through the routine:"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.43,23,3,0)="  ORDV01"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.43,"DT")="3031008"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.44,0)="DIRECT^S^0:NO;1:YES;^4;4^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.44,3)="ENTER YES TO MAKE DIRECT REMOTE DATA CALLS"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.44,21,0)="^^4^4^3050201^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.44,21,1,0)="This field allows a report to make a direct remote data call to"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.44,21,2,0)="a remote site.  Use caution in setting this field to yes.  It has"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.44,21,3,0)="the effect of disabling CPRS until the remote call is finished, but"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.44,21,4,0)="also may speed up the query by bypassing taskman latency."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.44,"DT")="3050201"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.45,0)="HDR REPORT^S^1:YES;^4;5^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.45,3)="Enter 'YES' if this report comes from the HDR."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.45,21,0)="^^1^1^3051006^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.45,21,1,0)="This field flags reports that are generated from the HDR."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.45,"DT")="3051006"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.46,0)="HDR ROUTINE^FI^^4;6^K:$L(X)>8!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.46,3)="Answer must be 1-8 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.46,21,0)="^^1^1^3051006^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.46,21,1,0)="This is the HDR routine that modifies HDR data for CPRS."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.46,"DT")="3080318"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.47,0)="HDR ENTRY POINT^FI^^4;7^K:$L(X)>8!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.47,3)="Answer must be 1-8 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.47,21,0)="^^1^1^3051006^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.47,21,1,0)="This is the HDR entry point that modifies HDR data for CPRS."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.47,"DT")="3080318"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.48,0)="FHIE DATA^S^1:YES;^4;8^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.48,3)="Enter YES if this report gets data from DOD/FHIE"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.48,21,0)="^.001^3^3^3070208^^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.48,21,1,0)="This field is used to tell CPRS that DOD/FHIE data can be accessed"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.48,21,2,0)="for this report.  Special code has to be written by CPRS and DOD"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.48,21,3,0)="for this to happen."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.48,"DT")="3070208"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.49,0)="FHIE ONLY^S^1:YES;^4;9^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.49,3)="Enter YES if only DOD data should be shown for this report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.49,21,0)="^^2^2^3080415^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.49,21,1,0)="This field determines if a report can show local VA data and Remote DOD"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.49,21,2,0)="data. Enter YES if only DOD data should be shown for this report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.49,"DT")="3080415"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.491,0)="DISABLE^S^1:YES;^4;10^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.491,3)="Enter YES to disable this report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.491,21,0)="^^1^1^3080416^"
^XTMP("XPDT",7317,"^DD",101.24,101.24,.491,21,1,0)="This field will disable a report."
^XTMP("XPDT",7317,"^DD",101.24,101.24,.491,"DT")="3080416"
^XTMP("XPDT",7317,"^DD",101.24,101.24,3,0)="COLUMN HEADERS^101.243^^3;0"
^XTMP("XPDT",7317,"^DD",101.24,101.24,10,0)="ITEM^101.241P^^10;0"
^XTMP("XPDT",7317,"^DD",101.24,101.241,0)="ITEM SUB-FIELD^^.03^3"
^XTMP("XPDT",7317,"^DD",101.24,101.241,0,"DT")="3010215"
^XTMP("XPDT",7317,"^DD",101.24,101.241,0,"IX","B",101.241,.01)=""
^XTMP("XPDT",7317,"^DD",101.24,101.241,0,"NM","ITEM")=""
^XTMP("XPDT",7317,"^DD",101.24,101.241,0,"UP")="101.24"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.01,0)="ITEM^MP101.24^ORD(101.24,^0;1^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.01,1,0)="^.1"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.01,1,1,0)="101.241^B"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.01,1,1,1)="S ^ORD(101.24,DA(1),10,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7317,"^DD",101.24,101.241,.01,1,1,2)="K ^ORD(101.24,DA(1),10,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.01,3)=""
^XTMP("XPDT",7317,"^DD",101.24,101.241,.01,21,0)="^^1^1^3010215^"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.01,21,1,0)="This is used in building a treeview of reports for CPRS GUI."
^XTMP("XPDT",7317,"^DD",101.24,101.241,.01,"DT")="3010215"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.02,0)="HEADER TEXT^F^^0;2^K:$L(X)>30!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.02,3)="Answer must be 1-30 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.241,.02,21,0)="^^1^1^3010215^"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.02,21,1,0)="This is the header to be used."
^XTMP("XPDT",7317,"^DD",101.24,101.241,.02,"DT")="3010215"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.03,0)="SEQUENCE^NJ7,1^^0;3^K:+X'=X!(X>99999)!(X<.1)!(X?.E1"".""2N.N) X"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.03,3)="Type a Number between .1 and 99999, 1 Decimal Digit"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.03,21,0)="^^1^1^3010215^"
^XTMP("XPDT",7317,"^DD",101.24,101.241,.03,21,1,0)="This is the sequence number for this report."
^XTMP("XPDT",7317,"^DD",101.24,101.241,.03,"DT")="3010215"
^XTMP("XPDT",7317,"^DD",101.24,101.243,0)="COLUMN HEADERS SUB-FIELD^^1^11"
^XTMP("XPDT",7317,"^DD",101.24,101.243,0,"DT")="3051006"
^XTMP("XPDT",7317,"^DD",101.24,101.243,0,"IX","B",101.243,.01)=""
^XTMP("XPDT",7317,"^DD",101.24,101.243,0,"IX","C",101.243,.03)=""
^XTMP("XPDT",7317,"^DD",101.24,101.243,0,"NM","COLUMN HEADERS")=""
^XTMP("XPDT",7317,"^DD",101.24,101.243,0,"UP")="101.24"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.01,0)="COLUMN HEADERS^MF^^0;1^K:$L(X)>60!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.01,1,0)="^.1"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.01,1,1,0)="101.243^B"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.01,1,1,1)="S ^ORD(101.24,DA(1),3,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7317,"^DD",101.24,101.243,.01,1,1,2)="K ^ORD(101.24,DA(1),3,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.01,3)="Answer must be 1-60 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.01,21,0)="^.001^1^1^3010709^^^^"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.01,21,1,0)="These are the column headings used on a report in ListView format."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.01,"DT")="3010709"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.02,0)="VISIBLE^S^0:YES;1:NO;^0;2^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.02,3)="Set this field to NO to hide the column."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.02,21,0)="^^1^1^3010420^"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.02,21,1,0)="This field determines the visible property of the column."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.02,"DT")="3010420"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.03,0)="SEQUENCE^NJ6,1^^0;3^K:+X'=X!(X>9999)!(X<.1)!(X?.E1"".""2N.N) X"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.03,1,0)="^.1"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.03,1,1,0)="101.243^C"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.03,1,1,1)="S ^ORD(101.24,DA(1),3,""C"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7317,"^DD",101.24,101.243,.03,1,1,2)="K ^ORD(101.24,DA(1),3,""C"",$E(X,1,30),DA)"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.03,1,1,"DT")="3010321"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.03,3)="Type a Number between .1 and 9999, 1 Decimal Digit"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.03,21,0)="^^1^1^3010215^"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.03,21,1,0)="This is the sequence for the column header."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.03,"DT")="3010321"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.04,0)="TYPE^S^0:SINGLE PIECE VALUE;1:WORD PROCESSING;^0;4^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.04,3)="Enter '1' if the value of this column contains multiple lines of text."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.04,21,0)="^^1^1^3010420^"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.04,21,1,0)="This field identifies columns that contain multiple lines of text."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.04,"DT")="3010420"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.05,0)="INCLUDE ON DETAIL^S^0:NO;1:YES;^0;5^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.05,3)="Enter YES to include this field in detailed report"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.05,21,0)="^.001^2^2^3010628^^^^"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.05,21,1,0)="This field is used to determine what data to include in the details of"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.05,21,2,0)="a report."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.05,"DT")="3010628"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.06,0)="PRINT LENGTH^NJ2,0^^0;6^K:+X'=X!(X>20)!(X<1)!(X?.E1"".""1N.N) X"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.06,3)="Type a Number between 1 and 20, 0 Decimal Digits"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.06,21,0)="^^1^1^3010628^"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.06,21,1,0)="This is the field length used when printing this column on a report."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.06,"DT")="3010628"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.07,0)="INCLUDE ON PRINT^S^0:NO;1:YES;^0;7^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.07,21,0)="^^2^2^3010628^"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.07,21,1,0)="This field determines which columns are included when a printout is"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.07,21,2,0)="requested."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.07,"DT")="3010628"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.08,0)="PRINT TITLE^F^^0;8^K:$L(X)>20!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.08,3)="Answer must be 1-20 characters in length."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.08,21,0)="^^1^1^3010628^"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.08,21,1,0)="This field is used when printing this field in lieu of the Column Header."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.08,"DT")="3010628"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.09,0)="DATA TYPE^S^0:FREE TEXT;1:NUMERIC;2:DATE/TIME;^0;9^Q"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.09,3)="Enter the type of data that is in this column."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.09,21,0)="^.001^3^3^3010718^^"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.09,21,1,0)="This is the data type of the column.  It is used when sorting columns."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.09,21,2,0)="The default data type is 0 - FREE TEXT.  If no value is entered, it is"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.09,21,3,0)="assumed to be FREE TEXT."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.09,"DT")="3010718"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.1,0)="WIDTH^NJ4,0^^0;10^K:+X'=X!(X>4000)!(X<-2)!(X?.E1"".""1N.N) X"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.1,3)="Type a Number between -2 and 4000, 0 Decimal Digits"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.1,21,0)="^^5^5^3010727^"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.1,21,1,0)="This field is for the column width.  No value needs to be entered because"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.1,21,2,0)="the value is actually obtained from a User level parameter.  The field"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.1,21,3,0)="is defined here to reserve the 10 piece of this node so that future"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.1,21,4,0)="field definitions won't break the RPC used in CPRS to get column properties"
^XTMP("XPDT",7317,"^DD",101.24,101.243,.1,21,5,0)="where the width is stored in the 10 piece."
^XTMP("XPDT",7317,"^DD",101.24,101.243,.1,"DT")="3010727"
^XTMP("XPDT",7317,"^DD",101.24,101.243,1,0)="HDR MODIFIER^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM"
^XTMP("XPDT",7317,"^DD",101.24,101.243,1,3)="This is Standard MUMPS code."
^XTMP("XPDT",7317,"^DD",101.24,101.243,1,9)="@"
^XTMP("XPDT",7317,"^DD",101.24,101.243,1,21,0)="^^5^5^3051006^"
^XTMP("XPDT",7317,"^DD",101.24,101.243,1,21,1,0)="This is code executed when HDR data needs to be modified."
^XTMP("XPDT",7317,"^DD",101.24,101.243,1,21,2,0)="When this field is executed, the variable ORX will have the value"
^XTMP("XPDT",7317,"^DD",101.24,101.243,1,21,3,0)="passed in from the HDR.  If this value needs to be manipulated, set the"
^XTMP("XPDT",7317,"^DD",101.24,101.243,1,21,4,0)="new value into ORX.  If the value is ignored (not to be displayed),"
^XTMP("XPDT",7317,"^DD",101.24,101.243,1,21,5,0)="then set the value of ORX=""-1-"""
^XTMP("XPDT",7317,"^DD",101.24,101.243,1,"DT")="3051006"
^XTMP("XPDT",7317,"^DD",103,103,0)="FIELD^^91^31"
^XTMP("XPDT",7317,"^DD",103,103,0,"DDA")="N"
^XTMP("XPDT",7317,"^DD",103,103,0,"DT")="3091002"
^XTMP("XPDT",7317,"^DD",103,103,0,"IX","B",103,.01)=""
^XTMP("XPDT",7317,"^DD",103,103,0,"IX","CL",103,101)=""
^XTMP("XPDT",7317,"^DD",103,103,0,"IX","L",103,3)=""
^XTMP("XPDT",7317,"^DD",103,103,0,"NM","ORAM FLOWSHEET")=""
^XTMP("XPDT",7317,"^DD",103,103,.01,0)="PATIENT^P2X^DPT(^0;1^S DINUM=X"
^XTMP("XPDT",7317,"^DD",103,103,.01,.1)="PATIENT NAME"
^XTMP("XPDT",7317,"^DD",103,103,.01,1,0)="^.1"
^XTMP("XPDT",7317,"^DD",103,103,.01,1,1,0)="103^B"
^XTMP("XPDT",7317,"^DD",103,103,.01,1,1,1)="S ^ORAM(103,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7317,"^DD",103,103,.01,1,1,2)="K ^ORAM(103,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7317,"^DD",103,103,.01,3)=""
^XTMP("XPDT",7317,"^DD",103,103,.01,21,0)="^^1^1^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,.01,21,1,0)="Patient DFN from file 2"
^XTMP("XPDT",7317,"^DD",103,103,.01,"DT")="3030522"
^XTMP("XPDT",7317,"^DD",103,103,1,0)="GOAL INR^F^^0;2^K:$L(X)>10!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103,1,3)="Answer must be 1-10 characters in length."
^XTMP("XPDT",7317,"^DD",103,103,1,21,0)="^^2^2^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,1,21,1,0)="Stores the INR GOAL RANGE set by the user in the ANTICOAGULATOR.  "
^XTMP("XPDT",7317,"^DD",103,103,1,21,2,0)="Contains a free text range, like: 2.0-3.0"
^XTMP("XPDT",7317,"^DD",103,103,1,"DT")="3030520"
^XTMP("XPDT",7317,"^DD",103,103,2,0)="INDICATION^F^^0;3^K:$L(X)>50!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103,2,3)="Answer must be 1-50 characters in length."
^XTMP("XPDT",7317,"^DD",103,103,2,21,0)="^^3^3^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,2,21,1,0)="Stores indication set in the Anticoagulator and ICD9 code for the "
^XTMP("XPDT",7317,"^DD",103,103,2,21,2,0)="indication."
^XTMP("XPDT",7317,"^DD",103,103,2,21,3,0)="Example: A Flutter=427.32"
^XTMP("XPDT",7317,"^DD",103,103,2,"DT")="3040728"
^XTMP("XPDT",7317,"^DD",103,103,3,0)="NEXT LAB^D^^0;4^S %DT=""ETX"" D ^%DT S X=Y K:X<1 X"
^XTMP("XPDT",7317,"^DD",103,103,3,1,0)="^.1^^-1"
^XTMP("XPDT",7317,"^DD",103,103,3,1,1,0)="103^L"
^XTMP("XPDT",7317,"^DD",103,103,3,1,1,1)="S ^ORAM(103,""L"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7317,"^DD",103,103,3,1,1,2)="K ^ORAM(103,""L"",$E(X,1,30),DA)"
^XTMP("XPDT",7317,"^DD",103,103,3,1,1,3)="** DO NOT DELETE **"
^XTMP("XPDT",7317,"^DD",103,103,3,1,1,"%D",0)="^^2^2^3081219^"
^XTMP("XPDT",7317,"^DD",103,103,3,1,1,"%D",1,0)="This REGULAR FileMan cross-reference on NEXT LAB will optimize both "
^XTMP("XPDT",7317,"^DD",103,103,3,1,1,"%D",2,0)="look-up and sorting by next lab date..."
^XTMP("XPDT",7317,"^DD",103,103,3,1,1,"DT")="3081219"
^XTMP("XPDT",7317,"^DD",103,103,3,3)="(No range limit on date)"
^XTMP("XPDT",7317,"^DD",103,103,3,21,0)="^^1^1^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,3,21,1,0)="Fileman date of the next scheduled INR draw."
^XTMP("XPDT",7317,"^DD",103,103,3,"DT")="3090513"
^XTMP("XPDT",7317,"^DD",103,103,4,0)="START DATE^F^^0;5^K:$L(X)>15!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103,4,3)="Answer must be 1-15 characters in length."
^XTMP("XPDT",7317,"^DD",103,103,4,21,0)="^^4^4^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,4,21,1,0)="Date patient was started in Anticoagulation clinic; in free text format "
^XTMP("XPDT",7317,"^DD",103,103,4,21,2,0)="(request from the field); contains whatever the operator entered."
^XTMP("XPDT",7317,"^DD",103,103,4,21,3,0)="example: 09/26/08"
^XTMP("XPDT",7317,"^DD",103,103,4,21,4,0)="example: unknown"
^XTMP("XPDT",7317,"^DD",103,103,4,"DT")="3040308"
^XTMP("XPDT",7317,"^DD",103,103,5,0)="STOP DATE^F^^0;6^K:$L(X)>15!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103,5,3)="Answer must be 1-15 characters in length."
^XTMP("XPDT",7317,"^DD",103,103,5,21,0)="^^5^5^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,5,21,1,0)="Date patient was stopped OR expected to be stopped from needing followup"
^XTMP("XPDT",7317,"^DD",103,103,5,21,2,0)="in Anticoagulation clinic; in free text format"
^XTMP("XPDT",7317,"^DD",103,103,5,21,3,0)="(request from the field); contains whatever the operator entered."
^XTMP("XPDT",7317,"^DD",103,103,5,21,4,0)="example: 09/26/08"
^XTMP("XPDT",7317,"^DD",103,103,5,21,5,0)="example: indefinite"
^XTMP("XPDT",7317,"^DD",103,103,5,"DT")="3030814"
^XTMP("XPDT",7317,"^DD",103,103,6,0)="DURATION^F^^0;7^K:$L(X)>40!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103,6,3)="Answer must be 1-40 characters in length."
^XTMP("XPDT",7317,"^DD",103,103,6,21,0)="^^3^3^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,6,21,1,0)="Expected length of time patient will be followed in Anticoagulation "
^XTMP("XPDT",7317,"^DD",103,103,6,21,2,0)="clinic."
^XTMP("XPDT",7317,"^DD",103,103,6,21,3,0)="Example: 6 months"
^XTMP("XPDT",7317,"^DD",103,103,6,"DT")="3040728"
^XTMP("XPDT",7317,"^DD",103,103,7,0)="SPECIAL INSTRUCTIONS^103.07^^1;0"
^XTMP("XPDT",7317,"^DD",103,103,7,21,0)="^^4^4^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,7,21,1,0)="Word processing set of special instrections inputted into the"
^XTMP("XPDT",7317,"^DD",103,103,7,21,2,0)="Anticoagulator."
^XTMP("XPDT",7317,"^DD",103,103,7,21,3,0)="Visible in the Anticoagulator and in the Header of the flow sheet on the "
^XTMP("XPDT",7317,"^DD",103,103,7,21,4,0)="REPORTS tab."
^XTMP("XPDT",7317,"^DD",103,103,8,0)="RISK FACTORS^103.08^^2;0"
^XTMP("XPDT",7317,"^DD",103,103,8,21,0)="^^3^3^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,8,21,1,0)="Word processing set of risk factors inputted into the Anticoagulator.  "
^XTMP("XPDT",7317,"^DD",103,103,8,21,2,0)="Visible in the Anticoagulator and in the Header of the flow sheet on the "
^XTMP("XPDT",7317,"^DD",103,103,8,21,3,0)="REPORTS tab."
^XTMP("XPDT",7317,"^DD",103,103,9,0)="SIGNED AGREEMENT^S^Y:yes;N:no;^0;8^Q"
^XTMP("XPDT",7317,"^DD",103,103,9,3)="Does the patient has a signed agreement for treatment?"
^XTMP("XPDT",7317,"^DD",103,103,9,21,0)="^.001^2^2^3090513^^^"
^XTMP("XPDT",7317,"^DD",103,103,9,21,1,0)="Stores if patient has a signed agreement"
^XTMP("XPDT",7317,"^DD",103,103,9,21,2,0)="Y=yes; N or """"=No."
^XTMP("XPDT",7317,"^DD",103,103,9,"DT")="3090513"
^XTMP("XPDT",7317,"^DD",103,103,10,0)="ORIENTATION^F^^0;9^K:$L(X)>8!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103,10,3)="Answer must be 1-8 characters in length."
^XTMP("XPDT",7317,"^DD",103,103,10,21,0)="^.001^1^1^3090513^^"
^XTMP("XPDT",7317,"^DD",103,103,10,21,1,0)="Free text entry for date of orientation classs."
^XTMP("XPDT",7317,"^DD",103,103,10,"DT")="3090513"
^XTMP("XPDT",7317,"^DD",103,103,11,0)="FS DATE^103.011DA^^3;0"
^XTMP("XPDT",7317,"^DD",103,103,15,0)="COMPLEXITY^S^0:STANDARD PT;1:COMPLEX PT;2:INACTIVE PT;^0;10^Q"
^XTMP("XPDT",7317,"^DD",103,103,15,21,0)="^^1^1^3030815^"
^XTMP("XPDT",7317,"^DD",103,103,15,21,1,0)="INDICATES IF PATIENT IS CURRENTLY COMPLEX, STANDARD OR INACTIVE"
^XTMP("XPDT",7317,"^DD",103,103,15,"DT")="3030815"
^XTMP("XPDT",7317,"^DD",103,103,25,0)="MSG-PHONE^S^0:NOT ASKED;1:NO MSGS;2:OK MSG;^0;11^Q"
^XTMP("XPDT",7317,"^DD",103,103,25,21,0)="^^2^2^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,25,21,1,0)="PT PRIVACY ISSUE; indicates if pt approved leaving of msg on phone "
^XTMP("XPDT",7317,"^DD",103,103,25,21,2,0)="answering machine."
^XTMP("XPDT",7317,"^DD",103,103,25,"DT")="3030612"
^XTMP("XPDT",7317,"^DD",103,103,35,0)="MSG WITH^103.035^^4;0"
^XTMP("XPDT",7317,"^DD",103,103,35,21,0)="^^3^3^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,35,21,1,0)="If patient allows leaving of anticoagulation messages with others at "
^XTMP("XPDT",7317,"^DD",103,103,35,21,2,0)="his/her phone number, this indicates WHO is allowed to receive the "
^XTMP("XPDT",7317,"^DD",103,103,35,21,3,0)="messages."
^XTMP("XPDT",7317,"^DD",103,103,45,0)="AM MEDS^S^0:PM MEDS;1:AM MEDS;2:UNKNOWN;^0;12^Q"
^XTMP("XPDT",7317,"^DD",103,103,45,"DT")="3030612"
^XTMP("XPDT",7317,"^DD",103,103,55,0)="SAVE STATUS^F^^0;13^K:$L(X)>8!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103,55,3)="Answer must be 1-8 characters in length."
^XTMP("XPDT",7317,"^DD",103,103,55,21,0)="^.001^1^1^3090513^^"
^XTMP("XPDT",7317,"^DD",103,103,55,21,1,0)="Indicates if this entry is complete (""SAVE"") or incomplete (""TEMPSAVE"")."
^XTMP("XPDT",7317,"^DD",103,103,55,"DT")="3090513"
^XTMP("XPDT",7317,"^DD",103,103,60,0)="FEE BASIS^S^0:NO;1:PRIMARY;2:SECONDARY;^0;14^Q"
^XTMP("XPDT",7317,"^DD",103,103,60,21,0)="^^4^4^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,60,21,1,0)=" "
^XTMP("XPDT",7317,"^DD",103,103,60,21,2,0)="****Not in use for export version; here for legacy systems*****"
^XTMP("XPDT",7317,"^DD",103,103,60,21,3,0)=" "
^XTMP("XPDT",7317,"^DD",103,103,60,21,4,0)="RECORDS IF FEE BASIS IS AUTHORIZED AND IF PRIMARY OR SECONDARY STATUS"
^XTMP("XPDT",7317,"^DD",103,103,60,"DT")="3030821"
^XTMP("XPDT",7317,"^DD",103,103,65,0)="FEE BASIS EXPIRATION^D^^0;15^S %DT=""E"" D ^%DT S X=Y K:Y<1 X"
^XTMP("XPDT",7317,"^DD",103,103,65,21,0)="^^3^3^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,65,21,1,0)="****Not in use for export version; here for legacy systems*****"
^XTMP("XPDT",7317,"^DD",103,103,65,21,2,0)=" "
^XTMP("XPDT",7317,"^DD",103,103,65,21,3,0)="DATE WHICH FEE BASIS QUALIFICATION EXPIRES AND NEEDS TO BE REASSESSED."
^XTMP("XPDT",7317,"^DD",103,103,65,"DT")="3030821"
^XTMP("XPDT",7317,"^DD",103,103,70,0)="FEE BASIS EVALUATED BY^F^^0;16^K:$L(X)>30!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103,70,3)="Answer must be 1-30 characters in length."
^XTMP("XPDT",7317,"^DD",103,103,70,21,0)="^^3^3^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,70,21,1,0)="****Not in use for export version; here for legacy systems*****"
^XTMP("XPDT",7317,"^DD",103,103,70,21,2,0)=" "
^XTMP("XPDT",7317,"^DD",103,103,70,21,3,0)="PERSON WHO EVALUATED PATIENT FOR FEE BASIS"
^XTMP("XPDT",7317,"^DD",103,103,70,"DT")="3030821"
^XTMP("XPDT",7317,"^DD",103,103,75,0)="OUTSIDE LAB^D^^0;17^S %DT=""E"" D ^%DT S X=Y K:Y<1 X"
^XTMP("XPDT",7317,"^DD",103,103,75,21,0)="^^3^3^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,75,21,1,0)="*****Note in use for exported version*******************"
^XTMP("XPDT",7317,"^DD",103,103,75,21,2,0)=" "
^XTMP("XPDT",7317,"^DD",103,103,75,21,3,0)="expiration date for outside lab agreement."
^XTMP("XPDT",7317,"^DD",103,103,75,"DT")="3080929"
^XTMP("XPDT",7317,"^DD",103,103,80,0)="Reminder Date^D^^0;18^S %DT=""E"" D ^%DT S X=Y K:Y<1 X"
^XTMP("XPDT",7317,"^DD",103,103,80,21,0)="^^3^3^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,80,21,1,0)="If reminder is set; this is the first date it will begin to appear when "
^XTMP("XPDT",7317,"^DD",103,103,80,21,2,0)="the Anticoagulator is accessed.  It is only viewable in the "
^XTMP("XPDT",7317,"^DD",103,103,80,21,3,0)="Anticoagulator."
^XTMP("XPDT",7317,"^DD",103,103,80,"DT")="3040728"
^XTMP("XPDT",7317,"^DD",103,103,85,0)="REMINDER^103.085^^5;0"
^XTMP("XPDT",7317,"^DD",103,103,85,21,0)="^^4^4^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,85,21,1,0)="Free text item to remind person who is accessing the Anticoagulator on a "
^XTMP("XPDT",7317,"^DD",103,103,85,21,2,0)="specific patient that something needs to be done.  Will only appear at or "
^XTMP("XPDT",7317,"^DD",103,103,85,21,3,0)="after the reminder date (field 80)."
^XTMP("XPDT",7317,"^DD",103,103,85,21,4,0)="example: ""CBC due"""
^XTMP("XPDT",7317,"^DD",103,103,90,0)="LOCK^S^0:OPEN;1:LOCKED;^0;19^Q"
^XTMP("XPDT",7317,"^DD",103,103,90,21,0)="^^1^1^3040823^"
^XTMP("XPDT",7317,"^DD",103,103,90,21,1,0)="IF 1; CHART IS IN USE BY SOMEONE ELSE."
^XTMP("XPDT",7317,"^DD",103,103,90,"DT")="3040823"
^XTMP("XPDT",7317,"^DD",103,103,91,0)="NEXT DAY CALLBACK^S^0:NO;1:YES;^0;20^Q"
^XTMP("XPDT",7317,"^DD",103,103,91,21,0)="^^2^2^3091002^"
^XTMP("XPDT",7317,"^DD",103,103,91,21,1,0)="This Boolean field indicates whether the Clinician should wait until the "
^XTMP("XPDT",7317,"^DD",103,103,91,21,2,0)="day after the next INR Draw to call the patient."
^XTMP("XPDT",7317,"^DD",103,103,91,"DT")="3091002"
^XTMP("XPDT",7317,"^DD",103,103,95,0)="RESTRICT LAB DRAWS^F^^6;1^K:$L(X)>5!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103,95,3)="Answer must be 1-5 characters in length."
^XTMP("XPDT",7317,"^DD",103,103,95,21,0)="^^2^2^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,95,21,1,0)="Indicates days the patient does not want lab drawn. Represented by a "
^XTMP("XPDT",7317,"^DD",103,103,95,21,2,0)="string, example: 135 means Mon,Wed,Friday"
^XTMP("XPDT",7317,"^DD",103,103,95,"DT")="3060427"
^XTMP("XPDT",7317,"^DD",103,103,101,0)="CLINIC^*P44'^SC(^6;2^S DIC(""S"")=""I $$GOODLOC^ORAMSET(Y)"" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X"
^XTMP("XPDT",7317,"^DD",103,103,101,1,0)="^.1"
^XTMP("XPDT",7317,"^DD",103,103,101,1,1,0)="103^CL"
^XTMP("XPDT",7317,"^DD",103,103,101,1,1,1)="S ^ORAM(103,""CL"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7317,"^DD",103,103,101,1,1,2)="K ^ORAM(103,""CL"",$E(X,1,30),DA)"
^XTMP("XPDT",7317,"^DD",103,103,101,1,1,3)="** DO NOT DELETE! **"
^XTMP("XPDT",7317,"^DD",103,103,101,1,1,"%D",0)="^.101^2^2^3090710^^^"
^XTMP("XPDT",7317,"^DD",103,103,101,1,1,"%D",1,0)="This REGULAR whole-file cross-reference by Clinic location allows look-up "
^XTMP("XPDT",7317,"^DD",103,103,101,1,1,"%D",2,0)="and sorting of patients who are being followed by any particular clinic."
^XTMP("XPDT",7317,"^DD",103,103,101,1,1,"DT")="3090323"
^XTMP("XPDT",7317,"^DD",103,103,101,3)="Enter the Clinic which is following the patient."
^XTMP("XPDT",7317,"^DD",103,103,101,12)="Only active clinics may be selected."
^XTMP("XPDT",7317,"^DD",103,103,101,12.1)="S DIC(""S"")=""I $$GOODLOC^ORAMSET(Y)"""
^XTMP("XPDT",7317,"^DD",103,103,101,21,0)="^^7^7^3090306^"
^XTMP("XPDT",7317,"^DD",103,103,101,21,1,0)="Clinic which is currently following the patient."
^XTMP("XPDT",7317,"^DD",103,103,101,21,2,0)=" "
^XTMP("XPDT",7317,"^DD",103,103,101,21,3,0)="Clinic determines many of the parameters which will determine the "
^XTMP("XPDT",7317,"^DD",103,103,101,21,4,0)="behavior of the Anticoagulation Management Application (e.g., Team "
^XTMP("XPDT",7317,"^DD",103,103,101,21,5,0)="List membership, Letterhead values, Visit locations for PCE, etc.)."
^XTMP("XPDT",7317,"^DD",103,103,101,21,6,0)="If clinic is missing, it will be assigned when the user files the first "
^XTMP("XPDT",7317,"^DD",103,103,101,21,7,0)="flowsheet entry."
^XTMP("XPDT",7317,"^DD",103,103,101,"DT")="3090323"
^XTMP("XPDT",7317,"^DD",103,103,102,0)="CMPLX^P100.21'^OR(100.21,^6;3^Q"
^XTMP("XPDT",7317,"^DD",103,103,102,21,0)="^^1^1^3080920^"
^XTMP("XPDT",7317,"^DD",103,103,102,21,1,0)="THIS FIELD IS NOT IN USE AT THIS TIME."
^XTMP("XPDT",7317,"^DD",103,103,102,"DT")="3080920"
^XTMP("XPDT",7317,"^DD",103,103,110,0)="OUTSIDE HCT^F^^6;4^K:$L(X)>20!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103,110,3)="Answer must be 1-20 characters in length."
^XTMP("XPDT",7317,"^DD",103,103,110,21,0)="^^5^5^3080929^"
^XTMP("XPDT",7317,"^DD",103,103,110,21,1,0)="Outside HCT lab value, entered by the pharmacist through the GUI, is "
^XTMP("XPDT",7317,"^DD",103,103,110,21,2,0)="stored here in the following format:"
^XTMP("XPDT",7317,"^DD",103,103,110,21,3,0)="value | DATE "
^XTMP("XPDT",7317,"^DD",103,103,110,21,4,0)="date is not in fileman format"
^XTMP("XPDT",7317,"^DD",103,103,110,21,5,0)="example: 21.6|9/19/2008"
^XTMP("XPDT",7317,"^DD",103,103,110,"DT")="3080920"
^XTMP("XPDT",7317,"^DD",103,103,111,0)="ELIGIBLE FOR LMWH BRIDGING^S^1:YES;0:NO;^6;5^Q"
^XTMP("XPDT",7317,"^DD",103,103,111,3)="Indicate whether patient is eligible for LMWH Bridging."
^XTMP("XPDT",7317,"^DD",103,103,111,21,0)="^^2^2^3090501^"
^XTMP("XPDT",7317,"^DD",103,103,111,21,1,0)="Please indicate whether the patient is eligible for perioperative Low"
^XTMP("XPDT",7317,"^DD",103,103,111,21,2,0)="Molecular Weight Heparin bridging."
^XTMP("XPDT",7317,"^DD",103,103,111,"DT")="3090501"
^XTMP("XPDT",7317,"^DD",103,103,112,0)="BRIDGING COMMENTS^103.0112^^7;0"
^XTMP("XPDT",7317,"^DD",103,103.011,0)="FS DATE SUB-FIELD^^110^16"
^XTMP("XPDT",7317,"^DD",103,103.011,0,"DT")="3090506"
^XTMP("XPDT",7317,"^DD",103,103.011,0,"IX","B",103.011,.01)=""
^XTMP("XPDT",7317,"^DD",103,103.011,0,"NM","FS DATE")=""
^XTMP("XPDT",7317,"^DD",103,103.011,0,"UP")="103"
^XTMP("XPDT",7317,"^DD",103,103.011,.01,0)="FS DATE^D^^0;1^S %DT=""EST"" D ^%DT S X=Y K:Y<1 X"
^XTMP("XPDT",7317,"^DD",103,103.011,.01,1,0)="^.1"
^XTMP("XPDT",7317,"^DD",103,103.011,.01,1,1,0)="103.011^B"
^XTMP("XPDT",7317,"^DD",103,103.011,.01,1,1,1)="S ^ORAM(103,DA(1),3,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7317,"^DD",103,103.011,.01,1,1,2)="K ^ORAM(103,DA(1),3,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7317,"^DD",103,103.011,.01,21,0)="^^1^1^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,.01,21,1,0)="Fileman date of the flow sheet entry."
^XTMP("XPDT",7317,"^DD",103,103.011,.01,"DT")="3030520"
^XTMP("XPDT",7317,"^DD",103,103.011,20,0)="INR^F^^0;3^K:$L(X)>6!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103.011,20,3)="Answer must be 1-6 characters in length."
^XTMP("XPDT",7317,"^DD",103,103.011,20,21,0)="^^1^1^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,20,21,1,0)="INR value from outside lab; entered throught the Anticoagulator."
^XTMP("XPDT",7317,"^DD",103,103.011,20,"DT")="3030520"
^XTMP("XPDT",7317,"^DD",103,103.011,30,0)="LAB DRAW LOC^F^^0;4^K:$L(X)>10!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103.011,30,3)="Answer must be 1-10 characters in length."
^XTMP("XPDT",7317,"^DD",103,103.011,30,21,0)="^^1^1^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,30,21,1,0)="Location of lab used for last outside lab draw (HCT or INR)"
^XTMP("XPDT",7317,"^DD",103,103.011,30,"DT")="3030520"
^XTMP("XPDT",7317,"^DD",103,103.011,40,0)="PILL STRENGTH^NJ5,2^^0;5^K:+X'=X!(X>10)!(X<1)!(X?.E1"".""3N.N) X"
^XTMP("XPDT",7317,"^DD",103,103.011,40,3)="Type a Number between 1 and 10, 2 Decimal Digits"
^XTMP("XPDT",7317,"^DD",103,103.011,40,21,0)="^^2^2^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,40,21,1,0)="Strength of coumadin pill prescribed to patient; in mgs.  Currently "
^XTMP("XPDT",7317,"^DD",103,103.011,40,21,2,0)="Anticoagulator only supports using one pill strength for each patient."
^XTMP("XPDT",7317,"^DD",103,103.011,40,"DT")="3030520"
^XTMP("XPDT",7317,"^DD",103,103.011,50,0)="TOTAL WEEKLY DOSE^NJ5,2^^0;6^K:+X'=X!(X>99)!(X<1)!(X?.E1"".""3N.N) X"
^XTMP("XPDT",7317,"^DD",103,103.011,50,3)="Type a Number between 1 and 99, 2 Decimal Digits"
^XTMP("XPDT",7317,"^DD",103,103.011,50,21,0)="^^4^4^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,50,21,1,0)="Total weekly coumadin dose as established at this flow sheet entry."
^XTMP("XPDT",7317,"^DD",103,103.011,50,21,2,0)="If ""Record Total Weekly dose"" is not checked in the ANTICOAGULATER; then "
^XTMP("XPDT",7317,"^DD",103,103.011,50,21,3,0)="this field will contain '---' and nothing will display in that field on "
^XTMP("XPDT",7317,"^DD",103,103.011,50,21,4,0)="the flow sheet (on the REPORTS TAB in CPRS)."
^XTMP("XPDT",7317,"^DD",103,103.011,50,"DT")="3030520"
^XTMP("XPDT",7317,"^DD",103,103.011,60,0)="DAILY DOSING^F^^0;7^K:$L(X)>50!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103.011,60,3)="Answer must be 1-50 characters in length."
^XTMP("XPDT",7317,"^DD",103,103.011,60,21,0)="^^2^2^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,60,21,1,0)="mg of coumadin per day Sun - Sat separated by '|'."
^XTMP("XPDT",7317,"^DD",103,103.011,60,21,2,0)="example: 5|5|10|5|5|2.5|5"
^XTMP("XPDT",7317,"^DD",103,103.011,60,"DT")="3030520"
^XTMP("XPDT",7317,"^DD",103,103.011,70,0)="PATIENT NOTICE^F^^0;8^K:$L(X)>10!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103.011,70,3)="Answer must be 1-10 characters in length."
^XTMP("XPDT",7317,"^DD",103,103.011,70,21,0)="^^2^2^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,70,21,1,0)="How patient was contacted at this entry.  Free text and displays in flow "
^XTMP("XPDT",7317,"^DD",103,103.011,70,21,2,0)="sheet (CPRS REPORTS TAB)."
^XTMP("XPDT",7317,"^DD",103,103.011,70,"DT")="3030520"
^XTMP("XPDT",7317,"^DD",103,103.011,80,0)="D/T STAMP^D^^0;9^S %DT=""EST"" D ^%DT S X=Y K:Y<1 X"
^XTMP("XPDT",7317,"^DD",103,103.011,80,21,0)="^^1^1^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,80,21,1,0)="Entry date/time of item into the file."
^XTMP("XPDT",7317,"^DD",103,103.011,80,"DT")="3030520"
^XTMP("XPDT",7317,"^DD",103,103.011,90,0)="PROVIDER^F^^0;10^K:$L(X)>40!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103.011,90,3)="Answer must be 1-40 characters in length."
^XTMP("XPDT",7317,"^DD",103,103.011,90,21,0)="^^1^1^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,90,21,1,0)="Provider (from file 200) that made the entry."
^XTMP("XPDT",7317,"^DD",103,103.011,90,"DT")="3030520"
^XTMP("XPDT",7317,"^DD",103,103.011,92,0)="CURRENT INDICATION^F^^0;11^K:$L(X)>20!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103.011,92,3)="Answer must be 1-20 characters in length."
^XTMP("XPDT",7317,"^DD",103,103.011,92,21,0)="^^3^3^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,92,21,1,0)="Indication from the Anticoagulator drop down box, or free text. This is "
^XTMP("XPDT",7317,"^DD",103,103.011,92,21,2,0)="in case the indication changes over the course of treatment."
^XTMP("XPDT",7317,"^DD",103,103.011,92,21,3,0)="example: A Fib"
^XTMP("XPDT",7317,"^DD",103,103.011,92,"DT")="3030702"
^XTMP("XPDT",7317,"^DD",103,103.011,95,0)="CURRENT GOAL^F^^0;12^K:$L(X)>12!($L(X)<1) X"
^XTMP("XPDT",7317,"^DD",103,103.011,95,3)="Answer must be 1-12 characters in length."
^XTMP("XPDT",7317,"^DD",103,103.011,95,21,0)="^^5^5^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,95,21,1,0)="Current goal range, in case it changed over the course of treatment.  The "
^XTMP("XPDT",7317,"^DD",103,103.011,95,21,2,0)="current ranges are used to determine the percent in goal, since the "
^XTMP("XPDT",7317,"^DD",103,103.011,95,21,3,0)="patient may have been in goal until the goal changed.  Only considered out"
^XTMP("XPDT",7317,"^DD",103,103.011,95,21,4,0)="of goal if they are out of range for this reading; not how this visit "
^XTMP("XPDT",7317,"^DD",103,103.011,95,21,5,0)="compares to the most recent goal range."
^XTMP("XPDT",7317,"^DD",103,103.011,95,"DT")="3030702"
^XTMP("XPDT",7317,"^DD",103,103.011,99,0)="COMMENTS^103.1199^^1;0"
^XTMP("XPDT",7317,"^DD",103,103.011,99,21,0)="^^1^1^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,99,21,1,0)="Free text information for this flow sheet entry."
^XTMP("XPDT",7317,"^DD",103,103.011,100,0)="SHOW VALUE^S^0:KEPT APPT;1:W/I 1 DAY;2:NO SHOW;^0;13^Q"
^XTMP("XPDT",7317,"^DD",103,103.011,100,21,0)="^^3^3^3031017^"
^XTMP("XPDT",7317,"^DD",103,103.011,100,21,1,0)="RECORDS VALUES FOR A SHOW RATE.  WILL LOOK AT TOTAL VISITS WITH THIS "
^XTMP("XPDT",7317,"^DD",103,103.011,100,21,2,0)="FIELD COMPLETED CALCULATING PERCENT WITH ON TIME (0) OR WITHIN ONE DAY "
^XTMP("XPDT",7317,"^DD",103,103.011,100,21,3,0)="(1); SUGGESTS COMPLIANCE.  2= NOSHOW"
^XTMP("XPDT",7317,"^DD",103,103.011,100,"DT")="3031017"
^XTMP("XPDT",7317,"^DD",103,103.011,104,0)="COMPLICATION^S^1:MAJOR BLEED;2:CLOT;3:MINOR BLEED;^0;2^Q"
^XTMP("XPDT",7317,"^DD",103,103.011,104,21,0)="^^3^3^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,104,21,1,0)="If present, indicates that a complication was noted.  Often noted "
^XTMP("XPDT",7317,"^DD",103,103.011,104,21,2,0)="historically, the date will either be the date of the entry OR the "
^XTMP("XPDT",7317,"^DD",103,103.011,104,21,3,0)="date will be in the COMPLICATIONS word processing fields."
^XTMP("XPDT",7317,"^DD",103,103.011,104,"DT")="3080920"
^XTMP("XPDT",7317,"^DD",103,103.011,105,0)="COMPLICATION NOTE^103.11105^^2;0"
^XTMP("XPDT",7317,"^DD",103,103.011,105,21,0)="^^1^1^3080929^"
^XTMP("XPDT",7317,"^DD",103,103.011,105,21,1,0)="Free text or selected information on complication."
^XTMP("XPDT",7317,"^DD",103,103.011,110,0)="PATIENT INSTRUCTIONS^103.021^^3;0"
^XTMP("XPDT",7317,"^DD",103,103.0112,0)="BRIDGING COMMENTS SUB-FIELD^^.01^1"
^XTMP("XPDT",7317,"^DD",103,103.0112,0,"DT")="3090501"
^XTMP("XPDT",7317,"^DD",103,103.0112,0,"NM","BRIDGING COMMENTS")=""
^XTMP("XPDT",7317,"^DD",103,103.0112,0,"UP")="103"
^XTMP("XPDT",7317,"^DD",103,103.0112,.01,0)="BRIDGING COMMENTS^WLx^^0;1^Q"
^XTMP("XPDT",7317,"^DD",103,103.0112,.01,3)="Enter comments pertaining to LMWH Bridging."
^XTMP("XPDT",7317,"^DD",103,103.0112,.01,21,0)="^^2^2^3090501^"
^XTMP("XPDT",7317,"^DD",103,103.0112,.01,21,1,0)="Enter any relevant information pertaining to the LMWH Bridging to be used "
^XTMP("XPDT",7317,"^DD",103,103.0112,.01,21,2,0)="for this patient."
^XTMP("XPDT",7317,"^DD",103,103.0112,.01,"DT")="3090501"
^XTMP("XPDT",7317,"^DD",103,103.021,0)="PATIENT INSTRUCTIONS SUB-FIELD^^.01^1"
^XTMP("XPDT",7317,"^DD",103,103.021,0,"DT")="3090506"
^XTMP("XPDT",7317,"^DD",103,103.021,0,"NM","PATIENT INSTRUCTIONS")=""
^XTMP("XPDT",7317,"^DD",103,103.021,0,"UP")="103.011"
^XTMP("XPDT",7317,"^DD",103,103.021,.01,0)="PATIENT INSTRUCTIONS^WLx^^0;1^Q"
^XTMP("XPDT",7317,"^DD",103,103.021,.01,3)="Enter patient instructions (from letter)"
^XTMP("XPDT",7317,"^DD",103,103.021,.01,21,0)="^^1^1^3090506^"
^XTMP("XPDT",7317,"^DD",103,103.021,.01,21,1,0)="This is the narrative included in the patient letter for the visit."
^XTMP("XPDT",7317,"^DD",103,103.021,.01,"DT")="3090506"
^XTMP("XPDT",7317,"^DD",103,103.035,0)="MSG WITH SUB-FIELD^^.01^1"
^XTMP("XPDT",7317,"^DD",103,103.035,0,"NM","MSG WITH")=""
^XTMP("XPDT",7317,"^DD",103,103.035,0,"UP")="103"
^XTMP("XPDT",7317,"^DD",103,103.035,.01,0)="MSG WITH^W^^0;1^Q"
^XTMP("XPDT",7317,"^DD",103,103.035,.01,21,0)="^^2^2^3030612^"
^XTMP("XPDT",7317,"^DD",103,103.035,.01,21,1,0)="NAMES OF PEOPLE WHO MAY ANSWER PT PHONE IN WHICH IT IS OK TO LEAVE "
^XTMP("XPDT",7317,"^DD",103,103.035,.01,21,2,0)="ANTICOAGULATION INFORMATION WITH."
^XTMP("XPDT",7317,"^DD",103,103.035,.01,"DT")="3030612"
^XTMP("XPDT",7317,"^DD",103,103.07,0)="SPECIAL INSTRUCTIONS SUB-FIELD^^.01^1"
^XTMP("XPDT",7317,"^DD",103,103.07,0,"NM","SPECIAL INSTRUCTIONS")=""
^XTMP("XPDT",7317,"^DD",103,103.07,0,"UP")="103"
^XTMP("XPDT",7317,"^DD",103,103.07,.01,0)="SPECIAL INSTRUCTIONS^WL^^0;1^Q"
^XTMP("XPDT",7317,"^DD",103,103.07,.01,"DT")="3031113"
^XTMP("XPDT",7317,"^DD",103,103.08,0)="RISK FACTORS SUB-FIELD^^.01^1"
^XTMP("XPDT",7317,"^DD",103,103.08,0,"NM","RISK FACTORS")=""
^XTMP("XPDT",7317,"^DD",103,103.08,0,"UP")="103"
^XTMP("XPDT",7317,"^DD",103,103.08,.01,0)="RISK FACTORS^W^^0;1^Q"
^XTMP("XPDT",7317,"^DD",103,103.08,.01,"DT")="3030520"
^XTMP("XPDT",7317,"^DD",103,103.085,0)="REMINDER SUB-FIELD^^.01^1"
^XTMP("XPDT",7317,"^DD",103,103.085,0,"NM","REMINDER")=""
^XTMP("XPDT",7317,"^DD",103,103.085,0,"UP")="103"
^XTMP("XPDT",7317,"^DD",103,103.085,.01,0)="REMINDER^WL^^0;1^Q"
^XTMP("XPDT",7317,"^DD",103,103.085,.01,"DT")="3040726"
^XTMP("XPDT",7317,"^DD",103,103.11105,0)="COMPLICATION NOTE SUB-FIELD^^.01^1"
^XTMP("XPDT",7317,"^DD",103,103.11105,0,"NM","COMPLICATION NOTE")=""
^XTMP("XPDT",7317,"^DD",103,103.11105,0,"UP")="103.011"
^XTMP("XPDT",7317,"^DD",103,103.11105,.01,0)="COMPLICATION NOTE^WLx^^0;1^Q"
^XTMP("XPDT",7317,"^DD",103,103.11105,.01,21,0)="^^1^1^3080920^"
^XTMP("XPDT",7317,"^DD",103,103.11105,.01,21,1,0)="Type of complication and any comments."
^XTMP("XPDT",7317,"^DD",103,103.11105,.01,"DT")="3080920"
^XTMP("XPDT",7317,"^DD",103,103.1199,0)="COMMENTS SUB-FIELD^^.01^1"
^XTMP("XPDT",7317,"^DD",103,103.1199,0,"NM","COMMENTS")=""
^XTMP("XPDT",7317,"^DD",103,103.1199,0,"UP")="103.011"
^XTMP("XPDT",7317,"^DD",103,103.1199,.01,0)="COMMENTS^W^^0;1^Q"
^XTMP("XPDT",7317,"^DD",103,103.1199,.01,"DT")="3030520"
^XTMP("XPDT",7317,"^DIC",101.24,101.24,0)="OE/RR REPORT^101.24"
^XTMP("XPDT",7317,"^DIC",101.24,101.24,0,"GL")="^ORD(101.24,"
^XTMP("XPDT",7317,"^DIC",101.24,101.24,"%",0)="^1.005^^0"
^XTMP("XPDT",7317,"^DIC",101.24,101.24,"%D",0)="^1.001^7^7^3020924^^^"
^XTMP("XPDT",7317,"^DIC",101.24,101.24,"%D",1,0)="This file contains definitions and parameters used in various reports"
^XTMP("XPDT",7317,"^DIC",101.24,101.24,"%D",2,0)="within CPRS."
^XTMP("XPDT",7317,"^DIC",101.24,101.24,"%D",3,0)=" "
^XTMP("XPDT",7317,"^DIC",101.24,101.24,"%D",4,0)="Entry numbers >1000 are reserved for national use.  Any local entries"
^XTMP("XPDT",7317,"^DIC",101.24,101.24,"%D",5,0)="should be added to a number <1000.  If this convention is not followed,"
^XTMP("XPDT",7317,"^DIC",101.24,101.24,"%D",6,0)="you run the risk of having your local entries overwritten by a patch"
^XTMP("XPDT",7317,"^DIC",101.24,101.24,"%D",7,0)="or future release of CPRS."
^XTMP("XPDT",7317,"^DIC",101.24,"B","OE/RR REPORT",101.24)=""
^XTMP("XPDT",7317,"^DIC",103,103,0)="ORAM FLOWSHEET^103"
^XTMP("XPDT",7317,"^DIC",103,103,0,"GL")="^ORAM(103,"
^XTMP("XPDT",7317,"^DIC",103,103,"%",0)="^1.005^^"
^XTMP("XPDT",7317,"^DIC",103,103,"%D",0)="^^8^8^3090113^"
^XTMP("XPDT",7317,"^DIC",103,103,"%D",1,0)="This file captures flowsheet data in support of the the Anticoagulation "
^XTMP("XPDT",7317,"^DIC",103,103,"%D",2,0)="Management Program (AMP), which is a Joint Commission National Patient"
^XTMP("XPDT",7317,"^DIC",103,103,"%D",3,0)="Safety Goal initiative to use a standardized process for the management of"
^XTMP("XPDT",7317,"^DIC",103,103,"%D",4,0)="their patients on extended anticoagulation therapy."
^XTMP("XPDT",7317,"^DIC",103,103,"%D",5,0)=" "
^XTMP("XPDT",7317,"^DIC",103,103,"%D",6,0)="AMP runs as a Windows Application from the CPRS Tools menu, and assists "
^XTMP("XPDT",7317,"^DIC",103,103,"%D",7,0)="Clinicians with the expeditious documentation of visits to Anticoagulation"
^XTMP("XPDT",7317,"^DIC",103,103,"%D",8,0)="Clinics."
^XTMP("XPDT",7317,"^DIC",103,"B","ORAM FLOWSHEET",103)=""
^XTMP("XPDT",7388)="1"
^XTMP("XPDT",7388,"BLD",1130,0)="XT*7.3*114^TOOLKIT^0^3080930^y"
^XTMP("XPDT",7388,"BLD",1130,1,0)="^^3^3^3080911^"
^XTMP("XPDT",7388,"BLD",1130,1,1,0)=" "
^XTMP("XPDT",7388,"BLD",1130,1,2,0)="See patch XT*7.3*114 in the National Patch Module for complete "
^XTMP("XPDT",7388,"BLD",1130,1,3,0)="information on this patch."
^XTMP("XPDT",7388,"BLD",1130,4,0)="^9.64PA^^"
^XTMP("XPDT",7388,"BLD",1130,6)="^92"
^XTMP("XPDT",7388,"BLD",1130,6.3)="1"
^XTMP("XPDT",7388,"BLD",1130,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7388,"BLD",1130,"KRN",.4,0)=".4"
^XTMP("XPDT",7388,"BLD",1130,"KRN",.401,0)=".401"
^XTMP("XPDT",7388,"BLD",1130,"KRN",.402,0)=".402"
^XTMP("XPDT",7388,"BLD",1130,"KRN",.403,0)=".403"
^XTMP("XPDT",7388,"BLD",1130,"KRN",.5,0)=".5"
^XTMP("XPDT",7388,"BLD",1130,"KRN",.84,0)=".84"
^XTMP("XPDT",7388,"BLD",1130,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7388,"BLD",1130,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7388,"BLD",1130,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7388,"BLD",1130,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7388,"BLD",1130,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7388,"BLD",1130,"KRN",9.8,"NM",1,0)="XTPMKPTC^^0^B77159451"
^XTMP("XPDT",7388,"BLD",1130,"KRN",9.8,"NM","B","XTPMKPTC",1)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN",19,0)="19"
^XTMP("XPDT",7388,"BLD",1130,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7388,"BLD",1130,"KRN",101,0)="101"
^XTMP("XPDT",7388,"BLD",1130,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7388,"BLD",1130,"KRN",771,0)="771"
^XTMP("XPDT",7388,"BLD",1130,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7388,"BLD",1130,"KRN",870,0)="870"
^XTMP("XPDT",7388,"BLD",1130,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7388,"BLD",1130,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7388,"BLD",1130,"KRN",8994,0)="8994"
^XTMP("XPDT",7388,"BLD",1130,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",.4,.4)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",.401,.401)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",.402,.402)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",.403,.403)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",.5,.5)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",.84,.84)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",19,19)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",101,101)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",771,771)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",870,870)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",8994,8994)=""
^XTMP("XPDT",7388,"BLD",1130,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7388,"BLD",1130,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7388,"BLD",1130,"QUES",0)="^9.62^^"
^XTMP("XPDT",7388,"MBREQ")="0"
^XTMP("XPDT",7388,"PKG",6,-1)="1^1"
^XTMP("XPDT",7388,"PKG",6,0)="TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP^"
^XTMP("XPDT",7388,"PKG",6,20,0)="^9.402P^^0"
^XTMP("XPDT",7388,"PKG",6,22,0)="^9.49I^1^1"
^XTMP("XPDT",7388,"PKG",6,22,1,0)="7.3^3040428^2970513^2"
^XTMP("XPDT",7388,"PKG",6,22,1,"PAH",1,0)="114^3080930"
^XTMP("XPDT",7388,"PKG",6,22,1,"PAH",1,1,0)="^^3^3^3080930"
^XTMP("XPDT",7388,"PKG",6,22,1,"PAH",1,1,1,0)=" "
^XTMP("XPDT",7388,"PKG",6,22,1,"PAH",1,1,2,0)="See patch XT*7.3*114 in the National Patch Module for complete "
^XTMP("XPDT",7388,"PKG",6,22,1,"PAH",1,1,3,0)="information on this patch."
^XTMP("XPDT",7388,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7388,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7388,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7388,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7388,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7388,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7388,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7388,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7388,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7388,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7388,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7388,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7388,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7388,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7388,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7388,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7388,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7388,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7388,"QUES","XPM1","B")=""
^XTMP("XPDT",7388,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7388,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7388,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7388,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7388,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7388,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7388,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7388,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7388,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7388,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7388,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7388,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7388,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7388,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7388,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7388,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7388,"RTN")="1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC")="0^1^B77159451^B75764182"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",1,0)="XTPMKPTC ;OAK/BP - PATCH MONITOR FUNCTIONS ;09/10/2008"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",2,0)=" ;;7.3;TOOLKIT;**98,100,114**; Apr 25, 1995;Build 1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7388,"RTN","XTPMKPTC",4,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",5,0)="SRVR N XMB X XMREC"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",6,0)=" S XTBMLN1=$G(^XMB(3.9,XMZ,0))"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",7,0)=" I XTBMLN1[""COMPLIANCE DATE CHANGE"" G CKCMPDT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",8,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",9,0)="CHECK I XTBMLN1[""TEST"" G EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",10,0)=" I XTBMLN1[""COMPLIANCE DATE CHANGE"" G CKCMPDT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",11,0)=" I XTBMLN1[""Entered in error patch"" DO  I $D(OUT) K OUT G EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",12,0)=" .F XTBX=1:1:8 S XTBY=$G(^XMB(3.9,XMZ,2,+XTBX,0)) I XTBY[""The patch is"" DO  Q:$D(OUT)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",13,0)=" ..K OUT S X=$P(XTBY,""'"",2),DIC(0)=""QLM"",DIC=""^XPD(9.9,"" D ^DIC I Y<0 S OUT=1 Q"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",14,0)=" ..S DIK=DIC,DA=+Y D ^DIK K DIC,DIK,DA,XTBX,XTBY,Y,X S OUT=1 Q"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",15,0)=" I XTBMLN1'[""SEQ #""!(XTBMLN1'[""National Patch Module"") G EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",16,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",17,0)="CKCMPDT D CMPDTCG^XTPMKPCF I $D(XTBCMDCG) K XTBCMDCG G EXIT ;compliance date chg check"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",18,0)=" S XTBPTYPE=1 ;assume NON-KIDS until verified"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",19,0)=" F XTBX=0:0 S XTBX=$O(^XMB(3.9,XMZ,2,XTBX)) Q:XTBX=""""!(+XTBX=0)  S XTBY=$G(^XMB(3.9,XMZ,2,XTBX,0)) I XTBY[""$KID"" DO"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",20,0)=" .S XTBZ=$O(^XMB(3.9,XMZ,2,XTBX)) I $G(^XMB(3.9,XMZ,2,XTBZ,0))[""**INSTALL NAME**"" S XTBPTYPE="""",XTBX=9999999 Q"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",21,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",22,0)="EXTINFO S (XTBDESG,XTBPKG,XTBPRIO,XTBVER,XTBSEQ,XTBSUB)="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",23,0)=" F  X XMREC Q:XMER<0!(XMRG[""Description"")  DO  Q:$D(NOFILE)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",24,0)=" .K NOFILE"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",25,0)=" .Q:XMRG[""====="""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",26,0)=" .I XMRG[""Designation"" S (XTBDESG,XTBINST)=$P(XMRG,""Designation: "",2) Q:$D(NOFILE)  DO"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",27,0)=" ..Q:XTBINST'[""*""  ;*p114*-REM"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",28,0)=" ..S XTBY=$P(XTBDESG,""*"",2) I XTBY'?1.2N1""."".N S XTBY=XTBY_"".0"",$P(XTBINST,""*"",2)=XTBY"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",29,0)=" .I XTBDESG="""" S NOFILE=1 Q"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",30,0)=" .I $D(^XPD(9.9,""B"",XTBDESG)) S NOFILE=1 Q  ; already done"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",31,0)=" .I XMRG[""Package"" DO"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",32,0)=" ..S XTBPKG=$P(XMRG,""Package : "",2),XTBPKG=$P(XTBPKG,""Priority: "",1),XTBPKG=$E(XTBPKG,1,35)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",33,0)=" ..S XTBX=$L(XTBPKG)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",34,0)=" ..F XX=XTBX:-1 S XTBY=$E(XTBPKG,XX,XX) Q:($A(XTBY)>64)!(XTBY="""")  I $A(XTBY)=32 S $E(XTBPKG,XX,XX)=""z"""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",35,0)=" ..I XTBPKG[""z"" S XTBPKG=$P(XTBPKG,""z"",1)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",36,0)=" .I XMRG[""Priority"" S XTBPRIO=$P(XMRG,""Priority: "",2) DO"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",37,0)=" ..S XTBPRIO=$P(XTBPRIO,"" "",1) S X=XTBPRIO X ^%ZOSF(""UPPERCASE"") S XTBPRIO=X"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",38,0)=" .I XMRG[""Version"" S XTBVER=$P(XMRG,""Version: "",1) DO"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",39,0)=" ..S XTBSEQ=$P(XTBVER,""#"",2),XTBSEQ=$P(XTBSEQ,"" "",1)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",40,0)=" ..S XTBVER=$P(XTBVER,""Version : "",2),XTBVER=+XTBVER"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",41,0)=" .I XMRG[""Compliance Date:"" S XTBCMPDT=$P(XMRG,""Compliance Date: "",2)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",42,0)=" .I XMRG[""Subject"" S XTBSUB=$P(XMRG,""Subject: "",2),XTBSUB=$E(XTBSUB,1,50),XTBSUB=$TR(XTBSUB,"":;"",""--"")"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",43,0)=" G:$D(NOFILE) EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",44,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",45,0)="FILE K DO,DD S (DIC,DIE)=""^XPD(9.9,"",DIC(0)=""M"",X=XTBDESG"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",46,0)=" S XTBRCPDT=$G(^XMB(3.9,XMZ,.6)) I XTBRCPDT="""" S XTBRCPDT=DT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",47,0)=" S DIC(""DR"")=""1////""_XTBRCPDT_"";2///""_XTBPRIO_"";3///""_XTBPKG_"";4////""_XTBSEQ_"";5////""_XTBVER_"";6///""_XTBSUB_"";7///""_XTBINST_"";8///""_XTBCMPDT_"";11////""_XTBPTYPE"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",48,0)=" D FILE^DICN"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",49,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",50,0)="EXIT G EXITA^XTPMKPCF"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",51,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",52,0)="NIGHT S XTBPURGI=$P($G(^XPD(9.95,1,0)),U,3) ;purge y/n"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",53,0)=" K ^TMP($J) S XTBX="""",XTBLN=8,XTBCNT=0"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",54,0)=" S NIGHT=1 D TEXT S Y=DT X ^DD(""DD"") S XTBRUNDT=Y"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",55,0)=" F  S XTBX=$O(^XPD(9.9,""B"",XTBX)) Q:XTBX=""""  F XTBDA=0:0 S XTBDA=$O(^XPD(9.9,""B"",XTBX,XTBDA)) Q:XTBDA=""""  DO"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",56,0)=" .K XTBKILLD"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",57,0)=" .S XTBDTA=$G(^XPD(9.9,XTBDA,0)) Q:XTBDTA="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",58,0)=" .S XTBINST=$P(XTBDTA,U,8) Q:XTBINST="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",59,0)=" .S XTBPTYPE=$P(XTBDTA,U,10)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",60,0)=" .S XTBXX=$O(^XPD(9.7,""B"",XTBINST,9999999999),-1) I $G(^XPD(9.7,+XTBXX,2))["" TEST v"" S XTBXX="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",61,0)=" .I $P($G(^XPD(9.7,+XTBXX,0)),U,9)=3!(XTBPTYPE=1&($P(XTBDTA,U,11)]"""")),XTBPURGI=1 DO  Q:$D(XTBKILLD)  ; installed, check purge flag"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",62,0)=" ..S DA=XTBDA,DIK=""^XPD(9.9,"" D ^DIK S XTBKILLD=1 K DA,DIK Q"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",63,0)=" .I XTBXX]"""",XTBPTYPE=1 S XTBPTYPE="""",$P(^XPD(9.9,XTBDA,0),U,10)="""" ;found In INSTALL"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",64,0)=" .Q:XTBPTYPE=1&($P(XTBDTA,U,11)]"""")  ;non-kids, has install date  "
^XTMP("XPDT",7388,"RTN","XTPMKPTC",65,0)=" .Q:$P($G(^XPD(9.7,+XTBXX,0)),U,9)=3"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",66,0)=" .I (DT>$P(XTBDTA,U,9)) D SET"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",67,0)=" I '$D(^TMP($J,9,0)) K ^TMP($J) S ^TMP($J,3,0)="""",^TMP($J,4,0)=""    No Delinquent Patches were found."""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",68,0)=" S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",69,0)=" I XTBCNT>0 S ^TMP($J,XTBLN,0)=""Total: ""_XTBCNT,XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",70,0)=" S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",71,0)=" S XMSUB=""Patch Monitor Report for ""_^DD(""SITE"")_"" for ""_XTBRUNDT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",72,0)=" N DUZ S XMDUZ=.5,XMTEXT=""^TMP($J,"",XMY(""G.XTPM PATCH MONITOR"")="""",XMY(.5)="""" D ^XMD"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",73,0)=" ; purge old data"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",74,0)=" I +XTBPURGI=0 D ^XTPMKPP"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",75,0)=" G EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",76,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",77,0)="SET S XTBPTNM=$P(XTBDTA,U,1),XTBSUBJ=$E($P(XTBDTA,U,7),1,20)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",78,0)=" S X=$P(XTBDTA,U,3),XTBPRIO=$S(X=""m"":""Mandatory"",X=""e"":""Emergency"",1:""Unknown"")"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",79,0)=" S (X1,Y)=$P(XTBDTA,U,2) X ^DD(""DD"") S XTBRECPT=Y"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",80,0)=" S (Y,YY1)=$P(XTBDTA,U,9) X ^DD(""DD"") S XTBINSTX=Y ; compliance date"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",81,0)=" I YY1<DT,'$D(NIGHT) S XTBINSTX=Y_"" *"""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",82,0)=" S XTBPKG=$P(XTBPTNM,""*"",1),XTBPKGPT=$O(^DIC(9.4,""C"",XTBPKG,0))"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",83,0)=" S XTBPCTVR=+$P(XTBPTNM,""*"",2),XTBPLVER=+$G(^DIC(9.4,+XTBPKGPT,""VERSION""))"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",84,0)=" I XTBPCTVR>XTBPLVER,XTBPLVER>0 S XTBINSTX=""Future Version"""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",85,0)=" I XTBPCTVR>XTBPLVER,XTBPLVER=0 S $P(^XPD(9.9,XTBDA,0),U,10)=1,XTBINSTX=""CompleteByHand"""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",86,0)=" I XTBPCTVR=999 S XTBINSTX=""CompleteByHand"" ;mainly new Mailman domains"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",87,0)=" I XTBINSTX=""Future Version""&($D(NIGHT)) Q"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",88,0)=" I XTBINSTX=""Future Version""&($D(XTBPSTD)) Q"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",89,0)=" S XTBLN=XTBLN+1 ; first line=9"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",90,0)=" S XTBCNT=XTBCNT+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",91,0)=" S XTBDTA="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",92,0)=" S $E(XTBDTA,1)=XTBPTNM,$E(XTBDTA,15)=XTBSUBJ,$E(XTBDTA,38)=XTBPRIO,$E(XTBDTA,51)=XTBRECPT,$E(XTBDTA,64)=XTBINSTX"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",93,0)=" S ^TMP($J,XTBLN,0)=XTBDTA,XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",94,0)=" S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",95,0)=" Q"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",96,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",97,0)="TEXT S ^TMP($J,1,0)="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",98,0)=" S ^TMP($J,2,0)=""The following patches are not installed at this site and are past the"""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",99,0)=" S ^TMP($J,3,0)=""designated installation time:"""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",100,0)=" S ^TMP($J,4,0)="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",101,0)=" S ^TMP($J,5,0)=""                                                               Compliance"""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",102,0)=" S ^TMP($J,6,0)=""Patch #       Subject                Priority     Recpt Date   Date"""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",103,0)=" S ^TMP($J,7,0)=""-------       -------                --------     ----- ----   ----------"""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",104,0)=" S ^TMP($J,8,0)="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",105,0)=" Q"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",106,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",107,0)="REG ; regular notification"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",108,0)=" K ^TMP($J) S XTBX="""",XTBLN=8,XTBCNT=0"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",109,0)=" D TEXT S Y=DT X ^DD(""DD"") S XTBRUNDT=Y"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",110,0)=" S ^TMP($J,2,0)=""The following patches are uninstalled at this site:"" K ^TMP($J,3,0)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",111,0)=" F  S XTBX=$O(^XPD(9.9,""B"",XTBX)) Q:XTBX=""""  F XTBDA=0:0 S XTBDA=$O(^XPD(9.9,""B"",XTBX,XTBDA)) Q:XTBDA=""""  DO"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",112,0)=" .S XTBDTA=$G(^XPD(9.9,XTBDA,0)),XTBINST=$P(XTBDTA,U,8)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",113,0)=" .Q:XTBDTA=""""!(XTBINST="""")  ;no data or no install name"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",114,0)=" .S XTBXX=$O(^XPD(9.7,""B"",XTBINST,9999999999),-1) I $G(^XPD(9.7,+XTBXX,2))["" TEST v"" S XTBXX="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",115,0)=" .Q:$P(XTBDTA,U,10)=1&($P(XTBDTA,U,11)]"""")  ;non-kids"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",116,0)=" .Q:$P($G(^XPD(9.7,+XTBXX,0)),U,9)=3"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",117,0)=" .D SET"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",118,0)=" I '$D(^TMP($J,9,0)) G EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",119,0)=" S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",120,0)=" S ^TMP($J,XTBLN,0)=""Total: ""_XTBCNT,XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",121,0)=" S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",122,0)=" S XMSUB=""Uninstalled Patch Report for ""_^DD(""SITE"")_"" for ""_XTBRUNDT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",123,0)=" N DUZ K XMY"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",124,0)=" S XMDUZ=.5,XMTEXT=""^TMP($J,"" D MG,^XMD"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",125,0)=" G EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",126,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",127,0)="RPT W @IOF,!,""Complete Uninstalled Patch Report for ""_^DD(""SITE""),!!!"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",128,0)=" S %ZIS=""AEQ"" D ^%ZIS G:POP EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",129,0)=" I $D(IO(""Q"")) S ZTIO=ION,ZTSAVE="""",ZTRTN=""RPT1^XTPMKPTC"",ZTDESC=""Uninstalled Patch Report"" D ^%ZTLOAD D HOME^%ZIS"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",130,0)=" I $D(ZTSK) W !,""Queued as task# "",ZTSK,!! H 2 G EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",131,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",132,0)="RPT1 U IO K ^TMP($J) S XTBX="""",XTBLN=8,XTBCNT=0"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",133,0)=" D TEXT S Y=DT X ^DD(""DD"") S XTBRUNDT=Y"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",134,0)=" K ^TMP($J,2,0),^TMP($J,3,0)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",135,0)=" F  S XTBX=$O(^XPD(9.9,""B"",XTBX)) Q:XTBX=""""  F XTBDA=0:0 S XTBDA=$O(^XPD(9.9,""B"",XTBX,XTBDA)) Q:XTBDA=""""  DO"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",136,0)=" .S XTBDTA=$G(^XPD(9.9,XTBDA,0)),XTBINST=$P(XTBDTA,U,8) Q:XTBDTA=""""!(XTBINST="""")  ; no data or no install name"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",137,0)=" .S XTBXX=$O(^XPD(9.7,""B"",XTBINST,9999999999),-1) I $G(^XPD(9.7,+XTBXX,2))["" TEST v"" S XTBXX="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",138,0)=" .Q:$P(XTBDTA,U,10)=1&($P(XTBDTA,U,11)]"""")  ;non-kids"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",139,0)=" .Q:$P($G(^XPD(9.7,+XTBXX,0)),U,9)=3"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",140,0)=" .D SET"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",141,0)=" I '$D(^TMP($J,9,0)) S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1,^TMP($J,XTBLN,0)=""     Nothing to report"",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",142,0)=" S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",143,0)=" I XTBCNT>0 S ^TMP($J,XTBLN,0)=""Total: ""_XTBCNT,XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",144,0)=" S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",145,0)=" S PG=1,XTBHDR=""Uninstalled Patch Report for ""_^DD(""SITE"")_"" for ""_XTBRUNDT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",146,0)=" W:IOST?1""C-"".E @IOF W !,XTBHDR,?(IOM-12),""Page: "",PG,!"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",147,0)=" F XTBLN=0:0 S XTBLN=$O(^TMP($J,XTBLN)) Q:XTBLN=""""  W ^TMP($J,XTBLN,0),! I $Y>(IOSL-5) S PG=PG+1 D PAUSE W @IOF,!,XTBHDR,?(IOM-12),""Page: "",PG,!!"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",148,0)=" G EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",149,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",150,0)="PASTDUE W @IOF,!,""Past Due Patch Report for ""_^DD(""SITE""),!!!"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",151,0)=" S %ZIS=""AEQ"" D ^%ZIS G:POP EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",152,0)=" I $D(IO(""Q"")) S ZTIO=ION,ZTSAVE="""",ZTRTN=""PASTD1^XTPMKPTC"",ZTDESC=""Past Due Patch Report"" D ^%ZTLOAD D HOME^%ZIS"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",153,0)=" I $D(ZTSK) W !,""Queued as task# "",ZTSK,!! H 2 G EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",154,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",155,0)="PASTD1 U IO K ^TMP($J) S XTBX="""",XTBLN=8,XTBCNT=0"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",156,0)=" S XTBPSTD=1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",157,0)=" D TEXT S Y=DT X ^DD(""DD"") S XTBRUNDT=Y"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",158,0)=" K ^TMP($J,2,0),^TMP($J,3,0)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",159,0)=" F  S XTBX=$O(^XPD(9.9,""B"",XTBX)) Q:XTBX=""""  F XTBDA=0:0 S XTBDA=$O(^XPD(9.9,""B"",XTBX,XTBDA)) Q:XTBDA=""""  DO"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",160,0)=" .S XTBDTA=$G(^XPD(9.9,XTBDA,0)),XTBINST=$P(XTBDTA,U,8) Q:XTBDTA=""""!(XTBINST="""")"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",161,0)=" .S XTBXX=$O(^XPD(9.7,""B"",XTBINST,9999999999),-1) I $G(^XPD(9.7,+XTBXX,2))["" TEST v"" S XTBXX="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",162,0)=" .Q:$P(XTBDTA,U,10)=1&($P(XTBDTA,U,11)]"""")  ;non-kids"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",163,0)=" .Q:$P($G(^XPD(9.7,+XTBXX,0)),U,9)=3"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",164,0)=" .S XTBCOMPD=$P(XTBDTA,U,9) Q:XTBCOMPD'<DT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",165,0)=" .D SET"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",166,0)=" I '$D(^TMP($J,9,0)) S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1,^TMP($J,XTBLN,0)=""     Nothing to report"",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",167,0)=" S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",168,0)=" I XTBCNT>0 S ^TMP($J,XTBLN,0)=""Total: ""_XTBCNT,XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",169,0)=" S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",170,0)=" S ^TMP($J,XTBLN,0)="""",XTBLN=XTBLN+1"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",171,0)=" S PG=1,XTBHDR=""Past Due Patch Report for ""_^DD(""SITE"")_"" for ""_XTBRUNDT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",172,0)=" W:IOST?1""C-"".E @IOF W !,XTBHDR,?(IOM-12),""Page: "",PG,!"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",173,0)=" F XTBLN=0:0 S XTBLN=$O(^TMP($J,XTBLN)) Q:XTBLN=""""  W ^TMP($J,XTBLN,0),! I $Y>(IOSL-5) S PG=PG+1 D PAUSE W @IOF,!,XTBHDR,?(IOM-12),""Page: "",PG,!!"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",174,0)=" K XTBPSTD G EXIT"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",175,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",176,0)="PAUSE W !,""Press RETURN to continue or '^' to exit: "" R XTBANS:DTIME"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",177,0)=" I XTBANS[""^"" S XTBLN=9999"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",178,0)=" Q"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",179,0)=" ;"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",180,0)="MG F XTBMG=0:0 S XTBMG=$O(^XPD(9.95,1,1,""B"",XTBMG)) Q:XTBMG=""""  DO"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",181,0)=" .S XTBMGN=$P(^XMB(3.8,XTBMG,0),U)"
^XTMP("XPDT",7388,"RTN","XTPMKPTC",182,0)=" .S XMY(""G.""_XTBMGN)="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",183,0)=" S XMY(""G.XTPM PATCH MONITOR USER"")="""",XMY(.5)="""""
^XTMP("XPDT",7388,"RTN","XTPMKPTC",184,0)=" Q"
^XTMP("XPDT",7388,"VER")="8.0^22.0"
^XTMP("XPDT",7393)="1"
^XTMP("XPDT",7393,"BLD",1113,0)="XU*8.0*509^KERNEL^0^3080908^y"
^XTMP("XPDT",7393,"BLD",1113,1,0)="^^2^2^3080822^"
^XTMP("XPDT",7393,"BLD",1113,1,1,0)="Kernel patch XU*8.0*509; New Taxonomies."
^XTMP("XPDT",7393,"BLD",1113,1,2,0)="Please refer to the Description in Forum Patch Module for details."
^XTMP("XPDT",7393,"BLD",1113,4,0)="^9.64PA^^"
^XTMP("XPDT",7393,"BLD",1113,6)="^413"
^XTMP("XPDT",7393,"BLD",1113,6.3)="1"
^XTMP("XPDT",7393,"BLD",1113,"ABPKG")="n"
^XTMP("XPDT",7393,"BLD",1113,"INI")=""
^XTMP("XPDT",7393,"BLD",1113,"INID")="^y^"
^XTMP("XPDT",7393,"BLD",1113,"INIT")="POST^XU8P509"
^XTMP("XPDT",7393,"BLD",1113,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7393,"BLD",1113,"KRN",.4,0)=".4"
^XTMP("XPDT",7393,"BLD",1113,"KRN",.401,0)=".401"
^XTMP("XPDT",7393,"BLD",1113,"KRN",.402,0)=".402"
^XTMP("XPDT",7393,"BLD",1113,"KRN",.403,0)=".403"
^XTMP("XPDT",7393,"BLD",1113,"KRN",.5,0)=".5"
^XTMP("XPDT",7393,"BLD",1113,"KRN",.84,0)=".84"
^XTMP("XPDT",7393,"BLD",1113,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7393,"BLD",1113,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7393,"BLD",1113,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7393,"BLD",1113,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7393,"BLD",1113,"KRN",9.8,"NM",0)="^9.68A^4^4"
^XTMP("XPDT",7393,"BLD",1113,"KRN",9.8,"NM",1,0)="XU8P509A^^0^B52747738"
^XTMP("XPDT",7393,"BLD",1113,"KRN",9.8,"NM",2,0)="XU8P509B^^0^B151640347"
^XTMP("XPDT",7393,"BLD",1113,"KRN",9.8,"NM",3,0)="XU8P509C^^0^B195990177"
^XTMP("XPDT",7393,"BLD",1113,"KRN",9.8,"NM",4,0)="XU8P509D^^0^B175391400"
^XTMP("XPDT",7393,"BLD",1113,"KRN",9.8,"NM","B","XU8P509A",1)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN",9.8,"NM","B","XU8P509B",2)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN",9.8,"NM","B","XU8P509C",3)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN",9.8,"NM","B","XU8P509D",4)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN",19,0)="19"
^XTMP("XPDT",7393,"BLD",1113,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7393,"BLD",1113,"KRN",101,0)="101"
^XTMP("XPDT",7393,"BLD",1113,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7393,"BLD",1113,"KRN",771,0)="771"
^XTMP("XPDT",7393,"BLD",1113,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7393,"BLD",1113,"KRN",870,0)="870"
^XTMP("XPDT",7393,"BLD",1113,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7393,"BLD",1113,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7393,"BLD",1113,"KRN",8994,0)="8994"
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",.4,.4)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",.401,.401)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",.402,.402)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",.403,.403)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",.5,.5)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",.84,.84)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",19,19)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",101,101)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",771,771)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",870,870)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7393,"BLD",1113,"KRN","B",8994,8994)=""
^XTMP("XPDT",7393,"BLD",1113,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7393,"BLD",1113,"QUES",0)="^9.62^^"
^XTMP("XPDT",7393,"BLD",1113,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7393,"BLD",1113,"REQB",1,0)="XU*8.0*497^0"
^XTMP("XPDT",7393,"BLD",1113,"REQB","B","XU*8.0*497",1)=""
^XTMP("XPDT",7393,"INIT")="POST^XU8P509"
^XTMP("XPDT",7393,"MBREQ")="0"
^XTMP("XPDT",7393,"PKG",3,-1)="1^1"
^XTMP("XPDT",7393,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7393,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7393,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7393,"PKG",3,22,1,0)="8.0^3080616^3080616^6"
^XTMP("XPDT",7393,"PKG",3,22,1,"PAH",1,0)="509^3080908"
^XTMP("XPDT",7393,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3080908"
^XTMP("XPDT",7393,"PKG",3,22,1,"PAH",1,1,1,0)="Kernel patch XU*8.0*509; New Taxonomies."
^XTMP("XPDT",7393,"PKG",3,22,1,"PAH",1,1,2,0)="Please refer to the Description in Forum Patch Module for details."
^XTMP("XPDT",7393,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7393,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7393,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7393,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7393,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7393,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7393,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7393,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7393,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7393,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7393,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7393,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7393,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7393,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7393,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7393,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7393,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7393,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7393,"QUES","XPM1","B")=""
^XTMP("XPDT",7393,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7393,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7393,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7393,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7393,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7393,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7393,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7393,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7393,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7393,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7393,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7393,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7393,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7393,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7393,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7393,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7393,"RTN")="5"
^XTMP("XPDT",7393,"RTN","XU8P509")="0^^B25956303^n/a"
^XTMP("XPDT",7393,"RTN","XU8P509",1,0)="XU8P509 ; BP/BDT - POST ROUTINE; 9/8/08"
^XTMP("XPDT",7393,"RTN","XU8P509",2,0)=" ;;8.0;KERNEL;**509**;Jul 10, 1995;Build 1"
^XTMP("XPDT",7393,"RTN","XU8P509",3,0)=" ;;""Per VHA Directive 2004-038, this routine should not be modified""."
^XTMP("XPDT",7393,"RTN","XU8P509",4,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509",5,0)="POST ; Post routine for XU*8*509"
^XTMP("XPDT",7393,"RTN","XU8P509",6,0)=" D DEL ;delete entries 1137-1152 if they exist"
^XTMP("XPDT",7393,"RTN","XU8P509",7,0)=" D ADD ;add entries 1137-1152"
^XTMP("XPDT",7393,"RTN","XU8P509",8,0)=" D DEF^XU8P509A,DEF^XU8P509B ;modify definition texts"
^XTMP("XPDT",7393,"RTN","XU8P509",9,0)=" D DEF^XU8P509C,DEF^XU8P509D ;add definition texts"
^XTMP("XPDT",7393,"RTN","XU8P509",10,0)=" D DELXU8P ; delete routines XU8P509A,B,C,D"
^XTMP("XPDT",7393,"RTN","XU8P509",11,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509",12,0)="DELXU8P ;"
^XTMP("XPDT",7393,"RTN","XU8P509",13,0)=" ;Delete the routine XU8P509A,B,C,D:"
^XTMP("XPDT",7393,"RTN","XU8P509",14,0)=" N X F X=""XU8P509A"",""XU8P509B"",""XU8P509C"",""XU8P509D"" X ^%ZOSF(""DEL"")"
^XTMP("XPDT",7393,"RTN","XU8P509",15,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509",16,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509",17,0)="ADD ; Add new entries from 1137-1152"
^XTMP("XPDT",7393,"RTN","XU8P509",18,0)=" N XUI,XUDATA"
^XTMP("XPDT",7393,"RTN","XU8P509",19,0)=" F XUI=1:1:16 S XUDATA=$T(DATA+XUI) Q:XUDATA="" ;;END""  D"
^XTMP("XPDT",7393,"RTN","XU8P509",20,0)=" . S XUDATA=$P(XUDATA,"";;"",2) Q:XUDATA=""END"""
^XTMP("XPDT",7393,"RTN","XU8P509",21,0)=" . D ADD1(XUDATA)"
^XTMP("XPDT",7393,"RTN","XU8P509",22,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509",23,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509",24,0)="ADD1(XUDATA) ; add single entry"
^XTMP("XPDT",7393,"RTN","XU8P509",25,0)=" N FDA,FDAIEN,XUD"
^XTMP("XPDT",7393,"RTN","XU8P509",26,0)=" S XUD=$G(XUDATA)"
^XTMP("XPDT",7393,"RTN","XU8P509",27,0)=" S FDAIEN(1)=$P(XUD,""^"")"
^XTMP("XPDT",7393,"RTN","XU8P509",28,0)=" S FDA(8932.1,""+1,"",.01)=$P(XUD,""^"",2)"
^XTMP("XPDT",7393,"RTN","XU8P509",29,0)=" S FDA(8932.1,""+1,"",1)=$P(XUD,""^"",3)"
^XTMP("XPDT",7393,"RTN","XU8P509",30,0)=" S FDA(8932.1,""+1,"",2)=$P(XUD,""^"",4)"
^XTMP("XPDT",7393,"RTN","XU8P509",31,0)=" S FDA(8932.1,""+1,"",3)=""a"""
^XTMP("XPDT",7393,"RTN","XU8P509",32,0)=" S FDA(8932.1,""+1,"",5)=$P(XUD,""^"",5)"
^XTMP("XPDT",7393,"RTN","XU8P509",33,0)=" S FDA(8932.1,""+1,"",6)=$P(XUD,""^"",6)"
^XTMP("XPDT",7393,"RTN","XU8P509",34,0)=" S FDA(8932.1,""+1,"",8)=$P(XUD,""^"",7)"
^XTMP("XPDT",7393,"RTN","XU8P509",35,0)=" S FDA(8932.1,""+1,"",90002)=$P(XUD,""^"",8)"
^XTMP("XPDT",7393,"RTN","XU8P509",36,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7393,"RTN","XU8P509",37,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509",38,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509",39,0)="DEL ; Delete entry"
^XTMP("XPDT",7393,"RTN","XU8P509",40,0)=" N XUI F XUI=1137:1:1152 D"
^XTMP("XPDT",7393,"RTN","XU8P509",41,0)=" . N DIK,DA S DIK=""^USC(8932.1,"",DA=XUI D ^DIK"
^XTMP("XPDT",7393,"RTN","XU8P509",42,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509",43,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509",44,0)="GET ;Get information of entries from the Person Class file"
^XTMP("XPDT",7393,"RTN","XU8P509",45,0)=" N XUI"
^XTMP("XPDT",7393,"RTN","XU8P509",46,0)=" F XUI=1137:1:1152 D GET1(XUI)"
^XTMP("XPDT",7393,"RTN","XU8P509",47,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509",48,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509",49,0)="GET1(XUIEN) ; Get information of given entry from Person Class file."
^XTMP("XPDT",7393,"RTN","XU8P509",50,0)=" N XUI"
^XTMP("XPDT",7393,"RTN","XU8P509",51,0)=" S XUI=$G(^USC(8932.1,XUIEN,0))"
^XTMP("XPDT",7393,"RTN","XU8P509",52,0)=" S XUI="" ;;""_XUIEN_""^""_$P(XUI,""^"",1,3)_""^""_$P(XUI,""^"",6,9) W !,XUI"
^XTMP("XPDT",7393,"RTN","XU8P509",53,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509",54,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509",55,0)="DATA ; information of entries from 1137-1152"
^XTMP("XPDT",7393,"RTN","XU8P509",56,0)=" ;;1137^Allopathic & Osteopathic Physicians^Family Medicine^Sleep Medicine^V180707^207QS1201X^08"
^XTMP("XPDT",7393,"RTN","XU8P509",57,0)=" ;;1138^Behavioral Health & Social Service Providers^Behavioral Analyst^^V010700^103K00000X"
^XTMP("XPDT",7393,"RTN","XU8P509",58,0)=" ;;1139^Respiratory, Rehabilitative and Restorative Service Providers^Occupational Therapist^Gerontology^V130110^225XG0600X^67"
^XTMP("XPDT",7393,"RTN","XU8P509",59,0)=" ;;1140^Respiratory, Rehabilitative and Restorative Service Providers^Occupational Therapist^Mental Health^V130111^225XM0800X^67"
^XTMP("XPDT",7393,"RTN","XU8P509",60,0)=" ;;1141^Respiratory, Rehabilitative and Restorative Service Providers^Occupational Therapist^Physical Rehabilitation^V130112^225XP0019X^67"
^XTMP("XPDT",7393,"RTN","XU8P509",61,0)=" ;;1142^Respiratory, Rehabilitative and Restorative Service Providers^Occupational Therapist^Environmental Modification^V130113^225XE0001X^67"
^XTMP("XPDT",7393,"RTN","XU8P509",62,0)=" ;;1143^Respiratory, Rehabilitative and Restorative Service Providers^Occupational Therapist^Feeding, Eating & Swallowing^V130114^225XF0002X^67"
^XTMP("XPDT",7393,"RTN","XU8P509",63,0)=" ;;1144^Respiratory, Rehabilitative and Restorative Service Providers^Occupational Therapist^Low Vision^V130115^225XL0004X^67"
^XTMP("XPDT",7393,"RTN","XU8P509",64,0)=" ;;1145^Respiratory, Rehabilitative and Restorative Service Providers^Occupational Therapy Assistant^Feeding, Eating & Swallowing^V130116^224ZF0002X^67"
^XTMP("XPDT",7393,"RTN","XU8P509",65,0)=" ;;1146^Respiratory, Rehabilitative and Restorative Service Providers^Occupational Therapy Assistant^Low Vision^V130117^224ZL0004X^67"
^XTMP("XPDT",7393,"RTN","XU8P509",66,0)=" ;;1147^Respiratory, Rehabilitative and Restorative Service Providers^Occupational Therapy Assistant^Driving & Community Mobility^V130118^224ZR0403X^67"
^XTMP("XPDT",7393,"RTN","XU8P509",67,0)=" ;;1148^Respiratory, Rehabilitative and Restorative Service Providers^Occupational Therapy Assistant^Environmental Modification^V130119^224ZE0001X^67"
^XTMP("XPDT",7393,"RTN","XU8P509",68,0)=" ;;1149^Technologists, Technicians & Other Technical Service Providers^Radiology Practitioner Assistant^^V153000^243U00000X^"
^XTMP("XPDT",7393,"RTN","XU8P509",69,0)=" ;;1150^Agencies^In Home Supportive Care^^^253Z00000X^^N"
^XTMP("XPDT",7393,"RTN","XU8P509",70,0)=" ;;1151^Behavioral Health & Social Service Providers^Psychologist^Health Psychologist^V010422^103TH0004X^68"
^XTMP("XPDT",7393,"RTN","XU8P509",71,0)=" ;;1152^Allopathic & Osteopathic Physicians^Physical Medicine & Rehabilitation^Hospice and Palliative Medicine^V182605^2081H0002X^25"
^XTMP("XPDT",7393,"RTN","XU8P509",72,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509A")="0^1^B52747738^n/a"
^XTMP("XPDT",7393,"RTN","XU8P509A",1,0)="XU8P509A ; BP/BDT - POST ROUTINE; 9/8/08"
^XTMP("XPDT",7393,"RTN","XU8P509A",2,0)=" ;;8.0;KERNEL;**509**;Jul 10, 1995;Build 1"
^XTMP("XPDT",7393,"RTN","XU8P509A",3,0)=" ;;""Per VHA Directive 2004-038, this routine should not be modified""."
^XTMP("XPDT",7393,"RTN","XU8P509A",4,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509A",5,0)="DEF ; Update definitions"
^XTMP("XPDT",7393,"RTN","XU8P509A",6,0)=" N XUI"
^XTMP("XPDT",7393,"RTN","XU8P509A",7,0)=" F XUI=911,762,775,774,776,783,845,846 D"
^XTMP("XPDT",7393,"RTN","XU8P509A",8,0)=" . D DEF1(XUI)"
^XTMP("XPDT",7393,"RTN","XU8P509A",9,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509A",10,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",11,0)="DEF1(XUI) ; Update definition for single entry XUI"
^XTMP("XPDT",7393,"RTN","XU8P509A",12,0)=" N XUI1,XUDATA,XUY"
^XTMP("XPDT",7393,"RTN","XU8P509A",13,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7393,"RTN","XU8P509A",14,0)=" F XUY=1:1:100 S XUDATA=$T(@XUI+XUY) Q:XUDATA="" ;;END""  D "
^XTMP("XPDT",7393,"RTN","XU8P509A",15,0)=" . S ^TMP($J,""XUBA"",XUI,XUY,0)=$P(XUDATA,"";;"",2)"
^XTMP("XPDT",7393,"RTN","XU8P509A",16,0)=" S XUI1=XUI_"","""
^XTMP("XPDT",7393,"RTN","XU8P509A",17,0)=" D WP^DIE(8932.1,XUI1,11,""K"",""^TMP($J,""""XUBA"""",XUI)"")"
^XTMP("XPDT",7393,"RTN","XU8P509A",18,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7393,"RTN","XU8P509A",19,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509A",20,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",21,0)="GETDATA ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",22,0)=" N XUI,XUY"
^XTMP("XPDT",7393,"RTN","XU8P509A",23,0)=" F XUI=911,762,775,774,776,783,845,846 D"
^XTMP("XPDT",7393,"RTN","XU8P509A",24,0)=" . S XUY=$G(^USC(8932.1,XUI,11,0)),XUY=$P(XUY,""^"",3)"
^XTMP("XPDT",7393,"RTN","XU8P509A",25,0)=" . I XUY>0 D GETDES(XUI,XUY)"
^XTMP("XPDT",7393,"RTN","XU8P509A",26,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509A",27,0)="GETDES(XUI,XUY) ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",28,0)=" N XUA,XUB"
^XTMP("XPDT",7393,"RTN","XU8P509A",29,0)=" W !,XUI,"" ;"""
^XTMP("XPDT",7393,"RTN","XU8P509A",30,0)=" F XUA=1:1:XUY W !,"" ;;"",$G(^USC(8932.1,XUI,11,XUA,0))"
^XTMP("XPDT",7393,"RTN","XU8P509A",31,0)=" W !,"" ;;END"""
^XTMP("XPDT",7393,"RTN","XU8P509A",32,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509A",33,0)=" ; information of definitions"
^XTMP("XPDT",7393,"RTN","XU8P509A",34,0)="911 ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",35,0)=" ;;Clinical pharmacology encompasses the spectrum of activities related to "
^XTMP("XPDT",7393,"RTN","XU8P509A",36,0)=" ;;the discovery, development, regulation, and utilization of safe and "
^XTMP("XPDT",7393,"RTN","XU8P509A",37,0)=" ;;effective drugs."
^XTMP("XPDT",7393,"RTN","XU8P509A",38,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",39,0)=" ;;Source: American Society for Clinical Pharmacology and Therapeutics, 2008"
^XTMP("XPDT",7393,"RTN","XU8P509A",40,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",41,0)=" ;;Additional Resources: "
^XTMP("XPDT",7393,"RTN","XU8P509A",42,0)=" ;;Clinical pharmacology is a recognized fellowship program for physicians, "
^XTMP("XPDT",7393,"RTN","XU8P509A",43,0)=" ;;pharmacists, and post-doctoral researchers delivered through medical "
^XTMP("XPDT",7393,"RTN","XU8P509A",44,0)=" ;;education institutions accredited by the American Board of Clinical "
^XTMP("XPDT",7393,"RTN","XU8P509A",45,0)=" ;;Pharmacology. http://www.ascpt.org/; American Board of Clinical "
^XTMP("XPDT",7393,"RTN","XU8P509A",46,0)=" ;;Pharmacology http://www.abcp.net/"
^XTMP("XPDT",7393,"RTN","XU8P509A",47,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509A",48,0)="762 ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",49,0)=" ;;Undersea & Hyperbaric Medicine Physician: a specialist who treats "
^XTMP("XPDT",7393,"RTN","XU8P509A",50,0)=" ;;decompression illness and diving accident cases and uses hyperbaric "
^XTMP("XPDT",7393,"RTN","XU8P509A",51,0)=" ;;oxygen therapy to treat such conditions as carbon monoxide poisoning, gas"
^XTMP("XPDT",7393,"RTN","XU8P509A",52,0)=" ;;gangrene, non-healing wounds, tissue damage from radiation and burns, and "
^XTMP("XPDT",7393,"RTN","XU8P509A",53,0)=" ;;bone infections. This specialist also serves as a consultant to other "
^XTMP("XPDT",7393,"RTN","XU8P509A",54,0)=" ;;physicians in all aspects of hyperbaric chamber operations, and assesses "
^XTMP("XPDT",7393,"RTN","XU8P509A",55,0)=" ;;risks and applies appropriate standards to prevent disease and disability "
^XTMP("XPDT",7393,"RTN","XU8P509A",56,0)=" ;;in divers and other persons working in altered atmospheric conditions."
^XTMP("XPDT",7393,"RTN","XU8P509A",57,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",58,0)=" ;;Source: American Board of Emergency Medicine"
^XTMP("XPDT",7393,"RTN","XU8P509A",59,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",60,0)=" ;;Additional Resources: www.abem.org & American Board of Preventive "
^XTMP("XPDT",7393,"RTN","XU8P509A",61,0)=" ;;Medicine www.abprevmed.org"
^XTMP("XPDT",7393,"RTN","XU8P509A",62,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509A",63,0)="775 ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",64,0)=" ;;An internist doctor of osteopathy that specializes in the treatment of "
^XTMP("XPDT",7393,"RTN","XU8P509A",65,0)=" ;;addiction disorders. A doctor of osteopathy that is board "
^XTMP("XPDT",7393,"RTN","XU8P509A",66,0)=" ;;eligible/certified by the American Osteopathic Board of Internal Medicine "
^XTMP("XPDT",7393,"RTN","XU8P509A",67,0)=" ;;can obtain a Certificate of Added Qualifications in the field of "
^XTMP("XPDT",7393,"RTN","XU8P509A",68,0)=" ;;Addiction Medicine."
^XTMP("XPDT",7393,"RTN","XU8P509A",69,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",70,0)=" ;;Source: American Osteopathic Board of Internal Medicine, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509A",71,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",72,0)=" ;;Additional Resources: "
^XTMP("XPDT",7393,"RTN","XU8P509A",73,0)=" ;;https://www.do-online.org/index.cfm?PageID=edu_main&au=D&SubSubPageID=crt_"
^XTMP("XPDT",7393,"RTN","XU8P509A",74,0)=" ;;speclist&SubPageID=crt_main"
^XTMP("XPDT",7393,"RTN","XU8P509A",75,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509A",76,0)="774 ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",77,0)=" ;;An internist doctor of osteopathy that specializes in the treatment of "
^XTMP("XPDT",7393,"RTN","XU8P509A",78,0)=" ;;allergy and immunologic disorders. A doctor of osteopathy that is board "
^XTMP("XPDT",7393,"RTN","XU8P509A",79,0)=" ;;eligible/certified by the American Osteopathic Board of Internal Medicine "
^XTMP("XPDT",7393,"RTN","XU8P509A",80,0)=" ;;can obtain a Certificate of Special Qualifications in the field of "
^XTMP("XPDT",7393,"RTN","XU8P509A",81,0)=" ;;Allergy & Immunology."
^XTMP("XPDT",7393,"RTN","XU8P509A",82,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",83,0)=" ;;Source: American Osteopathic Board of Internal Medicine, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509A",84,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",85,0)=" ;;Additional Resources: "
^XTMP("XPDT",7393,"RTN","XU8P509A",86,0)=" ;;https://www.do-online.org/index.cfm?PageID=edu_main&au=D&SubSubPageID=crt_"
^XTMP("XPDT",7393,"RTN","XU8P509A",87,0)=" ;;speclist&SubPageID=crt_main"
^XTMP("XPDT",7393,"RTN","XU8P509A",88,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509A",89,0)="776 ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",90,0)=" ;;An internist who specializes in diseases of the heart and blood vessels "
^XTMP("XPDT",7393,"RTN","XU8P509A",91,0)=" ;;and manages complex cardiac conditions such as heart attacks and "
^XTMP("XPDT",7393,"RTN","XU8P509A",92,0)=" ;;life-threatening, abnormal heartbeat rhythms."
^XTMP("XPDT",7393,"RTN","XU8P509A",93,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",94,0)=" ;;Source: American Osteopathic Board of Internal Medicine, 2008."
^XTMP("XPDT",7393,"RTN","XU8P509A",95,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",96,0)=" ;;Additional Resources: Board certification for Medical Doctors (MDs) is "
^XTMP("XPDT",7393,"RTN","XU8P509A",97,0)=" ;;provided by the American Board of Internal Medicine. Board certification "
^XTMP("XPDT",7393,"RTN","XU8P509A",98,0)=" ;;for Doctors of Osteopathy is provided by the American Osteopathic Board "
^XTMP("XPDT",7393,"RTN","XU8P509A",99,0)=" ;;of Internal Medicine."
^XTMP("XPDT",7393,"RTN","XU8P509A",100,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",101,0)=" ;;American Board of Medical Specialties, www.abms.org; American Board of "
^XTMP("XPDT",7393,"RTN","XU8P509A",102,0)=" ;;Internal Medicine, http://www.abim.org/. American Osteopathic Board of "
^XTMP("XPDT",7393,"RTN","XU8P509A",103,0)=" ;;Internal Medicine, "
^XTMP("XPDT",7393,"RTN","XU8P509A",104,0)=" ;;https://www.do-online.org/index.cfm?PageID=edu_main&au=D&SubSubPageID=crt_"
^XTMP("XPDT",7393,"RTN","XU8P509A",105,0)=" ;;speclist&SubPageID=crt_main"
^XTMP("XPDT",7393,"RTN","XU8P509A",106,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509A",107,0)="783 ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",108,0)=" ;;An internist doctor of osteopathy that specializes in the treatment of "
^XTMP("XPDT",7393,"RTN","XU8P509A",109,0)=" ;;the combination of hematology and oncology disorders. A doctor of "
^XTMP("XPDT",7393,"RTN","XU8P509A",110,0)=" ;;osteopathy that is board eligible/certified by the American Osteopathic "
^XTMP("XPDT",7393,"RTN","XU8P509A",111,0)=" ;;Board of Internal Medicine WAS able to obtain a Certificate of Special "
^XTMP("XPDT",7393,"RTN","XU8P509A",112,0)=" ;;Qualifications in the field of Hematology and Oncology. The Certificate "
^XTMP("XPDT",7393,"RTN","XU8P509A",113,0)=" ;;is NO longer offered."
^XTMP("XPDT",7393,"RTN","XU8P509A",114,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",115,0)=" ;;Source: American Osteopathic Board of Internal Medicine, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509A",116,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",117,0)=" ;;Additional Resources: "
^XTMP("XPDT",7393,"RTN","XU8P509A",118,0)=" ;;https://www.do-online.org/index.cfm?PageID=edu_main&au=D&SubSubPageID=crt_"
^XTMP("XPDT",7393,"RTN","XU8P509A",119,0)=" ;;speclist&SubPageID=crt_main"
^XTMP("XPDT",7393,"RTN","XU8P509A",120,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509A",121,0)="845 ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",122,0)=" ;;A developmental-behavioral specialist is a pediatrician with special "
^XTMP("XPDT",7393,"RTN","XU8P509A",123,0)=" ;;training and experience who aims to foster understanding and promotion of "
^XTMP("XPDT",7393,"RTN","XU8P509A",124,0)=" ;;optimal development of children and families through research, education, "
^XTMP("XPDT",7393,"RTN","XU8P509A",125,0)=" ;;clinical care and advocacy efforts. This physician assists in the "
^XTMP("XPDT",7393,"RTN","XU8P509A",126,0)=" ;;prevention, diagnosis, and management of developmental difficulties and "
^XTMP("XPDT",7393,"RTN","XU8P509A",127,0)=" ;;problematic behaviors in children and in the family dysfunctions that "
^XTMP("XPDT",7393,"RTN","XU8P509A",128,0)=" ;;compromise children's development. "
^XTMP("XPDT",7393,"RTN","XU8P509A",129,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",130,0)=" ;;Source: American Board of Medical Specialties, 2007. www.abms.org"
^XTMP("XPDT",7393,"RTN","XU8P509A",131,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",132,0)=" ;;Additional Resources: American Board of Pediatrics, 2007. "
^XTMP("XPDT",7393,"RTN","XU8P509A",133,0)=" ;;http://www.abp.org/."
^XTMP("XPDT",7393,"RTN","XU8P509A",134,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509A",135,0)=" ;;Board certification for Medical Doctors (MDs) is provided by the American "
^XTMP("XPDT",7393,"RTN","XU8P509A",136,0)=" ;;Board of Pediatrics."
^XTMP("XPDT",7393,"RTN","XU8P509A",137,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509A",138,0)="846 ;"
^XTMP("XPDT",7393,"RTN","XU8P509A",139,0)=" ;;A subspecialty certificate for MGG was approved by the ABMS in 1999. "
^XTMP("XPDT",7393,"RTN","XU8P509A",140,0)=" ;;ACGME Accredited Residency Program Requirements: Proposal under "
^XTMP("XPDT",7393,"RTN","XU8P509A",141,0)=" ;;development."
^XTMP("XPDT",7393,"RTN","XU8P509A",142,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509B")="0^2^B151640347^n/a"
^XTMP("XPDT",7393,"RTN","XU8P509B",1,0)="XU8P509B ; BP/BDT - POST ROUTINE; 9/8/08"
^XTMP("XPDT",7393,"RTN","XU8P509B",2,0)=" ;;8.0;KERNEL;**509**;Jul 10, 1995;Build 1"
^XTMP("XPDT",7393,"RTN","XU8P509B",3,0)=" ;;""Per VHA Directive 2004-038, this routine should not be modified""."
^XTMP("XPDT",7393,"RTN","XU8P509B",4,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509B",5,0)="DEF ; Update definitions"
^XTMP("XPDT",7393,"RTN","XU8P509B",6,0)=" N XUI"
^XTMP("XPDT",7393,"RTN","XU8P509B",7,0)=" F XUI=888,897,733,399,400,621,622,965 D"
^XTMP("XPDT",7393,"RTN","XU8P509B",8,0)=" . D DEF1(XUI)"
^XTMP("XPDT",7393,"RTN","XU8P509B",9,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509B",10,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",11,0)="DEF1(XUI) ; Update definition for single entry XUI"
^XTMP("XPDT",7393,"RTN","XU8P509B",12,0)=" N XUI1,XUDATA,XUY"
^XTMP("XPDT",7393,"RTN","XU8P509B",13,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7393,"RTN","XU8P509B",14,0)=" F XUY=1:1:100 S XUDATA=$T(@XUI+XUY) Q:XUDATA="" ;;END""  D "
^XTMP("XPDT",7393,"RTN","XU8P509B",15,0)=" . S ^TMP($J,""XUBA"",XUI,XUY,0)=$P(XUDATA,"";;"",2)"
^XTMP("XPDT",7393,"RTN","XU8P509B",16,0)=" S XUI1=XUI_"","""
^XTMP("XPDT",7393,"RTN","XU8P509B",17,0)=" D WP^DIE(8932.1,XUI1,11,""K"",""^TMP($J,""""XUBA"""",XUI)"")"
^XTMP("XPDT",7393,"RTN","XU8P509B",18,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7393,"RTN","XU8P509B",19,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509B",20,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",21,0)="GETDATA ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",22,0)=" N XUI,XUY"
^XTMP("XPDT",7393,"RTN","XU8P509B",23,0)=" F XUI=888,897,733,399,400,621,622,965 D"
^XTMP("XPDT",7393,"RTN","XU8P509B",24,0)=" . S XUY=$G(^USC(8932.1,XUI,11,0)),XUY=$P(XUY,""^"",3)"
^XTMP("XPDT",7393,"RTN","XU8P509B",25,0)=" . I XUY>0 D GETDES(XUI,XUY)"
^XTMP("XPDT",7393,"RTN","XU8P509B",26,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509B",27,0)="GETDES(XUI,XUY) ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",28,0)=" N XUA,XUB"
^XTMP("XPDT",7393,"RTN","XU8P509B",29,0)=" W !,XUI,"" ;"""
^XTMP("XPDT",7393,"RTN","XU8P509B",30,0)=" F XUA=1:1:XUY W !,"" ;;"",$G(^USC(8932.1,XUI,11,XUA,0))"
^XTMP("XPDT",7393,"RTN","XU8P509B",31,0)=" W !,"" ;;END"""
^XTMP("XPDT",7393,"RTN","XU8P509B",32,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509B",33,0)=" ; information of definitions"
^XTMP("XPDT",7393,"RTN","XU8P509B",34,0)="888 ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",35,0)=" ;;A Radiology doctor of Osteopathy that specializes in Body Imaging."
^XTMP("XPDT",7393,"RTN","XU8P509B",36,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509B",37,0)=" ;;Source: National Uniform Claim Committee, 2008"
^XTMP("XPDT",7393,"RTN","XU8P509B",38,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509B",39,0)=" ;;Additional Resources: The American Osteopathic Board of Radiology no "
^XTMP("XPDT",7393,"RTN","XU8P509B",40,0)=" ;;longer offers a certificate in this specialty."
^XTMP("XPDT",7393,"RTN","XU8P509B",41,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509B",42,0)="897 ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",43,0)=" ;;A Radiology doctor of Osteopathy that specializes in Diagnostic "
^XTMP("XPDT",7393,"RTN","XU8P509B",44,0)=" ;;Ultrasound."
^XTMP("XPDT",7393,"RTN","XU8P509B",45,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509B",46,0)=" ;;Source: National Uniform Claim Committee, 2008"
^XTMP("XPDT",7393,"RTN","XU8P509B",47,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509B",48,0)=" ;;Additional Resources: The American Osteopathic Board of Radiology no "
^XTMP("XPDT",7393,"RTN","XU8P509B",49,0)=" ;;longer offers a certificate in this specialty. [Note: In medical "
^XTMP("XPDT",7393,"RTN","XU8P509B",50,0)=" ;;practice, Diagnostic Ultrasound is part of the scope of training and "
^XTMP("XPDT",7393,"RTN","XU8P509B",51,0)=" ;;practice of a Diagnostic Radiologists - see Taxonomy Code 2085R0202X.]"
^XTMP("XPDT",7393,"RTN","XU8P509B",52,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509B",53,0)="733 ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",54,0)=" ;;Midwifery practice as conducted by certified nurse-midwives (CNMs) and "
^XTMP("XPDT",7393,"RTN","XU8P509B",55,0)=" ;;certified midwives (CMs) is the independent management of women's health "
^XTMP("XPDT",7393,"RTN","XU8P509B",56,0)=" ;;care, focusing particularly on pregnancy, childbirth, the post partum "
^XTMP("XPDT",7393,"RTN","XU8P509B",57,0)=" ;;period, care of the newborn, and the family planning and gynecologic "
^XTMP("XPDT",7393,"RTN","XU8P509B",58,0)=" ;;needs of women. The CNM and CM practice within a health care system that "
^XTMP("XPDT",7393,"RTN","XU8P509B",59,0)=" ;;provides for consultation, collaborative management, or referral, as "
^XTMP("XPDT",7393,"RTN","XU8P509B",60,0)=" ;;indicated by the health status of the client. CNMs and CMs practice in "
^XTMP("XPDT",7393,"RTN","XU8P509B",61,0)=" ;;accord with the Standards for the Practice of Midwifery, as defined by "
^XTMP("XPDT",7393,"RTN","XU8P509B",62,0)=" ;;the American College of Nurse-Midwives (ACNM)."
^XTMP("XPDT",7393,"RTN","XU8P509B",63,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509B",64,0)=" ;;Source: American College of Nurse-Midwives, 2008"
^XTMP("XPDT",7393,"RTN","XU8P509B",65,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509B",66,0)=" ;;Additional Resources: American College of Nurse-Midwives www.acnm.org. "
^XTMP("XPDT",7393,"RTN","XU8P509B",67,0)=" ;;The American Midwifery Certification Board, Inc. [AMCB, formerly the ACNM "
^XTMP("XPDT",7393,"RTN","XU8P509B",68,0)=" ;;Certification Council, Inc. (ACC)] opened its national certification exam "
^XTMP("XPDT",7393,"RTN","XU8P509B",69,0)=" ;;to non-nurse graduates of midwifery education programs and issued the "
^XTMP("XPDT",7393,"RTN","XU8P509B",70,0)=" ;;first certified midwife (CM) credential in 1997. Certified midwives are "
^XTMP("XPDT",7393,"RTN","XU8P509B",71,0)=" ;;educated to meet the same high standards that certified nurse-midwives "
^XTMP("XPDT",7393,"RTN","XU8P509B",72,0)=" ;;must meet. These are the standards that every state in the U.S. has "
^XTMP("XPDT",7393,"RTN","XU8P509B",73,0)=" ;;recognized as the legal basis for nurse-midwifery practice. All education "
^XTMP("XPDT",7393,"RTN","XU8P509B",74,0)=" ;;programs for CMs, like CNMs, award a post-baccalaureate certificate or "
^XTMP("XPDT",7393,"RTN","XU8P509B",75,0)=" ;;higher degree. CMs take the same AMCB certification exam as CNMs and "
^XTMP("XPDT",7393,"RTN","XU8P509B",76,0)=" ;;study side by side with nurse-midwifery students in some education "
^XTMP("XPDT",7393,"RTN","XU8P509B",77,0)=" ;;programs. As an organization, ACNM supports efforts to legally recognize "
^XTMP("XPDT",7393,"RTN","XU8P509B",78,0)=" ;;CMs as qualified midwifery practitioners granted the same rights and "
^XTMP("XPDT",7393,"RTN","XU8P509B",79,0)=" ;;responsibilities as CNMs."
^XTMP("XPDT",7393,"RTN","XU8P509B",80,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509B",81,0)="399 ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",82,0)=" ;;An occupational therapist is a person who has graduated from an "
^XTMP("XPDT",7393,"RTN","XU8P509B",83,0)=" ;;entry-level occupational therapy program accredited by the Accreditation "
^XTMP("XPDT",7393,"RTN","XU8P509B",84,0)=" ;;Council for Occupational Therapy Education (ACOTE) or predecessor "
^XTMP("XPDT",7393,"RTN","XU8P509B",85,0)=" ;;organizations, or approved by the World Federation of Occupational "
^XTMP("XPDT",7393,"RTN","XU8P509B",86,0)=" ;;Therapists (WFOT), or an equivalent international occupational therapy "
^XTMP("XPDT",7393,"RTN","XU8P509B",87,0)=" ;;education program; has successfully completed a period of supervised "
^XTMP("XPDT",7393,"RTN","XU8P509B",88,0)=" ;;fieldwork experience required by the occupational therapy program; has "
^XTMP("XPDT",7393,"RTN","XU8P509B",89,0)=" ;;passed a nationally recognized entry-level examination for occupational "
^XTMP("XPDT",7393,"RTN","XU8P509B",90,0)=" ;;therapists, and fulfills state requirements for licensure, certification, "
^XTMP("XPDT",7393,"RTN","XU8P509B",91,0)=" ;;or registration. An occupational therapist provides interventions based "
^XTMP("XPDT",7393,"RTN","XU8P509B",92,0)=" ;;on evaluation and which emphasize the therapeutic use of everyday life "
^XTMP("XPDT",7393,"RTN","XU8P509B",93,0)=" ;;activities (i.e., occupations) with individuals or groups for the purpose "
^XTMP("XPDT",7393,"RTN","XU8P509B",94,0)=" ;;of facilitating participation in roles and situations and in home, "
^XTMP("XPDT",7393,"RTN","XU8P509B",95,0)=" ;;school, workplace, community and other settings. Occupational therapy "
^XTMP("XPDT",7393,"RTN","XU8P509B",96,0)=" ;;services are provided for the purpose of promoting health and wellness "
^XTMP("XPDT",7393,"RTN","XU8P509B",97,0)=" ;;and are provided to those who have or are at risk for developing an "
^XTMP("XPDT",7393,"RTN","XU8P509B",98,0)=" ;;illness, injury, disease, disorder, condition, impairment, disability, "
^XTMP("XPDT",7393,"RTN","XU8P509B",99,0)=" ;;activity limitation, or participation restriction. Occupational "
^XTMP("XPDT",7393,"RTN","XU8P509B",100,0)=" ;;therapists address the physical, cognitive, psychosocial, sensory, and "
^XTMP("XPDT",7393,"RTN","XU8P509B",101,0)=" ;;other aspects of occupational performance in a variety of contexts to "
^XTMP("XPDT",7393,"RTN","XU8P509B",102,0)=" ;;support engagement in everyday life activities that affect health, "
^XTMP("XPDT",7393,"RTN","XU8P509B",103,0)=" ;;well-being, and quality of life."
^XTMP("XPDT",7393,"RTN","XU8P509B",104,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509B",105,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509B",106,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509B",107,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509B",108,0)="400 ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",109,0)=" ;;An occupational therapy assistant is a person who has graduated from an "
^XTMP("XPDT",7393,"RTN","XU8P509B",110,0)=" ;;occupational therapy assistant program accredited by the Accreditation "
^XTMP("XPDT",7393,"RTN","XU8P509B",111,0)=" ;;Council for Occupational Therapy Education (ACOTE) or predecessor "
^XTMP("XPDT",7393,"RTN","XU8P509B",112,0)=" ;;organizations, has successfully completed a period of supervised "
^XTMP("XPDT",7393,"RTN","XU8P509B",113,0)=" ;;fieldwork experience required by the accredited occupational therapy "
^XTMP("XPDT",7393,"RTN","XU8P509B",114,0)=" ;;assistant program, has passed a nationally recognized entry-level "
^XTMP("XPDT",7393,"RTN","XU8P509B",115,0)=" ;;examination for occupational therapy assistants, and fulfills state "
^XTMP("XPDT",7393,"RTN","XU8P509B",116,0)=" ;;requirements for licensure, certification, or registration. An "
^XTMP("XPDT",7393,"RTN","XU8P509B",117,0)=" ;;occupational therapy assistant provides interventions under the "
^XTMP("XPDT",7393,"RTN","XU8P509B",118,0)=" ;;supervision of an occupational therapist which emphasize the therapeutic "
^XTMP("XPDT",7393,"RTN","XU8P509B",119,0)=" ;;use of everyday life activities (i.e., occupations) with individuals or "
^XTMP("XPDT",7393,"RTN","XU8P509B",120,0)=" ;;groups for the purpose of facilitating participation in roles and "
^XTMP("XPDT",7393,"RTN","XU8P509B",121,0)=" ;;situations and in home, school, workplace, community and other settings. "
^XTMP("XPDT",7393,"RTN","XU8P509B",122,0)=" ;;Occupational therapy services are provided for the purpose of promoting "
^XTMP("XPDT",7393,"RTN","XU8P509B",123,0)=" ;;health and wellness and are provided to those who have or are at risk for "
^XTMP("XPDT",7393,"RTN","XU8P509B",124,0)=" ;;developing an illness, injury, disease, disorder, condition, impairment, "
^XTMP("XPDT",7393,"RTN","XU8P509B",125,0)=" ;;disability, activity limitation, or participation restriction. "
^XTMP("XPDT",7393,"RTN","XU8P509B",126,0)=" ;;Occupational therapy assistants address the physical, cognitive, "
^XTMP("XPDT",7393,"RTN","XU8P509B",127,0)=" ;;psychosocial, sensory, and other aspects of occupational performance in a "
^XTMP("XPDT",7393,"RTN","XU8P509B",128,0)=" ;;variety of contexts to support engagement in everyday life activities "
^XTMP("XPDT",7393,"RTN","XU8P509B",129,0)=" ;;that affect health, well-being, and quality of life."
^XTMP("XPDT",7393,"RTN","XU8P509B",130,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509B",131,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509B",132,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509B",133,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509B",134,0)="621 ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",135,0)=" ;;Occupational therapists provide services to infants, toddlers and "
^XTMP("XPDT",7393,"RTN","XU8P509B",136,0)=" ;;children who have or who are at risk for developmental delays or "
^XTMP("XPDT",7393,"RTN","XU8P509B",137,0)=" ;;disabilities. Occupational therapy is concerned with a child's ability to "
^XTMP("XPDT",7393,"RTN","XU8P509B",138,0)=" ;;participate in daily life activities or ""occupations."" Occupational "
^XTMP("XPDT",7393,"RTN","XU8P509B",139,0)=" ;;therapists use their unique expertise to help children with "
^XTMP("XPDT",7393,"RTN","XU8P509B",140,0)=" ;;social-emotional, physical, cognitive, communication, and adaptive "
^XTMP("XPDT",7393,"RTN","XU8P509B",141,0)=" ;;behavioral challenges and to help children to be prepared for and perform "
^XTMP("XPDT",7393,"RTN","XU8P509B",142,0)=" ;;important learning and school-related activities and to fulfill their "
^XTMP("XPDT",7393,"RTN","XU8P509B",143,0)=" ;;rule as students. Through an understanding of the impact of disability, "
^XTMP("XPDT",7393,"RTN","XU8P509B",144,0)=" ;;illness, and impairment on a child's development, plan, ability to learn "
^XTMP("XPDT",7393,"RTN","XU8P509B",145,0)=" ;;new skills, and overall occupational performance, occupational therapists "
^XTMP("XPDT",7393,"RTN","XU8P509B",146,0)=" ;;design interventions that promote healthy development, establish needed "
^XTMP("XPDT",7393,"RTN","XU8P509B",147,0)=" ;;skills, and/or modify environments, all in support of participation in "
^XTMP("XPDT",7393,"RTN","XU8P509B",148,0)=" ;;daily activities."
^XTMP("XPDT",7393,"RTN","XU8P509B",149,0)=" ;;"
^XTMP("XPDT",7393,"RTN","XU8P509B",150,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509B",151,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509B",152,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509B",153,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509B",154,0)=" ;;(AOTA) does offer voluntary board certification for a Pediatric "
^XTMP("XPDT",7393,"RTN","XU8P509B",155,0)=" ;;Occupational Therapist if the applicant meets the following requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509B",156,0)=" ;;    .   Professional degree or equivalent in occupational therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509B",157,0)=" ;;    .   Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509B",158,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509B",159,0)=" ;;    .   Minimum of 5 years of practice as an occupational therapist. "
^XTMP("XPDT",7393,"RTN","XU8P509B",160,0)=" ;;    .   Minimum of 5,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509B",161,0)=" ;;        in the certification area in the last 7 calendar years. "
^XTMP("XPDT",7393,"RTN","XU8P509B",162,0)=" ;;    .   Minimum of 500 hours of experience delivering occupational "
^XTMP("XPDT",7393,"RTN","XU8P509B",163,0)=" ;;        therapy services in the certification area to clients"
^XTMP("XPDT",7393,"RTN","XU8P509B",164,0)=" ;;        (individuals, groups, or populations) in the last 5 calendar"
^XTMP("XPDT",7393,"RTN","XU8P509B",165,0)=" ;;        years. Service delivery may be paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509B",166,0)=" ;;    .   Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509B",167,0)=" ;;AOTA Specialized Knowledge and Skills Paper: Occupational Therapy "
^XTMP("XPDT",7393,"RTN","XU8P509B",168,0)=" ;;Practice in the Neonatal Intensive Care Unity (2006); AOTA Fact Sheets: "
^XTMP("XPDT",7393,"RTN","XU8P509B",169,0)=" ;;Children and the Tsunami, OT for Children Birth to 3 Years of Age, OT's "
^XTMP("XPDT",7393,"RTN","XU8P509B",170,0)=" ;;Role with Autism, OT in Educational Settings Under the Individuals with "
^XTMP("XPDT",7393,"RTN","XU8P509B",171,0)=" ;;Disabilities Education Act, Transforming Caseload to Workload in School "
^XTMP("XPDT",7393,"RTN","XU8P509B",172,0)=" ;;Based and Early Intervention OT Services, OT in Preschool Settings. "
^XTMP("XPDT",7393,"RTN","XU8P509B",173,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509B",174,0)="622 ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",175,0)=" ;;Occupational therapists can optimize and prolong an older driver's "
^XTMP("XPDT",7393,"RTN","XU8P509B",176,0)=" ;;ability to drive safely and ease the transition to other forms of "
^XTMP("XPDT",7393,"RTN","XU8P509B",177,0)=" ;;transportation if driving cessation becomes necessary. By identifying "
^XTMP("XPDT",7393,"RTN","XU8P509B",178,0)=" ;;strengths as well as physical or cognitive challenges, occupational "
^XTMP("XPDT",7393,"RTN","XU8P509B",179,0)=" ;;therapists can evaluate an individual's overall ability to operate a "
^XTMP("XPDT",7393,"RTN","XU8P509B",180,0)=" ;;vehicle safely and recommend assistive devices or behavioral changes to "
^XTMP("XPDT",7393,"RTN","XU8P509B",181,0)=" ;;limit risks. Occupational therapy practitioners offer a continuum of "
^XTMP("XPDT",7393,"RTN","XU8P509B",182,0)=" ;;services related to community mobility, from evaluation of driving "
^XTMP("XPDT",7393,"RTN","XU8P509B",183,0)=" ;;performance, through counseling and support for lifestyle changes, to "
^XTMP("XPDT",7393,"RTN","XU8P509B",184,0)=" ;;maintaining independence and quality of life."
^XTMP("XPDT",7393,"RTN","XU8P509B",185,0)=" ;;"
^XTMP("XPDT",7393,"RTN","XU8P509B",186,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509B",187,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509B",188,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509B",189,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509B",190,0)=" ;;(AOTA) does offer voluntary specialty certification for a Driving & "
^XTMP("XPDT",7393,"RTN","XU8P509B",191,0)=" ;;Community Mobility Occupational Therapist if the applicant meets the "
^XTMP("XPDT",7393,"RTN","XU8P509B",192,0)=" ;;following requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509B",193,0)=" ;;    .   Professional or technical degree or equivalent in occupational "
^XTMP("XPDT",7393,"RTN","XU8P509B",194,0)=" ;;        therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509B",195,0)=" ;;    .   Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509B",196,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509B",197,0)=" ;;    .   Minimum of 2,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509B",198,0)=" ;;        or occupational therapy assistant. "
^XTMP("XPDT",7393,"RTN","XU8P509B",199,0)=" ;;    .   600 hours of experience delivering occupational therapy services "
^XTMP("XPDT",7393,"RTN","XU8P509B",200,0)=" ;;        in the certification area to clients (individuals, groups, or "
^XTMP("XPDT",7393,"RTN","XU8P509B",201,0)=" ;;        populations) in the last 3 calendar years. Service delivery may be"
^XTMP("XPDT",7393,"RTN","XU8P509B",202,0)=" ;;        paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509B",203,0)=" ;;    .   Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509B",204,0)=" ;;AOTA Fact Sheets: Older Driver"
^XTMP("XPDT",7393,"RTN","XU8P509B",205,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509B",206,0)="965 ;"
^XTMP("XPDT",7393,"RTN","XU8P509B",207,0)=" ;;A Nursing Care Agency is an entity that provides skilled nursing care "
^XTMP("XPDT",7393,"RTN","XU8P509B",208,0)=" ;;through the services of a Registered Nurse (RN) or a Licensed Practical "
^XTMP("XPDT",7393,"RTN","XU8P509B",209,0)=" ;;Nurse (LPN), by employees, contracted individuals, or via a registry, in "
^XTMP("XPDT",7393,"RTN","XU8P509B",210,0)=" ;;a variety of settings. The agency may engage in providing private duty "
^XTMP("XPDT",7393,"RTN","XU8P509B",211,0)=" ;;nursing and/or staffing services."
^XTMP("XPDT",7393,"RTN","XU8P509B",212,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509B",213,0)=" ;;Source: National Uniform Claim Committee, 2008"
^XTMP("XPDT",7393,"RTN","XU8P509B",214,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509C")="0^3^B195990177^n/a"
^XTMP("XPDT",7393,"RTN","XU8P509C",1,0)="XU8P509C ; BP/BDT - Update definition field; 9/8/08"
^XTMP("XPDT",7393,"RTN","XU8P509C",2,0)=" ;;8.0;KERNEL;**509**;Jul 10, 1995;Build 1"
^XTMP("XPDT",7393,"RTN","XU8P509C",3,0)=" ;;""Per VHA Directive 2004-038, this routine should not be modified""."
^XTMP("XPDT",7393,"RTN","XU8P509C",4,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509C",5,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",6,0)="DEF ; Update definitions for entries 1137-1144"
^XTMP("XPDT",7393,"RTN","XU8P509C",7,0)=" N XUI"
^XTMP("XPDT",7393,"RTN","XU8P509C",8,0)=" F XUI=1137:1:1144 D"
^XTMP("XPDT",7393,"RTN","XU8P509C",9,0)=" . D DEF1(XUI)"
^XTMP("XPDT",7393,"RTN","XU8P509C",10,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509C",11,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",12,0)="DEF1(XUI) ; Update definition for single entry XUI"
^XTMP("XPDT",7393,"RTN","XU8P509C",13,0)=" N XUI1,XUDATA,XUY"
^XTMP("XPDT",7393,"RTN","XU8P509C",14,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7393,"RTN","XU8P509C",15,0)=" F XUY=1:1:100 S XUDATA=$T(@XUI+XUY) Q:XUDATA="" ;;END""  D "
^XTMP("XPDT",7393,"RTN","XU8P509C",16,0)=" . S ^TMP($J,""XUBA"",XUI,XUY,0)=$P(XUDATA,"";;"",2)"
^XTMP("XPDT",7393,"RTN","XU8P509C",17,0)=" S XUI1=XUI_"","""
^XTMP("XPDT",7393,"RTN","XU8P509C",18,0)=" D WP^DIE(8932.1,XUI1,11,""K"",""^TMP($J,""""XUBA"""",XUI)"")"
^XTMP("XPDT",7393,"RTN","XU8P509C",19,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7393,"RTN","XU8P509C",20,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509C",21,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",22,0)="GETDATA ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",23,0)=" N XUI,XUY"
^XTMP("XPDT",7393,"RTN","XU8P509C",24,0)=" F XUI=1137:1:1144 D"
^XTMP("XPDT",7393,"RTN","XU8P509C",25,0)=" . S XUY=$G(^USC(8932.1,XUI,11,0)),XUY=$P(XUY,""^"",3)"
^XTMP("XPDT",7393,"RTN","XU8P509C",26,0)=" . I XUY>0 D GETDES^XU8P509A(XUI,XUY)"
^XTMP("XPDT",7393,"RTN","XU8P509C",27,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509C",28,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",29,0)="1137 ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",30,0)=" ;;A Family Medicine Physician who practices Sleep Medicine is certified in "
^XTMP("XPDT",7393,"RTN","XU8P509C",31,0)=" ;;the subspecialty of sleep medicine and specializes in the clinical "
^XTMP("XPDT",7393,"RTN","XU8P509C",32,0)=" ;;assessment, physiologic testing, diagnosis, management and prevention of "
^XTMP("XPDT",7393,"RTN","XU8P509C",33,0)=" ;;sleep and circadian rhythm disorders. Sleep specialists treat patients of "
^XTMP("XPDT",7393,"RTN","XU8P509C",34,0)=" ;;any age and use multidisciplinary approaches. Disorders managed by sleep "
^XTMP("XPDT",7393,"RTN","XU8P509C",35,0)=" ;;specialists include, but are not limited to, sleep related breathing "
^XTMP("XPDT",7393,"RTN","XU8P509C",36,0)=" ;;disorders, insomnia, hypersomnias, circadian rhythm sleep disorders, "
^XTMP("XPDT",7393,"RTN","XU8P509C",37,0)=" ;;parasomnias and sleep related movement disorders."
^XTMP("XPDT",7393,"RTN","XU8P509C",38,0)=" ;;American Academy of Sleep Medicine, 2008"
^XTMP("XPDT",7393,"RTN","XU8P509C",39,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509C",40,0)="1138 ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",41,0)=" ;;A Behavior Analyst is a practitioner who specializes in analysis of "
^XTMP("XPDT",7393,"RTN","XU8P509C",42,0)=" ;;behavior problems and development of appropriate intervention and "
^XTMP("XPDT",7393,"RTN","XU8P509C",43,0)=" ;;treatment plans. A Behavior Analyst may work independently or with a team "
^XTMP("XPDT",7393,"RTN","XU8P509C",44,0)=" ;;of professionals. Behavior Analysts often specialize in a particular area "
^XTMP("XPDT",7393,"RTN","XU8P509C",45,0)=" ;;such as autism, developmental disabilities, mental health, geriatrics, or "
^XTMP("XPDT",7393,"RTN","XU8P509C",46,0)=" ;;head trauma."
^XTMP("XPDT",7393,"RTN","XU8P509C",47,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",48,0)=" ;;Source: National Uniform Claim Committee"
^XTMP("XPDT",7393,"RTN","XU8P509C",49,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",50,0)=" ;;Additional Resources: Behavior Analysts may become Board Certified "
^XTMP("XPDT",7393,"RTN","XU8P509C",51,0)=" ;;Behavioral Analysts (BCBA) through the Behavior Analysis Certification "
^XTMP("XPDT",7393,"RTN","XU8P509C",52,0)=" ;;Board (BACB) www.bacb.com"
^XTMP("XPDT",7393,"RTN","XU8P509C",53,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509C",54,0)="1139 ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",55,0)=" ;;Occupational therapists work with older adults in virtually every "
^XTMP("XPDT",7393,"RTN","XU8P509C",56,0)=" ;;setting: assisted living, wellness programs, hospitals, nursing homes, "
^XTMP("XPDT",7393,"RTN","XU8P509C",57,0)=" ;;senior centers, clinics and in the home. Occupational therapists bring an "
^XTMP("XPDT",7393,"RTN","XU8P509C",58,0)=" ;;understanding of the importance of participation and occupation for "
^XTMP("XPDT",7393,"RTN","XU8P509C",59,0)=" ;;overall well-being to those who are experiencing disabling conditions "
^XTMP("XPDT",7393,"RTN","XU8P509C",60,0)=" ;;related to aging. The primary overarching goal of occupational therapy "
^XTMP("XPDT",7393,"RTN","XU8P509C",61,0)=" ;;services with this population is to maximize independence and "
^XTMP("XPDT",7393,"RTN","XU8P509C",62,0)=" ;;participation, thereby enabling an older person to continue to live "
^XTMP("XPDT",7393,"RTN","XU8P509C",63,0)=" ;;successfully in his or her chosen environment. Occupational therapists "
^XTMP("XPDT",7393,"RTN","XU8P509C",64,0)=" ;;can help older adults by developing strategies to help or maintain safety "
^XTMP("XPDT",7393,"RTN","XU8P509C",65,0)=" ;;and well-being, to assist with life transitions, and to compensate for "
^XTMP("XPDT",7393,"RTN","XU8P509C",66,0)=" ;;challenges they experience in activities of daily living, instrumental "
^XTMP("XPDT",7393,"RTN","XU8P509C",67,0)=" ;;activities of daily living, leisure participation, social participation, "
^XTMP("XPDT",7393,"RTN","XU8P509C",68,0)=" ;;and productive activities."
^XTMP("XPDT",7393,"RTN","XU8P509C",69,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",70,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509C",71,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509C",72,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",73,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509C",74,0)=" ;;(AOTA) does offer voluntary board certification for a Gerontology "
^XTMP("XPDT",7393,"RTN","XU8P509C",75,0)=" ;;Occupational Therapist if the applicant meets the following requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509C",76,0)=" ;;     .  Professional degree or equivalent in occupational therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509C",77,0)=" ;;     .  Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509C",78,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509C",79,0)=" ;;     .  Minimum of 5 years of practice as an occupational therapist. "
^XTMP("XPDT",7393,"RTN","XU8P509C",80,0)=" ;;     .  Minimum of 5,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509C",81,0)=" ;;        in the certification area in the last 7 calendar years. "
^XTMP("XPDT",7393,"RTN","XU8P509C",82,0)=" ;;     .  Minimum of 500 hours of experience delivering occupational "
^XTMP("XPDT",7393,"RTN","XU8P509C",83,0)=" ;;        therapy services in the certification area to clients"
^XTMP("XPDT",7393,"RTN","XU8P509C",84,0)=" ;;        (individuals, groups, or populations) in the last 5 calendar"
^XTMP("XPDT",7393,"RTN","XU8P509C",85,0)=" ;;        years. Service delivery may be paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509C",86,0)=" ;;     .  Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509C",87,0)=" ;;AOTA Fact Sheets: Senior Center and Assisted Living Facilities "
^XTMP("XPDT",7393,"RTN","XU8P509C",88,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509C",89,0)="1140 ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",90,0)=" ;;Occupational therapists provide treatment for people recovering from a "
^XTMP("XPDT",7393,"RTN","XU8P509C",91,0)=" ;;mental or physical illness to regain their independence and stability and "
^XTMP("XPDT",7393,"RTN","XU8P509C",92,0)=" ;;to engage in normal daily occupations (work, home, family life, school, "
^XTMP("XPDT",7393,"RTN","XU8P509C",93,0)=" ;;leisure). Occupational therapists provide particular emphasis on "
^XTMP("XPDT",7393,"RTN","XU8P509C",94,0)=" ;;interventions that result in improved quality of life and decrease "
^XTMP("XPDT",7393,"RTN","XU8P509C",95,0)=" ;;hospitalization."
^XTMP("XPDT",7393,"RTN","XU8P509C",96,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",97,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509C",98,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509C",99,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",100,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509C",101,0)=" ;;(AOTA) does offer voluntary board certification for a Mental Health "
^XTMP("XPDT",7393,"RTN","XU8P509C",102,0)=" ;;Occupational Therapist if the applicant meets the following requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509C",103,0)=" ;;     .  Professional degree or equivalent in occupational therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509C",104,0)=" ;;     .  Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509C",105,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509C",106,0)=" ;;     .  Minimum of 5 years of practice as an occupational therapist. "
^XTMP("XPDT",7393,"RTN","XU8P509C",107,0)=" ;;     .  Minimum of 5,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509C",108,0)=" ;;        in the certification area in the last 7 calendar years. "
^XTMP("XPDT",7393,"RTN","XU8P509C",109,0)=" ;;     .  Minimum of 500 hours of experience delivering occupational "
^XTMP("XPDT",7393,"RTN","XU8P509C",110,0)=" ;;        therapy services in the certification area to clients"
^XTMP("XPDT",7393,"RTN","XU8P509C",111,0)=" ;;        (individuals, groups, or populations) in the last 5 calendar"
^XTMP("XPDT",7393,"RTN","XU8P509C",112,0)=" ;;        years. Service delivery may be paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509C",113,0)=" ;;     .  Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509C",114,0)=" ;;AOTA Fact Sheets: Partial Hospitalization Programs and Consumer "
^XTMP("XPDT",7393,"RTN","XU8P509C",115,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509C",116,0)="1141 ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",117,0)=" ;;Occupational therapists are experts at helping people lead as independent "
^XTMP("XPDT",7393,"RTN","XU8P509C",118,0)=" ;;a life as possible. Occupational therapists bring an understanding of the "
^XTMP("XPDT",7393,"RTN","XU8P509C",119,0)=" ;;physical and psychological implications of illness and injury and their "
^XTMP("XPDT",7393,"RTN","XU8P509C",120,0)=" ;;effects on peoples' ability to perform the tasks of daily living. "
^XTMP("XPDT",7393,"RTN","XU8P509C",121,0)=" ;;Occupational therapists provide interventions that can aide a person in "
^XTMP("XPDT",7393,"RTN","XU8P509C",122,0)=" ;;completing ADL and IADL tasks, such as dressing, bathing, preparing "
^XTMP("XPDT",7393,"RTN","XU8P509C",123,0)=" ;;meals, and driving. They also may fabricate custom orthotics to improve "
^XTMP("XPDT",7393,"RTN","XU8P509C",124,0)=" ;;function, evaluate the environment for safety hazards and recommend "
^XTMP("XPDT",7393,"RTN","XU8P509C",125,0)=" ;;adaptations to remove those hazards, help a person compensate for "
^XTMP("XPDT",7393,"RTN","XU8P509C",126,0)=" ;;cognitive changes, and build a persons' physical endurance and strength. "
^XTMP("XPDT",7393,"RTN","XU8P509C",127,0)=" ;;Occupational therapists' knowledge of adapting tasks and modifying the "
^XTMP("XPDT",7393,"RTN","XU8P509C",128,0)=" ;;environment to compensate for functional limitations is used to increase "
^XTMP("XPDT",7393,"RTN","XU8P509C",129,0)=" ;;the involvement of clients and to promote safety and success."
^XTMP("XPDT",7393,"RTN","XU8P509C",130,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",131,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509C",132,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509C",133,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",134,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509C",135,0)=" ;;(AOTA) does offer voluntary board certification for a Physical "
^XTMP("XPDT",7393,"RTN","XU8P509C",136,0)=" ;;Rehabilitation Occupational Therapist if the applicant meets the "
^XTMP("XPDT",7393,"RTN","XU8P509C",137,0)=" ;;following requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509C",138,0)=" ;;     .  Professional degree or equivalent in occupational therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509C",139,0)=" ;;     .  Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509C",140,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509C",141,0)=" ;;     .  Minimum of 5 years of practice as an occupational therapist. "
^XTMP("XPDT",7393,"RTN","XU8P509C",142,0)=" ;;     .  Minimum of 5,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509C",143,0)=" ;;        in the certification area in the last 7 calendar years. "
^XTMP("XPDT",7393,"RTN","XU8P509C",144,0)=" ;;     .  Minimum of 500 hours of experience delivering occupational "
^XTMP("XPDT",7393,"RTN","XU8P509C",145,0)=" ;;        therapy services in the certification area to clients"
^XTMP("XPDT",7393,"RTN","XU8P509C",146,0)=" ;;        (individuals, groups, or populations) in the last 5 calendar"
^XTMP("XPDT",7393,"RTN","XU8P509C",147,0)=" ;;        years. Service delivery may be paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509C",148,0)=" ;;     .  Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509C",149,0)=" ;;AOTA Consumer Tip Sheets: Stroke, Hip"
^XTMP("XPDT",7393,"RTN","XU8P509C",150,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509C",151,0)="1142 ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",152,0)=" ;;Occupational therapy practitioners are experts at identifying the cause "
^XTMP("XPDT",7393,"RTN","XU8P509C",153,0)=" ;;of difficulties in performance of activities of daily living and "
^XTMP("XPDT",7393,"RTN","XU8P509C",154,0)=" ;;instrumental activities of daily living. Occupational therapy "
^XTMP("XPDT",7393,"RTN","XU8P509C",155,0)=" ;;practitioners evaluate the client, their environment, and their "
^XTMP("XPDT",7393,"RTN","XU8P509C",156,0)=" ;;occupational performance in that environment, as well as make "
^XTMP("XPDT",7393,"RTN","XU8P509C",157,0)=" ;;recommendations for products to improve the fit between the client, "
^XTMP("XPDT",7393,"RTN","XU8P509C",158,0)=" ;;place, and activity. Occupational therapists can evaluate both the skills "
^XTMP("XPDT",7393,"RTN","XU8P509C",159,0)=" ;;of the client and the environmental features that support or limit the "
^XTMP("XPDT",7393,"RTN","XU8P509C",160,0)=" ;;performance of meaningful or necessary activities, thereby enhancing "
^XTMP("XPDT",7393,"RTN","XU8P509C",161,0)=" ;;health, safety and well-being. Based on this assessment, they recommend "
^XTMP("XPDT",7393,"RTN","XU8P509C",162,0)=" ;;modification and intervention strategies that improve the fit between the "
^XTMP("XPDT",7393,"RTN","XU8P509C",163,0)=" ;;person and his or her environment."
^XTMP("XPDT",7393,"RTN","XU8P509C",164,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",165,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509C",166,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509C",167,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",168,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509C",169,0)=" ;;(AOTA) does offer voluntary specialty certification for an Environmental "
^XTMP("XPDT",7393,"RTN","XU8P509C",170,0)=" ;;Modification Occupational Therapist if the applicant meets the following "
^XTMP("XPDT",7393,"RTN","XU8P509C",171,0)=" ;;requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509C",172,0)=" ;;     .  Professional or technical degree or equivalent in occupational "
^XTMP("XPDT",7393,"RTN","XU8P509C",173,0)=" ;;        therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509C",174,0)=" ;;     .  Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509C",175,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509C",176,0)=" ;;     .  Minimum of 2,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509C",177,0)=" ;;        or occupational therapy assistant. "
^XTMP("XPDT",7393,"RTN","XU8P509C",178,0)=" ;;     .  600 hours of experience delivering occupational therapy services "
^XTMP("XPDT",7393,"RTN","XU8P509C",179,0)=" ;;        in the certification area to clients (individuals, groups, or "
^XTMP("XPDT",7393,"RTN","XU8P509C",180,0)=" ;;        populations) in the last 3 calendar years. Service delivery may be"
^XTMP("XPDT",7393,"RTN","XU8P509C",181,0)=" ;;        paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509C",182,0)=" ;;     .  Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509C",183,0)=" ;;AOTA Fact Sheets: Home Modifications "
^XTMP("XPDT",7393,"RTN","XU8P509C",184,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509C",185,0)="1143 ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",186,0)=" ;;Occupational therapists provide interventions to clients of all ages with "
^XTMP("XPDT",7393,"RTN","XU8P509C",187,0)=" ;;feeding, eating and swallowing difficulties. Occupational therapists "
^XTMP("XPDT",7393,"RTN","XU8P509C",188,0)=" ;;provide comprehensive rehabilitative, habilitative, and palliative "
^XTMP("XPDT",7393,"RTN","XU8P509C",189,0)=" ;;dysphagia care, which includes collaborating with clients to provide "
^XTMP("XPDT",7393,"RTN","XU8P509C",190,0)=" ;;individualized compensatory swallowing strategies, modified diet "
^XTMP("XPDT",7393,"RTN","XU8P509C",191,0)=" ;;textures, adapted mealtime environments, enhanced feeding skills, "
^XTMP("XPDT",7393,"RTN","XU8P509C",192,0)=" ;;preparatory exercises and positioning to clients, reinforcement of "
^XTMP("XPDT",7393,"RTN","XU8P509C",193,0)=" ;;mealtime strategies to enhance and improve swallowing skills, and "
^XTMP("XPDT",7393,"RTN","XU8P509C",194,0)=" ;;training to caregivers to enhance eating and feeding performance. "
^XTMP("XPDT",7393,"RTN","XU8P509C",195,0)=" ;;Occupational therapists provide screening and in-depth clinical "
^XTMP("XPDT",7393,"RTN","XU8P509C",196,0)=" ;;assessment which may include instrumental dysphagia assessments including "
^XTMP("XPDT",7393,"RTN","XU8P509C",197,0)=" ;;videofluroscopy."
^XTMP("XPDT",7393,"RTN","XU8P509C",198,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",199,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509C",200,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509C",201,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",202,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509C",203,0)=" ;;(AOTA) does offer voluntary specialty certification for a Feeding, Eating "
^XTMP("XPDT",7393,"RTN","XU8P509C",204,0)=" ;;& Swallowing Occupational Therapist if the applicant meets the following "
^XTMP("XPDT",7393,"RTN","XU8P509C",205,0)=" ;;requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509C",206,0)=" ;;     .  Professional or technical degree or equivalent in occupational "
^XTMP("XPDT",7393,"RTN","XU8P509C",207,0)=" ;;        therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509C",208,0)=" ;;     .  Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509C",209,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509C",210,0)=" ;;     .  Minimum of 2,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509C",211,0)=" ;;        or occupational therapy assistant. "
^XTMP("XPDT",7393,"RTN","XU8P509C",212,0)=" ;;     .  600 hours of experience delivering occupational therapy services "
^XTMP("XPDT",7393,"RTN","XU8P509C",213,0)=" ;;        in the certification area to clients (individuals, groups, or "
^XTMP("XPDT",7393,"RTN","XU8P509C",214,0)=" ;;        populations) in the last 3 calendar years. Service delivery may be"
^XTMP("XPDT",7393,"RTN","XU8P509C",215,0)=" ;;        paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509C",216,0)=" ;;     .  Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509C",217,0)=" ;;AOTA Specialized Knowledge and Skills Paper: Feeding, Eating and "
^XTMP("XPDT",7393,"RTN","XU8P509C",218,0)=" ;;Swallowing in Occupational Therapy Practice, 2007; AOTA Fact Sheets: OT: "
^XTMP("XPDT",7393,"RTN","XU8P509C",219,0)=" ;;A Vital Role in Dysphagia Care "
^XTMP("XPDT",7393,"RTN","XU8P509C",220,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509C",221,0)="1144 ;"
^XTMP("XPDT",7393,"RTN","XU8P509C",222,0)=" ;;Occupational therapists enable children and adults with visual impairment "
^XTMP("XPDT",7393,"RTN","XU8P509C",223,0)=" ;;to engage in their chosen daily living activities safely and as "
^XTMP("XPDT",7393,"RTN","XU8P509C",224,0)=" ;;independently as possible. This is accomplished by 1) teaching the person "
^XTMP("XPDT",7393,"RTN","XU8P509C",225,0)=" ;;to use their remaining vision as efficiently as possible to complete "
^XTMP("XPDT",7393,"RTN","XU8P509C",226,0)=" ;;activities; (2) modifying activities so that they can be completed with "
^XTMP("XPDT",7393,"RTN","XU8P509C",227,0)=" ;;less vision; (3) training the person in use of adaptive equipment to "
^XTMP("XPDT",7393,"RTN","XU8P509C",228,0)=" ;;compensate for vision loss, including high and low technology assistive "
^XTMP("XPDT",7393,"RTN","XU8P509C",229,0)=" ;;devices; and (4) modifying the person's environment."
^XTMP("XPDT",7393,"RTN","XU8P509C",230,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",231,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509C",232,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509C",233,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509C",234,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509C",235,0)=" ;;(AOTA) does offer voluntary specialty certification for a Low Vision "
^XTMP("XPDT",7393,"RTN","XU8P509C",236,0)=" ;;Occupational Therapist if the applicant meets the following requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509C",237,0)=" ;;     .  Professional or technical degree or equivalent in occupational "
^XTMP("XPDT",7393,"RTN","XU8P509C",238,0)=" ;;        therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509C",239,0)=" ;;     .  Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509C",240,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509C",241,0)=" ;;     .  Minimum of 2,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509C",242,0)=" ;;        or occupational therapy assistant. "
^XTMP("XPDT",7393,"RTN","XU8P509C",243,0)=" ;;     .  600 hours of experience delivering occupational therapy services "
^XTMP("XPDT",7393,"RTN","XU8P509C",244,0)=" ;;        in the certification area to clients (individuals, groups, or "
^XTMP("XPDT",7393,"RTN","XU8P509C",245,0)=" ;;        populations) in the last 3 calendar years. Service delivery may be"
^XTMP("XPDT",7393,"RTN","XU8P509C",246,0)=" ;;        paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509C",247,0)=" ;;     .  Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509C",248,0)=" ;;AOTA Fact Sheets: Low Vision; OT Services for Individuals with Visual "
^XTMP("XPDT",7393,"RTN","XU8P509C",249,0)=" ;;Impairments "
^XTMP("XPDT",7393,"RTN","XU8P509C",250,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509D")="0^4^B175391400^n/a"
^XTMP("XPDT",7393,"RTN","XU8P509D",1,0)="XU8P509D ; BP/BDT - Update definition field; 9/8/08"
^XTMP("XPDT",7393,"RTN","XU8P509D",2,0)=" ;;8.0;KERNEL;**509**;Jul 10, 1995;Build 1"
^XTMP("XPDT",7393,"RTN","XU8P509D",3,0)=" ;;""Per VHA Directive 2004-038, this routine should not be modified""."
^XTMP("XPDT",7393,"RTN","XU8P509D",4,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509D",5,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",6,0)="DEF ; Update definitions for entries 1145-1152"
^XTMP("XPDT",7393,"RTN","XU8P509D",7,0)=" N XUI"
^XTMP("XPDT",7393,"RTN","XU8P509D",8,0)=" F XUI=1145:1:1152 D"
^XTMP("XPDT",7393,"RTN","XU8P509D",9,0)=" . D DEF1(XUI)"
^XTMP("XPDT",7393,"RTN","XU8P509D",10,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509D",11,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",12,0)="DEF1(XUI) ; Update definition for single entry XUI"
^XTMP("XPDT",7393,"RTN","XU8P509D",13,0)=" N XUI1,XUDATA,XUY"
^XTMP("XPDT",7393,"RTN","XU8P509D",14,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7393,"RTN","XU8P509D",15,0)=" F XUY=1:1:100 S XUDATA=$T(@XUI+XUY) Q:XUDATA="" ;;END""  D "
^XTMP("XPDT",7393,"RTN","XU8P509D",16,0)=" . S ^TMP($J,""XUBA"",XUI,XUY,0)=$P(XUDATA,"";;"",2)"
^XTMP("XPDT",7393,"RTN","XU8P509D",17,0)=" S XUI1=XUI_"","""
^XTMP("XPDT",7393,"RTN","XU8P509D",18,0)=" D WP^DIE(8932.1,XUI1,11,""K"",""^TMP($J,""""XUBA"""",XUI)"")"
^XTMP("XPDT",7393,"RTN","XU8P509D",19,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7393,"RTN","XU8P509D",20,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509D",21,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",22,0)="GETDATA ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",23,0)=" N XUI,XUY"
^XTMP("XPDT",7393,"RTN","XU8P509D",24,0)=" F XUI=1145:1:1152 D"
^XTMP("XPDT",7393,"RTN","XU8P509D",25,0)=" . S XUY=$G(^USC(8932.1,XUI,11,0)),XUY=$P(XUY,""^"",3)"
^XTMP("XPDT",7393,"RTN","XU8P509D",26,0)=" . I XUY>0 D GETDES^XU8P509A(XUI,XUY)"
^XTMP("XPDT",7393,"RTN","XU8P509D",27,0)=" Q"
^XTMP("XPDT",7393,"RTN","XU8P509D",28,0)=" ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",29,0)="1145 ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",30,0)=" ;;Occupational therapy assistants provide environmental modifications under "
^XTMP("XPDT",7393,"RTN","XU8P509D",31,0)=" ;;the supervision of an occupational therapist. OTAs develop and implement "
^XTMP("XPDT",7393,"RTN","XU8P509D",32,0)=" ;;an individualized occupational therapy environmental modification plan "
^XTMP("XPDT",7393,"RTN","XU8P509D",33,0)=" ;;that reflects the relevant contexts of the client and relevant others and "
^XTMP("XPDT",7393,"RTN","XU8P509D",34,0)=" ;;maximizes current and future occupational performance, safety, and "
^XTMP("XPDT",7393,"RTN","XU8P509D",35,0)=" ;;participation of the client. Clients receive environmental modification "
^XTMP("XPDT",7393,"RTN","XU8P509D",36,0)=" ;;recommendations and interventions that enable them to meet occupational "
^XTMP("XPDT",7393,"RTN","XU8P509D",37,0)=" ;;performance and participation goals and that have adequate flexibility to "
^XTMP("XPDT",7393,"RTN","XU8P509D",38,0)=" ;;accommodate for their future needs."
^XTMP("XPDT",7393,"RTN","XU8P509D",39,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",40,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509D",41,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509D",42,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",43,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509D",44,0)=" ;;(AOTA) does offer voluntary specialty certification for a Feeding, Eating "
^XTMP("XPDT",7393,"RTN","XU8P509D",45,0)=" ;;& Swallowing Occupational Therapy Assistant if the applicant meets the "
^XTMP("XPDT",7393,"RTN","XU8P509D",46,0)=" ;;following requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509D",47,0)=" ;;     .  Professional or technical degree or equivalent in occupational "
^XTMP("XPDT",7393,"RTN","XU8P509D",48,0)=" ;;        therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509D",49,0)=" ;;     .  Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509D",50,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509D",51,0)=" ;;     .  Minimum of 2,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509D",52,0)=" ;;        or occupational therapy assistant. "
^XTMP("XPDT",7393,"RTN","XU8P509D",53,0)=" ;;     .  600 hours of experience delivering occupational therapy services "
^XTMP("XPDT",7393,"RTN","XU8P509D",54,0)=" ;;        in the certification area to clients (individuals, groups, or "
^XTMP("XPDT",7393,"RTN","XU8P509D",55,0)=" ;;        populations) in the last 3 calendar years. Service delivery may be"
^XTMP("XPDT",7393,"RTN","XU8P509D",56,0)=" ;;        paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509D",57,0)=" ;;     .  Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509D",58,0)=" ;;AOTA Website: Specialty Certifications; AOTA Specialized Knowledge and "
^XTMP("XPDT",7393,"RTN","XU8P509D",59,0)=" ;;Skills Paper: Feeding, Eating and Swallowing in Occupational Therapy "
^XTMP("XPDT",7393,"RTN","XU8P509D",60,0)=" ;;Practice, 2007; AOTA Fact Sheets: OT: A Vital Role in Dysphagia Care "
^XTMP("XPDT",7393,"RTN","XU8P509D",61,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509D",62,0)="1146 ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",63,0)=" ;;Occupational therapy assistants contribute to the completion of an "
^XTMP("XPDT",7393,"RTN","XU8P509D",64,0)=" ;;individualized occupational therapy low-vision evaluation under the "
^XTMP("XPDT",7393,"RTN","XU8P509D",65,0)=" ;;direction and supervision of the occupational therapist to identify "
^XTMP("XPDT",7393,"RTN","XU8P509D",66,0)=" ;;factors that may facilitate, compensate for, or inhibit use of vision in "
^XTMP("XPDT",7393,"RTN","XU8P509D",67,0)=" ;;occupational performance. Clients are engaged in the identification of "
^XTMP("XPDT",7393,"RTN","XU8P509D",68,0)=" ;;strengths, limitations, and goals as they relate to low vision to "
^XTMP("XPDT",7393,"RTN","XU8P509D",69,0)=" ;;optimize independence and participation in desired occupations. "
^XTMP("XPDT",7393,"RTN","XU8P509D",70,0)=" ;;Occupational therapy assistants also contribute to the development and "
^XTMP("XPDT",7393,"RTN","XU8P509D",71,0)=" ;;implementation of an individualized occupational therapy low-vision "
^XTMP("XPDT",7393,"RTN","XU8P509D",72,0)=" ;;intervention plan in collaboration with the occupational therapist, "
^XTMP("XPDT",7393,"RTN","XU8P509D",73,0)=" ;;client, and relevant others that reflects the client's priorities for "
^XTMP("XPDT",7393,"RTN","XU8P509D",74,0)=" ;;occupational performance. "
^XTMP("XPDT",7393,"RTN","XU8P509D",75,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",76,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509D",77,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509D",78,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",79,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509D",80,0)=" ;;(AOTA) does offer voluntary specialty certification for a Low Vision "
^XTMP("XPDT",7393,"RTN","XU8P509D",81,0)=" ;;Occupational Therapy Assistant if the applicant meets the following "
^XTMP("XPDT",7393,"RTN","XU8P509D",82,0)=" ;;requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509D",83,0)=" ;;     .  Professional or technical degree or equivalent in occupational "
^XTMP("XPDT",7393,"RTN","XU8P509D",84,0)=" ;;        therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509D",85,0)=" ;;     .  Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509D",86,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509D",87,0)=" ;;     .  Minimum of 2,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509D",88,0)=" ;;        or occupational therapy assistant. "
^XTMP("XPDT",7393,"RTN","XU8P509D",89,0)=" ;;     .  600 hours of experience delivering occupational therapy services "
^XTMP("XPDT",7393,"RTN","XU8P509D",90,0)=" ;;        in the certification area to clients (individuals, groups, or "
^XTMP("XPDT",7393,"RTN","XU8P509D",91,0)=" ;;        populations) in the last 3 calendar years. Service delivery may be"
^XTMP("XPDT",7393,"RTN","XU8P509D",92,0)=" ;;        paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509D",93,0)=" ;;     .  Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509D",94,0)=" ;;AOTA Fact Sheets: Low Vision; OT Services for Individuals with Visual "
^XTMP("XPDT",7393,"RTN","XU8P509D",95,0)=" ;;Impairments "
^XTMP("XPDT",7393,"RTN","XU8P509D",96,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509D",97,0)="1147 ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",98,0)=" ;;Occupational therapy assistants contribute to the completion of an "
^XTMP("XPDT",7393,"RTN","XU8P509D",99,0)=" ;;individualized occupational therapy driving and community mobility "
^XTMP("XPDT",7393,"RTN","XU8P509D",100,0)=" ;;evaluation by administering delegated assessments and identifying "
^XTMP("XPDT",7393,"RTN","XU8P509D",101,0)=" ;;findings that impact the client's occupational performance. Clients "
^XTMP("XPDT",7393,"RTN","XU8P509D",102,0)=" ;;engage in the assessment and occupational profile process to customize "
^XTMP("XPDT",7393,"RTN","XU8P509D",103,0)=" ;;the evaluation to their individual driving and community mobility needs. "
^XTMP("XPDT",7393,"RTN","XU8P509D",104,0)=" ;;Occupational therapy assistants administer and continuously modify "
^XTMP("XPDT",7393,"RTN","XU8P509D",105,0)=" ;;individualized in-vehicle and community mobility assessments within the "
^XTMP("XPDT",7393,"RTN","XU8P509D",106,0)=" ;;naturalistic context of the community in response to the occupational "
^XTMP("XPDT",7393,"RTN","XU8P509D",107,0)=" ;;performance and safety behaviors of the client. They also implement an "
^XTMP("XPDT",7393,"RTN","XU8P509D",108,0)=" ;;individualized intervention plan, within the parameters established in "
^XTMP("XPDT",7393,"RTN","XU8P509D",109,0)=" ;;collaboration with the occupational therapist that reflects the contexts "
^XTMP("XPDT",7393,"RTN","XU8P509D",110,0)=" ;;of the client and meets his or her occupational performance and safety "
^XTMP("XPDT",7393,"RTN","XU8P509D",111,0)=" ;;needs. Occupational therapy assistants address immediate and long-term "
^XTMP("XPDT",7393,"RTN","XU8P509D",112,0)=" ;;implications of psychosocial issues related to compromised driving and "
^XTMP("XPDT",7393,"RTN","XU8P509D",113,0)=" ;;community mobility throughout the occupational therapy process and makes "
^XTMP("XPDT",7393,"RTN","XU8P509D",114,0)=" ;;recommendations to the occupational therapist for modification to service "
^XTMP("XPDT",7393,"RTN","XU8P509D",115,0)=" ;;delivery."
^XTMP("XPDT",7393,"RTN","XU8P509D",116,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",117,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509D",118,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509D",119,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",120,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509D",121,0)=" ;;(AOTA) does offer voluntary specialty certification for a Driving & "
^XTMP("XPDT",7393,"RTN","XU8P509D",122,0)=" ;;Community Mobility Occupational Therapy Assistant if the applicant meets "
^XTMP("XPDT",7393,"RTN","XU8P509D",123,0)=" ;;the following requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509D",124,0)=" ;;     .  Professional or technical degree or equivalent in occupational "
^XTMP("XPDT",7393,"RTN","XU8P509D",125,0)=" ;;        therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509D",126,0)=" ;;     .  Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509D",127,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509D",128,0)=" ;;     .  Minimum of 2,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509D",129,0)=" ;;        or occupational therapy assistant. "
^XTMP("XPDT",7393,"RTN","XU8P509D",130,0)=" ;;     .  600 hours of experience delivering occupational therapy services "
^XTMP("XPDT",7393,"RTN","XU8P509D",131,0)=" ;;        in the certification area to clients (individuals, groups, or "
^XTMP("XPDT",7393,"RTN","XU8P509D",132,0)=" ;;        populations) in the last 3 calendar years. Service delivery may be"
^XTMP("XPDT",7393,"RTN","XU8P509D",133,0)=" ;;        paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509D",134,0)=" ;;     .  Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509D",135,0)=" ;;AOTA Fact Sheets: Older Driver; AOTA Website: Specialty Certification "
^XTMP("XPDT",7393,"RTN","XU8P509D",136,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509D",137,0)="1148 ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",138,0)=" ;;Occupational therapy assistants provide environmental modifications under "
^XTMP("XPDT",7393,"RTN","XU8P509D",139,0)=" ;;the supervision of an occupational therapist. OTAs develop and implement "
^XTMP("XPDT",7393,"RTN","XU8P509D",140,0)=" ;;an individualized occupational therapy environmental modification plan "
^XTMP("XPDT",7393,"RTN","XU8P509D",141,0)=" ;;that reflects the relevant contexts of the client and relevant others and "
^XTMP("XPDT",7393,"RTN","XU8P509D",142,0)=" ;;maximizes current and future occupational performance, safety, and "
^XTMP("XPDT",7393,"RTN","XU8P509D",143,0)=" ;;participation of the client. Clients receive environmental modification "
^XTMP("XPDT",7393,"RTN","XU8P509D",144,0)=" ;;recommendations and interventions that enable them to meet occupational "
^XTMP("XPDT",7393,"RTN","XU8P509D",145,0)=" ;;performance and participation goals and that have adequate flexibility to "
^XTMP("XPDT",7393,"RTN","XU8P509D",146,0)=" ;;accommodate for their future needs."
^XTMP("XPDT",7393,"RTN","XU8P509D",147,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",148,0)=" ;;Source: The Guide to Occupational Therapy Practice, 2nd edition. "
^XTMP("XPDT",7393,"RTN","XU8P509D",149,0)=" ;;Bethesda: American Occupational Therapy Association, 2007."
^XTMP("XPDT",7393,"RTN","XU8P509D",150,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",151,0)=" ;;Additional Resources: The American Occupational Therapy Association "
^XTMP("XPDT",7393,"RTN","XU8P509D",152,0)=" ;;(AOTA) does offer voluntary specialty certification for an Environmental "
^XTMP("XPDT",7393,"RTN","XU8P509D",153,0)=" ;;Modification Occupational Therapy Assistant if the applicant meets the "
^XTMP("XPDT",7393,"RTN","XU8P509D",154,0)=" ;;following requirements: "
^XTMP("XPDT",7393,"RTN","XU8P509D",155,0)=" ;;     .  Professional or technical degree or equivalent in occupational "
^XTMP("XPDT",7393,"RTN","XU8P509D",156,0)=" ;;        therapy. "
^XTMP("XPDT",7393,"RTN","XU8P509D",157,0)=" ;;     .  Certified or licensed by and in good standing with an AOTA "
^XTMP("XPDT",7393,"RTN","XU8P509D",158,0)=" ;;        recognized credentialing or regulatory body. "
^XTMP("XPDT",7393,"RTN","XU8P509D",159,0)=" ;;     .  Minimum of 2,000 hours of experience as an occupational therapist "
^XTMP("XPDT",7393,"RTN","XU8P509D",160,0)=" ;;        or occupational therapy assistant. "
^XTMP("XPDT",7393,"RTN","XU8P509D",161,0)=" ;;     .  600 hours of experience delivering occupational therapy services "
^XTMP("XPDT",7393,"RTN","XU8P509D",162,0)=" ;;        in the certification area to clients (individuals, groups, or "
^XTMP("XPDT",7393,"RTN","XU8P509D",163,0)=" ;;        populations) in the last 3 calendar years. Service delivery may be"
^XTMP("XPDT",7393,"RTN","XU8P509D",164,0)=" ;;        paid or voluntary."
^XTMP("XPDT",7393,"RTN","XU8P509D",165,0)=" ;;     .  Verification of employment. "
^XTMP("XPDT",7393,"RTN","XU8P509D",166,0)=" ;;Fact Sheet: Home Modifications and OT, AOTA Website: Specialty "
^XTMP("XPDT",7393,"RTN","XU8P509D",167,0)=" ;;Certifications "
^XTMP("XPDT",7393,"RTN","XU8P509D",168,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509D",169,0)="1149 ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",170,0)=" ;;A Radiology Practitioner Assistant (RPA) is a health professional "
^XTMP("XPDT",7393,"RTN","XU8P509D",171,0)=" ;;certified as a registered radiographer with the American Registry of "
^XTMP("XPDT",7393,"RTN","XU8P509D",172,0)=" ;;Radiologic Technologists (ARRT) and, in addition, is credentialed to "
^XTMP("XPDT",7393,"RTN","XU8P509D",173,0)=" ;;provide primary radiology health care with radiologist supervision. "
^XTMP("XPDT",7393,"RTN","XU8P509D",174,0)=" ;;Radiology Practitioner Assistants are qualified by graduation from an "
^XTMP("XPDT",7393,"RTN","XU8P509D",175,0)=" ;;educational program recognized by the Board of Directors of athe "
^XTMP("XPDT",7393,"RTN","XU8P509D",176,0)=" ;;Certification Board for Radiology Practitioner Assistants (CBRPA) and "
^XTMP("XPDT",7393,"RTN","XU8P509D",177,0)=" ;;certified by the CBRPA. Within the Radiologist/RPA relationship, "
^XTMP("XPDT",7393,"RTN","XU8P509D",178,0)=" ;;Radiology Practitioner Assistants exercise autonomy in decision making in "
^XTMP("XPDT",7393,"RTN","XU8P509D",179,0)=" ;;the role of a primary caregiver with regard to patient assessment, "
^XTMP("XPDT",7393,"RTN","XU8P509D",180,0)=" ;;patient management and in providing a broad range of radiology diagnostic "
^XTMP("XPDT",7393,"RTN","XU8P509D",181,0)=" ;;and interventional services. The clinical role of the Radiology "
^XTMP("XPDT",7393,"RTN","XU8P509D",182,0)=" ;;Practitioner Assistant includes primary and specialty care in radiology "
^XTMP("XPDT",7393,"RTN","XU8P509D",183,0)=" ;;practice settings in rural and urban areas. "
^XTMP("XPDT",7393,"RTN","XU8P509D",184,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",185,0)=" ;;Source: Certification Board of Radiology Practitioner Assistants"
^XTMP("XPDT",7393,"RTN","XU8P509D",186,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",187,0)=" ;;Additional Resources: www.cbrpa.org "
^XTMP("XPDT",7393,"RTN","XU8P509D",188,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509D",189,0)="1150 ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",190,0)=" ;;An In Home Supportive Care Agency provides services in the patient's home "
^XTMP("XPDT",7393,"RTN","XU8P509D",191,0)=" ;;with the goal of enabling the patient to remain at home. The services "
^XTMP("XPDT",7393,"RTN","XU8P509D",192,0)=" ;;provided may include personal care services such as hands-on assistance "
^XTMP("XPDT",7393,"RTN","XU8P509D",193,0)=" ;;with activities of daily living (ADLs), e.g., eating, bathing, dressing, "
^XTMP("XPDT",7393,"RTN","XU8P509D",194,0)=" ;;and bladder and bowel requirements; homemaker services and instrumental "
^XTMP("XPDT",7393,"RTN","XU8P509D",195,0)=" ;;activities of daily living (IADLs), e.g., taking medications, shopping "
^XTMP("XPDT",7393,"RTN","XU8P509D",196,0)=" ;;for groceries, laundry, housekeeping, and companionship; and/or "
^XTMP("XPDT",7393,"RTN","XU8P509D",197,0)=" ;;supervision or cuing so that a person can perform tasks themselves."
^XTMP("XPDT",7393,"RTN","XU8P509D",198,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",199,0)=" ;;Source: National Uniform Claim Committee, 2008 "
^XTMP("XPDT",7393,"RTN","XU8P509D",200,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509D",201,0)="1151 ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",202,0)=" ;;The distinct focus of the clinical health psychologist is on physical "
^XTMP("XPDT",7393,"RTN","XU8P509D",203,0)=" ;;health problems. A clinical health psychologist has special expertise or "
^XTMP("XPDT",7393,"RTN","XU8P509D",204,0)=" ;;training in clinical health psychology and applies scientific knowledge "
^XTMP("XPDT",7393,"RTN","XU8P509D",205,0)=" ;;of the interrelationships among behavioral, emotional, cognitive, social "
^XTMP("XPDT",7393,"RTN","XU8P509D",206,0)=" ;;and biological components in health and disease to the promotion and "
^XTMP("XPDT",7393,"RTN","XU8P509D",207,0)=" ;;maintenance of health; the prevention, treatment and rehabilitation of "
^XTMP("XPDT",7393,"RTN","XU8P509D",208,0)=" ;;illness and disability; and the improvement of the health care system. "
^XTMP("XPDT",7393,"RTN","XU8P509D",209,0)=" ;;Clinical health psychologists are dedicated to the development of "
^XTMP("XPDT",7393,"RTN","XU8P509D",210,0)=" ;;knowledge regarding the interface between behavior and health, and to the "
^XTMP("XPDT",7393,"RTN","XU8P509D",211,0)=" ;;delivery of high quality services based on that knowledge to individuals, "
^XTMP("XPDT",7393,"RTN","XU8P509D",212,0)=" ;;families, and health care."
^XTMP("XPDT",7393,"RTN","XU8P509D",213,0)=" ;;"
^XTMP("XPDT",7393,"RTN","XU8P509D",214,0)=" ;;Source: American Psychological Association Commission for the Recognition "
^XTMP("XPDT",7393,"RTN","XU8P509D",215,0)=" ;;of Specialties and Proficiencies in Professional Psychology, 2008."
^XTMP("XPDT",7393,"RTN","XU8P509D",216,0)=" ;;END"
^XTMP("XPDT",7393,"RTN","XU8P509D",217,0)="1152 ;"
^XTMP("XPDT",7393,"RTN","XU8P509D",218,0)=" ;;A physical medicine and rehabilitation physician with special knowledge "
^XTMP("XPDT",7393,"RTN","XU8P509D",219,0)=" ;;and skills to prevent and relieve the suffering experienced by patients "
^XTMP("XPDT",7393,"RTN","XU8P509D",220,0)=" ;;with life-limiting illnesses. This specialist works with an "
^XTMP("XPDT",7393,"RTN","XU8P509D",221,0)=" ;;interdisciplinary hospice or palliative care team to maximize quality of "
^XTMP("XPDT",7393,"RTN","XU8P509D",222,0)=" ;;life while addressing physical, psychological, social and spiritual needs "
^XTMP("XPDT",7393,"RTN","XU8P509D",223,0)=" ;;of both patient and family throughout the course of the disease, through "
^XTMP("XPDT",7393,"RTN","XU8P509D",224,0)=" ;;the dying process, and beyond for the family. This specialist has "
^XTMP("XPDT",7393,"RTN","XU8P509D",225,0)=" ;;expertise in the assessment of patients with advanced disease; the relief "
^XTMP("XPDT",7393,"RTN","XU8P509D",226,0)=" ;;of distressing symptoms; the coordination of interdisciplinary patient "
^XTMP("XPDT",7393,"RTN","XU8P509D",227,0)=" ;;and family-centered care in diverse venues; the use of specialized care "
^XTMP("XPDT",7393,"RTN","XU8P509D",228,0)=" ;;systems including hospice; the management of the imminently dying "
^XTMP("XPDT",7393,"RTN","XU8P509D",229,0)=" ;;patient; and legal and ethical decision making in end-of-life care.   "
^XTMP("XPDT",7393,"RTN","XU8P509D",230,0)=" ;; "
^XTMP("XPDT",7393,"RTN","XU8P509D",231,0)=" ;;Source: American Academy of Hospice and Palliative Medicine. "
^XTMP("XPDT",7393,"RTN","XU8P509D",232,0)=" ;;END"
^XTMP("XPDT",7393,"VER")="8.0^22.0"
^XTMP("XPDT",7419)="1"
^XTMP("XPDT",7419,"BLD",1183,0)="XU*8.0*517^KERNEL^0^3081202^y"
^XTMP("XPDT",7419,"BLD",1183,1,0)="^^3^3^3081202^^"
^XTMP("XPDT",7419,"BLD",1183,1,1,0)="Please see the patch description on FORUM, in the National"
^XTMP("XPDT",7419,"BLD",1183,1,2,0)=" Patch Module."
^XTMP("XPDT",7419,"BLD",1183,1,3,0)=""
^XTMP("XPDT",7419,"BLD",1183,4,0)="^9.64PA^^"
^XTMP("XPDT",7419,"BLD",1183,6)="^415"
^XTMP("XPDT",7419,"BLD",1183,6.3)="6"
^XTMP("XPDT",7419,"BLD",1183,"ABPKG")="n"
^XTMP("XPDT",7419,"BLD",1183,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7419,"BLD",1183,"KRN",.4,0)=".4"
^XTMP("XPDT",7419,"BLD",1183,"KRN",.401,0)=".401"
^XTMP("XPDT",7419,"BLD",1183,"KRN",.402,0)=".402"
^XTMP("XPDT",7419,"BLD",1183,"KRN",.403,0)=".403"
^XTMP("XPDT",7419,"BLD",1183,"KRN",.5,0)=".5"
^XTMP("XPDT",7419,"BLD",1183,"KRN",.84,0)=".84"
^XTMP("XPDT",7419,"BLD",1183,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7419,"BLD",1183,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7419,"BLD",1183,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7419,"BLD",1183,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7419,"BLD",1183,"KRN",9.8,"NM",0)="^9.68A^2^2"
^XTMP("XPDT",7419,"BLD",1183,"KRN",9.8,"NM",1,0)="XPDIP^^0^B41486911"
^XTMP("XPDT",7419,"BLD",1183,"KRN",9.8,"NM",2,0)="XPDTC^^0^B46970375"
^XTMP("XPDT",7419,"BLD",1183,"KRN",9.8,"NM","B","XPDIP",1)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN",9.8,"NM","B","XPDTC",2)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN",19,0)="19"
^XTMP("XPDT",7419,"BLD",1183,"KRN",19,"NM",0)="^9.68A^^"
^XTMP("XPDT",7419,"BLD",1183,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7419,"BLD",1183,"KRN",101,0)="101"
^XTMP("XPDT",7419,"BLD",1183,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7419,"BLD",1183,"KRN",771,0)="771"
^XTMP("XPDT",7419,"BLD",1183,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7419,"BLD",1183,"KRN",870,0)="870"
^XTMP("XPDT",7419,"BLD",1183,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7419,"BLD",1183,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7419,"BLD",1183,"KRN",8994,0)="8994"
^XTMP("XPDT",7419,"BLD",1183,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",.4,.4)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",.401,.401)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",.402,.402)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",.403,.403)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",.5,.5)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",.84,.84)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",19,19)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",101,101)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",771,771)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",870,870)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",8994,8994)=""
^XTMP("XPDT",7419,"BLD",1183,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7419,"BLD",1183,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7419,"BLD",1183,"QUES",0)="^9.62^^"
^XTMP("XPDT",7419,"BLD",1183,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7419,"BLD",1183,"REQB",1,0)="XU*8.0*511^1"
^XTMP("XPDT",7419,"BLD",1183,"REQB","B","XU*8.0*511",1)=""
^XTMP("XPDT",7419,"MBREQ")="0"
^XTMP("XPDT",7419,"PKG",3,-1)="1^1"
^XTMP("XPDT",7419,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7419,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7419,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7419,"PKG",3,22,1,0)="8.0^3080616^3080616^6"
^XTMP("XPDT",7419,"PKG",3,22,1,"PAH",1,0)="517^3081202"
^XTMP("XPDT",7419,"PKG",3,22,1,"PAH",1,1,0)="^^3^3^3081202"
^XTMP("XPDT",7419,"PKG",3,22,1,"PAH",1,1,1,0)="Please see the patch description on FORUM, in the National"
^XTMP("XPDT",7419,"PKG",3,22,1,"PAH",1,1,2,0)=" Patch Module."
^XTMP("XPDT",7419,"PKG",3,22,1,"PAH",1,1,3,0)=""
^XTMP("XPDT",7419,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7419,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7419,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7419,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7419,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7419,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7419,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7419,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7419,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7419,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7419,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7419,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7419,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7419,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7419,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7419,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7419,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7419,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7419,"QUES","XPM1","B")=""
^XTMP("XPDT",7419,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7419,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7419,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7419,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7419,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7419,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7419,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7419,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7419,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7419,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7419,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7419,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7419,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7419,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7419,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7419,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7419,"RTN")="2"
^XTMP("XPDT",7419,"RTN","XPDIP")="0^1^B41486911^B39786511"
^XTMP("XPDT",7419,"RTN","XPDIP",1,0)="XPDIP ;SFISC/RSD - Install Package & Routine file ;03/08/2006"
^XTMP("XPDT",7419,"RTN","XPDIP",2,0)=" ;;8.0;KERNEL;**15,21,28,30,41,44,51,58,83,92,100,108,137,229,350,393,517**;Jul 10, 1995;Build 6"
^XTMP("XPDT",7419,"RTN","XPDIP",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7419,"RTN","XPDIP",4,0)=" Q"
^XTMP("XPDT",7419,"RTN","XPDIP",5,0)="PKG ;"
^XTMP("XPDT",7419,"RTN","XPDIP",6,0)=" N %,OLDA,DA,DIK,XPD,XPDFIL,XPDPKG,XPDBLDA,Y"
^XTMP("XPDT",7419,"RTN","XPDIP",7,0)=" ;update variable for graphic display"
^XTMP("XPDT",7419,"RTN","XPDIP",8,0)=" I $D(XPDIDVT) S XPDIDTOT=10,XPDIDMOD=1,XPDIDCNT=0 D:XPDIDVT UPDATE^XPDID(0)"
^XTMP("XPDT",7419,"RTN","XPDIP",9,0)=" ;XPDPKG=ien of Package file, OLDA=old Package ien"
^XTMP("XPDT",7419,"RTN","XPDIP",10,0)=" S Y=$$PKGADD,XPDPKG=$P(Y,U),OLDA=$P(Y,U,2)"
^XTMP("XPDT",7419,"RTN","XPDIP",11,0)=" ;Package file entry not sent, XPDPKG=0"
^XTMP("XPDT",7419,"RTN","XPDIP",12,0)=" G:'XPDPKG PKGEND"
^XTMP("XPDT",7419,"RTN","XPDIP",13,0)=" ;update version multiple"
^XTMP("XPDT",7419,"RTN","XPDIP",14,0)=" S DA=XPDPKG D PKGV"
^XTMP("XPDT",7419,"RTN","XPDIP",15,0)="PKGH I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+2 D UPDATE^XPDID(XPDIDCNT)"
^XTMP("XPDT",7419,"RTN","XPDIP",16,0)=" S %=$P(^DIC(9.4,XPDPKG,0),U,4)"
^XTMP("XPDT",7419,"RTN","XPDIP",17,0)=" ;repoint Help Frame (0;4)"
^XTMP("XPDT",7419,"RTN","XPDIP",18,0)=" I $L(%),'% S $P(^DIC(9.4,XPDPKG,0),U,4)=$$LK^XPDIA(""^DIC(9.2)"",%),DIK=""^DIC(9.4,"" D IX1^DIK"
^XTMP("XPDT",7419,"RTN","XPDIP",19,0)=" ;update node 20 for Patient Merge"
^XTMP("XPDT",7419,"RTN","XPDIP",20,0)=" N REC,IEN"
^XTMP("XPDT",7419,"RTN","XPDIP",21,0)=" S REC=0"
^XTMP("XPDT",7419,"RTN","XPDIP",22,0)=" F  S REC=$O(^XTMP(""XPDI"",XPDA,""PKG"",OLDA,20,REC)) Q:'REC  D"
^XTMP("XPDT",7419,"RTN","XPDIP",23,0)=" . ;;Only install if have a routine defined"
^XTMP("XPDT",7419,"RTN","XPDIP",24,0)=" . K IEN I '$L($P($G(^XTMP(""XPDI"",XPDA,""PKG"",OLDA,20,REC,0)),U,3)) Q"
^XTMP("XPDT",7419,"RTN","XPDIP",25,0)=" . S IEN(9.402,""?+1,""_XPDPKG_"","",.01)=$P($G(^XTMP(""XPDI"",XPDA,""PKG"",OLDA,20,REC,0)),U,1)"
^XTMP("XPDT",7419,"RTN","XPDIP",26,0)=" . S IEN(9.402,""?+1,""_XPDPKG_"","",3)=$P($G(^XTMP(""XPDI"",XPDA,""PKG"",OLDA,20,REC,0)),U,3)"
^XTMP("XPDT",7419,"RTN","XPDIP",27,0)=" . S IEN(9.402,""?+1,""_XPDPKG_"","",4)=$G(^XTMP(""XPDI"",XPDA,""PKG"",OLDA,20,REC,1))"
^XTMP("XPDT",7419,"RTN","XPDIP",28,0)=" . D UPDATE^DIE("""",""IEN"")"
^XTMP("XPDT",7419,"RTN","XPDIP",29,0)=" . Q"
^XTMP("XPDT",7419,"RTN","XPDIP",30,0)=" ;"
^XTMP("XPDT",7419,"RTN","XPDIP",31,0)="PKGEND S XPDBLDA=$$BLD(XPDBLD) Q:'XPDBLDA"
^XTMP("XPDT",7419,"RTN","XPDIP",32,0)=" ;Move the Test/SEQ number from build to Install file."
^XTMP("XPDT",7419,"RTN","XPDIP",33,0)=" S ^XPD(9.7,XPDA,6)=$G(^XPD(9.6,XPDBLDA,6))"
^XTMP("XPDT",7419,"RTN","XPDIP",34,0)=" ;move Alpha/Beta testing info to Kernel site para file"
^XTMP("XPDT",7419,"RTN","XPDIP",35,0)=" I XPDPKG S %=$G(^XPD(9.6,XPDBLDA,""ABPKG"")) D"
^XTMP("XPDT",7419,"RTN","XPDIP",36,0)=" .;Install message and they have an address, set flag in XPDIST"
^XTMP("XPDT",7419,"RTN","XPDIP",37,0)=" .I $P(%,U)=""y"",$P(%,U,2)=""y"",$L($P(%,U,3)) S $P(XPDIST,U,2)=$P(%,U,3)"
^XTMP("XPDT",7419,"RTN","XPDIP",38,0)=" .D EN^XQABLOAD(XPDBLDA)"
^XTMP("XPDT",7419,"RTN","XPDIP",39,0)=" Q"
^XTMP("XPDT",7419,"RTN","XPDIP",40,0)="PKGADD() ;check Package file, add if not there"
^XTMP("XPDT",7419,"RTN","XPDIP",41,0)=" ;return new Package file ien^old ien"
^XTMP("XPDT",7419,"RTN","XPDIP",42,0)=" N DA,DIK,XPD,XPDFIL,XPDO,X,Y"
^XTMP("XPDT",7419,"RTN","XPDIP",43,0)=" S DA=+$P(^XPD(9.7,XPDA,0),U,2),XPDO=+$O(^XTMP(""XPDI"",XPDA,""PKG"",0)),X=$P($G(^(XPDO,0)),U)"
^XTMP("XPDT",7419,"RTN","XPDIP",44,0)=" I DA,$D(^DIC(9.4,DA,0)) Q DA_U_XPDO"
^XTMP("XPDT",7419,"RTN","XPDIP",45,0)=" ;quit if there was no package entry sent"
^XTMP("XPDT",7419,"RTN","XPDIP",46,0)=" Q:'XPDO ""0^0"""
^XTMP("XPDT",7419,"RTN","XPDIP",47,0)=" S XPDFIL=9.4,Y=$$DIC^XPDIK(9.4,X) Q:'Y ""0^0"""
^XTMP("XPDT",7419,"RTN","XPDIP",48,0)=" S DA=+Y"
^XTMP("XPDT",7419,"RTN","XPDIP",49,0)=" ;if new entry in package file, bring in everything"
^XTMP("XPDT",7419,"RTN","XPDIP",50,0)=" I $P(Y,U,3) D"
^XTMP("XPDT",7419,"RTN","XPDIP",51,0)=" .M ^DIC(9.4,DA)=^XTMP(""XPDI"",XPDA,""PKG"",XPDO)"
^XTMP("XPDT",7419,"RTN","XPDIP",52,0)=" .;kill the -1 flag node first"
^XTMP("XPDT",7419,"RTN","XPDIP",53,0)=" .K ^DIC(9.4,DA,-1)"
^XTMP("XPDT",7419,"RTN","XPDIP",54,0)=" .;re-cross ref after adding a new package"
^XTMP("XPDT",7419,"RTN","XPDIP",55,0)=" .S DIK=""^DIC(9.4,"" D IX1^DIK"
^XTMP("XPDT",7419,"RTN","XPDIP",56,0)=" ;add package to file 9.7"
^XTMP("XPDT",7419,"RTN","XPDIP",57,0)=" S XPD(9.7,XPDA_"","",1)=DA D FILE^DIE("""",""XPD"")"
^XTMP("XPDT",7419,"RTN","XPDIP",58,0)=" Q DA_U_XPDO"
^XTMP("XPDT",7419,"RTN","XPDIP",59,0)=" ;"
^XTMP("XPDT",7419,"RTN","XPDIP",60,0)="BLD(XPDBLD) ;add Build entry, XPDBLD=Build ien in ^XTMP(""XPDI"",XPDA,""BLD"","
^XTMP("XPDT",7419,"RTN","XPDIP",61,0)=" N %,DA,DIK,XPDFIL,Y"
^XTMP("XPDT",7419,"RTN","XPDIP",62,0)=" I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+4 D UPDATE^XPDID(XPDIDCNT)"
^XTMP("XPDT",7419,"RTN","XPDIP",63,0)=" ;XPDBLD=Build ien in ^XTMP, set in XPDIJ"
^XTMP("XPDT",7419,"RTN","XPDIP",64,0)=" S XPDFIL=9.6,Y=$$DIC^XPDIK(9.6,XPDNM) Q:'Y """""
^XTMP("XPDT",7419,"RTN","XPDIP",65,0)=" S DA=+Y"
^XTMP("XPDT",7419,"RTN","XPDIP",66,0)=" ;Build entry not new, remove old data"
^XTMP("XPDT",7419,"RTN","XPDIP",67,0)=" I '$P(Y,U,3) S %=$P(^XPD(9.6,DA,0),U,2) K ^XPD(9.6,DA) K:% ^XPD(9.6,""C"",%,DA)"
^XTMP("XPDT",7419,"RTN","XPDIP",68,0)=" M ^XPD(9.6,DA)=^XTMP(""XPDI"",XPDA,""BLD"",XPDBLD)"
^XTMP("XPDT",7419,"RTN","XPDIP",69,0)=" ;reset Package File Link (0;2)"
^XTMP("XPDT",7419,"RTN","XPDIP",70,0)=" ;XPDIST = national site tracking^A/B install message address"
^XTMP("XPDT",7419,"RTN","XPDIP",71,0)=" S $P(^XPD(9.6,DA,0),U,2)=$S(XPDPKG:XPDPKG,1:"""") S:$P(^(0),U,5)=""y"" XPDIST=1"
^XTMP("XPDT",7419,"RTN","XPDIP",72,0)=" ;re-index cross-ref. on fields .01 and 1"
^XTMP("XPDT",7419,"RTN","XPDIP",73,0)=" S DIK=""^XPD(9.6,"" F Y=.01,1 S DIK(1)=Y D EN1^DIK"
^XTMP("XPDT",7419,"RTN","XPDIP",74,0)=" I $D(XPDIDVT) D UPDATE^XPDID(XPDIDTOT)"
^XTMP("XPDT",7419,"RTN","XPDIP",75,0)=" Q DA"
^XTMP("XPDT",7419,"RTN","XPDIP",76,0)=" ;"
^XTMP("XPDT",7419,"RTN","XPDIP",77,0)=" ;update the version multiple in the package file"
^XTMP("XPDT",7419,"RTN","XPDIP",78,0)="PKGV N %"
^XTMP("XPDT",7419,"RTN","XPDIP",79,0)=" I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+2 D UPDATE^XPDID(XPDIDCNT)"
^XTMP("XPDT",7419,"RTN","XPDIP",80,0)=" ;%=ien in the Version multiple_U_ien in Patch multiple in ^XTMP"
^XTMP("XPDT",7419,"RTN","XPDIP",81,0)=" S %=$G(^XTMP(""XPDI"",XPDA,""PKG"",OLDA,-1))"
^XTMP("XPDT",7419,"RTN","XPDIP",82,0)=" I XPDNM'[""*"" D  Q"
^XTMP("XPDT",7419,"RTN","XPDIP",83,0)=" .S %=+% Q:'$D(^XTMP(""XPDI"",XPDA,""PKG"",OLDA,22,%,0))  S %=^(0) S:$D(^(1)) %(1)=$NA(^(1))"
^XTMP("XPDT",7419,"RTN","XPDIP",84,0)=" .S $P(%,U,3,4)=DT_U_DUZ,%=$$PKGVER(DA,.%)"
^XTMP("XPDT",7419,"RTN","XPDIP",85,0)=" ;update patch history multiple"
^XTMP("XPDT",7419,"RTN","XPDIP",86,0)=" Q:'$D(^XTMP(""XPDI"",XPDA,""PKG"",OLDA,22,+%,""PAH"",+$P(%,U,2),0))  S %=$P(^(0),U) S:$D(^(1)) %(1)=$NA(^(1))"
^XTMP("XPDT",7419,"RTN","XPDIP",87,0)=" ;check File Comment, %=patch number"
^XTMP("XPDT",7419,"RTN","XPDIP",88,0)=" S:^XPD(9.7,XPDA,2)["" SEQ #"" %=$P(^(2),""*"",3)"
^XTMP("XPDT",7419,"RTN","XPDIP",89,0)=" S $P(%,U,2,3)=$$NOW^XLFDT()_U_DUZ,%=$$PKGPAT(DA,$$VER^XPDUTL(XPDNM),.%)"
^XTMP("XPDT",7419,"RTN","XPDIP",90,0)=" Q"
^XTMP("XPDT",7419,"RTN","XPDIP",91,0)=" ;"
^XTMP("XPDT",7419,"RTN","XPDIP",92,0)="PKGVER(XPDPDA,XPDI) ;update version in package file, XPDPDA=Package file ien, return ien"
^XTMP("XPDT",7419,"RTN","XPDIP",93,0)=" ;XPDI=version^date distr.^date installed^install by"
^XTMP("XPDT",7419,"RTN","XPDIP",94,0)=" ;XPDI(1)=root of description field"
^XTMP("XPDT",7419,"RTN","XPDIP",95,0)=" N I,X,XPD,XPDIEN,XPDJ,XPDV"
^XTMP("XPDT",7419,"RTN","XPDIP",96,0)=" S XPDIEN="",""_XPDPDA_"","",XPDV=$$MDIC(9.49,XPDIEN,$P(XPDI,U)) Q:'XPDV 0"
^XTMP("XPDT",7419,"RTN","XPDIP",97,0)=" S XPD(9.4,XPDPDA_"","",13)=$P(XPDI,U),X=""XPD(9.49,""""""_XPDV_XPDIEN_"""""")"""
^XTMP("XPDT",7419,"RTN","XPDIP",98,0)=" F I=1:1:3 S:$P(XPDI,U,I+1)]"""" @X@(I)=$P(XPDI,U,I+1)"
^XTMP("XPDT",7419,"RTN","XPDIP",99,0)=" S:$D(XPDI(1)) @X@(41)=XPDI(1)"
^XTMP("XPDT",7419,"RTN","XPDIP",100,0)=" D FILE^DIE("""",""XPD"")"
^XTMP("XPDT",7419,"RTN","XPDIP",101,0)=" Q XPDV"
^XTMP("XPDT",7419,"RTN","XPDIP",102,0)=" ;"
^XTMP("XPDT",7419,"RTN","XPDIP",103,0)="PKGPAT(XPDPDA,XPDV,XPDI) ;update patch history"
^XTMP("XPDT",7419,"RTN","XPDIP",104,0)=" ;INPUT: XPDPDA=Package file ien, XPDV=version"
^XTMP("XPDT",7419,"RTN","XPDIP",105,0)=" ;XPDI=patch^date installed^install by"
^XTMP("XPDT",7419,"RTN","XPDIP",106,0)=" ;RETURNS: version ien^patch ien^[CURRENT VERSION, if it was set]"
^XTMP("XPDT",7419,"RTN","XPDIP",107,0)=" N I,X,XPD,XPDP,XPDIEN,CURVER"
^XTMP("XPDT",7419,"RTN","XPDIP",108,0)=" ;quit if we can't find the version multiple, resets XPDV=ien of version"
^XTMP("XPDT",7419,"RTN","XPDIP",109,0)=" S XPDIEN="",""_XPDPDA_"","",XPDV=$$MDIC(9.49,XPDIEN,XPDV) Q:'XPDV 0"
^XTMP("XPDT",7419,"RTN","XPDIP",110,0)=" S XPDIEN="",""_XPDV_XPDIEN,XPDP=$$MDIC(9.4901,XPDIEN,$P(XPDI,U)) Q:'XPDP 0"
^XTMP("XPDT",7419,"RTN","XPDIP",111,0)=" S X=""XPD(9.4901,""""""_XPDP_XPDIEN_"""""")"""
^XTMP("XPDT",7419,"RTN","XPDIP",112,0)=" F I=.02,.03 S:$P(XPDI,U,I*100)]"""" @X@(I)=$P(XPDI,U,I*100)"
^XTMP("XPDT",7419,"RTN","XPDIP",113,0)=" S:$D(XPDI(1)) @X@(1)=XPDI(1)"
^XTMP("XPDT",7419,"RTN","XPDIP",114,0)=" ;if no CURRENT VERSION, set it"
^XTMP("XPDT",7419,"RTN","XPDIP",115,0)=" I $G(^DIC(9.4,XPDPDA,""VERSION""))="""" S XPD(9.4,XPDPDA_"","",13)=XPDV,CURVER=XPDV"
^XTMP("XPDT",7419,"RTN","XPDIP",116,0)=" D FILE^DIE("""",""XPD"")"
^XTMP("XPDT",7419,"RTN","XPDIP",117,0)=" Q XPDV_U_XPDP_U_$G(CURVER)"
^XTMP("XPDT",7419,"RTN","XPDIP",118,0)=" ;"
^XTMP("XPDT",7419,"RTN","XPDIP",119,0)=" ;XPDF=subfile #,XPDIEN=ien string, X=input"
^XTMP("XPDT",7419,"RTN","XPDIP",120,0)="MDIC(XPDF,XPDIEN,XPDX) ;"
^XTMP("XPDT",7419,"RTN","XPDIP",121,0)=" N DIERR,XPD,XPDN"
^XTMP("XPDT",7419,"RTN","XPDIP",122,0)=" D FIND^DIC(XPDF,XPDIEN,"""",""XQf"",XPDX,5,"""","""","""",""XPD"")"
^XTMP("XPDT",7419,"RTN","XPDIP",123,0)=" ;one or more matches, just return first one"
^XTMP("XPDT",7419,"RTN","XPDIP",124,0)=" I $G(XPD(0)) D:XPD(0)>1  Q XPD(1)"
^XTMP("XPDT",7419,"RTN","XPDIP",125,0)=" .N %"
^XTMP("XPDT",7419,"RTN","XPDIP",126,0)=" .S %(1)=$P(^DD(XPDF,.01,0),U)_""  ""_XPDX_""  is Duplicated,"",%(2)="" only ien #""_XPD(1)_"" was updated."""
^XTMP("XPDT",7419,"RTN","XPDIP",127,0)=" .D MES^XPDUTL(.%)"
^XTMP("XPDT",7419,"RTN","XPDIP",128,0)=" ;add a new entry"
^XTMP("XPDT",7419,"RTN","XPDIP",129,0)=" S XPDN(XPDF,""+1""_XPDIEN,.01)=XPDX K XPD"
^XTMP("XPDT",7419,"RTN","XPDIP",130,0)=" D UPDATE^DIE("""",""XPDN"",""XPD"")"
^XTMP("XPDT",7419,"RTN","XPDIP",131,0)=" I '$G(XPD(1)) D BMES^XPDUTL("" ""_$P(^DD(XPDF,.01,0),U)_"" ""_XPDX_"" **Couldn't Add to file**"") Q 0"
^XTMP("XPDT",7419,"RTN","XPDIP",132,0)=" Q XPD(1)"
^XTMP("XPDT",7419,"RTN","XPDIP",133,0)=" ;"
^XTMP("XPDT",7419,"RTN","XPDIP",134,0)="RTN ;move rtns to install file"
^XTMP("XPDT",7419,"RTN","XPDIP",135,0)=" N XPD,XPDC,XPDCR,XPDI,XPDJ,XPDK,XPDL,XPDM,XPDR,XPDRH,X,NOW"
^XTMP("XPDT",7419,"RTN","XPDIP",136,0)=" K ^XPD(9.7,XPDA,""RTN""),^TMP($J)"
^XTMP("XPDT",7419,"RTN","XPDIP",137,0)=" S (XPDC,XPDCR,XPDRH)=0,XPDJ="""",NOW=$$NOW^XLFDT()"
^XTMP("XPDT",7419,"RTN","XPDIP",138,0)=" ;get all routines that were loaded, XPDM=action"
^XTMP("XPDT",7419,"RTN","XPDIP",139,0)=" ;actions are 0=load, 1=delete, 2=skip"
^XTMP("XPDT",7419,"RTN","XPDIP",140,0)=" F  S XPDJ=$O(^XTMP(""XPDI"",XPDA,""RTN"",XPDJ)) Q:XPDJ=""""  S XPDM=^(XPDJ) D:'XPDM"
^XTMP("XPDT",7419,"RTN","XPDIP",141,0)=" .;XPD, build array to update ROUTINE multiple in INSTALL file"
^XTMP("XPDT",7419,"RTN","XPDIP",142,0)=" .S XPDC=XPDC+1,^TMP($J,""XPDL"",XPDC)=XPDC,^TMP($J,""XPD"",9.704,""+""_XPDC_"",""_XPDA_"","",.01)=XPDJ"
^XTMP("XPDT",7419,"RTN","XPDIP",143,0)=" .;XPDR, build array to update ROUTINE file, Set install date"
^XTMP("XPDT",7419,"RTN","XPDIP",144,0)=" .;S:'$D(^DIC(9.8,""B"",XPDJ)) XPDCR=XPDCR+1,^TMP($J,""XPDR"",9.8,""?+""_XPDCR_"","",.01)=XPDJ,^(1)=""R"""
^XTMP("XPDT",7419,"RTN","XPDIP",145,0)=" .S XPDCR=XPDCR+1,^TMP($J,""XPDR"",9.8,""?+""_XPDCR_"","",.01)=XPDJ,^(1)=""R"",^(7.4)=NOW ;**229"
^XTMP("XPDT",7419,"RTN","XPDIP",146,0)=" ;if we are doing VT graphic display, update only 40%"
^XTMP("XPDT",7419,"RTN","XPDIP",147,0)=" I $D(XPDIDVT) S XPDIDCNT=XPDIDTOT*.4 D UPDATE^XPDID(XPDIDCNT)"
^XTMP("XPDT",7419,"RTN","XPDIP",148,0)=" F XPDK=""DIKZ"",""DIEZ"",""DIPZ"" D"
^XTMP("XPDT",7419,"RTN","XPDIP",149,0)=" .S XPDI=0"
^XTMP("XPDT",7419,"RTN","XPDIP",150,0)=" .;loop thru list of compile template routines"
^XTMP("XPDT",7419,"RTN","XPDIP",151,0)=" .;XTMP(""XPDI"",XPDA,""DIKZ"",ien,routine name)"
^XTMP("XPDT",7419,"RTN","XPDIP",152,0)=" .F  S XPDI=$O(^XTMP(""XPDI"",XPDA,XPDK,XPDI)),XPDJ="""" Q:'XPDI  D"
^XTMP("XPDT",7419,"RTN","XPDIP",153,0)=" ..I 'XPDRH D BMES^XPDUTL("" The following Routines were created during this install:"") S XPDRH=1"
^XTMP("XPDT",7419,"RTN","XPDIP",154,0)=" ..F  S XPDJ=$O(^XTMP(""XPDI"",XPDA,XPDK,XPDI,XPDJ)) Q:XPDJ=""""  D:'$D(^XTMP(""XPDI"",XPDA,""RTN"",XPDJ))"
^XTMP("XPDT",7419,"RTN","XPDIP",155,0)=" ...S XPDC=XPDC+1,^TMP($J,""XPDL"",XPDC)=XPDC,^TMP($J,""XPD"",9.704,""+""_XPDC_"",""_XPDA_"","",.01)=XPDJ"
^XTMP("XPDT",7419,"RTN","XPDIP",156,0)=" ...D MES^XPDUTL(""     ""_XPDJ)"
^XTMP("XPDT",7419,"RTN","XPDIP",157,0)=" ;update routine multiple in Install file with routines and"
^XTMP("XPDT",7419,"RTN","XPDIP",158,0)=" ;compile template routines"
^XTMP("XPDT",7419,"RTN","XPDIP",159,0)=" I $D(^TMP($J,""XPD""))>9 D"
^XTMP("XPDT",7419,"RTN","XPDIP",160,0)=" .D UPDATE^DIE("""",""^TMP($J,""""XPD"""")"",""^TMP($J,""""XPDL"""")"")"
^XTMP("XPDT",7419,"RTN","XPDIP",161,0)=" .;if we are doing VT graphic display, update only 40%"
^XTMP("XPDT",7419,"RTN","XPDIP",162,0)=" .I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+(XPDIDTOT*.40) D UPDATE^XPDID(XPDIDCNT)"
^XTMP("XPDT",7419,"RTN","XPDIP",163,0)=" ;update Routine file"
^XTMP("XPDT",7419,"RTN","XPDIP",164,0)=" D:$D(^TMP($J,""XPDR""))>9 UPDATE^DIE("""",""^TMP($J,""""XPDR"""")"")"
^XTMP("XPDT",7419,"RTN","XPDIP",165,0)=" ;if we are doing VT graphic display, update 100%"
^XTMP("XPDT",7419,"RTN","XPDIP",166,0)=" I $D(XPDIDVT) D UPDATE^XPDID(XPDIDTOT)"
^XTMP("XPDT",7419,"RTN","XPDIP",167,0)=" Q"
^XTMP("XPDT",7419,"RTN","XPDTC")="0^2^B46970375^B45497905"
^XTMP("XPDT",7419,"RTN","XPDTC",1,0)="XPDTC ;SFISC/RSD - Transport calls ;10/15/2008"
^XTMP("XPDT",7419,"RTN","XPDTC",2,0)=" ;;8.0;KERNEL;**10,15,21,39,41,44,58,83,92,95,100,108,124,131,463,511,517**;Jul 10, 1995;Build 6"
^XTMP("XPDT",7419,"RTN","XPDTC",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7419,"RTN","XPDTC",4,0)=" Q"
^XTMP("XPDT",7419,"RTN","XPDTC",5,0)=" ;^XTMP(""XPDT"",XPDA,data type,file #,"
^XTMP("XPDT",7419,"RTN","XPDTC",6,0)=" ;XPDA=ien of File 9.6, XPDNM=.01 field"
^XTMP("XPDT",7419,"RTN","XPDTC",7,0)="DD ;build DD"
^XTMP("XPDT",7419,"RTN","XPDTC",8,0)=" N FILE,FGR,FNAM,Z2,Z3,Z4"
^XTMP("XPDT",7419,"RTN","XPDTC",9,0)=" S FILE=0,FGR=""^XTMP(""""XPDT"""",XPDA)"",FNAM=$NA(^XPD(9.6,XPDA,4,""APDD""))"
^XTMP("XPDT",7419,"RTN","XPDTC",10,0)=" F  S FILE=$O(^XPD(9.6,XPDA,4,FILE)) Q:'FILE  D"
^XTMP("XPDT",7419,"RTN","XPDTC",11,0)=" .S Z2=$G(^XPD(9.6,XPDA,4,FILE,222)),Z3=$G(^(223)),Z4=$G(^(224))"
^XTMP("XPDT",7419,"RTN","XPDTC",12,0)=" .Q:'$$DATA^XPDV(FILE,Z2)"
^XTMP("XPDT",7419,"RTN","XPDTC",13,0)=" .D FIA^DIFROMSU(FILE,"""",FNAM,FGR,Z2,Z3,Z4,XPDVER),DIERR:$D(DIERR)"
^XTMP("XPDT",7419,"RTN","XPDTC",14,0)=" Q:'$D(^XTMP(""XPDT"",XPDA,""FIA""))"
^XTMP("XPDT",7419,"RTN","XPDTC",15,0)=" ;send DD and Data"
^XTMP("XPDT",7419,"RTN","XPDTC",16,0)=" D DDOUT^DIFROMS("""","""","""",FGR),DIERR:$D(DIERR),DATAOUT^DIFROMS("""","""","""",FGR),DIERR:$D(DIERR)"
^XTMP("XPDT",7419,"RTN","XPDTC",17,0)=" Q"
^XTMP("XPDT",7419,"RTN","XPDTC",18,0)=" ;XPDERR is checked in XPDT and will abort transport"
^XTMP("XPDT",7419,"RTN","XPDTC",19,0)="DIERR ;record error"
^XTMP("XPDT",7419,"RTN","XPDTC",20,0)=" D MSG^DIALOG(""EW"",.XPD) S XPDERR=1"
^XTMP("XPDT",7419,"RTN","XPDTC",21,0)=" Q"
^XTMP("XPDT",7419,"RTN","XPDTC",22,0)="KRN ;build Kernel Files"
^XTMP("XPDT",7419,"RTN","XPDTC",23,0)=" ;XPDFILE=file #, XPDOLDA=ien in Build file"
^XTMP("XPDT",7419,"RTN","XPDTC",24,0)=" N %,%1,%2,DA,EACT,FACT,FGR,XPDFILE,XPDFL,XPDOLDA,XPDI"
^XTMP("XPDT",7419,"RTN","XPDTC",25,0)=" F XPDFILE=1:1 S Y0=$P($T(FILES+XPDFILE^XPDE),"";;"",2,99) Q:Y0=""""  S XPDI(+Y0)=Y0"
^XTMP("XPDT",7419,"RTN","XPDTC",26,0)=" ;XPDI(XPDFILE)=file;order;x-ref;fact;eact;fpre;epre;fpos;epos;fdel"
^XTMP("XPDT",7419,"RTN","XPDTC",27,0)=" S XPDFILE=0"
^XTMP("XPDT",7419,"RTN","XPDTC",28,0)=" F  S XPDFILE=$O(^XPD(9.6,XPDA,""KRN"",XPDFILE)) Q:'XPDFILE  S XPDI=$G(XPDI(XPDFILE)) I XPDI S FACT=$P(XPDI,"";"",4),EACT=$P(XPDI,"";"",5) D  Q:$D(XPDERR)  D:FACT]"""" ACT(FACT)"
^XTMP("XPDT",7419,"RTN","XPDTC",29,0)=" .;need to add code to check if File and data is already being sent in the File"
^XTMP("XPDT",7419,"RTN","XPDTC",30,0)=" .;mult. If it is, don't bother sending it again.  DTL(XPDFILE)"
^XTMP("XPDT",7419,"RTN","XPDTC",31,0)=" .S XPDOLDA=0,FGR=$$FILE^XPDV(XPDFILE) I FGR="""" S XPDERR=1 Q"
^XTMP("XPDT",7419,"RTN","XPDTC",32,0)=" .K ^TMP($J,""XPD"")"
^XTMP("XPDT",7419,"RTN","XPDTC",33,0)=" .F  S XPDOLDA=$O(^XPD(9.6,XPDA,""KRN"",XPDFILE,""NM"",XPDOLDA)) Q:'XPDOLDA  S Y0=$G(^(XPDOLDA,0)) D"
^XTMP("XPDT",7419,"RTN","XPDTC",34,0)=" ..;XPDFL= 0-send,1-delete,2-link,3-merge,4-attach,5-disable"
^XTMP("XPDT",7419,"RTN","XPDTC",35,0)=" ..S XPDFL=$P(Y0,U,3)"
^XTMP("XPDT",7419,"RTN","XPDTC",36,0)=" ..;If deleting at site get an unused DA"
^XTMP("XPDT",7419,"RTN","XPDTC",37,0)=" ..I XPDFL=1 S DA=$O(@FGR@("" ""),-1)+1 F DA=DA:1 Q:'$D(^XTMP(""XPDT"",XPDA,""KRN"",XPDFILE,DA))"
^XTMP("XPDT",7419,"RTN","XPDTC",38,0)=" ..;$P(Y0,U,2) is file # for this template, reset Y0 before getting DA"
^XTMP("XPDT",7419,"RTN","XPDTC",39,0)=" ..E  S:$P(Y0,U,2) $P(Y0,U)=$P(Y0,""    FILE #"") S DA=$$ENTRY^XPDV(Y0)"
^XTMP("XPDT",7419,"RTN","XPDTC",40,0)=" ..I 'DA S XPDERR=1 Q"
^XTMP("XPDT",7419,"RTN","XPDTC",41,0)=" ..;(-1)=action ^ ien in Build file"
^XTMP("XPDT",7419,"RTN","XPDTC",42,0)=" ..S ^XTMP(""XPDT"",XPDA,""KRN"",XPDFILE,DA,-1)=+XPDFL_""^""_XPDOLDA"
^XTMP("XPDT",7419,"RTN","XPDTC",43,0)=" ..;action 2 - verify children, 4 - verify parent"
^XTMP("XPDT",7419,"RTN","XPDTC",44,0)=" ..I XPDFL=2!(XPDFL=4),'$$MENU^XPDV(XPDFILE,DA,XPDFL) S XPDERR=1 Q"
^XTMP("XPDT",7419,"RTN","XPDTC",45,0)=" ..;if action is 1,4 or 5 then only send .01 field and set checksum to """""
^XTMP("XPDT",7419,"RTN","XPDTC",46,0)=" ..I XPDFL=1!(XPDFL>3) S ^XTMP(""XPDT"",XPDA,""KRN"",XPDFILE,DA,0)=$P(Y0,U),$P(^XPD(9.6,XPDA,""KRN"",XPDFILE,""NM"",XPDOLDA,0),U,4)="""" Q"
^XTMP("XPDT",7419,"RTN","XPDTC",47,0)=" ..M ^XTMP(""XPDT"",XPDA,""KRN"",XPDFILE,DA)=@FGR@(DA)"
^XTMP("XPDT",7419,"RTN","XPDTC",48,0)=" ..;execute entry build action"
^XTMP("XPDT",7419,"RTN","XPDTC",49,0)=" ..D:EACT]"""" ACT(EACT)"
^XTMP("XPDT",7419,"RTN","XPDTC",50,0)=" .;quit if no entries were saved"
^XTMP("XPDT",7419,"RTN","XPDTC",51,0)=" .Q:'$O(^XTMP(""XPDT"",XPDA,""KRN"",XPDFILE,0))"
^XTMP("XPDT",7419,"RTN","XPDTC",52,0)=" .;XPDI=XPDI(XPDFILE), build x-ref of order to install"
^XTMP("XPDT",7419,"RTN","XPDTC",53,0)=" .S %=$P(^DIC(XPDFILE,0),U),^XTMP(""XPDT"",XPDA,""ORD"",+$P(XPDI,"";"",2),XPDFILE)=XPDI,^(XPDFILE,0)=%"
^XTMP("XPDT",7419,"RTN","XPDTC",54,0)=" .Q"
^XTMP("XPDT",7419,"RTN","XPDTC",55,0)=" Q"
^XTMP("XPDT",7419,"RTN","XPDTC",56,0)="QUES ;build from Install Questions multiple"
^XTMP("XPDT",7419,"RTN","XPDTC",57,0)=" N I,J,K,X,%"
^XTMP("XPDT",7419,"RTN","XPDTC",58,0)=" S X="""""
^XTMP("XPDT",7419,"RTN","XPDTC",59,0)=" ;the ""B"" x-ref will give me the order of the questions"
^XTMP("XPDT",7419,"RTN","XPDTC",60,0)=" F  S X=$O(^XPD(9.6,XPDA,""QUES"",""B"",X)) Q:X=""""  S I=$$QUES^XPDV(X) S:'I XPDERR=1 D:I"
^XTMP("XPDT",7419,"RTN","XPDTC",61,0)=" .S J=0 F  S J=$O(^XPD(9.6,XPDA,""QUES"",I,J)) Q:J=""""  D"
^XTMP("XPDT",7419,"RTN","XPDTC",62,0)=" ..;tranform J to DIR subscripts"
^XTMP("XPDT",7419,"RTN","XPDTC",63,0)=" ..I $L(J)=1!(J=""QQ"") S ^XTMP(""XPDT"",XPDA,""QUES"",X,$TR(J,""1ABQ"",""0AB?""))=^(J) Q  ;^(J) ref to ^XPD(9.6,XPDA,""QUES"",I,J)"
^XTMP("XPDT",7419,"RTN","XPDTC",64,0)=" ..;set the word processing fields into DIR(""?"",#) structure"
^XTMP("XPDT",7419,"RTN","XPDTC",65,0)=" ..F %=1:1 Q:'$D(^XPD(9.6,XPDA,""QUES"",I,J,%,0))  S ^XTMP(""XPDT"",XPDA,""QUES"",X,$TR(J,""AQ10"",""A?""),%)=^(0)"
^XTMP("XPDT",7419,"RTN","XPDTC",66,0)=" ;send the File questions"
^XTMP("XPDT",7419,"RTN","XPDTC",67,0)=" S K=$G(^XPD(9.6,XPDA,""QDEF"")) ;Developer Defaults for Questions"
^XTMP("XPDT",7419,"RTN","XPDTC",68,0)=" F I=1:2 S X=$P($T(QUESTION+I),"";;"",2,99) Q:X=""""  S Y=$P($T(QUESTION+I+1),"";;"",2) D"
^XTMP("XPDT",7419,"RTN","XPDTC",69,0)=" .S ^XTMP(""XPDT"",XPDA,""QUES"",$P(X,"";""),0)=$P(X,"";"",2),^(""A"")=$P(X,"";"",3),^(""B"")=$S($L($P(K,U,I)):$P(K,U,I),1:$P(X,"";"",4)),^(""??"")=$P(X,"";"",5) S:Y]"""" ^(""M"")=Y"
^XTMP("XPDT",7419,"RTN","XPDTC",70,0)=" Q"
^XTMP("XPDT",7419,"RTN","XPDTC",71,0)="INT ;build pre,post, & enviroment init routines"
^XTMP("XPDT",7419,"RTN","XPDTC",72,0)=" N %,I,R,X,Z"
^XTMP("XPDT",7419,"RTN","XPDTC",73,0)=" F I=""PRE"",""INI"",""INIT"" I $G(^XPD(9.6,XPDA,I))]"""" S X=^(I) D"
^XTMP("XPDT",7419,"RTN","XPDTC",74,0)=" .;remove parameters and seperate routine name from tag^routine"
^XTMP("XPDT",7419,"RTN","XPDTC",75,0)=" .S ^XTMP(""XPDT"",XPDA,I)=X,X=$P(X,""(""),R=$P(X,U,$L(X,U)) Q:$D(^(""RTN"",R))"
^XTMP("XPDT",7419,"RTN","XPDTC",76,0)=" .I '$$RTN^XPDV(X,.Z) W !,""Routine "",X,Z S XPDERR=1 Q"
^XTMP("XPDT",7419,"RTN","XPDTC",77,0)=" .S %=$$LOAD^XPDTA(R,""0^"")"
^XTMP("XPDT",7419,"RTN","XPDTC",78,0)=" Q"
^XTMP("XPDT",7419,"RTN","XPDTC",79,0)="BLD ;build Build file, Package file and Order Parameter file"
^XTMP("XPDT",7419,"RTN","XPDTC",80,0)=" N %,DIC,X,XPD,XPDI,XPDV,Y"
^XTMP("XPDT",7419,"RTN","XPDTC",81,0)=" ;Update the 'Date Distributed' field"
^XTMP("XPDT",7419,"RTN","XPDTC",82,0)=" S XPD(9.6,XPDA_"","",.02)=$$DT^XLFDT()"
^XTMP("XPDT",7419,"RTN","XPDTC",83,0)=" D FILE^DIE("""",""XPD"") K XPD"
^XTMP("XPDT",7419,"RTN","XPDTC",84,0)=" ;save version of kernel and fm"
^XTMP("XPDT",7419,"RTN","XPDTC",85,0)=" S ^XTMP(""XPDT"",XPDA,""VER"")=$$VERSION^XPDUTL(""XU"")_U_$$VERSION^XPDUTL(""VA FILEMAN"")"
^XTMP("XPDT",7419,"RTN","XPDTC",86,0)=" S ^XTMP(""XPDT"",XPDA,""MBREQ"")=$P($G(XPDT(XPDT)),U,4)"
^XTMP("XPDT",7419,"RTN","XPDTC",87,0)=" M ^XTMP(""XPDT"",XPDA,""BLD"",XPDA)=^XPD(9.6,XPDA)"
^XTMP("XPDT",7419,"RTN","XPDTC",88,0)=" ;check national package file pointer"
^XTMP("XPDT",7419,"RTN","XPDTC",89,0)=" S XPDI=$P(^XPD(9.6,XPDA,0),U,2)"
^XTMP("XPDT",7419,"RTN","XPDTC",90,0)=" I XPDI="""" W !,""No Package File Link"" Q"
^XTMP("XPDT",7419,"RTN","XPDTC",91,0)=" S $P(^XTMP(""XPDT"",XPDA,""BLD"",XPDA,0),U,2)=$$PT^XPDTA(""^DIC(9.4)"",XPDI)"
^XTMP("XPDT",7419,"RTN","XPDTC",92,0)=" ;quit if no pointer to package file"
^XTMP("XPDT",7419,"RTN","XPDTC",93,0)=" I '$D(^DIC(9.4,XPDI)) W !,""Package File Link is corrupted"" S XPDERR=1 Q"
^XTMP("XPDT",7419,"RTN","XPDTC",94,0)=" ;update version multiple in package file,XPD=version^date distributed"
^XTMP("XPDT",7419,"RTN","XPDTC",95,0)=" S XPD=$$VER^XPDUTL(XPDNM)_U_$P(^XTMP(""XPDT"",XPDA,""BLD"",XPDA,0),U,4)"
^XTMP("XPDT",7419,"RTN","XPDTC",96,0)=" ;XPD(1)=root of description field"
^XTMP("XPDT",7419,"RTN","XPDTC",97,0)=" S:$D(^XTMP(""XPDT"",XPDA,""BLD"",XPDA,1)) XPD(1)=$NA(^(1))"
^XTMP("XPDT",7419,"RTN","XPDTC",98,0)=" S ^XTMP(""XPDT"",XPDA,""PKG"",XPDI,0)=^DIC(9.4,XPDI,0),^XTMP(""XPDT"",XPDA,""PKG"",XPDI,22,0)=""^""_$P(^DD(9.4,22,0),U,2)_""^1^1"""
^XTMP("XPDT",7419,"RTN","XPDTC",99,0)=" ;add node 20 to XTMP for Patient Merge"
^XTMP("XPDT",7419,"RTN","XPDTC",100,0)=" M ^XTMP(""XPDT"",XPDA,""PKG"",XPDI,20)=^DIC(9.4,XPDI,20)"
^XTMP("XPDT",7419,"RTN","XPDTC",101,0)=" ;XPDNM'[""*"" is a version release"
^XTMP("XPDT",7419,"RTN","XPDTC",102,0)=" I XPDNM'[""*"" D"
^XTMP("XPDT",7419,"RTN","XPDTC",103,0)=" .S XPDV=$$PKGVER^XPDIP(XPDI,.XPD)"
^XTMP("XPDT",7419,"RTN","XPDTC",104,0)=" .;Merge is used to set single nodes and merge multiples"
^XTMP("XPDT",7419,"RTN","XPDTC",105,0)=" .F %=1,5,7,20,""DEV"",""VERSION"" M ^XTMP(""XPDT"",XPDA,""PKG"",XPDI,%)=^DIC(9.4,XPDI,%)"
^XTMP("XPDT",7419,"RTN","XPDTC",106,0)=" .;XPDV=ien of Version Multiple"
^XTMP("XPDT",7419,"RTN","XPDTC",107,0)=" .I $D(^DIC(9.4,XPDI,22,XPDV))'>9 W !!,""**Version multiple in Package file wasn't updated**"",!! S XPDERR=1 Q"
^XTMP("XPDT",7419,"RTN","XPDTC",108,0)=" .;get just the current version multiple and make it the first entry in version multiple"
^XTMP("XPDT",7419,"RTN","XPDTC",109,0)=" .M ^XTMP(""XPDT"",XPDA,""PKG"",XPDI,22,1)=^DIC(9.4,XPDI,22,XPDV)"
^XTMP("XPDT",7419,"RTN","XPDTC",110,0)=" .;check if SEND PATCH HISTORY is NO, kill PAH"
^XTMP("XPDT",7419,"RTN","XPDTC",111,0)=" .I $P(XPDT(XPDT),U,5) K ^XTMP(""XPDT"",XPDA,""PKG"",XPDI,22,1,""PAH"")"
^XTMP("XPDT",7419,"RTN","XPDTC",112,0)=" ;this is a patch, %=version number, $P(XPD,U)=patch number"
^XTMP("XPDT",7419,"RTN","XPDTC",113,0)=" E  D"
^XTMP("XPDT",7419,"RTN","XPDTC",114,0)=" .S %=$P(XPD,U),$P(XPD,U)=$P(XPDNM,""*"",3),XPDV=$$PKGPAT^XPDIP(XPDI,%,.XPD)"
^XTMP("XPDT",7419,"RTN","XPDTC",115,0)=" .S ^XTMP(""XPDT"",XPDA,""PKG"",XPDI,22,1,0)=^DIC(9.4,XPDI,22,+XPDV,0)"
^XTMP("XPDT",7419,"RTN","XPDTC",116,0)=" .I $D(^DIC(9.4,XPDI,22,+XPDV,""PAH"",+$P(XPDV,U,2)))'>9 W !!,""**Patch multiple in Package file wasn't updated**"",!! S XPDERR=1 Q"
^XTMP("XPDT",7419,"RTN","XPDTC",117,0)=" .M ^XTMP(""XPDT"",XPDA,""PKG"",XPDI,22,1,""PAH"",1)=^DIC(9.4,XPDI,22,+XPDV,""PAH"",+$P(XPDV,U,2))"
^XTMP("XPDT",7419,"RTN","XPDTC",118,0)=" .;if CURRENT VERSION was updated in $$PKGPAT, save to TG"
^XTMP("XPDT",7419,"RTN","XPDTC",119,0)=" .I $P(XPDV,U,3) S ^XTMP(""XPDT"",XPDA,""PKG"",XPDI,""VERSION"")=$P(XPDV,U,3)"
^XTMP("XPDT",7419,"RTN","XPDTC",120,0)=" ;save the version ien^patch ien on -1 node"
^XTMP("XPDT",7419,"RTN","XPDTC",121,0)=" S ^XTMP(""XPDT"",XPDA,""PKG"",XPDI,-1)=""1^1"""
^XTMP("XPDT",7419,"RTN","XPDTC",122,0)=" ;resolve Primary Help Frame (0;4)"
^XTMP("XPDT",7419,"RTN","XPDTC",123,0)=" S %=+$P(^DIC(9.4,XPDI,0),U,4) S:% $P(^XTMP(""XPDT"",XPDA,""PKG"",XPDI,0),U,4)=$$PT^XPDTA(""^DIC(9.2)"",%)"
^XTMP("XPDT",7419,"RTN","XPDTC",124,0)=" Q"
^XTMP("XPDT",7419,"RTN","XPDTC",125,0)=" ;"
^XTMP("XPDT",7419,"RTN","XPDTC",126,0)="ACT(%) ;execute action"
^XTMP("XPDT",7419,"RTN","XPDTC",127,0)=" ;user can count on DA,XPDFILE,XPDFL,XPDNM,XPDOLDA being around"
^XTMP("XPDT",7419,"RTN","XPDTC",128,0)=" ;DA=ien in ^XTMP(""XPDT"",XPDA,""KRN"",XPDFILE,DA)"
^XTMP("XPDT",7419,"RTN","XPDTC",129,0)=" ;XPDOLDA=ien in ^XPD(9.6,XPDA,""KRN"",XPDIFLE,""NM"",XPDOLDA)"
^XTMP("XPDT",7419,"RTN","XPDTC",130,0)=" N EACT,FACT,FGR,K0,Y0"
^XTMP("XPDT",7419,"RTN","XPDTC",131,0)=" S:%'[""^"" %=""^""_%"
^XTMP("XPDT",7419,"RTN","XPDTC",132,0)=" D @% Q"
^XTMP("XPDT",7419,"RTN","XPDTC",133,0)=" ;"
^XTMP("XPDT",7419,"RTN","XPDTC",134,0)=" ;the following are the default questions for the INSTALL QUESTIONS"
^XTMP("XPDT",7419,"RTN","XPDTC",135,0)=" ;in file 9.6, the format is:"
^XTMP("XPDT",7419,"RTN","XPDTC",136,0)=" ;;field .01;field 1;field 2;field 4;field 7"
^XTMP("XPDT",7419,"RTN","XPDTC",137,0)=" ;;field 10"
^XTMP("XPDT",7419,"RTN","XPDTC",138,0)="QUESTION ;package install questions"
^XTMP("XPDT",7419,"RTN","XPDTC",139,0)=" ;;XPF1;Y;Shall I write over your |FLAG| File;YES;^D REP^XPDH"
^XTMP("XPDT",7419,"RTN","XPDTC",140,0)=" ;;D XPF1^XPDIQ"
^XTMP("XPDT",7419,"RTN","XPDTC",141,0)=" ;;XPF2;Y;Want my data |FLAG| yours;YES;^D DTA^XPDH"
^XTMP("XPDT",7419,"RTN","XPDTC",142,0)=" ;;D XPF2^XPDIQ"
^XTMP("XPDT",7419,"RTN","XPDTC",143,0)=" ;;XPI1;YO;Want KIDS to INHIBIT LOGONs during the install;NO;^D INHIBIT^XPDH"
^XTMP("XPDT",7419,"RTN","XPDTC",144,0)=" ;;D XPI1^XPDIQ"
^XTMP("XPDT",7419,"RTN","XPDTC",145,0)=" ;;XPM1;PO^VA(200,:EM;Enter the Coordinator for Mail Group '|FLAG|';;^D MG^XPDH"
^XTMP("XPDT",7419,"RTN","XPDTC",146,0)=" ;;D XPM1^XPDIQ"
^XTMP("XPDT",7419,"RTN","XPDTC",147,0)=" ;;XPO1;Y;Want KIDS to Rebuild Menu Trees Upon Completion of Install;NO;^D MENU^XPDH"
^XTMP("XPDT",7419,"RTN","XPDTC",148,0)=" ;;D XPO1^XPDIQ"
^XTMP("XPDT",7419,"RTN","XPDTC",149,0)=" ;;XPZ1;Y;Want to DISABLE Scheduled Options, Menu Options, and Protocols;NO;^D OPT^XPDH"
^XTMP("XPDT",7419,"RTN","XPDTC",150,0)=" ;;D XPZ1^XPDIQ"
^XTMP("XPDT",7419,"RTN","XPDTC",151,0)=" ;;XPZ2;Y;Want to MOVE routines to other CPUs;NO;^D RTN^XPDH"
^XTMP("XPDT",7419,"RTN","XPDTC",152,0)=" ;;D XPZ2^XPDIQ"
^XTMP("XPDT",7419,"VER")="8.0^22.0"
^XTMP("XPDT",7477)="1"
^XTMP("XPDT",7477,"BLD",1017,0)="XU*8.0*466^KERNEL^0^3080604^y"
^XTMP("XPDT",7477,"BLD",1017,1,0)="^^2^2^3070627^"
^XTMP("XPDT",7477,"BLD",1017,1,1,0)="XU*8*466  ""Visitor add to NPF update."""
^XTMP("XPDT",7477,"BLD",1017,1,2,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7477,"BLD",1017,4,0)="^9.64PA^^"
^XTMP("XPDT",7477,"BLD",1017,6)="^420"
^XTMP("XPDT",7477,"BLD",1017,6.3)="9"
^XTMP("XPDT",7477,"BLD",1017,"INID")="^y"
^XTMP("XPDT",7477,"BLD",1017,"INIT")="POST^XU8P466"
^XTMP("XPDT",7477,"BLD",1017,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7477,"BLD",1017,"KRN",.4,0)=".4"
^XTMP("XPDT",7477,"BLD",1017,"KRN",.4,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7477,"BLD",1017,"KRN",.4,"NM",1,0)="XUSAP PROXY LIST    FILE #200^200^0"
^XTMP("XPDT",7477,"BLD",1017,"KRN",.4,"NM","B","XUSAP PROXY LIST    FILE #200",1)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN",.401,0)=".401"
^XTMP("XPDT",7477,"BLD",1017,"KRN",.402,0)=".402"
^XTMP("XPDT",7477,"BLD",1017,"KRN",.403,0)=".403"
^XTMP("XPDT",7477,"BLD",1017,"KRN",.5,0)=".5"
^XTMP("XPDT",7477,"BLD",1017,"KRN",.84,0)=".84"
^XTMP("XPDT",7477,"BLD",1017,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7477,"BLD",1017,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7477,"BLD",1017,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7477,"BLD",1017,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7477,"BLD",1017,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7477,"BLD",1017,"KRN",9.8,"NM",1,0)="XUESSO1^^0^B38935544"
^XTMP("XPDT",7477,"BLD",1017,"KRN",9.8,"NM","B","XUESSO1",1)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN",19,0)="19"
^XTMP("XPDT",7477,"BLD",1017,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7477,"BLD",1017,"KRN",101,0)="101"
^XTMP("XPDT",7477,"BLD",1017,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7477,"BLD",1017,"KRN",771,0)="771"
^XTMP("XPDT",7477,"BLD",1017,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7477,"BLD",1017,"KRN",870,0)="870"
^XTMP("XPDT",7477,"BLD",1017,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7477,"BLD",1017,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7477,"BLD",1017,"KRN",8994,0)="8994"
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",.4,.4)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",.401,.401)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",.402,.402)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",.403,.403)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",.5,.5)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",.84,.84)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",19,19)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",101,101)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",771,771)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",870,870)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7477,"BLD",1017,"KRN","B",8994,8994)=""
^XTMP("XPDT",7477,"BLD",1017,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7477,"BLD",1017,"QUES",0)="^9.62^^"
^XTMP("XPDT",7477,"BLD",1017,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7477,"BLD",1017,"REQB",1,0)="XU*8.0*395^2"
^XTMP("XPDT",7477,"BLD",1017,"REQB","B","XU*8.0*395",1)=""
^XTMP("XPDT",7477,"INIT")="POST^XU8P466"
^XTMP("XPDT",7477,"KRN",.4,126,-1)="0^1"
^XTMP("XPDT",7477,"KRN",.4,126,0)="XUSAP PROXY LIST^3070712.1315^^200^^@^3071002"
^XTMP("XPDT",7477,"KRN",.4,126,"F",1)=".01~9.5,.01;L18~9.5,2;""IsPrimary""~S XZ=$$ACTIVE^XUSER(D0);X;"""";Z;""S XZ=$$ACTIVE^XUSER(D0)""~"
^XTMP("XPDT",7477,"KRN",.4,126,"F",2)="W:DIOO1[""CONN"" $S(XZ:""Yes"",1:""No"");""Active"";L3;Z;""W:DIOO1[""CONN"" $S(XZ:""Yes"",1:""No"")""~"
^XTMP("XPDT",7477,"KRN",.4,126,"H")="PROXY USER LIST"
^XTMP("XPDT",7477,"MBREQ")="0"
^XTMP("XPDT",7477,"ORD",5,.4)=".4;5;;;EDEOUT^DIFROMSO(.4,DA,"""",XPDA);FPRE^DIFROMSI(.4,"""",XPDA);EPRE^DIFROMSI(.4,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.4,DA,"""",XPDA);DEL^DIFROMSK(.4,"""",%)"
^XTMP("XPDT",7477,"ORD",5,.4,0)="PRINT TEMPLATE"
^XTMP("XPDT",7477,"PKG",3,-1)="1^1"
^XTMP("XPDT",7477,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7477,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7477,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7477,"PKG",3,22,1,0)="8.0^3051215^2970507^.5"
^XTMP("XPDT",7477,"PKG",3,22,1,"PAH",1,0)="466^3080604"
^XTMP("XPDT",7477,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3080604"
^XTMP("XPDT",7477,"PKG",3,22,1,"PAH",1,1,1,0)="XU*8*466  ""Visitor add to NPF update."""
^XTMP("XPDT",7477,"PKG",3,22,1,"PAH",1,1,2,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7477,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7477,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7477,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7477,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7477,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7477,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7477,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7477,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7477,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7477,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7477,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7477,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7477,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7477,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7477,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7477,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7477,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7477,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7477,"QUES","XPM1","B")=""
^XTMP("XPDT",7477,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7477,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7477,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7477,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7477,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7477,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7477,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7477,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7477,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7477,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7477,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7477,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7477,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7477,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7477,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7477,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7477,"RTN")="2"
^XTMP("XPDT",7477,"RTN","XU8P466")="0^^B689666^n/a"
^XTMP("XPDT",7477,"RTN","XU8P466",1,0)="XU8P466 ;ISF/RWF - PATCH 466 POST INIT ;06/04/2008"
^XTMP("XPDT",7477,"RTN","XU8P466",2,0)=" ;;8.0;KERNEL;**466**;Jul 10, 1995;Build 9"
^XTMP("XPDT",7477,"RTN","XU8P466",3,0)=" Q"
^XTMP("XPDT",7477,"RTN","XU8P466",4,0)=" ;"
^XTMP("XPDT",7477,"RTN","XU8P466",5,0)="POST ;Post-init"
^XTMP("XPDT",7477,"RTN","XU8P466",6,0)=" Q:$$PATCH^XPDUTL(""XU*8.0*466"")"
^XTMP("XPDT",7477,"RTN","XU8P466",7,0)=" D BMES^XPDUTL("" Post-Init is removing VPID's. Please wait a minute!"")"
^XTMP("XPDT",7477,"RTN","XU8P466",8,0)=" D DEL"
^XTMP("XPDT",7477,"RTN","XU8P466",9,0)=" D BMES^XPDUTL("" Finished removing VPID's"")"
^XTMP("XPDT",7477,"RTN","XU8P466",10,0)=" Q"
^XTMP("XPDT",7477,"RTN","XU8P466",11,0)=" ;"
^XTMP("XPDT",7477,"RTN","XU8P466",12,0)="DEL ;Clean out any VPIDs."
^XTMP("XPDT",7477,"RTN","XU8P466",13,0)=" N DA,DIC,DIE,DR,VPID,X,Y"
^XTMP("XPDT",7477,"RTN","XU8P466",14,0)=" S VPID="""",DIE=""^VA(200,"",DA=0"
^XTMP("XPDT",7477,"RTN","XU8P466",15,0)=" F  S DA=$O(^VA(200,DA)) Q:'DA  I $D(^VA(200,DA,""VPID"")) D"
^XTMP("XPDT",7477,"RTN","XU8P466",16,0)=" . S DR=""9000///@"" D ^DIE"
^XTMP("XPDT",7477,"RTN","XU8P466",17,0)=" . Q"
^XTMP("XPDT",7477,"RTN","XU8P466",18,0)=" Q"
^XTMP("XPDT",7477,"RTN","XUESSO1")="0^1^B38935544^B30134233"
^XTMP("XPDT",7477,"RTN","XUESSO1",1,0)="XUESSO1 ;LUKE/SEA Single Sign-on utilities; ;2/20/08  09:27"
^XTMP("XPDT",7477,"RTN","XUESSO1",2,0)=" ;;8.0;KERNEL;**165,183,196,245,254,269,337,395,466**;Jul 10, 1995;Build 9"
^XTMP("XPDT",7477,"RTN","XUESSO1",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7477,"RTN","XUESSO1",4,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",5,0)="GET(INDUZ) ;Gather identifying data from user's home site."
^XTMP("XPDT",7477,"RTN","XUESSO1",6,0)=" ;Must have Name, Access&Verify codes, SSN (no pseudo), station name&number"
^XTMP("XPDT",7477,"RTN","XUESSO1",7,0)=" N %,NAME,SITE,SSN,PHONE,X,N,VPID"
^XTMP("XPDT",7477,"RTN","XUESSO1",8,0)=" I '$D(DUZ) G BOMB"
^XTMP("XPDT",7477,"RTN","XUESSO1",9,0)=" I '$D(DUZ(2)) G BOMB"
^XTMP("XPDT",7477,"RTN","XUESSO1",10,0)=" ;I '$D(INDUZ) S INDUZ=DUZ"
^XTMP("XPDT",7477,"RTN","XUESSO1",11,0)=" S N=$G(^VA(200,DUZ,0))"
^XTMP("XPDT",7477,"RTN","XUESSO1",12,0)=" I '$L(N) G BOMB"
^XTMP("XPDT",7477,"RTN","XUESSO1",13,0)=" S %=$P(N,U,3) I $L(%)<1 G BOMB ;No Access Code"
^XTMP("XPDT",7477,"RTN","XUESSO1",14,0)=" S %=$P($G(^VA(200,DUZ,.1)),U,2) I $L(%)<1 G BOMB ;No Verify Code"
^XTMP("XPDT",7477,"RTN","XUESSO1",15,0)=" S %=$P(N,U,11) I $L(%)>1,(DT>%) G BOMB ;Terminated"
^XTMP("XPDT",7477,"RTN","XUESSO1",16,0)=" S NAME=$P(N,U)"
^XTMP("XPDT",7477,"RTN","XUESSO1",17,0)=" I '$L(NAME) G BOMB"
^XTMP("XPDT",7477,"RTN","XUESSO1",18,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",19,0)=" S SITE=$$NS^XUAF4(DUZ(2)) ;Site is name^station#"
^XTMP("XPDT",7477,"RTN","XUESSO1",20,0)=" I $P(SITE,U,2)="""" G BOMB ;Need a station number"
^XTMP("XPDT",7477,"RTN","XUESSO1",21,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",22,0)=" S SSN=$P($G(^VA(200,DUZ,1)),U,9)"
^XTMP("XPDT",7477,"RTN","XUESSO1",23,0)=" I $$SPECIAL($P(SITE,""^"",2)) S SSN=999999999 G G4 ;Manila RO doesn't need SSN"
^XTMP("XPDT",7477,"RTN","XUESSO1",24,0)=" I 'SSN G BOMB"
^XTMP("XPDT",7477,"RTN","XUESSO1",25,0)=" ;Don't allow if the SSN is pseudo"
^XTMP("XPDT",7477,"RTN","XUESSO1",26,0)=" I $E(SSN,10)=""P"" G BOMB"
^XTMP("XPDT",7477,"RTN","XUESSO1",27,0)=" ;Don't allow if the SSN is not real, (e.g. 00000NNNN)"
^XTMP("XPDT",7477,"RTN","XUESSO1",28,0)=" I $E(SSN,1,5)=""00000"" G BOMB"
^XTMP("XPDT",7477,"RTN","XUESSO1",29,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",30,0)="G4 S PHONE=$$PH"
^XTMP("XPDT",7477,"RTN","XUESSO1",31,0)=" S VPID=$$VPID^XUPS(DUZ) ;(p337)"
^XTMP("XPDT",7477,"RTN","XUESSO1",32,0)=" S X=SSN_U_NAME_U_SITE_U_DUZ"
^XTMP("XPDT",7477,"RTN","XUESSO1",33,0)=" I $L(PHONE)>2&($L(PHONE<20)) S X=X_U_PHONE"
^XTMP("XPDT",7477,"RTN","XUESSO1",34,0)=" S $P(X,U,7)=VPID ;(p337)"
^XTMP("XPDT",7477,"RTN","XUESSO1",35,0)=" ;ssn^name^station name^station number^DUZ^phone^vpid"
^XTMP("XPDT",7477,"RTN","XUESSO1",36,0)=" Q X"
^XTMP("XPDT",7477,"RTN","XUESSO1",37,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",38,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",39,0)="BOMB ;Insufficient information to allow visiting"
^XTMP("XPDT",7477,"RTN","XUESSO1",40,0)=" S X=""-1^Insufficient User Information On File.  ssn,name,station name,station number,DUZ,phone"""
^XTMP("XPDT",7477,"RTN","XUESSO1",41,0)=" Q X"
^XTMP("XPDT",7477,"RTN","XUESSO1",42,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",43,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",44,0)="PH() ; Try for a phone number or pager"
^XTMP("XPDT",7477,"RTN","XUESSO1",45,0)=" N %,X"
^XTMP("XPDT",7477,"RTN","XUESSO1",46,0)=" S %="""""
^XTMP("XPDT",7477,"RTN","XUESSO1",47,0)=" S X=$G(^VA(200,DUZ,.13))"
^XTMP("XPDT",7477,"RTN","XUESSO1",48,0)=" I '$L(X) Q """""
^XTMP("XPDT",7477,"RTN","XUESSO1",49,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",50,0)=" S %=$P(X,U,5) I $L(%)>6 Q %  ;Commercial #"
^XTMP("XPDT",7477,"RTN","XUESSO1",51,0)=" S %=$P(X,U,2) I $L(%)>2 Q %  ;Office"
^XTMP("XPDT",7477,"RTN","XUESSO1",52,0)=" S %=$P(X,U,8) I $L(%)>6 Q %  ;Digital Pager"
^XTMP("XPDT",7477,"RTN","XUESSO1",53,0)=" S %=$P(X,U,7) I $L(%)>6 Q %  ;Pager"
^XTMP("XPDT",7477,"RTN","XUESSO1",54,0)=" S %=$P(X,U,3) I $L(%)>2 Q %  ;Phone #3"
^XTMP("XPDT",7477,"RTN","XUESSO1",55,0)=" S %=$P(X,U,4) I $L(%)>2 Q %  ;Phone #4"
^XTMP("XPDT",7477,"RTN","XUESSO1",56,0)=" S %=$P(X,U,1) I $L(%)>2 Q %  ;Home Phone"
^XTMP("XPDT",7477,"RTN","XUESSO1",57,0)=" Q """" ;Couldn't find one."
^XTMP("XPDT",7477,"RTN","XUESSO1",58,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",59,0)="SPECIAL(SN) ;Special Manila RO site"
^XTMP("XPDT",7477,"RTN","XUESSO1",60,0)=" Q 358=SN"
^XTMP("XPDT",7477,"RTN","XUESSO1",61,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",62,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",63,0)="PUT(DATIN) ;;Setup data from authenticating site GET() at receiving site"
^XTMP("XPDT",7477,"RTN","XUESSO1",64,0)=" ;Return: 0=fail, 1=OK"
^XTMP("XPDT",7477,"RTN","XUESSO1",65,0)=" N NEWDUZ,FDR,TODAY,IEN,DIC,USER,X,%T"
^XTMP("XPDT",7477,"RTN","XUESSO1",66,0)=" N SSN,NAME,SITE,SITENUM,RMTDUZ,PHONE,VPID"
^XTMP("XPDT",7477,"RTN","XUESSO1",67,0)=" S U=""^"",TODAY=$$HTFM^XLFDT($H),DT=$P(TODAY,"".""),NEWDUZ=0"
^XTMP("XPDT",7477,"RTN","XUESSO1",68,0)=" K ^TMP(""DIERR"",$J)"
^XTMP("XPDT",7477,"RTN","XUESSO1",69,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",70,0)=" S SSN=$P(DATIN,U,1),NAME=$P(DATIN,U,2),SITE=$P(DATIN,U,3)"
^XTMP("XPDT",7477,"RTN","XUESSO1",71,0)=" S SITENUM=$P(DATIN,U,4),RMTDUZ=$P(DATIN,U,5),PHONE=$P(DATIN,U,6)"
^XTMP("XPDT",7477,"RTN","XUESSO1",72,0)=" S VPID=$P(DATIN,U,7) ;(p337)"
^XTMP("XPDT",7477,"RTN","XUESSO1",73,0)=" ;Format checks"
^XTMP("XPDT",7477,"RTN","XUESSO1",74,0)=" I NAME'?1U.E1"",""1U.E Q 0"
^XTMP("XPDT",7477,"RTN","XUESSO1",75,0)=" I SSN'?9N Q 0"
^XTMP("XPDT",7477,"RTN","XUESSO1",76,0)=" I '$L(SITE)!('$L(SITENUM)) Q 0"
^XTMP("XPDT",7477,"RTN","XUESSO1",77,0)=" I RMTDUZ'>0 Q 0 ;p337"
^XTMP("XPDT",7477,"RTN","XUESSO1",78,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",79,0)=" ;Get a LOCK. Block if can't get."
^XTMP("XPDT",7477,"RTN","XUESSO1",80,0)=" L +^VA(200,""HL7""):10 Q:'$T 0"
^XTMP("XPDT",7477,"RTN","XUESSO1",81,0)=" S %T=$$TALL($G(DUZ,0)) L -^VA(200,""HL7"")"
^XTMP("XPDT",7477,"RTN","XUESSO1",82,0)=" I %T Q $$SET(NEWDUZ) ;Return 1 if OK."
^XTMP("XPDT",7477,"RTN","XUESSO1",83,0)=" Q 0"
^XTMP("XPDT",7477,"RTN","XUESSO1",84,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",85,0)=" ;Per PSIM don't load VPID's, Only done by PSIM."
^XTMP("XPDT",7477,"RTN","XUESSO1",86,0)=" ;Code for adding VPID removed in p466."
^XTMP("XPDT",7477,"RTN","XUESSO1",87,0)="TALL(DUZ) ;Test for existing user or adds a new one"
^XTMP("XPDT",7477,"RTN","XUESSO1",88,0)=" N FLAG S FLAG=0,DUZ(0)=""@"" ;Make sure we can add the entry"
^XTMP("XPDT",7477,"RTN","XUESSO1",89,0)=" ;See if match VPID, Per PSIM only use for lookup."
^XTMP("XPDT",7477,"RTN","XUESSO1",90,0)=" I $L(VPID) D"
^XTMP("XPDT",7477,"RTN","XUESSO1",91,0)=" . S NEWDUZ=+$$IEN^XUPS(VPID) Q:NEWDUZ<1"
^XTMP("XPDT",7477,"RTN","XUESSO1",92,0)=" . I '$D(^VA(200,NEWDUZ,8910,""B"",SITENUM)) D VISM"
^XTMP("XPDT",7477,"RTN","XUESSO1",93,0)=" . D UPDT S FLAG=1"
^XTMP("XPDT",7477,"RTN","XUESSO1",94,0)=" . Q"
^XTMP("XPDT",7477,"RTN","XUESSO1",95,0)=" I FLAG Q 1 ;Quit here if we found a match on VPID"
^XTMP("XPDT",7477,"RTN","XUESSO1",96,0)=" ;See if the SSN is in the NPF cross reference"
^XTMP("XPDT",7477,"RTN","XUESSO1",97,0)=" I '$$SPECIAL(SITENUM),$D(^VA(200,""SSN"",SSN)) D"
^XTMP("XPDT",7477,"RTN","XUESSO1",98,0)=" .S NEWDUZ=$O(^VA(200,""SSN"",SSN,0))"
^XTMP("XPDT",7477,"RTN","XUESSO1",99,0)=" .I '$D(^VA(200,NEWDUZ,8910,""B"",SITENUM)) D VISM"
^XTMP("XPDT",7477,"RTN","XUESSO1",100,0)=" .D UPDT"
^XTMP("XPDT",7477,"RTN","XUESSO1",101,0)=" .S FLAG=1"
^XTMP("XPDT",7477,"RTN","XUESSO1",102,0)=" .Q"
^XTMP("XPDT",7477,"RTN","XUESSO1",103,0)=" ;See if in the AVISIT cross reference"
^XTMP("XPDT",7477,"RTN","XUESSO1",104,0)=" I 'FLAG,$$SPECIAL(SITENUM) D"
^XTMP("XPDT",7477,"RTN","XUESSO1",105,0)=" . S NEWDUZ=$O(^VA(200,""AVISIT"",SITENUM,RMTDUZ,0))"
^XTMP("XPDT",7477,"RTN","XUESSO1",106,0)=" . Q:NEWDUZ'>0"
^XTMP("XPDT",7477,"RTN","XUESSO1",107,0)=" . D UPDT S FLAG=1"
^XTMP("XPDT",7477,"RTN","XUESSO1",108,0)=" . Q"
^XTMP("XPDT",7477,"RTN","XUESSO1",109,0)=" I FLAG Q 1 ;Quit here if we found a match for SSN or AVISIT"
^XTMP("XPDT",7477,"RTN","XUESSO1",110,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",111,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",112,0)=" ;There is no matching SSN, try for a NAME match in ""B"""
^XTMP("XPDT",7477,"RTN","XUESSO1",113,0)=" S FLAG=0,NAME=$$UP^XLFSTR(NAME)"
^XTMP("XPDT",7477,"RTN","XUESSO1",114,0)=" I $D(^VA(200,""B"",NAME)) D"
^XTMP("XPDT",7477,"RTN","XUESSO1",115,0)=" .N %,USER,USER2"
^XTMP("XPDT",7477,"RTN","XUESSO1",116,0)=" .S NEWDUZ=$O(^VA(200,""B"",NAME,0))"
^XTMP("XPDT",7477,"RTN","XUESSO1",117,0)=" .S USER2=$O(^VA(200,""B"",NAME,NEWDUZ)) ;More then one?"
^XTMP("XPDT",7477,"RTN","XUESSO1",118,0)=" .Q:$L(USER2)>0"
^XTMP("XPDT",7477,"RTN","XUESSO1",119,0)=" .;"
^XTMP("XPDT",7477,"RTN","XUESSO1",120,0)=" .S %=$P($G(^VA(200,NEWDUZ,1)),U,9)"
^XTMP("XPDT",7477,"RTN","XUESSO1",121,0)=" .Q:%'=SSN  ;Don't use this name if it has a different SSN"
^XTMP("XPDT",7477,"RTN","XUESSO1",122,0)=" .;"
^XTMP("XPDT",7477,"RTN","XUESSO1",123,0)=" .I '$L($P(^VA(200,NEWDUZ,1),U,9)) D ADDS"
^XTMP("XPDT",7477,"RTN","XUESSO1",124,0)=" .I '$D(^VA(200,NEWDUZ,8910,""B"",SITENUM)) D VISM"
^XTMP("XPDT",7477,"RTN","XUESSO1",125,0)=" .D UPDT S FLAG=1"
^XTMP("XPDT",7477,"RTN","XUESSO1",126,0)=" .Q"
^XTMP("XPDT",7477,"RTN","XUESSO1",127,0)=" I FLAG Q 1 ;Quit here if we found an exact match for NAME (w/o SSN)"
^XTMP("XPDT",7477,"RTN","XUESSO1",128,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",129,0)="NEWU ;We didn't find anybody under SSN or NAME so we add a new user"
^XTMP("XPDT",7477,"RTN","XUESSO1",130,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",131,0)=" S DIC(0)="""" ;Turn off ^XUA4A7 (work around)"
^XTMP("XPDT",7477,"RTN","XUESSO1",132,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",133,0)=" ;Put the name in the .01 field first."
^XTMP("XPDT",7477,"RTN","XUESSO1",134,0)=" D ADDU ;ADDU will set NEWDUZ"
^XTMP("XPDT",7477,"RTN","XUESSO1",135,0)=" ;If NEWDUZ is still 0, the User add didn't work so exit."
^XTMP("XPDT",7477,"RTN","XUESSO1",136,0)=" I NEWDUZ=0 Q 0"
^XTMP("XPDT",7477,"RTN","XUESSO1",137,0)=" ; Add SSN and Alias."
^XTMP("XPDT",7477,"RTN","XUESSO1",138,0)=" D ADDS,ADDA ;(p337)"
^XTMP("XPDT",7477,"RTN","XUESSO1",139,0)=" ; Fill in the  VISITED FROM multiple"
^XTMP("XPDT",7477,"RTN","XUESSO1",140,0)=" D VISM,UPDT ;Do update for all data in UPDT"
^XTMP("XPDT",7477,"RTN","XUESSO1",141,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",142,0)=" I $D(^TMP(""DIERR"",$J)) Q 0  ;FileMan Error"
^XTMP("XPDT",7477,"RTN","XUESSO1",143,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",144,0)=" I NEWDUZ D BULL Q 1  ;Every thing OK"
^XTMP("XPDT",7477,"RTN","XUESSO1",145,0)=" Q 0  ;Couldn't add user"
^XTMP("XPDT",7477,"RTN","XUESSO1",146,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",147,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",148,0)=" ;              *****Subroutines*****"
^XTMP("XPDT",7477,"RTN","XUESSO1",149,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",150,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",151,0)="SET(NEWDUZ) ;Set the user up to go"
^XTMP("XPDT",7477,"RTN","XUESSO1",152,0)=" Q:NEWDUZ'>0 0"
^XTMP("XPDT",7477,"RTN","XUESSO1",153,0)=" N XUSER,XOPT"
^XTMP("XPDT",7477,"RTN","XUESSO1",154,0)=" S DUZ=NEWDUZ,U=""^"""
^XTMP("XPDT",7477,"RTN","XUESSO1",155,0)=" D DUZ^XUS1A"
^XTMP("XPDT",7477,"RTN","XUESSO1",156,0)=" Q 1"
^XTMP("XPDT",7477,"RTN","XUESSO1",157,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",158,0)="ADDU ;Add a new name to the New Person File"
^XTMP("XPDT",7477,"RTN","XUESSO1",159,0)=" N DD,DO,DIC,DA,X,Y"
^XTMP("XPDT",7477,"RTN","XUESSO1",160,0)=" S DIC=""^VA(200,"",DIC(0)=""L"",X=NAME"
^XTMP("XPDT",7477,"RTN","XUESSO1",161,0)=" D FILE^DICN"
^XTMP("XPDT",7477,"RTN","XUESSO1",162,0)=" S:Y>0 NEWDUZ=+Y"
^XTMP("XPDT",7477,"RTN","XUESSO1",163,0)=" Q"
^XTMP("XPDT",7477,"RTN","XUESSO1",164,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",165,0)="ADDS ;Add a SSN to the file"
^XTMP("XPDT",7477,"RTN","XUESSO1",166,0)=" Q:$$SPECIAL(SITENUM)"
^XTMP("XPDT",7477,"RTN","XUESSO1",167,0)=" S IEN=NEWDUZ_"","""
^XTMP("XPDT",7477,"RTN","XUESSO1",168,0)=" S FDR(200,IEN,9)=SSN"
^XTMP("XPDT",7477,"RTN","XUESSO1",169,0)=" ;Do update for all data in UPDT"
^XTMP("XPDT",7477,"RTN","XUESSO1",170,0)=" Q"
^XTMP("XPDT",7477,"RTN","XUESSO1",171,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",172,0)="ADDA ;Add a new Alias to file 200.04"
^XTMP("XPDT",7477,"RTN","XUESSO1",173,0)=" Q:$D(^VA(200,NEWDUZ,3,""B"",""VISITOR""))"
^XTMP("XPDT",7477,"RTN","XUESSO1",174,0)=" S IEN=""+2,""_NEWDUZ_"","""
^XTMP("XPDT",7477,"RTN","XUESSO1",175,0)=" S FDR(""200.04"",IEN,.01)=""VISITOR"""
^XTMP("XPDT",7477,"RTN","XUESSO1",176,0)=" ;Do update for all data in UPDT"
^XTMP("XPDT",7477,"RTN","XUESSO1",177,0)=" Q"
^XTMP("XPDT",7477,"RTN","XUESSO1",178,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",179,0)="VISM ;Create a multiple for this site number in the VISTED FROM file"
^XTMP("XPDT",7477,"RTN","XUESSO1",180,0)=" S IEN=""+3,""_NEWDUZ_"","""
^XTMP("XPDT",7477,"RTN","XUESSO1",181,0)=" S FDR(""200.06"",IEN,.01)=SITENUM"
^XTMP("XPDT",7477,"RTN","XUESSO1",182,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",183,0)=" S FDR(""200.06"",IEN,1)=SITE"
^XTMP("XPDT",7477,"RTN","XUESSO1",184,0)=" S FDR(""200.06"",IEN,2)=RMTDUZ"
^XTMP("XPDT",7477,"RTN","XUESSO1",185,0)=" S FDR(""200.06"",IEN,3)=TODAY"
^XTMP("XPDT",7477,"RTN","XUESSO1",186,0)=" ;I $D(PHONE),($L(PHONE)>2) S FDR(""200.06"",IEN,5)=PHONE"
^XTMP("XPDT",7477,"RTN","XUESSO1",187,0)=" ;Do update for all data in UPDT"
^XTMP("XPDT",7477,"RTN","XUESSO1",188,0)=" Q"
^XTMP("XPDT",7477,"RTN","XUESSO1",189,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",190,0)="UPDT ;Update the LAST VISIT field"
^XTMP("XPDT",7477,"RTN","XUESSO1",191,0)=" I $D(FDR(200.06)) S IEN=$O(FDR(200.06,""""))"
^XTMP("XPDT",7477,"RTN","XUESSO1",192,0)=" E  S IEN=$O(^VA(200,NEWDUZ,8910,""B"",SITENUM,0))_"",""_NEWDUZ_"","""
^XTMP("XPDT",7477,"RTN","XUESSO1",193,0)=" S FDR(200.06,IEN,4)=TODAY"
^XTMP("XPDT",7477,"RTN","XUESSO1",194,0)=" ;Update the phone each time"
^XTMP("XPDT",7477,"RTN","XUESSO1",195,0)=" I $D(PHONE),($L(PHONE)>2) S FDR(""200.06"",IEN,5)=PHONE ;p466"
^XTMP("XPDT",7477,"RTN","XUESSO1",196,0)=" K IEN D UPDATE^DIE(""E"",""FDR"",""IEN"") ;File all the data"
^XTMP("XPDT",7477,"RTN","XUESSO1",197,0)=" I $D(^TMP(""DIERR"",$J)) D"
^XTMP("XPDT",7477,"RTN","XUESSO1",198,0)=" . N DIK,DA"
^XTMP("XPDT",7477,"RTN","XUESSO1",199,0)=" . D FAIL"
^XTMP("XPDT",7477,"RTN","XUESSO1",200,0)=" . S DIK=""^VA(200,"",DA=NEWDUZ D ^DIK ;Remove partial entry"
^XTMP("XPDT",7477,"RTN","XUESSO1",201,0)=" . S NEWDUZ=0 ;Tell failed"
^XTMP("XPDT",7477,"RTN","XUESSO1",202,0)=" Q"
^XTMP("XPDT",7477,"RTN","XUESSO1",203,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",204,0)="BULL ;Set up the bulletin and fire it off, Let MM see if bulletin is there"
^XTMP("XPDT",7477,"RTN","XUESSO1",205,0)=" N XMB"
^XTMP("XPDT",7477,"RTN","XUESSO1",206,0)=" S XMB=""XUVISIT"""
^XTMP("XPDT",7477,"RTN","XUESSO1",207,0)=" S XMB(1)=$$FMTE^XLFDT(TODAY)"
^XTMP("XPDT",7477,"RTN","XUESSO1",208,0)=" S XMB(2)=NAME,XMB(3)=NEWDUZ,XMB(4)=SITE"
^XTMP("XPDT",7477,"RTN","XUESSO1",209,0)=" S XMB(5)=SITENUM,XMB(6)=RMTDUZ,XMB(7)=PHONE"
^XTMP("XPDT",7477,"RTN","XUESSO1",210,0)=" D ^XMB"
^XTMP("XPDT",7477,"RTN","XUESSO1",211,0)=" Q"
^XTMP("XPDT",7477,"RTN","XUESSO1",212,0)=" ;"
^XTMP("XPDT",7477,"RTN","XUESSO1",213,0)="FAIL ;Send bulletin if fail to add user."
^XTMP("XPDT",7477,"RTN","XUESSO1",214,0)=" N I,XMTEXT,XMY,XUTEXT,XMSUB,XMZ,XMMG,ZTQUEUED"
^XTMP("XPDT",7477,"RTN","XUESSO1",215,0)=" S XMSUB=""XUESSO-VISIT ADD FAILED"",ZTQUEUED=1"
^XTMP("XPDT",7477,"RTN","XUESSO1",216,0)=" D MSG^DIALOG(""AEST"",.XMTEXT)"
^XTMP("XPDT",7477,"RTN","XUESSO1",217,0)=" S XUTEXT(1)=""Attempting to add ""_NAME_"" from ""_SITE"
^XTMP("XPDT",7477,"RTN","XUESSO1",218,0)=" S XUTEXT(2)=$G(DATIN),XUTEXT(3)="" "",XUTEXT=3,I=0"
^XTMP("XPDT",7477,"RTN","XUESSO1",219,0)=" F  S I=$O(XMTEXT(I)) Q:'I  S XUTEXT=XUTEXT+1,XUTEXT(XUTEXT)=XMTEXT(I)"
^XTMP("XPDT",7477,"RTN","XUESSO1",220,0)=" S XMTEXT=""XUTEXT("",XMY(""G.XUSVISITFAIL@FO-OAKLAND.MED.VA.GOV"")="""""
^XTMP("XPDT",7477,"RTN","XUESSO1",221,0)=" D ^XMD"
^XTMP("XPDT",7477,"RTN","XUESSO1",222,0)=" Q"
^XTMP("XPDT",7477,"VER")="8.0^22.0"
^XTMP("XPDT",7540)="1"
^XTMP("XPDT",7540,"BLD",1182,0)="XU*8.0*518^KERNEL^0^3090108^y"
^XTMP("XPDT",7540,"BLD",1182,1,0)="^^2^2^3081125^"
^XTMP("XPDT",7540,"BLD",1182,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7540,"BLD",1182,1,2,0)="XU*8*518    Several small fixes."
^XTMP("XPDT",7540,"BLD",1182,4,0)="^9.64PA^3.51^3"
^XTMP("XPDT",7540,"BLD",1182,4,3.2,0)="3.2"
^XTMP("XPDT",7540,"BLD",1182,4,3.2,2,0)="^9.641^3.2^1"
^XTMP("XPDT",7540,"BLD",1182,4,3.2,2,3.2,0)="TERMINAL TYPE  (File-top level)"
^XTMP("XPDT",7540,"BLD",1182,4,3.2,2,3.2,1,0)="^9.6411^3^1"
^XTMP("XPDT",7540,"BLD",1182,4,3.2,2,3.2,1,3,0)="PAGE LENGTH"
^XTMP("XPDT",7540,"BLD",1182,4,3.2,222)="y^n^p^^^^n^^n"
^XTMP("XPDT",7540,"BLD",1182,4,3.2,224)=""
^XTMP("XPDT",7540,"BLD",1182,4,3.5,0)="3.5"
^XTMP("XPDT",7540,"BLD",1182,4,3.5,2,0)="^9.641^3.5^1"
^XTMP("XPDT",7540,"BLD",1182,4,3.5,2,3.5,0)="DEVICE  (File-top level)"
^XTMP("XPDT",7540,"BLD",1182,4,3.5,2,3.5,1,0)="^9.6411^11^1"
^XTMP("XPDT",7540,"BLD",1182,4,3.5,2,3.5,1,11,0)="PAGE LENGTH"
^XTMP("XPDT",7540,"BLD",1182,4,3.5,222)="y^n^p^^^^n^^n"
^XTMP("XPDT",7540,"BLD",1182,4,3.5,224)=""
^XTMP("XPDT",7540,"BLD",1182,4,3.51,0)="3.51"
^XTMP("XPDT",7540,"BLD",1182,4,3.51,2,0)="^9.641^3.51^1"
^XTMP("XPDT",7540,"BLD",1182,4,3.51,2,3.51,0)="SPOOL DOCUMENT  (File-top level)"
^XTMP("XPDT",7540,"BLD",1182,4,3.51,2,3.51,1,0)="^9.6411^7^1"
^XTMP("XPDT",7540,"BLD",1182,4,3.51,2,3.51,1,7,0)="PAGE ATTRIBUTES"
^XTMP("XPDT",7540,"BLD",1182,4,3.51,222)="y^n^p^^^^n^^n"
^XTMP("XPDT",7540,"BLD",1182,4,3.51,224)=""
^XTMP("XPDT",7540,"BLD",1182,4,"APDD",3.2,3.2)=""
^XTMP("XPDT",7540,"BLD",1182,4,"APDD",3.2,3.2,3)=""
^XTMP("XPDT",7540,"BLD",1182,4,"APDD",3.5,3.5)=""
^XTMP("XPDT",7540,"BLD",1182,4,"APDD",3.5,3.5,11)=""
^XTMP("XPDT",7540,"BLD",1182,4,"APDD",3.51,3.51)=""
^XTMP("XPDT",7540,"BLD",1182,4,"APDD",3.51,3.51,7)=""
^XTMP("XPDT",7540,"BLD",1182,4,"B",3.2,3.2)=""
^XTMP("XPDT",7540,"BLD",1182,4,"B",3.5,3.5)=""
^XTMP("XPDT",7540,"BLD",1182,4,"B",3.51,3.51)=""
^XTMP("XPDT",7540,"BLD",1182,6)="^422"
^XTMP("XPDT",7540,"BLD",1182,6.3)="8"
^XTMP("XPDT",7540,"BLD",1182,"INID")="^y"
^XTMP("XPDT",7540,"BLD",1182,"INIT")="POST^XU8P518"
^XTMP("XPDT",7540,"BLD",1182,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7540,"BLD",1182,"KRN",.4,0)=".4"
^XTMP("XPDT",7540,"BLD",1182,"KRN",.4,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7540,"BLD",1182,"KRN",.4,"NM",1,0)="XU-ZISPL-USER    FILE #3.51^3.51^0"
^XTMP("XPDT",7540,"BLD",1182,"KRN",.4,"NM","B","XU-ZISPL-USER    FILE #3.51",1)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN",.401,0)=".401"
^XTMP("XPDT",7540,"BLD",1182,"KRN",.402,0)=".402"
^XTMP("XPDT",7540,"BLD",1182,"KRN",.403,0)=".403"
^XTMP("XPDT",7540,"BLD",1182,"KRN",.5,0)=".5"
^XTMP("XPDT",7540,"BLD",1182,"KRN",.84,0)=".84"
^XTMP("XPDT",7540,"BLD",1182,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7540,"BLD",1182,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7540,"BLD",1182,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7540,"BLD",1182,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7540,"BLD",1182,"KRN",9.8,"NM",0)="^9.68A^4^4"
^XTMP("XPDT",7540,"BLD",1182,"KRN",9.8,"NM",1,0)="ZIS1^^0^B26104414"
^XTMP("XPDT",7540,"BLD",1182,"KRN",9.8,"NM",2,0)="ZISHONT^^0^B59942519"
^XTMP("XPDT",7540,"BLD",1182,"KRN",9.8,"NM",3,0)="ZTMKU^^0^B31252774"
^XTMP("XPDT",7540,"BLD",1182,"KRN",9.8,"NM",4,0)="ZIS5^^0^B13408571"
^XTMP("XPDT",7540,"BLD",1182,"KRN",9.8,"NM","B","ZIS1",1)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN",9.8,"NM","B","ZIS5",4)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN",9.8,"NM","B","ZISHONT",2)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN",9.8,"NM","B","ZTMKU",3)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN",19,0)="19"
^XTMP("XPDT",7540,"BLD",1182,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7540,"BLD",1182,"KRN",101,0)="101"
^XTMP("XPDT",7540,"BLD",1182,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7540,"BLD",1182,"KRN",771,0)="771"
^XTMP("XPDT",7540,"BLD",1182,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7540,"BLD",1182,"KRN",870,0)="870"
^XTMP("XPDT",7540,"BLD",1182,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7540,"BLD",1182,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7540,"BLD",1182,"KRN",8994,0)="8994"
^XTMP("XPDT",7540,"BLD",1182,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",.4,.4)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",.401,.401)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",.402,.402)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",.403,.403)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",.5,.5)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",.84,.84)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",19,19)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",101,101)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",771,771)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",870,870)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",8994,8994)=""
^XTMP("XPDT",7540,"BLD",1182,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7540,"BLD",1182,"QDEF")="^^^^YES"
^XTMP("XPDT",7540,"BLD",1182,"QUES",0)="^9.62^^"
^XTMP("XPDT",7540,"BLD",1182,"REQB",0)="^9.611^2^2"
^XTMP("XPDT",7540,"BLD",1182,"REQB",1,0)="XU*8.0*355^2"
^XTMP("XPDT",7540,"BLD",1182,"REQB",2,0)="XU*8.0*499^2"
^XTMP("XPDT",7540,"BLD",1182,"REQB","B","XU*8.0*355",1)=""
^XTMP("XPDT",7540,"BLD",1182,"REQB","B","XU*8.0*499",2)=""
^XTMP("XPDT",7540,"FIA",3.2)="TERMINAL TYPE"
^XTMP("XPDT",7540,"FIA",3.2,0)="^%ZIS(2,"
^XTMP("XPDT",7540,"FIA",3.2,0,0)="3.2I"
^XTMP("XPDT",7540,"FIA",3.2,0,1)="y^n^p^^^^n^^n"
^XTMP("XPDT",7540,"FIA",3.2,0,10)=""
^XTMP("XPDT",7540,"FIA",3.2,0,11)=""
^XTMP("XPDT",7540,"FIA",3.2,0,"RLRO")=""
^XTMP("XPDT",7540,"FIA",3.2,0,"VR")="8.0^XU"
^XTMP("XPDT",7540,"FIA",3.2,3.2)="1"
^XTMP("XPDT",7540,"FIA",3.2,3.2,3)=""
^XTMP("XPDT",7540,"FIA",3.5)="DEVICE"
^XTMP("XPDT",7540,"FIA",3.5,0)="^%ZIS(1,"
^XTMP("XPDT",7540,"FIA",3.5,0,0)="3.5Is"
^XTMP("XPDT",7540,"FIA",3.5,0,1)="y^n^p^^^^n^^n"
^XTMP("XPDT",7540,"FIA",3.5,0,10)=""
^XTMP("XPDT",7540,"FIA",3.5,0,11)=""
^XTMP("XPDT",7540,"FIA",3.5,0,"RLRO")=""
^XTMP("XPDT",7540,"FIA",3.5,0,"VR")="8.0^XU"
^XTMP("XPDT",7540,"FIA",3.5,3.5)="1"
^XTMP("XPDT",7540,"FIA",3.5,3.5,11)=""
^XTMP("XPDT",7540,"FIA",3.51)="SPOOL DOCUMENT"
^XTMP("XPDT",7540,"FIA",3.51,0)="^XMB(3.51,"
^XTMP("XPDT",7540,"FIA",3.51,0,0)="3.51sI"
^XTMP("XPDT",7540,"FIA",3.51,0,1)="y^n^p^^^^n^^n"
^XTMP("XPDT",7540,"FIA",3.51,0,10)=""
^XTMP("XPDT",7540,"FIA",3.51,0,11)=""
^XTMP("XPDT",7540,"FIA",3.51,0,"RLRO")=""
^XTMP("XPDT",7540,"FIA",3.51,0,"VR")="8.0^XU"
^XTMP("XPDT",7540,"FIA",3.51,3.51)="1"
^XTMP("XPDT",7540,"FIA",3.51,3.51,7)=""
^XTMP("XPDT",7540,"INIT")="POST^XU8P518"
^XTMP("XPDT",7540,"KRN",.4,18,-1)="0^1"
^XTMP("XPDT",7540,"KRN",.4,18,0)="XU-ZISPL-USER^3081216.0837^^3.51^^@^3081216"
^XTMP("XPDT",7540,"KRN",.4,18,"DCL","3.51^.01")="!"
^XTMP("XPDT",7540,"KRN",.4,18,"DCL","3.51^8")="&"
^XTMP("XPDT",7540,"KRN",.4,18,"DXS",1,9.2)="S DIP(1)=$S($D(^XMB(3.51,D0,2,D1,0)):^(0),1:"""") S X=$P(DIP(1),U,6),DIP(2)=$G(X) S X=""CNT"""
^XTMP("XPDT",7540,"KRN",.4,18,"F",1)="4;L30;""USER NAME"";S1;N~.01;""DOCUMENT NAME"";C3;L40~2;C44;L8~8;""LINES"";C54~7;""SIZE"";C64~"
^XTMP("XPDT",7540,"KRN",.4,18,"F",2)="S DIP(2)=$S($D(^XMB(3.51,D0,0)):^(0),1:""""),X=DT S X=X,DIP(1)=$G(X) S X=$P(DIP(2),U,6),Y=X,X=DIP(1),X=X,X1=X,X2=Y,X="""" D:X2 ^%DTC:X1 W X K DIP;""AGE"";C76;R4;Z;""TODAY-(STARTED)""~"
^XTMP("XPDT",7540,"KRN",.4,18,"F",3)="21,X DXS(1,9.2) S X1=DIP(2) S:X]""""&(X?.ANP)&(X1'[U)&(X1'[""$C(94)"") DIPA($E(X,1,30))=X1 S X="""" W X K DIP;C10;X;Z;""SETPARAM(COPIES PRINTED,""CNT"")""~"
^XTMP("XPDT",7540,"KRN",.4,18,"F",4)="21,S X=""CNT"",X=$S(X=""""!(X'?.ANP):"""",$D(DIPA($E(X,1,30))):DIPA($E(X,1,30)),1:"""") W X K DIP;"""";Z;""PARAM(""CNT"")""~"
^XTMP("XPDT",7540,"KRN",.4,18,"F",5)="21,W $S(DIPA(""CNT"")>1:"" copies"",1:"" copy"")_"" printed on "";X;"""";Z;""W $S(DIPA(""CNT"")>1:"" copies"",1:"" copy"")_"" printed on """"~21,.01;X;""""~21,"" at "";X;""""~"
^XTMP("XPDT",7540,"KRN",.4,18,"F",6)="21,4;X;""""~"
^XTMP("XPDT",7540,"KRN",.4,18,"H")="SPOOL DOCUMENT LIST"
^XTMP("XPDT",7540,"KRN",.4,18,"ROUOLD")="XUCT02"
^XTMP("XPDT",7540,"MBREQ")="0"
^XTMP("XPDT",7540,"ORD",5,.4)=".4;5;;;EDEOUT^DIFROMSO(.4,DA,"""",XPDA);FPRE^DIFROMSI(.4,"""",XPDA);EPRE^DIFROMSI(.4,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.4,DA,"""",XPDA);DEL^DIFROMSK(.4,"""",%)"
^XTMP("XPDT",7540,"ORD",5,.4,0)="PRINT TEMPLATE"
^XTMP("XPDT",7540,"PKG",3,-1)="1^1"
^XTMP("XPDT",7540,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7540,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7540,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7540,"PKG",3,22,1,0)="8.0^3080616^3080616^6"
^XTMP("XPDT",7540,"PKG",3,22,1,"PAH",1,0)="518^3090108"
^XTMP("XPDT",7540,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3090108"
^XTMP("XPDT",7540,"PKG",3,22,1,"PAH",1,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7540,"PKG",3,22,1,"PAH",1,1,2,0)="XU*8*518    Several small fixes."
^XTMP("XPDT",7540,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7540,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7540,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7540,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7540,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7540,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7540,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7540,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7540,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7540,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7540,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7540,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7540,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7540,"QUES","XPI1","B")="YES"
^XTMP("XPDT",7540,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7540,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7540,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7540,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7540,"QUES","XPM1","B")=""
^XTMP("XPDT",7540,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7540,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7540,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7540,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7540,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7540,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7540,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7540,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7540,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7540,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7540,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7540,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7540,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7540,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7540,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7540,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7540,"RTN")="5"
^XTMP("XPDT",7540,"RTN","XU8P518")="0^^B27219^n/a"
^XTMP("XPDT",7540,"RTN","XU8P518",1,0)="XU8P518 ;ISF/RWF - POST-INIT ;11/26/08  14:14"
^XTMP("XPDT",7540,"RTN","XU8P518",2,0)=" ;;8.0;KERNEL;**518**;Apr 25, 1995;Build 8"
^XTMP("XPDT",7540,"RTN","XU8P518",3,0)=" Q"
^XTMP("XPDT",7540,"RTN","XU8P518",4,0)=" ;"
^XTMP("XPDT",7540,"RTN","XU8P518",5,0)="POST ;POST-INIT for XU*8*518"
^XTMP("XPDT",7540,"RTN","XU8P518",6,0)=" D RELOAD^ZTMGRSET"
^XTMP("XPDT",7540,"RTN","XU8P518",7,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS1")="0^1^B26104414^B26102976"
^XTMP("XPDT",7540,"RTN","ZIS1",1,0)="%ZIS1 ;SFISC/AC,RWF -- DEVICE HANDLER (DEVICE INPUT) ;12/02/08  09:37"
^XTMP("XPDT",7540,"RTN","ZIS1",2,0)=" ;;8.0;KERNEL;**18,49,69,104,112,199,391,440,499,518**;JUL 10, 1995;Build 8"
^XTMP("XPDT",7540,"RTN","ZIS1",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7540,"RTN","ZIS1",4,0)="MAIN ;Called from %ZIS with a GOTO"
^XTMP("XPDT",7540,"RTN","ZIS1",5,0)=" ;Check for ""ASK DEVICE"""
^XTMP("XPDT",7540,"RTN","ZIS1",6,0)=" I '$D(IOP),$D(^%ZIS(1,%E,0)),'$P(^(0),""^"",3) S %A=%H,%Z=^(0) D L2^%ZIS2 G EXIT"
^XTMP("XPDT",7540,"RTN","ZIS1",7,0)="L1 ;Main Loop"
^XTMP("XPDT",7540,"RTN","ZIS1",8,0)=" I '$D(IOP),$D(IO(""Q"")),POP D AQUE^%ZIS3 K:%=2 IO(""Q"") S:%=2 %ZISB=$S(%IS'[""N"":2,1:0) I %=-1 S POP=1 G EXIT"
^XTMP("XPDT",7540,"RTN","ZIS1",9,0)=" S %E=%H,POP=0,%IS=%ZIS ;Reset %IS from %ZIS"
^XTMP("XPDT",7540,"RTN","ZIS1",10,0)=" I %IS'[""Q"",$D(XQNOGO) S POP=1 W:'$D(IOP) !,$C(7),""OUTPUT IS NEVER ALLOWED FOR THIS OPTION"" G EXIT"
^XTMP("XPDT",7540,"RTN","ZIS1",11,0)=" D IOP:$D(IOP),R:'$D(IOP)"
^XTMP("XPDT",7540,"RTN","ZIS1",12,0)=" G EXIT:$D(DTOUT)!$D(DUOUT)!(POP&$D(IOP)),L1:POP&'$D(IOP)"
^XTMP("XPDT",7540,"RTN","ZIS1",13,0)=" D LKUP I %A'>0 S POP=1 D:'$D(DUOUT) MSG1 K DUOUT"
^XTMP("XPDT",7540,"RTN","ZIS1",14,0)=" I %A>0,'$D(^%ZIS(1,%A,0)) D MSG1 K %ZISIOS S POP=1"
^XTMP("XPDT",7540,"RTN","ZIS1",15,0)=" I POP G EXIT:$D(IOP),L1:'$D(IOP)"
^XTMP("XPDT",7540,"RTN","ZIS1",16,0)=" S %E=%A,%Z1=$G(^%ZIS(1,%A,1)),%Z=^(0) ;Set naked for screen"
^XTMP("XPDT",7540,"RTN","ZIS1",17,0)=" I $D(%ZIS(""S"")) N Y S Y=%E D XS^ZISX S:'$T POP=1 G G:POP ;Screen Code"
^XTMP("XPDT",7540,"RTN","ZIS1",18,0)=" W:'$D(IOP)&($P(%Z,""^"",2)'=$I)&($P(%Z1,""^"")]"""") ""  "",$P(%Z1,""^"")"
^XTMP("XPDT",7540,"RTN","ZIS1",19,0)=" D L2^%ZIS2 ;Call"
^XTMP("XPDT",7540,"RTN","ZIS1",20,0)="G G L1:POP&'$D(IOP)&'($D(DTOUT)!$D(DUOUT)) ;Didn't get it"
^XTMP("XPDT",7540,"RTN","ZIS1",21,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZIS1",22,0)="EXIT ;"
^XTMP("XPDT",7540,"RTN","ZIS1",23,0)=" I POP G EX2 ;Did not get the device."
^XTMP("XPDT",7540,"RTN","ZIS1",24,0)=" ;For type[TRM reset $X & $Y"
^XTMP("XPDT",7540,"RTN","ZIS1",25,0)=" I %ZTYPE[""TRM"",IO]"""",$D(IO(1,IO)) U IO S:'(IO=IO(0)&'$D(IO(""S""))&'$D(ZTQUEUED)) $X=0,$Y=0"
^XTMP("XPDT",7540,"RTN","ZIS1",26,0)=" ;Do count of number of times device opened.  Field 51."
^XTMP("XPDT",7540,"RTN","ZIS1",27,0)=" I $L($G(IO)),$D(IO(1,IO))#2,$G(%ZISIOS) D"
^XTMP("XPDT",7540,"RTN","ZIS1",28,0)=" . S $P(^(5),""^"",1)=$P($G(^%ZIS(1,%ZISIOS,5)),""^"",1)+1"
^XTMP("XPDT",7540,"RTN","ZIS1",29,0)=" I %ZIS[""H"" S IO(0)=IO,IO(""HOME"")=%ZISIOS_""^""_IO ;Make home device"
^XTMP("XPDT",7540,"RTN","ZIS1",30,0)=" I '$D(IO(""Q"")),$D(%ZISLOCK) S ^XUTL(""XQ"",$J,""lock"",%ZISIOS)=%ZISLOCK"
^XTMP("XPDT",7540,"RTN","ZIS1",31,0)=" I $D(IO)#2,IO]"""",$D(IO(1,IO))#2,$D(%Z1),$P(%Z1,""^"",11) S IO(1,IO,""NOFF"")=1"
^XTMP("XPDT",7540,"RTN","ZIS1",32,0)="EX2 ;"
^XTMP("XPDT",7540,"RTN","ZIS1",33,0)=" I %IS'[0,$G(IO(0))]"""" U IO(0) ;Make sure return with home active"
^XTMP("XPDT",7540,"RTN","ZIS1",34,0)=" G SETVAR:'POP!(%IS[""T""),KILVAR"
^XTMP("XPDT",7540,"RTN","ZIS1",35,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZIS1",36,0)="IOP ;Request with IOP set"
^XTMP("XPDT",7540,"RTN","ZIS1",37,0)=" S (%ZISVT,%X)=IOP S:%X'?1.UNP %X=$$UP(%X) I %X'=""Q"" D SETQ Q"
^XTMP("XPDT",7540,"RTN","ZIS1",38,0)=" S %IS=%IS_%X K IOP W %X D SETQ"
^XTMP("XPDT",7540,"RTN","ZIS1",39,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS1",40,0)=" ;Get ready to ask user for device"
^XTMP("XPDT",7540,"RTN","ZIS1",41,0)="R I %IS[""Q"",$D(XQNOGO) W !,$C(7),""AT THIS TIME, OUTPUT MUST BE QUEUED"""
^XTMP("XPDT",7540,"RTN","ZIS1",42,0)=" S %A=$S($D(%IS(""B"")):%IS(""B""),1:""HOME"") ;Setup default"
^XTMP("XPDT",7540,"RTN","ZIS1",43,0)=" I %IS[""P"",%A=""HOME"",$D(^%ZIS(1,%E,99)),$D(^%ZIS(1,+^(99),0)) S %A=$P(^(0),""^"",1)"
^XTMP("XPDT",7540,"RTN","ZIS1",44,0)="RD W !,$S($D(%IS(""A"")):%IS(""A""),1:""DEVICE: "") W:%A]"""" %A,""// "" D SBR S:%X="""" %X=%A S %ZISVT=%X"
^XTMP("XPDT",7540,"RTN","ZIS1",45,0)=" I %X?2""?"".E D EN2^%ZIS7 G R"
^XTMP("XPDT",7540,"RTN","ZIS1",46,0)=" I %X?1""?"".E D EN1^%ZIS7 G R"
^XTMP("XPDT",7540,"RTN","ZIS1",47,0)=" I $D(DTOUT)!$D(DUOUT)!(%X'?.ANP)!($L($P(%X,"";""))>31) S:%IS[""T"" IO="""" S POP=1 Q"
^XTMP("XPDT",7540,"RTN","ZIS1",48,0)=" S:%X'?1.UNP %X=$$UP(%X) D SETQ G R:$T"
^XTMP("XPDT",7540,"RTN","ZIS1",49,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS1",50,0)="SETQ S %Y=$P(%X,"";"",2,9),%X=$P(%X,"";"",1) S:$L("";""_%Y,"";/"")=2 IO(""P"")=$P("";""_%Y,"";/"",2)"
^XTMP("XPDT",7540,"RTN","ZIS1",51,0)=" I %IS[""Q"",%X=""Q"" S %X=%Y,%ZISVT=$P(%ZISVT,"";"",2,9),%ZISB=0,IO(""Q"")=1,%IS(""A"")=""DEVICE: "" S:$D(IOP) %Y=$P(%X,"";"",2,9),%X=$P(%X,"";"",1)"
^XTMP("XPDT",7540,"RTN","ZIS1",52,0)=" I $T,'$D(IOP) W ""UEUE TO PRINT ON"" Q  ; Return $T value"
^XTMP("XPDT",7540,"RTN","ZIS1",53,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS1",54,0)="LKUP ;Lookup device name"
^XTMP("XPDT",7540,"RTN","ZIS1",55,0)=" S %ZISMY=$P(%ZISVT,"";"",2,999),%ZISVT=$P(%ZISVT,"";"")"
^XTMP("XPDT",7540,"RTN","ZIS1",56,0)=" I %X=""H"" W:'$D(IOP) ""ome"" S %X=0"
^XTMP("XPDT",7540,"RTN","ZIS1",57,0)=" I 0[%X!(%X=""HOME"")!(%X=$I) S %A=%H Q"
^XTMP("XPDT",7540,"RTN","ZIS1",58,0)=" I $E(%ZISVT)=""`"",$D(IOP) S %A=+$E(%ZISVT,2,999) I $D(^%ZIS(1,%A,0))#2 Q"
^XTMP("XPDT",7540,"RTN","ZIS1",59,0)=" S %A=0 I ""P""[%X Q:$D(IOP)&('$D(^%ZIS(1,%E,99)))  I $D(^%ZIS(1,%E,99)) S %A=+^(99) Q"
^XTMP("XPDT",7540,"RTN","ZIS1",60,0)=" I %X="" "",$D(DUZ)#2,$D(^DISV(+DUZ,""^%ZIS(1,"")) S %A=^(""^%ZIS(1,"") Q"
^XTMP("XPDT",7540,"RTN","ZIS1",61,0)=" S %A=+$O(^%ZIS(1,""B"",%ZISVT,0)) Q:%A>0  ;mixed case lookup"
^XTMP("XPDT",7540,"RTN","ZIS1",62,0)=" I %X'=%ZISVT S %A=+$O(^%ZIS(1,""B"",%X,0)) Q:%A>0  ;uppercase lookup"
^XTMP("XPDT",7540,"RTN","ZIS1",63,0)=" D VTLKUP^%ZIS S %A=%E Q:%A>0  ;mixed case lookup"
^XTMP("XPDT",7540,"RTN","ZIS1",64,0)=" I %X'=%ZISVT S %ZISVT=%X D VTLKUP^%ZIS S %A=%E Q:%A>0  ;uppercase lookup"
^XTMP("XPDT",7540,"RTN","ZIS1",65,0)=" N %XX,%YY S %XX=%X D 1^%ZIS5 S %A=+%YY"
^XTMP("XPDT",7540,"RTN","ZIS1",66,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS1",67,0)="SBR ;Read Sub-routine"
^XTMP("XPDT",7540,"RTN","ZIS1",68,0)=" K DTOUT,DUOUT R %X:%ZISDTIM E  W $C(7) S DTOUT=1 Q"
^XTMP("XPDT",7540,"RTN","ZIS1",69,0)=" S:%X="".""!(%X=""^"") DUOUT=1,%X="""""
^XTMP("XPDT",7540,"RTN","ZIS1",70,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS1",71,0)=" ;LC S %X=$$UP(%X) Q"
^XTMP("XPDT",7540,"RTN","ZIS1",72,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZIS1",73,0)="LOW(%) Q $TR(%,""ABCDEFGHIJKLMNOPQRSTUVWXYZ"",""abcdefghijklmnopqrstuvwxyz"")"
^XTMP("XPDT",7540,"RTN","ZIS1",74,0)="UP(%) Q $TR(%,""abcdefghijklmnopqrstuvwxyz"",""ABCDEFGHIJKLMNOPQRSTUVWXYZ"")"
^XTMP("XPDT",7540,"RTN","ZIS1",75,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZIS1",76,0)=" ;Call/Return % = 1 (yes), 2 (no) -1 (^)"
^XTMP("XPDT",7540,"RTN","ZIS1",77,0)="YN W ""? "",$P(""Yes// ^No// "",U,%)"
^XTMP("XPDT",7540,"RTN","ZIS1",78,0)="RYN R %X:%ZISDTIM E  S DTOUT=1,%X=U W $C(7)"
^XTMP("XPDT",7540,"RTN","ZIS1",79,0)=" S:%X]""""!'% %=$A(%X),%=$S(%=89:1,%=121:1,%=78:2,%=110:2,%=94:-1,1:0)"
^XTMP("XPDT",7540,"RTN","ZIS1",80,0)=" I '%,%X'?.""?"" W $C(7),""??"",!?4,""ANSWER 'Yes' OR 'No': "" G RYN"
^XTMP("XPDT",7540,"RTN","ZIS1",81,0)=" W:$X>73 ! W $P(""  (Yes)^  (No)"",U,%)"
^XTMP("XPDT",7540,"RTN","ZIS1",82,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS1",83,0)="MSG1 I '$D(IOP) W ?20,$C(7),""  [DEVICE DOES NOT EXIST]"""
^XTMP("XPDT",7540,"RTN","ZIS1",84,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS1",85,0)="SETVAR ;Come here to setup the variables for the selected device"
^XTMP("XPDT",7540,"RTN","ZIS1",86,0)=" S:$D(IO)[0 IO="""" G KILVAR:%IS[""T""&(IO="""")"
^XTMP("XPDT",7540,"RTN","ZIS1",87,0)=" I $G(%Z)="""" S ION=""Unknown device"",POP=1 G KILVAR"
^XTMP("XPDT",7540,"RTN","ZIS1",88,0)=" S:IO'=IO(0)&($D(DUZ)#2) ^DISV(+DUZ,""^%ZIS(1,"")=%E"
^XTMP("XPDT",7540,"RTN","ZIS1",89,0)=" S ION=$P(%Z,""^"",1),IOM=+%Z91,IOF=$P(%Z91,""^"",2),IOSL=$P(%Z91,""^"",3),IOBS=$P(%Z91,""^"",4),IOXY=$P(%Z91,""^"",5)"
^XTMP("XPDT",7540,"RTN","ZIS1",90,0)=" I IOSL>65534 S IOSL=65534 ;Cache rolls $Y at 65535"
^XTMP("XPDT",7540,"RTN","ZIS1",91,0)=" S IOT=%ZTYPE,IOST(0)=%ZISIOST(0),IOST=%ZISIOST,IOPAR=%ZISOPAR,IOUPAR=%ZISUPAR,IOHG=%ZISHG"
^XTMP("XPDT",7540,"RTN","ZIS1",92,0)=" S:IOF="""" IOF=""#"" ;See that IOF has something"
^XTMP("XPDT",7540,"RTN","ZIS1",93,0)=" I $D(IO(""Q"")),'$D(%ZIS(""afn"")) K IO(""HFSIO"") ;Let TM build it at run time."
^XTMP("XPDT",7540,"RTN","ZIS1",94,0)=" K IOCPU S:$D(%ZISCPU) IOCPU=%ZISCPU"
^XTMP("XPDT",7540,"RTN","ZIS1",95,0)=" G KIL"
^XTMP("XPDT",7540,"RTN","ZIS1",96,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZIS1",97,0)="KILVAR ;Come here to restore the calling variables"
^XTMP("XPDT",7540,"RTN","ZIS1",98,0)=" D SYMBOL^%ZISUTL(1,""%ZISOLD"")"
^XTMP("XPDT",7540,"RTN","ZIS1",99,0)=" S:'$L($G(IOF)) IOF=""#"" S:'$D(IOST(0)) IOST(0)=0"
^XTMP("XPDT",7540,"RTN","ZIS1",100,0)=" ;See that all standard variables are defined"
^XTMP("XPDT",7540,"RTN","ZIS1",101,0)=" F %I=""IO"",""ION"",""IOM"",""IOBS"",""IOSL"",""IOST"" S:$D(@%I)[0 @%I="""""
^XTMP("XPDT",7540,"RTN","ZIS1",102,0)=" K IO(""HFSIO""),IO(""OPEN"") I $D(%ZISCPU) S:'$D(IOCPU) IOCPU=%ZISCPU"
^XTMP("XPDT",7540,"RTN","ZIS1",103,0)="KIL ;Final exit cleanup"
^XTMP("XPDT",7540,"RTN","ZIS1",104,0)=" S:'POP IOS=%ZISIOS I POP K:%IS'[""T"" %ZISIOS I %IS[""T"" K IOS S:$D(%ZISIOS) IOS=%ZISIOS"
^XTMP("XPDT",7540,"RTN","ZIS1",105,0)=" S:%IS[""T"" IO(""T"")=1 K %ZIS,%IS,%A,%E,%H,%ZISOS,%ZISV,IOP"
^XTMP("XPDT",7540,"RTN","ZIS1",106,0)="K2 K %I,%X,%Y,%Z,%Z1,%Z91,%Z95,%ZTYPE,%ZTIME"
^XTMP("XPDT",7540,"RTN","ZIS1",107,0)=" K %ZISCHK,%ZISCPU,%ZISI,%ZISR,%ZISVT,%ZISB,%ZISX,ZISI,%ZISHGL,%ZISHP,%ZISIO,%ZISIOS,%ZISIOM"
^XTMP("XPDT",7540,"RTN","ZIS1",108,0)=" K %ZISIOF,%ZISIOSL,%ZISIOBS,%ZISIOST,%ZISIOST(0),%ZISTO,%ZISTP,%ZISHG,%ZISSIO,%ZISOPEN,%ZISOPAR,%ZISUPAR"
^XTMP("XPDT",7540,"RTN","ZIS1",109,0)=" K %ZISMY,%ZISQUIT,%ZISLOCK"
^XTMP("XPDT",7540,"RTN","ZIS1",110,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS5")="0^4^B13408571^B13269875"
^XTMP("XPDT",7540,"RTN","ZIS5",1,0)="%ZIS5 ;SFISC/STAFF --DEVICE LOOK-UP ;12/16/08  08:44"
^XTMP("XPDT",7540,"RTN","ZIS5",2,0)=" ;;8.0;KERNEL;**18,24,69,499,518**;JUL 10, 1995;Build 8"
^XTMP("XPDT",7540,"RTN","ZIS5",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7540,"RTN","ZIS5",4,0)=" ;Does a DIC like lookup. %XX,%YY are call in/out parameters"
^XTMP("XPDT",7540,"RTN","ZIS5",5,0)=" N %DO,%DIY,%DD,%DIX"
^XTMP("XPDT",7540,"RTN","ZIS5",6,0)=" S U=""^"",%DO="""" K DUOUT"
^XTMP("XPDT",7540,"RTN","ZIS5",7,0)=" I $D(^%ZIS(%ZISDFN,0)) S %DO=^(0)"
^XTMP("XPDT",7540,"RTN","ZIS5",8,0)="A G:%ZIS(0)'[""A"" X I $D(%ZIS(""A"")) S %DD=%ZIS(""A"") G B"
^XTMP("XPDT",7540,"RTN","ZIS5",9,0)=" S %DD=""Select ""_$P(%DO,U,1)_"": """
^XTMP("XPDT",7540,"RTN","ZIS5",10,0)="B I $D(%ZIS(""B"")),%ZIS(""B"")]"""" S %YY=%ZIS(""B""),%XX=$O(^%ZIS(%ZISDFN,%D,%YY)),%DIY=$S($F(%XX,%YY)-1=$L(%YY):%XX,$D(^%ZIS(%ZISDFN,%YY,0)):$P(^(0),U,1),1:%YY) W %DD,%DIY,""// "" R %XX:%ZISDTIM G G:%XX]"""" S %XX=%DIY G G"
^XTMP("XPDT",7540,"RTN","ZIS5",11,0)=" W !,%DD R %XX:%ZISDTIM"
^XTMP("XPDT",7540,"RTN","ZIS5",12,0)="G G NO:'$T,NO:%XX[""^"" G:%XX?.N&(+%XX=%XX) NUM I %XX'?.ANP!($L(%XX)>30) W:%ZIS(0)[""Q"" *7,"" ??"" G A"
^XTMP("XPDT",7540,"RTN","ZIS5",13,0)="X I %XX="" "",$D(DUZ)#2,$D(^DISV(+DUZ,""^%ZIS(""_%ZISDFN_"","")) S %YY=+^(""^%ZIS(""_%ZISDFN_"","") D S G:'$T NO G GOT"
^XTMP("XPDT",7540,"RTN","ZIS5",14,0)="F G NO:%XX="""" K %DS S %DS=0,%DS(0)=1,%DIX=%XX,%DIY=0"
^XTMP("XPDT",7540,"RTN","ZIS5",15,0)=" I $D(^%ZIS(%ZISDFN,%D,%XX)) G T1"
^XTMP("XPDT",7540,"RTN","ZIS5",16,0)="TRY S %DIX=$O(^%ZIS(%ZISDFN,%D,%DIX)) G:$P(%DIX,%XX,1)'=""""!(%DIX="""") T2 S %DIY=0"
^XTMP("XPDT",7540,"RTN","ZIS5",17,0)="T1 S %DIY=$O(^%ZIS(%ZISDFN,%D,%DIX,+%DIY)) G:%DIY'>0 TRY S %YY=+%DIY D S G:'$T T1"
^XTMP("XPDT",7540,"RTN","ZIS5",18,0)=" I %DS,'(%DS#10) D LST G NO:%XX=U,ADD:%YY<0,GOT:%YY>0"
^XTMP("XPDT",7540,"RTN","ZIS5",19,0)=" S %DS=%DS+1,%DS(%DS)=%DIY G T1"
^XTMP("XPDT",7540,"RTN","ZIS5",20,0)="LSYN ;"
^XTMP("XPDT",7540,"RTN","ZIS5",21,0)="S I $D(^%ZIS(%ZISDFN,%YY,0)) G S1"
^XTMP("XPDT",7540,"RTN","ZIS5",22,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS5",23,0)="S1 G S2:%ZISDFN'=1!(%D'=""LSYN"") I $P(^%ZIS(1,%YY,0),U,9)=%ZISV!($P(^(0),U,9)="""") G S2"
^XTMP("XPDT",7540,"RTN","ZIS5",24,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS5",25,0)="S2 N Y S Y=%YY D:$D(%ZIS(""S"")) XS^ZISX Q"
^XTMP("XPDT",7540,"RTN","ZIS5",26,0)="T2 G:'%DS NO S %DIY="""" D LST G NO:%XX=U,ADD:%YY<1,GOT"
^XTMP("XPDT",7540,"RTN","ZIS5",27,0)="LST I %DS=1,'$D(%ZISLST) S %YY=%DS(1) Q"
^XTMP("XPDT",7540,"RTN","ZIS5",28,0)=" S %YY=-1 Q:%ZIS(0)'[""E""  W !"
^XTMP("XPDT",7540,"RTN","ZIS5",29,0)=" F %DZ=%DS(0):1:%DS W !,$J(%DZ,2),"" "",$P(^%ZIS(%ZISDFN,%DS(%DZ),0),U,1) D:%ZISDFN=1  I $D(%ZIS(""W"")),$D(^(0)) W ""  "" D XW^ZISX"
^XTMP("XPDT",7540,"RTN","ZIS5",30,0)=" . ;Show Location"
^XTMP("XPDT",7540,"RTN","ZIS5",31,0)=" . S %=$G(^(1)) W:$X+$L($P(%,U))>74 !?75-$L(X) W ""   ""_$P(%,U)"
^XTMP("XPDT",7540,"RTN","ZIS5",32,0)="L1 W:%DIY !,""Type '^' to Stop, or"" W !,""Choose 1"" W:%DS>1 ""-"",%DS"
^XTMP("XPDT",7540,"RTN","ZIS5",33,0)=" R ""> "",%YY:%ZISDTIM S %ZISLST=1 I %YY="""",%DIY S %DS(0)=%DS+1,%YY=0 W ! Q"
^XTMP("XPDT",7540,"RTN","ZIS5",34,0)=" I %YY=U!(%YY="""") S %YY=-1,DUOUT=1 S:%YY=U %XX=U Q"
^XTMP("XPDT",7540,"RTN","ZIS5",35,0)=" I +%YY'=%YY!(%YY<1)!(%YY>%DS) W:%ZIS(0)[""Q"" *7,"" ??"" G L1"
^XTMP("XPDT",7540,"RTN","ZIS5",36,0)=" S %YY=%DS(%YY) Q"
^XTMP("XPDT",7540,"RTN","ZIS5",37,0)="GOT S %DZ=^%ZIS(%ZISDFN,+%YY,0)"
^XTMP("XPDT",7540,"RTN","ZIS5",38,0)=" W:%ZIS(0)[""E"" ""  "",$P(%DZ,U,1)"
^XTMP("XPDT",7540,"RTN","ZIS5",39,0)="R I %ZIS(0)'[""F"" S:$S($D(DUZ)#2:$S(DUZ:1,1:0),1:0) ^DISV(DUZ,""^%ZIS(""_%ZISDFN_"","")=+%YY"
^XTMP("XPDT",7540,"RTN","ZIS5",40,0)=" I %ZIS(0)[""Z"" S %YY(0)=^%ZIS(%ZISDFN,+%YY,0)"
^XTMP("XPDT",7540,"RTN","ZIS5",41,0)="Q K %ZISDFN,%DO,%DD,%DIX,%DIY,%DZ Q"
^XTMP("XPDT",7540,"RTN","ZIS5",42,0)="ADD ;can't add to files"
^XTMP("XPDT",7540,"RTN","ZIS5",43,0)="NO S %YY=-1 G Q"
^XTMP("XPDT",7540,"RTN","ZIS5",44,0)="NUM I $D(^%ZIS(%ZISDFN,%XX)) S %YY=%XX D S I $T G GOT"
^XTMP("XPDT",7540,"RTN","ZIS5",45,0)=" G F"
^XTMP("XPDT",7540,"RTN","ZIS5",46,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZIS5",47,0)="1 ;Entry point for Device lookup"
^XTMP("XPDT",7540,"RTN","ZIS5",48,0)=" N %D,%DS,%ZISDFN,%ZISLST ;p518"
^XTMP("XPDT",7540,"RTN","ZIS5",49,0)=" F %D=""B"",""LSYN"" S %ZISDFN=1,%ZIS(0)=$S($D(IOP):""M"",1:""EMQ"") D %ZIS5 Q:(%YY>0)!$D(DUOUT)"
^XTMP("XPDT",7540,"RTN","ZIS5",50,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS5",51,0)="2 ;Entry point for Terminal type lookup"
^XTMP("XPDT",7540,"RTN","ZIS5",52,0)=" N %D,%DS,%ZISDFN,%ZISLST ;p518"
^XTMP("XPDT",7540,"RTN","ZIS5",53,0)=" S %D=""B"",%ZISDFN=2,%ZIS(0)=$S($D(IOP):""M"",1:""EMQ"") D %ZIS5"
^XTMP("XPDT",7540,"RTN","ZIS5",54,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZIS5",55,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZIS5",56,0)="LD1 S %E=0,%Y=0 D LCPU:""PD""[$E(%X) S %E=0 W !"
^XTMP("XPDT",7540,"RTN","ZIS5",57,0)="L S %E=$S(""PD""[$E(%X):$O(^UTILITY(""ZIS"",$J,""DEVLST"",""B"",%E)),1:$O(^%ZIS(1,""B"",%E))) G:%E="""" RESTART S %A=+$O(^(%E,0))"
^XTMP("XPDT",7540,"RTN","ZIS5",58,0)=" G L:'$D(^%ZIS(1,%A,0)),L:$P(^(0),""^"",2)=46,L:$P(^(0),""^"",2)=63 I $D(%ZIS(""S"")) N Y S Y=%A D XS^ZISX G L:'$T"
^XTMP("XPDT",7540,"RTN","ZIS5",59,0)=" I ""AP""[$E(%X) G L:$P($G(^%ZIS(2,+$G(^%ZIS(1,%A,""SUBTYPE"")),0)),U)'?1""P"".E"
^XTMP("XPDT",7540,"RTN","ZIS5",60,0)=" W $J($P(^%ZIS(1,%A,0),""^"",1),9) W:$D(^(1)) "" "",$P(^(1),""^"",1) I $D(^(90)),^(90) W "" ** OUT OF SERVICE"""
^XTMP("XPDT",7540,"RTN","ZIS5",61,0)=" W ?39 I $X>40 W ! S %Y=%Y+1 I %Y>20 R ""'^' TO STOP: "",%Y:%ZISDTIM,! G RESTART:%Y?1P S %Y=0"
^XTMP("XPDT",7540,"RTN","ZIS5",62,0)=" G L"
^XTMP("XPDT",7540,"RTN","ZIS5",63,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZIS5",64,0)="LCPU S %A=%ZISV"
^XTMP("XPDT",7540,"RTN","ZIS5",65,0)="LC1 S %A=$O(^%ZIS(1,""CPU"",%A)) Q:$P(%A,""."")'=%ZISV  S %E=0"
^XTMP("XPDT",7540,"RTN","ZIS5",66,0)="LC2 S %E=+$O(^%ZIS(1,""CPU"",%A,%E)) G LC1:%E'>0,LC1:'$D(^%ZIS(1,%E,0)) S ^UTILITY(""ZIS"",$J,""DEVLST"",""B"",$P(^(0),""^"",1),%E)="""" G LC2"
^XTMP("XPDT",7540,"RTN","ZIS5",67,0)="RESTART S:$D(%H) %E=+%H K %X,^UTILITY(""ZIS"",$J,""DEVLST"") Q"
^XTMP("XPDT",7540,"RTN","ZISHONT")="0^2^B59942519^B60012686"
^XTMP("XPDT",7540,"RTN","ZISHONT",1,0)="%ZISH ;IHS/PR,SFISC/AC - Host File Control for Cache for VMS/NT/UNIX ;11/25/08  14:31"
^XTMP("XPDT",7540,"RTN","ZISHONT",2,0)=" ;;8.0;KERNEL;**34,65,84,104,191,306,385,440,518**;JUL 10, 1995;Build 8"
^XTMP("XPDT",7540,"RTN","ZISHONT",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7540,"RTN","ZISHONT",4,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",5,0)="OPEN(X1,X2,X3,X4,X5,X6)    ;SR. Open Host File"
^XTMP("XPDT",7540,"RTN","ZISHONT",6,0)=" ;X1=handle name"
^XTMP("XPDT",7540,"RTN","ZISHONT",7,0)=" ;X2=directory name \dir\"
^XTMP("XPDT",7540,"RTN","ZISHONT",8,0)=" ;X3=file name"
^XTMP("XPDT",7540,"RTN","ZISHONT",9,0)=" ;X4=file access mode e.g.: W for write, R for read, A for append."
^XTMP("XPDT",7540,"RTN","ZISHONT",10,0)=" ;X5=Max record size for a new file, X6=Subtype"
^XTMP("XPDT",7540,"RTN","ZISHONT",11,0)=" N %,%1,%2,%I,%ZOS,%T,%ZA,%ZISHIO,$ET"
^XTMP("XPDT",7540,"RTN","ZISHONT",12,0)=" S $ET=""D OPNERR^%ZISH"""
^XTMP("XPDT",7540,"RTN","ZISHONT",13,0)=" S U=""^"",%I=$I,%T=0,POP=0,X2=$$DEFDIR($G(X2)),%ZOS=$$OS^%ZOSV M %ZISHIO=IO"
^XTMP("XPDT",7540,"RTN","ZISHONT",14,0)=" I %ZOS'=""VMS"" S %1=$S(X4[""A"":""AW"",X4[""W"":""WN"",1:""R"")_$S(X4[""B"":""U"",1:""S"") ;NT & Unix"
^XTMP("XPDT",7540,"RTN","ZISHONT",15,0)=" I %ZOS=""VMS"" S %1=$S(X4[""A"":""AW"",X4[""W"":""WN"",1:""RH"")_$S(X4[""B"":""U"",1:""S"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",16,0)=" ;The next line eliminates the <ENDOFFILE> error for sequential files for the current process."
^XTMP("XPDT",7540,"RTN","ZISHONT",17,0)=" S %ZA=$ZUTIL(68,40,1) ;Work like DSM"
^XTMP("XPDT",7540,"RTN","ZISHONT",18,0)=" S %=X2_X3 O %:(%1):2 I '$T S POP=1 Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",19,0)=" ;U % S %ZA=$ZA ;Comment out, $ZA is for READ status"
^XTMP("XPDT",7540,"RTN","ZISHONT",20,0)=" ;I %ZA=-1 U:%I]"""" %I C % S POP=1 Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",21,0)=" S IO=%,IO(1,IO)="""",IOT=""HFS"",IOM=80,IOSL=60,POP=0 D SUBTYPE^%ZIS3($G(X6,""P-OTHER""))"
^XTMP("XPDT",7540,"RTN","ZISHONT",22,0)=" I $G(X1)]"""" D SAVDEV^%ZISUTL(X1)"
^XTMP("XPDT",7540,"RTN","ZISHONT",23,0)=" U $S(%I]"""":%I,1:$P)"
^XTMP("XPDT",7540,"RTN","ZISHONT",24,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",25,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",26,0)="OPNERR ;Handle open error"
^XTMP("XPDT",7540,"RTN","ZISHONT",27,0)=" S POP=1,$ECODE="""""
^XTMP("XPDT",7540,"RTN","ZISHONT",28,0)=" U:$P]"""" $P"
^XTMP("XPDT",7540,"RTN","ZISHONT",29,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",30,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",31,0)="CLOSE(X) ;SR. Close HFS device not opened by %ZIS."
^XTMP("XPDT",7540,"RTN","ZISHONT",32,0)=" ;X=HANDLE NAME"
^XTMP("XPDT",7540,"RTN","ZISHONT",33,0)=" ;IO=Device"
^XTMP("XPDT",7540,"RTN","ZISHONT",34,0)=" N %"
^XTMP("XPDT",7540,"RTN","ZISHONT",35,0)=" I $G(IO)]"""" C IO K IO(1,IO)"
^XTMP("XPDT",7540,"RTN","ZISHONT",36,0)=" I $G(X)]"""" D RMDEV^%ZISUTL(X)"
^XTMP("XPDT",7540,"RTN","ZISHONT",37,0)=" ;Only reset home if one setup."
^XTMP("XPDT",7540,"RTN","ZISHONT",38,0)=" I $D(IO(""HOME""))!$D(^XUTL(""XQ"",$J,""IOS"")) D HOME^%ZIS"
^XTMP("XPDT",7540,"RTN","ZISHONT",39,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",40,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",41,0)="OPENERR ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",42,0)=" Q 0"
^XTMP("XPDT",7540,"RTN","ZISHONT",43,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",44,0)="DEL(%ZX1,%ZX2) ;ef,SR. Del files, return 1 if deleted all requested."
^XTMP("XPDT",7540,"RTN","ZISHONT",45,0)=" ;S Y=$$DEL^%ZISH(""dir path"",$NA(array))"
^XTMP("XPDT",7540,"RTN","ZISHONT",46,0)=" ; will invoke an OS command to delete file(s)"
^XTMP("XPDT",7540,"RTN","ZISHONT",47,0)=" ; UNIX: rm -f filespec[ ...]"
^XTMP("XPDT",7540,"RTN","ZISHONT",48,0)=" ; VMS: del filespec[,...]"
^XTMP("XPDT",7540,"RTN","ZISHONT",49,0)=" N %ZARG,%ZXDEL,%ZOS,%ZDELIM,%ZCOMND,%ZLIST"
^XTMP("XPDT",7540,"RTN","ZISHONT",50,0)=" S %ZARG="""",%ZXDEL=1"
^XTMP("XPDT",7540,"RTN","ZISHONT",51,0)=" S %ZX1=$$DEFDIR($G(%ZX1))"
^XTMP("XPDT",7540,"RTN","ZISHONT",52,0)=" S %ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7540,"RTN","ZISHONT",53,0)=" S %ZDELIM=$S(%ZOS=""UNIX"":"" "",1:"","")"
^XTMP("XPDT",7540,"RTN","ZISHONT",54,0)=" S %ZCOMND=$S(%ZOS=""UNIX"":""rm -f "",1:""del "")"
^XTMP("XPDT",7540,"RTN","ZISHONT",55,0)=" D"
^XTMP("XPDT",7540,"RTN","ZISHONT",56,0)=" . N $ETRAP,$ESTACK S $ETRAP=""D DELERR^%ZISH"""
^XTMP("XPDT",7540,"RTN","ZISHONT",57,0)=" . N %,%ZI,%ZISH,%ZX,%ZFOUND S %ZISH="""""
^XTMP("XPDT",7540,"RTN","ZISHONT",58,0)=" . F %ZI=1:1 S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""""  D"
^XTMP("XPDT",7540,"RTN","ZISHONT",59,0)=" . . N $ETRAP,$ESTACK S $ETRAP=""D DELERR^%ZISH"""
^XTMP("XPDT",7540,"RTN","ZISHONT",60,0)=" . . I %ZISH[""*"" S %ZXDEL=0 Q  ; Wild card not allowed."
^XTMP("XPDT",7540,"RTN","ZISHONT",61,0)=" . . S %ZX=$S(%ZISH[%ZX1:%ZISH,1:%ZX1_%ZISH) ; prepend directory path"
^XTMP("XPDT",7540,"RTN","ZISHONT",62,0)=" . . I %ZOS=""VMS"",%ZX'["";"" S %ZX=%ZX_"";*"""
^XTMP("XPDT",7540,"RTN","ZISHONT",63,0)=" . . S %ZFOUND=$ZSEARCH(%ZX)]""""  ; File exists"
^XTMP("XPDT",7540,"RTN","ZISHONT",64,0)=" . . S:%ZFOUND %ZARG=$S(%ZARG="""":%ZX,1:%ZARG_%ZDELIM_%ZX) ; join files"
^XTMP("XPDT",7540,"RTN","ZISHONT",65,0)=" . . I $L(%ZARG)>2000 S %=$ZF(-1,%ZCOMND_%ZARG),%ZARG="""" H 1 ; delete files at a time"
^XTMP("XPDT",7540,"RTN","ZISHONT",66,0)=" . ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",67,0)=" . I $L(%ZARG) S %=$ZF(-1,%ZCOMND_%ZARG) ; delete remaining files"
^XTMP("XPDT",7540,"RTN","ZISHONT",68,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",69,0)=" I %ZXDEL S %ZXDEL='$$LIST(%ZX1,%ZX2,""%ZLIST"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",70,0)=" Q %ZXDEL"
^XTMP("XPDT",7540,"RTN","ZISHONT",71,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",72,0)="DELERR ;Trap any $ETRAP error, unwind and return."
^XTMP("XPDT",7540,"RTN","ZISHONT",73,0)=" S $ETRAP=""D UNWIND^%ZTER"""
^XTMP("XPDT",7540,"RTN","ZISHONT",74,0)=" S %ZXDEL=0,%ZARG="""""
^XTMP("XPDT",7540,"RTN","ZISHONT",75,0)=" D UNWIND^%ZTER"
^XTMP("XPDT",7540,"RTN","ZISHONT",76,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",77,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",78,0)="DEL1(%ZX3) ;ef,SR. Delete one file"
^XTMP("XPDT",7540,"RTN","ZISHONT",79,0)=" N %ZI1,%ZI2"
^XTMP("XPDT",7540,"RTN","ZISHONT",80,0)=" D SPLIT(%ZX3,.%ZI1,.%ZI2) S %ZI2(%ZI2)="""""
^XTMP("XPDT",7540,"RTN","ZISHONT",81,0)=" Q $$DEL(%ZI1,$NA(%ZI2))"
^XTMP("XPDT",7540,"RTN","ZISHONT",82,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",83,0)="SPLIT(%I,%O1,%O2) ;Split to path,file"
^XTMP("XPDT",7540,"RTN","ZISHONT",84,0)=" N %ZOS,%D,D S %ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7540,"RTN","ZISHONT",85,0)=" I %ZOS[""VMS"" D  Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",86,0)=" . S D=$S(%I[""]"":""]"",1:"":"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",87,0)=" . S %O1=$P(%I,D,1)_D,%O2=$P(%I,D,2)"
^XTMP("XPDT",7540,"RTN","ZISHONT",88,0)=" . Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",89,0)=" S %D=$S(%ZOS=""UNIX"":""/"",%ZOS=""NT"":""\"",1:""""),%O1="""",%O2="""" Q:%D="""""
^XTMP("XPDT",7540,"RTN","ZISHONT",90,0)=" S D=$L(%I,%D),%O1=$P(%I,%D,1,D-1),%O2=$P(%I,%D,D)"
^XTMP("XPDT",7540,"RTN","ZISHONT",91,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",92,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",93,0)="FEXIST(%PATH,%FL) ;Check if files exsist."
^XTMP("XPDT",7540,"RTN","ZISHONT",94,0)=" ;S Y=$$DTEST(""/usr/var"",$NA(array))"
^XTMP("XPDT",7540,"RTN","ZISHONT",95,0)=" N %ZISH,%ZISHY"
^XTMP("XPDT",7540,"RTN","ZISHONT",96,0)=" S %ZISH=$$LIST(%PATH,%FL,""%ZISHY"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",97,0)=" Q %ZISH"
^XTMP("XPDT",7540,"RTN","ZISHONT",98,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",99,0)="LIST(%ZX1,%ZX2,%ZX3) ;ef,SR. Create a local array holding file names"
^XTMP("XPDT",7540,"RTN","ZISHONT",100,0)=" ;S Y=$$LIST^%ZISH(""\dir\"",$NA(array),$NA(return array)) Return 1 if found anything"
^XTMP("XPDT",7540,"RTN","ZISHONT",101,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",102,0)=" N %ZISH,%ZISHN,%ZX,%ZISHY,%ZY,%ZOS"
^XTMP("XPDT",7540,"RTN","ZISHONT",103,0)=" S %ZX1=$$DEFDIR($G(%ZX1)),%ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7540,"RTN","ZISHONT",104,0)=" ;S %ZX1=$$TRNLNM(%ZX1)"
^XTMP("XPDT",7540,"RTN","ZISHONT",105,0)=" ;Get fls to act on"
^XTMP("XPDT",7540,"RTN","ZISHONT",106,0)=" S %ZISH="""" F  S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""""  D"
^XTMP("XPDT",7540,"RTN","ZISHONT",107,0)=" . S %ZISHY=$P(%ZISH,""*"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",108,0)=" . I %ZOS=""VMS"",%ZISH'[""."" S %ZISH=%ZISH_"".*"" ;Allways upper"
^XTMP("XPDT",7540,"RTN","ZISHONT",109,0)=" . ;NT, display case, ignore for lookup"
^XTMP("XPDT",7540,"RTN","ZISHONT",110,0)=" . S %ZX=%ZX1_%ZISH"
^XTMP("XPDT",7540,"RTN","ZISHONT",111,0)=" . F %ZISHN=0:1 D  Q:(%ZX="""")"
^XTMP("XPDT",7540,"RTN","ZISHONT",112,0)=" . . S %ZX=$ZSEARCH($S(%ZISHN:"""",1:%ZX))"
^XTMP("XPDT",7540,"RTN","ZISHONT",113,0)=" . . ;Q:(%ZX="""")!($$UP^XLFSTR(%ZX)'[%ZISHY)!(%ZX?.E1.2""."")"
^XTMP("XPDT",7540,"RTN","ZISHONT",114,0)=" . . Q:(%ZX="""")!(%ZX?.E1.2""."")"
^XTMP("XPDT",7540,"RTN","ZISHONT",115,0)=" . . I %ZOS=""VMS"" S %ZX=$P(%ZX,""]"",2),@%ZX3@(%ZX)="""""
^XTMP("XPDT",7540,"RTN","ZISHONT",116,0)=" . . I %ZOS=""NT"" S %ZY=$P(%ZX,""\"",$L(%ZX,""\"")),@%ZX3@(%ZY)="""""
^XTMP("XPDT",7540,"RTN","ZISHONT",117,0)=" . . I %ZOS=""UNIX"" S %ZY=$P(%ZX,""/"",$L(%ZX,""/"")) Q:%ZX'[%ZISHY  S @%ZX3@(%ZY)="""""
^XTMP("XPDT",7540,"RTN","ZISHONT",118,0)=" . . Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",119,0)=" Q $O(@%ZX3@(""""))]"""""
^XTMP("XPDT",7540,"RTN","ZISHONT",120,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",121,0)="MV(X1,X2,Y1,Y2) ;ef,SR. Rename a fl"
^XTMP("XPDT",7540,"RTN","ZISHONT",122,0)=" ;S Y=$$MV^ZOSHDOS(""\dir\"",""fl"",""\dir\"",""fl"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",123,0)=" ;Unix use mv, NT/VMS use COPY and DEL"
^XTMP("XPDT",7540,"RTN","ZISHONT",124,0)=" N %,X,Y,%ZOS,%ZISHX S %ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7540,"RTN","ZISHONT",125,0)=" S X1=$$DEFDIR($G(X1)),Y1=$$DEFDIR($G(Y1))"
^XTMP("XPDT",7540,"RTN","ZISHONT",126,0)=" S X=$ZSEARCH(X1_X2),Y=Y1_Y2 ;move X to Y"
^XTMP("XPDT",7540,"RTN","ZISHONT",127,0)=" I X="""" Q 0"
^XTMP("XPDT",7540,"RTN","ZISHONT",128,0)=" S %=$ZF(-1,$S(%ZOS=""UNIX"":""mv "",1:""copy "")_X_"" ""_Y) ;Use NT/VMS copy"
^XTMP("XPDT",7540,"RTN","ZISHONT",129,0)=" I %ZOS'=""UNIX"" D"
^XTMP("XPDT",7540,"RTN","ZISHONT",130,0)=" . S X2=$P(X,X1,2),%ZISHX(X2)="""""
^XTMP("XPDT",7540,"RTN","ZISHONT",131,0)=" . S Y=$$DEL^%ZISH(X1,$NA(%ZISHX))"
^XTMP("XPDT",7540,"RTN","ZISHONT",132,0)=" Q 1"
^XTMP("XPDT",7540,"RTN","ZISHONT",133,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",134,0)="PWD() ;ef,SR. Print working directory"
^XTMP("XPDT",7540,"RTN","ZISHONT",135,0)=" N Y,%ZOS"
^XTMP("XPDT",7540,"RTN","ZISHONT",136,0)=" S Y=$$DEFDIR(""""),%ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7540,"RTN","ZISHONT",137,0)=" I Y="""" S Y=$ZSEARCH(""*"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",138,0)=" Q $S(%ZOS[""VMS"":Y,1:$P(Y,""."",1))"
^XTMP("XPDT",7540,"RTN","ZISHONT",139,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",140,0)="TRNLNM(PATH) ;ef. Expand logical path"
^XTMP("XPDT",7540,"RTN","ZISHONT",141,0)=" N %ZOS,P1,P2"
^XTMP("XPDT",7540,"RTN","ZISHONT",142,0)=" S %ZOS=$$OS^%ZOSV,PATH=$G(PATH)"
^XTMP("XPDT",7540,"RTN","ZISHONT",143,0)=" I %ZOS=""VMS"" D  Q PATH"
^XTMP("XPDT",7540,"RTN","ZISHONT",144,0)=" . S P1=PATH_$S(PATH["":"":""*.*"",1:"":*.*"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",145,0)=" . S P2=$ZSEARCH(P1)"
^XTMP("XPDT",7540,"RTN","ZISHONT",146,0)=" . S:$L(P2) PATH=$S(P2[""]"":$P(P2,""]"",1,$L(P2,""]"")-1)_""]"",1:$P(P2,"":"",1)_"":"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",147,0)=" . Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",148,0)=" I %ZOS=""NT"" D  Q PATH"
^XTMP("XPDT",7540,"RTN","ZISHONT",149,0)=" . S P1=PATH_$S($E(PATH,$L(PATH))'=""\"":""\*"",1:""*""),P2=$ZSEARCH(P1)"
^XTMP("XPDT",7540,"RTN","ZISHONT",150,0)=" . S:$L(P2) PATH=$P(P2,""\"",1,$L(P2,""\"")-1)_""\"""
^XTMP("XPDT",7540,"RTN","ZISHONT",151,0)=" . Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",152,0)=" ;Unix Cache $ZSEARCH uses % around an environment variable"
^XTMP("XPDT",7540,"RTN","ZISHONT",153,0)=" I %ZOS=""UNIX"" D  Q PATH"
^XTMP("XPDT",7540,"RTN","ZISHONT",154,0)=" . S P1=PATH_$S($E(PATH,$L(PATH))'=""/"":""/*"",1:""*""),P2=$ZSEARCH(P1)"
^XTMP("XPDT",7540,"RTN","ZISHONT",155,0)=" . S:$L(P2) PATH=$P(P2,""/"",1,$L(P2,""/"")-1)_""/"""
^XTMP("XPDT",7540,"RTN","ZISHONT",156,0)=" . Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",157,0)=" Q PATH"
^XTMP("XPDT",7540,"RTN","ZISHONT",158,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",159,0)="DEFDIR(DF) ;ef. Default Dir and frmt"
^XTMP("XPDT",7540,"RTN","ZISHONT",160,0)=" ;Need to handle NT, VMS and Linux"
^XTMP("XPDT",7540,"RTN","ZISHONT",161,0)=" N %ZOS,P1,P2 S %ZOS=$$OS^%ZOSV,DF=$G(DF)"
^XTMP("XPDT",7540,"RTN","ZISHONT",162,0)=" Q:DF=""."" """" ;Special way to get current dir."
^XTMP("XPDT",7540,"RTN","ZISHONT",163,0)=" S:DF="""" DF=$G(^XTV(8989.3,1,""DEV"")),DF=$P(DF,""^"",$S($$PRI^%ZOSV<2:1,1:2))"
^XTMP("XPDT",7540,"RTN","ZISHONT",164,0)=" Q:DF="""" """""
^XTMP("XPDT",7540,"RTN","ZISHONT",165,0)=" ;Check syntax, VMS needs disk:[dir] or logical:"
^XTMP("XPDT",7540,"RTN","ZISHONT",166,0)=" I %ZOS=""VMS"" D"
^XTMP("XPDT",7540,"RTN","ZISHONT",167,0)=" . I DF["":"" S P1=$P(DF,"":"")_"":"",P2=$P(DF,"":"",2)"
^XTMP("XPDT",7540,"RTN","ZISHONT",168,0)=" . E  S P1="""",P2=DF"
^XTMP("XPDT",7540,"RTN","ZISHONT",169,0)=" . I P1="""",P2[""$"" S P1=P2,P2=""""  ;Could be a logical"
^XTMP("XPDT",7540,"RTN","ZISHONT",170,0)=" . I $L(P2) S:P2'[""["" P2=""[""_P2 S:P2'[""]"" P2=P2_""]"""
^XTMP("XPDT",7540,"RTN","ZISHONT",171,0)=" . S DF=P1_P2 S:DF'["":"" DF=DF_"":"""
^XTMP("XPDT",7540,"RTN","ZISHONT",172,0)=" . Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",173,0)=" ;Check syntax, Unix needs /mnt/fl, ./fl, ~/fl %HOME%/fl"
^XTMP("XPDT",7540,"RTN","ZISHONT",174,0)=" I %ZOS=""UNIX"" D"
^XTMP("XPDT",7540,"RTN","ZISHONT",175,0)=" . S DF=$TR(DF,""\"",""/"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",176,0)=" . S:$E(DF,$L(DF))'=""/"" DF=DF_""/"""
^XTMP("XPDT",7540,"RTN","ZISHONT",177,0)=" . Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",178,0)=" ;Check syntax, NT needs c:\dir\"
^XTMP("XPDT",7540,"RTN","ZISHONT",179,0)=" I %ZOS=""NT"" D"
^XTMP("XPDT",7540,"RTN","ZISHONT",180,0)=" . N P1,P2"
^XTMP("XPDT",7540,"RTN","ZISHONT",181,0)=" . I DF["":"" S P1=$P(DF,"":"")_"":"",P2=$P(DF,"":"",2)"
^XTMP("XPDT",7540,"RTN","ZISHONT",182,0)=" . E  S P1="""",P2=DF"
^XTMP("XPDT",7540,"RTN","ZISHONT",183,0)=" . S P2=$TR(P2,""/"",""\"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",184,0)=" . I $L(P2) S:"".\""'[$E(P2,1) P2=""\""_P2 S:$E(P2,$L(P2))'=""\"" P2=P2_""\"""
^XTMP("XPDT",7540,"RTN","ZISHONT",185,0)=" . S DF=P1_P2"
^XTMP("XPDT",7540,"RTN","ZISHONT",186,0)=" . Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",187,0)=" S DF=$$TRNLNM(DF) ;Resolve logicals"
^XTMP("XPDT",7540,"RTN","ZISHONT",188,0)=" Q DF"
^XTMP("XPDT",7540,"RTN","ZISHONT",189,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",190,0)="FL(X) ;Fl len"
^XTMP("XPDT",7540,"RTN","ZISHONT",191,0)=" N ZOSHP1,ZOSHP2"
^XTMP("XPDT",7540,"RTN","ZISHONT",192,0)=" S ZOSHP1=$P(X,"".""),ZOSHP2=$P(X,""."",2)"
^XTMP("XPDT",7540,"RTN","ZISHONT",193,0)=" I $L(ZOSHP1)>8 S X=4 Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",194,0)=" I $L(ZOSHP2)>3 S X=4 Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",195,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",196,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",197,0)="STATUS() ;ef,SR. Return EOF status"
^XTMP("XPDT",7540,"RTN","ZISHONT",198,0)=" U $I"
^XTMP("XPDT",7540,"RTN","ZISHONT",199,0)=" Q $$EOF($ZEOF)"
^XTMP("XPDT",7540,"RTN","ZISHONT",200,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",201,0)="EOF(X) ;Eof flag, pass in $ZEOF"
^XTMP("XPDT",7540,"RTN","ZISHONT",202,0)=" Q (X=-1)"
^XTMP("XPDT",7540,"RTN","ZISHONT",203,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",204,0)="MAKEREF(HF,IX,OVF) ;Internal call to rebuild global ref."
^XTMP("XPDT",7540,"RTN","ZISHONT",205,0)=" ;Return %ZISHF,%ZISHO,%ZISHI,%ZISUB"
^XTMP("XPDT",7540,"RTN","ZISHONT",206,0)=" N I,F,MX"
^XTMP("XPDT",7540,"RTN","ZISHONT",207,0)=" S OVF=$G(OVF,""%ZISHOF"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",208,0)=" S %ZISHI=$QS(HF,IX),MX=$QL(HF) ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",209,0)=" S F=$NA(@HF,IX-1) ;Get first part"
^XTMP("XPDT",7540,"RTN","ZISHONT",210,0)=" I IX=1 S %ZISHF=F_""(%ZISHI"" ;Build root, IX=1"
^XTMP("XPDT",7540,"RTN","ZISHONT",211,0)=" I IX>1 S %ZISHF=$E(F,1,$L(F)-1)_"",%ZISHI"" ;Build root"
^XTMP("XPDT",7540,"RTN","ZISHONT",212,0)=" S %ZISHO=%ZISHF_"",""_OVF_"",%OVFCNT)"" ;Make overflow"
^XTMP("XPDT",7540,"RTN","ZISHONT",213,0)=" F I=IX+1:1:MX S %ZISHF=%ZISHF_"",%ZISUB(""_I_"")"",%ZISUB(I)=$QS(HF,I)"
^XTMP("XPDT",7540,"RTN","ZISHONT",214,0)=" S %ZISHF=%ZISHF_"")"""
^XTMP("XPDT",7540,"RTN","ZISHONT",215,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",216,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",217,0)="READNXT(REC) ;Read any sized record into array. %ZB has terminator"
^XTMP("XPDT",7540,"RTN","ZISHONT",218,0)=" N %,I,X,$ES,$ET S REC="""",$ET=""D READNX^%ZISH Q"""
^XTMP("XPDT",7540,"RTN","ZISHONT",219,0)=" U IO R X:5 S %ZB=$A($ZB),REC=$E(X,1,255)"
^XTMP("XPDT",7540,"RTN","ZISHONT",220,0)=" Q:$L(X)<256"
^XTMP("XPDT",7540,"RTN","ZISHONT",221,0)=" S %=256 F I=1:1 Q:$L(X)<%  S REC(I)=$E(X,%,%+254),%=%+255"
^XTMP("XPDT",7540,"RTN","ZISHONT",222,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",223,0)="READNX ;Check for EOF"
^XTMP("XPDT",7540,"RTN","ZISHONT",224,0)=" I $ZE[""ENDOFFILE"" S %ZA=-1"
^XTMP("XPDT",7540,"RTN","ZISHONT",225,0)=" S $EC="""""
^XTMP("XPDT",7540,"RTN","ZISHONT",226,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",227,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",228,0)="FTG(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;ef,SR. Unload contents of host file into global"
^XTMP("XPDT",7540,"RTN","ZISHONT",229,0)=" ;p1=hostf file directory"
^XTMP("XPDT",7540,"RTN","ZISHONT",230,0)=" ;p2=host file name"
^XTMP("XPDT",7540,"RTN","ZISHONT",231,0)=" ;p3= $NAME REFERENCE INCLUDING STARTING SUBSCRIPT"
^XTMP("XPDT",7540,"RTN","ZISHONT",232,0)=" ;p4=INCREMENT SUBSCRIPT"
^XTMP("XPDT",7540,"RTN","ZISHONT",233,0)=" ;p5=Overflow subscript, defaults to ""OVF"""
^XTMP("XPDT",7540,"RTN","ZISHONT",234,0)=" N %ZA,%ZB,%ZC,X,%OVFCNT,%ZISHF,%ZISHO,POP,%ZISUB,$ES,$ET"
^XTMP("XPDT",7540,"RTN","ZISHONT",235,0)=" N I,%ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHOF,%ZISHOX,%ZISHS,%ZX,%ZISHY"
^XTMP("XPDT",7540,"RTN","ZISHONT",236,0)=" S %ZX1=$$DEFDIR($G(%ZX1)),%ZISHOF=$G(%ZX5,""OVF"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",237,0)=" D MAKEREF(%ZX3,%ZX4,""%ZISHOF"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",238,0)=" D OPEN^%ZISH(,%ZX1,%ZX2,""R"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",239,0)=" I POP Q 0"
^XTMP("XPDT",7540,"RTN","ZISHONT",240,0)=" S %ZC=1,%ZA=0,$ET=""S %ZC=0,%ZA=-1,$EC="""""""" Q"""
^XTMP("XPDT",7540,"RTN","ZISHONT",241,0)=" U IO F  K %XX D READNXT(.%XX) Q:$$EOF($ZEOF)!%ZA  D"
^XTMP("XPDT",7540,"RTN","ZISHONT",242,0)=" . S @%ZISHF=%XX"
^XTMP("XPDT",7540,"RTN","ZISHONT",243,0)=" . I $D(%XX)>2 F %OVFCNT=1:1 Q:'$D(%XX(%OVFCNT))  S @%ZISHO=%XX(%OVFCNT)"
^XTMP("XPDT",7540,"RTN","ZISHONT",244,0)=" . S %ZISHI=%ZISHI+1"
^XTMP("XPDT",7540,"RTN","ZISHONT",245,0)=" . Q"
^XTMP("XPDT",7540,"RTN","ZISHONT",246,0)=" D CLOSE() ;Normal exit"
^XTMP("XPDT",7540,"RTN","ZISHONT",247,0)=" Q %ZC"
^XTMP("XPDT",7540,"RTN","ZISHONT",248,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",249,0)="GTF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Load contents of global to host file."
^XTMP("XPDT",7540,"RTN","ZISHONT",250,0)=" ;p1=$NAME of global reference"
^XTMP("XPDT",7540,"RTN","ZISHONT",251,0)=" ;p2=incrementing subscript"
^XTMP("XPDT",7540,"RTN","ZISHONT",252,0)=" ;p3=host file directory"
^XTMP("XPDT",7540,"RTN","ZISHONT",253,0)=" ;p4=host file name"
^XTMP("XPDT",7540,"RTN","ZISHONT",254,0)=" N %ZISHY,%ZISHOX"
^XTMP("XPDT",7540,"RTN","ZISHONT",255,0)=" S %ZISHY=$$MGTF(%ZX1,%ZX2,%ZX3,%ZX4,""W"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",256,0)=" Q %ZISHY"
^XTMP("XPDT",7540,"RTN","ZISHONT",257,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",258,0)="GATF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Append to host file."
^XTMP("XPDT",7540,"RTN","ZISHONT",259,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",260,0)=" ;p1=$NAME of global reference"
^XTMP("XPDT",7540,"RTN","ZISHONT",261,0)=" ;p2=incrementing subscript"
^XTMP("XPDT",7540,"RTN","ZISHONT",262,0)=" ;p3=host file directory"
^XTMP("XPDT",7540,"RTN","ZISHONT",263,0)=" ;p4=host file name"
^XTMP("XPDT",7540,"RTN","ZISHONT",264,0)=" N %ZISHY"
^XTMP("XPDT",7540,"RTN","ZISHONT",265,0)=" S %ZISHY=$$MGTF(%ZX1,%ZX2,%ZX3,%ZX4,""A"")"
^XTMP("XPDT",7540,"RTN","ZISHONT",266,0)=" Q %ZISHY"
^XTMP("XPDT",7540,"RTN","ZISHONT",267,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",268,0)="MGTF(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;"
^XTMP("XPDT",7540,"RTN","ZISHONT",269,0)=" ;p1=$NAME of global reference"
^XTMP("XPDT",7540,"RTN","ZISHONT",270,0)=" ;p2=incrementing subscript"
^XTMP("XPDT",7540,"RTN","ZISHONT",271,0)=" ;p3=host file directory"
^XTMP("XPDT",7540,"RTN","ZISHONT",272,0)=" ;p4=host file name"
^XTMP("XPDT",7540,"RTN","ZISHONT",273,0)=" N %ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHS,%ZISHOX,IO,%ZX,Y,%ZC"
^XTMP("XPDT",7540,"RTN","ZISHONT",274,0)=" D MAKEREF(%ZX1,%ZX2)"
^XTMP("XPDT",7540,"RTN","ZISHONT",275,0)=" D OPEN^%ZISH(,$G(%ZX3),%ZX4,%ZX5) ;Default dir set in open"
^XTMP("XPDT",7540,"RTN","ZISHONT",276,0)=" I POP Q 0"
^XTMP("XPDT",7540,"RTN","ZISHONT",277,0)=" N $ETRAP S $ETRAP=""S $EC="""""""" D CLOSE^%ZISH() Q 0"""
^XTMP("XPDT",7540,"RTN","ZISHONT",278,0)=" F  Q:'($D(@%ZISHF)#2)  S %ZX=@%ZISHF,%ZISHI=%ZISHI+1 U IO W %ZX,!"
^XTMP("XPDT",7540,"RTN","ZISHONT",279,0)=" D CLOSE()"
^XTMP("XPDT",7540,"RTN","ZISHONT",280,0)=" Q 1"
^XTMP("XPDT",7540,"RTN","ZISHONT",281,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU")="0^3^B31252774^B20082059"
^XTMP("XPDT",7540,"RTN","ZTMKU",1,0)="ZTMKU ;SEA/RDS-Taskman: Option, ZTMWAIT/RUN/STOP ;01/05/09  16:07"
^XTMP("XPDT",7540,"RTN","ZTMKU",2,0)=" ;;8.0;KERNEL;**118,127,275,355,518**;Jul 10, 1995;Build 8"
^XTMP("XPDT",7540,"RTN","ZTMKU",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7540,"RTN","ZTMKU",4,0)="MENU ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",5,0)=" N DIR,DTOUT,DUOUT"
^XTMP("XPDT",7540,"RTN","ZTMKU",6,0)=" D TABLE ;Show taskman"
^XTMP("XPDT",7540,"RTN","ZTMKU",7,0)=" S DTIME=$G(DTIME,300),DIR(0)=""N^1:4"",DIR(""A"",.1)="""""
^XTMP("XPDT",7540,"RTN","ZTMKU",8,0)=" S DIR(""A"",1)="" 1. Remove from WAIT state.(RUN)"",DIR(""A"",2)="" 2. Managers Update."",DIR(""A"",3)="" 3. Put into WAIT state."""
^XTMP("XPDT",7540,"RTN","ZTMKU",9,0)=" S DIR(""A"",4)="" 4. STOP Taskman."""
^XTMP("XPDT",7540,"RTN","ZTMKU",10,0)=" S DIR(""A"",99)="""",DIR(""A"")=""Select Option"" D ^DIR"
^XTMP("XPDT",7540,"RTN","ZTMKU",11,0)=" G RUN:Y=1,UPDATE:Y=2,WAIT:Y=3,STOP:Y=4"
^XTMP("XPDT",7540,"RTN","ZTMKU",12,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",13,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",14,0)="RUN ;Remove Task Managers From WAIT State"
^XTMP("XPDT",7540,"RTN","ZTMKU",15,0)=" D WS(0,""MGR""),WS(0,""SUB"") K ^%ZTSCH(""STOP"") W !,""TaskMan removed from 'WAIT STATE'."",!"
^XTMP("XPDT",7540,"RTN","ZTMKU",16,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",17,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",18,0)="UPDATE ;Have Managers Do an parameter Update"
^XTMP("XPDT",7540,"RTN","ZTMKU",19,0)=" K ^%ZTSCH(""UPDATE"")"
^XTMP("XPDT",7540,"RTN","ZTMKU",20,0)=" W !,""Managers will update parameters."",!"
^XTMP("XPDT",7540,"RTN","ZTMKU",21,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",22,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",23,0)="WAIT ;Put Task Managers In WAIT State"
^XTMP("XPDT",7540,"RTN","ZTMKU",24,0)=" D WS(1,""MGR"") W !,""TaskMan now in 'WAIT STATE'"",$C(7)"
^XTMP("XPDT",7540,"RTN","ZTMKU",25,0)=" D QSUB"
^XTMP("XPDT",7540,"RTN","ZTMKU",26,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",27,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",28,0)="STOP ;Shut Down Task Managers"
^XTMP("XPDT",7540,"RTN","ZTMKU",29,0)=" N ZTX,ND,J"
^XTMP("XPDT",7540,"RTN","ZTMKU",30,0)=" F  R !!,""Are you sure you want to stop TaskMan? NO// "",ZTX:$S($D(DTIME)#2:DTIME,1:60) S ZTX=$$UP(ZTX) Q:'$T!(""^YES^NO""[ZTX)  W:ZTX'[""?"" $C(7) W !,""Answer YES to shut down all Task Managers on current the volume set."""
^XTMP("XPDT",7540,"RTN","ZTMKU",31,0)=" I ""^NO""[ZTX W !,""TaskMan NOT shut down."" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",32,0)=" W !,""Shutting down TaskMan."" D GROUP(""SMAN(NODE)"")"
^XTMP("XPDT",7540,"RTN","ZTMKU",33,0)=" D QSUB,ASKACT"
^XTMP("XPDT",7540,"RTN","ZTMKU",34,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",35,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",36,0)="SSUB(NODE) ;Stop sub-managers"
^XTMP("XPDT",7540,"RTN","ZTMKU",37,0)=" D SS(1,""SUB"",NODE)"
^XTMP("XPDT",7540,"RTN","ZTMKU",38,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",39,0)="SMAN(NODE) ;stop managers"
^XTMP("XPDT",7540,"RTN","ZTMKU",40,0)=" D SS(1,""MGR"",NODE)"
^XTMP("XPDT",7540,"RTN","ZTMKU",41,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",42,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",43,0)="SS(MD,GR,NODE) ;Set/clear STOP nodes."
^XTMP("XPDT",7540,"RTN","ZTMKU",44,0)=" S GR=$G(GR,""MGR"") S:""MGR_SUB_""'[GR GR=""MGR"""
^XTMP("XPDT",7540,"RTN","ZTMKU",45,0)=" I MD=1 S ^%ZTSCH(""STOP"",GR,NODE)=$H D WS(0,GR)"
^XTMP("XPDT",7540,"RTN","ZTMKU",46,0)=" I MD=0 K ^%ZTSCH(""STOP"",GR,NODE)"
^XTMP("XPDT",7540,"RTN","ZTMKU",47,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",48,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",49,0)="WS(MD,GR) ;Set/Clear Wait state"
^XTMP("XPDT",7540,"RTN","ZTMKU",50,0)=" S GR=$G(GR,""MGR"") S:""MGR_SUB_""'[GR GR=""MGR"""
^XTMP("XPDT",7540,"RTN","ZTMKU",51,0)=" I MD=1 S ^%ZTSCH(""WAIT"",GR)=$H ;set wait state"
^XTMP("XPDT",7540,"RTN","ZTMKU",52,0)=" I MD=0 K ^%ZTSCH(""WAIT"",GR) ;Clear wait"
^XTMP("XPDT",7540,"RTN","ZTMKU",53,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",54,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",55,0)="GROUP(CALL) ;Do CALL for each node, use NODE as the parameter"
^XTMP("XPDT",7540,"RTN","ZTMKU",56,0)=" N J,ND,NODE"
^XTMP("XPDT",7540,"RTN","ZTMKU",57,0)=" ;Get the Managers"
^XTMP("XPDT",7540,"RTN","ZTMKU",58,0)=" F J=0:0 S J=$O(^%ZTSCH(""STATUS"",J)) Q:J=""""  S ND=$G(^(J)),NODE=$P(ND,""^"",3) D @CALL"
^XTMP("XPDT",7540,"RTN","ZTMKU",59,0)=" ;Get any remote Sub-Managers"
^XTMP("XPDT",7540,"RTN","ZTMKU",60,0)=" S NODE="""" F  S NODE=$O(^%ZTSCH(""SUB"",NODE)) Q:NODE=""""  D @CALL"
^XTMP("XPDT",7540,"RTN","ZTMKU",61,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",62,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",63,0)="OPT(MD) ;Disable/Enable option prosessing"
^XTMP("XPDT",7540,"RTN","ZTMKU",64,0)=" I MD=1 S ^%ZTSCH(""NO-OPTION"")="""""
^XTMP("XPDT",7540,"RTN","ZTMKU",65,0)=" I MD=0 K ^%ZTSCH(""NO-OPTION"")"
^XTMP("XPDT",7540,"RTN","ZTMKU",66,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",67,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",68,0)="ASKACT ;Ask if active Tasks should be signaled to stop."
^XTMP("XPDT",7540,"RTN","ZTMKU",69,0)=" N ZTX,ND"
^XTMP("XPDT",7540,"RTN","ZTMKU",70,0)=" F  R !!,""Should active jobs be signaled to stop? NO// "",ZTX:$G(DTIME,60) S ZTX=$$UP(ZTX) Q:'$T!(""^YES^NO""[ZTX)  W:ZTX'[""?"" $C(7) W !,""Answer YES to set the STOP flag for active tasks."",!,""Tasks need to call $$S^%ZTLOAD to get the signal."""
^XTMP("XPDT",7540,"RTN","ZTMKU",71,0)=" I ""^NO""[ZTX W !,""Tasks NOT signaled to shut down."" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",72,0)=" W !!,""Signaling active Tasks to STOP."""
^XTMP("XPDT",7540,"RTN","ZTMKU",73,0)=" D STPACT W !,""Done."""
^XTMP("XPDT",7540,"RTN","ZTMKU",74,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",75,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",76,0)="STPACT ;Set the STOP flag for all ACTIVE Tasks."
^XTMP("XPDT",7540,"RTN","ZTMKU",77,0)=" N ZTI,ZT2"
^XTMP("XPDT",7540,"RTN","ZTMKU",78,0)=" S ZTI=0"
^XTMP("XPDT",7540,"RTN","ZTMKU",79,0)=" F  S ZTI=$O(^%ZTSCH(""TASK"",ZTI)) Q:'ZTI  S ZT2=$$ASKSTOP^%ZTLOAD(ZTI) W !,""TASK: "",ZTI,"" Stop status: "",ZT2"
^XTMP("XPDT",7540,"RTN","ZTMKU",80,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",81,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",82,0)="QSUB N ZTX,ND"
^XTMP("XPDT",7540,"RTN","ZTMKU",83,0)=" F  R !!,""Should active submanagers shut down after finishing their current tasks? NO// "",ZTX:$S($D(DTIME)#2:DTIME,1:60) Q:'$T!(""^""[ZTX)!(""YESyesNOno""[ZTX)  W:ZTX'[""?"" $C(7) W !,""Please answer YES or NO."""
^XTMP("XPDT",7540,"RTN","ZTMKU",84,0)=" D:""YESyes""[ZTX&(ZTX]"""") GROUP(""SSUB(NODE)"") W !,""Okay!"",!"
^XTMP("XPDT",7540,"RTN","ZTMKU",85,0)=" Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",86,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",87,0)="QUERY ;Query Status Of A Task Manager"
^XTMP("XPDT",7540,"RTN","ZTMKU",88,0)=" Q:$D(%ZTX)[0  Q:%ZTX=""""  S %ZTY=0"
^XTMP("XPDT",7540,"RTN","ZTMKU",89,0)=" I $D(^%ZTSCH(""STATUS"",%ZTX))#2 S %ZTY=^%ZTSCH(""STATUS"",%ZTX)"
^XTMP("XPDT",7540,"RTN","ZTMKU",90,0)=" K %ZTX Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",91,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",92,0)="NODES ;Return Task Manager Status Nodes"
^XTMP("XPDT",7540,"RTN","ZTMKU",93,0)=" S %ZTX="""" F %ZTY=0:0 S %ZTX=$O(^%ZTSCH(""STATUS"",%ZTX)) Q:%ZTX=""""  S %ZTY=%ZTY+1,%ZTY(%ZTY)=%ZTX"
^XTMP("XPDT",7540,"RTN","ZTMKU",94,0)=" K %ZTX Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",95,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",96,0)="LIVE ;Return Whether A Task Manager Is Live"
^XTMP("XPDT",7540,"RTN","ZTMKU",97,0)=" Q:$D(%ZTX)[0  Q:%ZTX=""""  S %ZTY=0,U=""^"",%ZTX1=$H,%ZTX2=$P(%ZTX,U)"
^XTMP("XPDT",7540,"RTN","ZTMKU",98,0)=" S %ZTX3=%ZTX1-%ZTX2*86400+$P(%ZTX1,"","",2)-$P(%ZTX2,"","",2)"
^XTMP("XPDT",7540,"RTN","ZTMKU",99,0)=" I %ZTX3'<0 S %ZTY=$S($D(^%ZTSCH(""RUN""))[0&(%ZTX'[""WAIT""):0,%ZTX3<30:1,%ZTX3<120&(%ZTX[""PAUSE""):1,1:0)"
^XTMP("XPDT",7540,"RTN","ZTMKU",100,0)=" K %ZTX,%ZTX1,%ZTX2,%ZTX3 Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",101,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",102,0)="TABLE ;Display Task Manager Table"
^XTMP("XPDT",7540,"RTN","ZTMKU",103,0)=" W !,""JOB NUMBER"",?15,""STATUS"",?25,""DESCRIPTION"",?55,""LAST UPDATED"",?75,""LIVE"""
^XTMP("XPDT",7540,"RTN","ZTMKU",104,0)=" W !,""----------"",?15,""------"",?25,""-----------"",?55,""------------"",?75,""----"""
^XTMP("XPDT",7540,"RTN","ZTMKU",105,0)=" D NODES S %ZTZ=%ZTY,%ZTZ1=0,U=""^"",%H=$H D YMD^%DTC S DT=X"
^XTMP("XPDT",7540,"RTN","ZTMKU",106,0)=" F %ZTI=1:1:%ZTZ S %ZTX=%ZTY(%ZTI) D QUERY I %ZTY'=0 W !,%ZTY(%ZTI),?15,$P(%ZTY,U,2),?25,$P(%ZTY,U,3),?55 S %ZTT=$P(%ZTY,U) D T S %ZTX=%ZTY D LIVE W ?75,$S(%ZTY:""YES"",1:""NO"") I %ZTY S %ZTZ1=%ZTZ1+1"
^XTMP("XPDT",7540,"RTN","ZTMKU",107,0)=" W !?6,""Total:"",$J(%ZTZ,3),!?6,""Live :"",$J(%ZTZ1,3)"
^XTMP("XPDT",7540,"RTN","ZTMKU",108,0)=" K %ZTI,%ZTT,%ZTY,%ZTZ Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",109,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",110,0)="CLEAN ;Cleanup Status Node"
^XTMP("XPDT",7540,"RTN","ZTMKU",111,0)=" K ^%ZTSCH(""STATUS"") W !,""Done!"",! Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",112,0)="PURGE ;Purge the TASK list of running tasks."
^XTMP("XPDT",7540,"RTN","ZTMKU",113,0)=" N TSK S TSK=0"
^XTMP("XPDT",7540,"RTN","ZTMKU",114,0)=" F  S TSK=$O(^%ZTSCH(""TASK"",TSK)) Q:TSK'>0  I '$D(^%ZTSCH(""TASK"",TSK,""P"")) K ^%ZTSCH(""TASK"",TSK)"
^XTMP("XPDT",7540,"RTN","ZTMKU",115,0)=" W !,""Done!"",! Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",116,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",117,0)="ZTM ;Return Number Of Live Task Managers"
^XTMP("XPDT",7540,"RTN","ZTMKU",118,0)=" N %ZTI,%ZTZ,%ZTZ1"
^XTMP("XPDT",7540,"RTN","ZTMKU",119,0)=" D NODES S %ZTZ=%ZTY,%ZTZ1=0 F %ZTI=1:1:%ZTZ S %ZTX=%ZTY(%ZTI) D QUERY I %ZTY'=0 S %ZTX=%ZTY D LIVE I %ZTY S %ZTZ1=%ZTZ1+1"
^XTMP("XPDT",7540,"RTN","ZTMKU",120,0)=" S %ZTY=%ZTZ1 Q"
^XTMP("XPDT",7540,"RTN","ZTMKU",121,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",122,0)="UP(X) ;Convert to Uppercase"
^XTMP("XPDT",7540,"RTN","ZTMKU",123,0)=" Q $TR(X,""abcdefghijklmnopqrstuvwxyz"",""ABCDEFGHIJKLMNOPQRSTUVWXYZ"")"
^XTMP("XPDT",7540,"RTN","ZTMKU",124,0)=" ;"
^XTMP("XPDT",7540,"RTN","ZTMKU",125,0)="T ;Print Informal-format Conversion Of $H-format Date ; Input: %ZTT, DT."
^XTMP("XPDT",7540,"RTN","ZTMKU",126,0)=" S %H=%ZTT D 7^%DTC W $S(DT=X:""TODAY"",DT+1=X:""TOMORROW"",1:$E(X,4,5)_""/""_$E(X,6,7)_""/""_$E(X,2,3))_"" AT "" S X=$P(%ZTT,"","",2)\60,%H=X\60 W $E(%H+100,2,3)_"":""_$E(X#60+100,2,3)"
^XTMP("XPDT",7540,"RTN","ZTMKU",127,0)=" K %,%D,%H,%M,%Y,X Q  ; Output: %ZTT, DT."
^XTMP("XPDT",7540,"RTN","ZTMKU",128,0)=" ;"
^XTMP("XPDT",7540,"VER")="8.0^22.0"
^XTMP("XPDT",7540,"^DD",3.2,3.2,3,0)="PAGE LENGTH^RNJ5,0^^1;3^K:+X'=X!(X>65534)!(X<3)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7540,"^DD",3.2,3.2,3,3)="Type a number between 3 and 65534, 0 Decimal Digits"
^XTMP("XPDT",7540,"^DD",3.2,3.2,3,21,0)="^^1^1^3041221^"
^XTMP("XPDT",7540,"^DD",3.2,3.2,3,21,1,0)="This is the number of usable lines on the output device."
^XTMP("XPDT",7540,"^DD",3.2,3.2,3,"DT")="3081125"
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,0)="PAGE LENGTH^NJ5,0^^91;3^K:+X'=X!(X>65534)!(X<3)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,3)="Type a number between 3 and 65534, 0 Decimal Digits"
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,21,0)="^^8^8^3041221^"
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,21,1,0)="This field, if it has data, will override the Page Length field value"
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,21,2,0)="from the Terminal type file."
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,21,3,0)="Leave this field blank unless you are sure that you need to have a"
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,21,4,0)="different Page Length than what is in the terminal type file."
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,21,5,0)=" "
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,21,6,0)="If this is a CRT then this is the number of lines which can"
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,21,7,0)="be displayed on the screen, otherwise, for printers, it is"
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,21,8,0)="the number of print lines per page."
^XTMP("XPDT",7540,"^DD",3.5,3.5,11,"DT")="3081125"
^XTMP("XPDT",7540,"^DD",3.51,3.51,7,0)="PAGE ATTRIBUTES^F^^0;8^K:$L(X)>9!($L(X)<3)!'(X?1.3N1"";""1.5N) X"
^XTMP("XPDT",7540,"^DD",3.51,3.51,7,3)="Answer must be 3-9 characters in length"
^XTMP("XPDT",7540,"^DD",3.51,3.51,7,21,0)="^^3^3^3081216^^^^"
^XTMP("XPDT",7540,"^DD",3.51,3.51,7,21,1,0)="This field holds the device parameters which were established by the"
^XTMP("XPDT",7540,"^DD",3.51,3.51,7,21,2,0)="initial device handler call.  These parameters are retained and use"
^XTMP("XPDT",7540,"^DD",3.51,3.51,7,21,3,0)="when the job is spooled and when the spool document is printed."
^XTMP("XPDT",7540,"^DD",3.51,3.51,7,"DT")="3081216"
^XTMP("XPDT",7564)="1"
^XTMP("XPDT",7564,"BLD",1236,0)="XU*8.0*527^KERNEL^0^3090506^y"
^XTMP("XPDT",7564,"BLD",1236,1,0)="^^2^2^3090506^"
^XTMP("XPDT",7564,"BLD",1236,1,1,0)="Kernel patch XU*8.0*527; CLEAN THE TEXT LINE. Please refer to the"
^XTMP("XPDT",7564,"BLD",1236,1,2,0)="Description in Forum Patch Module for details."
^XTMP("XPDT",7564,"BLD",1236,4,0)="^9.64PA^^"
^XTMP("XPDT",7564,"BLD",1236,6)="^423"
^XTMP("XPDT",7564,"BLD",1236,6.3)="1"
^XTMP("XPDT",7564,"BLD",1236,"ABPKG")="n"
^XTMP("XPDT",7564,"BLD",1236,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7564,"BLD",1236,"KRN",.4,0)=".4"
^XTMP("XPDT",7564,"BLD",1236,"KRN",.401,0)=".401"
^XTMP("XPDT",7564,"BLD",1236,"KRN",.402,0)=".402"
^XTMP("XPDT",7564,"BLD",1236,"KRN",.403,0)=".403"
^XTMP("XPDT",7564,"BLD",1236,"KRN",.5,0)=".5"
^XTMP("XPDT",7564,"BLD",1236,"KRN",.84,0)=".84"
^XTMP("XPDT",7564,"BLD",1236,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7564,"BLD",1236,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7564,"BLD",1236,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7564,"BLD",1236,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7564,"BLD",1236,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7564,"BLD",1236,"KRN",9.8,"NM",1,0)="XUSTERM^^0^B20468894"
^XTMP("XPDT",7564,"BLD",1236,"KRN",9.8,"NM","B","XUSTERM",1)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN",19,0)="19"
^XTMP("XPDT",7564,"BLD",1236,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7564,"BLD",1236,"KRN",101,0)="101"
^XTMP("XPDT",7564,"BLD",1236,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7564,"BLD",1236,"KRN",771,0)="771"
^XTMP("XPDT",7564,"BLD",1236,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7564,"BLD",1236,"KRN",870,0)="870"
^XTMP("XPDT",7564,"BLD",1236,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7564,"BLD",1236,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7564,"BLD",1236,"KRN",8994,0)="8994"
^XTMP("XPDT",7564,"BLD",1236,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",.4,.4)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",.401,.401)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",.402,.402)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",.403,.403)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",.5,.5)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",.84,.84)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",19,19)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",101,101)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",771,771)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",870,870)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",8994,8994)=""
^XTMP("XPDT",7564,"BLD",1236,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7564,"BLD",1236,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7564,"BLD",1236,"QUES",0)="^9.62^^"
^XTMP("XPDT",7564,"BLD",1236,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7564,"BLD",1236,"REQB",1,0)="XU*8.0*489^1"
^XTMP("XPDT",7564,"BLD",1236,"REQB","B","XU*8.0*489",1)=""
^XTMP("XPDT",7564,"MBREQ")="0"
^XTMP("XPDT",7564,"PKG",3,-1)="1^1"
^XTMP("XPDT",7564,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7564,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7564,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7564,"PKG",3,22,1,0)="8.0^3090423^3080616^6"
^XTMP("XPDT",7564,"PKG",3,22,1,"PAH",1,0)="527^3090506"
^XTMP("XPDT",7564,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3090506"
^XTMP("XPDT",7564,"PKG",3,22,1,"PAH",1,1,1,0)="Kernel patch XU*8.0*527; CLEAN THE TEXT LINE. Please refer to the"
^XTMP("XPDT",7564,"PKG",3,22,1,"PAH",1,1,2,0)="Description in Forum Patch Module for details."
^XTMP("XPDT",7564,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7564,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7564,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7564,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7564,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7564,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7564,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7564,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7564,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7564,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7564,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7564,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7564,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7564,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7564,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7564,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7564,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7564,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7564,"QUES","XPM1","B")=""
^XTMP("XPDT",7564,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7564,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7564,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7564,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7564,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7564,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7564,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7564,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7564,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7564,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7564,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7564,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7564,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7564,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7564,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7564,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7564,"RTN")="1"
^XTMP("XPDT",7564,"RTN","XUSTERM")="0^1^B20468894^B20719185"
^XTMP("XPDT",7564,"RTN","XUSTERM",1,0)="XUSTERM ;SEA/AMF/WDE - DEACTIVATE USER ;5/5/09"
^XTMP("XPDT",7564,"RTN","XUSTERM",2,0)=" ;;8.0;KERNEL;**36,73,135,148,169,222,313,384,489,527**;Jul 10, 1995;Build 1"
^XTMP("XPDT",7564,"RTN","XUSTERM",3,0)=" ;;""Per VHA Directive 2004-038, this routine should not be modified""."
^XTMP("XPDT",7564,"RTN","XUSTERM",4,0)="LKUP N DIRUT,DIC,DIR,XUDA,DA"
^XTMP("XPDT",7564,"RTN","XUSTERM",5,0)=" S DIC=200,DIC(""S"")=""I $L($P(^(0),U,3))"",DIC(0)=""AEQMZ"",DIC(""A"")=""Select USER to be deactivated: """
^XTMP("XPDT",7564,"RTN","XUSTERM",6,0)=" D ^DIC K DIC G END:Y<0 S XUDA=+Y"
^XTMP("XPDT",7564,"RTN","XUSTERM",7,0)=" D INQ Q:$D(DIRUT)"
^XTMP("XPDT",7564,"RTN","XUSTERM",8,0)=" S DA=XUDA,DIE=200,DR=""[""_$$GET^XUPARAM(""XUSERDEACT"",""N"")_""]"" D GET,XUDIE^XUS5"
^XTMP("XPDT",7564,"RTN","XUSTERM",9,0)=" S XUDT=$P(^VA(200,DA,0),U,11),XUACT=XUDT&(XUDT>DT) G END:'XUDT"
^XTMP("XPDT",7564,"RTN","XUSTERM",10,0)=" G:XUACT WHEN G NOW"
^XTMP("XPDT",7564,"RTN","XUSTERM",11,0)=" ;"
^XTMP("XPDT",7564,"RTN","XUSTERM",12,0)="WHEN W !!,XUNAM,"" will be deactivated on date specified."""
^XTMP("XPDT",7564,"RTN","XUSTERM",13,0)=" S ZTDTH=XUDT,ZTRTN=""DQ1^XUSTERM1"",ZTDESC=""DEACTIVATE USER"",ZTSAVE(""XUDA"")="""",ZTIO="""" D ^%ZTLOAD"
^XTMP("XPDT",7564,"RTN","XUSTERM",14,0)=" G END"
^XTMP("XPDT",7564,"RTN","XUSTERM",15,0)=" ;"
^XTMP("XPDT",7564,"RTN","XUSTERM",16,0)="NOW S DIR(""A"")=XUNAM_"" will be deactivated now.  Do you wish to proceed"",DIR(""B"")=""YES"",DIR(""??"")=""XUUSER-DEACT"",DIR(0)=""Y"""
^XTMP("XPDT",7564,"RTN","XUSTERM",17,0)=" D ^DIR I ""Yy""'[$E(X_U) S XUDT=$$NOW^XLFDT G WHEN"
^XTMP("XPDT",7564,"RTN","XUSTERM",18,0)=" W ! S XUVE=1 D ACT"
^XTMP("XPDT",7564,"RTN","XUSTERM",19,0)=" G END"
^XTMP("XPDT",7564,"RTN","XUSTERM",20,0)=" ;"
^XTMP("XPDT",7564,"RTN","XUSTERM",21,0)="INQ ;Ask to show User Inquiry"
^XTMP("XPDT",7564,"RTN","XUSTERM",22,0)=" N DIR,DIC,FLDS,BY,FR,TO,Y,L"
^XTMP("XPDT",7564,"RTN","XUSTERM",23,0)=" S DIR(0)=""Y"",DIR(""A"")=""View/Print User Inquiry Data"",DIR(""B"")=""Yes"" D ^DIR Q:$D(DIRUT)!('Y)"
^XTMP("XPDT",7564,"RTN","XUSTERM",24,0)=" S L=0,DIC=200,FLDS=""[XUSERINQ]"",BY=""NUMBER"",(TO,FR)=XUDA D EN1^DIP K DIC"
^XTMP("XPDT",7564,"RTN","XUSTERM",25,0)=" K DIR S DIR(0)=""E"" D ^DIR"
^XTMP("XPDT",7564,"RTN","XUSTERM",26,0)=" Q"
^XTMP("XPDT",7564,"RTN","XUSTERM",27,0)=" ;"
^XTMP("XPDT",7564,"RTN","XUSTERM",28,0)="GET ;XUGRP=mail group, XUKEY=keys, XUSUR=mail surrogates, XUJ=# baskets, XUK=# mail msg, XUIN=# in-basket msg"
^XTMP("XPDT",7564,"RTN","XUSTERM",29,0)=" ;XUTX1, XUTX2 used in edit templates"
^XTMP("XPDT",7564,"RTN","XUSTERM",30,0)=" K XUGRP,XUKEY,XUSUR,XUTX1,XUTX2 N %,XU10,XU11,XU20,XU21,XU30,XU31"
^XTMP("XPDT",7564,"RTN","XUSTERM",31,0)=" S (XU10,XU20)=0,(XU11,XU21,XU31)="""""
^XTMP("XPDT",7564,"RTN","XUSTERM",32,0)=" S DA=XUDA,XUNAM=$P(^VA(200,XUDA,0),U,1)"
^XTMP("XPDT",7564,"RTN","XUSTERM",33,0)=" F XUI=0:0 S XUI=$O(^XMB(3.8,""AB"",XUDA,XUI)) Q:XUI'>0  D  ;Mail groups"
^XTMP("XPDT",7564,"RTN","XUSTERM",34,0)=" . S XUK=^XMB(3.8,XUI,0) S:'$L($P(XUK,U,2)) $P(XUK,U,2)=""PU"""
^XTMP("XPDT",7564,"RTN","XUSTERM",35,0)=" . S XUGRP(XUI)=$P(XUK,U,1,2)_U_$S('$D(^XMB(3.8,XUI,3)):0,1:^(3)=XUDA)"
^XTMP("XPDT",7564,"RTN","XUSTERM",36,0)=" . S XU10=XU10+1 S:$L(XU11)<70 XU11=XU11_"",""_$P(XUK,U)"
^XTMP("XPDT",7564,"RTN","XUSTERM",37,0)=" F XUI=0:0 S XUI=$O(^VA(200,XUDA,51,XUI)) Q:XUI'>0  D  ;Get keys"
^XTMP("XPDT",7564,"RTN","XUSTERM",38,0)=" . S %=$G(^DIC(19.1,XUI,0)),XU20=XU20+1"
^XTMP("XPDT",7564,"RTN","XUSTERM",39,0)=" . S:$L(XU21)<70 XU21=XU21_"",""_$P(%,U)"
^XTMP("XPDT",7564,"RTN","XUSTERM",40,0)=" . Q:$P(%,U,4)=""y""  ;Don't count keep at terminate keys"
^XTMP("XPDT",7564,"RTN","XUSTERM",41,0)=" . S XUKEY(XUI)="""""
^XTMP("XPDT",7564,"RTN","XUSTERM",42,0)=" F XUI=0:0 S XUI=$O(^XMB(3.7,""AB"",XUDA,XUI)) Q:XUI'>0  D"
^XTMP("XPDT",7564,"RTN","XUSTERM",43,0)=" . S XUSUR(XUI)="""" S:$L(XU31)<70 XU31=XU31_"",""_$P(^VA(200,XUI,0),U)"
^XTMP("XPDT",7564,"RTN","XUSTERM",44,0)=" S (XUJ,XUK,XUIN,XUNUM)=0"
^XTMP("XPDT",7564,"RTN","XUSTERM",45,0)=" F I=.9:0 S I=$O(^XMB(3.7,XUDA,2,I)) Q:I'>0  D"
^XTMP("XPDT",7564,"RTN","XUSTERM",46,0)=" . S XUJ=XUJ+1,XUNUM=$P($G(^XMB(3.7,XUDA,2,I,1,0)),U,4)"
^XTMP("XPDT",7564,"RTN","XUSTERM",47,0)=" . S:XUNUM>0 XUK=XUK+XUNUM S:I=1 XUIN=XUNUM"
^XTMP("XPDT",7564,"RTN","XUSTERM",48,0)=" . Q"
^XTMP("XPDT",7564,"RTN","XUSTERM",49,0)=" S XUTX1(1)=""User has ""_XUK_"" messages in ""_XUJ_"" baskets, Member of ""_XU10_"" Mail Groups."""
^XTMP("XPDT",7564,"RTN","XUSTERM",50,0)=" S:XU10 XUTX1(2)=""Mail Groups: ""_$E(XU11,2,80) S:$L(XU31) XUTX1(3)=""Surrogate for: ""_$E(XU31,2,80)"
^XTMP("XPDT",7564,"RTN","XUSTERM",51,0)=" S XUTX2(1)=""User has ""_XU20_"" keys"" S:XU20 XUTX2(2)=$E(XU21,2,80)"
^XTMP("XPDT",7564,"RTN","XUSTERM",52,0)=" S XUEMP='($D(XUSUR)!$D(XUKEY)!$D(XUGRP)!XUJ!XUK!XUIN!$L($P(^VA(200,XUDA,0),U,3)))"
^XTMP("XPDT",7564,"RTN","XUSTERM",53,0)=" Q"
^XTMP("XPDT",7564,"RTN","XUSTERM",54,0)="ACT ;First let others clean-up, Then do our part."
^XTMP("XPDT",7564,"RTN","XUSTERM",55,0)=" ;D ^XUSTERM2 ;Cleanup by other packages."
^XTMP("XPDT",7564,"RTN","XUSTERM",56,0)=" N DIC,DA,DIE,DR"
^XTMP("XPDT",7564,"RTN","XUSTERM",57,0)=" L +^VA(200,XUDA,0):6"
^XTMP("XPDT",7564,"RTN","XUSTERM",58,0)=" ;Delete some fields first."
^XTMP("XPDT",7564,"RTN","XUSTERM",59,0)=" ;Access;Verify;PAC;Last signon;SMD delegate;electronic signature,Primary menu,Hinq Employee #"
^XTMP("XPDT",7564,"RTN","XUSTERM",60,0)=" S DIE=200,DA=XUDA,DR=""2///@;11///@;14///@;1.1///@;19///@;19.2///@;20.4///@;201///@;14.9///@"" D ^DIE"
^XTMP("XPDT",7564,"RTN","XUSTERM",61,0)=" L -^VA(200,XUDA,0)"
^XTMP("XPDT",7564,"RTN","XUSTERM",62,0)=" D DEQUE^XUSERP(XUDA,3) ;Cleanup by other packages."
^XTMP("XPDT",7564,"RTN","XUSTERM",63,0)=" ;"
^XTMP("XPDT",7564,"RTN","XUSTERM",64,0)=" K DIC S DA=XUDA,XUJ=^VA(200,XUDA,0),XUNAM=$P(XUJ,U,1),XUACT(19)=$S($D(^VA(200,XUDA,19)):^(19),1:"""") F XUI=5,6,10 S XUACT(XUI)=$P(XUJ,U,XUI)"
^XTMP("XPDT",7564,"RTN","XUSTERM",65,0)="ACT1 K ^DISV(XUDA) ; WARNING: This only gets ^DISV entries on current CPU"
^XTMP("XPDT",7564,"RTN","XUSTERM",66,0)=" ;keys"
^XTMP("XPDT",7564,"RTN","XUSTERM",67,0)=" I XUACT(6)'=""n"" F XUI=0:0 S XUI=$O(^VA(200,XUDA,51,XUI)) Q:XUI'>0  I $P($G(^DIC(19.1,XUI,0)),U,4)'=""y"" S DA=XUI,DA(1)=XUDA,DIK=""^VA(200,XUDA,51,"" D ^DIK W:XUVE ""..."""
^XTMP("XPDT",7564,"RTN","XUSTERM",68,0)=" ;delegated keys"
^XTMP("XPDT",7564,"RTN","XUSTERM",69,0)=" I XUACT(6)'=""n"" F XUI=0:0 S XUI=$O(^VA(200,XUDA,52,XUI)) Q:XUI'>0  S DA=XUI,DA(1)=XUDA,DIK=""^VA(200,XUDA,52,"" D ^DIK W:XUVE ""..."""
^XTMP("XPDT",7564,"RTN","XUSTERM",70,0)=" ;Delegated options"
^XTMP("XPDT",7564,"RTN","XUSTERM",71,0)=" S DIK=""^VA(200,XUDA,19.5,"",DA(1)=XUDA F XUI=0:0 S XUI=$O(^VA(200,XUDA,19.5,XUI)) Q:XUI'>0  S DA=XUI D ^DIK"
^XTMP("XPDT",7564,"RTN","XUSTERM",72,0)=" ;Menu templates"
^XTMP("XPDT",7564,"RTN","XUSTERM",73,0)=" S DIK=""^VA(200,XUDA,19.8,"",DA(1)=XUDA F XUI=0:0 S XUI=$O(^VA(200,XUDA,19.8,XUI)) Q:XUI'>0  S DA=XUI D ^DIK"
^XTMP("XPDT",7564,"RTN","XUSTERM",74,0)=" ;Secondary Menus"
^XTMP("XPDT",7564,"RTN","XUSTERM",75,0)=" S DIK=""^VA(200,XUDA,203,"",DA(1)=XUDA F XUI=0:0 S XUI=$O(^VA(200,XUDA,203,XUI)) Q:XUI'>0  S DA=XUI D ^DIK"
^XTMP("XPDT",7564,"RTN","XUSTERM",76,0)=" S DA=0,DA(1)=XUDA D D2^XUFILE1 ;Remove all access to files."
^XTMP("XPDT",7564,"RTN","XUSTERM",77,0)=" ;Terminate Person Class"
^XTMP("XPDT",7564,"RTN","XUSTERM",78,0)=" D TERM^XUA4A72(XUDA,XUDT)"
^XTMP("XPDT",7564,"RTN","XUSTERM",79,0)=" ;Remove all parameters for the user."
^XTMP("XPDT",7564,"RTN","XUSTERM",80,0)=" D DELUSR^XPAR3(XUDA)"
^XTMP("XPDT",7564,"RTN","XUSTERM",81,0)=" ;"
^XTMP("XPDT",7564,"RTN","XUSTERM",82,0)="ACT2 ;XUACT(5) All Mail access,  Mail groups"
^XTMP("XPDT",7564,"RTN","XUSTERM",83,0)=" D MAIL"
^XTMP("XPDT",7564,"RTN","XUSTERM",84,0)=" D SEND^XUSTERM1"
^XTMP("XPDT",7564,"RTN","XUSTERM",85,0)=" W:XUVE ""... DONE"""
^XTMP("XPDT",7564,"RTN","XUSTERM",86,0)=" Q"
^XTMP("XPDT",7564,"RTN","XUSTERM",87,0)=" ;"
^XTMP("XPDT",7564,"RTN","XUSTERM",88,0)="END K C,D,D0,DI,DR,DIC,DIE,DA,DIR,XUEMP,XUDA,XUI,XUJ,XUK,XUACT,XUKEY,XUGRP,XUSUR,XUNAM,XUF,XUDT,XUIN,DIC,XUDB,XUDC,XUDP,XUGP,XUNUM,XUVE,Y"
^XTMP("XPDT",7564,"RTN","XUSTERM",89,0)=" K XUTX1,XUTX2,DIRUT,DIR"
^XTMP("XPDT",7564,"RTN","XUSTERM",90,0)=" Q"
^XTMP("XPDT",7564,"RTN","XUSTERM",91,0)="MAIL ;Remove mail access"
^XTMP("XPDT",7564,"RTN","XUSTERM",92,0)=" I XUACT(5)'=""n"" D TERMINAT^XMUTERM1(XUDA)"
^XTMP("XPDT",7564,"RTN","XUSTERM",93,0)=" Q"
^XTMP("XPDT",7564,"VER")="8.0^22.0"
^XTMP("XPDT",7565)="1"
^XTMP("XPDT",7565,"BLD",1205,0)="XU*8.0*520^KERNEL^0^3090225^y"
^XTMP("XPDT",7565,"BLD",1205,1,0)="^^3^3^3090107^"
^XTMP("XPDT",7565,"BLD",1205,1,1,0)="Please see the patch description on FORUM, in the National"
^XTMP("XPDT",7565,"BLD",1205,1,2,0)=" Patch Module."
^XTMP("XPDT",7565,"BLD",1205,1,3,0)=""
^XTMP("XPDT",7565,"BLD",1205,4,0)="^9.64PA^^"
^XTMP("XPDT",7565,"BLD",1205,6)="^424"
^XTMP("XPDT",7565,"BLD",1205,6.3)="5"
^XTMP("XPDT",7565,"BLD",1205,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7565,"BLD",1205,"KRN",.4,0)=".4"
^XTMP("XPDT",7565,"BLD",1205,"KRN",.401,0)=".401"
^XTMP("XPDT",7565,"BLD",1205,"KRN",.402,0)=".402"
^XTMP("XPDT",7565,"BLD",1205,"KRN",.403,0)=".403"
^XTMP("XPDT",7565,"BLD",1205,"KRN",.5,0)=".5"
^XTMP("XPDT",7565,"BLD",1205,"KRN",.84,0)=".84"
^XTMP("XPDT",7565,"BLD",1205,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7565,"BLD",1205,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7565,"BLD",1205,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7565,"BLD",1205,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7565,"BLD",1205,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7565,"BLD",1205,"KRN",9.8,"NM",1,0)="XQOO^^0^B49167293"
^XTMP("XPDT",7565,"BLD",1205,"KRN",9.8,"NM","B","XQOO",1)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN",19,0)="19"
^XTMP("XPDT",7565,"BLD",1205,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7565,"BLD",1205,"KRN",101,0)="101"
^XTMP("XPDT",7565,"BLD",1205,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7565,"BLD",1205,"KRN",771,0)="771"
^XTMP("XPDT",7565,"BLD",1205,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7565,"BLD",1205,"KRN",870,0)="870"
^XTMP("XPDT",7565,"BLD",1205,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7565,"BLD",1205,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7565,"BLD",1205,"KRN",8994,0)="8994"
^XTMP("XPDT",7565,"BLD",1205,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",.4,.4)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",.401,.401)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",.402,.402)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",.403,.403)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",.5,.5)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",.84,.84)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",19,19)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",101,101)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",771,771)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",870,870)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",8994,8994)=""
^XTMP("XPDT",7565,"BLD",1205,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7565,"BLD",1205,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7565,"BLD",1205,"QUES",0)="^9.62^^"
^XTMP("XPDT",7565,"BLD",1205,"REQB",0)="^9.611^^"
^XTMP("XPDT",7565,"MBREQ")="0"
^XTMP("XPDT",7565,"PKG",3,-1)="1^1"
^XTMP("XPDT",7565,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7565,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7565,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7565,"PKG",3,22,1,0)="8.0^3080616^3080616^6"
^XTMP("XPDT",7565,"PKG",3,22,1,"PAH",1,0)="520^3090225"
^XTMP("XPDT",7565,"PKG",3,22,1,"PAH",1,1,0)="^^3^3^3090225"
^XTMP("XPDT",7565,"PKG",3,22,1,"PAH",1,1,1,0)="Please see the patch description on FORUM, in the National"
^XTMP("XPDT",7565,"PKG",3,22,1,"PAH",1,1,2,0)=" Patch Module."
^XTMP("XPDT",7565,"PKG",3,22,1,"PAH",1,1,3,0)=""
^XTMP("XPDT",7565,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7565,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7565,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7565,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7565,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7565,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7565,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7565,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7565,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7565,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7565,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7565,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7565,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7565,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7565,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7565,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7565,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7565,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7565,"QUES","XPM1","B")=""
^XTMP("XPDT",7565,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7565,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7565,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7565,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7565,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7565,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7565,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7565,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7565,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7565,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7565,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7565,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7565,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7565,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7565,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7565,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7565,"RTN")="1"
^XTMP("XPDT",7565,"RTN","XQOO")="0^1^B49167293^B47252063"
^XTMP("XPDT",7565,"RTN","XQOO",1,0)="XQOO ;SEATTLE/LUKE - Out Of Order, Man ;9/13/96  09:21"
^XTMP("XPDT",7565,"RTN","XQOO",2,0)=" ;;8.0;KERNEL;**10,21,47,520**;Jul 03, 1995;Build 5"
^XTMP("XPDT",7565,"RTN","XQOO",3,0)=" ;Per VHA Directive  2004-038, this routine should not be modified."
^XTMP("XPDT",7565,"RTN","XQOO",4,0)="INIT(XQSET) ;Call for Out-of-order set creation, called by KIDS"
^XTMP("XPDT",7565,"RTN","XQOO",5,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",6,0)=" ;The variable XQSET should be null if this is the first pass"
^XTMP("XPDT",7565,"RTN","XQOO",7,0)=" ;or if KIDS thinks the user wants a new set of options"
^XTMP("XPDT",7565,"RTN","XQOO",8,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",9,0)=" S XQINI="""",XQK=0 ;XQINI used as a flag to see if it's KIDS calling"
^XTMP("XPDT",7565,"RTN","XQOO",10,0)=" I XQSET]"""" S:'$D(^XTMP(""XQOO"",XQSET,0)) XQSET=""^"""
^XTMP("XPDT",7565,"RTN","XQOO",11,0)=" I XQSET=""^"" G OUT"
^XTMP("XPDT",7565,"RTN","XQOO",12,0)=" I XQSET]"""" S XQMESS=$P(^XTMP(""XQOO"",XQSET,0),U) G ASK1"
^XTMP("XPDT",7565,"RTN","XQOO",13,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",14,0)="EN ;Entry point for Define Out Of Order Options Set option"
^XTMP("XPDT",7565,"RTN","XQOO",15,0)=" S XQK=0,U=""^"",XQSET=U"
^XTMP("XPDT",7565,"RTN","XQOO",16,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",17,0)="NAME ;Get name for this option set"
^XTMP("XPDT",7565,"RTN","XQOO",18,0)=" W !!,""Enter a short name for this set of options and or protocols: "" R XQSET:DTIME S:'$T XQSET=U G:XQSET=U OUT"
^XTMP("XPDT",7565,"RTN","XQOO",19,0)=" I XQSET=""?"" W !!,""Enter a name of 20 characters or less for this set, '^' to quit, or '??' for help"" G NAME"
^XTMP("XPDT",7565,"RTN","XQOO",20,0)=" I XQSET[""??"" S XQH=""XQOO-NAME"" D EN^XQH G NAME"
^XTMP("XPDT",7565,"RTN","XQOO",21,0)=" I XQSET=""""!($L(XQSET)>20) W !!,""Out-of-order sets must be named with 20 or less characters.  Enter '^' to quit."" G NAME"
^XTMP("XPDT",7565,"RTN","XQOO",22,0)=" I $D(^XTMP(""XQOO"",XQSET,0)) D  G:$D(DIRUT) OUT G:Y=0 NAME G ASK1"
^XTMP("XPDT",7565,"RTN","XQOO",23,0)=" .S XQMESS=$P(^XTMP(""XQOO"",XQSET,0),U)"
^XTMP("XPDT",7565,"RTN","XQOO",24,0)=" .W !!,""WARNING: The Out-of-order set '"",XQSET,""' already exists."",!"
^XTMP("XPDT",7565,"RTN","XQOO",25,0)=" .S DIR(""A"")=""Do you want to modify it? (Y/N) "" S DIR(0)=""Y"",DIR(""B"")=""YES"" D ^DIR K DIR"
^XTMP("XPDT",7565,"RTN","XQOO",26,0)=" .Q"
^XTMP("XPDT",7565,"RTN","XQOO",27,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",28,0)="MESS ;Get the Out Of Order Message"
^XTMP("XPDT",7565,"RTN","XQOO",29,0)=" R !!,""What should the Out Of Order message text be? :"",XQMESS:DTIME S:'$T XQMESS=U G:XQMESS=U OUT"
^XTMP("XPDT",7565,"RTN","XQOO",30,0)=" I XQMESS=""?"" W !!,""This is the message that will be shown with the options/protocols"",!,""that are made out of order. For instance, """"Laboratory install in progress"""""" G MESS"
^XTMP("XPDT",7565,"RTN","XQOO",31,0)=" I XQMESS[""??"" S XQH=""XQOO-MESS"" D EN^XQH G MESS"
^XTMP("XPDT",7565,"RTN","XQOO",32,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",33,0)="ASK1 S XQFIL=19"
^XTMP("XPDT",7565,"RTN","XQOO",34,0)="ASK ;Get options to mark"
^XTMP("XPDT",7565,"RTN","XQOO",35,0)=" S (XQ,XQN)="""""
^XTMP("XPDT",7565,"RTN","XQOO",36,0)=" W !!,""Enter ""_$S(XQFIL=19:""options"",1:""protocols"")_"" you wish to mark as 'Out Of Order': """
^XTMP("XPDT",7565,"RTN","XQOO",37,0)=" R XQ:DTIME S:'$T XQ=U G:XQ=U OUT G:XQ="""" SET"
^XTMP("XPDT",7565,"RTN","XQOO",38,0)=" I XQ=""?"" D  G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",39,0)=" .W !!?5,""Enter ""_$S(XQFIL=19:""an option"",1:""a protocol"")_"" name,"""
^XTMP("XPDT",7565,"RTN","XQOO",40,0)=" .W !?5,""a name preceded by a minus sign to remove ""_$S(XQFIL=19:""an option,"",1:""a protocol,"")"
^XTMP("XPDT",7565,"RTN","XQOO",41,0)=" .W !?5,$S(XQFIL=19:""'^PR'"",1:""'^OP'"")_"" to switch to ""_$S(XQFIL=19:""protocols,"",1:""options,"")"
^XTMP("XPDT",7565,"RTN","XQOO",42,0)=" .W !?5,""an uparrow (that is '^') to quit,"""
^XTMP("XPDT",7565,"RTN","XQOO",43,0)=" .W !?5,""or '??' for more help."""
^XTMP("XPDT",7565,"RTN","XQOO",44,0)=" .Q"
^XTMP("XPDT",7565,"RTN","XQOO",45,0)=" I XQ[""??"" S XQH=""XQOO"" D:XQ=""??"" EN^XQH D:XQ=""???"" LIST D:XQ=""????"" LSTFIL S XQH=""XQOO-MAIN"" D:XQ=""?????"" EN^XQH G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",46,0)=" I $E(XQ,1,3)=""^OP""!($E(XQ,1,3)=""^op"") S XQFIL=19,XQSWTCH="""" G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",47,0)=" I $E(XQ,1,3)=""^PR""!($E(XQ,1,3)=""^pr"") S XQFIL=101,XQSWTCH="""" G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",48,0)=" S XQDEL=0 I $E(XQ,1)=""-"" S XQDEL=1,XQ=$E(XQ,2,99)"
^XTMP("XPDT",7565,"RTN","XQOO",49,0)=" I XQ=""*"",XQDEL K ^XTMP(""XQOO"",XQSET,XQFIL) W !,"" All ""_$S(XQFIL=19:""options"",1:""protocols"")_"" removed.  Start again or '^' to quit. "" G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",50,0)=" I XQ=""*"" S XQSTART=1,XQEND=""ZZZZZ"" D FIND G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",51,0)=" I XQ?.E1""*"" S XQSTART=$E(XQ,1,$L(XQ)-1),XQEND=XQSTART_$C(127) D FIND G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",52,0)=" ;Get a range of options allowing for name with hyphens in them"
^XTMP("XPDT",7565,"RTN","XQOO",53,0)=" I XQ?1E.E1""-""1E.E S XQRNG=0 D  G:'XQRNG ASK"
^XTMP("XPDT",7565,"RTN","XQOO",54,0)=" .;Name has hyphen, echo back the name and quit"
^XTMP("XPDT",7565,"RTN","XQOO",55,0)=" .S X=XQ,DIC=XQFIL,DIC(0)=""EZ"" D ^DIC I Y>0 S XQ=$P(Y,U,2),XQRNG=1 Q"
^XTMP("XPDT",7565,"RTN","XQOO",56,0)=" .;It is a range, build prompt to verify range"
^XTMP("XPDT",7565,"RTN","XQOO",57,0)=" .W ! K DIR S DIR(""A"")=""Do mean the ""_$S(XQFIL=19:""options"",1:""protocols"")_"" from ""_$P(XQ,""-"")_"" to ""_$P(XQ,""-"",2)_""? (Y/N)"",DIR(0)=""YA"" D ^DIR K DIR I Y S (XQN,XQSTART)=$P(XQ,""-"",1),XQEND=$P(XQ,""-"",2) D FIND"
^XTMP("XPDT",7565,"RTN","XQOO",58,0)=" .Q"
^XTMP("XPDT",7565,"RTN","XQOO",59,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",60,0)=" I XQ'?1E.E1""-""1E.E S X=XQ,DIC=XQFIL,DIC(0)=""MEZ"" D ^DIC S:Y'<0 XQ=$P(Y,U,2) I Y<0 W "" ??"",*7 G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",61,0)=" I XQDEL K ^XTMP(""XQOO"",XQSET,XQFIL,+Y) G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",62,0)=" S:$E(Y(0),1,4)'=""XQOO"" ^XTMP(""XQOO"",XQSET,XQFIL,+Y)=$P(Y(0),U)_U_$P(Y(0),U,2) G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",63,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",64,0)="FIND ;Find first option in wildcard list"
^XTMP("XPDT",7565,"RTN","XQOO",65,0)=" S XQN="""" S:$L(XQSTART)>2 XQN=$E(XQSTART,1,$L(XQSTART)-1)"
^XTMP("XPDT",7565,"RTN","XQOO",66,0)=" I XQFIL=19 F XQI=0:0 S XQN=$O(^DIC(XQFIL,""B"",XQN)) Q:XQN=""""!($E(XQN,1,$L(XQSTART))=XQSTART)"
^XTMP("XPDT",7565,"RTN","XQOO",67,0)=" E  F XQI=0:0 S XQN=$O(^ORD(101,""B"",XQN)) Q:XQN=""""!($E(XQN,1,$L(XQSTART))=XQSTART)"
^XTMP("XPDT",7565,"RTN","XQOO",68,0)=" I XQN="""" W !,"" No such "",$S(XQFIL=19:""option(s)."",1:""protocol(s)."") Q"
^XTMP("XPDT",7565,"RTN","XQOO",69,0)=" S XQSTART=XQN"
^XTMP("XPDT",7565,"RTN","XQOO",70,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",71,0)="FINDR I XQFIL=19 S XQON=$O(^DIC(XQFIL,""B"",XQN,0)),XQON0=^DIC(XQFIL,+XQON,0)"
^XTMP("XPDT",7565,"RTN","XQOO",72,0)=" E  S XQON=$O(^ORD(XQFIL,""B"",XQN,0)),XQON0=^ORD(XQFIL,+XQON,0)"
^XTMP("XPDT",7565,"RTN","XQOO",73,0)=" I XQDEL D DELET Q"
^XTMP("XPDT",7565,"RTN","XQOO",74,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",75,0)="GET ;Get the first option selected and put it in ^XTMP"
^XTMP("XPDT",7565,"RTN","XQOO",76,0)=" S XQN=XQSTART I $E(XQON,1,4)'=""XQOO"" S ^XTMP(""XQOO"",XQSET,XQFIL,+XQON)=$P(XQON0,U)_U_$P(XQON0,U,2),XQK=XQK+1"
^XTMP("XPDT",7565,"RTN","XQOO",77,0)=" S DIC=XQFIL,DIC(0)=""MZ"""
^XTMP("XPDT",7565,"RTN","XQOO",78,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",79,0)="NEXT ;Find the rest of the options in this range and do likewise"
^XTMP("XPDT",7565,"RTN","XQOO",80,0)=" I XQFIL=19 F  Q:XQN=XQEND  S XQN=$O(^DIC(XQFIL,""B"",XQN)) Q:XQN=""""!(XQN]XQEND)  S XQON=$O(^DIC(XQFIL,""B"",XQN,0)),XQON0=^DIC(XQFIL,+XQON,0) I $E(XQON,1,4)'=""XQOO"" S ^XTMP(""XQOO"",XQSET,XQFIL,+XQON)=$P(XQON0,U)_U_$P(XQON0,U,2),XQK=XQK+1"
^XTMP("XPDT",7565,"RTN","XQOO",81,0)=" E  F  Q:XQN=XQEND  S XQN=$O(^ORD(XQFIL,""B"",XQN)) Q:XQN=""""!(XQN]XQEND)  S XQON=$O(^ORD(XQFIL,""B"",XQN,0)),XQON0=^ORD(XQFIL,+XQON,0) I $E(XQON,1,4)'=""XQOO"" S ^XTMP(""XQOO"",XQSET,XQFIL,+XQON)=$P(XQON0,U)_U_$P(XQON0,U,2),XQK=XQK+1"
^XTMP("XPDT",7565,"RTN","XQOO",82,0)=" Q"
^XTMP("XPDT",7565,"RTN","XQOO",83,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",84,0)="DELET ;Delete option(s) from the list in ^XTMP"
^XTMP("XPDT",7565,"RTN","XQOO",85,0)=" ;W !,XQON,""  "",XQSTART,""  "",XQDEL"
^XTMP("XPDT",7565,"RTN","XQOO",86,0)=" S XQN=XQSTART,XQDEL=0"
^XTMP("XPDT",7565,"RTN","XQOO",87,0)=" I XQFIL=19 F  K ^XTMP(""XQOO"",XQSET,XQFIL,+XQON) S XQN=$O(^DIC(XQFIL,""B"",XQN)),XQX=XQK-1 Q:XQN=""""!(XQN]XQEND)  S XQON=$O(^DIC(XQFIL,""B"",XQN,0))"
^XTMP("XPDT",7565,"RTN","XQOO",88,0)=" E  F  K ^XTMP(""XQOO"",XQSET,XQFIL,+XQON) S XQN=$O(^ORD(XQFIL,""B"",XQN)),XQX=XQK-1 Q:XQN=""""!(XQN]XQEND)  S XQON=$O(^ORD(XQFIL,""B"",XQN,0))"
^XTMP("XPDT",7565,"RTN","XQOO",89,0)=" Q"
^XTMP("XPDT",7565,"RTN","XQOO",90,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",91,0)="REMOV R !!,""Remove all options previously selected? "",XQ:DTIME S:'$T XQ=U G:XQ[U OUT I XQ[""N""!(XQ[""n"") W !!,""OK, you may continue."" G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",92,0)=" K ^XTMP(""XQOO"",XQSET)"
^XTMP("XPDT",7565,"RTN","XQOO",93,0)=" Q"
^XTMP("XPDT",7565,"RTN","XQOO",94,0)="LSTFIL ;Show Option File"
^XTMP("XPDT",7565,"RTN","XQOO",95,0)=" N XQE,XQR,XQS"
^XTMP("XPDT",7565,"RTN","XQOO",96,0)=" D RANGE^XQOO2(.XQS,.XQE,.XQR) I XQR D BXREF^XQOO2(XQS,XQE)"
^XTMP("XPDT",7565,"RTN","XQOO",97,0)=" Q"
^XTMP("XPDT",7565,"RTN","XQOO",98,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",99,0)="LIST ;List users and options selected so far."
^XTMP("XPDT",7565,"RTN","XQOO",100,0)=" W @IOF S (XQT,XQM)=0"
^XTMP("XPDT",7565,"RTN","XQOO",101,0)=" F XQFIL0=19,101 D"
^XTMP("XPDT",7565,"RTN","XQOO",102,0)=" .S XQT=0,XQN=0,XQN=$O(^XTMP(""XQOO"",XQSET,XQFIL0,XQN)) I XQN="""" W !!,""No ""_$S(XQFIL0=19:""menu options"",1:""protocols"")_"" selected yet"" Q"
^XTMP("XPDT",7565,"RTN","XQOO",103,0)=" .W !!,""You will place Out Of Order the following ""_$S(XQFIL0=19:""options:"",1:""protocols:""),! F XQI=0:0 D:$Y+3>IOSL WAIT Q:XQ=U  W !,$P(^XTMP(""XQOO"",XQSET,XQFIL0,XQN),U,2)_""   [""_$P(^(XQN),U)_""]   (IEN = ""_XQN_"")"" S XQN=$O(^(XQN)) Q:XQN="""""
^XTMP("XPDT",7565,"RTN","XQOO",104,0)=" .Q"
^XTMP("XPDT",7565,"RTN","XQOO",105,0)=" Q"
^XTMP("XPDT",7565,"RTN","XQOO",106,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",107,0)="WAIT ;Skip to the head of the next page"
^XTMP("XPDT",7565,"RTN","XQOO",108,0)=" I 1 S XQ="""" R:IOST[""C-"" !!,""Press RETURN to continue, or '^' to quit."",XQ:DTIME S:'$T XQ=U W @IOF"
^XTMP("XPDT",7565,"RTN","XQOO",109,0)=" Q"
^XTMP("XPDT",7565,"RTN","XQOO",110,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",111,0)="SET ;Set 0th node in ^XTMP global"
^XTMP("XPDT",7565,"RTN","XQOO",112,0)=" I XQFIL=19,'$D(XQSWTCH) S XQFIL=101 G ASK"
^XTMP("XPDT",7565,"RTN","XQOO",113,0)=" D ^XQDATE"
^XTMP("XPDT",7565,"RTN","XQOO",114,0)=" I $D(^XTMP(""XQOO"",XQSET,0)) S XQMESS=$P(^(0),U)"
^XTMP("XPDT",7565,"RTN","XQOO",115,0)=" S ^XTMP(""XQOO"",XQSET,0)=XQMESS_U_%Y_U_$P(^VA(200,DUZ,0),"","")"
^XTMP("XPDT",7565,"RTN","XQOO",116,0)=" S ^XTMP(""XQOO"",0)=DT_U_DT+7"
^XTMP("XPDT",7565,"RTN","XQOO",117,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",118,0)="OUT ;Clean up"
^XTMP("XPDT",7565,"RTN","XQOO",119,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",120,0)=" I '$D(XPDNM),'$D(^XTMP(""XQOO"",XQSET,0)),$D(^XTMP(""XQOO"",XQSET)) D"
^XTMP("XPDT",7565,"RTN","XQOO",121,0)=" .;Temporary Fix: ^ at protocol prompt leaves partial set (no 0th node)"
^XTMP("XPDT",7565,"RTN","XQOO",122,0)=" .S DIR(0)=""Y"",DIR(""B"")=""YES"""
^XTMP("XPDT",7565,"RTN","XQOO",123,0)=" .S DIR(""A"")=""Delete this set of options? (Y/N) """
^XTMP("XPDT",7565,"RTN","XQOO",124,0)=" .D ^DIR"
^XTMP("XPDT",7565,"RTN","XQOO",125,0)=" .I Y K ^XTMP(""XQOO"",XQSET)"
^XTMP("XPDT",7565,"RTN","XQOO",126,0)=" .E  D ^XQDATE S ^XTMP(""XQOO"",XQSET,0)=XQMESS_U_%Y_U_$P(^VA(200,DUZ,0),"",""),^XTMP(""XQOO"",0)=DT_U_DT+7"
^XTMP("XPDT",7565,"RTN","XQOO",127,0)=" .Q"
^XTMP("XPDT",7565,"RTN","XQOO",128,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",129,0)=" I '$D(XPDNM),$D(^XTMP(""XQOO"",XQSET,0)) D"
^XTMP("XPDT",7565,"RTN","XQOO",130,0)=" .S DIR(0)=""Y"",DIR(""B"")=""NO"""
^XTMP("XPDT",7565,"RTN","XQOO",131,0)=" .S DIR(""A"")=""Should I mark these options/protocols out-of-order now? (Y/N) """
^XTMP("XPDT",7565,"RTN","XQOO",132,0)=" .D ^DIR I Y D OFF^XQOO1(XQSET)"
^XTMP("XPDT",7565,"RTN","XQOO",133,0)=" .Q"
^XTMP("XPDT",7565,"RTN","XQOO",134,0)=" ;"
^XTMP("XPDT",7565,"RTN","XQOO",135,0)=" K %,%Y,DIRUT,XQ,XQDEL,XQEND,XQFIL,XQFIL0,XQH,XQI,XQINI,XQK,XQM,XQMESS,XQN,XQON,XQON0,XQRNG,XQSTART,XQSWTCH,XQT,XQX,X,Y"
^XTMP("XPDT",7565,"RTN","XQOO",136,0)=" Q"
^XTMP("XPDT",7565,"VER")="8.0^22.0"
^XTMP("XPDT",7590)="1"
^XTMP("XPDT",7590,"BLD",1212,0)="XU*8.0*494^KERNEL^0^3090407^y"
^XTMP("XPDT",7590,"BLD",1212,1,0)="^^2^2^3090129^"
^XTMP("XPDT",7590,"BLD",1212,1,1,0)="Kernel patch XU*8.0*494; Fix UNDEFINED in XQ83A. Please"
^XTMP("XPDT",7590,"BLD",1212,1,2,0)="refer to the Description in Forum Patch Module for details."
^XTMP("XPDT",7590,"BLD",1212,4,0)="^9.64PA^^"
^XTMP("XPDT",7590,"BLD",1212,6)="^425"
^XTMP("XPDT",7590,"BLD",1212,6.3)="1"
^XTMP("XPDT",7590,"BLD",1212,"ABPKG")="n"
^XTMP("XPDT",7590,"BLD",1212,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7590,"BLD",1212,"KRN",.4,0)=".4"
^XTMP("XPDT",7590,"BLD",1212,"KRN",.401,0)=".401"
^XTMP("XPDT",7590,"BLD",1212,"KRN",.402,0)=".402"
^XTMP("XPDT",7590,"BLD",1212,"KRN",.403,0)=".403"
^XTMP("XPDT",7590,"BLD",1212,"KRN",.5,0)=".5"
^XTMP("XPDT",7590,"BLD",1212,"KRN",.84,0)=".84"
^XTMP("XPDT",7590,"BLD",1212,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7590,"BLD",1212,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7590,"BLD",1212,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7590,"BLD",1212,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7590,"BLD",1212,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7590,"BLD",1212,"KRN",9.8,"NM",1,0)="XQ83A^^0^B28620340"
^XTMP("XPDT",7590,"BLD",1212,"KRN",9.8,"NM","B","XQ83A",1)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN",19,0)="19"
^XTMP("XPDT",7590,"BLD",1212,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7590,"BLD",1212,"KRN",101,0)="101"
^XTMP("XPDT",7590,"BLD",1212,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7590,"BLD",1212,"KRN",771,0)="771"
^XTMP("XPDT",7590,"BLD",1212,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7590,"BLD",1212,"KRN",870,0)="870"
^XTMP("XPDT",7590,"BLD",1212,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7590,"BLD",1212,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7590,"BLD",1212,"KRN",8994,0)="8994"
^XTMP("XPDT",7590,"BLD",1212,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",.4,.4)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",.401,.401)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",.402,.402)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",.403,.403)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",.5,.5)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",.84,.84)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",19,19)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",101,101)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",771,771)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",870,870)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",8994,8994)=""
^XTMP("XPDT",7590,"BLD",1212,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7590,"BLD",1212,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7590,"BLD",1212,"QUES",0)="^9.62^^"
^XTMP("XPDT",7590,"BLD",1212,"REQB",0)="^9.611^^"
^XTMP("XPDT",7590,"MBREQ")="0"
^XTMP("XPDT",7590,"PKG",3,-1)="1^1"
^XTMP("XPDT",7590,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7590,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7590,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7590,"PKG",3,22,1,0)="8.0^3080616^3080616^6"
^XTMP("XPDT",7590,"PKG",3,22,1,"PAH",1,0)="494^3090407"
^XTMP("XPDT",7590,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3090407"
^XTMP("XPDT",7590,"PKG",3,22,1,"PAH",1,1,1,0)="Kernel patch XU*8.0*494; Fix UNDEFINED in XQ83A. Please"
^XTMP("XPDT",7590,"PKG",3,22,1,"PAH",1,1,2,0)="refer to the Description in Forum Patch Module for details."
^XTMP("XPDT",7590,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7590,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7590,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7590,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7590,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7590,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7590,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7590,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7590,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7590,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7590,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7590,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7590,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7590,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7590,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7590,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7590,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7590,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7590,"QUES","XPM1","B")=""
^XTMP("XPDT",7590,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7590,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7590,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7590,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7590,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7590,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7590,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7590,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7590,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7590,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7590,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7590,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7590,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7590,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7590,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7590,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7590,"RTN")="1"
^XTMP("XPDT",7590,"RTN","XQ83A")="0^1^B28620340^B26531678"
^XTMP("XPDT",7590,"RTN","XQ83A",1,0)="XQ83A ;ISC-SF..SEA/JLI,LUKE - MICROSURGERY ON MENU TREES TO ADD A NEW ITEM TO A MENU ;06/26/2000  09:14"
^XTMP("XPDT",7590,"RTN","XQ83A",2,0)=" ;;8.0;KERNEL;**157,494**;Jul 10, 1995;Build 1"
^XTMP("XPDT",7590,"RTN","XQ83A",3,0)=" ;;""Per VHA Directive 2004-038, this routine should not be modified""."
^XTMP("XPDT",7590,"RTN","XQ83A",4,0)="ENTRY ;"
^XTMP("XPDT",7590,"RTN","XQ83A",5,0)=" D TABLE"
^XTMP("XPDT",7590,"RTN","XQ83A",6,0)=" I XQC'=""P"" S A=""P"" F XQJ=0:0 S A=$O(^DIC(19,""AXP"",A)) Q:$E(A)'=""P""  I $D(^(A,U,XQOPM)) L +^DIC(19,""AXP"",A):10 Q:'$T  K ^(A,0) D ADD S ^DIC(19,""AXP"",A,0)=%XQT1 L -^DIC(19,""AXP"",A)"
^XTMP("XPDT",7590,"RTN","XQ83A",7,0)=" K L,M,N,P,R,S,T,XQJ,XQLAST,XQLM,XQLM1,XQNAM,XQNAME,XQNEW,XQOLD,XQP1,XQP2,XQPATH,XQSYN"
^XTMP("XPDT",7590,"RTN","XQ83A",8,0)=" Q"
^XTMP("XPDT",7590,"RTN","XQ83A",9,0)="TABLE ;"
^XTMP("XPDT",7590,"RTN","XQ83A",10,0)=" K ^TMP($J,""NEW""),^(""S2""),^(""PATH"") Q:'$D(^DIC(19,XQOPI,0))"
^XTMP("XPDT",7590,"RTN","XQ83A",11,0)=" S ^TMP($J,""NEW"",1,1)=XQOPI_"","",S2=^DIC(19,XQOPI,0) S:$P(S2,U,3)'="""" $P(S2,U,6)="" OOO "" K SU S:$D(^(""U"")) SU=^(""U"")"
^XTMP("XPDT",7590,"RTN","XQ83A",12,0)=" S XQP="""" F IJ=0:0 S IJ=$O(^DIC(19,XQOPI,3.91,IJ)) Q:IJ'>0  I ($D(^(IJ,0))#2),$P(^(0),U)'="""" S XQP=$S(XQP="""":"""",1:XQP_"","")_$P(^(0),U)_$P(^(0),U,2)"
^XTMP("XPDT",7590,"RTN","XQ83A",13,0)=" S:XQP'="""" $P(S2,U,9)=XQP S ^TMP($J,""S2"",XQOPI)=S2 S:$D(SU) ^(XQOPI,""U"")=SU I XQC=""P"" S XQNEW=XQOPM,XQOLD="""",N=1,S=1 D XPAND"
^XTMP("XPDT",7590,"RTN","XQ83A",14,0)=" F J=0:0 S J=$O(^TMP($J,""NEW"",J)),N=J+1,S=1 Q:J'>0  F K=0:0 S K=$O(^TMP($J,""NEW"",J,K)) Q:K'>0  S XQOLD=^(K),XQNEW=+$P(XQOLD,"","",J) I $D(^DIC(19,XQNEW,10)) D XPAND"
^XTMP("XPDT",7590,"RTN","XQ83A",15,0)=" D PATHS K ^TMP($J,""OLD""),^(""NEW""),^(""S2"")"
^XTMP("XPDT",7590,"RTN","XQ83A",16,0)=" Q"
^XTMP("XPDT",7590,"RTN","XQ83A",17,0)=" ;"
^XTMP("XPDT",7590,"RTN","XQ83A",18,0)="XPAND ; eXPAND option into subtree, if it is a menu"
^XTMP("XPDT",7590,"RTN","XQ83A",19,0)=" F L=0:0 S L=$O(^DIC(19,XQNEW,10,L)) Q:L'>0  S T=+^(L,0),S1=$P(^(0),U,2),S2=$G(^DIC(19,T,0))"
^XTMP("XPDT",7590,"RTN","XQ83A",20,0)=" I S2="""" Q "
^XTMP("XPDT",7590,"RTN","XQ83A",21,0)=" S:$P(S2,U,3)'="""" $P(S2,U,6)="" OOO "" I XQC2'[("",""_T_"","")&(XQOLD'[("",""_T_"","")) D X1"
^XTMP("XPDT",7590,"RTN","XQ83A",22,0)=" K S1,S2"
^XTMP("XPDT",7590,"RTN","XQ83A",23,0)=" Q"
^XTMP("XPDT",7590,"RTN","XQ83A",24,0)=" ;"
^XTMP("XPDT",7590,"RTN","XQ83A",25,0)="CLEAN(XQNEW,L) ;clean broken pointers if found on the sub menu with IEN=XQNEW - P ;494"
^XTMP("XPDT",7590,"RTN","XQ83A",26,0)=" N DA,DIK"
^XTMP("XPDT",7590,"RTN","XQ83A",27,0)=" S DA(1)=XQNEW,DA=L,DIK=""^DIC(19,""_DA(1)_"",""_10_"","""
^XTMP("XPDT",7590,"RTN","XQ83A",28,0)=" D ^DIK"
^XTMP("XPDT",7590,"RTN","XQ83A",29,0)=" Q"
^XTMP("XPDT",7590,"RTN","XQ83A",30,0)=" ;"
^XTMP("XPDT",7590,"RTN","XQ83A",31,0)="X1 ;"
^XTMP("XPDT",7590,"RTN","XQ83A",32,0)=" S ^TMP($J,""NEW"",N,S)=XQOLD_T_"","" S:S1'="""" ^(S,""S"")=S1 S S=S+1 Q:$D(^TMP($J,""S2"",T))  S ^(T)=S2 S:$D(^DIC(19,T,""U"")) ^TMP($J,""S2"",T,""U"")=^(""U"")"
^XTMP("XPDT",7590,"RTN","XQ83A",33,0)=" S XQP="""" I $D(^DIC(19,T,3.91)) F IJ=0:0 S IJ=$O(^DIC(19,T,3.91,IJ)) Q:IJ'>0  I ($D(^(IJ,0))#2),$P(^(0),U,1)'="""" S XQP=$S(XQP="""":"""",1:XQP_"","")_$P(^(0),U,1)_$P(^(0),U,2)"
^XTMP("XPDT",7590,"RTN","XQ83A",34,0)=" I XQP'="""" S $P(^TMP($J,""S2"",T),U,9)=XQP"
^XTMP("XPDT",7590,"RTN","XQ83A",35,0)=" Q"
^XTMP("XPDT",7590,"RTN","XQ83A",36,0)="PATHS ;"
^XTMP("XPDT",7590,"RTN","XQ83A",37,0)=" F I=0:0 S I=$O(^TMP($J,""NEW"",I)) Q:I'>0  F J=0:0 S J=$O(^TMP($J,""NEW"",I,J)) Q:J'>0  S PATH=^(J),SYN=$S($D(^(J,""S"")):^(""S""),1:"""") D PATH1"
^XTMP("XPDT",7590,"RTN","XQ83A",38,0)=" Q"
^XTMP("XPDT",7590,"RTN","XQ83A",39,0)="PATH1 ;"
^XTMP("XPDT",7590,"RTN","XQ83A",40,0)=" S T=$P(PATH,"","",I),NPATH=$P(PATH,"","",1,I-1)_"","",BASE=$S(NPATH'="","":^TMP($J,""PATH"",NPATH),1:"""")"
^XTMP("XPDT",7590,"RTN","XQ83A",41,0)=" S XQK=$P(BASE,U,7),XQE=$P(BASE,U,11),XQP=$P(BASE,U,10),XQF=$P(BASE,U,17)"
^XTMP("XPDT",7590,"RTN","XQ83A",42,0)=" S NEW=^TMP($J,""S2"",T),XQUC=$S($D(^(T,""U"")):^(""U""),1:"""")"
^XTMP("XPDT",7590,"RTN","XQ83A",43,0)=" S XQK1=$P(NEW,U,6),XQE1=$P(NEW,U,10),XQP1=$P(NEW,U,9),XQF1="""" I $P(NEW,U,16),$D(^DIC(19,T,3)) S XQF1=$P(^(3),U)"
^XTMP("XPDT",7590,"RTN","XQ83A",44,0)=" S XQK=$S(XQK'=""""&(XQK1'=""""):XQK_"",""_XQK1,1:XQK_XQK1),XQE=$S(XQE'=""""&(XQE1'=""""):XQE_"",""_XQE1,1:XQE_XQE1),XQP=$S(XQP'=""""&(XQP1'=""""):XQP_"",""_XQP,1:XQP_XQP1),XQF=$S(XQF'=""""&(XQF1'=""""):XQF_"",""_XQF1,1:XQF_XQF1)"
^XTMP("XPDT",7590,"RTN","XQ83A",45,0)=" S ^TMP($J,""PATH"",PATH)=U_$P(NEW,U,1,2)_U_$S($P(NEW,U,3)]"""":1,1:"""")_U_$P(NEW,U,4)_U_PATH_U_XQK_U_$P(NEW,U,7,8)_U_XQP_U_XQE_U_$P(NEW,U,11,15)_U_XQF_U_$P(NEW,U,17,99),^(PATH,""U"")=XQUC,^(""SYN"")=SYN"
^XTMP("XPDT",7590,"RTN","XQ83A",46,0)=" Q"
^XTMP("XPDT",7590,"RTN","XQ83A",47,0)=" ;"
^XTMP("XPDT",7590,"RTN","XQ83A",48,0)="ADD ;"
^XTMP("XPDT",7590,"RTN","XQ83A",49,0)=" Q:'$D(^DIC(19,""AXP"",A,U,XQOPM))  G:$D(^TMP($J,""OLD"",XQOPM)) DOIT S ^TMP($J,""OLD"",XQOPM,1)=^DIC(19,""AXP"",A,U,XQOPM)"
^XTMP("XPDT",7590,"RTN","XQ83A",50,0)=" S N=0 F J=2:1 S N=$O(^DIC(19,""AXP"",A,U,XQOPM,0,N)) Q:N'>0  S P=^(N),$P(L,U,7)=$P(P,U,2),$P(L,U,10,11)=$P(P,U,3,4),$P(L,U,5)=$P(P,U),P=$P(^(N),U),^TMP($J,""OLD"",XQOPM,J)=L F K=1:1:J-1 I $P(^TMP($J,""OLD"",XQOPM,K),U,9)=P K ^(J) S J=J-1 Q"
^XTMP("XPDT",7590,"RTN","XQ83A",51,0)="DOIT K ^TMP($J,""PATH"",(XQOPI_"",""),""SYN"") S XQ83AJ=$O(^DIC(19,XQOPM,10,""B"",XQOPI,0)) Q:XQ83AJ'>0  S XQ83AJ=$P(^DIC(19,XQOPM,10,XQ83AJ,0),U,2) I XQ83AJ'="""" S ^TMP($J,""PATH"",(XQOPI_"",""),""SYN"")=XQ83AJ"
^XTMP("XPDT",7590,"RTN","XQ83A",52,0)=" F XQ83AJ=0:0 S XQ83AJ=$O(^TMP($J,""OLD"",XQOPM,XQ83AJ)) Q:XQ83AJ'>0  S T=^(XQ83AJ) D ADD1"
^XTMP("XPDT",7590,"RTN","XQ83A",53,0)=" Q"
^XTMP("XPDT",7590,"RTN","XQ83A",54,0)=" ;"
^XTMP("XPDT",7590,"RTN","XQ83A",55,0)="ADD1 ;"
^XTMP("XPDT",7590,"RTN","XQ83A",56,0)=" S XQA=$P(T,U,6),XQK=$P(T,U,7),XQP=$P(T,U,10),XQE=$P(T,U,11),XQF=$P(T,U,17)"
^XTMP("XPDT",7590,"RTN","XQ83A",57,0)=" S PATH="""" F K=0:0 S PATH=$O(^TMP($J,""PATH"",PATH)) Q:PATH=""""  S BASE=^(PATH),XQUC=^(PATH,""U""),SYN=$S($D(^(""SYN"")):^(""SYN""),1:"""") D ADD2"
^XTMP("XPDT",7590,"RTN","XQ83A",58,0)=" Q"
^XTMP("XPDT",7590,"RTN","XQ83A",59,0)=" ;"
^XTMP("XPDT",7590,"RTN","XQ83A",60,0)="ADD2 ;"
^XTMP("XPDT",7590,"RTN","XQ83A",61,0)=" S XQK1=$P(BASE,U,7),XQP1=$P(BASE,U,10),XQE1=$P(BASE,U,11),XQF1=$P(BASE,U,17) S XQK1=$S(XQK'=""""&(XQK1'=""""):XQK_"",""_XQK1,1:XQK_XQK1),XQP1=$S(XQP'=""""&(XQP1'=""""):XQP_"",""_XQP1,1:XQP_XQP1),XQE1=$S(XQE'=""""&(XQE1'=""""):XQE_"",""_XQE1,1:XQE_XQE1)"
^XTMP("XPDT",7590,"RTN","XQ83A",62,0)=" S XQF1=$S(XQF'=""""&(XQF1'=""""):XQF_"",""_XQF1,1:XQF_XQF1)"
^XTMP("XPDT",7590,"RTN","XQ83A",63,0)=" S XQFLG=0,N=$L(PATH,"",""),T=$P(PATH,"","",N-1)"
^XTMP("XPDT",7590,"RTN","XQ83A",64,0)=" I $S('$D(^DIC(19,""AXP"",A,U,T)):1,$P(^(T),U,6)=(XQA_PATH):1,1:0) S ^(T)=$P(BASE,U,1,5)_U_XQA_PATH_U_XQK1_U_$P(BASE,U,8,9)_U_XQP1_U_XQE1_U_$P(BASE,U,12,16)_U_XQF1_U_$P(BASE,U,18,99),XQFLG=1"
^XTMP("XPDT",7590,"RTN","XQ83A",65,0)=" I 'XQFLG S BASE1=XQA_PATH_U_XQK1_U_XQP1_U_XQE1_U_XQF1 F N=0:0 S N=$O(^DIC(19,""AXP"",A,U,T,0,N)) Q:N'>0  S L=N I $P(^(N),U)=(XQA_PATH) S ^(N)=BASE1,XQFLG=1 Q"
^XTMP("XPDT",7590,"RTN","XQ83A",66,0)=" I 'XQFLG F N=1:1 I '$D(^DIC(19,""AXP"",A,U,T,0,N)) S ^(N)=BASE1,^(0)=$S('($D(^DIC(19,""AXP"",A,U,T,0))#2):0,1:^(0))+1 Q"
^XTMP("XPDT",7590,"RTN","XQ83A",67,0)=" S XQSYNY=$E($S(XQUC'="""":XQUC,1:$P(BASE,U,3)),1,27),V=T_U_""1"" D SYN3^XQ83R"
^XTMP("XPDT",7590,"RTN","XQ83A",68,0)=" I SYN'="""" S XQSYNY=SYN,V=T_U_""0"" D SYN3^XQ83R"
^XTMP("XPDT",7590,"RTN","XQ83A",69,0)=" K V"
^XTMP("XPDT",7590,"RTN","XQ83A",70,0)=" Q"
^XTMP("XPDT",7590,"VER")="8.0^22.0"
^XTMP("XPDT",7591)="1"
^XTMP("XPDT",7591,"BLD",1211,0)="XU*8.0*519^KERNEL^0^3090605^y"
^XTMP("XPDT",7591,"BLD",1211,1,0)="^^2^2^3090128^"
^XTMP("XPDT",7591,"BLD",1211,1,1,0)="Kernel patch XU*8.0*519; Modify PRINT LOCAL NPI REPORTS. Please refer"
^XTMP("XPDT",7591,"BLD",1211,1,2,0)="to the Description in Forum Patch Module for details."
^XTMP("XPDT",7591,"BLD",1211,4,0)="^9.64PA^^"
^XTMP("XPDT",7591,"BLD",1211,6)="^426"
^XTMP("XPDT",7591,"BLD",1211,6.3)="2"
^XTMP("XPDT",7591,"BLD",1211,"ABPKG")="n"
^XTMP("XPDT",7591,"BLD",1211,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7591,"BLD",1211,"KRN",.4,0)=".4"
^XTMP("XPDT",7591,"BLD",1211,"KRN",.401,0)=".401"
^XTMP("XPDT",7591,"BLD",1211,"KRN",.402,0)=".402"
^XTMP("XPDT",7591,"BLD",1211,"KRN",.403,0)=".403"
^XTMP("XPDT",7591,"BLD",1211,"KRN",.5,0)=".5"
^XTMP("XPDT",7591,"BLD",1211,"KRN",.84,0)=".84"
^XTMP("XPDT",7591,"BLD",1211,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7591,"BLD",1211,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7591,"BLD",1211,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7591,"BLD",1211,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7591,"BLD",1211,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7591,"BLD",1211,"KRN",9.8,"NM",1,0)="XUSNPIE2^^0^B86877139"
^XTMP("XPDT",7591,"BLD",1211,"KRN",9.8,"NM","B","XUSNPIE2",1)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN",19,0)="19"
^XTMP("XPDT",7591,"BLD",1211,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7591,"BLD",1211,"KRN",101,0)="101"
^XTMP("XPDT",7591,"BLD",1211,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7591,"BLD",1211,"KRN",771,0)="771"
^XTMP("XPDT",7591,"BLD",1211,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7591,"BLD",1211,"KRN",870,0)="870"
^XTMP("XPDT",7591,"BLD",1211,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7591,"BLD",1211,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7591,"BLD",1211,"KRN",8994,0)="8994"
^XTMP("XPDT",7591,"BLD",1211,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7591,"BLD",1211,"KRN",9002226,"NM",0)="^9.68A^^"
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",.4,.4)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",.401,.401)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",.402,.402)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",.403,.403)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",.5,.5)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",.84,.84)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",19,19)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",101,101)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",771,771)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",870,870)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",8994,8994)=""
^XTMP("XPDT",7591,"BLD",1211,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7591,"BLD",1211,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7591,"BLD",1211,"QUES",0)="^9.62^^"
^XTMP("XPDT",7591,"BLD",1211,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7591,"BLD",1211,"REQB",1,0)="XU*8.0*480^1"
^XTMP("XPDT",7591,"BLD",1211,"REQB","B","XU*8.0*480",1)=""
^XTMP("XPDT",7591,"MBREQ")="0"
^XTMP("XPDT",7591,"PKG",3,-1)="1^1"
^XTMP("XPDT",7591,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7591,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7591,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7591,"PKG",3,22,1,0)="8.0^3090423^3080616^6"
^XTMP("XPDT",7591,"PKG",3,22,1,"PAH",1,0)="519^3090605"
^XTMP("XPDT",7591,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3090605"
^XTMP("XPDT",7591,"PKG",3,22,1,"PAH",1,1,1,0)="Kernel patch XU*8.0*519; Modify PRINT LOCAL NPI REPORTS. Please refer"
^XTMP("XPDT",7591,"PKG",3,22,1,"PAH",1,1,2,0)="to the Description in Forum Patch Module for details."
^XTMP("XPDT",7591,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7591,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7591,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7591,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7591,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7591,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7591,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7591,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7591,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7591,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7591,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7591,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7591,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7591,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7591,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7591,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7591,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7591,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7591,"QUES","XPM1","B")=""
^XTMP("XPDT",7591,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7591,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7591,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7591,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7591,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7591,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7591,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7591,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7591,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7591,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7591,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7591,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7591,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7591,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7591,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7591,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7591,"RTN")="1"
^XTMP("XPDT",7591,"RTN","XUSNPIE2")="0^1^B86877139^B76313807"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",1,0)="XUSNPIE2 ;FO-OAKLAND/JLI - DATA ENTRY FOR INITIAL NPI VALUES ;6/5/09"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",2,0)=" ;;8.0;KERNEL;**410,435,454,462,480,519**;Jul 10, 1995;Build 2"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",4,0)=" Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",5,0)=" ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",6,0)="PRINTOPT ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",7,0)=" N DIR,%ZIS,ION,OPTION,PRNTFRMT,XUSDIV,XUSSORT,XUSRESO,Y,ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,XUSER"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",8,0)=" K IO(""Q"")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",9,0)=" W !,""Select one of the following:"",!!,?11,""1"",?21,""All providers"",!,?11,""2"",?21,""All providers without NPI numbers"",!"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",10,0)=" S DIR(0)=""N^1:2"",DIR(""A"")=""Select a report option"",DIR(""B"")=""1"" D ^DIR K DIR Q:Y'>0  S OPTION=+Y"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",11,0)=" S XUSRESO="""" D  Q:XUSRESO="""""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",12,0)=" . S DIR(0)=""S^P:Providers who are not residents;R:Residents only;B:Both"""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",13,0)=" . S DIR(""B"")=""P"",DIR(""A"")=""Selection: """
^XTMP("XPDT",7591,"RTN","XUSNPIE2",14,0)=" . D ^DIR K DIR Q:""PRB""'[Y"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",15,0)=" . S XUSRESO=Y Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",16,0)=" ; Change of XU*8*519 #1 (add 3 lines of code below)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",17,0)=" W !!,""Select one of the following:"",!!,?11,""1"",?21,""ACTIVE users only"",!,?11,""2"",?21,""ACTIVE and DISUSERed users"",!"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",18,0)=" S DIR(0)=""N^1:2"",DIR(""A"")=""Select a report option"",DIR(""B"")=""1"" D ^DIR K DIR Q:Y'>0  S XUSER=+Y"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",19,0)=" ; End XU*8*519 #1"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",20,0)=" ; "
^XTMP("XPDT",7591,"RTN","XUSNPIE2",21,0)=" S DIR(0)=""Y"",DIR(""B"")=""NO"",DIR(""A"")=""Sort by DIVISION"" D ^DIR K DIR Q:Y=""^""  S XUSDIV=+Y"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",22,0)=" S PRNTFRMT=1"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",23,0)=" I XUSDIV S DIR(0)=""N^1:2"",DIR(""A"")=""Output type (1=Printed text or 2=^-delimited)"" D ^DIR K DIR Q:Y'>0  S PRNTFRMT=Y"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",24,0)=" S DIR(0)=""Y"",DIR(""B"")=""YES"",DIR(""A"")=""Sort by SERVICE/SECTION""_$S(XUSDIV>0:"" (as well)"",1:"""") D ^DIR K DIR Q:Y=""^""  S XUSSORT=+Y"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",25,0)=" W !!,"">>> Report processing time is approximately 10 minutes."""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",26,0)=" W !,""    Recommend text output be queued to a network printer."""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",27,0)=" W !"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",28,0)=" S %ZIS=""MQ"" D ^%ZIS Q:POP"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",29,0)=" I $D(IO(""Q"")) D  Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",30,0)=" . S ZTSAVE(""OPTION"")="""",ZTSAVE(""XUSSORT"")="""",ZTSAVE(""XUSDIV"")="""",ZTSAVE(""PRNTFRMT"")="""",ZTSAVE(""XUSRESO"")="""",ZTSAVE(""XUSER"")="""""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",31,0)=" . S ZTIO=ION,ZTRTN=""DQ^XUSNPIE2"",ZTDESC=""NPI PRINT JOB FOR OPTION ""_OPTION"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",32,0)=" . D ^%ZTLOAD W:$D(ZTSK) !,""Queued as Task ""_ZTSK D HOME^%ZIS Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",33,0)=" ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",34,0)="DQ ; entry point for queued print job"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",35,0)=" U IO D PRNTPROV(OPTION,XUSSORT,XUSDIV,PRNTFRMT,XUSRESO,XUSER)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",36,0)=" U IO D ^%ZISC"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",37,0)=" Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",38,0)=" ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",39,0)="PRNTPROV(OPTION,XUSSORT,XUSDIV,PRNTFRMT,XUSRESO,XUSER) ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",40,0)=" ; PRINT PROVIDER INFO"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",41,0)=" ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",42,0)=" ; OPTION   SPECIFIES TYPE OF PRINT - 1=ALL PROVIDERS, 2=NEEDS NPI ONLY"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",43,0)=" ; XUSSORT  INDICATES WHETHER SORTED BY SERVICE/SECTION"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",44,0)=" ; XUSDIV   INDICATES WHETHER SORTED BY DIVISION"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",45,0)=" ; PRNTFRMT INDICATES TYPE OF OUTPUT, PRINTED OR ^-DELIMITED"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",46,0)=" ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",47,0)=" ; ZEXCEPT: IOSL    - KERNEL VARIABLE"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",48,0)=" S XUSER=$G(XUSER) ;add p 519"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",49,0)=" N PAGENUM,LINENUM,PROVNAME,TAXDESCR,TAXONOMY,SERVSECT,DIRUT,DTOUT"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",50,0)=" N GLOBLOC,IEN,NPI,DATETIME,GLOBVALU,NCOUNT,GLOBLOC1,XUSDIVNM,CNTTOTAL,CNTNONE,CNTEXMPT,CNTDONE,MULTDIV,MULTDIVC,XUSDIS"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",51,0)=" S CNTTOTAL=0,CNTNONE=0,CNTEXMPT=0,CNTDONE=0,XUSDIS="""""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",52,0)=" S PAGENUM=0,LINENUM=0"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",53,0)=" S DATETIME=$$NOW^XLFDT()"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",54,0)=" S GLOBLOC1=$$GETDATA(OPTION,XUSSORT,XUSDIV,XUSRESO,XUSER)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",55,0)=" I PRNTFRMT'=1 W !,""PROVIDER_NAME^LAST4^IEN^NPI^TAXONOMY_CODE^TAXONOMY DESCRIPTION""_$S(XUSDIV:""^DIVISION"",1:"""")_$S(XUSSORT:""^SERVICE/SECTION"",1:"""")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",56,0)=" S GLOBLOC=GLOBLOC1,XUSDIVNM="""" F  S XUSDIVNM=$O(@GLOBLOC1@(XUSDIVNM)) Q:XUSDIVNM=""""  D  Q:$D(DIRUT)!$D(DTOUT)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",57,0)=" . S SERVSECT="""" F  S SERVSECT=$O(@GLOBLOC1@(XUSDIVNM,SERVSECT)) Q:SERVSECT=""""  S GLOBLOC=$NA(@GLOBLOC1@(XUSDIVNM,SERVSECT)) D  Q:$D(DIRUT)!$D(DTOUT)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",58,0)=" . . I PRNTFRMT=1 D HEADER(OPTION,DATETIME,.PAGENUM,.LINENUM,XUSDIV,XUSDIVNM,XUSSORT,SERVSECT,XUSRESO,XUSER) Q:$D(DIRUT)!$D(DTOUT)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",59,0)=" . . S PROVNAME="""" F  S PROVNAME=$O(@GLOBLOC@(PROVNAME)) Q:PROVNAME=""""  Q:$D(DIRUT)!$D(DTOUT)  S IEN=0 F  S IEN=$O(@GLOBLOC@(PROVNAME,IEN)) Q:IEN'>0  D  Q:$D(DIRUT)!$D(DTOUT)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",60,0)=" . . . S NCOUNT=0"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",61,0)=" . . . S TAXDESCR="""" F  S TAXDESCR=$O(@GLOBLOC@(PROVNAME,IEN,TAXDESCR)) Q:TAXDESCR=""""  S GLOBVALU=@GLOBLOC@(PROVNAME,IEN,TAXDESCR) D"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",62,0)=" . . . . S NPI=$P(GLOBVALU,U,3),TAXONOMY=$P(GLOBVALU,U,4),XUSDIS=$P(GLOBVALU,U,6)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",63,0)=" . . . . I PRNTFRMT=1 S NCOUNT=NCOUNT+1 W:NCOUNT=1 !,PROVNAME,?33,$$ALIGNRGT(IEN,11),?49,NPI,?65,XUSDIS W !,?6,TAXONOMY,""  "",TAXDESCR"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",64,0)=" . . . . I PRNTFRMT'=1 W !,PROVNAME_U_$E($$GET1^DIQ(200,IEN_"","",9),6,9)_U_IEN_U_NPI_U_TAXONOMY_U_TAXDESCR_$S(XUSDIV:U_XUSDIVNM,1:"""")_$S(XUSSORT:U_SERVSECT,1:"""")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",65,0)=" . . . . Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",66,0)=" . . . I PRNTFRMT=1 S LINENUM=LINENUM+NCOUNT+1 I LINENUM>(IOSL-4) D HEADER(OPTION,DATETIME,.PAGENUM,.LINENUM,XUSDIV,XUSDIVNM,XUSSORT,SERVSECT,XUSRESO,XUSER) Q:$D(DIRUT)!$D(DTOUT)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",67,0)=" . . . Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",68,0)=" . . Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",69,0)=" . Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",70,0)=" I '($D(DIRUT)!$D(DTOUT)),PRNTFRMT=1 D"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",71,0)=" . S PROVNAME="""" I $O(@GLOBLOC@(PROVNAME))="""" W !,?20,""* * * N O  D A T A  F O U N D * * *"",!! I 1"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",72,0)=" . E  D"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",73,0)=" . . N TOTTYP S TOTTYP=$S(XUSRESO=""R"":""Residents"",1:""Billable Providers"")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",74,0)=" . . W !!,""Total ""_TOTTYP_"":"",?43,CNTTOTAL,!,TOTTYP_"" with an NPI:"",?43,CNTDONE,!,""EXEMPT ""_TOTTYP_"":"",?43,CNTEXMPT,!,TOTTYP_"" Still Needing an NPI:"",?43,CNTNONE"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",75,0)=" . . I $G(MULTDIV)>0 W !!,MULTDIV,"" Providers were repeated a total of "",MULTDIVC,"" times"",!,"" due to listing under multiple divisions"""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",76,0)=" . . Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",77,0)=" . W !!,?27,""*** End of Report ***"""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",78,0)=" . Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",79,0)=" Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",80,0)=" ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",81,0)="HEADER(OPTION,DATETIME,PAGNOREF,LINNOREF,XUSDIV,XUSDIVNM,XUSSORT,SERVSECT,XUSRESO,XUSER) ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",82,0)=" ; ZEXCEPT: IOF,IOST  KERNEL IO VARIABLES"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",83,0)=" ; ZEXCEPT: DIRUT,DTOUT  NEWED IN CALLING PRNTPROV - INDICATE QUIT TO PRNTPROV"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",84,0)=" N TEMPVAL,DIR,X,Y"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",85,0)=" S PAGNOREF=PAGNOREF+1"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",86,0)=" S XUSER=$G(XUSER) ; add p 519"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",87,0)=" ; Don't page feed on the first page"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",88,0)=" IF PAGNOREF>1 I $E(IOST,1,2)=""C-"" S DIR(0)=""E"" D ^DIR I 'Y S DIRUT=1 Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",89,0)=" IF PAGNOREF>1 W @IOF"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",90,0)=" W:$E(IOST,1,2)'=""C-"" !"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",91,0)=" W ""Active Provider Report (""_$S(XUSRESO=""P"":""no residents)"",XUSRESO=""R"":""residents only)"",1:""includes residents)"")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",92,0)=" W ?48,$$FMTE^XLFDT(DATETIME),""  Page: "",PAGNOREF"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",93,0)=" W !,""Report Option: Provider List    Active "",$S(XUSER=2:""and Disuser "",1:""""),""Providers"",$S(OPTION=2:"" Without NPI Numbers"",1:"""")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",94,0)=" W !!,""Provider Name"",?39,""IEN"",?49,$S(OPTION'=2:""NPI"",1:""""),?65,$S(XUSER=2:""Disuser"",1:"""")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",95,0)=" W !,""      Taxonomy"""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",96,0)=" W !,""--------------------------------------------------------------------------------"""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",97,0)=" S LINNOREF=6"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",98,0)=" I XUSDIV W !,""DIVISION: "",XUSDIVNM,""   "" S LINNOREF=LINNOREF+1"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",99,0)=" I XUSSORT W:'XUSDIV ! W ""SERVICE/SECTION: "",SERVSECT S:'XUSDIV LINNOREF=LINNOREF+1"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",100,0)=" Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",101,0)=" ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",102,0)="GETDATA(OPTION,XUSSORT,XUSDIV,XUSRESO,XUSER) ; get data for reports for providers"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",103,0)=" N NPI,PROVNAME,TAXDESCR,TAXONOMY,XUSDEFLT,XUSDIVCN,XUSDIVN,XUSDIVNM,XUSGLOB,XUSACTV,XUSSKIP"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",104,0)=" N XUSIEN,XUSSERVC,XUSVAL,CNTCLEAN,X,XUSDIS"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",105,0)=" S XUSRESO=$G(XUSRESO)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",106,0)=" S XUSER=$G(XUSER) I XUSER="""" S XUSER=1 ;add p 519 - active users only reported"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",107,0)=" S XUSDIS="""" ; p 519"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",108,0)=" ; ZEXCEPT: CNTTOTAL,CNTNONE,CNTEXMPT,CNTDONE - NEWed and initialized in PRNTPROV or killed based on CNTCLEAN"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",109,0)=" S CNTCLEAN=0 I '$D(CNTTOTAL) S CNTCLEAN=1"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",110,0)=" S XUSGLOB=$NA(^TMP($J,""XUSNPIPRNT"")) K @XUSGLOB"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",111,0)=" I 'XUSDIV S XUSDIVNM(1)="" "",XUSDEFLT="" """
^XTMP("XPDT",7591,"RTN","XUSNPIE2",112,0)=" I XUSDIV S XUSDEFLT=$$NS^XUAF4($$KSP^XUPARAM(""INST"")),XUSDEFLT=$P(XUSDEFLT,U)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",113,0)=" I 'XUSSORT S XUSSERVC="" """
^XTMP("XPDT",7591,"RTN","XUSNPIE2",114,0)=" F XUSIEN=0:0 S XUSIEN=$O(^VA(200,XUSIEN)) Q:XUSIEN'>0  D"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",115,0)=" . ; Don't report TERMINATED"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",116,0)=" . S XUSACTV=$$ACTIVE^XUSER(XUSIEN)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",117,0)=" . I XUSACTV=""""!($P(XUSACTV,U,2)=""TERMINATED"") Q  ;p 519"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",118,0)=" . I XUSER=1,$P(XUSACTV,U)=0 Q  ;p 519"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",119,0)=" . S XUSDIS="""" I $P(XUSACTV,U,2)=""DISUSER"" S XUSDIS=""Yes"" ;p 519"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",120,0)=" . ; Don't report users with null NPI ENTRY STATUS"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",121,0)=" . S XUSVAL=$$CHEKNPI^XUSNPIED(XUSIEN),XUSVAL=$$NPISTATS^XUSNPIED(XUSIEN)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",122,0)=" . Q:XUSVAL="""""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",123,0)=" . S PROVNAME=$$GET1^DIQ(200,XUSIEN_"","",.01),NPI=$$GETNPI^XUSNPIED(XUSIEN),TAXONOMY=$$GETTAXON^XUSNPIED(XUSIEN,.TAXDESCR) I TAXONOMY=-1 S TAXONOMY="" "",TAXDESCR="" """
^XTMP("XPDT",7591,"RTN","XUSNPIE2",124,0)=" . ; Determine whether provider is a resident for local reports."
^XTMP("XPDT",7591,"RTN","XUSNPIE2",125,0)=" . I OPTION'=3,XUSRESO'=""B"" S XUSSKIP=0 D  Q:XUSSKIP"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",126,0)=" . . I XUSRESO=""R"",TAXONOMY'=""390200000X"" S XUSSKIP=1 Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",127,0)=" . . I XUSRESO=""P"",TAXONOMY=""390200000X"" S XUSSKIP=1"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",128,0)=" . . Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",129,0)=" . I NPI="""",$$EXMPTNPI^XUSNPIED(XUSIEN) S NPI=""EXEMPTED  """
^XTMP("XPDT",7591,"RTN","XUSNPIE2",130,0)=" . S CNTTOTAL=$G(CNTTOTAL)+1 S:NPI="""" CNTNONE=$G(CNTNONE)+1 S:NPI=""EXEMPTED  "" CNTEXMPT=$G(CNTEXMPT)+1 S:NPI?10N CNTDONE=$G(CNTDONE)+1"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",131,0)=" . I '((XUSVAL=""N"")!(OPTION'=2)) Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",132,0)=" . I XUSSORT S XUSSERVC=$$GET1^DIQ(200,XUSIEN_"","",29) I XUSSERVC="""" S XUSSERVC="" """
^XTMP("XPDT",7591,"RTN","XUSNPIE2",133,0)=" . I XUSDIV D"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",134,0)=" . . K XUSDIVNM S XUSDIVCN=0,XUSDIVNM(1)=XUSDEFLT"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",135,0)=" . . F XUSDIVN=0:0 S XUSDIVN=$O(^VA(200,XUSIEN,2,XUSDIVN)) Q:XUSDIVN'>0  S XUSDIVCN=XUSDIVCN+1,XUSDIVNM(XUSDIVCN)=$$GET1^DIQ(200.02,XUSDIVN_"",""_XUSIEN_"","",.01)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",136,0)=" . . I XUSDIVCN>1 S MULTDIV=$G(MULTDIV)+1,MULTDIVC=$G(MULTDIVC)+XUSDIVCN-1"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",137,0)=" . . Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",138,0)=" . F XUSDIVN=0:0 S XUSDIVN=$O(XUSDIVNM(XUSDIVN)) Q:XUSDIVN'>0  D"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",139,0)=" . . S X=PROVNAME_U_XUSIEN_U_NPI_U_TAXONOMY_U_TAXDESCR I XUSDIS=""Yes"" S X=X_U_XUSDIS  ;p 519 add piece #6 on X"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",140,0)=" . . S @XUSGLOB@(XUSDIVNM(XUSDIVN),XUSSERVC,PROVNAME,XUSIEN,TAXDESCR)=X"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",141,0)=" . . Q "
^XTMP("XPDT",7591,"RTN","XUSNPIE2",142,0)=" . Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",143,0)=" I CNTCLEAN K CNTTOTAL,CNTNONE,CNTEXMPT,CNTDONE"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",144,0)=" Q XUSGLOB"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",145,0)=" ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",146,0)="ALIGNRGT(TEXT,WIDTH) ; align text right in a specified width"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",147,0)=" N RESULT"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",148,0)=" S $P(RESULT,"" "",WIDTH)="" "",RESULT=RESULT_TEXT,RESULT=$E(RESULT,$L(RESULT)-WIDTH+1,$L(RESULT))"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",149,0)=" Q RESULT"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",150,0)=" ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",151,0)="CHKOLD1(IEN) ; check for earlier value, and activate if present"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",152,0)=" N IEN1,STATUS,NPI,DATE,XUFDA"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",153,0)=" S IEN1=$O(^VA(200,IEN,""NPISTATUS"","" ""),-1) I IEN1>0 D  I STATUS=0 D CHKOLD1(IEN)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",154,0)=" . S STATUS=^VA(200,IEN,""NPISTATUS"",IEN1,0),NPI=$P(STATUS,U,3),DATE=$P(STATUS,U),STATUS=$P(STATUS,U,2)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",155,0)=" . I STATUS=0 D DELETNPI(IEN,IEN1,DATE) Q  ; entry making it INACTIVE - remove it"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",156,0)=" . I STATUS=1 D SET^XUSNPIE1(IEN,NPI)"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",157,0)=" . Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",158,0)=" Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",159,0)=" ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",160,0)="DELETNPI(IEN,OIEN,ODATEVAL) ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",161,0)=" N XUFDA"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",162,0)=" I $D(ODATEVAL) S XUFDA(200.042,OIEN_"",""_IEN_"","",.01)=""@"" D FILE^DIE("""",""XUFDA"")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",163,0)=" I $O(^VA(200,IEN,""NPISTATUS"",0))>0 Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",164,0)=" N XUFDA"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",165,0)=" I $$GET1^DIQ(200,IEN_"","",41.99) S XUFDA(200,IEN_"","",41.99)=""@"""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",166,0)=" I $$GET1^DIQ(200,IEN_"","",41.98)'="""" S XUFDA(200,IEN_"","",41.98)=""@"""
^XTMP("XPDT",7591,"RTN","XUSNPIE2",167,0)=" I $D(XUFDA) D FILE^DIE("""",""XUFDA"")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",168,0)=" Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",169,0)=" ;"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",170,0)="CLERXMPT ; edit entry indicating whether a provider is exempt from needing an NPI"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",171,0)=" N DIC,DIR,FDA,IEN,Y"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",172,0)=" W ! S DIC=""^VA(200,"",DIC(0)=""AEQ"" S DIC(""A"")=""select Provider: "" D ^DIC Q:Y'>0  S IEN=+Y"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",173,0)=" I $$HASNPI^XUSNPIED(IEN) W !,""This Provider already has an NPI value.  Nothing to do."" Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",174,0)=" I '$$CHEKNPI^XUSNPIED(IEN),'$$EXMPTNPI^XUSNPIED(IEN) W !,""This Provider does not appear to need an NPI or Exemption."" Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",175,0)=" I $$EXMPTNPI^XUSNPIED(IEN) D  Q  ; currently marked as Exempt"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",176,0)=" . S DIR(0)=""Y"",DIR(""A"")=""Provider is currently EXEMPT from needing an NPI, set to NEEDS an NPI (Y/N)"" D ^DIR I 'Y Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",177,0)=" . S FDA(200,IEN_"","",41.98)=""N"" D FILE^DIE("""",""FDA"")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",178,0)=" . W !,$S($$NEEDSNPI^XUSNPIED(IEN):""File updated"",1:""Ecountered a problem updating file, status NOT set to NEEDS an NPI"")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",179,0)=" . Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",180,0)=" ; check to make sure provider should be exempt"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",181,0)=" S DIR(0)=""Y"",DIR(""A"")=""Confirm that Provider should be Exempt from needing an NPI (Y/N)"" D ^DIR I 'Y Q"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",182,0)=" ; and update file to show as exempt"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",183,0)=" S FDA(200,IEN_"","",41.98)=""E"" D FILE^DIE("""",""FDA"")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",184,0)=" W !,$S($$EXMPTNPI^XUSNPIED(IEN):""File updated"",1:""Ecountered a problem updating file, status NOT set to EXEMPT"")"
^XTMP("XPDT",7591,"RTN","XUSNPIE2",185,0)=" Q"
^XTMP("XPDT",7591,"VER")="8.0^22.0"
^XTMP("XPDT",7596)="1"
^XTMP("XPDT",7596,"BLD",1230,0)="XU*8.0*525^KERNEL^0^3090527^y"
^XTMP("XPDT",7596,"BLD",1230,1,0)="^^2^2^3090428^"
^XTMP("XPDT",7596,"BLD",1230,1,1,0)="Please see the patch description on FORUM, in the National Patch Module."
^XTMP("XPDT",7596,"BLD",1230,1,2,0)=""
^XTMP("XPDT",7596,"BLD",1230,4,0)="^9.64PA^^"
^XTMP("XPDT",7596,"BLD",1230,6)="5^"
^XTMP("XPDT",7596,"BLD",1230,6.3)="10"
^XTMP("XPDT",7596,"BLD",1230,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7596,"BLD",1230,"KRN",.4,0)=".4"
^XTMP("XPDT",7596,"BLD",1230,"KRN",.401,0)=".401"
^XTMP("XPDT",7596,"BLD",1230,"KRN",.402,0)=".402"
^XTMP("XPDT",7596,"BLD",1230,"KRN",.403,0)=".403"
^XTMP("XPDT",7596,"BLD",1230,"KRN",.5,0)=".5"
^XTMP("XPDT",7596,"BLD",1230,"KRN",.84,0)=".84"
^XTMP("XPDT",7596,"BLD",1230,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7596,"BLD",1230,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,"NM",0)="^9.68A^5^5"
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,"NM",1,0)="XPDDP^^0^B7424274"
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,"NM",2,0)="XPDDP1^^0^B49664674"
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,"NM",3,0)="XPDV^^0^B38720817"
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,"NM",4,0)="XPDIL1^^0^B36313386"
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,"NM",5,0)="XPDIL^^0^B21320112"
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,"NM","B","XPDDP",1)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,"NM","B","XPDDP1",2)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,"NM","B","XPDIL",5)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,"NM","B","XPDIL1",4)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN",9.8,"NM","B","XPDV",3)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN",19,0)="19"
^XTMP("XPDT",7596,"BLD",1230,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7596,"BLD",1230,"KRN",101,0)="101"
^XTMP("XPDT",7596,"BLD",1230,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7596,"BLD",1230,"KRN",771,0)="771"
^XTMP("XPDT",7596,"BLD",1230,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7596,"BLD",1230,"KRN",870,0)="870"
^XTMP("XPDT",7596,"BLD",1230,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7596,"BLD",1230,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7596,"BLD",1230,"KRN",8994,0)="8994"
^XTMP("XPDT",7596,"BLD",1230,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",.4,.4)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",.401,.401)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",.402,.402)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",.403,.403)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",.5,.5)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",.84,.84)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",19,19)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",101,101)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",771,771)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",870,870)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",8994,8994)=""
^XTMP("XPDT",7596,"BLD",1230,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7596,"BLD",1230,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7596,"BLD",1230,"QUES",0)="^9.62^^"
^XTMP("XPDT",7596,"BLD",1230,"REQB",0)="^9.611^3^3"
^XTMP("XPDT",7596,"BLD",1230,"REQB",1,0)="XU*8.0*511^2"
^XTMP("XPDT",7596,"BLD",1230,"REQB",2,0)="XU*8.0*488^2"
^XTMP("XPDT",7596,"BLD",1230,"REQB",3,0)="XU*8.0*422^2"
^XTMP("XPDT",7596,"BLD",1230,"REQB","B","XU*8.0*422",3)=""
^XTMP("XPDT",7596,"BLD",1230,"REQB","B","XU*8.0*488",2)=""
^XTMP("XPDT",7596,"BLD",1230,"REQB","B","XU*8.0*511",1)=""
^XTMP("XPDT",7596,"MBREQ")="0"
^XTMP("XPDT",7596,"PKG",3,-1)="1^1"
^XTMP("XPDT",7596,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7596,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7596,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7596,"PKG",3,22,1,0)="8.0^3090423^3080616^6"
^XTMP("XPDT",7596,"PKG",3,22,1,"PAH",1,0)="525^3090527^6"
^XTMP("XPDT",7596,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3090527"
^XTMP("XPDT",7596,"PKG",3,22,1,"PAH",1,1,1,0)="Please see the patch description on FORUM, in the National Patch Module."
^XTMP("XPDT",7596,"PKG",3,22,1,"PAH",1,1,2,0)=""
^XTMP("XPDT",7596,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7596,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7596,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7596,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7596,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7596,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7596,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7596,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7596,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7596,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7596,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7596,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7596,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7596,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7596,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7596,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7596,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7596,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7596,"QUES","XPM1","B")=""
^XTMP("XPDT",7596,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7596,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7596,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7596,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7596,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7596,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7596,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7596,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7596,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7596,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7596,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7596,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7596,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7596,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7596,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7596,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7596,"RTN")="5"
^XTMP("XPDT",7596,"RTN","XPDDP")="0^1^B7424274^B68880073"
^XTMP("XPDT",7596,"RTN","XPDDP",1,0)="XPDDP ;SFISC/RSD - Display a package ;03/18/2008"
^XTMP("XPDT",7596,"RTN","XPDDP",2,0)=" ;;8.0;KERNEL;**21,28,44,68,100,108,229,304,346,463,488,525**;Jul 10, 1995;Build 10"
^XTMP("XPDT",7596,"RTN","XPDDP",3,0)=" ; Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7596,"RTN","XPDDP",4,0)=" ; Options: XPD PRINT BUILD calls EN1"
^XTMP("XPDT",7596,"RTN","XPDDP",5,0)=" ;          XPD PRINT INSTALL calls EN2"
^XTMP("XPDT",7596,"RTN","XPDDP",6,0)="EN1 ; Print from Build file"
^XTMP("XPDT",7596,"RTN","XPDDP",7,0)=" N DIC,D0,XPD,XPDT,XPDST,Y"
^XTMP("XPDT",7596,"RTN","XPDDP",8,0)=" S XPDST=$$LOOK^XPDB1 Q:XPDST'>0"
^XTMP("XPDT",7596,"RTN","XPDDP",9,0)=" S XPD(""XPDT("")="""""
^XTMP("XPDT",7596,"RTN","XPDDP",10,0)=" D EN^XUTMDEVQ(""LST1^XPDDP"",""Build File Print"",.XPD)"
^XTMP("XPDT",7596,"RTN","XPDDP",11,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP",12,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDDP",13,0)="EN2 ; Print from Distribution"
^XTMP("XPDT",7596,"RTN","XPDDP",14,0)=" N D0,DIC,DIR,DUOUT,DTOUT,POP,XPD,XPDA,XPDNM,XPDP,XPDT,XPDST,Y,Z,%ZIS"
^XTMP("XPDT",7596,"RTN","XPDDP",15,0)=" S XPDST=$$LOOK^XPDI1(""I $D(^XTMP(""""XPDI"""",Y))"",1) Q:XPDST'>0"
^XTMP("XPDT",7596,"RTN","XPDDP",16,0)=" S DIR(0)=""SO^1:Print Summary;2:Print Summary and Routines;3:Print Routines"",DIR(""A"")=""What to Print"""
^XTMP("XPDT",7596,"RTN","XPDDP",17,0)=" D ^DIR Q:Y=""""!$D(DTOUT)!$D(DUOUT)"
^XTMP("XPDT",7596,"RTN","XPDDP",18,0)=" S XPDP=Y,D0=$O(^XTMP(""XPDI"",XPDST,""BLD"",0)) Q:'D0"
^XTMP("XPDT",7596,"RTN","XPDDP",19,0)=" S (XPD(""XPDT(""),XPD(""XPDP""))="""""
^XTMP("XPDT",7596,"RTN","XPDDP",20,0)=" D EN^XUTMDEVQ(""LST2^XPDDP"",""Transport Global Print"",.XPD)"
^XTMP("XPDT",7596,"RTN","XPDDP",21,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP",22,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDDP",23,0)="LST1 ; Print from Build file"
^XTMP("XPDT",7596,"RTN","XPDDP",24,0)=" N DIRUT,XPDIT,XPDCNT"
^XTMP("XPDT",7596,"RTN","XPDDP",25,0)=" S (XPDIT,XPDCNT)=0"
^XTMP("XPDT",7596,"RTN","XPDDP",26,0)=" F  S XPDIT=$O(XPDT(XPDIT)) Q:$D(DIRUT)!(XPDIT'>0)  D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP",27,0)=" . I XPDCNT Q:'$$CONT"
^XTMP("XPDT",7596,"RTN","XPDDP",28,0)=" . S XPDCNT=XPDCNT+1"
^XTMP("XPDT",7596,"RTN","XPDDP",29,0)=" . S D0=+XPDT(XPDIT) D PNT^XPDDP1(""XPD(9.6,D0)"")"
^XTMP("XPDT",7596,"RTN","XPDDP",30,0)=" D WAIT"
^XTMP("XPDT",7596,"RTN","XPDDP",31,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP",32,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDDP",33,0)="LST2 ; Print from XPDT array"
^XTMP("XPDT",7596,"RTN","XPDDP",34,0)=" N DIRUT,XPDIT,XPDCNT"
^XTMP("XPDT",7596,"RTN","XPDDP",35,0)=" S (XPDIT,XPDCNT)=0"
^XTMP("XPDT",7596,"RTN","XPDDP",36,0)=" F  S XPDIT=$O(XPDT(XPDIT)) Q:$D(DIRUT)!(XPDIT'>0)  D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP",37,0)=" . I XPDCNT Q:'$$CONT"
^XTMP("XPDT",7596,"RTN","XPDDP",38,0)=" . S XPDCNT=XPDCNT+1,XPDA=+XPDT(XPDIT),D0=$O(^XTMP(""XPDI"",XPDA,""BLD"",0))"
^XTMP("XPDT",7596,"RTN","XPDDP",39,0)=" . D PNT^XPDDP1(""XTMP(""""XPDI"""",XPDA,""""BLD"""",D0)""):XPDP<3,RTN:XPDP>1"
^XTMP("XPDT",7596,"RTN","XPDDP",40,0)=" D WAIT"
^XTMP("XPDT",7596,"RTN","XPDDP",41,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP",42,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDDP",43,0)="XMP2(X,D0) ;called from ^XMP2"
^XTMP("XPDT",7596,"RTN","XPDDP",44,0)=" N XPDA S XPDA=-1"
^XTMP("XPDT",7596,"RTN","XPDDP",45,0)=" D PNT^XPDDP1(X)"
^XTMP("XPDT",7596,"RTN","XPDDP",46,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP",47,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDDP",48,0)="WAIT ; Pause on last page or not? It depends on whether there's enough room"
^XTMP("XPDT",7596,"RTN","XPDDP",49,0)=" ; left on the page to display the KIDS menu."
^XTMP("XPDT",7596,"RTN","XPDDP",50,0)=" Q:$E($G(IOST),1,2)'=""C-"""
^XTMP("XPDT",7596,"RTN","XPDDP",51,0)=" Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP",52,0)=" ; DUZ(""AUTO"")=1 means show menu option choices"
^XTMP("XPDT",7596,"RTN","XPDDP",53,0)=" I IOSL-$Y<$S($G(DUZ(""AUTO"")):14,1:3) D WAIT^XMXUTIL"
^XTMP("XPDT",7596,"RTN","XPDDP",54,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP",55,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDDP",56,0)="CONT() ; Press Return to continue; ^ to exit."
^XTMP("XPDT",7596,"RTN","XPDDP",57,0)=" Q:$D(DIRUT) 0"
^XTMP("XPDT",7596,"RTN","XPDDP",58,0)=" Q:$E(IOST,1,2)'=""C-"" 1"
^XTMP("XPDT",7596,"RTN","XPDDP",59,0)=" N DIR,I,J,K,X,Y"
^XTMP("XPDT",7596,"RTN","XPDDP",60,0)=" S DIR(0)=""E"" D ^DIR"
^XTMP("XPDT",7596,"RTN","XPDDP",61,0)=" Q Y"
^XTMP("XPDT",7596,"RTN","XPDDP",62,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDDP",63,0)="CHK(Y) ;Y=excess lines, return 1 to exit"
^XTMP("XPDT",7596,"RTN","XPDDP",64,0)=" ;return 0 to continue"
^XTMP("XPDT",7596,"RTN","XPDDP",65,0)=" Q:$Y<(IOSL-Y) 0"
^XTMP("XPDT",7596,"RTN","XPDDP",66,0)=" Q:'$$CONT 1"
^XTMP("XPDT",7596,"RTN","XPDDP",67,0)=" W @IOF"
^XTMP("XPDT",7596,"RTN","XPDDP",68,0)=" Q 0"
^XTMP("XPDT",7596,"RTN","XPDDP",69,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDDP",70,0)="RTN ;Print Routines"
^XTMP("XPDT",7596,"RTN","XPDDP",71,0)=" Q:$D(DIRUT)!$$CHK(2)"
^XTMP("XPDT",7596,"RTN","XPDDP",72,0)=" N XPD0,XPDI,XPDRTN"
^XTMP("XPDT",7596,"RTN","XPDDP",73,0)=" S XPD0=$G(^XTMP(""XPDI"",XPDA,""BLD"",D0,0)) Q:XPD0="""""
^XTMP("XPDT",7596,"RTN","XPDDP",74,0)=" I XPDP=3 N XPDDT,XPDPG,XPDUL D"
^XTMP("XPDT",7596,"RTN","XPDDP",75,0)=" . S XPDDT=$$HTE^XLFDT($H,""1PM""),XPDPG=1,$P(XPDUL,""-"",IOM)="""""
^XTMP("XPDT",7596,"RTN","XPDDP",76,0)=" . D HDR^XPDDP1"
^XTMP("XPDT",7596,"RTN","XPDDP",77,0)=" . W !,XPDUL"
^XTMP("XPDT",7596,"RTN","XPDDP",78,0)=" S XPDRTN="""""
^XTMP("XPDT",7596,"RTN","XPDDP",79,0)=" F  S XPDRTN=$O(^XTMP(""XPDI"",XPDA,""RTN"",XPDRTN)) Q:XPDRTN=""""  D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP",80,0)=" . W !,XPDRTN S XPDI=0"
^XTMP("XPDT",7596,"RTN","XPDDP",81,0)=" . F  S XPDI=$O(^XTMP(""XPDI"",XPDA,""RTN"",XPDRTN,XPDI)) Q:'XPDI  W !,$G(^(XPDI,0)) Q:$$CHK(2)"
^XTMP("XPDT",7596,"RTN","XPDDP",82,0)=" . W ! Q:'$$CHK(2)"
^XTMP("XPDT",7596,"RTN","XPDDP",83,0)=" W !! S DIRUT=1"
^XTMP("XPDT",7596,"RTN","XPDDP",84,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1")="0^2^B49664674^n/a"
^XTMP("XPDT",7596,"RTN","XPDDP1",1,0)="XPDDP1 ;SFISC/RSD - Continue Display a package ;"
^XTMP("XPDT",7596,"RTN","XPDDP1",2,0)=" ;;8.0;KERNEL;**525**;Jul 10, 1995;Build 10"
^XTMP("XPDT",7596,"RTN","XPDDP1",3,0)=" ; Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7596,"RTN","XPDDP1",4,0)="PNT(XPDGR) ; Print a package, XPDGR=global root"
^XTMP("XPDT",7596,"RTN","XPDDP1",5,0)=" ;XPDFL=0 - Build   - ^XPD(9.7 global root"
^XTMP("XPDT",7596,"RTN","XPDDP1",6,0)=" ;      1 - Install - ^XTMP global root"
^XTMP("XPDT",7596,"RTN","XPDDP1",7,0)=" ;      2 - Packman - ^TMP($J, global root"
^XTMP("XPDT",7596,"RTN","XPDDP1",8,0)=" N I,J,K,X,XPD,XPDDT,XPDI,XPD0,XPDFL,XPDPG,XPDUL,XPDTYPE,XPDTRACK,XPDTXT"
^XTMP("XPDT",7596,"RTN","XPDDP1",9,0)=" Q:$G(XPDGR)=""""  S XPDGR=""^""_XPDGR"
^XTMP("XPDT",7596,"RTN","XPDDP1",10,0)=" Q:'$D(@XPDGR@(0))  S XPD0=^(0)"
^XTMP("XPDT",7596,"RTN","XPDDP1",11,0)=" D ID                     ; Package Identification"
^XTMP("XPDT",7596,"RTN","XPDDP1",12,0)=" D DESCR Q:$D(DIRUT)      ; Description"
^XTMP("XPDT",7596,"RTN","XPDDP1",13,0)=" I XPDTYPE=1 D MULT Q     ; Multi-Package"
^XTMP("XPDT",7596,"RTN","XPDDP1",14,0)=" D PREPOST Q:$D(DIRUT)    ; Environment check & Pre/Post Routines"
^XTMP("XPDT",7596,"RTN","XPDDP1",15,0)=" I XPDTYPE=2 D GLOBAL Q   ; Global Package"
^XTMP("XPDT",7596,"RTN","XPDDP1",16,0)=" D FILES Q:$D(DIRUT)      ; Files/DDs"
^XTMP("XPDT",7596,"RTN","XPDDP1",17,0)=" D COMP Q:$D(DIRUT)       ; Build Components"
^XTMP("XPDT",7596,"RTN","XPDDP1",18,0)=" Q:XPDFL=2  ; Packman message, called from XMP2 - Summarize"
^XTMP("XPDT",7596,"RTN","XPDDP1",19,0)=" D QUESTS Q:$D(DIRUT)     ; Install Questions"
^XTMP("XPDT",7596,"RTN","XPDDP1",20,0)=" D ALFABETA Q:$D(DIRUT)   ; Alpha/Beta Testing"
^XTMP("XPDT",7596,"RTN","XPDDP1",21,0)=" D NAMESP Q:$D(DIRUT)     ; Include/Exclude Namespaces"
^XTMP("XPDT",7596,"RTN","XPDDP1",22,0)=" D REQDBLD Q:$D(DIRUT)    ; Required Builds"
^XTMP("XPDT",7596,"RTN","XPDDP1",23,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",24,0)="ID ; Identify the package"
^XTMP("XPDT",7596,"RTN","XPDDP1",25,0)=" S XPDPG=1,XPDFL=$S($E(XPDGR,1,5)=""^TMP("":2,1:$E(XPDGR,1,5)=""^XTMP""),$P(XPDUL,""-"",IOM)="""",XPDDT=$$HTE^XLFDT($H,""1PM""),XPDTYPE=+$P(XPD0,U,3),XPDTRACK=$P(XPD0,U,5)"
^XTMP("XPDT",7596,"RTN","XPDDP1",26,0)=" W:$E(IOST,1,2)=""C-"" @IOF D HDR W !,XPDUL"
^XTMP("XPDT",7596,"RTN","XPDDP1",27,0)=" W !,""TYPE: "",$$EXTERNAL^DILFD(9.6,2,"""",XPDTYPE)"
^XTMP("XPDT",7596,"RTN","XPDDP1",28,0)=" W ?51,""TRACK NATIONALLY: "",$$EXTERNAL^DILFD(9.6,5,"""",XPDTRACK)"
^XTMP("XPDT",7596,"RTN","XPDDP1",29,0)=" W !,""NATIONAL PACKAGE: "",$P($G(^DIC(9.4,+$P(XPD0,U,2),0),$P(XPD0,U,2)),U)"
^XTMP("XPDT",7596,"RTN","XPDDP1",30,0)=" W ?49,""ALPHA/BETA TESTING: "",$S($P($G(@XPDGR@(""ABPKG"")),U)=""y"":""YES"",1:""NO"")"
^XTMP("XPDT",7596,"RTN","XPDDP1",31,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",32,0)="DESCR ; Show patch description"
^XTMP("XPDT",7596,"RTN","XPDDP1",33,0)=" W !!,""DESCRIPTION:"""
^XTMP("XPDT",7596,"RTN","XPDDP1",34,0)=" S XPDI=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",35,0)=" F  S XPDI=$O(@XPDGR@(1,XPDI)) Q:'XPDI  S XPDTXT=$G(^(XPDI,0)) D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",36,0)=" . I $L(XPDTXT)'<IOM,$E(XPDTXT,$L(XPDTXT))="" "" F  S XPDTXT=$E(XPDTXT,1,$L(XPDTXT)-1) Q:$E(XPDTXT,$L(XPDTXT))'="" """
^XTMP("XPDT",7596,"RTN","XPDDP1",37,0)=" . F  D  Q:$L(XPDTXT)<IOM!$D(DIRUT)!(IOM<2)  S XPDTXT=$E(XPDTXT,IOM,999)"
^XTMP("XPDT",7596,"RTN","XPDDP1",38,0)=" . . Q:$$CHK(2)"
^XTMP("XPDT",7596,"RTN","XPDDP1",39,0)=" . . W !,$S(IOM>1:$E(XPDTXT,1,IOM-1),1:XPDTXT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",40,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",41,0)="PREPOST ; Environment check and pre/post routines"
^XTMP("XPDT",7596,"RTN","XPDDP1",42,0)=" Q:$$CHK(3)"
^XTMP("XPDT",7596,"RTN","XPDDP1",43,0)=" W !!,""ENVIRONMENT CHECK: "",$G(@XPDGR@(""PRE""))"
^XTMP("XPDT",7596,"RTN","XPDDP1",44,0)=" W ?49,""DELETE ENV ROUTINE: "" I $G(@XPDGR@(""PRE""))]"""" W $S($P($G(@XPDGR@(""INID"")),U)=""y"":""Yes"",1:""No"")"
^XTMP("XPDT",7596,"RTN","XPDDP1",45,0)=" I 'XPDTYPE D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",46,0)=" . Q:$$CHK(2)"
^XTMP("XPDT",7596,"RTN","XPDDP1",47,0)=" . W !,"" PRE-INIT ROUTINE: "",$G(@XPDGR@(""INI""))"
^XTMP("XPDT",7596,"RTN","XPDDP1",48,0)=" . W ?44,""DELETE PRE-INIT ROUTINE: "" I $G(@XPDGR@(""INI""))]"""" W $S($P($G(@XPDGR@(""INID"")),U,3)=""y"":""Yes"",1:""No"")"
^XTMP("XPDT",7596,"RTN","XPDDP1",49,0)=" Q:$$CHK(2)"
^XTMP("XPDT",7596,"RTN","XPDDP1",50,0)=" W !,""POST-INIT ROUTINE: "",$G(@XPDGR@(""INIT""))"
^XTMP("XPDT",7596,"RTN","XPDDP1",51,0)=" W ?43,""DELETE POST-INIT ROUTINE: "" I $G(@XPDGR@(""INIT""))]"""" W $S($P($G(@XPDGR@(""INID"")),U,2)=""y"":""Yes"",1:""No"")"
^XTMP("XPDT",7596,"RTN","XPDDP1",52,0)=" I 'XPDTYPE Q:$$CHK(2)  W !,""PRE-TRANSPORT RTN: "",$G(@XPDGR@(""PRET""))"
^XTMP("XPDT",7596,"RTN","XPDDP1",53,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",54,0)="FILES ; Show files/DDs"
^XTMP("XPDT",7596,"RTN","XPDDP1",55,0)=" Q:'$O(@XPDGR@(4,0))  ; Quit if no files"
^XTMP("XPDT",7596,"RTN","XPDDP1",56,0)=" S I=$$CHK(8,1) Q:I  I '$P(I,""^"",2) D HDR1 W !,XPDUL"
^XTMP("XPDT",7596,"RTN","XPDDP1",57,0)=" S XPDI=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",58,0)=" F  S XPDI=$O(@XPDGR@(4,XPDI)) Q:'XPDI  S XPD=$G(^(XPDI,222)) Q:$$CHK(3,1)  D"
^XTMP("XPDT",7596,"RTN","XPDDP1",59,0)=" . ;file number, file name, partial DD"
^XTMP("XPDT",7596,"RTN","XPDDP1",60,0)=" . W !!,XPDI,?12,$S('XPDFL:$P($G(^DIC(XPDI,0),""**unknown**""),U),1:$G(^XTMP(""XPDI"",XPDA,""FIA"",XPDI)))"
^XTMP("XPDT",7596,"RTN","XPDDP1",61,0)=" . ; update DD, send security code, data comes with file"
^XTMP("XPDT",7596,"RTN","XPDDP1",62,0)=" . W ?43,$$EXTERNAL^DILFD(9.64,222.1,"""",$P(XPD,U)),?49,$$EXTERNAL^DILFD(9.64,222.2,"""",$P(XPD,U,2)),?55,$$EXTERNAL^DILFD(9.64,222.7,"""",$P(XPD,U,7))"
^XTMP("XPDT",7596,"RTN","XPDDP1",63,0)=" . ; override site data, resolve pointers, user override"
^XTMP("XPDT",7596,"RTN","XPDDP1",64,0)=" . W ?63,$E($$EXTERNAL^DILFD(9.64,222.8,"""",$P(XPD,U,8)),1,4),?69,$$EXTERNAL^DILFD(9.64,222.5,"""",$P(XPD,U,5)),?75,$$EXTERNAL^DILFD(9.64,222.9,"""",$P(XPD,U,9))"
^XTMP("XPDT",7596,"RTN","XPDDP1",65,0)=" . I $P(XPD,U,3)=""p"" D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",66,0)=" . . ; Print partial DD information"
^XTMP("XPDT",7596,"RTN","XPDDP1",67,0)=" . . N XPDSUB,XPDFLD"
^XTMP("XPDT",7596,"RTN","XPDDP1",68,0)=" . . Q:$$CHK(2,1)"
^XTMP("XPDT",7596,"RTN","XPDDP1",69,0)=" . . W !,""Partial DD:"""
^XTMP("XPDT",7596,"RTN","XPDDP1",70,0)=" . . S (J,XPDSUB)=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",71,0)=" . . F  S J=$O(@XPDGR@(4,""APDD"",XPDI,J)) Q:'J  D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",72,0)=" . . . I XPDSUB Q:$$CHK(2,1)  W !"
^XTMP("XPDT",7596,"RTN","XPDDP1",73,0)=" . . . W ?12,""subDD: "",J"
^XTMP("XPDT",7596,"RTN","XPDDP1",74,0)=" . . . S XPDSUB=1,(I,XPDFLD)=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",75,0)=" . . . F  S I=$O(@XPDGR@(4,""APDD"",XPDI,J,I)) Q:'I  D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",76,0)=" . . . . I XPDFLD Q:$$CHK(2,1)  W !"
^XTMP("XPDT",7596,"RTN","XPDDP1",77,0)=" . . . . W ?30,""fld: "",I S XPDFLD=1"
^XTMP("XPDT",7596,"RTN","XPDDP1",78,0)=" . I ""  ""'[$G(@XPDGR@(4,XPDI,223)) Q:$$CHK(2,1)  W !,?2,""DD SCREEN  : "",^(223)"
^XTMP("XPDT",7596,"RTN","XPDDP1",79,0)=" . I ""  ""'[$G(@XPDGR@(4,XPDI,224)) Q:$$CHK(2,1)  W !,?2,""DATA SCREEN: "",^(224)"
^XTMP("XPDT",7596,"RTN","XPDDP1",80,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",81,0)="COMP ; Print Build components"
^XTMP("XPDT",7596,"RTN","XPDDP1",82,0)=" S I=0,XPD=$P(^DD(9.68,.03,0),U,3)"
^XTMP("XPDT",7596,"RTN","XPDDP1",83,0)=" F  S I=$O(@XPDGR@(""KRN"",I)) Q:'I  D   Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",84,0)=" . Q:'$D(@XPDGR@(""KRN"",I,""NM"",""B""))"
^XTMP("XPDT",7596,"RTN","XPDDP1",85,0)=" . Q:$$CHK(4)"
^XTMP("XPDT",7596,"RTN","XPDDP1",86,0)=" . W !!,$S($D(^DIC(I,0)):$P(^(0),U),XPDFL:$G(^XTMP(""XPDI"",XPDA,""FIA"",I),""UNKNOWN""),1:""UNKNOWN"")_"":"",?47,""ACTION:"""
^XTMP("XPDT",7596,"RTN","XPDDP1",87,0)=" . S J="""""
^XTMP("XPDT",7596,"RTN","XPDDP1",88,0)=" . F  S J=$O(@XPDGR@(""KRN"",I,""NM"",""B"",J)) Q:J=""""  S X=$O(^(J,0)) D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",89,0)=" . . Q:'X"
^XTMP("XPDT",7596,"RTN","XPDDP1",90,0)=" . . S X=$G(@XPDGR@(""KRN"",I,""NM"",X,0)) Q:X="""""
^XTMP("XPDT",7596,"RTN","XPDDP1",91,0)=" . . Q:$$CHK(2)"
^XTMP("XPDT",7596,"RTN","XPDDP1",92,0)=" . . ;write the entry name and write the action"
^XTMP("XPDT",7596,"RTN","XPDDP1",93,0)=" . . W !,?3,$P(X,U),?50,$P($P(XPD,"";"",$P(X,U,3)+1),"":"",2)"
^XTMP("XPDT",7596,"RTN","XPDDP1",94,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",95,0)="QUESTS ; Show Install Questions"
^XTMP("XPDT",7596,"RTN","XPDDP1",96,0)=" I '$O(@XPDGR@(""QUES"",0)),'($D(@XPDGR@(""QDEF""))#2) Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",97,0)=" Q:$$CHK(6)"
^XTMP("XPDT",7596,"RTN","XPDDP1",98,0)=" W !!,""INSTALL QUESTIONS: """
^XTMP("XPDT",7596,"RTN","XPDDP1",99,0)=" S I=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",100,0)=" F  S I=$O(@XPDGR@(""QUES"",I)) Q:'I  S X=$P(^(I,0),U),J=$G(^(1)),K=$G(^(""A"")) D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",101,0)=" . Q:$$CHK(4)"
^XTMP("XPDT",7596,"RTN","XPDDP1",102,0)=" . W !!?5,""SUBSCRIPT: "",X"
^XTMP("XPDT",7596,"RTN","XPDDP1",103,0)=" . W !,""DIR(0)="",J"
^XTMP("XPDT",7596,"RTN","XPDDP1",104,0)=" . S J=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",105,0)=" . F  S J=$O(@XPDGR@(""QUES"",I,""A1"",J)) Q:'J  Q:$$CHK(2)  W !,""DIR(""""A"""","",J,"")="",^(J,0)"
^XTMP("XPDT",7596,"RTN","XPDDP1",106,0)=" . I K]"""" Q:$$CHK(2)  W !,""DIR(""""A"""")="",K"
^XTMP("XPDT",7596,"RTN","XPDDP1",107,0)=" . I $G(@XPDGR@(""QUES"",I,""B""))]"""" Q:$$CHK(2)  W !,""DIR(""""B"""")="",^(""B"")"
^XTMP("XPDT",7596,"RTN","XPDDP1",108,0)=" . S J=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",109,0)=" . F  S J=$O(@XPDGR@(""QUES"",I,""Q1"",J)) Q:'J  Q:$$CHK(2)  W !,""DIR(""""?"""","",J,"")="",^(J,0)"
^XTMP("XPDT",7596,"RTN","XPDDP1",110,0)=" . I $G(@XPDGR@(""QUES"",I,""Q""))]"""" Q:$$CHK(2)  W !,""DIR(""""?"""")="",^(""Q"")"
^XTMP("XPDT",7596,"RTN","XPDDP1",111,0)=" . I $G(@XPDGR@(""QUES"",I,""QQ""))]"""" Q:$$CHK(2)  W !,""DIR(""""??"""")="",^(""QQ"")"
^XTMP("XPDT",7596,"RTN","XPDDP1",112,0)=" . I $G(@XPDGR@(""QUES"",I,""M""))]"""" Q:$$CHK(2)  W !,""M CODE: "",^(""M"")"
^XTMP("XPDT",7596,"RTN","XPDDP1",113,0)=" Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",114,0)=" ;Show new Defaults for KIDS questions. p463"
^XTMP("XPDT",7596,"RTN","XPDDP1",115,0)=" S X=$G(@XPDGR@(""QDEF"")) Q:X="""""
^XTMP("XPDT",7596,"RTN","XPDDP1",116,0)=" I '$L($P(X,U,9)),'$L($P(X,U,5)),'$L($P(X,U,11)) Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",117,0)=" Q:$$CHK(3)  W !"
^XTMP("XPDT",7596,"RTN","XPDDP1",118,0)=" I $L($P(X,U,9)) Q:$$CHK(2)  W !,"" Default Rebuild Menu Trees Upon Completion of Install: "",$P(X,U,9)"
^XTMP("XPDT",7596,"RTN","XPDDP1",119,0)=" I $L($P(X,U,5)) Q:$$CHK(2)  W !,"" Default INHIBIT LOGONs during the install: "",$P(X,U,5)"
^XTMP("XPDT",7596,"RTN","XPDDP1",120,0)=" I $L($P(X,U,11)) Q:$$CHK(2)  W !,"" Default DISABLE Scheduled Options, Menu Options, and Protocols: "",$P(X,U,11)"
^XTMP("XPDT",7596,"RTN","XPDDP1",121,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",122,0)="ALFABETA ; Alpha/Beta Testing"
^XTMP("XPDT",7596,"RTN","XPDDP1",123,0)=" S XPD=$G(@XPDGR@(""ABPKG"")) Q:XPD="""""
^XTMP("XPDT",7596,"RTN","XPDDP1",124,0)=" Q:$P(XPD,U)'=""y"""
^XTMP("XPDT",7596,"RTN","XPDDP1",125,0)=" Q:$$CHK(4)"
^XTMP("XPDT",7596,"RTN","XPDDP1",126,0)=" W !!,""ALPHA/BETA TESTING: "",$$EXTERNAL^DILFD(9.6,20,"""",$P(XPD,U)),?47,""INSTALLATION MESSAGE: "",$$EXTERNAL^DILFD(9.6,21,"""",$P(XPD,U,2))"
^XTMP("XPDT",7596,"RTN","XPDDP1",127,0)=" W !,""ADDRESS: "",$P(XPD,U,3)"
^XTMP("XPDT",7596,"RTN","XPDDP1",128,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",129,0)="NAMESP ; Namespaces"
^XTMP("XPDT",7596,"RTN","XPDDP1",130,0)=" Q:'$O(@XPDGR@(""ABNS"",0))"
^XTMP("XPDT",7596,"RTN","XPDDP1",131,0)=" Q:$$CHK(4)"
^XTMP("XPDT",7596,"RTN","XPDDP1",132,0)=" W !!,""INCLUDE NAMESPACE:"",?47,""EXCLUDE NAMESPACE:"""
^XTMP("XPDT",7596,"RTN","XPDDP1",133,0)=" S I=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",134,0)=" F  S I=$O(@XPDGR@(""ABNS"",I)) Q:'I  Q:$$CHK(2)  W !?3,^(I,0) D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",135,0)=" . N XPDNMSP,XPDLF"
^XTMP("XPDT",7596,"RTN","XPDDP1",136,0)=" . S (J,XPDLF)=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",137,0)=" . F  S J=$O(@XPDGR@(""ABNS"",I,1,J)) Q:'J  S XPDNMSP=^(J,0) D  Q:$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDDP1",138,0)=" . . I XPDLF Q:$$CHK(2)  W !"
^XTMP("XPDT",7596,"RTN","XPDDP1",139,0)=" . . W ?50,XPDNMSP"
^XTMP("XPDT",7596,"RTN","XPDDP1",140,0)=" . . S XPDLF=1"
^XTMP("XPDT",7596,"RTN","XPDDP1",141,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",142,0)="REQDBLD ; Required Builds"
^XTMP("XPDT",7596,"RTN","XPDDP1",143,0)=" Q:'$O(@XPDGR@(""REQB"",0))"
^XTMP("XPDT",7596,"RTN","XPDDP1",144,0)=" Q:$$CHK(4)"
^XTMP("XPDT",7596,"RTN","XPDDP1",145,0)=" W !!,""REQUIRED BUILDS:"",?47,""ACTION:"""
^XTMP("XPDT",7596,"RTN","XPDDP1",146,0)=" S XPDI=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",147,0)=" F  S XPDI=$O(@XPDGR@(""REQB"",XPDI)) Q:'XPDI  S XPD=$G(^(XPDI,0)) Q:$$CHK(2)  D"
^XTMP("XPDT",7596,"RTN","XPDDP1",148,0)=" . W !?3,$P(XPD,U),?50,$$EXTERNAL^DILFD(9.611,1,"""",$P(XPD,U,2))"
^XTMP("XPDT",7596,"RTN","XPDDP1",149,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",150,0)="GLOBAL ; Global Package"
^XTMP("XPDT",7596,"RTN","XPDDP1",151,0)=" Q:$$CHK(4)"
^XTMP("XPDT",7596,"RTN","XPDDP1",152,0)=" W !!,""GLOBAL:"",?47,""KILL GLOBAL BEFORE INSTALL:"""
^XTMP("XPDT",7596,"RTN","XPDDP1",153,0)=" S XPDI=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",154,0)=" F  S XPDI=$O(@XPDGR@(""GLO"",XPDI)) Q:'XPDI  S XPD=$G(^(XPDI,0)) Q:$$CHK(2)  D"
^XTMP("XPDT",7596,"RTN","XPDDP1",155,0)=" . W !?3,$P(XPD,U),?50,$$EXTERNAL^DILFD(9.65,1,"""",$P(XPD,U,2))"
^XTMP("XPDT",7596,"RTN","XPDDP1",156,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",157,0)="MULT ; Multi-Package"
^XTMP("XPDT",7596,"RTN","XPDDP1",158,0)=" Q:$$CHK(4)"
^XTMP("XPDT",7596,"RTN","XPDDP1",159,0)=" W !!,""SEQUENCE OF BUILDS:"""
^XTMP("XPDT",7596,"RTN","XPDDP1",160,0)=" S XPDI=0"
^XTMP("XPDT",7596,"RTN","XPDDP1",161,0)=" F  S XPDI=$O(@XPDGR@(10,XPDI)) Q:'XPDI  S XPD=$G(^(XPDI,0)) Q:$$CHK(2)  D"
^XTMP("XPDT",7596,"RTN","XPDDP1",162,0)=" . W !?2,XPDI,?8,$E($P(XPD,U),1,44),?54,$S($P(XPD,U,2)=1:"""",1:""Not "")_""Required to Continue"""
^XTMP("XPDT",7596,"RTN","XPDDP1",163,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",164,0)="CHK(Y,XPD) ;Y=excess lines XPD=1 print file header, return 1 to exit"
^XTMP("XPDT",7596,"RTN","XPDDP1",165,0)=" ;return 0 if header was not written, else ""0^1"""
^XTMP("XPDT",7596,"RTN","XPDDP1",166,0)=" Q:$Y<(IOSL-Y) 0"
^XTMP("XPDT",7596,"RTN","XPDDP1",167,0)=" Q:'$$CONT 1"
^XTMP("XPDT",7596,"RTN","XPDDP1",168,0)=" S XPD=$G(XPD),XPDPG=XPDPG+1"
^XTMP("XPDT",7596,"RTN","XPDDP1",169,0)=" W @IOF D HDR,HDR1:XPD"
^XTMP("XPDT",7596,"RTN","XPDDP1",170,0)=" W !,XPDUL"
^XTMP("XPDT",7596,"RTN","XPDDP1",171,0)=" Q ""0^1"""
^XTMP("XPDT",7596,"RTN","XPDDP1",172,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDDP1",173,0)="CONT() ; Press Return to continue; ^ to exit."
^XTMP("XPDT",7596,"RTN","XPDDP1",174,0)=" Q:$D(DIRUT) 0"
^XTMP("XPDT",7596,"RTN","XPDDP1",175,0)=" Q:$E(IOST,1,2)'=""C-"" 1"
^XTMP("XPDT",7596,"RTN","XPDDP1",176,0)=" N DIR,I,J,K,X,Y"
^XTMP("XPDT",7596,"RTN","XPDDP1",177,0)=" S DIR(0)=""E"" D ^DIR"
^XTMP("XPDT",7596,"RTN","XPDDP1",178,0)=" Q Y"
^XTMP("XPDT",7596,"RTN","XPDDP1",179,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDDP1",180,0)="HDR ;"
^XTMP("XPDT",7596,"RTN","XPDDP1",181,0)=" W ""PACKAGE: "",$P(XPD0,U),""     "",XPDDT,?70,$$RJ^XLFSTR(""PAGE ""_XPDPG,9)"
^XTMP("XPDT",7596,"RTN","XPDDP1",182,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDDP1",183,0)="HDR1 ;"
^XTMP("XPDT",7596,"RTN","XPDDP1",184,0)=" W !!,?43,""UP    SEND  DATA                USER"""
^XTMP("XPDT",7596,"RTN","XPDDP1",185,0)=" W !,?43,""DATE  SEC.  COMES   SITE  RSLV  OVER"""
^XTMP("XPDT",7596,"RTN","XPDDP1",186,0)=" W !,""FILE #"",?12,""FILE NAME"",?43,""DD    CODE  W/FILE  DATA  PTRS  RIDE"""
^XTMP("XPDT",7596,"RTN","XPDDP1",187,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDIL")="0^5^B21320112^B31030331"
^XTMP("XPDT",7596,"RTN","XPDIL",1,0)="XPDIL ;SFISC/RSD - load Distribution Global ;05/05/2008"
^XTMP("XPDT",7596,"RTN","XPDIL",2,0)=" ;;8.0;KERNEL;**15,44,58,68,108,422,525**;Jul 10, 1995;Build 10"
^XTMP("XPDT",7596,"RTN","XPDIL",3,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDIL",4,0)="EN1 N POP,XPDA,XPDST,XPDIT,XPDT,XPDGP,XPDQUIT,XPDREQAB,XPDSKPE"
^XTMP("XPDT",7596,"RTN","XPDIL",5,0)=" S:'$D(DT) DT=$$DT^XLFDT S:'$D(U) U=""^"""
^XTMP("XPDT",7596,"RTN","XPDIL",6,0)=" S XPDST=0"
^XTMP("XPDT",7596,"RTN","XPDIL",7,0)=" D ST I $G(XPDQUIT) D ABRTALL^XPDI(1) G NONE"
^XTMP("XPDT",7596,"RTN","XPDIL",8,0)=" ;XPDST= starting Build"
^XTMP("XPDT",7596,"RTN","XPDIL",9,0)=" ;XPDT(""DA"",ien)=seq # to install"
^XTMP("XPDT",7596,"RTN","XPDIL",10,0)=" ;XPDT(""NM"",build name)=seq #"
^XTMP("XPDT",7596,"RTN","XPDIL",11,0)=" ;XPDT(seq #)=ien^Build name"
^XTMP("XPDT",7596,"RTN","XPDIL",12,0)=" ;XPDT(""GP"",global)= 1-replace, 0-overwrite^ien"
^XTMP("XPDT",7596,"RTN","XPDIL",13,0)=" ;XPDGP=globals from a Global Package"
^XTMP("XPDT",7596,"RTN","XPDIL",14,0)=" ;XPDSKPE=1 don't run Environment Check^has question been asked"
^XTMP("XPDT",7596,"RTN","XPDIL",15,0)=" S XPDIT=0,XPDSKPE=""0^0"""
^XTMP("XPDT",7596,"RTN","XPDIL",16,0)=" F  S XPDIT=$O(XPDT(XPDIT)) Q:'XPDIT  S XPDA=+XPDT(XPDIT) D  I '$D(XPDT) Q"
^XTMP("XPDT",7596,"RTN","XPDIL",17,0)=" .;check if this Build has an Envir. Check"
^XTMP("XPDT",7596,"RTN","XPDIL",18,0)=" .I $G(^XTMP(""XPDI"",XPDA,""PRE""))]"""" D  I $G(XPDQUIT) D ABRTALL^XPDI(1) Q"
^XTMP("XPDT",7596,"RTN","XPDIL",19,0)=" ..;quit if we already asked this question"
^XTMP("XPDT",7596,"RTN","XPDIL",20,0)=" ..Q:$P(XPDSKPE,U,2)"
^XTMP("XPDT",7596,"RTN","XPDIL",21,0)=" ..S $P(XPDSKPE,U,2)=1"
^XTMP("XPDT",7596,"RTN","XPDIL",22,0)=" ..N DIR,DIRUT"
^XTMP("XPDT",7596,"RTN","XPDIL",23,0)=" ..S DIR(0)=""Y"",DIR(""A"")=""Want to RUN the Environment Check Routine"",DIR(""B"")=""YES"""
^XTMP("XPDT",7596,"RTN","XPDIL",24,0)=" ..S DIR(""A"",1)=""Build ""_$P(XPDT(XPDIT),U,2)_"" has an Environmental Check Routine"""
^XTMP("XPDT",7596,"RTN","XPDIL",25,0)=" ..D ^DIR I $D(DIRUT) S XPDQUIT=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",26,0)=" ..S:'Y XPDSKPE=""1^1"""
^XTMP("XPDT",7596,"RTN","XPDIL",27,0)=" .D PKG^XPDIL1(XPDA)"
^XTMP("XPDT",7596,"RTN","XPDIL",28,0)=" ;Global Package"
^XTMP("XPDT",7596,"RTN","XPDIL",29,0)=" G:$D(XPDGP) ^XPDIGP"
^XTMP("XPDT",7596,"RTN","XPDIL",30,0)=" I $D(XPDT),$D(^XPD(9.7,+XPDST,0)) W !,""Use INSTALL NAME: "",$P(^(0),U),"" to install this Distribution."",!"
^XTMP("XPDT",7596,"RTN","XPDIL",31,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDIL",32,0)="ST ;global input"
^XTMP("XPDT",7596,"RTN","XPDIL",33,0)=" N DIR,DIRUT,GR,IOP,X,Y,Z,%ZIS"
^XTMP("XPDT",7596,"RTN","XPDIL",34,0)=" G:'$D(^DD(3.5,0)) OPEN"
^XTMP("XPDT",7596,"RTN","XPDIL",35,0)=" I '$D(^%ZIS(1,""B"",""HFS"")) W !!,""You must have a device called 'HFS' in order to load a distribution!"",*7 S XPDQUIT=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",36,0)=" D HOME^%ZIS"
^XTMP("XPDT",7596,"RTN","XPDIL",37,0)=" S DIR(0)=""F^3:75"",DIR(""A"")=""Enter a Host File"",DIR(""?"")=""Enter a filename and/or path to input Distribution."""
^XTMP("XPDT",7596,"RTN","XPDIL",38,0)=" D ^DIR I $D(DIRUT) S XPDQUIT=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",39,0)=" S %ZIS="""",%ZIS(""HFSNAME"")=Y,%ZIS(""HFSMODE"")=""R"",IOP=""HFS"""
^XTMP("XPDT",7596,"RTN","XPDIL",40,0)=" D ^%ZIS I POP W !,""Couldn't open file or HFS device!!"",*7 S XPDQUIT=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",41,0)=" ;don't close device if we have a global package, we need to bring in the globals now"
^XTMP("XPDT",7596,"RTN","XPDIL",42,0)=" D GI,^%ZISC:'$D(XPDGP)!$G(XPDQUIT)"
^XTMP("XPDT",7596,"RTN","XPDIL",43,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDIL",44,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDIL",45,0)=" ;if no device file, Virgin Install"
^XTMP("XPDT",7596,"RTN","XPDIL",46,0)="OPEN ;use open command"
^XTMP("XPDT",7596,"RTN","XPDIL",47,0)=" N IO,IOPAR,DIR,DIRUT,DTOUT,DUOUT"
^XTMP("XPDT",7596,"RTN","XPDIL",48,0)=" S DIR(0)=""F^1:79"",DIR(""A"")=""Device Name"""
^XTMP("XPDT",7596,"RTN","XPDIL",49,0)=" S DIR(""?"",1)=""Device Name is either the name of the HFS file or the name of the HFS Device."",DIR(""?"",2)=""i.e.  for MSM enter  51"",DIR(""?"")=""      for DSM enter  DISK$USER::[ANONYMOUS]:KRN8.KID"""
^XTMP("XPDT",7596,"RTN","XPDIL",50,0)=" D ^DIR I $D(DIRUT) S POP=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",51,0)=" S IO=Y,DIR(0)=""FO^1:79"",DIR(""A"")=""Device Parameters"""
^XTMP("XPDT",7596,"RTN","XPDIL",52,0)=" S DIR(""?"",1)=""Device Parameter is the Open parameter this M operating system needs to"",DIR(""?"",2)=""open the Device Name."",DIR(""?"",3)=""i.e. for MSM enter  (""""B:\KRN8.KID"""":""""R"""")"",DIR(""?"")=""     for DSM enter  READONLY"""
^XTMP("XPDT",7596,"RTN","XPDIL",53,0)=" D ^DIR I $D(DTOUT)!$D(DUOUT) S POP=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",54,0)=" S IOPAR=Y"
^XTMP("XPDT",7596,"RTN","XPDIL",55,0)=" X ""O IO:""_IOPAR_"":10"" E  U $P W !,""Couldn't open "",IO S POP=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",56,0)=" S IO(0)=$P"
^XTMP("XPDT",7596,"RTN","XPDIL",57,0)=" D GI D ^%ZISC"
^XTMP("XPDT",7596,"RTN","XPDIL",58,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDIL",59,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDIL",60,0)="GI N X,XPDSEQ,Y,Z"
^XTMP("XPDT",7596,"RTN","XPDIL",61,0)=" U IO R X:10,Y:10 ;rwf was :0"
^XTMP("XPDT",7596,"RTN","XPDIL",62,0)=" U IO(0) W !!,X,!,""Comment: "",Y"
^XTMP("XPDT",7596,"RTN","XPDIL",63,0)=" S XPDST(""H"")=Y,XPDST(""H1"")=Y_""  ;Created on ""_$P(X,""KIDS Distribution saved on "",2)"
^XTMP("XPDT",7596,"RTN","XPDIL",64,0)=" ;Z is the string of Builds in this file"
^XTMP("XPDT",7596,"RTN","XPDIL",65,0)=" U IO F X=1:1 R Z:1 S Z=$P(Z,""**KIDS**"",2,99) Q:Z=""""  S X(X)=Z"
^XTMP("XPDT",7596,"RTN","XPDIL",66,0)=" U IO(0) I $G(X(1))="""" W !!,""This is not a Distribution HFS File!"" S XPDQUIT=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",67,0)=" ;global package, set XPDGP=flag;global^flag;global^...  flag=1 replace"
^XTMP("XPDT",7596,"RTN","XPDIL",68,0)=" I $P(X(1),"":"")=""GLOBALS"" S XPDGP=$P(X(1),U,2,99),X(1)=$P(X(1),U)"
^XTMP("XPDT",7596,"RTN","XPDIL",69,0)=" S XPDIT=0,X(1)=$P(X(1),"":"",2,99)"
^XTMP("XPDT",7596,"RTN","XPDIL",70,0)=" W !!,""This Distribution contains Transport Globals for the following Package(s):"""
^XTMP("XPDT",7596,"RTN","XPDIL",71,0)=" F X=1:1:X-1 F Z=1:1 S Y=$P(X(X),U,Z) Q:Y=""""  D  Q:$G(XPDQUIT)"
^XTMP("XPDT",7596,"RTN","XPDIL",72,0)=" . ;can't install if global exist, that means Build never finish install"
^XTMP("XPDT",7596,"RTN","XPDIL",73,0)=" . ;INST will show name"
^XTMP("XPDT",7596,"RTN","XPDIL",74,0)=" . S XPDIT=XPDIT+1 I '$$INST^XPDIL1(Y) S XPDQUIT=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",75,0)=" Q:$G(XPDQUIT)"
^XTMP("XPDT",7596,"RTN","XPDIL",76,0)=" W !,""Distribution OK!"",!"
^XTMP("XPDT",7596,"RTN","XPDIL",77,0)=" D:$D(XPDGP) DISP^XPDIGP"
^XTMP("XPDT",7596,"RTN","XPDIL",78,0)=" S DIR(0)=""Y"",DIR(""A"")=""Want to Continue with Load"",DIR(""B"")=""YES"""
^XTMP("XPDT",7596,"RTN","XPDIL",79,0)=" D ^DIR I $D(DIRUT)!'Y S XPDQUIT=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",80,0)=" W !,""Loading Distribution..."",!"
^XTMP("XPDT",7596,"RTN","XPDIL",81,0)=" ;reset expiration date to T+7 on transport global"
^XTMP("XPDT",7596,"RTN","XPDIL",82,0)=" S ^XTMP(""XPDI"",0)=$$FMADD^XLFDT(DT,7)_U_DT"
^XTMP("XPDT",7596,"RTN","XPDIL",83,0)=" ;start reading the HFS again"
^XTMP("XPDT",7596,"RTN","XPDIL",84,0)=" U IO R X:10,Y:10 ;rwf was :0"
^XTMP("XPDT",7596,"RTN","XPDIL",85,0)=" ;the next read must be the INSTALL NAME"
^XTMP("XPDT",7596,"RTN","XPDIL",86,0)=" I X'=""**INSTALL NAME**""!'$D(XPDT(""NM"",Y)) U IO(0) W !!,""ERROR in HFS file format!"" S XPDQUIT=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",87,0)=" ;XPDSEQ is the disk sequence number"
^XTMP("XPDT",7596,"RTN","XPDIL",88,0)=" S %=XPDT(""NM"",Y),GR=""^XTMP(""""XPDI"""",""_+XPDT(%)_"","",XPDSEQ=1"
^XTMP("XPDT",7596,"RTN","XPDIL",89,0)=" ;X=global ref, Y=global value. DIRUT is when user aborts"
^XTMP("XPDT",7596,"RTN","XPDIL",90,0)=" ;rwf next line was :0"
^XTMP("XPDT",7596,"RTN","XPDIL",91,0)=" F  R X:10,Y:10 Q:X=""**END**""  D  I $D(DIRUT) S XPDQUIT=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",92,0)=" .I X=""**INSTALL NAME**"" D  Q"
^XTMP("XPDT",7596,"RTN","XPDIL",93,0)=" ..S %=+$G(XPDT(""NM"",Y)) I '% S DIRUT=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL",94,0)=" ..S GR=""^XTMP(""""XPDI"""",""_+XPDT(%)_"","""
^XTMP("XPDT",7596,"RTN","XPDIL",95,0)=" .S @(GR_X)=Y"
^XTMP("XPDT",7596,"RTN","XPDIL",96,0)=" U IO(0)"
^XTMP("XPDT",7596,"RTN","XPDIL",97,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDIL",98,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDIL",99,0)="NONE W !!,""**NOTHING LOADED**"",!"
^XTMP("XPDT",7596,"RTN","XPDIL",100,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDIL1")="0^4^B36313386^B35935554"
^XTMP("XPDT",7596,"RTN","XPDIL1",1,0)="XPDIL1 ;SFISC/RSD - cont. of load Distribution Global ;05/05/2008"
^XTMP("XPDT",7596,"RTN","XPDIL1",2,0)=" ;;8.0;KERNEL;**15,17,39,41,44,66,68,76,85,100,108,229,525**;Jul 10, 1995;Build 10"
^XTMP("XPDT",7596,"RTN","XPDIL1",3,0)=" ; Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7596,"RTN","XPDIL1",4,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDIL1",5,0)="PKG(XPDA) ;check Package file"
^XTMP("XPDT",7596,"RTN","XPDIL1",6,0)=" N XPD,XPDCP,XPDNM,XPDNOQUE,XPDPKG,X,Y,%"
^XTMP("XPDT",7596,"RTN","XPDIL1",7,0)=" S XPDNM=$P(XPDT(XPDIT),U,2) W !?3,XPDNM"
^XTMP("XPDT",7596,"RTN","XPDIL1",8,0)=" ;check KIDS version against sites version, skip if package is Kernel"
^XTMP("XPDT",7596,"RTN","XPDIL1",9,0)=" I $$PKG^XPDUTL(XPDNM)'[""KERNEL"" D  I $D(XPDQUIT) D ABORT^XPDI(XPDA,1) Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",10,0)=" .;this is part of a Kernel multi package"
^XTMP("XPDT",7596,"RTN","XPDIL1",11,0)=" .Q:$O(XPDT(""NM"",""KERNEL""))[""KERNEL"""
^XTMP("XPDT",7596,"RTN","XPDIL1",12,0)=" .S Y=$G(^XTMP(""XPDI"",XPDA,""VER""))"
^XTMP("XPDT",7596,"RTN","XPDIL1",13,0)=" .I $$VERSION^XPDUTL(""XU"")<Y W !!,""But I need Version "",+Y,"" of KERNEL!""  S XPDQUIT=1"
^XTMP("XPDT",7596,"RTN","XPDIL1",14,0)=" .I $$VERSION^XPDUTL(""VA FILEMAN"")<$P(Y,U,2) W !,""But I Need Version "",+$P(Y,U,2),"" of VA FILEMAN!"" S XPDQUIT=1"
^XTMP("XPDT",7596,"RTN","XPDIL1",15,0)=" ;get national package name"
^XTMP("XPDT",7596,"RTN","XPDIL1",16,0)=" S %=$O(^XTMP(""XPDI"",XPDA,""PKG"",0)),XPDPKG(0)=$G(^(+%,0)),XPDPKG=%"
^XTMP("XPDT",7596,"RTN","XPDIL1",17,0)=" ;XPDPKG=new ien^old ien"
^XTMP("XPDT",7596,"RTN","XPDIL1",18,0)=" I XPDPKG D  S XPDPKG=+Y_U_XPDPKG"
^XTMP("XPDT",7596,"RTN","XPDIL1",19,0)=" .N D,DIC"
^XTMP("XPDT",7596,"RTN","XPDIL1",20,0)=" .S DIC=""^DIC(9.4,"",DIC(0)=""X"",X=$P(XPDPKG(0),U)"
^XTMP("XPDT",7596,"RTN","XPDIL1",21,0)=" .D ^DIC Q:Y>0"
^XTMP("XPDT",7596,"RTN","XPDIL1",22,0)=" .;if lookup fails try C & C2 x-ref"
^XTMP("XPDT",7596,"RTN","XPDIL1",23,0)=" .S X=$P(XPDPKG(0),U,2),DIC(0)=""MX"",D=""C^C2"" D MIX^DIC1"
^XTMP("XPDT",7596,"RTN","XPDIL1",24,0)=" ;add package to Install file"
^XTMP("XPDT",7596,"RTN","XPDIL1",25,0)=" I XPDPKG>0 S XPD(9.7,XPDA_"","",1)=+XPDPKG D FILE^DIE("""",""XPD"")"
^XTMP("XPDT",7596,"RTN","XPDIL1",26,0)=" ;XPDSKPE= does site want to run Environ. Check"
^XTMP("XPDT",7596,"RTN","XPDIL1",27,0)=" I '$G(XPDSKPE) Q:$$ENV(0)=1"
^XTMP("XPDT",7596,"RTN","XPDIL1",28,0)=" ;global package can't have pre or post inits"
^XTMP("XPDT",7596,"RTN","XPDIL1",29,0)=" Q:$D(XPDGP)"
^XTMP("XPDT",7596,"RTN","XPDIL1",30,0)=" ;create pre-init checkpoint"
^XTMP("XPDT",7596,"RTN","XPDIL1",31,0)=" S XPDCP=""INI"" I '$$NEWCP^XPDUTL(""XPD PREINSTALL COMPLETED"") D ABORT^XPDI(XPDA,1) Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",32,0)=" S %=$$INRTN(""INI"")"
^XTMP("XPDT",7596,"RTN","XPDIL1",33,0)=" ;check for routine, use as call back"
^XTMP("XPDT",7596,"RTN","XPDIL1",34,0)=" I $L(%),'$$NEWCP^XPDUTL(""XPD PREINSTALL STARTED"",%) D ABORT^XPDI(XPDA,1) Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",35,0)=" ;create post-init checkpoint"
^XTMP("XPDT",7596,"RTN","XPDIL1",36,0)=" S XPDCP=""INIT"" I '$$NEWCP^XPDUTL(""XPD POSTINSTALL COMPLETED"") D ABORT^XPDI(XPDA,1) Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",37,0)=" S %=$$INRTN(""INIT"")"
^XTMP("XPDT",7596,"RTN","XPDIL1",38,0)=" I $L(%),'$$NEWCP^XPDUTL(""XPD POSTINSTALL STARTED"",%) D ABORT^XPDI(XPDA,1) Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",39,0)=" ;create fileman and components check points and file rest of data"
^XTMP("XPDT",7596,"RTN","XPDIL1",40,0)=" D XPCK^XPDIK(""FIA""),XPCK^XPDIK(""KRN"")"
^XTMP("XPDT",7596,"RTN","XPDIL1",41,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",42,0)="INST(XPDNM) ;add to Install file"
^XTMP("XPDT",7596,"RTN","XPDIL1",43,0)=" N %X,DIC,DIR,DIRUT,DLAYGO,X,XPD,XPDA,XPDIE,XPDDIQ,Y,SH"
^XTMP("XPDT",7596,"RTN","XPDIL1",44,0)=" ;check if Build was already installed"
^XTMP("XPDT",7596,"RTN","XPDIL1",45,0)=" ;XPD=0 abort install, else XPD=ien in Install file"
^XTMP("XPDT",7596,"RTN","XPDIL1",46,0)=" I $D(^XPD(9.7,""B"",XPDNM)) S (SH,Y)=0 D  Q:$D(XPD) XPD"
^XTMP("XPDT",7596,"RTN","XPDIL1",47,0)=" . W !,""Build "",XPDNM,"" has been loaded before, here is when: """
^XTMP("XPDT",7596,"RTN","XPDIL1",48,0)=" . F  S Y=$O(^XPD(9.7,""B"",XPDNM,Y)) Q:'Y  D"
^XTMP("XPDT",7596,"RTN","XPDIL1",49,0)=" .. Q:'$D(^XPD(9.7,Y,0))  S %=^(0)"
^XTMP("XPDT",7596,"RTN","XPDIL1",50,0)=" .. W !?6,$P(%,U),""   """
^XTMP("XPDT",7596,"RTN","XPDIL1",51,0)=" .. I $P(%,U,9)<3,$D(^XTMP(""XPDI"",Y)) W ""**Transport Global already exists**"",*7 S XPD=0 Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",52,0)=" .. S %X=$X W $$EXTERNAL^DILFD(9.7,.02,"""",$P(%,U,9)),!?%X,""was loaded on "",$$FMTE^XLFDT($P($G(^XPD(9.7,Y,1)),U))"
^XTMP("XPDT",7596,"RTN","XPDIL1",53,0)=" . ;quit if transport global exist"
^XTMP("XPDT",7596,"RTN","XPDIL1",54,0)=" . Q:$D(XPD)"
^XTMP("XPDT",7596,"RTN","XPDIL1",55,0)=" . S DIR(0)=""Y"",DIR(""A"")=""OK to continue with Load"",DIR(""B"")=""NO"""
^XTMP("XPDT",7596,"RTN","XPDIL1",56,0)=" . D ^DIR W ! I $D(DIRUT)!'Y S XPD=0 Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",57,0)=" S DIC=""^XPD(9.7,"",DIC(0)=""XL"",DLAYGO=9.7,X=""""""""_XPDNM_"""""""""
^XTMP("XPDT",7596,"RTN","XPDIL1",58,0)=" ;add to Install file, must be new"
^XTMP("XPDT",7596,"RTN","XPDIL1",59,0)=" D ^DIC"
^XTMP("XPDT",7596,"RTN","XPDIL1",60,0)=" I Y<0 S SH=0 W !,""Can't add Build "",XPDNM,"" to Install File"" Q 0"
^XTMP("XPDT",7596,"RTN","XPDIL1",61,0)=" ;set starting package to Y, if it is not already defined"
^XTMP("XPDT",7596,"RTN","XPDIL1",62,0)=" S:'XPDST XPDST=+Y"
^XTMP("XPDT",7596,"RTN","XPDIL1",63,0)=" ;XPDT array keeps track of all packages in this distribution"
^XTMP("XPDT",7596,"RTN","XPDIL1",64,0)=" S XPDA=+Y,XPDT(XPDIT)=XPDA_U_XPDNM,(XPDT(""DA"",XPDA),XPDT(""NM"",XPDNM))=XPDIT"
^XTMP("XPDT",7596,"RTN","XPDIL1",65,0)=" S %=""XPDIE(9.7,""""""_XPDA_"","""")"",@%@(.02)=0,@%@(2)=$$NOW^XLFDT,@%@(3)=XPDST,@%@(4)=XPDIT,@%@(5)="""",@%@(6)=XPDST(""H1"")"
^XTMP("XPDT",7596,"RTN","XPDIL1",66,0)=" D FILE^DIE("""",""XPDIE"")"
^XTMP("XPDT",7596,"RTN","XPDIL1",67,0)=" I '$D(SH) W !?3,XPDNM ;SH is set when some other part of INST shows the name"
^XTMP("XPDT",7596,"RTN","XPDIL1",68,0)=" Q XPDA"
^XTMP("XPDT",7596,"RTN","XPDIL1",69,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDIL1",70,0)=" ;XPDQUIT quit current package install, 1=kill global, 2=leave global"
^XTMP("XPDT",7596,"RTN","XPDIL1",71,0)=" ;XPDQUIT(package) quit package install, 1=kill, 2=leave"
^XTMP("XPDT",7596,"RTN","XPDIL1",72,0)=" ;XPDABORT quit the entire distribution, 1=kill, 2=leave"
^XTMP("XPDT",7596,"RTN","XPDIL1",73,0)=" ;XPDENV 0=loading distribution, 1=installing"
^XTMP("XPDT",7596,"RTN","XPDIL1",74,0)="ENV(XPDENV) ;environment check & version check"
^XTMP("XPDT",7596,"RTN","XPDIL1",75,0)=" ;returns 0=ok, 1=rejected kill global, 2=rejected leave global"
^XTMP("XPDT",7596,"RTN","XPDIL1",76,0)=" N %,DIR,XPDI,XPDQUIT,XPDABORT,XPDDONE,XPDGREF,XPDMBREQ"
^XTMP("XPDT",7596,"RTN","XPDIL1",77,0)=" M X=DUZ N DUZ M DUZ=X S DUZ(0)=""@"" ;See that ENV check has full FM priv."
^XTMP("XPDT",7596,"RTN","XPDIL1",78,0)=" S XPDGREF=""^XTMP(""""XPDI"""",""_XPDA_"",""""TEMP"""")"""
^XTMP("XPDT",7596,"RTN","XPDIL1",79,0)=" S XPDMBREQ=$G(^XTMP(""XPDI"",XPDA,""MBREQ""))"
^XTMP("XPDT",7596,"RTN","XPDIL1",80,0)=" S $P(^XPD(9.7,XPDA,0),U,7)=XPDMBREQ"
^XTMP("XPDT",7596,"RTN","XPDIL1",81,0)=" ;check version number"
^XTMP("XPDT",7596,"RTN","XPDIL1",82,0)=" I XPDPKG>0 D  I $G(XPDQUIT) D ABORT^XPDI(XPDA,1) Q 1"
^XTMP("XPDT",7596,"RTN","XPDIL1",83,0)=" .N DIR,DIRUT,X,Y"
^XTMP("XPDT",7596,"RTN","XPDIL1",84,0)=" .S %=+$$VER^XPDUTL(XPDNM),Y=+$G(^DIC(9.4,+XPDPKG,""VERSION"")),X=XPDNM[""*"""
^XTMP("XPDT",7596,"RTN","XPDIL1",85,0)=" .;if patch, version must be the same"
^XTMP("XPDT",7596,"RTN","XPDIL1",86,0)=" .I X,%'=Y W !,""This Patch is for Version "",%,"", you are running Version "",Y,! S XPDQUIT=1"
^XTMP("XPDT",7596,"RTN","XPDIL1",87,0)=" .;if package, version must be greater or equal"
^XTMP("XPDT",7596,"RTN","XPDIL1",88,0)=" .I 'X,%<Y W !,""You have a Version greater than mine!"",! S XPDQUIT=1"
^XTMP("XPDT",7596,"RTN","XPDIL1",89,0)=" .Q:'$G(XPDQUIT)"
^XTMP("XPDT",7596,"RTN","XPDIL1",90,0)=" .I $G(XPDMBREQ) D  S XPDQUIT=0,XPDDONE=1 Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",91,0)=" . . D MES^XPDUTL(""**ABORT** Required Build ""_XPDNM_"", did not pass internal KIDS checks!""),ABRTALL^XPDI(1),NONE^XPDI"
^XTMP("XPDT",7596,"RTN","XPDIL1",92,0)=" . . Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",93,0)=" .S DIR(0)=""Y"",DIR(""A"")=""Want to continue installing this build"",DIR(""B"")=""NO"""
^XTMP("XPDT",7596,"RTN","XPDIL1",94,0)=" .D ^DIR I Y K XPDQUIT"
^XTMP("XPDT",7596,"RTN","XPDIL1",95,0)=" .Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",96,0)=" Q:$G(XPDDONE) 1"
^XTMP("XPDT",7596,"RTN","XPDIL1",97,0)=" S %=$$REQB I % S (XPDABORT,XPDREQAB)=% G ABORT"
^XTMP("XPDT",7596,"RTN","XPDIL1",98,0)=" S %=$G(^XTMP(""XPDI"",XPDA,""PRE"")) D:%]"""""
^XTMP("XPDT",7596,"RTN","XPDIL1",99,0)=" .W !,""Will first run the Environment Check Routine, "",%,!"
^XTMP("XPDT",7596,"RTN","XPDIL1",100,0)=" .D SAVE^XPDIJ(%),@(""^""_%)"
^XTMP("XPDT",7596,"RTN","XPDIL1",101,0)="ABORT I $G(XPDABORT) D  Q XPDABORT"
^XTMP("XPDT",7596,"RTN","XPDIL1",102,0)=" .;if during load & leave global quit"
^XTMP("XPDT",7596,"RTN","XPDIL1",103,0)=" .I 'XPDENV,XPDABORT=2 Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",104,0)=" .D ABRTALL^XPDI(XPDABORT)"
^XTMP("XPDT",7596,"RTN","XPDIL1",105,0)=" Q:'$D(XPDQUIT) 0"
^XTMP("XPDT",7596,"RTN","XPDIL1",106,0)=" I $G(XPDQUIT) D ABORT^XPDI(XPDA,XPDQUIT)"
^XTMP("XPDT",7596,"RTN","XPDIL1",107,0)=" S XPDI="""""
^XTMP("XPDT",7596,"RTN","XPDIL1",108,0)=" ;don't do if loading & leave global, need to keep XPDT(array)"
^XTMP("XPDT",7596,"RTN","XPDIL1",109,0)=" F  S XPDI=$O(XPDQUIT(XPDI)) Q:XPDI=""""  D:'(XPDQUIT(XPDI)=2&'XPDENV)"
^XTMP("XPDT",7596,"RTN","XPDIL1",110,0)=" .S %=$G(XPDT(""NM"",XPDI)) D:% ABORT^XPDI(+XPDT(%),XPDQUIT(XPDI))"
^XTMP("XPDT",7596,"RTN","XPDIL1",111,0)=" S XPDQUIT=$S($G(XPDQUIT):XPDQUIT,'$O(XPDT(0))!'$D(^XTMP(""XPDI"",XPDA)):1,1:0)"
^XTMP("XPDT",7596,"RTN","XPDIL1",112,0)=" Q XPDQUIT"
^XTMP("XPDT",7596,"RTN","XPDIL1",113,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDIL1",114,0)="REQB() ;check for Required Builds"
^XTMP("XPDT",7596,"RTN","XPDIL1",115,0)=" ;returns 0=ok, 1=failed kill global, 2=failed leave global"
^XTMP("XPDT",7596,"RTN","XPDIL1",116,0)=" N XPDACT,XPDBLD,XPDI,XPDQ,XPDQUIT,XPDX,XPDX0,X,Y"
^XTMP("XPDT",7596,"RTN","XPDIL1",117,0)=" S XPDBLD=$O(^XTMP(""XPDI"",XPDA,""BLD"",0)),XPDQUIT=0,XPDI=0"
^XTMP("XPDT",7596,"RTN","XPDIL1",118,0)=" Q:'$D(^XTMP(""XPDI"",XPDA,""BLD"",XPDBLD,""REQB"")) 0"
^XTMP("XPDT",7596,"RTN","XPDIL1",119,0)=" F  S XPDI=$O(^XTMP(""XPDI"",XPDA,""BLD"",XPDBLD,""REQB"",XPDI)) Q:'XPDI  S XPDX0=^(XPDI,0) D"
^XTMP("XPDT",7596,"RTN","XPDIL1",120,0)=" .S XPDQ=0,XPDX=$P(XPDX0,U),XPDACT=$P(XPDX0,U,2),X=$$PKG^XPDUTL(XPDX),Y=$$VER^XPDUTL(XPDX),Z=$$VERSION^XPDUTL(X)"
^XTMP("XPDT",7596,"RTN","XPDIL1",121,0)=" .;quit if current version is greater than what we are checking for"
^XTMP("XPDT",7596,"RTN","XPDIL1",122,0)=" .Q:Z>Y"
^XTMP("XPDT",7596,"RTN","XPDIL1",123,0)=" .I XPDX'[""*"" S:Z<Y XPDQ=2"
^XTMP("XPDT",7596,"RTN","XPDIL1",124,0)=" .E  S:'$$PATCH^XPDUTL(XPDX) XPDQ=1"
^XTMP("XPDT",7596,"RTN","XPDIL1",125,0)=" .;quit if patch is already on system"
^XTMP("XPDT",7596,"RTN","XPDIL1",126,0)=" .Q:'XPDQ"
^XTMP("XPDT",7596,"RTN","XPDIL1",127,0)=" .;quit if patch is sequenced prior within this build "
^XTMP("XPDT",7596,"RTN","XPDIL1",128,0)=" .I $D(XPDT(""NM"",XPDX)),(XPDT(""NM"",XPDX)<XPDT(""NM"",XPDNM)) S XPDQ=0 Q"
^XTMP("XPDT",7596,"RTN","XPDIL1",129,0)=" .S XPDQUIT=$S(XPDACT>XPDQUIT:XPDACT,1:XPDQUIT)"
^XTMP("XPDT",7596,"RTN","XPDIL1",130,0)=" .;XPDACT=0 warning, =1 abort & kill global, =2 abort"
^XTMP("XPDT",7596,"RTN","XPDIL1",131,0)=" .W !!,$S(XPDACT:""**INSTALL ABORTED**"",1:""**WARNING**"")_$S(XPDQ=1:"" Patch "",1:"" Package "")_XPDX_"" is Required ""_$S(XPDACT:""to install"",1:""for"")_"" this package!!"",!"
^XTMP("XPDT",7596,"RTN","XPDIL1",132,0)=" Q:'XPDQUIT 0"
^XTMP("XPDT",7596,"RTN","XPDIL1",133,0)=" ;don't do if leave global and loading"
^XTMP("XPDT",7596,"RTN","XPDIL1",134,0)=" D:'(XPDQUIT=2&'XPDENV) ABORT^XPDI(XPDA,XPDQUIT)"
^XTMP("XPDT",7596,"RTN","XPDIL1",135,0)=" Q XPDQUIT"
^XTMP("XPDT",7596,"RTN","XPDIL1",136,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDIL1",137,0)=" ;return a routine that can be run"
^XTMP("XPDT",7596,"RTN","XPDIL1",138,0)="INRTN(X) N Y"
^XTMP("XPDT",7596,"RTN","XPDIL1",139,0)=" S Y=$G(^XTMP(""XPDI"",XPDA,X)) Q:Y="""" """""
^XTMP("XPDT",7596,"RTN","XPDIL1",140,0)=" S Y=$S(Y[""^"":Y,1:""^""_Y)"
^XTMP("XPDT",7596,"RTN","XPDIL1",141,0)=" Q Y"
^XTMP("XPDT",7596,"RTN","XPDV")="0^3^B38720817^B37369398"
^XTMP("XPDT",7596,"RTN","XPDV",1,0)="XPDV ;SFISC/RSD - Verify Build ;10/15/2008"
^XTMP("XPDT",7596,"RTN","XPDV",2,0)=" ;;8.0;KERNEL;**30,44,58,108,511,525**;Jul 10, 1995;Build 10"
^XTMP("XPDT",7596,"RTN","XPDV",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7596,"RTN","XPDV",4,0)=" ;checks that everything is ready to do a build"
^XTMP("XPDT",7596,"RTN","XPDV",5,0)=" ;XPDA=build ien, loop thru all nodes in ^XPD(9.6,XPDA and verify data"
^XTMP("XPDT",7596,"RTN","XPDV",6,0)="EN ;check a build"
^XTMP("XPDT",7596,"RTN","XPDV",7,0)=" N DA,ERR,FGR,TYPE,XPDFILE,XPDOLDA,Y0,Y2 K ^TMP($J)"
^XTMP("XPDT",7596,"RTN","XPDV",8,0)=" S Y0=$G(^XPD(9.6,XPDA,0)),TYPE=$P(Y0,U,3)"
^XTMP("XPDT",7596,"RTN","XPDV",9,0)=" I $P(Y0,U,2)="""" W !,""No Package File Link"""
^XTMP("XPDT",7596,"RTN","XPDV",10,0)=" I '$P(Y0,U,2) W !,$P(Y0,U,2),"" in Package File Link field is freetext, not a pointer"""
^XTMP("XPDT",7596,"RTN","XPDV",11,0)=" I $P(Y0,U,2),'$D(^DIC(9.4,$P(Y0,U,2),0)) W !,$P(Y0,U,2),"" in PACKAGE File  ** NOT FOUND **"",*7"
^XTMP("XPDT",7596,"RTN","XPDV",12,0)=" ;type is global package goto CONT"
^XTMP("XPDT",7596,"RTN","XPDV",13,0)=" G CONT:TYPE=2"
^XTMP("XPDT",7596,"RTN","XPDV",14,0)=" I TYPE=1 S Y0=$$MULT(XPDA) G DONE"
^XTMP("XPDT",7596,"RTN","XPDV",15,0)=" S XPDFILE=0"
^XTMP("XPDT",7596,"RTN","XPDV",16,0)=" ;check DD being sent"
^XTMP("XPDT",7596,"RTN","XPDV",17,0)=" F  S XPDFILE=$O(^XPD(9.6,XPDA,4,XPDFILE)) Q:'XPDFILE  D"
^XTMP("XPDT",7596,"RTN","XPDV",18,0)=" .Q:$$FILE(XPDFILE)="""""
^XTMP("XPDT",7596,"RTN","XPDV",19,0)=" .S Y0=0,Y2=$G(^XPD(9.6,XPDA,4,XPDFILE,222))"
^XTMP("XPDT",7596,"RTN","XPDV",20,0)=" .Q:'$$DATA(XPDFILE,Y2)"
^XTMP("XPDT",7596,"RTN","XPDV",21,0)=" .F  S Y0=$O(^XPD(9.6,XPDA,4,XPDFILE,2,Y0)) Q:'Y0  D"
^XTMP("XPDT",7596,"RTN","XPDV",22,0)=" ..I '$D(^DD(Y0)) W !,"" SubDD #"",Y0,"" in File #"",XPDFILE,""  ** NOT FOUND **"" Q"
^XTMP("XPDT",7596,"RTN","XPDV",23,0)=" ..S XPDOLDA=0"
^XTMP("XPDT",7596,"RTN","XPDV",24,0)=" ..;check fields being sent for partial DD"
^XTMP("XPDT",7596,"RTN","XPDV",25,0)=" ..F  S XPDOLDA=$O(^XPD(9.6,XPDA,4,XPDFILE,2,Y0,1,XPDOLDA)) Q:'XPDOLDA  D"
^XTMP("XPDT",7596,"RTN","XPDV",26,0)=" ...I '$D(^DD(Y0,XPDOLDA)) W !,""Field #"",XPDOLDA,"" in SubDD #"",Y0,"" in File #"",XPDFILE,""  ** NOT FOUND **"" Q"
^XTMP("XPDT",7596,"RTN","XPDV",27,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDV",28,0)=" ;build components files"
^XTMP("XPDT",7596,"RTN","XPDV",29,0)=" S XPDFILE=0"
^XTMP("XPDT",7596,"RTN","XPDV",30,0)=" F  S XPDFILE=$O(^XPD(9.6,XPDA,""KRN"",XPDFILE)) Q:'XPDFILE  D"
^XTMP("XPDT",7596,"RTN","XPDV",31,0)=" .;if file doesn't exist, save in ^TMP and deleted at end"
^XTMP("XPDT",7596,"RTN","XPDV",32,0)=" .S FGR=$$FILE(XPDFILE),XPDOLDA=0 I FGR="""" S ^TMP($J,XPDFILE)="""" Q"
^XTMP("XPDT",7596,"RTN","XPDV",33,0)=" .F  S XPDOLDA=$O(^XPD(9.6,XPDA,""KRN"",XPDFILE,""NM"",XPDOLDA)) Q:'XPDOLDA  S Y0=$G(^(XPDOLDA,0)) D"
^XTMP("XPDT",7596,"RTN","XPDV",34,0)=" ..;check action, quit if deleting at site"
^XTMP("XPDT",7596,"RTN","XPDV",35,0)=" ..Q:$P(Y0,U,3)=1"
^XTMP("XPDT",7596,"RTN","XPDV",36,0)=" ..;check that entry exist"
^XTMP("XPDT",7596,"RTN","XPDV",37,0)=" ..S:$P(Y0,U,2) $P(Y0,U)=$P(Y0,""    FILE #"") S DA=$$ENTRY(Y0)"
^XTMP("XPDT",7596,"RTN","XPDV",38,0)=" ..Q:'$P(Y0,U,3)!($P(Y0,U,3)#2)"
^XTMP("XPDT",7596,"RTN","XPDV",39,0)=" ..;if attach check that parent is sent, if link check that child is sent"
^XTMP("XPDT",7596,"RTN","XPDV",40,0)=" ..Q:'$$MENU(XPDFILE,DA,$P(Y0,U,3))"
^XTMP("XPDT",7596,"RTN","XPDV",41,0)=" ;check Install Questions"
^XTMP("XPDT",7596,"RTN","XPDV",42,0)=" S XPDOLDA=0"
^XTMP("XPDT",7596,"RTN","XPDV",43,0)=" F  S XPDOLDA=$O(^XPD(9.6,XPDA,""QUES"",XPDOLDA)) Q:'XPDOLDA  S Y0=$G(^(XPDOLDA,0)),Y2=$G(^(1)) D"
^XTMP("XPDT",7596,"RTN","XPDV",44,0)=" .I $P(Y0,U)="""" W !,""Zero node doesn't exist for INSTALL QUESTION #"",XPDOLDA Q"
^XTMP("XPDT",7596,"RTN","XPDV",45,0)=" .I Y2="""" W !,""DIR(0) field is not defined for INSTALL QUESTION "",$P(Y0,U)"
^XTMP("XPDT",7596,"RTN","XPDV",46,0)=" I $O(^XPD(9.6,XPDA,""GLO"",0)) W !,""Package cannot contain Globals, Files, & Components."""
^XTMP("XPDT",7596,"RTN","XPDV",47,0)=" ;check for PRE & POST routines"
^XTMP("XPDT",7596,"RTN","XPDV",48,0)=" F DA=""INI"",""INIT"" S Y0=$G(^XPD(9.6,XPDA,DA)),ERR="""" I Y0]"""",'$$RTN(Y0,.ERR) W !,""Routine "",Y0,ERR"
^XTMP("XPDT",7596,"RTN","XPDV",49,0)="CONT ;"
^XTMP("XPDT",7596,"RTN","XPDV",50,0)=" ;check Environment Check routine"
^XTMP("XPDT",7596,"RTN","XPDV",51,0)=" S Y0=$G(^XPD(9.6,XPDA,""PRE"")),ERR="""" I Y0]"""",'$$RTN(Y0,.ERR) W !,""Routine "",Y0,ERR"
^XTMP("XPDT",7596,"RTN","XPDV",52,0)=" I TYPE=2 S Y0=$$GLOPKG(XPDA)"
^XTMP("XPDT",7596,"RTN","XPDV",53,0)="DONE I $O(^TMP($J,0)) D"
^XTMP("XPDT",7596,"RTN","XPDV",54,0)=" .N DA,DIK,DIR,DIRUT,Y"
^XTMP("XPDT",7596,"RTN","XPDV",55,0)=" .S DIR(0)=""Y"",DIR(""A"")=""Do you want to remove the missing Files"",DIR(""B"")=""NO"""
^XTMP("XPDT",7596,"RTN","XPDV",56,0)=" .S DIR(""?"")=""Yes means that the missing Files will be removed and you can transport this Build"""
^XTMP("XPDT",7596,"RTN","XPDV",57,0)=" .D ^DIR Q:'Y!$D(DIRUT)"
^XTMP("XPDT",7596,"RTN","XPDV",58,0)=" .S DIK=""^XPD(9.6,""_XPDA_"",""""KRN"""","",DA(1)=XPDA,DA=0 F  S DA=$O(^TMP($J,DA)) Q:'DA  D ^DIK"
^XTMP("XPDT",7596,"RTN","XPDV",59,0)=" W !!,""  ** DONE **"""
^XTMP("XPDT",7596,"RTN","XPDV",60,0)=" Q"
^XTMP("XPDT",7596,"RTN","XPDV",61,0)="GLOPKG(X) ;GLOBAL PACKAGE"
^XTMP("XPDT",7596,"RTN","XPDV",62,0)=" ;returns 1 if ok, 0 if failed"
^XTMP("XPDT",7596,"RTN","XPDV",63,0)=" N I,J,Y,Z S Z=1"
^XTMP("XPDT",7596,"RTN","XPDV",64,0)=" I $O(^XPD(9.6,X,4,0)) W !,""GLOBAL PACKAGE cannot contain Files"" S Z=0"
^XTMP("XPDT",7596,"RTN","XPDV",65,0)=" S I=0 F  S I=$O(^XPD(9.6,X,""KRN"",I)) Q:'I  D:$O(^(I,""NM"",0))"
^XTMP("XPDT",7596,"RTN","XPDV",66,0)=" .W !,""GLOBAL PACKAGE cannot contain "",$P(^DIC(I,0),U) S Z=0"
^XTMP("XPDT",7596,"RTN","XPDV",67,0)=" I $O(^XPD(9.6,X,""QUES"",0)) W !,""GLOBAL PACKAGE cannot contain Install Questions"" S Z=0"
^XTMP("XPDT",7596,"RTN","XPDV",68,0)=" I $G(^XPD(9.6,X,""INI""))]"""" W !,""GLOBAL PACKAGE cannot have a Pre-Install Routine"" S Z=0"
^XTMP("XPDT",7596,"RTN","XPDV",69,0)=" ;I $G(^XPD(9.6,X,""INIT""))]"""" W !,""GLOBAL PACKAGE cannot have a Post-Install Routine"" S Z=0"
^XTMP("XPDT",7596,"RTN","XPDV",70,0)=" S I=0 F J=0:1 S I=$O(^XPD(9.6,X,""GLO"",I)) Q:'I  S Y=$G(^(I,0)) D"
^XTMP("XPDT",7596,"RTN","XPDV",71,0)=" .I $P(Y,U)]"""",'$D(@(""^""_$P(Y,U))) W !,""Global "",Y,"" doesn't exist."" S Z=0"
^XTMP("XPDT",7596,"RTN","XPDV",72,0)=" I 'J W !,""No Globals to transport"" S Z=0"
^XTMP("XPDT",7596,"RTN","XPDV",73,0)=" Q Z"
^XTMP("XPDT",7596,"RTN","XPDV",74,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDV",75,0)="QUES(X) ;X=.01 of INSTALL QUESTION multiple"
^XTMP("XPDT",7596,"RTN","XPDV",76,0)=" ;returns ien or 0 if failed"
^XTMP("XPDT",7596,"RTN","XPDV",77,0)=" N Y"
^XTMP("XPDT",7596,"RTN","XPDV",78,0)=" S Y=+$O(^XPD(9.6,XPDA,""QUES"",""B"",X,0))"
^XTMP("XPDT",7596,"RTN","XPDV",79,0)=" I '$D(^XPD(9.6,XPDA,""QUES"",Y,0)) W !,""Zero node doesn't exist for INSTALL QUESTION "",X Q 0"
^XTMP("XPDT",7596,"RTN","XPDV",80,0)=" I '$D(^XPD(9.6,XPDA,""QUES"",Y,1)) W !,""DIR(0) field is not defined for INSTALL QUESTION "",X Q 0"
^XTMP("XPDT",7596,"RTN","XPDV",81,0)=" Q Y"
^XTMP("XPDT",7596,"RTN","XPDV",82,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDV",83,0)="FILE(X) ;check file # X"
^XTMP("XPDT",7596,"RTN","XPDV",84,0)=" ;returns global ref or """" if failed"
^XTMP("XPDT",7596,"RTN","XPDV",85,0)=" N %,Y"
^XTMP("XPDT",7596,"RTN","XPDV",86,0)=" S Y=$G(^DIC(X,0,""GL""))"
^XTMP("XPDT",7596,"RTN","XPDV",87,0)=" I Y="""" W !,"" File #"",X,""  ** NOT FOUND **"" Q """""
^XTMP("XPDT",7596,"RTN","XPDV",88,0)=" S %=$E(Y,$L(Y)),X=$E(Y,1,$L(Y)-1)_$S(%=""("":"""",1:"")"")"
^XTMP("XPDT",7596,"RTN","XPDV",89,0)=" Q X"
^XTMP("XPDT",7596,"RTN","XPDV",90,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDV",91,0)=" ;Z only contains the file # for Fileman templates and forms"
^XTMP("XPDT",7596,"RTN","XPDV",92,0)=" ;XPDFILE=file #,FGR=file global ref"
^XTMP("XPDT",7596,"RTN","XPDV",93,0)="ENTRY(Z) ;check entry, Z=name^file"
^XTMP("XPDT",7596,"RTN","XPDV",94,0)=" ;returns ien or 0 if failed"
^XTMP("XPDT",7596,"RTN","XPDV",95,0)=" N F,X,Y"
^XTMP("XPDT",7596,"RTN","XPDV",96,0)=" ;check for X, name, in ""B"" x-ref of file."
^XTMP("XPDT",7596,"RTN","XPDV",97,0)=" S X=$P(Z,U),Y=0 F  S Y=$O(@FGR@(""B"",X,Y)) D  Q:X="""""
^XTMP("XPDT",7596,"RTN","XPDV",98,0)=" .I 'Y W !?3,X,""  in "",$P(^DIC(XPDFILE,0),U),"" File   ** NOT FOUND **"",*7 S X="""" Q"
^XTMP("XPDT",7596,"RTN","XPDV",99,0)=" .;if Y is in x-ref but node doesn't exist, quit and try another"
^XTMP("XPDT",7596,"RTN","XPDV",100,0)=" .;if this is a fileman template, the file associated with it is piece 2 of Z"
^XTMP("XPDT",7596,"RTN","XPDV",101,0)=" .;if Form file check piece 8 else 4"
^XTMP("XPDT",7596,"RTN","XPDV",102,0)=" .Q:'$D(@FGR@(Y,0))  I $P(Z,U,2) S F=^(0) S:$P(Z,U,2)=$P(F,U,(4+(4*(FGR[""DIST"")))) X="""" Q"
^XTMP("XPDT",7596,"RTN","XPDV",103,0)=" .;if it is routine file,9.8, check that routine exist"
^XTMP("XPDT",7596,"RTN","XPDV",104,0)=" .I XPDFILE=9.8 S F="""" I '$$RTN(X,.F) W !,""Routine "",X,F S X="""",Y=0 Q"
^XTMP("XPDT",7596,"RTN","XPDV",105,0)=" .;if this is not a fileman template or routine we found Y"
^XTMP("XPDT",7596,"RTN","XPDV",106,0)=" .S X="""" Q"
^XTMP("XPDT",7596,"RTN","XPDV",107,0)=" Q +Y"
^XTMP("XPDT",7596,"RTN","XPDV",108,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDV",109,0)="DATA(F,Y) ;"
^XTMP("XPDT",7596,"RTN","XPDV",110,0)=" ;return 1 if ok or 0 if failed"
^XTMP("XPDT",7596,"RTN","XPDV",111,0)=" I $P(Y,U,3)=""p"",$P(Y,U,7)=""y"" W !,""You can only send Data with a Full Data Dictionary,"",!,""** File #"",F,"" cannot be Sent **"" Q 0"
^XTMP("XPDT",7596,"RTN","XPDV",112,0)=" Q 1"
^XTMP("XPDT",7596,"RTN","XPDV",113,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDV",114,0)="RTN(X,MSG) ;verify tag^routine"
^XTMP("XPDT",7596,"RTN","XPDV",115,0)=" ;INPUT: X=[tag^]routine, MSG(passed by reference)"
^XTMP("XPDT",7596,"RTN","XPDV",116,0)=" ;OUTPUT: returns 1=exists, 0=doesn't; MSG=error message"
^XTMP("XPDT",7596,"RTN","XPDV",117,0)=" N L,S,T,R"
^XTMP("XPDT",7596,"RTN","XPDV",118,0)=" S MSG="""""
^XTMP("XPDT",7596,"RTN","XPDV",119,0)=" I X[""("" S X=$P(X,""("") ;Handle tag^rtn(param) rwf"
^XTMP("XPDT",7596,"RTN","XPDV",120,0)=" I X[""^"" S T=$P(X,""^""),R=$P(X,""^"",2)"
^XTMP("XPDT",7596,"RTN","XPDV",121,0)=" E  S T="""",R=X"
^XTMP("XPDT",7596,"RTN","XPDV",122,0)=" I (R'?1A.E) S MSG="" Name violates the SAC!!"" Q 0"
^XTMP("XPDT",7596,"RTN","XPDV",123,0)=" I $T(^@R)="""" S MSG="" DOESN'T EXIST!!"" Q 0"
^XTMP("XPDT",7596,"RTN","XPDV",124,0)=" ;2nd line must begin with ""[label] ;;n[n.nn];"""
^XTMP("XPDT",7596,"RTN","XPDV",125,0)=" S S=$T(+2^@R) D  I MSG]"""" Q 0"
^XTMP("XPDT",7596,"RTN","XPDV",126,0)=" .I $L($P(S,"" "")) S L=$P(S,"" ""),S=$P(S,L,2,99) I L'?1U.7UN S MSG="" 2nd line violates the SAC!!"" Q"
^XTMP("XPDT",7596,"RTN","XPDV",127,0)=" .I S'?.1"" ;;""1.2N.1""."".2N1"";"".E S MSG="" 2nd line violates the SAC!!"""
^XTMP("XPDT",7596,"RTN","XPDV",128,0)=" ;if no tag or tag^routine exists, then return 1"
^XTMP("XPDT",7596,"RTN","XPDV",129,0)=" Q:T="""" 1 Q:$T(@T^@R)]"""" 1"
^XTMP("XPDT",7596,"RTN","XPDV",130,0)=" S MSG="" Tag DOESN'T EXIST!!"" Q 0"
^XTMP("XPDT",7596,"RTN","XPDV",131,0)=" ;"
^XTMP("XPDT",7596,"RTN","XPDV",132,0)="MULT(DA) ;multi-package"
^XTMP("XPDT",7596,"RTN","XPDV",133,0)=" ;returns 1 if ok or 0 if failed"
^XTMP("XPDT",7596,"RTN","XPDV",134,0)=" N I,J,X,Y,Z"
^XTMP("XPDT",7596,"RTN","XPDV",135,0)=" S I=0,Z=1"
^XTMP("XPDT",7596,"RTN","XPDV",136,0)=" F J=0:1 S I=$O(^XPD(9.6,DA,10,I)) Q:'I  S X=$P($G(^(I,0)),U),Y=0 D"
^XTMP("XPDT",7596,"RTN","XPDV",137,0)=" .S:X]"""" Y=$O(^XPD(9.6,""B"",X,0))"
^XTMP("XPDT",7596,"RTN","XPDV",138,0)=" .I Y,$D(^XPD(9.6,Y,0)) Q"
^XTMP("XPDT",7596,"RTN","XPDV",139,0)=" .W !,""Package "",X,"" doesn't exist."" S Z=0"
^XTMP("XPDT",7596,"RTN","XPDV",140,0)=" I 'J W !,""No Packages to transport"" S Z=0"
^XTMP("XPDT",7596,"RTN","XPDV",141,0)=" Q Z"
^XTMP("XPDT",7596,"RTN","XPDV",142,0)="MENU(F,X,Y) ;check for Parent or Children, F=file (19 or 101), X=ien,"
^XTMP("XPDT",7596,"RTN","XPDV",143,0)=" ;Y=action (2=link or 4=attach)"
^XTMP("XPDT",7596,"RTN","XPDV",144,0)=" ;returns 1 if ok or 0 if failed"
^XTMP("XPDT",7596,"RTN","XPDV",145,0)=" Q:'X 0"
^XTMP("XPDT",7596,"RTN","XPDV",146,0)=" N I,J,GR,Z"
^XTMP("XPDT",7596,"RTN","XPDV",147,0)=" S GR=$S(F=19:""^DIC(19)"",1:""^ORD(101)""),(I,Z)=0"
^XTMP("XPDT",7596,"RTN","XPDV",148,0)=" ;link, check that at least 1 menu item was sent"
^XTMP("XPDT",7596,"RTN","XPDV",149,0)=" I Y=2 F  S I=$O(@GR@(X,10,""B"",I)) Q:'I  S J=$P($G(@GR@(I,0)),U) I J]"""",$D(^XPD(9.6,XPDA,""KRN"",F,""NM"",""B"",J)) S Z=1 Q"
^XTMP("XPDT",7596,"RTN","XPDV",150,0)=" ;attach, check that the parent was sent"
^XTMP("XPDT",7596,"RTN","XPDV",151,0)=" I Y=4 F  S I=$O(@GR@(""AD"",X,I)) Q:'I  S J=$P($G(@GR@(I,0)),U) I J]"""",$D(^XPD(9.6,XPDA,""KRN"",F,""NM"",""B"",J)) S Z=1 Q"
^XTMP("XPDT",7596,"RTN","XPDV",152,0)=" D:'Z"
^XTMP("XPDT",7596,"RTN","XPDV",153,0)=" .W !,$S(F=19:""Option "",1:""Protocol ""),$P($G(@GR@(X,0)),U),"" has an Action of """
^XTMP("XPDT",7596,"RTN","XPDV",154,0)=" .W:Y=2 ""'USE AS LINK FOR MENU ITEMS' and no 'Menu Items' were sent."""
^XTMP("XPDT",7596,"RTN","XPDV",155,0)=" .W:Y=4 ""'ATTACH TO MENU' and a 'Parent Menu' wasn't sent."""
^XTMP("XPDT",7596,"RTN","XPDV",156,0)=" Q Z"
^XTMP("XPDT",7596,"VER")="8.0^22.0"
^XTMP("XPDT",7641)="1"
^XTMP("XPDT",7641,"BLD",2623,0)="XT*7.3*113^TOOLKIT^0^3081121^y"
^XTMP("XPDT",7641,"BLD",2623,1,0)="^^6^6^3081015^"
^XTMP("XPDT",7641,"BLD",2623,1,1,0)="IDENTITY HUB CHANGES FOR DUPLICATE RECORD MERGE"
^XTMP("XPDT",7641,"BLD",2623,1,2,0)=" "
^XTMP("XPDT",7641,"BLD",2623,1,3,0)="Changes to the Duplicate Record Merge routines to support the new PSIM "
^XTMP("XPDT",7641,"BLD",2623,1,4,0)="Probabilistic Search."
^XTMP("XPDT",7641,"BLD",2623,1,5,0)=" "
^XTMP("XPDT",7641,"BLD",2623,1,6,0)="Please see FORUM patch module for details."
^XTMP("XPDT",7641,"BLD",2623,4,0)="^9.64PA^15.1^1"
^XTMP("XPDT",7641,"BLD",2623,4,15.1,0)="15.1"
^XTMP("XPDT",7641,"BLD",2623,4,15.1,2,0)="^9.641^15.1^1"
^XTMP("XPDT",7641,"BLD",2623,4,15.1,2,15.1,0)="DUPLICATE RESOLUTION  (File-top level)"
^XTMP("XPDT",7641,"BLD",2623,4,15.1,2,15.1,1,0)="^9.6411^99^1"
^XTMP("XPDT",7641,"BLD",2623,4,15.1,2,15.1,1,99,0)="SUPPRESS NEW DUP EMAIL"
^XTMP("XPDT",7641,"BLD",2623,4,15.1,222)="y^n^p^^^^n^^n"
^XTMP("XPDT",7641,"BLD",2623,4,15.1,224)=""
^XTMP("XPDT",7641,"BLD",2623,4,"APDD",15.1,15.1)=""
^XTMP("XPDT",7641,"BLD",2623,4,"APDD",15.1,15.1,99)=""
^XTMP("XPDT",7641,"BLD",2623,4,"B",15.1,15.1)=""
^XTMP("XPDT",7641,"BLD",2623,6)="^94"
^XTMP("XPDT",7641,"BLD",2623,6.3)="5"
^XTMP("XPDT",7641,"BLD",2623,"ABNS",0)="^9.66A^^"
^XTMP("XPDT",7641,"BLD",2623,"ABPKG")="y^y^G.CIRN DEV@DEVCRN.FO-ALBANY.MED.VA.GOV"
^XTMP("XPDT",7641,"BLD",2623,"INID")="^y"
^XTMP("XPDT",7641,"BLD",2623,"INIT")="EN^XT73P113"
^XTMP("XPDT",7641,"BLD",2623,"KRN",0)="^9.67PA^8989.52^19"
^XTMP("XPDT",7641,"BLD",2623,"KRN",.4,0)=".4"
^XTMP("XPDT",7641,"BLD",2623,"KRN",.401,0)=".401"
^XTMP("XPDT",7641,"BLD",2623,"KRN",.402,0)=".402"
^XTMP("XPDT",7641,"BLD",2623,"KRN",.403,0)=".403"
^XTMP("XPDT",7641,"BLD",2623,"KRN",.5,0)=".5"
^XTMP("XPDT",7641,"BLD",2623,"KRN",.84,0)=".84"
^XTMP("XPDT",7641,"BLD",2623,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7641,"BLD",2623,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",0)="^9.68A^12^12"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",1,0)="XDRDADDS^^0^B13998263"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",2,0)="XDRDEDT^^0^B33732705"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",3,0)="XDRDPICK^^0^B86863530"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",4,0)="XDRCNT^^0^B19633357"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",5,0)="XDRDCOMP^^0^B12808569"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",6,0)="XDRDFPD^^0^B14210534"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",7,0)="XDRDLIST^^0^B16235628"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",8,0)="XDRDPRGE^^0^B9048519"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",9,0)="XDRDQUE^^0^B20836456"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",10,0)="XDRMADD^^0^B42800986"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",11,0)="XDRDEFLG^^0^B1931825"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM",12,0)="XT73P113^^0^B2774672"
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XDRCNT",4)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XDRDADDS",1)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XDRDCOMP",5)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XDRDEDT",2)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XDRDEFLG",11)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XDRDFPD",6)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XDRDLIST",7)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XDRDPICK",3)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XDRDPRGE",8)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XDRDQUE",9)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XDRMADD",10)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",9.8,"NM","B","XT73P113",12)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",19,0)="19"
^XTMP("XPDT",7641,"BLD",2623,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7641,"BLD",2623,"KRN",101,0)="101"
^XTMP("XPDT",7641,"BLD",2623,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7641,"BLD",2623,"KRN",771,0)="771"
^XTMP("XPDT",7641,"BLD",2623,"KRN",870,0)="870"
^XTMP("XPDT",7641,"BLD",2623,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7641,"BLD",2623,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7641,"BLD",2623,"KRN",8994,0)="8994"
^XTMP("XPDT",7641,"BLD",2623,"KRN",8994,"NM",0)="^9.68A^2^2"
^XTMP("XPDT",7641,"BLD",2623,"KRN",8994,"NM",1,0)="XDR ADD POTENTIAL PATIENT DUP^^0"
^XTMP("XPDT",7641,"BLD",2623,"KRN",8994,"NM",2,0)="XDR UPD SUPPR EMAIL^^0"
^XTMP("XPDT",7641,"BLD",2623,"KRN",8994,"NM","B","XDR ADD POTENTIAL PATIENT DUP",1)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN",8994,"NM","B","XDR UPD SUPPR EMAIL",2)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",.4,.4)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",.401,.401)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",.402,.402)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",.403,.403)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",.5,.5)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",.84,.84)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",19,19)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",101,101)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",771,771)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",870,870)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7641,"BLD",2623,"KRN","B",8994,8994)=""
^XTMP("XPDT",7641,"BLD",2623,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7641,"BLD",2623,"QUES",0)="^9.62^^"
^XTMP("XPDT",7641,"BLD",2623,"REQB",0)="^9.611^4^3"
^XTMP("XPDT",7641,"BLD",2623,"REQB",2,0)="XT*7.3*42^1"
^XTMP("XPDT",7641,"BLD",2623,"REQB",3,0)="XT*7.3*47^1"
^XTMP("XPDT",7641,"BLD",2623,"REQB",4,0)="XT*7.3*43^1"
^XTMP("XPDT",7641,"BLD",2623,"REQB","B","XT*7.3*42",2)=""
^XTMP("XPDT",7641,"BLD",2623,"REQB","B","XT*7.3*43",4)=""
^XTMP("XPDT",7641,"BLD",2623,"REQB","B","XT*7.3*47",3)=""
^XTMP("XPDT",7641,"FIA",15.1)="DUPLICATE RESOLUTION"
^XTMP("XPDT",7641,"FIA",15.1,0)="^VA(15.1,"
^XTMP("XPDT",7641,"FIA",15.1,0,0)="15.1P"
^XTMP("XPDT",7641,"FIA",15.1,0,1)="y^n^p^^^^n^^n"
^XTMP("XPDT",7641,"FIA",15.1,0,10)=""
^XTMP("XPDT",7641,"FIA",15.1,0,11)=""
^XTMP("XPDT",7641,"FIA",15.1,0,"RLRO")=""
^XTMP("XPDT",7641,"FIA",15.1,0,"VR")="7.3^XT"
^XTMP("XPDT",7641,"FIA",15.1,15.1)="1"
^XTMP("XPDT",7641,"FIA",15.1,15.1,99)=""
^XTMP("XPDT",7641,"INIT")="EN^XT73P113"
^XTMP("XPDT",7641,"KRN",8994,267,-1)="0^1"
^XTMP("XPDT",7641,"KRN",8994,267,0)="XDR ADD POTENTIAL PATIENT DUP^ADD^XDRDADDS^1^A^0^^1^1^^0"
^XTMP("XPDT",7641,"KRN",8994,267,1,0)="^8994.01^5^5^3080707^^"
^XTMP("XPDT",7641,"KRN",8994,267,1,1,0)="Add a record to the VistA DUPLICATE RECORD file (#15), or find an existing"
^XTMP("XPDT",7641,"KRN",8994,267,1,2,0)="record for the pair of potential duplicates passed to the RPC. This was"
^XTMP("XPDT",7641,"KRN",8994,267,1,3,0)="written to allow MPI to add potential duplicate patients to the file, when"
^XTMP("XPDT",7641,"KRN",8994,267,1,4,0)="potential duplicates are detected by the Person Service Identity"
^XTMP("XPDT",7641,"KRN",8994,267,1,5,0)="Management (PSIM) probabilistic search."
^XTMP("XPDT",7641,"KRN",8994,267,2,0)="^8994.02A^6^3"
^XTMP("XPDT",7641,"KRN",8994,267,2,1,0)="FILE NUMBER^1^20^1^2"
^XTMP("XPDT",7641,"KRN",8994,267,2,1,1,0)="^8994.021^3^3^3080707^^^^"
^XTMP("XPDT",7641,"KRN",8994,267,2,1,1,1,0)="File number for the file to which the potential duplicate records belong. "
^XTMP("XPDT",7641,"KRN",8994,267,2,1,1,2,0)="For example, if the two potential duplicate entries are on the PATIENT "
^XTMP("XPDT",7641,"KRN",8994,267,2,1,1,3,0)="file, this value is set to 2."
^XTMP("XPDT",7641,"KRN",8994,267,2,5,0)="TO_IEN^1^14^1^4"
^XTMP("XPDT",7641,"KRN",8994,267,2,5,1,0)="^8994.021^2^2^3080707^^"
^XTMP("XPDT",7641,"KRN",8994,267,2,5,1,1,0)="Internal Entry Number (IEN) of one of the potential duplicate records. "
^XTMP("XPDT",7641,"KRN",8994,267,2,5,1,2,0)="For example, this could be a DFN from the PATIENT file (file #2)."
^XTMP("XPDT",7641,"KRN",8994,267,2,6,0)="FROM_IEN^1^14^1^3"
^XTMP("XPDT",7641,"KRN",8994,267,2,6,1,0)="^8994.021^2^2^3080707^^"
^XTMP("XPDT",7641,"KRN",8994,267,2,6,1,1,0)="Internal Entry Number (IEN) of one of the potential duplicate records. "
^XTMP("XPDT",7641,"KRN",8994,267,2,6,1,2,0)="For example, this could be a DFN from the PATIENT file (file #2)."
^XTMP("XPDT",7641,"KRN",8994,267,2,"B","FILE NUMBER",1)=""
^XTMP("XPDT",7641,"KRN",8994,267,2,"B","FROM_IEN",6)=""
^XTMP("XPDT",7641,"KRN",8994,267,2,"B","TO_IEN",5)=""
^XTMP("XPDT",7641,"KRN",8994,267,2,"PARAMSEQ",2,1)=""
^XTMP("XPDT",7641,"KRN",8994,267,2,"PARAMSEQ",3,6)=""
^XTMP("XPDT",7641,"KRN",8994,267,2,"PARAMSEQ",4,5)=""
^XTMP("XPDT",7641,"KRN",8994,267,3,0)="^8994.03^4^4^3080707^^"
^XTMP("XPDT",7641,"KRN",8994,267,3,1,0)="RETURN =IEN from file 15 DUPLICATE RECORD FILE# - If no errors occur, and "
^XTMP("XPDT",7641,"KRN",8994,267,3,2,0)="if either an existing record is found, or a new record is added."
^XTMP("XPDT",7641,"KRN",8994,267,3,3,0)="  "
^XTMP("XPDT",7641,"KRN",8994,267,3,4,0)="RETURN = -1^Error Message - if any errors occur"
^XTMP("XPDT",7641,"KRN",8994,271,-1)="0^2"
^XTMP("XPDT",7641,"KRN",8994,271,0)="XDR UPD SUPPR EMAIL^EN^XDRDEFLG^1^A^0^^1^1^^0"
^XTMP("XPDT",7641,"KRN",8994,271,1,0)="^^9^9^3080919^"
^XTMP("XPDT",7641,"KRN",8994,271,1,1,0)="Used to remotely set the field SUPPRESS NEW DUP EMAIL (#99) on the"
^XTMP("XPDT",7641,"KRN",8994,271,1,2,0)="DUPLICATE RESOLUTION file (#15.1)."
^XTMP("XPDT",7641,"KRN",8994,271,1,3,0)=" "
^XTMP("XPDT",7641,"KRN",8994,271,1,4,0)="SUPPRESS NEW DUP EMAIL is set to 1 (Yes) to suppress the email that is"
^XTMP("XPDT",7641,"KRN",8994,271,1,5,0)="normally sent when a new record is added to the DUPLICATE RECORD file by"
^XTMP("XPDT",7641,"KRN",8994,271,1,6,0)="PSIM (i.e., by a call from routine XDRDADDS)"
^XTMP("XPDT",7641,"KRN",8994,271,1,7,0)=" "
^XTMP("XPDT",7641,"KRN",8994,271,1,8,0)="If SUPPRESS NEW DUP EMAIL is set to 0 (No) or null, the email will be "
^XTMP("XPDT",7641,"KRN",8994,271,1,9,0)="sent."
^XTMP("XPDT",7641,"KRN",8994,271,2,0)="^8994.02A^2^2"
^XTMP("XPDT",7641,"KRN",8994,271,2,1,0)="FILE NUMBER^1^20^1^2"
^XTMP("XPDT",7641,"KRN",8994,271,2,1,1,0)="^8994.021^3^3^3080919^^^"
^XTMP("XPDT",7641,"KRN",8994,271,2,1,1,1,0)="File number for the file that is the .01 field of a record in the "
^XTMP("XPDT",7641,"KRN",8994,271,2,1,1,2,0)="DUPLICATE RESOLUTION file. This is the record that is to be updated by "
^XTMP("XPDT",7641,"KRN",8994,271,2,1,1,3,0)="this RPC."
^XTMP("XPDT",7641,"KRN",8994,271,2,2,0)="VALUE^1^1^1^3"
^XTMP("XPDT",7641,"KRN",8994,271,2,2,1,0)="^^2^2^3080919^"
^XTMP("XPDT",7641,"KRN",8994,271,2,2,1,1,0)="Must be set to 1 or 0. This value will be put into the SUPPRESS NEW DUP "
^XTMP("XPDT",7641,"KRN",8994,271,2,2,1,2,0)="EMAIL field."
^XTMP("XPDT",7641,"KRN",8994,271,2,"B","FILE NUMBER",1)=""
^XTMP("XPDT",7641,"KRN",8994,271,2,"B","VALUE",2)=""
^XTMP("XPDT",7641,"KRN",8994,271,2,"PARAMSEQ",2,1)=""
^XTMP("XPDT",7641,"KRN",8994,271,2,"PARAMSEQ",3,2)=""
^XTMP("XPDT",7641,"KRN",8994,271,3,0)="^8994.03^3^3^3080919^^^"
^XTMP("XPDT",7641,"KRN",8994,271,3,1,0)="RETURN=0  -  if no errors occurred."
^XTMP("XPDT",7641,"KRN",8994,271,3,2,0)=" "
^XTMP("XPDT",7641,"KRN",8994,271,3,3,0)="RETURN=-1^Error Message  -  if errors occurred"
^XTMP("XPDT",7641,"MBREQ")="0"
^XTMP("XPDT",7641,"ORD",16,8994)="8994;16;1;;;;;;;RPCDEL^XPDIA1"
^XTMP("XPDT",7641,"ORD",16,8994,0)="REMOTE PROCEDURE"
^XTMP("XPDT",7641,"PKG",189,-1)="1^1"
^XTMP("XPDT",7641,"PKG",189,0)="TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP"
^XTMP("XPDT",7641,"PKG",189,20,0)="^9.402P^^"
^XTMP("XPDT",7641,"PKG",189,22,0)="^9.49I^1^1"
^XTMP("XPDT",7641,"PKG",189,22,1,0)="7.3^2950403^2960208"
^XTMP("XPDT",7641,"PKG",189,22,1,"PAH",1,0)="113^3081121"
^XTMP("XPDT",7641,"PKG",189,22,1,"PAH",1,1,0)="^^6^6^3081121"
^XTMP("XPDT",7641,"PKG",189,22,1,"PAH",1,1,1,0)="IDENTITY HUB CHANGES FOR DUPLICATE RECORD MERGE"
^XTMP("XPDT",7641,"PKG",189,22,1,"PAH",1,1,2,0)=" "
^XTMP("XPDT",7641,"PKG",189,22,1,"PAH",1,1,3,0)="Changes to the Duplicate Record Merge routines to support the new PSIM "
^XTMP("XPDT",7641,"PKG",189,22,1,"PAH",1,1,4,0)="Probabilistic Search."
^XTMP("XPDT",7641,"PKG",189,22,1,"PAH",1,1,5,0)=" "
^XTMP("XPDT",7641,"PKG",189,22,1,"PAH",1,1,6,0)="Please see FORUM patch module for details."
^XTMP("XPDT",7641,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7641,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7641,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7641,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7641,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7641,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7641,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7641,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7641,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7641,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7641,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7641,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7641,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7641,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7641,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7641,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7641,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7641,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7641,"QUES","XPM1","B")=""
^XTMP("XPDT",7641,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7641,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7641,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7641,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7641,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7641,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7641,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7641,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7641,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7641,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7641,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7641,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7641,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7641,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7641,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7641,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7641,"RTN")="12"
^XTMP("XPDT",7641,"RTN","XDRCNT")="0^4^B19633357^B18892090"
^XTMP("XPDT",7641,"RTN","XDRCNT",1,0)="XDRCNT ;SF-IRMFO/OHPRD/LAB - Count/Tally records by status/merged status;   [ 08/13/92  09:50 AM ] ;8/28/08  17:55"
^XTMP("XPDT",7641,"RTN","XDRCNT",2,0)=" ;;7.3;TOOLKIT;**23,113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XDRCNT",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7641,"RTN","XDRCNT",4,0)=" ;;"
^XTMP("XPDT",7641,"RTN","XDRCNT",5,0)="START ;"
^XTMP("XPDT",7641,"RTN","XDRCNT",6,0)=" D EN^XDRVCHEK"
^XTMP("XPDT",7641,"RTN","XDRCNT",7,0)=" D INFORM"
^XTMP("XPDT",7641,"RTN","XDRCNT",8,0)=" D INIT"
^XTMP("XPDT",7641,"RTN","XDRCNT",9,0)=" D GETFILE"
^XTMP("XPDT",7641,"RTN","XDRCNT",10,0)=" G:XDRQFLG EOJ"
^XTMP("XPDT",7641,"RTN","XDRCNT",11,0)=" D ZIS"
^XTMP("XPDT",7641,"RTN","XDRCNT",12,0)=" G:XDRQFLG EOJ"
^XTMP("XPDT",7641,"RTN","XDRCNT",13,0)=" D PROCESS"
^XTMP("XPDT",7641,"RTN","XDRCNT",14,0)=" D EOJ"
^XTMP("XPDT",7641,"RTN","XDRCNT",15,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",16,0)="EOJ ;Eoj cleanup"
^XTMP("XPDT",7641,"RTN","XDRCNT",17,0)=" K XDRQFLG,XDRD,XDRFL,XDRCNT"
^XTMP("XPDT",7641,"RTN","XDRCNT",18,0)=" S:$D(ZTQUEUED) ZTREQ=""@"""
^XTMP("XPDT",7641,"RTN","XDRCNT",19,0)=" K ZTSK,POP,I,S"
^XTMP("XPDT",7641,"RTN","XDRCNT",20,0)=" W:$D(IOF) @IOF"
^XTMP("XPDT",7641,"RTN","XDRCNT",21,0)=" D ^%ZISC"
^XTMP("XPDT",7641,"RTN","XDRCNT",22,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",23,0)="INIT ;initialize variables"
^XTMP("XPDT",7641,"RTN","XDRCNT",24,0)=" S XDRQFLG=0,XDRCNT(""PG"")=0"
^XTMP("XPDT",7641,"RTN","XDRCNT",25,0)=" S X=$G(^DD(15,.03,0)) I X="""" W !!,$C(7),""Dictionary error!!  Notify a programmer!"" S XDRQFLG=1 Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",26,0)=" S X=$P(X,U,3)"
^XTMP("XPDT",7641,"RTN","XDRCNT",27,0)=" F I=1:1 S S=$P(X,"";"",I) Q:S=""""  S XDRCNT(""STATUS"",$P(S,"":"",1),""CNT"")=0,XDRCNT(""STATUS"",$P(S,"":"",1),""NAME"")=$P(S,"":"",2)"
^XTMP("XPDT",7641,"RTN","XDRCNT",28,0)=" I '$D(XDRCNT(""STATUS"")) S XDRQFLG=1 W !!,""Dictionary error!!  Notify a programmer!"" Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",29,0)=" S X=$G(^DD(15,.05,0)) I X="""" W !!,$C(7),""Dictionary error!!  Notify a programmer!"" S XDRQFLG=1 Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",30,0)=" S X=$P(X,U,3)"
^XTMP("XPDT",7641,"RTN","XDRCNT",31,0)=" F I=1:1 S S=$P(X,"";"",I) Q:S=""""  S XDRCNT(""MERGE STATUS"",$P(S,"":"",1),""CNT"")=0,XDRCNT(""MERGE STATUS"",$P(S,"":"",1),""NAME"")=$P(S,"":"",2)"
^XTMP("XPDT",7641,"RTN","XDRCNT",32,0)=" I '$D(XDRCNT(""MERGE STATUS"")) S XDRQFLG=1 W !!,""Dictionary error!!  Notify a programmer!"" Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",33,0)=" S XDRCNT(""TOTAL RECS"")=0"
^XTMP("XPDT",7641,"RTN","XDRCNT",34,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",35,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRCNT",36,0)="GETFILE ;get file to tally records fo"
^XTMP("XPDT",7641,"RTN","XDRCNT",37,0)=" K XDRFL"
^XTMP("XPDT",7641,"RTN","XDRCNT",38,0)=" ; XT*7.3*113 input variable XDRNOPT to FILE^XDRDQUE-if UNDEF, allows PATIENT file to be selected"
^XTMP("XPDT",7641,"RTN","XDRCNT",39,0)=" N XDRNOPT"
^XTMP("XPDT",7641,"RTN","XDRCNT",40,0)=" S DIC(""A"")=""Tally duplicate entries for which file? "" D FILE^XDRDQUE"
^XTMP("XPDT",7641,"RTN","XDRCNT",41,0)=" Q:XDRQFLG"
^XTMP("XPDT",7641,"RTN","XDRCNT",42,0)=" S XDRCNT(""GBL"")=^DIC(XDRFL,0,""GL""),XDRCNT(""GBL"")=$P(XDRCNT(""GBL""),U,2)"
^XTMP("XPDT",7641,"RTN","XDRCNT",43,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",44,0)="ZIS W !! K ZTSK,ZTQUEUED,IOP S %ZIS=""PQM"" D ^%ZIS"
^XTMP("XPDT",7641,"RTN","XDRCNT",45,0)=" I POP S XDRQFLG=1 Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",46,0)=" I $D(IO(""Q"")) D TSKMN"
^XTMP("XPDT",7641,"RTN","XDRCNT",47,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",48,0)="TSKMN ;"
^XTMP("XPDT",7641,"RTN","XDRCNT",49,0)=" S ZTIO=$S($D(ION):ION,1:IO) I $D(IOST)#2,IOST]"""" S ZTIO=ZTIO_"";""_IOST"
^XTMP("XPDT",7641,"RTN","XDRCNT",50,0)=" I $D(IO(""DOC"")),IO(""DOC"")]"""" S ZTIO=ZTIO_"";""_IO(""DOC"")"
^XTMP("XPDT",7641,"RTN","XDRCNT",51,0)=" I $D(IOM)#2,IOM S ZTIO=ZTIO_"";""_IOM I $D(IOSL)#2,IOSL S ZTIO=ZTIO_"";""_IOSL"
^XTMP("XPDT",7641,"RTN","XDRCNT",52,0)=" K ZTSAVE S ZTSAVE(""*"")="""""
^XTMP("XPDT",7641,"RTN","XDRCNT",53,0)=" S ZTRTN=""PROCESS^XDRCNT"",ZTDTH="""",ZTDESC=""TALLY DUPLICATE RECORD STATUS"" D ^%ZTLOAD S XDRQFLG=1"
^XTMP("XPDT",7641,"RTN","XDRCNT",54,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",55,0)="PROCESS ;"
^XTMP("XPDT",7641,"RTN","XDRCNT",56,0)=" NEW X,D,S"
^XTMP("XPDT",7641,"RTN","XDRCNT",57,0)=" ;S X=0_"";""_XDRCNT(""GBL"") F  S X=$O(^VA(15,""B"",X)) Q:X=""""!($P(X,"";"",2)'=XDRCNT(""GBL""))  D"
^XTMP("XPDT",7641,"RTN","XDRCNT",58,0)=" S X=0_"";""_XDRCNT(""GBL"") F  S X=$O(^VA(15,""B"",X)) Q:X=""""  I $P(X,"";"",2)=XDRCNT(""GBL"") D"
^XTMP("XPDT",7641,"RTN","XDRCNT",59,0)=" . S D=0 F  S D=$O(^VA(15,""B"",X,D)) Q:D'=+D   D"
^XTMP("XPDT",7641,"RTN","XDRCNT",60,0)=" . . Q:^VA(15,""B"",X,D)=1"
^XTMP("XPDT",7641,"RTN","XDRCNT",61,0)=" . . S XDRCNT(""TOTAL RECS"")=XDRCNT(""TOTAL RECS"")+1"
^XTMP("XPDT",7641,"RTN","XDRCNT",62,0)=" . . S S=$P(^VA(15,D,0),U,3)"
^XTMP("XPDT",7641,"RTN","XDRCNT",63,0)=" . . I S="""""
^XTMP("XPDT",7641,"RTN","XDRCNT",64,0)=" . . E  S XDRCNT(""STATUS"",S,""CNT"")=$G(XDRCNT(""STATUS"",S,""CNT""))+1"
^XTMP("XPDT",7641,"RTN","XDRCNT",65,0)=" . . I S=""V"" D"
^XTMP("XPDT",7641,"RTN","XDRCNT",66,0)=" . . . S S=+$P(^VA(15,D,0),U,5)"
^XTMP("XPDT",7641,"RTN","XDRCNT",67,0)=" . . . S XDRCNT(""MERGE STATUS"",S,""CNT"")=XDRCNT(""MERGE STATUS"",S,""CNT"")+1"
^XTMP("XPDT",7641,"RTN","XDRCNT",68,0)=" . . Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",69,0)=" .Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",70,0)="PRINT ;print report"
^XTMP("XPDT",7641,"RTN","XDRCNT",71,0)=" U IO"
^XTMP("XPDT",7641,"RTN","XDRCNT",72,0)=" D HEADER"
^XTMP("XPDT",7641,"RTN","XDRCNT",73,0)=" W !!,""Total Number of Duplicate Records for File "",$E(XDRD(0,0),1,18),"":  "",?65,$J(XDRCNT(""TOTAL RECS""),6),!"
^XTMP("XPDT",7641,"RTN","XDRCNT",74,0)=" W !?5,""STATUS field:"" S X=0 F  S X=$O(XDRCNT(""STATUS"",X)) Q:X=""""  D"
^XTMP("XPDT",7641,"RTN","XDRCNT",75,0)=" .I $Y>(IOSL-5) D HEADER Q:$D(XDRCNT(""QUIT""))  W !"
^XTMP("XPDT",7641,"RTN","XDRCNT",76,0)=" .W ?26,$E(XDRCNT(""STATUS"",X,""NAME""),1,34),?65,$J(XDRCNT(""STATUS"",X,""CNT""),6),!"
^XTMP("XPDT",7641,"RTN","XDRCNT",77,0)=" W !?5,""MERGE STATUS field:"" S X="""" F  S X=$O(XDRCNT(""MERGE STATUS"",X)) Q:X=""""  D"
^XTMP("XPDT",7641,"RTN","XDRCNT",78,0)=" .I $Y>(IOSL-5) D HEADER Q:$D(XDRCNT(""QUIT""))  W !"
^XTMP("XPDT",7641,"RTN","XDRCNT",79,0)=" .W ?26,$E(XDRCNT(""MERGE STATUS"",X,""NAME""),1,34),?65,$J(XDRCNT(""MERGE STATUS"",X,""CNT""),6),!"
^XTMP("XPDT",7641,"RTN","XDRCNT",80,0)=" .Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",81,0)=" I $E(IOST)=""C"" W !!,""End of Report.  Press return to exit"" R X:DTIME"
^XTMP("XPDT",7641,"RTN","XDRCNT",82,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",83,0)="HEADER ;print header information"
^XTMP("XPDT",7641,"RTN","XDRCNT",84,0)=" N DIR,X,Y"
^XTMP("XPDT",7641,"RTN","XDRCNT",85,0)=" I 'XDRCNT(""PG"") G HEADER1"
^XTMP("XPDT",7641,"RTN","XDRCNT",86,0)=" I $E(IOST)=""C"",IO=IO(0) W ! S DIR(0)=""EO"" D ^DIR K DIR I Y=0!(Y=""^"")!($D(DTOUT)) S XDRCNT(""QUIT"")="""" Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",87,0)="HEADER1 ;"
^XTMP("XPDT",7641,"RTN","XDRCNT",88,0)=" W:$D(IOF) @IOF S XDRCNT(""PG"")=XDRCNT(""PG"")+1"
^XTMP("XPDT",7641,"RTN","XDRCNT",89,0)=" W !?3,$P(^DIC(4,DUZ(2),0),U) S Y=DT D DD^%DT W ?50,Y,?70,""Page "",XDRCNT(""PG""),?78,!"
^XTMP("XPDT",7641,"RTN","XDRCNT",90,0)=" W !?12,""TALLY OF DUPLICATE RECORDS' STATUS/MERGE STATUS FIELDS"""
^XTMP("XPDT",7641,"RTN","XDRCNT",91,0)=" S XDRCNT(""LENG"")=7+$L(XDRD(0,0))"
^XTMP("XPDT",7641,"RTN","XDRCNT",92,0)=" W !?((80-XDRCNT(""LENG""))/2),""FILE:  "",XDRD(0,0),?78,!"
^XTMP("XPDT",7641,"RTN","XDRCNT",93,0)=" W !,$TR($J("""",80),"" "",""-"")"
^XTMP("XPDT",7641,"RTN","XDRCNT",94,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRCNT",95,0)="INFORM ;inform user"
^XTMP("XPDT",7641,"RTN","XDRCNT",96,0)=" W !!,""This report will tally the Status and Merge Status fields for all"",!,""entries in the Duplicate record file for the file that you select."",!"
^XTMP("XPDT",7641,"RTN","XDRCNT",97,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS")="0^1^B13998263^n/a"
^XTMP("XPDT",7641,"RTN","XDRDADDS",1,0)="XDRDADDS ;SF-IRMFO/TKW -  SILENT API TO ADD POTENTIAL DUPLICATE PAIR TO FILE 15 ;9/22/08  11:27"
^XTMP("XPDT",7641,"RTN","XDRDADDS",2,0)=" ;;7.3;TOOLKIT;**113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XDRDADDS",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7641,"RTN","XDRDADDS",4,0)="ADD(XDRSLT,XDRFL,XDRFR,XDRTO) ; Add a pair to the DUPLICATE RECORD file (#15)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",5,0)=" ; Called from REMOTE PROCEDURE - XDR ADD POTENTIAL PATIENT DUPS"
^XTMP("XPDT",7641,"RTN","XDRDADDS",6,0)=" ;  XDRSLT = OUTPUT results."
^XTMP("XPDT",7641,"RTN","XDRDADDS",7,0)=" ;    set to DFN in file 15 if add was successful, -1^ERRMSG if error"
^XTMP("XPDT",7641,"RTN","XDRDADDS",8,0)=" ;  XDRFL = File number where duplicate records reside. If not passed, defaults to PATIENT file."
^XTMP("XPDT",7641,"RTN","XDRDADDS",9,0)=" ;  XDRFR = From entry IEN (DFN if PATIENT file entry)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",10,0)=" ;  XDRTO = To entry IEN (DFN if PATIENT file entry)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",11,0)=" ;  "
^XTMP("XPDT",7641,"RTN","XDRDADDS",12,0)=" K XDRSLT"
^XTMP("XPDT",7641,"RTN","XDRDADDS",13,0)=" N XDRGBL,XDRPN1,XDRPN2,XDRI,XDRREC1,XDRREC2,XDRFDA,XDRIEN,XDRPN1,XDRPN2"
^XTMP("XPDT",7641,"RTN","XDRDADDS",14,0)=" N XDRSSN1,XDRSSN2,X,X1,X2,X3,I"
^XTMP("XPDT",7641,"RTN","XDRDADDS",15,0)=" ; Default file is PATIENT file."
^XTMP("XPDT",7641,"RTN","XDRDADDS",16,0)=" S XDRFL=+$G(XDRFL)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",17,0)=" S:'XDRFL XDRFL=2"
^XTMP("XPDT",7641,"RTN","XDRDADDS",18,0)=" S XDRGBL=$G(^DIC(XDRFL,0,""GL""))"
^XTMP("XPDT",7641,"RTN","XDRDADDS",19,0)=" I (XDRGBL="""")!($G(^VA(15.1,XDRFL,0))="""") D  Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",20,0)=" . S XDRSLT=""-1^File number parameter missing or invalid"" Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",21,0)=" ; Check IENs to make sure they're valid"
^XTMP("XPDT",7641,"RTN","XDRDADDS",22,0)=" S XDRFR=+$G(XDRFR),XDRTO=+$G(XDRTO)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",23,0)=" S XDRPN1=$P($G(@(XDRGBL_XDRFR_"",0)"")),U)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",24,0)=" I XDRPN1="""" D  Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",25,0)=" . S XDRSLT=""-1^First IEN input parameter invalid"" Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",26,0)=" S XDRPN2=$P($G(@(XDRGBL_XDRTO_"",0)"")),U)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",27,0)=" I XDRPN2="""" D  Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",28,0)=" . S XDRSLT=""-1^Second IEN input parameter invalid"" Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",29,0)=" ; If From and To Record pair are already on the Duplicate Record File save IEN and quit."
^XTMP("XPDT",7641,"RTN","XDRDADDS",30,0)=" S XDRSLT=0"
^XTMP("XPDT",7641,"RTN","XDRDADDS",31,0)=" S XDRREC1=XDRFR_"";""_$P(XDRGBL,U,2)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",32,0)=" S XDRREC2=XDRTO_"";""_$P(XDRGBL,U,2)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",33,0)=" S X1=XDRREC1_U_XDRREC2,X2=XDRREC2_U_XDRREC1"
^XTMP("XPDT",7641,"RTN","XDRDADDS",34,0)=" F I=0:0 S I=$O(^VA(15,""B"",XDRREC1,I)) Q:I'>0  D  Q:XDRSLT"
^XTMP("XPDT",7641,"RTN","XDRDADDS",35,0)=" . S X3=$P($G(^VA(15,I,0)),U,1,2)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",36,0)=" . I X3'=X1,X3'=X2 Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",37,0)=" . S XDRSLT=I"
^XTMP("XPDT",7641,"RTN","XDRDADDS",38,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",39,0)=" Q:XDRSLT"
^XTMP("XPDT",7641,"RTN","XDRDADDS",40,0)=" ; If patients, get SSN"
^XTMP("XPDT",7641,"RTN","XDRDADDS",41,0)=" S (XDRSSN1,XDRSSN2)="""""
^XTMP("XPDT",7641,"RTN","XDRDADDS",42,0)=" I XDRFL=2 D"
^XTMP("XPDT",7641,"RTN","XDRDADDS",43,0)=" . S X=$$GET1^DIQ(2,XDRFR_"","",.09) S:X]"""" XDRSSN1=$E(X,1,3)_""-""_$E(X,4,5)_""-""_$E(X,6,9)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",44,0)=" . S X=$$GET1^DIQ(2,XDRTO_"","",.09) S:X]"""" XDRSSN2=$E(X,1,3)_""-""_$E(X,4,5)_""-""_$E(X,6,9)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",45,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",46,0)=" ; Add new record to DUPLICATE RECORD file."
^XTMP("XPDT",7641,"RTN","XDRDADDS",47,0)=" K XDRFDA,XDRIEN"
^XTMP("XPDT",7641,"RTN","XDRDADDS",48,0)=" S XDRFDA(15,""+1,"",.01)=XDRREC1"
^XTMP("XPDT",7641,"RTN","XDRDADDS",49,0)=" S XDRFDA(15,""+1,"",.02)=XDRREC2"
^XTMP("XPDT",7641,"RTN","XDRDADDS",50,0)=" S XDRFDA(15,""+1,"",.03)=""P"""
^XTMP("XPDT",7641,"RTN","XDRDADDS",51,0)=" S XDRFDA(15,""+1,"",.06)=DT"
^XTMP("XPDT",7641,"RTN","XDRDADDS",52,0)=" S XDRFDA(15,""+1,"",.09)=.5"
^XTMP("XPDT",7641,"RTN","XDRDADDS",53,0)=" F I=.15,.16,.17,.18,.19 S XDRFDA(15,""+1,"",I)=0"
^XTMP("XPDT",7641,"RTN","XDRDADDS",54,0)=" D UPDATE^DIE("""",""XDRFDA"",""XDRIEN"")"
^XTMP("XPDT",7641,"RTN","XDRDADDS",55,0)=" S I=+$O(XDRIEN(0)),I=$G(XDRIEN(I))"
^XTMP("XPDT",7641,"RTN","XDRDADDS",56,0)=" I 'I D  Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",57,0)=" . S XDRSLT=""-1^Error adding record to DUPLICATE RECORD file"" Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",58,0)=" S XDRSLT=I"
^XTMP("XPDT",7641,"RTN","XDRDADDS",59,0)=" ; Send a notice to the DUPLICATE MANAGER MAIL GROUP if the"
^XTMP("XPDT",7641,"RTN","XDRDADDS",60,0)=" ; SEND NEW DUP REC EMAIL field is not set to 1 (suppress). (XT*7.3*113)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",61,0)=" S X=$$GET1^DIQ(15.1,XDRFL_"","",99,""I"")"
^XTMP("XPDT",7641,"RTN","XDRDADDS",62,0)=" Q:X=1"
^XTMP("XPDT",7641,"RTN","XDRDADDS",63,0)=" D SENDMSG(XDRFL,XDRFR,XDRPN1,XDRSSN1,XDRTO,XDRPN2,XDRSSN2,XDRSLT)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",64,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",65,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDADDS",66,0)="SENDMSG(XDRFL,XDRFR,XDRPN1,XDRSSN1,XDRTO,XDRPN2,XDRSSN2,XDRNEWR) ; Send email message"
^XTMP("XPDT",7641,"RTN","XDRDADDS",67,0)=" N XDRGRP,XDRGRPN,XMY,XMTEXT,XMSUB,XMDUZ,XMDUN,XMZ,X,R"
^XTMP("XPDT",7641,"RTN","XDRDADDS",68,0)=" ; Find DUPLICATE MANAGER MAIL GROUP on DUPLICATE RESOLUTION file."
^XTMP("XPDT",7641,"RTN","XDRDADDS",69,0)=" S XDRGRP=$$GET1^DIQ(15.1,""2,"",.11,""I"")"
^XTMP("XPDT",7641,"RTN","XDRDADDS",70,0)=" S XDRGRPN="""""
^XTMP("XPDT",7641,"RTN","XDRDADDS",71,0)=" S:XDRGRP>0 XDRGRPN=$$GET1^DIQ(3.8,XDRGRP,.01)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",72,0)=" I XDRGRPN]"""" S XMY(""G.""_XDRGRPN)="""""
^XTMP("XPDT",7641,"RTN","XDRDADDS",73,0)=" E  S XMY(.5)="""" ;If no mail grp found, send msg to postmaster"
^XTMP("XPDT",7641,"RTN","XDRDADDS",74,0)=" S X=""PATIENT"" S:XDRFL'=2 X=$P($G(^DIC(XDRFL,0)),U)"
^XTMP("XPDT",7641,"RTN","XDRDADDS",75,0)=" ; Build mail message"
^XTMP("XPDT",7641,"RTN","XDRDADDS",76,0)=" S R(1)=""The following two ""_X_"" records have been found to be potential duplicates"""
^XTMP("XPDT",7641,"RTN","XDRDADDS",77,0)=" S R(2)=""by the MPI matching algorithm. These records have been added to the local"""
^XTMP("XPDT",7641,"RTN","XDRDADDS",78,0)=" S R(3)=""DUPLICATE RECORD file and assigned record number ""_XDRNEWR_""."""
^XTMP("XPDT",7641,"RTN","XDRDADDS",79,0)=" S R(4)=""Please review these records to verify whether they are duplicates"""
^XTMP("XPDT",7641,"RTN","XDRDADDS",80,0)=" S R(5)=""and if so merge using the DUPLICATE RECORD MERGE software."""
^XTMP("XPDT",7641,"RTN","XDRDADDS",81,0)=" S R(6)="""""
^XTMP("XPDT",7641,"RTN","XDRDADDS",82,0)=" S R(7)=""  ""_X_"" 1: ""_XDRPN1_""  ""_XDRSSN1_""  (IEN #""_XDRFR_"")"""
^XTMP("XPDT",7641,"RTN","XDRDADDS",83,0)=" S R(8)=""  ""_X_"" 2: ""_XDRPN2_""  ""_XDRSSN2_""  (IEN #""_XDRTO_"")"""
^XTMP("XPDT",7641,"RTN","XDRDADDS",84,0)=" S XMTEXT=""R("",XMSUB=""Potential Duplicate ""_X_"" records found by MPI"",XMDUZ=.5"
^XTMP("XPDT",7641,"RTN","XDRDADDS",85,0)=" D ^XMD"
^XTMP("XPDT",7641,"RTN","XDRDADDS",86,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDADDS",87,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDADDS",88,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDCOMP")="0^5^B12808569^B11858573"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",1,0)="XDRDCOMP ;SF-IRMFO/IHS/OHPRD/JCM - COMPARE TWO PATIENTS VIA DUP CHECKER ;8/28/08  17:58"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",2,0)=" ;;7.3;TOOLKIT;**23,113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7641,"RTN","XDRDCOMP",4,0)=" ;;"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",5,0)=" ; This routine will compare two records (patients), and will result with"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",6,0)=" ; a score (0 - 100%) as to how they match up.  You can not compare the"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",7,0)=" ; same record."
^XTMP("XPDT",7641,"RTN","XDRDCOMP",8,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",9,0)=" ; *** NOTE *** As of patch XT*7.3*113, this routine is no longer"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",10,0)=" ; available for use on the PATIENT file. *****"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",11,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",12,0)="START ;"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",13,0)=" S XDRQFLG=0"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",14,0)=" ; XT*7.3*113 - Input param to FILE^XDRDPICK makes PATIENT file unselectable."
^XTMP("XPDT",7641,"RTN","XDRDCOMP",15,0)=" S XDRFL=$$FILE^XDRDPICK(1) Q:XDRFL'>0"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",16,0)=" G:XDRQFLG END"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",17,0)=" S XDRGL=^DIC(XDRFL,0,""GL"")"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",18,0)=" S XDRDTYPE=""BASIC"" ; ADDED 4/11/96  JLI"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",19,0)=" D LKUP G:XDRQFLG END"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",20,0)=" S %ZIS=""Q"" D ^%ZIS G:POP END"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",21,0)=" S (IOP,XDRDCOMP(""DEVICE""))=ION_"";""_IOM_"";""_IOSL"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",22,0)=" I $D(IO(""Q"")) D  G:XDRQFLG END"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",23,0)=" .S ZTRTN=""DQ^XDRDCOMP"",ZTIO=ION,ZTDESC=$P(^DIC(XDRFL,0),U)_"" COMPARISON LIST"""
^XTMP("XPDT",7641,"RTN","XDRDCOMP",24,0)=" .F %=""XDRCD"",""XDRCD2"",""XDRFL"",""XDRDTYPE"",""XDRGL"",""XDRD("",""XDRDCOMP("" S ZTSAVE(%)="""""
^XTMP("XPDT",7641,"RTN","XDRDCOMP",25,0)=" .D ^%ZTLOAD W:$D(ZTSK) !,""Queued as task ""_ZTSK,!"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",26,0)=" .S XDRQFLG=1"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",27,0)="DQ ; Entry Point for Taskman"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",28,0)=" U IO W @IOF"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",29,0)=" D ^XDRDSCOR"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",30,0)=" D ^XDRDUP ;S XDRD(""NOADD"")="""" D ^XDRDUP"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",31,0)=" D DITC"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",32,0)=" D SCORE"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",33,0)=" D ^%ZISC"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",34,0)="END D EOJ"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",35,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",36,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",37,0)="LKUP ;Look up both reocord."
^XTMP("XPDT",7641,"RTN","XDRDCOMP",38,0)=" S DIC=XDRGL,DIC(0)=""QEAM"""
^XTMP("XPDT",7641,"RTN","XDRDCOMP",39,0)=" S DIC(""A"")=""COMPARE ""_$P(^DIC(XDRFL,0),U)_"": """
^XTMP("XPDT",7641,"RTN","XDRDCOMP",40,0)=" D ^DIC ;W !,""X: "",X,""Y: "",Y"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",41,0)=" I $D(DIRUT)!(Y=-1) K DIC,DA S XDRQFLG=1 G LKUPX"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",42,0)=" S XDRCD=+Y S DIT(1)=+Y"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",43,0)="LKUP2 S DIC(""A"")=""    WITH ""_$P(^DIC(XDRFL,0),U)_"": """
^XTMP("XPDT",7641,"RTN","XDRDCOMP",44,0)=" D ^DIC K DIC,DA"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",45,0)=" G:$D(DIRUT)!(Y=-1) LKUP"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",46,0)=" S XDRCD2=+Y S DIT(2)=+Y"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",47,0)=" I XDRCD=XDRCD2 W *7,!!,""    CAN NOT COMPARE SAME PATIENT!!  "",!! G LKUP"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",48,0)="LKUPX Q"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",49,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",50,0)="DITC ;"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",51,0)=" D SHOW^XDRDSHOW(XDRFL,XDRCD,XDRCD2)"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",52,0)=" ;S DFF=XDRFL,DIC=XDRGL,DIT(1)=XDRCD,DIT(2)=XDRCD2,DDIF=2"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",53,0)=" ;S IOP=XDRDCOMP(""DEVICE"")"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",54,0)=" ;D EN^DITC K DIC,DFF,DIT,IOP,DDIF"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",55,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",56,0)="SCORE ;"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",57,0)=" S:XDRDSCOR(""MAX"")>0 XDRD(""DUPSCORE%"")=XDRD(""DUPSCORE"")/XDRDSCOR(""MAX"")"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",58,0)=" S:XDRDSCOR(""MAX"")=0 XDRD(""DUPSCORE%"")=0"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",59,0)=" S XDRD(""DUPSCORE%"")=$J(XDRD(""DUPSCORE%""),1,2)"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",60,0)=" S XDRD(""DUPSCORE%"")=$S(XDRD(""DUPSCORE%"")<0:0,XDRD(""DUPSCORE%"")<1:$E(XDRD(""DUPSCORE%""),3,4),1:100)"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",61,0)=" ;S IOP=XDRDCOMP(""DEVICE"") D ^%ZIS U IO"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",62,0)=" W !! F I=0:0 S I=$O(XDRDUP(""TEST SCORE"",I)) Q:I'>0  I +XDRDUP(""TEST SCORE"",I)'=0 S J=XDRDTEST(I) W !,$P(J,U),?25,""VALUE = "",$J(XDRDUP(""TEST SCORE"",I),3,0),""   MAX POSSIBLE = "",$J($P(J,U,6),3,0)"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",63,0)=" W !!,?40,""DUPLICATE THRESHOLD % "",XDRDSCOR(""PDT%"")"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",64,0)=" W !,?40,""DUPLICATE SCORE % "",$G(XDRD(""DUPSCORE%"")),!"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",65,0)=" K %,XDRDCNT"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",66,0)=" I '$D(ZTQUEUED),$E(IOST,1,2)'=""P-"" S DIR(0)=""E"" D ^DIR K DIR S:X=U XDRQFLG=1"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",67,0)=" ;D ^%ZISC"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",68,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",69,0)="QUEUE ;** Remove after testing **"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",70,0)=" I '$D(IOP),'$D(XDRDCOMP(""DEVICE"")) S %ZIS=""QMN"" D ^%ZIS"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",71,0)=" I POP S XDRQFLG=1 G QUEUEX"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",72,0)=" I $D(IO(""Q"")),IO=IO(0) W !!,""Sorry, you can't queue to your screen or a slave device."",! K IO(""Q"") G QUEUE"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",73,0)=" S (IOP,XDRDCOMP(""DEVICE""))=ION_"";""_IOM_"";""_IOSL K %ZIS"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",74,0)=" I '$D(IO(""Q"")) G QUEUEX"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",75,0)=" S ZTRTN=""DQ^XDRDCOMP"",ZTIO=ION,ZTDESC=$P(^DIC(XDRFL,0),U)_"" COMPARISON LIST"""
^XTMP("XPDT",7641,"RTN","XDRDCOMP",76,0)=" F %=""XDRCD"",""XDRCD2"",""XDRFL"",""XDRDTYPE"",""XDRGL"",""XDRD("",""XDRDCOMP("" S ZTSAVE(%)="""""
^XTMP("XPDT",7641,"RTN","XDRDCOMP",77,0)=" K %"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",78,0)=" ;S XYY=AAA ***************************"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",79,0)=" D ^%ZTLOAD W:$D(ZTSK) !,""Queued as task ""_ZTSK,!"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",80,0)=" S XDRQFLG=1"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",81,0)=" K ZTSK"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",82,0)="QUEUEX Q"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",83,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",84,0)="EOJ ;"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",85,0)=" K XDRDCOMP,XDRDUP,XDRD,XDRFL,XDRGL,XDRQFLG,XDRDTEST,XDRDSCOR"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",86,0)=" K XDRCD,XDRCD2,%IS,POP,IO(""C""),IOP,IO(""Q""),X,Y,ZTSK"
^XTMP("XPDT",7641,"RTN","XDRDCOMP",87,0)=" S:$D(ZTQUEUED) ZTREQ=""@"""
^XTMP("XPDT",7641,"RTN","XDRDCOMP",88,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDEDT")="0^2^B33732705^B30537900"
^XTMP("XPDT",7641,"RTN","XDRDEDT",1,0)="XDRDEDT ;SF-IRMFO/REM - EDIT STATUS FIELD IN FILE 15 ;10/10/08  13:38"
^XTMP("XPDT",7641,"RTN","XDRDEDT",2,0)=" ;;7.3;TOOLKIT;**23,43,113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XDRDEDT",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7641,"RTN","XDRDEDT",4,0)="EN ;;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",5,0)=" N XDRFIL,X,X1,X2,N1,N2,XDRDELET,XDROSTAT"
^XTMP("XPDT",7641,"RTN","XDRDEDT",6,0)="EN2 K DIE,DIC"
^XTMP("XPDT",7641,"RTN","XDRDEDT",7,0)=" S XDRFIL=$$FILE^XDRDPICK() Q:XDRFIL'>0  S XDRGLB=$G(^DIC(XDRFIL,0,""GL"")) Q:XDRGLB="""""
^XTMP("XPDT",7641,"RTN","XDRDEDT",8,0)=" F  D  Q:DA'>0"
^XTMP("XPDT",7641,"RTN","XDRDEDT",9,0)=" . S DIC=""^VA(15,"",DIC(0)=""AEQZ"",DIC(""S"")=""I $$SCRN^XDRDEDT(+Y,XDRGLB)"""
^XTMP("XPDT",7641,"RTN","XDRDEDT",10,0)=" . S DIC(""A"")=""Select an Entry to ""_$S($D(XDRDELET):""DELETE: "",1:""RESET TO POTENTIAL DUPLICATES: "")"
^XTMP("XPDT",7641,"RTN","XDRDEDT",11,0)=" . D ^DIC S DA=+Y Q:DA<0"
^XTMP("XPDT",7641,"RTN","XDRDEDT",12,0)=" . I $P(^VA(15,DA,0),U,4)<2 S X1=+^VA(15,DA,0),X2=+$P(^(0),U,2)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",13,0)=" . E  S X1=+$P(^VA(15,DA,0),U,2),X2=+^(0)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",14,0)=" . S N1=$P(@(XDRGLB_X1_"",0)""),U),N2=$P(@(XDRGLB_X2_"",0)""),U)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",15,0)=" . S N1=$$PEELNAM(N1),N2=$$PEELNAM(N2)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",16,0)=" . W !!!,""  Duplicate Record File Entry "",DA,"" for the "",$P(^DIC(XDRFIL,0),U),"" FILE"""
^XTMP("XPDT",7641,"RTN","XDRDEDT",17,0)=" . ; XT*7.3*113 changed to call $$GET1^DIQ instead of EN^DIQ"
^XTMP("XPDT",7641,"RTN","XDRDEDT",18,0)=" . S XDROSTAT=$$GET1^DIQ(15,DA_"","",.03)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",19,0)=" . W !?10,X1,?20,N1,!?10,X2,?20,N2,!!?10,""Currently listed as "",XDROSTAT,!!"
^XTMP("XPDT",7641,"RTN","XDRDEDT",20,0)=" . S DIR(0)=""Y"",DIR(""A"")=""Do you really want to ""_$S($D(XDRDELET):""DELETE THIS DUPLICATE RECORD ENTRY"",1:""RESET to POTENTIAL DUPLICATE""),DIR(""B"")=""NO"""
^XTMP("XPDT",7641,"RTN","XDRDEDT",21,0)=" . D ^DIR Q:Y'>0"
^XTMP("XPDT",7641,"RTN","XDRDEDT",22,0)=" . D NAME(DA)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",23,0)=" . I $D(XDRDELET) D"
^XTMP("XPDT",7641,"RTN","XDRDEDT",24,0)=" . . N DIK"
^XTMP("XPDT",7641,"RTN","XDRDEDT",25,0)=" . . S DIK=""^VA(15,"" D ^DIK"
^XTMP("XPDT",7641,"RTN","XDRDEDT",26,0)=" . I '$D(XDRDELET) D"
^XTMP("XPDT",7641,"RTN","XDRDEDT",27,0)=" . . K DIE S DIE=""^VA(15,"",DR="".03///P;.04///@;.05///@;.07///@;.08///@;.1///@;.13///@;.14///@;"" D ^DIE K DIE"
^XTMP("XPDT",7641,"RTN","XDRDEDT",28,0)=" . . S:$D(DUZ) $P(^VA(15,DA,0),U,12)=DUZ"
^XTMP("XPDT",7641,"RTN","XDRDEDT",29,0)=" . . K ^VA(15,DA,2)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",30,0)=" . . K ^VA(15,DA,3)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",31,0)=" . W !!,""   "",$S($D(XDRDELET):""Entry DELETED!"",1:""Status RESET to POTENTIAL DUPLICATE RECORD.""),!!,*7"
^XTMP("XPDT",7641,"RTN","XDRDEDT",32,0)=" . ; If PATIENT and previous status was VERIFIED, NOT A DUPLICATE, inactivate entry"
^XTMP("XPDT",7641,"RTN","XDRDEDT",33,0)=" . ; on the MPI DO NOT LINK file 985.28. - (new with XT*7.3*113)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",34,0)=" . I XDROSTAT'=""VERIFIED, NOT A DUPLICATE"" Q"
^XTMP("XPDT",7641,"RTN","XDRDEDT",35,0)=" . Q:XDRFIL'=2"
^XTMP("XPDT",7641,"RTN","XDRDEDT",36,0)=" . ; Quit if routine ^MPIFDNL is not loaded"
^XTMP("XPDT",7641,"RTN","XDRDEDT",37,0)=" . S X=""MPIFDNL"" X ^%ZOSF(""TEST"") Q:'$T"
^XTMP("XPDT",7641,"RTN","XDRDEDT",38,0)=" . S X=^VA(15,DA,0)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",39,0)=" . D CALLRPC^MPIFDNL(DUZ,DUZ(2),+X,+$P(X,U,2),1)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",40,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRDEDT",41,0)=" K DA,DR,DIC,DIE"
^XTMP("XPDT",7641,"RTN","XDRDEDT",42,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDEDT",43,0)="SCRN(DA,GLOBAL) ;Screen for verified dup. or verified not dup."
^XTMP("XPDT",7641,"RTN","XDRDEDT",44,0)=" I $P(^(0),U,5)>1 Q 0 ; But don't take merged or merge in progress!"
^XTMP("XPDT",7641,"RTN","XDRDEDT",45,0)=" I '$D(XDRDELET),$P(^(0),U,3)=""P""!($P(^(0),U,3)=""O"") Q 0 ; DON'T NEED TO SET BACK"
^XTMP("XPDT",7641,"RTN","XDRDEDT",46,0)=" I (U_$P($P(^(0),U),"";"",2))'=GLOBAL Q 0 ; Take only the specified file"
^XTMP("XPDT",7641,"RTN","XDRDEDT",47,0)=" ;I $P(^(0),U,3)=""V"" Q 1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",48,0)=" ;I $P(^(0),U,3)=""N"" Q 1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",49,0)=" Q 1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",50,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",51,0)="NAME(DA) ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",52,0)=" N X,X1,X2,N,N1,N2"
^XTMP("XPDT",7641,"RTN","XDRDEDT",53,0)=" S X=^VA(15,DA,0),X1=+X,X2=+$P(X,U,2),X=$P($P(X,U),"";"",2)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",54,0)=" S N1=$P($G(@(U_X_X1_"",0)"")),U)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",55,0)=" S N2=$P($G(@(U_X_X2_"",0)"")),U)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",56,0)=" S N=$$PEELNAM(N1)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",57,0)=" I N'=N1 S $P(@(U_X_X1_"",0)""),U)=N"
^XTMP("XPDT",7641,"RTN","XDRDEDT",58,0)=" S N=$$PEELNAM(N2)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",59,0)=" I N'=N2 S $P(@(U_X_X2_"",0)""),U)=N"
^XTMP("XPDT",7641,"RTN","XDRDEDT",60,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDEDT",61,0)="PEELNAM(NAME) ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",62,0)=" F  Q:NAME'[""MERGING INTO""  S NAME=$P($P(NAME,""("",2,10),"")"",1,$L(NAME,"")"")-1)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",63,0)=" Q NAME"
^XTMP("XPDT",7641,"RTN","XDRDEDT",64,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",65,0)="DELETE ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",66,0)=" N XDRFIL,X,X1,X2,N1,N2,XDRDELET"
^XTMP("XPDT",7641,"RTN","XDRDEDT",67,0)=" S XDRDELET=1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",68,0)=" D EN2"
^XTMP("XPDT",7641,"RTN","XDRDEDT",69,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDEDT",70,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",71,0)="LOOKUP(FILE) ; FIND PAIRS IN DUPLICATE RECORD FILE"
^XTMP("XPDT",7641,"RTN","XDRDEDT",72,0)=" N FILENAM,NAME,NAME1,NAME2,NAMEA,XDRDIC,DIR,Y,I,J,XDR1,IEN,N,X,FILID,IEN1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",73,0)=" S FILENAM=$P(^DIC(FILE,0),U) I FILENAM="""" G NOFILE"
^XTMP("XPDT",7641,"RTN","XDRDEDT",74,0)=" S XDRDIC=$G(^DIC(FILE,0,""GL"")) I XDRDIC="""" G NOFILE"
^XTMP("XPDT",7641,"RTN","XDRDEDT",75,0)=" S XDRDIC="";""_$E(XDRDIC,2,99)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",76,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",77,0)="LOOK1 K DIR S DIR(""A"")=""Select ""_FILENAM,DIR(0)=""FO^2"" D ^DIR K DIR ; GET PART OF A NAME"
^XTMP("XPDT",7641,"RTN","XDRDEDT",78,0)=" I X="""" Q -1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",79,0)=" I $D(DIRUT)!(Y=""^"") Q -1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",80,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",81,0)=" ; GET A LIST OF NAMES IN THE FILE STARTING WITH THE USERS INPUT AND WHICH HAVE AN IEN THAT IS"
^XTMP("XPDT",7641,"RTN","XDRDEDT",82,0)=" ; IN THE DUPLICATE RECORD FILE"
^XTMP("XPDT",7641,"RTN","XDRDEDT",83,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",84,0)=" S NAME=$NA(^TMP($J,""XDRLIST"")) K @NAME"
^XTMP("XPDT",7641,"RTN","XDRDEDT",85,0)=" D FIND^DIC(FILE,"""","""","""",X,"""",""B^BS5^SSN"",""I $D(^VA(15,""""B"""",(Y_XDRDIC)))"","""",NAME)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",86,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",87,0)=" S NAME1=$NA(@NAME@(""DILIST""))"
^XTMP("XPDT",7641,"RTN","XDRDEDT",88,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",89,0)=" ; NOW GO THROUGH THE LIST OF MATCHING NAMES AND CHECK FOR THOSE WHICH HAVE THE DESIRED STATUS"
^XTMP("XPDT",7641,"RTN","XDRDEDT",90,0)=" ;    USE THE DATA UNDER THE 2 NODE WHICH IS THE IEN"
^XTMP("XPDT",7641,"RTN","XDRDEDT",91,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",92,0)=" F I=0:0 S I=$O(@NAME1@(2,I)) Q:I'>0  S IEN=^(I) D"
^XTMP("XPDT",7641,"RTN","XDRDEDT",93,0)=" . S XDR1=IEN_XDRDIC"
^XTMP("XPDT",7641,"RTN","XDRDEDT",94,0)=" . F J=0:0 S J=$O(^VA(15,""B"",XDR1,J)) Q:J'>0  I $P(^VA(15,J,0),U,3)=""P"" Q"
^XTMP("XPDT",7641,"RTN","XDRDEDT",95,0)=" . ; IF NOT AT LEAST ONE WITH THE DESIRED STATUS, THEN REMOVE IT FROM THE ARRAY"
^XTMP("XPDT",7641,"RTN","XDRDEDT",96,0)=" . I J'>0 F J=1,2,""ID"" K @NAME1@(J,I)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",97,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRDEDT",98,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",99,0)=" S J=$O(@NAME1@(2,0)) I J'>0 G NONAME"
^XTMP("XPDT",7641,"RTN","XDRDEDT",100,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",101,0)=" S NAME2=$NA(^TMP($J,""XDRLI1"")) K @NAME2"
^XTMP("XPDT",7641,"RTN","XDRDEDT",102,0)=" S N=0 F I=0:0 S I=$O(@NAME1@(1,I)) Q:I'>0  D"
^XTMP("XPDT",7641,"RTN","XDRDEDT",103,0)=" . S N=N+1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",104,0)=" . S X=@NAME1@(1,I)_"" [ien=""_@NAME1@(2,I)_""]"" F J=0:0 S J=$O(@NAME1@(""ID"",I,J)) Q:J'>0  S FILID(J)="""" S X=X_""  ""_@NAME1@(""ID"",I,J)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",105,0)=" . S @NAME2@(N)=X,@NAME2@(N,""IEN"")=@NAME1@(2,I)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",106,0)=" S X=$$ASK(NAME2) I X'>0 G NONAME"
^XTMP("XPDT",7641,"RTN","XDRDEDT",107,0)=" I N>1 W @NAME2@(X)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",108,0)=" S IEN1=@NAME2@(X,""IEN"")_XDRDIC K @NAME2,@NAME"
^XTMP("XPDT",7641,"RTN","XDRDEDT",109,0)=" S X=$$PAIR(IEN1,""FILID"") I X'>0 G NONAME"
^XTMP("XPDT",7641,"RTN","XDRDEDT",110,0)=" Q X"
^XTMP("XPDT",7641,"RTN","XDRDEDT",111,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",112,0)="PAIR(IENDIC,IDARR) ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",113,0)=" N FILE,IEN,NAME,XDRN,IEN2,XDRX1,XDRJ,XDRX"
^XTMP("XPDT",7641,"RTN","XDRDEDT",114,0)=" S NAME=$NA(^TMP($J,""XDRPAIR"")) K @NAME"
^XTMP("XPDT",7641,"RTN","XDRDEDT",115,0)=" S FILE=+$P(@(U_$P(IENDIC,"";"",2)_""0)""),U,2),XDRN=0"
^XTMP("XPDT",7641,"RTN","XDRDEDT",116,0)=" F IEN=0:0 S IEN=$O(^VA(15,""B"",IENDIC,IEN)) Q:IEN'>0  I $P(^VA(15,IEN,0),U,3)=""P"" D"
^XTMP("XPDT",7641,"RTN","XDRDEDT",117,0)=" . S XDRN=XDRN+1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",118,0)=" . S XDRX=^VA(15,IEN,0)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",119,0)=" . S IEN2=$P(XDRX,U) I IEN2=IENDIC S IEN2=$P(XDRX,U,2)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",120,0)=" . S IEN2=+IEN2,IENS=IEN2_"","""
^XTMP("XPDT",7641,"RTN","XDRDEDT",121,0)=" . S XDRX1=$$GET1^DIQ(FILE,IENS,.01)_"" [iens=""_IEN2_""]"""
^XTMP("XPDT",7641,"RTN","XDRDEDT",122,0)=" . F XDRJ=0:0 S XDRJ=$O(@IDARR@(XDRJ)) Q:XDRJ'>0  S XDRX1=XDRX1_""  ""_$$GET1^DIQ(FILE,IENS,XDRJ)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",123,0)=" . S @NAME@(XDRN)=XDRX1,@NAME@(XDRN,""IEN"")=IEN"
^XTMP("XPDT",7641,"RTN","XDRDEDT",124,0)=" I XDRN>1 W !!,""This entry is paired with more than one other record."",!,""Select which pair from the following list:"",!"
^XTMP("XPDT",7641,"RTN","XDRDEDT",125,0)=" S XDRX=$$ASK(NAME) I XDRX>0 S XDRX=@NAME@(XDRX,""IEN"")"
^XTMP("XPDT",7641,"RTN","XDRDEDT",126,0)=" K @NAME"
^XTMP("XPDT",7641,"RTN","XDRDEDT",127,0)=" Q XDRX"
^XTMP("XPDT",7641,"RTN","XDRDEDT",128,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",129,0)="ASK(ARRAY) ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",130,0)=" N N,I,N1,NCHOICE"
^XTMP("XPDT",7641,"RTN","XDRDEDT",131,0)=" W !"
^XTMP("XPDT",7641,"RTN","XDRDEDT",132,0)=" S N=0 F I=0:0 S I=$O(@ARRAY@(I)) Q:I'>0  S N=N+1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",133,0)=" I N'>1 S I=+$O(@ARRAY@(0)) W:I>0 @ARRAY@(I) Q I"
^XTMP("XPDT",7641,"RTN","XDRDEDT",134,0)=" I N>5 W ""There are ""_N_"" choices."",!!"
^XTMP("XPDT",7641,"RTN","XDRDEDT",135,0)=" S N1=0,NCHOICE=0"
^XTMP("XPDT",7641,"RTN","XDRDEDT",136,0)=" F I=0:0 S I=$O(@ARRAY@(I)) Q:I'>0  S N1=N1+1 W !,N1,"".  "",@ARRAY@(I) I '(N1#5) S NCHOICE=$$ASKEM(N1,N) Q:NCHOICE  Q:$D(DIRUT)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",137,0)=" I 'NCHOICE,'$D(DIRUT) S NCHOICE=$$ASKEM(N1,N1)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",138,0)=" Q NCHOICE"
^XTMP("XPDT",7641,"RTN","XDRDEDT",139,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",140,0)="ASKEM(NCUR,NMAX) ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",141,0)=" N DIR,Y"
^XTMP("XPDT",7641,"RTN","XDRDEDT",142,0)=" W !! I NCUR<NMAX W !,""Choose from 1 to ""_NCUR S DIR(""A"")=""Or return to continue: "",DIR(0)=""NO^1:""_NCUR"
^XTMP("XPDT",7641,"RTN","XDRDEDT",143,0)=" E  S DIR(""A"")=""Choose from 1 to ""_NCUR,DIR(0)=""N^1:""_NCUR"
^XTMP("XPDT",7641,"RTN","XDRDEDT",144,0)=" D ^DIR W ! I $D(DIRUT),'$D(DTOUT),'$D(DUOUT) K DIRUT"
^XTMP("XPDT",7641,"RTN","XDRDEDT",145,0)=" Q $S(Y>0:Y,1:0)"
^XTMP("XPDT",7641,"RTN","XDRDEDT",146,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",147,0)="NOFILE ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",148,0)=" W !,""FILE "",FILE,"" NOT FOUND"",$C(7),!!"
^XTMP("XPDT",7641,"RTN","XDRDEDT",149,0)=" Q -1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",150,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",151,0)="NONAME ;"
^XTMP("XPDT",7641,"RTN","XDRDEDT",152,0)=" W $C(7),""??"""
^XTMP("XPDT",7641,"RTN","XDRDEDT",153,0)=" G LOOK1"
^XTMP("XPDT",7641,"RTN","XDRDEDT",154,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEFLG")="0^11^B1931825^n/a"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",1,0)="XDRDEFLG ;SF-IRMFO/TKW -  SILENT API TO UPDATE THE SUPPRESS NEW DUP EMAIL FLAG ;9/19/08  16:57"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",2,0)=" ;;7.3;TOOLKIT;**113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",4,0)="EN(XDRSLT,XDRFL,XDRVAL) ; Update the SUPPRESS NEW DUP EMAIL field on record in file #15.1"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",5,0)=" ; Called from REMOTE PROCEDURE - XDR UPD EMAIL FLAG"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",6,0)=" ;  XDRSLT = OUTPUT results."
^XTMP("XPDT",7641,"RTN","XDRDEFLG",7,0)=" ;    set to 0 if update was successful, -1^ERRMSG if error"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",8,0)=" ;  XDRFL = 'FILE TO BE CHECKED' field value in file 15.1, defaults to PATIENT file."
^XTMP("XPDT",7641,"RTN","XDRDEFLG",9,0)=" ;  XDRVAL = 0 or 1 (value to set into field)"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",10,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",11,0)=" K XDRSLT"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",12,0)=" N XDRGBL,XDRFDA"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",13,0)=" ; Default file is PATIENT file."
^XTMP("XPDT",7641,"RTN","XDRDEFLG",14,0)=" S XDRFL=+$G(XDRFL)"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",15,0)=" S:'XDRFL XDRFL=2"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",16,0)=" ; Check file number input parameter"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",17,0)=" S XDRGBL=$G(^DIC(XDRFL,0,""GL""))"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",18,0)=" I (XDRGBL="""")!($G(^VA(15.1,XDRFL,0))="""") D  Q"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",19,0)=" . S XDRSLT=""-1^File number parameter missing or invalid"" Q"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",20,0)=" ; Make sure XDRVAL is set to 0 or 1"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",21,0)=" S XDRVAL=$G(XDRVAL)"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",22,0)=" I XDRVAL'=0,XDRVAL'=1 D  Q"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",23,0)=" . S XDRSLT=""-1^Value parameter is invalid, must be set to 0 or 1"" Q"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",24,0)=" ; Update SUPPRESS NEW DUP EMAIL field."
^XTMP("XPDT",7641,"RTN","XDRDEFLG",25,0)=" S XDRFDA(15.1,XDRFL_"","",99)=XDRVAL"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",26,0)=" D FILE^DIE("""",""XDRFDA"")"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",27,0)=" I $D(^TMP(""DIERR"",$J)) D  Q"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",28,0)=" . S XDRSLT=""-1^Error updating FIELD 99, FILE 15.1, REC: ""_XDRFL_"" - ""_$G(^TMP(""DIERR"",$J,1,""TEXT"",1))"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",29,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",30,0)=" ; Success"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",31,0)=" S XDRSLT=0"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",32,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",33,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDEFLG",34,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDFPD")="0^6^B14210534^B13529157"
^XTMP("XPDT",7641,"RTN","XDRDFPD",1,0)="XDRDFPD ;IHS/OHPRD/LAB - find all potential duplicates for an entry in a file ;6/9/08  11:26"
^XTMP("XPDT",7641,"RTN","XDRDFPD",2,0)=" ;;7.3;TOOLKIT;**113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XDRDFPD",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7641,"RTN","XDRDFPD",4,0)="START ;"
^XTMP("XPDT",7641,"RTN","XDRDFPD",5,0)="INIT ;Initialization"
^XTMP("XPDT",7641,"RTN","XDRDFPD",6,0)=" W !,""This option will collect all Potential Duplicates for an entry in a file."",!,""It will then add any pairs found to the Duplicate Record file."",!"
^XTMP("XPDT",7641,"RTN","XDRDFPD",7,0)=" D PROCESS"
^XTMP("XPDT",7641,"RTN","XDRDFPD",8,0)=" G:XDRQFLG END"
^XTMP("XPDT",7641,"RTN","XDRDFPD",9,0)=" D INFORM"
^XTMP("XPDT",7641,"RTN","XDRDFPD",10,0)="END D EOJ"
^XTMP("XPDT",7641,"RTN","XDRDFPD",11,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDFPD",12,0)="PROCESS ;"
^XTMP("XPDT",7641,"RTN","XDRDFPD",13,0)=" K XDRD"
^XTMP("XPDT",7641,"RTN","XDRDFPD",14,0)=" ; Flag XDRNOPT makes FILE^XDRDQUE not allow selection of PATIENT file - XT*7.3*113"
^XTMP("XPDT",7641,"RTN","XDRDFPD",15,0)=" N XDRNOPT S XDRNOPT=1"
^XTMP("XPDT",7641,"RTN","XDRDFPD",16,0)=" S XDRQFLG=0,XDRDTYPE=""b"""
^XTMP("XPDT",7641,"RTN","XDRDFPD",17,0)=" S DIC(""A"")=""Find Potential Duplicates for entry in what file: "" D FILE^XDRDQUE"
^XTMP("XPDT",7641,"RTN","XDRDFPD",18,0)=" G:XDRQFLG PROCESSX"
^XTMP("XPDT",7641,"RTN","XDRDFPD",19,0)=" D SETUP"
^XTMP("XPDT",7641,"RTN","XDRDFPD",20,0)=" S XDRGL=^DIC(XDRFL,0,""GL"")"
^XTMP("XPDT",7641,"RTN","XDRDFPD",21,0)=" I '$D(XDRCD) D LKUP Q:XDRQFLG"
^XTMP("XPDT",7641,"RTN","XDRDFPD",22,0)=" W:'$D(ZTQUEUED) !!,""Hold On... This may take a little while..."",!"
^XTMP("XPDT",7641,"RTN","XDRDFPD",23,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDFPD",24,0)=" D POSDUPS^XDRDMAIN"
^XTMP("XPDT",7641,"RTN","XDRDFPD",25,0)=" D:$D(^TMP(""XDRD"",$J,XDRFL)) CHECK"
^XTMP("XPDT",7641,"RTN","XDRDFPD",26,0)="PROCESSX Q"
^XTMP("XPDT",7641,"RTN","XDRDFPD",27,0)="EOJ ;clean up"
^XTMP("XPDT",7641,"RTN","XDRDFPD",28,0)=" K XDRQFLG,XDRD,XDRDSCOR,XDRDTEST,XDRFL,XDRGL,XDRCD,XDRCD2,XDRDCNT,XDRDMAIN,XDRDTYPE,XDRDUP,XDRDFPD"
^XTMP("XPDT",7641,"RTN","XDRDFPD",29,0)=" K ^TMP(""XDRD"",$J)"
^XTMP("XPDT",7641,"RTN","XDRDFPD",30,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDFPD",31,0)="EN ;Entry Point (caller must pass XDRCD,XDRFL)"
^XTMP("XPDT",7641,"RTN","XDRDFPD",32,0)=" I '$D(XDRCD) S XDRERR=15 D ^XDREMSG G ENX"
^XTMP("XPDT",7641,"RTN","XDRDFPD",33,0)=" I '$D(XDRFL) S XDRERR=14 D ^XDREMSG G ENX"
^XTMP("XPDT",7641,"RTN","XDRDFPD",34,0)=" I '$D(^VA(15.1,XDRFL,0)) S XDRERR=6 D ^XDREMSG G ENX"
^XTMP("XPDT",7641,"RTN","XDRDFPD",35,0)=" D PROCESS"
^XTMP("XPDT",7641,"RTN","XDRDFPD",36,0)="ENX ;"
^XTMP("XPDT",7641,"RTN","XDRDFPD",37,0)=" K XDRDFPD,XDRDSCOR,XDRD,XDRDTEST,XDRGL,XDRCD2,XDRDCNT,XDRDMAIN,XDRDTYPE,XDRDUP"
^XTMP("XPDT",7641,"RTN","XDRDFPD",38,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDFPD",39,0)="LKUP ;"
^XTMP("XPDT",7641,"RTN","XDRDFPD",40,0)=" S DIC=XDRGL,DIC(0)=""AEMQ"",DIC(""A"")=""Find Potential Duplicates for ""_$P(^DIC(XDRFL,0),U)_"":  """
^XTMP("XPDT",7641,"RTN","XDRDFPD",41,0)=" D ^DIC K DIC,DA"
^XTMP("XPDT",7641,"RTN","XDRDFPD",42,0)=" I Y=-1 S XDRQFLG=1 G LKUPX"
^XTMP("XPDT",7641,"RTN","XDRDFPD",43,0)=" S XDRCD=+Y"
^XTMP("XPDT",7641,"RTN","XDRDFPD",44,0)="LKUPX ;"
^XTMP("XPDT",7641,"RTN","XDRDFPD",45,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDFPD",46,0)="SETUP ;"
^XTMP("XPDT",7641,"RTN","XDRDFPD",47,0)=" S XDRD(""COLLECTION ROUTINE"")=$S($P($P(XDRD(0),U,9),""-"",2)]"""":$P($P(XDRD(0),U,9),""-"")_""^""_$P($P(XDRD(0),U,9),""-"",2),1:U_$P(XDRD(0),U,9))"
^XTMP("XPDT",7641,"RTN","XDRDFPD",48,0)=" I '$D(XDRD(""DMAILGRP"")),$D(XDRD(0)),$P(XDRD(0),U,11),$D(^XMB(3.8,$P(XDRD(0),U,11),1,""B"")) F XDRI=0:0 S XDRI=$O(^XMB(3.8,$P(XDRD(0),U,11),1,""B"",XDRI)) Q:'XDRI  S XDRD(""DMAILGRP"",XDRI)="""""
^XTMP("XPDT",7641,"RTN","XDRDFPD",49,0)=" K XDRI"
^XTMP("XPDT",7641,"RTN","XDRDFPD",50,0)=" D ^XDRDSCOR ; Sets up Duplicate Test Scores"
^XTMP("XPDT",7641,"RTN","XDRDFPD",51,0)="SETUPX ;"
^XTMP("XPDT",7641,"RTN","XDRDFPD",52,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDFPD",53,0)="CHECK ;check for duplicates and add to Duplicate record file"
^XTMP("XPDT",7641,"RTN","XDRDFPD",54,0)=" F XDRCD2=0:0 S XDRCD2=$O(^TMP(""XDRD"",$J,XDRFL,XDRCD2)) Q:'XDRCD2!(XDRQFLG)  D CHECK^XDRDMAIN"
^XTMP("XPDT",7641,"RTN","XDRDFPD",55,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDFPD",56,0)="INFORM ;"
^XTMP("XPDT",7641,"RTN","XDRDFPD",57,0)=" S XDRDFPD(""PAIR"")="""",%=0 F  S XDRDFPD(""PAIR"")=$O(^VA(15,""APOT"",$P(XDRGL,""^"",2),XDRDFPD(""PAIR"")))  Q:XDRDFPD(""PAIR"")=""""  D"
^XTMP("XPDT",7641,"RTN","XDRDFPD",58,0)=" .I $P(XDRDFPD(""PAIR""),U)=XDRCD!($P(XDRDFPD(""PAIR""),U,2)=XDRCD) S %=%+1,XDRDFPD(""FOUND"",%)=XDRDFPD(""PAIR"")"
^XTMP("XPDT",7641,"RTN","XDRDFPD",59,0)=" .Q"
^XTMP("XPDT",7641,"RTN","XDRDFPD",60,0)=" I '$D(XDRDFPD(""FOUND"")) W !!,""NO Potential Duplicates were found for "",$P(^DIC(XDRFL,0),U),"":  "",$P(@(XDRGL_XDRCD_"",0)""),U) Q"
^XTMP("XPDT",7641,"RTN","XDRDFPD",61,0)=" W !!,""The following "",$P(^DIC(XDRFL,0),U),"" entry(ies) are now in the Duplicate  "",!,""Record file as Potential Duplicates to "",!,$P(^DIC(XDRFL,0),U),"":  "",$P(@(XDRGL_XDRCD_"",0)""),U)"
^XTMP("XPDT",7641,"RTN","XDRDFPD",62,0)=" S X="""" F  S X=$O(XDRDFPD(""FOUND"",X)) Q:X=""""  D"
^XTMP("XPDT",7641,"RTN","XDRDFPD",63,0)=" .W !?20,$S($P(XDRDFPD(""FOUND"",X),U)=XDRCD:$P(@(XDRGL_$P(XDRDFPD(""FOUND"",X),U,2)_"",0)""),U),1:$P(@(XDRGL_$P(XDRDFPD(""FOUND"",X),U)_"",0)""),U))"
^XTMP("XPDT",7641,"RTN","XDRDFPD",64,0)=" .Q"
^XTMP("XPDT",7641,"RTN","XDRDFPD",65,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDLIST")="0^7^B16235628^B15430835"
^XTMP("XPDT",7641,"RTN","XDRDLIST",1,0)="XDRDLIST ;SF-IRMFO/IHS/OHPRD/JCM - PRINT POTENTIAL AND VERIFIED DUPLICATES;    [ 08/13/92  09:50 AM ] ;8/28/08  18:13"
^XTMP("XPDT",7641,"RTN","XDRDLIST",2,0)=" ;;7.3;TOOLKIT;**23,113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XDRDLIST",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7641,"RTN","XDRDLIST",4,0)=" ;;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",5,0)=" N XDRFL,XDRFLD"
^XTMP("XPDT",7641,"RTN","XDRDLIST",6,0)="START ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",7,0)=" S XDRQFLG=0"
^XTMP("XPDT",7641,"RTN","XDRDLIST",8,0)=" ; XT*7.3*113 input variable XDRNOPT to FILE^XDRDQUE-if UNDEF, allows PATIENT file to be selected"
^XTMP("XPDT",7641,"RTN","XDRDLIST",9,0)=" N XDRNOPT"
^XTMP("XPDT",7641,"RTN","XDRDLIST",10,0)=" ;W !!,""Choose type of list."""
^XTMP("XPDT",7641,"RTN","XDRDLIST",11,0)=" S DIR(""?"")=""BRIEF prints the fields: RECORD1, RECORD2 and the IEN for each entry.  CAPTIONED is FileMan's CAPTIONED format."""
^XTMP("XPDT",7641,"RTN","XDRDLIST",12,0)=" S DIR(""A"")=""Choose type of list"",DIR(0)=""SO^1:BRIEF;2:CAPTIONED"" D ^DIR K DIR G:$D(DIRUT) END"
^XTMP("XPDT",7641,"RTN","XDRDLIST",13,0)=" S XDRFLD=Y"
^XTMP("XPDT",7641,"RTN","XDRDLIST",14,0)=" I '$D(XDRFL) S DIC(""A"")=""Select File you wish to list for: "" D FILE^XDRDQUE G:XDRQFLG END"
^XTMP("XPDT",7641,"RTN","XDRDLIST",15,0)=" D ASK G:XDRQFLG END ; Asks which type of listing you want"
^XTMP("XPDT",7641,"RTN","XDRDLIST",16,0)=" D @$S(XDRDLIST(""ASK"")=1:""POT"",XDRDLIST(""ASK"")=2:""NOT"",XDRDLIST(""ASK"")=3:""VER"",1:""MERGED"")"
^XTMP("XPDT",7641,"RTN","XDRDLIST",17,0)=" G:'XDRQFLG START"
^XTMP("XPDT",7641,"RTN","XDRDLIST",18,0)="END D EOJ ; End of job and cleans up variables"
^XTMP("XPDT",7641,"RTN","XDRDLIST",19,0)=" Q  ; End of routine"
^XTMP("XPDT",7641,"RTN","XDRDLIST",20,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",21,0)="ASK ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",22,0)=" K XDRDLIST(""ASK"")"
^XTMP("XPDT",7641,"RTN","XDRDLIST",23,0)=" S XDRDLIST(""GL"")=$S($D(^DIC(XDRFL,0,""GL"")):$P(^DIC(XDRFL,0,""GL""),U,2),1:"""")"
^XTMP("XPDT",7641,"RTN","XDRDLIST",24,0)=" I XDRDLIST(""GL"")']"""" S XDRQFLG=1 G ASKX"
^XTMP("XPDT",7641,"RTN","XDRDLIST",25,0)=" W !!,""This utility provides reports on verified and unverified potential duplicates."""
^XTMP("XPDT",7641,"RTN","XDRDLIST",26,0)="WHCH S DIR(""A"")=""report"",DIR(0)=""SO^1:UNVERIFIED potential duplicates;2:NOT READY TO MERGE VERIFIED duplicates;3:READY TO MERGE VERIFIED duplicates;4:MERGED VERIFIED duplicates"" D ^DIR K DIR"
^XTMP("XPDT",7641,"RTN","XDRDLIST",27,0)=" I $D(DIRUT) S XDRQFLG=1 G ASKX"
^XTMP("XPDT",7641,"RTN","XDRDLIST",28,0)=" I Y="" "" S XDRQFLG=1 G ASKX"
^XTMP("XPDT",7641,"RTN","XDRDLIST",29,0)=" S XDRDLIST(""ASK"")=$S(Y=1:1,Y=2:2,Y=3:3,1:4)"
^XTMP("XPDT",7641,"RTN","XDRDLIST",30,0)=" I XDRDLIST(""ASK"")=1,'$D(^VA(15,""APOT"",XDRDLIST(""GL""))) W !,""There are no unverified potential duplicates at this time."",$C(7) K XDRDLIST(""ASK"") G WHCH"
^XTMP("XPDT",7641,"RTN","XDRDLIST",31,0)=" I XDRDLIST(""ASK"")=3,'$D(^VA(15,""AMRG"",XDRDLIST(""GL""),1)) W !,""There are no READY TO MERGE verified duplicates at this time."",$C(7) K XDRDLIST(""ASK"") G WHCH"
^XTMP("XPDT",7641,"RTN","XDRDLIST",32,0)=" I XDRDLIST(""ASK"")=2,'$D(^VA(15,""AMRG"",XDRDLIST(""GL""),0)) W !,""There are no NOT READY TO MERGE verified duplicates at this time."",$C(7) K XDRDLIST(""ASK"") G WHCH"
^XTMP("XPDT",7641,"RTN","XDRDLIST",33,0)=" I XDRDLIST(""ASK"")=4,'$D(^VA(15,""AFR"",XDRDLIST(""GL""))) W !,""There are no MERGED VERIFIED duplicates at this time."",$C(7) K XDRDLIST(""ASK"") G WHCH"
^XTMP("XPDT",7641,"RTN","XDRDLIST",34,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",35,0)="ASKX ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",36,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDLIST",37,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",38,0)="POT ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",39,0)=" S DIC=""^VA(15,"",L="""",FLDS=$S(XDRFLD=1:""[XDR BRIEF LIST]"",1:""[CAPTIONED]"")"
^XTMP("XPDT",7641,"RTN","XDRDLIST",40,0)=" S BY=""[XDR POTENTIAL DUPLICATE LIST]"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",41,0)=" S DIS(0)=""I $P($P(^VA(15,D0,0),U),"""";"""",2)=XDRDLIST(""""GL"""")"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",42,0)=" S DHD=""Unverified Potential Duplicates"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",43,0)=" D EN1^DIP K DIC,DIS,DHD,L,FLDS,BY"
^XTMP("XPDT",7641,"RTN","XDRDLIST",44,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDLIST",45,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",46,0)="VER ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",47,0)=" S DIC=""^VA(15,"",L="""",FLDS=$S(XDRFLD=1:""[XDR BRIEF LIST]"",1:""[CAPTIONED]"")"
^XTMP("XPDT",7641,"RTN","XDRDLIST",48,0)=" ;S DIC=""^VA(15,"",L="""",FLDS=""[CAPTIONED]"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",49,0)=" S BY=""[XDR READY TO MERGE LIST]"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",50,0)=" S DIS(0)=""I $P($P(^VA(15,D0,0),U),"""";"""",2)=XDRDLIST(""""GL"""")"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",51,0)=" S DHD=""Verified Duplicates Ready to Merge"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",52,0)=" D EN1^DIP K DIC,DIS,DHD,L,FLDS,BY"
^XTMP("XPDT",7641,"RTN","XDRDLIST",53,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDLIST",54,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",55,0)="NOT ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",56,0)=" S DIC=""^VA(15,"",L="""",FLDS=$S(XDRFLD=1:""[XDR BRIEF LIST]"",1:""[CAPTIONED]"")"
^XTMP("XPDT",7641,"RTN","XDRDLIST",57,0)=" ;S DIC=""^VA(15,"",L="""",FLDS=""[CAPTIONED]"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",58,0)=" S BY=""[XDR NOT READY TO MERGE LIST]"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",59,0)=" S DIS(0)=""I $P($P(^VA(15,D0,0),U),"""";"""",2)=XDRDLIST(""""GL"""")"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",60,0)=" S DHD=""Verified Duplicates Not Ready to Merge"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",61,0)=" D EN1^DIP K DIC,DIS,DHD,L,FLDS,BY"
^XTMP("XPDT",7641,"RTN","XDRDLIST",62,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDLIST",63,0)="MERGED ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",64,0)=" S DIC=""^VA(15,"",L="""",FLDS=$S(XDRFLD=1:""[XDR BRIEF LIST]"",1:""[XDR MERGED LIST]"")"
^XTMP("XPDT",7641,"RTN","XDRDLIST",65,0)=" ;S DIC=""^VA(15,"",L="""",FLDS=""[XDR MERGED LIST]"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",66,0)=" S BY=""[XDR MERGED LIST]"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",67,0)=" S DIS(0)=""I $P($P(^VA(15,D0,0),U),"""";"""",2)=XDRDLIST(""""GL"""")"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",68,0)=" S DHD=""Verified Duplicates that are Merged"""
^XTMP("XPDT",7641,"RTN","XDRDLIST",69,0)=" D EN1^DIP K DIC,DIS,DHD,L,FLDS,BY"
^XTMP("XPDT",7641,"RTN","XDRDLIST",70,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDLIST",71,0)="EOJ ;"
^XTMP("XPDT",7641,"RTN","XDRDLIST",72,0)=" K XDRDLIST,DIRUT,X,Y,DTOUT,DUOUT,XDRD,XDRFL,XDRQFLG"
^XTMP("XPDT",7641,"RTN","XDRDLIST",73,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK")="0^3^B86863530^B76108435"
^XTMP("XPDT",7641,"RTN","XDRDPICK",1,0)="XDRDPICK ;SF-IRMFO.SEA/JLI - SELECT A PAIR OF POTENTIAL DUPLICATES AND VIEW ;10/10/08  13:38"
^XTMP("XPDT",7641,"RTN","XDRDPICK",2,0)=" ;;7.3;TOOLKIT;**23,47,113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XDRDPICK",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7641,"RTN","XDRDPICK",4,0)=" ;;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",5,0)="EN ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",6,0)=" N XDRFL,CMORS1,CMORS2,D0,DA,DIC,DIE,DIR,ICNT,ICNT1,JCNT,LCNT,NCNT,PNCT,TMPGLA,TMPGLB,XDRDA,XDRFILN,XDRGLB,Y,PRIFILE"
^XTMP("XPDT",7641,"RTN","XDRDPICK",7,0)=" ; D EN^XDRVCHEK"
^XTMP("XPDT",7641,"RTN","XDRDPICK",8,0)=" S XDRFL=$$FILE() Q:XDRFL'>0  S PRIFILE=XDRFL,XDRGLB=$P(^DIC(XDRFL,0,""GL""),U,2),XDRFILN=$P(^DIC(XDRFL,0),U)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",9,0)="LOOP ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",10,0)=" W !!!,""At the following prompt select a POTENTIAL DUPLICATE ENTRY.  If a selection"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",11,0)=" W !,""is not made, you will be given a chance to select from a list if you"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",12,0)=" W !,""want to.  Otherwise, you will be returned to the menu system."""
^XTMP("XPDT",7641,"RTN","XDRDPICK",13,0)=" W !"
^XTMP("XPDT",7641,"RTN","XDRDPICK",14,0)=" S Y=$$LOOKUP^XDRDEDT(XDRFL)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",15,0)=" S XDRDA=+Y I Y>0 D SHOW G LOOP"
^XTMP("XPDT",7641,"RTN","XDRDPICK",16,0)=" S DIR(0)=""Y"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",17,0)=" S DIR(""A"")=""Do you want to select from a list of potential duplicates"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",18,0)=" S DIR(""B"")=""YES"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",19,0)=" D ^DIR K DIR Q:Y'>0"
^XTMP("XPDT",7641,"RTN","XDRDPICK",20,0)=" S TMPGLB=$NA(^TMP(""XDRDPICK"",$J)),TMPGLA=$NA(^TMP(""XDRDPICA"",$J))"
^XTMP("XPDT",7641,"RTN","XDRDPICK",21,0)=" K @TMPGLB,@TMPGLA"
^XTMP("XPDT",7641,"RTN","XDRDPICK",22,0)=" D ASK"
^XTMP("XPDT",7641,"RTN","XDRDPICK",23,0)=" I XDRDA>0 G LOOP"
^XTMP("XPDT",7641,"RTN","XDRDPICK",24,0)=" K PCNT"
^XTMP("XPDT",7641,"RTN","XDRDPICK",25,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",26,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",27,0)="GETLIST ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",28,0)=" I XDRGLB=""DPT("",$O(^DPT(""ACMORS"",0))>0 D CMORS Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",29,0)=" N FLG"
^XTMP("XPDT",7641,"RTN","XDRDPICK",30,0)=" F ICNT=ICNT:0 S ICNT=$O(^VA(15,ICNT)) Q:ICNT'>0  S X=^(ICNT,0) D  Q:'(NCNT#4)&(NCNT>0)&FLG"
^XTMP("XPDT",7641,"RTN","XDRDPICK",31,0)=" . S FLG=1 ;This flag is when NCNT is set from previous call and STATUS is not ""P"" the first time- - so loop will not quit with (NCNT#4)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",32,0)=" . I $P(X,U,3)'=""P"" S:PCNT=NCNT FLG=0 Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",33,0)=" . I $P($P(X,U),"";"",2)'=XDRGLB Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",34,0)=" . S NCNT=NCNT+1,X1=+$P(X,U),X2=+$P(X,U,2)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",35,0)=" . I '($D(@(U_XDRGLB_X1_"",0)""))#2)!'($D(@(U_XDRGLB_X2_"",0)""))#2) S NCNT=NCNT-1 Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",36,0)=" . S @TMPGLB@(NCNT)=ICNT_U_X1_U_X2"
^XTMP("XPDT",7641,"RTN","XDRDPICK",37,0)=" . S @TMPGLB@(NCNT,1)=@(U_XDRGLB_X1_"",0)"")"
^XTMP("XPDT",7641,"RTN","XDRDPICK",38,0)=" . S @TMPGLB@(NCNT,2)=@(U_XDRGLB_X2_"",0)"")"
^XTMP("XPDT",7641,"RTN","XDRDPICK",39,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",40,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",41,0)="ASK ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",42,0)=" S NCNT=0,ICNT=0,ICNT1=0,JCNT=0,XDRDA=0,PCNT=0"
^XTMP("XPDT",7641,"RTN","XDRDPICK",43,0)=" F  D  D CHEK Q:XDRDA'=0  Q:JCNT'>0"
^XTMP("XPDT",7641,"RTN","XDRDPICK",44,0)=" . D GETLIST"
^XTMP("XPDT",7641,"RTN","XDRDPICK",45,0)=" . S PCNT=NCNT"
^XTMP("XPDT",7641,"RTN","XDRDPICK",46,0)=" . F JCNT=JCNT:0 S JCNT=$O(@TMPGLB@(JCNT)) Q:JCNT'>0  D  Q:'(JCNT#4)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",47,0)=" . . W !!!,$J(JCNT,5),"".  "",@TMPGLB@(JCNT,1)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",48,0)=" . . W !,?8,@TMPGLB@(JCNT,2)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",49,0)=" I XDRDA>0 S XDRDA=+@TMPGLB@(XDRDA) D SHOW"
^XTMP("XPDT",7641,"RTN","XDRDPICK",50,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",51,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",52,0)="CHEK ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",53,0)=" W !"
^XTMP("XPDT",7641,"RTN","XDRDPICK",54,0)=" I JCNT'>0 S DIR(0)=""N"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",55,0)=" E  S DIR(0)=""NO"",DIR(""A"",1)=""Enter Return to continue listing or"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",56,0)=" S DIR(""A"")=""Select the desired entry by number"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",57,0)=" S DIR(0)=DIR(0)_""^1:""_NCNT"
^XTMP("XPDT",7641,"RTN","XDRDPICK",58,0)=" D ^DIR K DIR"
^XTMP("XPDT",7641,"RTN","XDRDPICK",59,0)=" I Y>0 S XDRDA=+Y"
^XTMP("XPDT",7641,"RTN","XDRDPICK",60,0)=" I $D(DUOUT)!$D(DTOUT) S XDRDA=-1 K DTOUT,DUOUT"
^XTMP("XPDT",7641,"RTN","XDRDPICK",61,0)=" K DIRUT"
^XTMP("XPDT",7641,"RTN","XDRDPICK",62,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",63,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",64,0)="SHOW ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",65,0)=" ;L +^VA(15,+XDRDA,0):30 I '$T G BUSY"
^XTMP("XPDT",7641,"RTN","XDRDPICK",66,0)=" ;I $P(^VA(15,+XDRDA,0),U,3)'=""P"" L -^VA(15,+XDRDA,0) G BUSY ; NOT AVAILABLE"
^XTMP("XPDT",7641,"RTN","XDRDPICK",67,0)=" ;N XDRXX S XDRXX(15,(+XDRDA)_"","",.03)=""X"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",68,0)=" ;D FILE^DIE("""",""XDRXX"")"
^XTMP("XPDT",7641,"RTN","XDRDPICK",69,0)=" ;L -^VA(15,+XDRDA,0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",70,0)=" I '$D(XDRGLB) N XDRGLB S XDRGLB=$P($P(^VA(15,XDRDA,0),U),"";"",2)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",71,0)=" I $D(@(XDRGLB_(+^VA(15,XDRDA,0))_"",-9)""))!$D(@(XDRGLB_(+$P(^VA(15,XDRDA,0),U,2))_"",-9)"")) W !,$C(7),""One of these entries has already been merged.  Pick another pair."",!! D RESET(XDRDA) Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",72,0)=" S XQAID="""""
^XTMP("XPDT",7641,"RTN","XDRDPICK",73,0)=" S X=^VA(15,+XDRDA,0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",74,0)=" S X1=+X,X2=+$P(X,U,2)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",75,0)=" I $$COUNT^XDRRMRG2(XDRFL,X1,X2)>1 S X1=X2,X2=+X"
^XTMP("XPDT",7641,"RTN","XDRDPICK",76,0)=" S XQADATA=XDRDA_U_X1_"";""_X2_U_""PRIMARY""_U_XDRFL"
^XTMP("XPDT",7641,"RTN","XDRDPICK",77,0)=" D ^XDRRMRG1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",78,0)=" ; If Primary verifier has set status to DUPLICATE, set STATUS at top level"
^XTMP("XPDT",7641,"RTN","XDRDPICK",79,0)=" ; to ""X"" (VERIFICATION IN PROCESS)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",80,0)=" S DA=$$FIND1^DIC(15.02,"",""_XDRDA_"","",""X"",""PRIMARY"")"
^XTMP("XPDT",7641,"RTN","XDRDPICK",81,0)=" I DA>0 D"
^XTMP("XPDT",7641,"RTN","XDRDPICK",82,0)=" . S X=$P(^VA(15,XDRDA,0),U,3)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",83,0)=" . I X=""N""!(X=""V"") Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",84,0)=" . S X=^VA(15,XDRDA,2,DA,0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",85,0)=" . I $P(X,U,2)=""V"" D"
^XTMP("XPDT",7641,"RTN","XDRDPICK",86,0)=" . . S DR="".03///X;.1///""_DT_"";"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",87,0)=" . . S DIE=""^VA(15,"",DA=XDRDA D ^DIE K DIE,DR"
^XTMP("XPDT",7641,"RTN","XDRDPICK",88,0)=" . . D SETUP^XDRRMRG1(XDRDA)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",89,0)=" . . D CHEKVER^XDRRMRG1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",90,0)=" ; If PATIENT, status=VERIFIED, NOT A DUPLICATE, add patients to MPI DO NOT LINK file(new with XT*7.3*113)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",91,0)=" I XDRFL=2,$P(^VA(15,XDRDA,0),U,3)=""N"" D"
^XTMP("XPDT",7641,"RTN","XDRDPICK",92,0)=" . ;Quit if routine ^MPIFDNL is not loaded"
^XTMP("XPDT",7641,"RTN","XDRDPICK",93,0)=" . S X=""MPIFDNL"" X ^%ZOSF(""TEST"") Q:'$T"
^XTMP("XPDT",7641,"RTN","XDRDPICK",94,0)=" . S X=^VA(15,XDRDA,0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",95,0)=" . D CALLRPC^MPIFDNL(DUZ,DUZ(2),+X,+$P(X,U,2))"
^XTMP("XPDT",7641,"RTN","XDRDPICK",96,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",97,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",98,0)="BUSY ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",99,0)=" W !!,$C(7),""Record is being processed by someone else."",!!"
^XTMP("XPDT",7641,"RTN","XDRDPICK",100,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",101,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",102,0)="FILE(XDRFLAG) ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",103,0)=" ; If XDRFLAG=1, option not available to the PATIENT file (#2) (new with XT*7.3*113)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",104,0)=" N X,XDRPT,XDRFLNM"
^XTMP("XPDT",7641,"RTN","XDRDPICK",105,0)=" S (X,XDRPT)=0"
^XTMP("XPDT",7641,"RTN","XDRDPICK",106,0)=" S XDRFLAG=+$G(XDRFLAG)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",107,0)=" I XDRFLAG=1 W !,""* This option is not available for PATIENTS"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",108,0)=" S XDRFLNM="""""
^XTMP("XPDT",7641,"RTN","XDRDPICK",109,0)=" F I=0:0 S I=$O(^VA(15.1,I)) Q:I'>0  D"
^XTMP("XPDT",7641,"RTN","XDRDPICK",110,0)=" . I XDRFLAG=1,I=2 S XDRPT=1 Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",111,0)=" . S X=X+1,X(I)="""""
^XTMP("XPDT",7641,"RTN","XDRDPICK",112,0)=" . S XDRFLNM=$P($G(^DIC(I,0)),U)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",113,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",114,0)=" I X=0 Q -1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",115,0)=" I X=1 Q $O(X(""""))"
^XTMP("XPDT",7641,"RTN","XDRDPICK",116,0)=" S:'XDRFLAG XDRFLNM=""PATIENT"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",117,0)=" K DIC S DIC=15.1,DIC(0)=""AEQM"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",118,0)=" S DIC(""A"")=""Which FILE are the potential duplicates in (e.g., ""_XDRFLNM_"")? """
^XTMP("XPDT",7641,"RTN","XDRDPICK",119,0)=" S DIC(""B"")=XDRFLNM"
^XTMP("XPDT",7641,"RTN","XDRDPICK",120,0)=" I XDRFLAG=1 S DIC(""S"")=""I Y'=2"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",121,0)=" D ^DIC K DIC"
^XTMP("XPDT",7641,"RTN","XDRDPICK",122,0)=" Q +Y"
^XTMP("XPDT",7641,"RTN","XDRDPICK",123,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",124,0)="CMORS ; RETURN DATA RANKED BY CMORS (HIGH VALUES FIRST)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",125,0)=" I '$D(^VA(15,""ACMORS"")) D SETCMOR"
^XTMP("XPDT",7641,"RTN","XDRDPICK",126,0)=" I $G(^VA(15,""ACMORS"",0))'>0 D SETCMOR"
^XTMP("XPDT",7641,"RTN","XDRDPICK",127,0)=" I $G(^VA(15,""ACMORS"",0))>0,$$FMDIFF^XLFDT(DT,^(0))>7 D ASKCMOR"
^XTMP("XPDT",7641,"RTN","XDRDPICK",128,0)=" I ICNT1>0 S ICNT=ICNT-1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",129,0)=" S LCNT=0"
^XTMP("XPDT",7641,"RTN","XDRDPICK",130,0)=" F ICNT=ICNT:0 S ICNT=$O(^VA(15,""ACMORS"",ICNT)) Q:ICNT'>0  D  Q:('(NCNT#4))&(LCNT>0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",131,0)=" . F ICNT1=+ICNT1:0 S ICNT1=$O(^VA(15,""ACMORS"",ICNT,ICNT1)) Q:ICNT1'>0  D  Q:('(NCNT#4))&(LCNT>0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",132,0)=" . . S X=$G(^VA(15,ICNT1,0)) Q:X=""""  Q:$P(X,U,3)'=""P""  S X1=+X,X2=+$P(X,U,2)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",133,0)=" . . I $D(@TMPGLA@(X1,X2)) Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",134,0)=" . . S @TMPGLA@(X1,X2)="""""
^XTMP("XPDT",7641,"RTN","XDRDPICK",135,0)=" . . S NCNT=NCNT+1,LCNT=LCNT+1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",136,0)=" . . S @TMPGLB@(NCNT)=ICNT1_U_X1_U_X2"
^XTMP("XPDT",7641,"RTN","XDRDPICK",137,0)=" . . S CMORS1=$P($G(^DPT(X1,""MPI"")),U,6),CMORS2=$P($G(^DPT(X2,""MPI"")),U,6)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",138,0)=" . . S @TMPGLB@(NCNT,1)=@(U_XDRGLB_X1_"",0)"")_"" (CMOR SCORE = ""_$S(CMORS1="""":""NULL"",1:CMORS1)_"")"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",139,0)=" . . S @TMPGLB@(NCNT,2)=@(U_XDRGLB_X2_"",0)"")_"" (CMOR SCORE = ""_$S(CMORS2="""":""NULL"",1:CMORS2)_"")"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",140,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",141,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",142,0)="SETCMOR ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",143,0)=" N I,X,X1,X2,SCOR"
^XTMP("XPDT",7641,"RTN","XDRDPICK",144,0)=" K ^VA(15,""ACMORS"")"
^XTMP("XPDT",7641,"RTN","XDRDPICK",145,0)=" F I=0:0 S I=$O(^VA(15,I)) Q:I'>0  S X=^(I,0) D"
^XTMP("XPDT",7641,"RTN","XDRDPICK",146,0)=" . I $P(X,U,3)'=""P"" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",147,0)=" . I $P($P(X,U),"";"",2)'=""DPT("" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",148,0)=" . S X1=+X,X2=+$P(X,U,2)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",149,0)=" . S SCOR=$P($G(^DPT(X1,""MPI"")),U,6) I SCOR'>0 S SCOR=0"
^XTMP("XPDT",7641,"RTN","XDRDPICK",150,0)=" . S ^VA(15,""ACMORS"",(9999999-SCOR),I)="""""
^XTMP("XPDT",7641,"RTN","XDRDPICK",151,0)=" . S SCOR=$P($G(^DPT(X2,""MPI"")),U,6) I SCOR'>0 S SCOR=0"
^XTMP("XPDT",7641,"RTN","XDRDPICK",152,0)=" . S ^VA(15,""ACMORS"",(9999999-SCOR),I)="""""
^XTMP("XPDT",7641,"RTN","XDRDPICK",153,0)=" S ^VA(15,""ACMORS"",0)=DT"
^XTMP("XPDT",7641,"RTN","XDRDPICK",154,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",155,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",156,0)="ASKCMOR ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",157,0)=" N DIR"
^XTMP("XPDT",7641,"RTN","XDRDPICK",158,0)=" S DIR(0)=""Y"",DIR(""A"")=""The CMOR scores for activity haven't been checked recently.  Do you want to update these (It might take a couple of minutes)"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",159,0)=" S DIR(""B"")=""YES"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",160,0)=" D ^DIR I Y>0 D SETCMOR"
^XTMP("XPDT",7641,"RTN","XDRDPICK",161,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",162,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",163,0)="SET1 ; HANDLES SETTING OF X-REF ON CMOR SCORES FOR POTENTIAL DUPLICATES"
^XTMP("XPDT",7641,"RTN","XDRDPICK",164,0)=" I X'=""P"" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",165,0)=" N XDRXVAL,XDRXVAL1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",166,0)=" S XDRXVAL=^VA(15,D0,0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",167,0)=" I $P($P(XDRXVAL,U),"";"",2)'=""DPT("" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",168,0)=" S XDRXVAL1=$P($G(^DPT(+XDRXVAL,""MPI"")),U,6) I XDRXVAL1="""" S XDRXVAL1=-1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",169,0)=" S ^VA(15,""ACMORS"",(9999999-XDRXVAL1),D0)="""""
^XTMP("XPDT",7641,"RTN","XDRDPICK",170,0)=" S XDRXVAL1=$P($G(^DPT(+$P(XDRXVAL,U,2),""MPI"")),U,6) I XDRXVAL1="""" S XDRXVAL1=-1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",171,0)=" S ^VA(15,""ACMORS"",(9999999-XDRXVAL1),D0)="""""
^XTMP("XPDT",7641,"RTN","XDRDPICK",172,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",173,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",174,0)="KILL1 ; HANDLES KILLING OF X-REF ON CMOR SCORES FOR POTENTIAL DUPLICATES"
^XTMP("XPDT",7641,"RTN","XDRDPICK",175,0)=" I X'=""P"" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",176,0)=" N XDRXVAL,XDRXVAL1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",177,0)=" S XDRXVAL=^VA(15,D0,0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",178,0)=" I $P($P(XDRXVAL,U),"";"",2)'=""DPT("" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",179,0)=" S XDRXVAL1=+$P($G(^DPT(+XDRXVAL,""MPI"")),U,6) I XDRXVAL1="""" S XDRXVAL1=-1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",180,0)=" K ^VA(15,""ACMORS"",(9999999-XDRXVAL1),D0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",181,0)=" S XDRXVAL1=+$P($G(^DPT(+$P(XDRXVAL,U,2),""MPI"")),U,6) I XDRXVAL1="""" S XDRXVAL1=-1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",182,0)=" K ^VA(15,""ACMORS"",(9999999-XDRXVAL1),D0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",183,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",184,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",185,0)="OTHERS ; CHECKS AND MARKS OTHER PAIRS SO ONLY ONE CAN BE PROCESSED AT A TIME"
^XTMP("XPDT",7641,"RTN","XDRDPICK",186,0)=" Q  ; NOT USED CURRENTLY"
^XTMP("XPDT",7641,"RTN","XDRDPICK",187,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",188,0)=" ;   P   CLEAR ALL RELATED"
^XTMP("XPDT",7641,"RTN","XDRDPICK",189,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",190,0)=" ;   X   MARK ALL RELATED"
^XTMP("XPDT",7641,"RTN","XDRDPICK",191,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",192,0)=" ;   V   CLEAR TO"
^XTMP("XPDT",7641,"RTN","XDRDPICK",193,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",194,0)=" ;   O   NOTHING"
^XTMP("XPDT",7641,"RTN","XDRDPICK",195,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",196,0)=" ;   R   MARK ALL RELATED"
^XTMP("XPDT",7641,"RTN","XDRDPICK",197,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",198,0)=" ;  MERGED  CLEAR TO   REALIGN FROM"
^XTMP("XPDT",7641,"RTN","XDRDPICK",199,0)=" I X=""O"" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",200,0)=" N OLDDA,OLDX S OLDDA=DA,OLDX=X N DA,X"
^XTMP("XPDT",7641,"RTN","XDRDPICK",201,0)=" N XDRENTR,IENVAL,XDRPAIR,DONE,XDR0,STATUS,DIREC"
^XTMP("XPDT",7641,"RTN","XDRDPICK",202,0)=" I $D(XDROTHER) Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",203,0)=" N XDROTHER S XDROTHER=1"
^XTMP("XPDT",7641,"RTN","XDRDPICK",204,0)=" I OLDX=""P""!(OLDX=""N"") D  Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",205,0)=" . F XDRENTR=$P(^VA(15,OLDDA,0),U),$P(^VA(15,OLDDA,0),U,2) F IENVAL=0:0 S IENVAL=$O(^VA(15,""B"",XDRENTR,IENVAL)) Q:IENVAL'>0  I IENVAL'=OLDDA,$P(^VA(15,IENVAL,0),U,3)=""O"" D"
^XTMP("XPDT",7641,"RTN","XDRDPICK",206,0)=" . . ; Have to check on whether the other member of the pair in process as well."
^XTMP("XPDT",7641,"RTN","XDRDPICK",207,0)=" . . S XDRPAIR=$P(^VA(15,IENVAL,0),U) IF XDRPAIR=XDRENTR S XDRPAIR=$P(^(0),U,2)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",208,0)=" . . S DONE=0 F IENPAIR=0:0 S IENPAIR=$O(^VA(15,""B"",XDRPAIR,IENPAIR)) Q:IENPAIR'>0  I IENPAIR'=IENVAL D  Q:DONE"
^XTMP("XPDT",7641,"RTN","XDRDPICK",209,0)=" . . . S XDR0=^VA(15,IENPAIR,0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",210,0)=" . . . S STATUS=$P(XDR0,U,3)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",211,0)=" . . . I STATUS=""X""!(STATUS=""R"") S DONE=1 Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",212,0)=" . . . I STATUS=""V"" D  Q:DONE"
^XTMP("XPDT",7641,"RTN","XDRDPICK",213,0)=" . . . . S DIREC=$P(XDR0,U,4)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",214,0)=" . . . . I $P(XDR0,U,DIREC)=XDRPAIR S DONE=1 Q  ; IT IS THE 'FROM' ENTRY"
^XTMP("XPDT",7641,"RTN","XDRDPICK",215,0)=" . . . . Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",216,0)=" . . . Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",217,0)=" . . D RESET(IENVAL)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",218,0)=" . . Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",219,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",220,0)=" I OLDX=""X""!(OLDX=""R"") D  Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",221,0)=" . F XDRENTR=$P(^VA(15,OLDDA,0),U),$P(^VA(15,OLDDA,0),U,2) F IENVAL=0:0 S IENVAL=$O(^VA(15,""B"",XDRENTR,IENVAL)) Q:IENVAL'>0  I IENVAL'=OLDDA,$P(^VA(15,IENVAL,0),U,3)=""P"" D"
^XTMP("XPDT",7641,"RTN","XDRDPICK",222,0)=" . . N XDRXX S XDRXX(15,IENVAL_"","",.03)=""O"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",223,0)=" . . D FILE^DIE("""",""XDRXX"")"
^XTMP("XPDT",7641,"RTN","XDRDPICK",224,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",225,0)=" I OLDX=""V""&$D(XDRDADJX) D  Q  ; IF MERGED (XDRDADJX IS SET IN XDRDAJD AND IS RUN BY A CROSS-REFERENCE FOR MERGE STATUS SET TO 'MERGED')"
^XTMP("XPDT",7641,"RTN","XDRDPICK",226,0)=" . F XDRENTR=$P(^VA(15,OLDDA,0),U),$P(^VA(15,OLDDA,0),U,2) D"
^XTMP("XPDT",7641,"RTN","XDRDPICK",227,0)=" . . S DIREC=$P(^VA(15,OLDDA,0),U,4)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",228,0)=" . . F IENVAL=0:0 S IENVAL=$O(^VA(15,""B"",XDRENTR,IENVAL)) Q:IENVAL'>0  I IENVAL'=OLDDA,$P(^VA(15,IENVAL,0),U,3)=""O"" D"
^XTMP("XPDT",7641,"RTN","XDRDPICK",229,0)=" . . . ; Have to check on whether the other member of the pair in process as well."
^XTMP("XPDT",7641,"RTN","XDRDPICK",230,0)=" . . . S XDRPAIR=$P(^VA(15,IENVAL,0),U) IF XDRPAIR=XDRENTR S XDRPAIR=$P(^(0),U,2)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",231,0)=" . . . S DONE=0 F IENPAIR=0:0 S IENPAIR=$O(^VA(15,""B"",XDRPAIR,IENPAIR)) Q:IENPAIR'>0  I IENPAIR'=IENVAL D  Q:DONE"
^XTMP("XPDT",7641,"RTN","XDRDPICK",232,0)=" . . . . S XDR0=^VA(15,IENPAIR,0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",233,0)=" . . . . S STATUS=$P(XDR0,U,3)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",234,0)=" . . . . I STATUS=""X""!(STATUS=""R"") S DONE=1 Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",235,0)=" . . . . I STATUS=""V"" D  Q:DONE"
^XTMP("XPDT",7641,"RTN","XDRDPICK",236,0)=" . . . . . S DIREC=$P(XDR0,U,4)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",237,0)=" . . . . . I $P(XDR0,U,DIREC)=XDRPAIR S DONE=1 Q  ; IT IS THE 'FROM' ENTRY"
^XTMP("XPDT",7641,"RTN","XDRDPICK",238,0)=" . . . . . Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",239,0)=" . . . . Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",240,0)=" . . . D RESET(IENVAL) ; RESET TO ""P"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",241,0)=" . . . Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",242,0)=" . . Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",243,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",244,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",245,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",246,0)="RESET(DA) ;"
^XTMP("XPDT",7641,"RTN","XDRDPICK",247,0)=" N XDRXX,IENS,X"
^XTMP("XPDT",7641,"RTN","XDRDPICK",248,0)=" I $P(^VA(15,DA,0),U,5)>1 Q"
^XTMP("XPDT",7641,"RTN","XDRDPICK",249,0)=" D NAME^XDRDEDT(DA)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",250,0)=" S X=^VA(15,DA,0)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",251,0)=" S IENS=DA_"","""
^XTMP("XPDT",7641,"RTN","XDRDPICK",252,0)=" S XDRXX(15,IENS,.03)=""P"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",253,0)=" I $P(X,U,4)'="""" S XDRXX(15,IENS,.04)=""@"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",254,0)=" I $P(X,U,5)'="""" S XDRXX(15,IENS,.05)=""@"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",255,0)=" I $P(X,U,7)'="""" S XDRXX(15,IENS,.07)=""@"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",256,0)=" I $P(X,U,8)'="""" S XDRXX(15,IENS,.08)=""@"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",257,0)=" I $P(X,U,10)'="""" S XDRXX(15,IENS,.1)=""@"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",258,0)=" I $P(X,U,13)'="""" S XDRXX(15,IENS,.13)=""@"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",259,0)=" I $P(X,U,14)'="""" S XDRXX(15,IENS,.14)=""@"""
^XTMP("XPDT",7641,"RTN","XDRDPICK",260,0)=" D FILE^DIE("""",""XDRXX"")"
^XTMP("XPDT",7641,"RTN","XDRDPICK",261,0)=" S:$D(DUZ) $P(^VA(15,DA,0),U,12)=DUZ"
^XTMP("XPDT",7641,"RTN","XDRDPICK",262,0)=" K ^VA(15,DA,2)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",263,0)=" K ^VA(15,DA,3)"
^XTMP("XPDT",7641,"RTN","XDRDPICK",264,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPRGE")="0^8^B9048519^B8257141"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",1,0)="XDRDPRGE ;SF-IRMFO/IHS/OHPRD/JCM - PURGE DUPLICATE RECORD FILE; ;8/28/08  18:20"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",2,0)=" ;;7.3;TOOLKIT;**23,42,113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7641,"RTN","XDRDPRGE",4,0)=" ;;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",5,0)="START ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",6,0)=" D INIT G:XDRQFLG END"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",7,0)=" D ASK G:XDRQFLG END"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",8,0)="DQ ; Entry point for Tasked job"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",9,0)=" I XDRDPRGE(""CHOICE"")=""BOTH"" D BOTH I 1"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",10,0)=" E  D XREF"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",11,0)="END D EOJ"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",12,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",13,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",14,0)="INIT ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",15,0)=" S XDRQFLG=0"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",16,0)=" D FILE"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",17,0)=" G:XDRQFLG INITX"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",18,0)=" S XDRGL=^DIC(XDRFL,0,""GL"")"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",19,0)="INITX Q"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",20,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",21,0)="FILE ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",22,0)=" W !,""* This option is not available for PATIENTS"" ; (new with XT*7.3*113)"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",23,0)=" S DIC(""S"")=""I Y'=2"""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",24,0)=" S DIC(0)=""QEAZ"""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",25,0)=" S DIC(""A"")=""Select File to Be Checked to purge: """
^XTMP("XPDT",7641,"RTN","XDRDPRGE",26,0)=" S DIC=""^VA(15.1,"" D ^DIC K DIC,X"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",27,0)=" I Y=-1 S XDRQFLG=1 G FILEX"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",28,0)=" S XDRFL=$P(Y(0),U) K Y"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",29,0)="FILEX Q"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",30,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",31,0)="ASK ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",32,0)=" S DIR(0)=""S^1:POTENTIAL DUPLICATES PURGE;2:VERIFIED NOT DUPLICATES PURGE;3:ALL RECORDS EXCEPT VERIFIED DUPLICATES PURGE"""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",33,0)=" S DIR(""A"")=""Choice """
^XTMP("XPDT",7641,"RTN","XDRDPRGE",34,0)=" S DIR(""?"",1)=""Enter a 1 if you wish to purge only the potential non-verified duplicates"""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",35,0)=" S DIR(""?"",2)=""Enter a 2 if you wish to purge only Verified Non-Duplicates"""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",36,0)=" S DIR(""?"",3)=""Enter a 3 if you wish to purge everything except verifed duplicates"""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",37,0)=" D ^DIR K DIR"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",38,0)=" I $D(DIRUT) S XDRQFLG=1 G ASKX"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",39,0)=" S (XDRDPRGE(""XREF""),XDRDPRGE(""CHOICE""))=$S(Y=1:""APOT"",Y=2:""ANOT"",1:""BOTH"") K Y"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",40,0)=" S DIR(0)=""Y"""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",41,0)=" S DIR(""A"")=""Do you wish to Queue this purging (Y/N)"""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",42,0)=" D ^DIR K DIR"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",43,0)=" I $D(DIRUT) S XDRQFLG=1 G ASKX"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",44,0)=" I Y D QUEUE"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",45,0)="ASKX K Y"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",46,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",47,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",48,0)="QUEUE ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",49,0)=" S ZTRTN=""DQ^XDRDPRGE"",ZTIO="""",ZTDESC=""Duplicate Record Purge"""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",50,0)=" F %=""XDRFL"",""XDRGL"",""XDRDPRGE("" S ZTSAVE(%)="""""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",51,0)=" D ^%ZTLOAD K ZTSK"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",52,0)=" S XDRQFLG=1"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",53,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",54,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",55,0)="BOTH ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",56,0)=" S XDRDPRGE(""XREF"")=""APOT"" D XREF"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",57,0)=" S XDRDPRGE(""XREF"")=""ANOT"" D XREF"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",58,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",59,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",60,0)="XREF ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",61,0)=" G:'$D(^VA(15,XDRDPRGE(""XREF""))) XREFX"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",62,0)=" S XDRDPRGE(""GL"")=""^VA(15,""_""""""""_XDRDPRGE(""XREF"")_""""""""_"",""_""""""""_$P(XDRGL,U,2)_""""""""_"","""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",63,0)=" S XDRDPRGE(""RCDS"")=0,DIK=""^VA(15,"" F XDRDI1=0:0 S XDRDPRGE(""RCDS"")=$O(@(XDRDPRGE(""GL"")_""XDRDPRGE(""""RCDS""""))"")) Q:XDRDPRGE(""RCDS"")=""""  S DA=$O(@(XDRDPRGE(""GL"")_""XDRDPRGE(""""RCDS""""),0)"")) D ^DIK"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",64,0)="XREFX K XDRDI1,DIK,DA,XDRDPRGE(""GL"")"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",65,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",66,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",67,0)="EOJ ;"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",68,0)=" K XDRFL,XDRGL,XDRDPRGE"
^XTMP("XPDT",7641,"RTN","XDRDPRGE",69,0)=" S:$D(ZTQUEUED) ZTREQ=""@"""
^XTMP("XPDT",7641,"RTN","XDRDPRGE",70,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE")="0^9^B20836456^B18790342"
^XTMP("XPDT",7641,"RTN","XDRDQUE",1,0)="XDRDQUE ;SF-IRMFO/IHS/OHPRD/JCM - START AND STOP DUPLICATE CHECKER SEARCH ;8/28/08  18:23"
^XTMP("XPDT",7641,"RTN","XDRDQUE",2,0)=" ;;7.3;TOOLKIT;**23,47,113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XDRDQUE",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7641,"RTN","XDRDQUE",4,0)=" ;;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",5,0)="START ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",6,0)=" S XDRQFLG=0"
^XTMP("XPDT",7641,"RTN","XDRDQUE",7,0)=" ;*** following commented line to be removed from Toolkit ver after 7.3"
^XTMP("XPDT",7641,"RTN","XDRDQUE",8,0)=" ;S XDRDQUE(""TASKMAN STATUS"")=$P(@$Q(^%ZTSCH(""STATUS"","""")),U,2) I XDRDQUE(""TASKMAN STATUS"")'=""RUN"" W !!,""Taskman does not seem to be running properly, Please notify your site manager."",!! G END"
^XTMP("XPDT",7641,"RTN","XDRDQUE",9,0)=" S XDRDQUE(""TASKMAN STATUS"")=$$TM^%ZTLOAD"
^XTMP("XPDT",7641,"RTN","XDRDQUE",10,0)=" I 'XDRDQUE(""TASKMAN STATUS"") W !!,""Taskman does not seem to be running properly, Please notify your site manager."",!! G END"
^XTMP("XPDT",7641,"RTN","XDRDQUE",11,0)=" ; XT*7.3*113, variable XDRNOPT=1 makes option unavailable for the PATIENT file"
^XTMP("XPDT",7641,"RTN","XDRDQUE",12,0)=" N XDRNOPT S XDRNOPT=1"
^XTMP("XPDT",7641,"RTN","XDRDQUE",13,0)=" D FILE G:XDRQFLG END ; Asks user which file to check for dups"
^XTMP("XPDT",7641,"RTN","XDRDQUE",14,0)=" D CHECK^XDRU1 G:XDRQFLG END ; Checks the Duplicate Resolution file"
^XTMP("XPDT",7641,"RTN","XDRDQUE",15,0)=" D ASK G:XDRQFLG END ; Asks user what action and type of search"
^XTMP("XPDT",7641,"RTN","XDRDQUE",16,0)=" D QUEUE G:XDRQFLG END ; Queues search"
^XTMP("XPDT",7641,"RTN","XDRDQUE",17,0)=" I XDRDNSTA=""r"" D ASK3 D:'XDRQFLG QUEUE"
^XTMP("XPDT",7641,"RTN","XDRDQUE",18,0)="END D EOJ ; Clean up variables"
^XTMP("XPDT",7641,"RTN","XDRDQUE",19,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE",20,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",21,0)="FILE ; EP - Called by XDRDCOMP,XDRDLIST,XDRDSCOR,XDRMADD,XDRCNT"
^XTMP("XPDT",7641,"RTN","XDRDQUE",22,0)=" K DIC(""B"")"
^XTMP("XPDT",7641,"RTN","XDRDQUE",23,0)=" K X S:$D(XDRFL) X=XDRFL"
^XTMP("XPDT",7641,"RTN","XDRDQUE",24,0)=" S DIC(0)=$S($D(X):""Z"",1:""QEAZ"")"
^XTMP("XPDT",7641,"RTN","XDRDQUE",25,0)=" S:'$D(DIC(""A"")) DIC(""A"")=""Select file to be checked for duplicates: """
^XTMP("XPDT",7641,"RTN","XDRDQUE",26,0)=" ; If XDRNOPT=1, don't allow selection of PATIENT file.(new with XT*7.3*113)"
^XTMP("XPDT",7641,"RTN","XDRDQUE",27,0)=" I $G(XDRNOPT)=1 D"
^XTMP("XPDT",7641,"RTN","XDRDQUE",28,0)=" . S DIC(""S"")=""I Y'=2"""
^XTMP("XPDT",7641,"RTN","XDRDQUE",29,0)=" . W:'$D(ZTQUEUED) !,""* This option is not available for PATIENTS"""
^XTMP("XPDT",7641,"RTN","XDRDQUE",30,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE",31,0)=" S DIC=""^VA(15.1,"" D ^DIC K DIC,X"
^XTMP("XPDT",7641,"RTN","XDRDQUE",32,0)=" I Y=-1 S XDRQFLG=1 G FILEX"
^XTMP("XPDT",7641,"RTN","XDRDQUE",33,0)=" S XDRD(0)=Y(0),XDRD(0,0)=Y(0,0),XDRFL=$P(Y(0),U),PRIFILE=XDRFL K Y"
^XTMP("XPDT",7641,"RTN","XDRDQUE",34,0)=" W:'$D(ZTQUEUED) !!"
^XTMP("XPDT",7641,"RTN","XDRDQUE",35,0)="FILEX Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE",36,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",37,0)="ASK ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",38,0)=" D DISP"
^XTMP("XPDT",7641,"RTN","XDRDQUE",39,0)=" D ASK1 G:XDRQFLG ASKX"
^XTMP("XPDT",7641,"RTN","XDRDQUE",40,0)=" I XDRDSTA=""c""&($D(^VA(15.1,XDRFL,""APDTI""))) S XDRDPDTI="""" W !!,""Since the Potential Duplicate Threshold has been raised"",!,""I will only go through the Potential Duplicates and see if they"",!,""meet the new threshold."" G ASKX"
^XTMP("XPDT",7641,"RTN","XDRDQUE",41,0)=" D:XDRDSTA=""c""&('XDRQFLG) ASK2"
^XTMP("XPDT",7641,"RTN","XDRDQUE",42,0)="ASKX ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",43,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE",44,0)="DISP ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",45,0)=" D DISP^XDRDSTAT"
^XTMP("XPDT",7641,"RTN","XDRDQUE",46,0)=" S XDRDSTA=$P(XDRD(0),U,2)"
^XTMP("XPDT",7641,"RTN","XDRDQUE",47,0)=" S XDRDTYPE=$P(XDRD(0),U,5)"
^XTMP("XPDT",7641,"RTN","XDRDQUE",48,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE",49,0)="ASK1 ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",50,0)=" S:XDRDSTA']"""" XDRDSTA=""c"""
^XTMP("XPDT",7641,"RTN","XDRDQUE",51,0)=" S DIR(0)=""Y"",DIR(""A"")=""Do You wish to ""_$S(XDRDSTA=""h"":""CONTINUE"",XDRDSTA=""e"":""CONTINUE"",XDRDSTA=""r"":""HALT"",1:""RUN"")_"" ""_$S(XDRDSTA=""r"":""this"",XDRDSTA=""h"":""this"",XDRDSTA=""e"":""this"",1:""a"")_"" search (Y/N)"""
^XTMP("XPDT",7641,"RTN","XDRDQUE",52,0)=" D ^DIR K DIR D OUT"
^XTMP("XPDT",7641,"RTN","XDRDQUE",53,0)=" I 'XDRQFLG,'Y,$S(XDRDSTA=""r"":0,XDRDSTA=""c"":0,1:1) D  S Y=0"
^XTMP("XPDT",7641,"RTN","XDRDQUE",54,0)=" . S DIR(0)=""Y"",DIR(""A"")=""Do you wish to mark this run COMPLETED (Y/N)"",DIR(""B"")=""NO"" D ^DIR K DIR D OUT"
^XTMP("XPDT",7641,"RTN","XDRDQUE",55,0)=" . I Y,'XDRQFLG S DIE=""^VA(15.1,"",DA=XDRFL,DR="".02////c"" D ^DIE K DA,DIE,DR"
^XTMP("XPDT",7641,"RTN","XDRDQUE",56,0)=" S:'Y XDRQFLG=1"
^XTMP("XPDT",7641,"RTN","XDRDQUE",57,0)=" K XDRDNSTA"
^XTMP("XPDT",7641,"RTN","XDRDQUE",58,0)=" S:'XDRQFLG XDRDNSTA=$S(XDRDSTA=""h"":""r"",XDRDSTA=""r"":""h"",1:""r"")"
^XTMP("XPDT",7641,"RTN","XDRDQUE",59,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE",60,0)="ASK2 ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",61,0)=" K XDRDTYPE"
^XTMP("XPDT",7641,"RTN","XDRDQUE",62,0)=" S DIR(0)=""15.1,.05A"",DIR(""A"")=""Which type of Search do you wish to run ? (BASIC/NEW) """
^XTMP("XPDT",7641,"RTN","XDRDQUE",63,0)=" S DIR(""B"")=""BASIC"",DIR(""?"")=""A 'BASIC' search starts at the beginning of the file.  A 'NEW' search uses a cross-reference you specify to determine which entries to test."""
^XTMP("XPDT",7641,"RTN","XDRDQUE",64,0)=" D ^DIR K DIR D OUT"
^XTMP("XPDT",7641,"RTN","XDRDQUE",65,0)=" S XDRDTYPE=$S(Y=""b"":""BASIC"",1:""NEW"")"
^XTMP("XPDT",7641,"RTN","XDRDQUE",66,0)=" I XDRDTYPE=""BASIC"" D"
^XTMP("XPDT",7641,"RTN","XDRDQUE",67,0)=" . N DIR S DIR(0)=""Y"""
^XTMP("XPDT",7641,"RTN","XDRDQUE",68,0)=" . S DIR(""A"",1)=""This process will take a **LONG** time (known to exceed 100  hours),"""
^XTMP("XPDT",7641,"RTN","XDRDQUE",69,0)=" . S DIR(""A"",2)=""but you CAN stop and restart the process when you want using"""
^XTMP("XPDT",7641,"RTN","XDRDQUE",70,0)=" . S DIR(""A"")=""the options  OK"""
^XTMP("XPDT",7641,"RTN","XDRDQUE",71,0)=" . D ^DIR S:Y'>0 XDRQFLG=1"
^XTMP("XPDT",7641,"RTN","XDRDQUE",72,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE",73,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE",74,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",75,0)="ASK3 ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",76,0)=" W !"
^XTMP("XPDT",7641,"RTN","XDRDQUE",77,0)=" S DIR(0)=""Y"",DIR(""A"")=""Do You wish to schedule a time to HALT this search (Y/N)"""
^XTMP("XPDT",7641,"RTN","XDRDQUE",78,0)=" D ^DIR K DIR D OUT"
^XTMP("XPDT",7641,"RTN","XDRDQUE",79,0)=" S:'Y XDRQFLG=1"
^XTMP("XPDT",7641,"RTN","XDRDQUE",80,0)=" G:XDRQFLG ASK3X"
^XTMP("XPDT",7641,"RTN","XDRDQUE",81,0)=" S XDRDNSTA=""h"""
^XTMP("XPDT",7641,"RTN","XDRDQUE",82,0)="ASK3X Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE",83,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",84,0)="QUEUE ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",85,0)=" S ZTRTN=""XDRDMAIN"",ZTIO="""",ZTDESC=""Duplicate ""_XDRD(0,0)_"" Search"""
^XTMP("XPDT",7641,"RTN","XDRDQUE",86,0)=" S:XDRDNSTA=""h"" ZTDESC=""Halt ""_ZTDESC"
^XTMP("XPDT",7641,"RTN","XDRDQUE",87,0)=" S ZTSAVE(""XDRFL"")="""" S:$D(XDRDPDTI) ZTSAVE(""XDRDPDTI"")="""""
^XTMP("XPDT",7641,"RTN","XDRDQUE",88,0)=" S ZTSAVE(""XDRDTYPE"")="""",ZTSAVE(""XDRDNSTA"")="""""
^XTMP("XPDT",7641,"RTN","XDRDQUE",89,0)=" D ^%ZTLOAD"
^XTMP("XPDT",7641,"RTN","XDRDQUE",90,0)=" S:'$D(ZTQUEUED) XDRQFLG=1"
^XTMP("XPDT",7641,"RTN","XDRDQUE",91,0)=" K ZTSK"
^XTMP("XPDT",7641,"RTN","XDRDQUE",92,0)="QUEUEX Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE",93,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",94,0)="OUT ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",95,0)=" ; Common point to take care of DIR,DIC, and DIE calls"
^XTMP("XPDT",7641,"RTN","XDRDQUE",96,0)=" I ($D(DTOUT))!($D(DUOUT))!($D(DIRUT)) K DTOUT,DUOUT,DIRUT S XDRQFLG=1"
^XTMP("XPDT",7641,"RTN","XDRDQUE",97,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRDQUE",98,0)="EOJ ;"
^XTMP("XPDT",7641,"RTN","XDRDQUE",99,0)=" K X,Y,XDRFL,XDRDNSTA,XDRDSTA,XDRQFLG,XDRD,XDRDPDTI,XDRDQUE"
^XTMP("XPDT",7641,"RTN","XDRDQUE",100,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRMADD")="0^10^B42800986^B35442806"
^XTMP("XPDT",7641,"RTN","XDRMADD",1,0)="XDRMADD ;SF-IRMFO/IHS/OHPRD/JCM,JLI,REM -  USER CREATED VERIFIED DUPLICATE PAIR ENTRY ;8/28/08  18:25"
^XTMP("XPDT",7641,"RTN","XDRMADD",2,0)=" ;;7.3;TOOLKIT;**23,113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XDRMADD",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7641,"RTN","XDRMADD",4,0)=" ;;"
^XTMP("XPDT",7641,"RTN","XDRMADD",5,0)=" N XDRFL,XDRCNTR"
^XTMP("XPDT",7641,"RTN","XDRMADD",6,0)=" S XDRCNTR=0"
^XTMP("XPDT",7641,"RTN","XDRMADD",7,0)="START ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",8,0)=" N XDRADFLG,XDRNOPT"
^XTMP("XPDT",7641,"RTN","XDRMADD",9,0)=" K DIC"
^XTMP("XPDT",7641,"RTN","XDRMADD",10,0)=" ; XT*7.3*113 - Setting of XDRNOPT flag, and checking for XDRFL'=2"
^XTMP("XPDT",7641,"RTN","XDRMADD",11,0)=" ;   in this routine and in SCORE entry point, prevent option"
^XTMP("XPDT",7641,"RTN","XDRMADD",12,0)=" ;   from using the duplicate record checking code on the PATIENT file."
^XTMP("XPDT",7641,"RTN","XDRMADD",13,0)=" ;   DUPLICATE RECORD entries can be added, but no checking is done."
^XTMP("XPDT",7641,"RTN","XDRMADD",14,0)=" S (XDRQFLG,XDRADFLG,XDRNOPT)=0"
^XTMP("XPDT",7641,"RTN","XDRMADD",15,0)=" I '$D(XDRFL) D"
^XTMP("XPDT",7641,"RTN","XDRMADD",16,0)=" . S DIC(""A"")=""Add entries from which File: "" D FILE^XDRDQUE"
^XTMP("XPDT",7641,"RTN","XDRMADD",17,0)=" . I XDRFL=2 W ""* No potential duplicate threshold % check will be calculated for PATIENTS"""
^XTMP("XPDT",7641,"RTN","XDRMADD",18,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",19,0)=" G:XDRQFLG END"
^XTMP("XPDT",7641,"RTN","XDRMADD",20,0)=" D:XDRFL'=2"
^XTMP("XPDT",7641,"RTN","XDRMADD",21,0)=" . S XDRDTYPE=$P(XDRD(0),U,5)"
^XTMP("XPDT",7641,"RTN","XDRMADD",22,0)=" . Q:XDRDTYPE]"""""
^XTMP("XPDT",7641,"RTN","XDRMADD",23,0)=" . ;REM -8/20/96 when XDRDTYPE is null set it to basic."
^XTMP("XPDT",7641,"RTN","XDRMADD",24,0)=" . S $P(^VA(15.1,XDRFL,0),U,5)=""b"",XDRDTYPE=""b"""
^XTMP("XPDT",7641,"RTN","XDRMADD",25,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",26,0)=" S XDRGL=^DIC(XDRFL,0,""GL"")"
^XTMP("XPDT",7641,"RTN","XDRMADD",27,0)=" D:XDRCNTR>0  G:XDRQFLG END"
^XTMP("XPDT",7641,"RTN","XDRMADD",28,0)=" . W ! K DIR S DIR(0)=""Y"",DIR(""A"")=""Do you want to ADD another pair (Y/N)"""
^XTMP("XPDT",7641,"RTN","XDRMADD",29,0)=" . D ^DIR K DIR S:$D(DIRUT)!('Y) XDRQFLG=1"
^XTMP("XPDT",7641,"RTN","XDRMADD",30,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",31,0)=" S XDRCNTR=XDRCNTR+1"
^XTMP("XPDT",7641,"RTN","XDRMADD",32,0)=" ; Skip duplicate record checking for patients"
^XTMP("XPDT",7641,"RTN","XDRMADD",33,0)=" I XDRFL=2 D"
^XTMP("XPDT",7641,"RTN","XDRMADD",34,0)=" . S (XDRDSCOR(""MAX""),XDRDSCOR(""PDT%""),XDRD(""DUPSCORE""),XDRMADD(""DUPSCORE%""))=0"
^XTMP("XPDT",7641,"RTN","XDRMADD",35,0)=" . S XDRADFLG=1"
^XTMP("XPDT",7641,"RTN","XDRMADD",36,0)=" I XDRFL'=2 D BYPASS G:XDRQFLG END"
^XTMP("XPDT",7641,"RTN","XDRMADD",37,0)=" D LKUP G:XDRQFLG END"
^XTMP("XPDT",7641,"RTN","XDRMADD",38,0)=" D CHECK G:XDRQFLG<0 START"
^XTMP("XPDT",7641,"RTN","XDRMADD",39,0)=" I XDRFL'=2 D"
^XTMP("XPDT",7641,"RTN","XDRMADD",40,0)=" . D ^XDRDSCOR S:XDRADFLG XDRDSCOR(""PDT%"")=0 ;REM -8/23/96 to bypass PDT%"
^XTMP("XPDT",7641,"RTN","XDRMADD",41,0)=" . S XDRD(""NOADD"")="""" D ^XDRDUP"
^XTMP("XPDT",7641,"RTN","XDRMADD",42,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",43,0)=" K XDRDTYPE"
^XTMP("XPDT",7641,"RTN","XDRMADD",44,0)=" D SCORE"
^XTMP("XPDT",7641,"RTN","XDRMADD",45,0)=" I XDRFL'=2,XDRMADD(""DUPSCORE%"")<XDRDSCOR(""PDT%"") D  G START ; JLI 4/11/96"
^XTMP("XPDT",7641,"RTN","XDRMADD",46,0)=" . W !!,$C(7),""This pair of patients has a duplicate percentage of only "",XDRMADD(""DUPSCORE%""),""% which"""
^XTMP("XPDT",7641,"RTN","XDRMADD",47,0)=" . W !,""is less than the minimal percentage for potential duplicates ("",XDRDSCOR(""PDT%""),""%)."""
^XTMP("XPDT",7641,"RTN","XDRMADD",48,0)=" . W !!?30,""Patients not added!!!"",!!"
^XTMP("XPDT",7641,"RTN","XDRMADD",49,0)=" S XDRDA=+XDRDFLG I XDRDA'>0 D ADD"
^XTMP("XPDT",7641,"RTN","XDRMADD",50,0)=" G:XDRQFLG START"
^XTMP("XPDT",7641,"RTN","XDRMADD",51,0)=" D SHOW^XDRDPICK ; D MERGE ; CHANGED TO CURRENT VERIF METHOD, NOT MERGE 4/11/96  JLI"
^XTMP("XPDT",7641,"RTN","XDRMADD",52,0)=" G START ; ADDED 4/11/96 JLI"
^XTMP("XPDT",7641,"RTN","XDRMADD",53,0)="END D EOJ"
^XTMP("XPDT",7641,"RTN","XDRMADD",54,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",55,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",56,0)="LKUP ;Looks up the records to add."
^XTMP("XPDT",7641,"RTN","XDRMADD",57,0)=" K XDRCD,XDRCD2"
^XTMP("XPDT",7641,"RTN","XDRMADD",58,0)=" S DIC=XDRGL,DIC(0)=""QEAM"""
^XTMP("XPDT",7641,"RTN","XDRMADD",59,0)=" S DIC(""S"")=""I '$D(^VA(15,""""AFR"""",$P(XDRGL,U,2),Y))"""
^XTMP("XPDT",7641,"RTN","XDRMADD",60,0)=" S DIC(""A"")=""Select ""_$P(^DIC(XDRFL,0),U,1)_"": """
^XTMP("XPDT",7641,"RTN","XDRMADD",61,0)=" D ^DIC K DIC,DA"
^XTMP("XPDT",7641,"RTN","XDRMADD",62,0)=" I $D(DIRUT)!(Y=-1) S XDRQFLG=1 G LKUPX"
^XTMP("XPDT",7641,"RTN","XDRMADD",63,0)=" S XDRCD=+Y"
^XTMP("XPDT",7641,"RTN","XDRMADD",64,0)="LKUP2 S DIC=XDRGL,DIC(0)=""QEAM"""
^XTMP("XPDT",7641,"RTN","XDRMADD",65,0)=" S DIC(""S"")=""I '$D(^VA(15,""""AFR"""",$P(XDRGL,U,2),Y))"""
^XTMP("XPDT",7641,"RTN","XDRMADD",66,0)=" S DIC(""A"")=""    Another  ""_$P(^DIC(XDRFL,0),U,1)_"": """
^XTMP("XPDT",7641,"RTN","XDRMADD",67,0)=" D ^DIC K DIC,DA"
^XTMP("XPDT",7641,"RTN","XDRMADD",68,0)=" G:$D(DIRUT)!(Y=-1) LKUP"
^XTMP("XPDT",7641,"RTN","XDRMADD",69,0)=" S XDRCD2=+Y"
^XTMP("XPDT",7641,"RTN","XDRMADD",70,0)=" I XDRCD=XDRCD2 W !!,""Please do not try and merge the same patients together."",!! K XDRCD2 G LKUP2"
^XTMP("XPDT",7641,"RTN","XDRMADD",71,0)=" S XDRMADD(""REC1"")=$S(XDRCD<XDRCD2:XDRCD,1:XDRCD2)"
^XTMP("XPDT",7641,"RTN","XDRMADD",72,0)=" S XDRMADD(""REC2"")=$S(XDRMADD(""REC1"")=XDRCD:XDRCD2,1:XDRCD)"
^XTMP("XPDT",7641,"RTN","XDRMADD",73,0)=" S XDRCD=XDRMADD(""REC1""),XDRCD2=XDRMADD(""REC2"")"
^XTMP("XPDT",7641,"RTN","XDRMADD",74,0)=" W !!,""You will be adding the following pair of records to the duplicate record file:"",!"
^XTMP("XPDT",7641,"RTN","XDRMADD",75,0)=" W !?5,""RECORD1:  "",$P(@(XDRGL_XDRCD_"",0)""),U)"
^XTMP("XPDT",7641,"RTN","XDRMADD",76,0)=" W !?5,""RECORD2:  "",$P(@(XDRGL_XDRCD2_"",0)""),U)"
^XTMP("XPDT",7641,"RTN","XDRMADD",77,0)=" W !! K DIR S DIR(0)=""E"" D ^DIR K DIR I $D(DIRUT) S XDRQFLG=1 Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",78,0)=" W ""  Ok, continuing, hold on ..."",!"
^XTMP("XPDT",7641,"RTN","XDRMADD",79,0)=" ;W !!,""Hit return to continue "" R XDRMADD(""ANS""):DTIME W ""  Okay, continuing, hold on ..."",!"
^XTMP("XPDT",7641,"RTN","XDRMADD",80,0)="LKUPX Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",81,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",82,0)="CHECK ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",83,0)=" S XDRDFLG=0 F XDRDI=""APOT"",""ANOT"",""AVDUP"" I $D(^VA(15,XDRDI,$P(XDRGL,U,2),XDRCD_U_XDRCD2))!($D(^VA(15,XDRDI,$P(XDRGL,U,2),XDRCD2_U_XDRCD))) S XDRDFLG=-1 I XDRDI=""APOT"" D"
^XTMP("XPDT",7641,"RTN","XDRMADD",84,0)=" . I $D(^VA(15,XDRDI,$P(XDRGL,U,2),XDRCD_U_XDRCD2)) S XDRDFLG=$O(^(XDRCD_U_XDRCD2,0)) Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",85,0)=" . S XDRDFLG=$O(^VA(15,XDRDI,$P(XDRGL,U,2),XDRCD2_U_XDRCD,0))"
^XTMP("XPDT",7641,"RTN","XDRMADD",86,0)=" I XDRDFLG W !!,""They are already entered in Duplicate Record file."",!!"
^XTMP("XPDT",7641,"RTN","XDRMADD",87,0)=" K XDRDI"
^XTMP("XPDT",7641,"RTN","XDRMADD",88,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",89,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",90,0)="SCORE ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",91,0)=" I XDRFL'=2 D"
^XTMP("XPDT",7641,"RTN","XDRMADD",92,0)=" . S XDRMADD(""DUPSCORE%"")=$S($G(XDRDSCOR(""MAX""))=0:0,1:(XDRD(""DUPSCORE"")/XDRDSCOR(""MAX"")))"
^XTMP("XPDT",7641,"RTN","XDRMADD",93,0)=" . S XDRMADD(""DUPSCORE%"")=$J(XDRMADD(""DUPSCORE%""),1,2)"
^XTMP("XPDT",7641,"RTN","XDRMADD",94,0)=" . S XDRMADD(""DUPSCORE%"")=$S(XDRMADD(""DUPSCORE%"")<0:0,XDRMADD(""DUPSCORE%"")<1:$E(XDRMADD(""DUPSCORE%""),3,4),1:100)"
^XTMP("XPDT",7641,"RTN","XDRMADD",95,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",96,0)=" S XDRDFR=$S(XDRCD<XDRCD2:XDRCD,1:XDRCD2)"
^XTMP("XPDT",7641,"RTN","XDRMADD",97,0)=" S XDRDTO=$S(XDRDFR=XDRCD:XDRCD2,1:XDRCD)"
^XTMP("XPDT",7641,"RTN","XDRMADD",98,0)=" S XDRMADD(""STATUS"")=""X"""
^XTMP("XPDT",7641,"RTN","XDRMADD",99,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",100,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",101,0)="ADD ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",102,0)=" ;ADD TO DUPLICATE RECORD FILE"
^XTMP("XPDT",7641,"RTN","XDRMADD",103,0)=" S XDRMAINI=""MERGE"" D ^XDRMAINI ;LAB/OHPRD ADDED THIS"
^XTMP("XPDT",7641,"RTN","XDRMADD",104,0)=" S DIC=""^VA(15,"",DIC(0)=""L"",X=XDRDFR_"";""_$P(XDRGL,U,2),DLAYGO=15"
^XTMP("XPDT",7641,"RTN","XDRMADD",105,0)=" S XDRMADDX=XDRDTO_"";""_$P(XDRGL,U,2)"
^XTMP("XPDT",7641,"RTN","XDRMADD",106,0)=" S DIC(""DR"")="".02////^S X=XDRMADDX""_"";.03////""_XDRMADD(""STATUS"")"
^XTMP("XPDT",7641,"RTN","XDRMADD",107,0)=" ;S DIC(""DR"")=DIC(""DR"")_"";.04//2"" ;REM -10/2/96 this will be asked in XDRRMRG!"
^XTMP("XPDT",7641,"RTN","XDRMADD",108,0)=" S DIC(""DR"")=DIC(""DR"")_"";.03///P""_"";.06////""_DT_"";.09////""_DUZ"
^XTMP("XPDT",7641,"RTN","XDRMADD",109,0)=" S DIC(""DR"")=DIC(""DR"")_"";.15////""_XDRDSCOR(""MAX"")_"";.17////""_XDRDSCOR(""PDT%"")_"";.18////""_XDRD(""DUPSCORE"")_"";.19////""_XDRMADD(""DUPSCORE%"")"
^XTMP("XPDT",7641,"RTN","XDRMADD",110,0)=" S:$D(XDRDSCOR(""VDT%"")) DIC(""DR"")=DIC(""DR"")_"";.16////""_XDRDSCOR(""VDT%"")"
^XTMP("XPDT",7641,"RTN","XDRMADD",111,0)=" D"
^XTMP("XPDT",7641,"RTN","XDRMADD",112,0)=" . N I,X1,X2,X3"
^XTMP("XPDT",7641,"RTN","XDRMADD",113,0)=" . S X1=X_U_XDRMADDX,X2=XDRMADDX_U_X"
^XTMP("XPDT",7641,"RTN","XDRMADD",114,0)=" . F I=0:0 S I=$O(^VA(15,""B"",X,I)) Q:I'>0  S X3=$P($G(^VA(15,I,0)),U,1,2) I X3=X1!(X3=X2) K X Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",115,0)=" S Y=-1 I $D(X) D FILE^DICN"
^XTMP("XPDT",7641,"RTN","XDRMADD",116,0)=" K DIC,DR,X,DLAYGO"
^XTMP("XPDT",7641,"RTN","XDRMADD",117,0)=" I Y'>0 S XDRQFLG=1 K XDRCD,XDRCD2 G ADDX"
^XTMP("XPDT",7641,"RTN","XDRMADD",118,0)=" S DIE=""^VA(15,"",(XDRDA,XDRMPDA,DA)=+Y ; ADDED XDRDA TO LIST 4/11/96 JLI"
^XTMP("XPDT",7641,"RTN","XDRMADD",119,0)=" F XDRMORD=0:0 S XDRMORD=$O(XDRDTEST(XDRMORD)) Q:'XDRMORD  S DR=""2101///""_$P(XDRDTEST(XDRMORD),U,1),DR(2,15.02101)="".02////""_XDRDUP(""TEST SCORE"",XDRMORD) D ^DIE K DR"
^XTMP("XPDT",7641,"RTN","XDRMADD",120,0)="ADDX K DIE,DR,DA,XDRMORD,XDRMADDX,XDRDUP(""TEST SCORE"")"
^XTMP("XPDT",7641,"RTN","XDRMADD",121,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",122,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",123,0)="MERGE Q  ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",124,0)=" S XDRMPAIR=XDRDFR_""^""_XDRDTO,XDRM(""NOVERIFY"")="""""
^XTMP("XPDT",7641,"RTN","XDRMADD",125,0)=" D EN^XDRMAIN"
^XTMP("XPDT",7641,"RTN","XDRMADD",126,0)="MERGEX K XDRM"
^XTMP("XPDT",7641,"RTN","XDRMADD",127,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",128,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",129,0)="BYPASS ;REM -8/20/96 Add record directly into file 15, bypass threshold."
^XTMP("XPDT",7641,"RTN","XDRMADD",130,0)=" N X,XDRKEY"
^XTMP("XPDT",7641,"RTN","XDRMADD",131,0)=" S (X,XDRKEY)=0 F  S X=$O(^VA(200,DUZ,51,""B"",X)) Q:X'>0!(XDRKEY)  D"
^XTMP("XPDT",7641,"RTN","XDRMADD",132,0)=" .I $$GET1^DIQ(19.1,X,.01)=""XDRMGR"" S XDRKEY=1 Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",133,0)=" Q:'XDRKEY"
^XTMP("XPDT",7641,"RTN","XDRMADD",134,0)=" S DIR(0)=""Y"",DIR(""A"")=""Do you want to bypass the potential duplicate threshold % check (Y/N)"""
^XTMP("XPDT",7641,"RTN","XDRMADD",135,0)=" S DIR(""??"")=""^W !!,""""This will add the pair of records to the Duplicate Record file without checking the potential duplicate threshold %."""""""
^XTMP("XPDT",7641,"RTN","XDRMADD",136,0)=" D ^DIR K DIR S XDRADFLG=Y I $D(DTOUT)!($D(DUOUT)) S XDRQFLG=1 Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",137,0)=" I 'XDRADFLG W !!,*7,""Potential duplicate threshold % will NOT be bypassed!"",!"
^XTMP("XPDT",7641,"RTN","XDRMADD",138,0)=" I XDRADFLG D"
^XTMP("XPDT",7641,"RTN","XDRMADD",139,0)=" .W !!,""This will add the pair of records directly into the Duplicate Record file."""
^XTMP("XPDT",7641,"RTN","XDRMADD",140,0)=" .S DIR(0)=""YO"",DIR(""A"")=""Are you sure you want to continue"",DIR(""B"")=""NO"""
^XTMP("XPDT",7641,"RTN","XDRMADD",141,0)=" .D ^DIR K DIR S XDRADFLG=Y W ! I $D(DIRUT) S XDRQFLG=1 Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",142,0)=" .I 'XDRADFLG W *7,!!,""Potential duplicate threshold % will NOT be bypassed!"",!"
^XTMP("XPDT",7641,"RTN","XDRMADD",143,0)=" Q"
^XTMP("XPDT",7641,"RTN","XDRMADD",144,0)=" ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",145,0)="EOJ ;"
^XTMP("XPDT",7641,"RTN","XDRMADD",146,0)=" K XDRMADD,XDRMORD,XDRDFR,XDRDTO,X,Y,XDRCD,XDRCD2,XDRD,XDRFL,XDRGL"
^XTMP("XPDT",7641,"RTN","XDRMADD",147,0)=" K XDRFL,XDRMPAIR,XDRMPDA,XDRQFLG,XDRDSCOR,XDRDTEST"
^XTMP("XPDT",7641,"RTN","XDRMADD",148,0)=" Q"
^XTMP("XPDT",7641,"RTN","XT73P113")="0^12^B2774672^n/a"
^XTMP("XPDT",7641,"RTN","XT73P113",1,0)="XT73P113 ;OAK-OIFO/TKW  KIDs Post-Init for XT*7.3*113 ;10/15/08  16:12"
^XTMP("XPDT",7641,"RTN","XT73P113",2,0)=" ;;7.3;TOOLKIT;**113**;Apr 25, 1995;Build 5"
^XTMP("XPDT",7641,"RTN","XT73P113",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7641,"RTN","XT73P113",4,0)=" ;;"
^XTMP("XPDT",7641,"RTN","XT73P113",5,0)=" ;;KIDs Post-Init"
^XTMP("XPDT",7641,"RTN","XT73P113",6,0)=" ;"
^XTMP("XPDT",7641,"RTN","XT73P113",7,0)="EN ; Delete menu item "
^XTMP("XPDT",7641,"RTN","XT73P113",8,0)=" D BMES^XPDUTL(""Put 'Purge Duplicate Record File' option OUT OF ORDER"")"
^XTMP("XPDT",7641,"RTN","XT73P113",9,0)=" N RSLT"
^XTMP("XPDT",7641,"RTN","XT73P113",10,0)=" S RSLT=$$LKOPT^XPDMENU(""XDR PURGE"")"
^XTMP("XPDT",7641,"RTN","XT73P113",11,0)=" I RSLT'>0 D  Q"
^XTMP("XPDT",7641,"RTN","XT73P113",12,0)=" . D BMES^XPDUTL(""Option XDR PURGE (Purge Duplicate Record File) is not on your system."")"
^XTMP("XPDT",7641,"RTN","XT73P113",13,0)=" . Q"
^XTMP("XPDT",7641,"RTN","XT73P113",14,0)=" D OUT^XPDMENU(""XDR PURGE"",""Inactivated with patch XT*7.3*113"")"
^XTMP("XPDT",7641,"RTN","XT73P113",15,0)=" D BMES^XPDUTL(""Delete 'Purge Duplicate Record File' OPTION from the 'Manager Utilities' menu."")"
^XTMP("XPDT",7641,"RTN","XT73P113",16,0)=" S RSLT=$$DELETE^XPDMENU(""XDR MANAGER UTILITIES"",""XDR PURGE"")"
^XTMP("XPDT",7641,"RTN","XT73P113",17,0)=" Q:RSLT=1"
^XTMP("XPDT",7641,"RTN","XT73P113",18,0)=" D MES^XPDUTL(""  *** Deletion FAILED!! ***"")"
^XTMP("XPDT",7641,"RTN","XT73P113",19,0)=" D MES^XPDUTL(""  Use the 'Menu Management' option to delete the 'XPD PURGE' menu item"")"
^XTMP("XPDT",7641,"RTN","XT73P113",20,0)=" D MES^XPDUTL(""  from the 'XDR MANAGER UTILITIES' Menu Option."")"
^XTMP("XPDT",7641,"RTN","XT73P113",21,0)=" Q"
^XTMP("XPDT",7641,"RTN","XT73P113",22,0)=" ;"
^XTMP("XPDT",7641,"RTN","XT73P113",23,0)=" ;"
^XTMP("XPDT",7641,"VER")="8.0^22.0"
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,0)="SUPPRESS NEW DUP EMAIL^S^1:Yes;0:No;^99;1^Q"
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,3)="Enter 1 to suppress email sent when a new entry is added to the DUPLICATE RECORD file. Enter 0 to send email."
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,21,0)="^^7^7^3080919^"
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,21,1,0)="When a PATIENT pair entry is added to the DUPLICATE RECORD file by PSIM,"
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,21,2,0)="an email is sent to the mail group specified in the DUPLICATE MANAGER MAIL"
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,21,3,0)="GROUP field, notifying them that the patient pair has been added to the"
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,21,4,0)="file with POTENTIAL DUPLICATE, UNVERIFIED status."
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,21,5,0)=" "
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,21,6,0)="If this field is set to 1 (YES), the email will be suppressed (NOT sent)."
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,21,7,0)="If this field is set to 0 (NO), the email will be sent."
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,0)="^^13^13^3080919^"
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,1,0)="This field is initialized to 1 for the PATIENT file record in patch "
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,2,0)="XT*7.3*113, to suppress sending the email messages while IMDQ processes a"
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,3,0)="potentially large number of duplicate patients generated by the Initiate"
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,4,0)="search engine when its database is initially loaded."
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,5,0)=" "
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,6,0)="IMDQ will later use a new option to set the field back to 0, so that email"
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,7,0)="messages will be generated when new entries are added to the DUPLICATE"
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,8,0)="RECORD file."
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,9,0)=" "
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,10,0)="If set to null, it will behave as if the field were set to 0."
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,11,0)=" "
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,12,0)="The value in this field does not affect the DUPLICATE RECORD MERGE "
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,23,13,0)="options."
^XTMP("XPDT",7641,"^DD",15.1,15.1,99,"DT")="3080919"
^XTMP("XPDT",7676)="1"
^XTMP("XPDT",7676,"BLD",1173,0)="XU*8.0*514^KERNEL^0^3091005^y"
^XTMP("XPDT",7676,"BLD",1173,1,0)="^^2^2^3090608^^^"
^XTMP("XPDT",7676,"BLD",1173,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7676,"BLD",1173,1,2,0)="XU*8*514  XUSTZ error fix."
^XTMP("XPDT",7676,"BLD",1173,4,0)="^9.64PA^200^2"
^XTMP("XPDT",7676,"BLD",1173,4,200,0)="200"
^XTMP("XPDT",7676,"BLD",1173,4,200,2,0)="^9.641^200^1"
^XTMP("XPDT",7676,"BLD",1173,4,200,2,200,0)="NEW PERSON  (File-top level)"
^XTMP("XPDT",7676,"BLD",1173,4,200,2,200,1,0)="^9.6411^747.113^4"
^XTMP("XPDT",7676,"BLD",1173,4,200,2,200,1,501.1,0)="NETWORK USERNAME"
^XTMP("XPDT",7676,"BLD",1173,4,200,2,200,1,747.11,0)="APPOINTMENT STATUS"
^XTMP("XPDT",7676,"BLD",1173,4,200,2,200,1,747.113,0)="RENEW DATE"
^XTMP("XPDT",7676,"BLD",1173,4,200,2,200,1,747.44,0)="DEA EXPIRATION DATE"
^XTMP("XPDT",7676,"BLD",1173,4,200,222)="y^n^p^^^^n^^n"
^XTMP("XPDT",7676,"BLD",1173,4,200,224)=""
^XTMP("XPDT",7676,"BLD",1173,4,8989.3,0)="8989.3"
^XTMP("XPDT",7676,"BLD",1173,4,8989.3,2,0)="^9.641^8989.3^1"
^XTMP("XPDT",7676,"BLD",1173,4,8989.3,2,8989.3,0)="KERNEL SYSTEM PARAMETERS  (File-top level)"
^XTMP("XPDT",7676,"BLD",1173,4,8989.3,2,8989.3,1,0)="^9.6411^13^1"
^XTMP("XPDT",7676,"BLD",1173,4,8989.3,2,8989.3,1,13,0)="ACADEMIC AFFILIATION WAIVER"
^XTMP("XPDT",7676,"BLD",1173,4,8989.3,222)="y^y^p^^^^n^^n"
^XTMP("XPDT",7676,"BLD",1173,4,8989.3,224)=""
^XTMP("XPDT",7676,"BLD",1173,4,"APDD",200,200)=""
^XTMP("XPDT",7676,"BLD",1173,4,"APDD",200,200,501.1)=""
^XTMP("XPDT",7676,"BLD",1173,4,"APDD",200,200,747.11)=""
^XTMP("XPDT",7676,"BLD",1173,4,"APDD",200,200,747.113)=""
^XTMP("XPDT",7676,"BLD",1173,4,"APDD",200,200,747.44)=""
^XTMP("XPDT",7676,"BLD",1173,4,"APDD",8989.3,8989.3)=""
^XTMP("XPDT",7676,"BLD",1173,4,"APDD",8989.3,8989.3,13)=""
^XTMP("XPDT",7676,"BLD",1173,4,"B",200,200)=""
^XTMP("XPDT",7676,"BLD",1173,4,"B",8989.3,8989.3)=""
^XTMP("XPDT",7676,"BLD",1173,6)="^428"
^XTMP("XPDT",7676,"BLD",1173,6.3)="8"
^XTMP("XPDT",7676,"BLD",1173,"INID")="^y"
^XTMP("XPDT",7676,"BLD",1173,"INIT")="POST^XU8P514"
^XTMP("XPDT",7676,"BLD",1173,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7676,"BLD",1173,"KRN",.4,0)=".4"
^XTMP("XPDT",7676,"BLD",1173,"KRN",.401,0)=".401"
^XTMP("XPDT",7676,"BLD",1173,"KRN",.402,0)=".402"
^XTMP("XPDT",7676,"BLD",1173,"KRN",.402,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7676,"BLD",1173,"KRN",.402,"NM",1,0)="XUEDIT CHARACTERISTICS    FILE #200^200^0"
^XTMP("XPDT",7676,"BLD",1173,"KRN",.402,"NM","B","XUEDIT CHARACTERISTICS    FILE #200",1)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN",.403,0)=".403"
^XTMP("XPDT",7676,"BLD",1173,"KRN",.403,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7676,"BLD",1173,"KRN",.403,"NM",1,0)="XUEDIT CHARACTERISTICS    FILE #200^200^0"
^XTMP("XPDT",7676,"BLD",1173,"KRN",.403,"NM","B","XUEDIT CHARACTERISTICS    FILE #200",1)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN",.5,0)=".5"
^XTMP("XPDT",7676,"BLD",1173,"KRN",.84,0)=".84"
^XTMP("XPDT",7676,"BLD",1173,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7676,"BLD",1173,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,"NM",0)="^9.68A^6^5"
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,"NM",1,0)="XUSTZ^^0^B8373786"
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,"NM",2,0)="XGKB1^^0^B7627724"
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,"NM",3,0)="XUSTERM1^^0^B25005360"
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,"NM",5,0)="XQHLP^^0^B16208032"
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,"NM",6,0)="XUSER1^^0^B10316909"
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,"NM","B","XGKB1",2)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,"NM","B","XQHLP",5)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,"NM","B","XUSER1",6)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,"NM","B","XUSTERM1",3)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN",9.8,"NM","B","XUSTZ",1)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN",19,0)="19"
^XTMP("XPDT",7676,"BLD",1173,"KRN",19,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7676,"BLD",1173,"KRN",19,"NM",1,0)="XUAUTODEACTIVATE^^0"
^XTMP("XPDT",7676,"BLD",1173,"KRN",19,"NM","B","XUAUTODEACTIVATE",1)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7676,"BLD",1173,"KRN",101,0)="101"
^XTMP("XPDT",7676,"BLD",1173,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7676,"BLD",1173,"KRN",771,0)="771"
^XTMP("XPDT",7676,"BLD",1173,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7676,"BLD",1173,"KRN",870,0)="870"
^XTMP("XPDT",7676,"BLD",1173,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7676,"BLD",1173,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7676,"BLD",1173,"KRN",8994,0)="8994"
^XTMP("XPDT",7676,"BLD",1173,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",.4,.4)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",.401,.401)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",.402,.402)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",.403,.403)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",.5,.5)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",.84,.84)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",19,19)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",101,101)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",771,771)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",870,870)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",8994,8994)=""
^XTMP("XPDT",7676,"BLD",1173,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7676,"BLD",1173,"QDEF")="^^^^YES"
^XTMP("XPDT",7676,"BLD",1173,"QUES",0)="^9.62^^"
^XTMP("XPDT",7676,"BLD",1173,"REQB",0)="^9.611^4^4"
^XTMP("XPDT",7676,"BLD",1173,"REQB",1,0)="XU*8.0*243^2"
^XTMP("XPDT",7676,"BLD",1173,"REQB",2,0)="XU*8.0*244^2"
^XTMP("XPDT",7676,"BLD",1173,"REQB",3,0)="XU*8.0*265^2"
^XTMP("XPDT",7676,"BLD",1173,"REQB",4,0)="XU*8.0*436^2"
^XTMP("XPDT",7676,"BLD",1173,"REQB","B","XU*8.0*243",1)=""
^XTMP("XPDT",7676,"BLD",1173,"REQB","B","XU*8.0*244",2)=""
^XTMP("XPDT",7676,"BLD",1173,"REQB","B","XU*8.0*265",3)=""
^XTMP("XPDT",7676,"BLD",1173,"REQB","B","XU*8.0*436",4)=""
^XTMP("XPDT",7676,"FIA",200)="NEW PERSON"
^XTMP("XPDT",7676,"FIA",200,0)="^VA(200,"
^XTMP("XPDT",7676,"FIA",200,0,0)="200I"
^XTMP("XPDT",7676,"FIA",200,0,1)="y^n^p^^^^n^^n"
^XTMP("XPDT",7676,"FIA",200,0,10)=""
^XTMP("XPDT",7676,"FIA",200,0,11)=""
^XTMP("XPDT",7676,"FIA",200,0,"RLRO")=""
^XTMP("XPDT",7676,"FIA",200,0,"VR")="8.0^XU"
^XTMP("XPDT",7676,"FIA",200,200)="1"
^XTMP("XPDT",7676,"FIA",200,200,501.1)=""
^XTMP("XPDT",7676,"FIA",200,200,747.11)=""
^XTMP("XPDT",7676,"FIA",200,200,747.113)=""
^XTMP("XPDT",7676,"FIA",200,200,747.44)=""
^XTMP("XPDT",7676,"FIA",8989.3)="KERNEL SYSTEM PARAMETERS"
^XTMP("XPDT",7676,"FIA",8989.3,0)="^XTV(8989.3,"
^XTMP("XPDT",7676,"FIA",8989.3,0,0)="8989.3P"
^XTMP("XPDT",7676,"FIA",8989.3,0,1)="y^y^p^^^^n^^n"
^XTMP("XPDT",7676,"FIA",8989.3,0,10)=""
^XTMP("XPDT",7676,"FIA",8989.3,0,11)=""
^XTMP("XPDT",7676,"FIA",8989.3,0,"RLRO")=""
^XTMP("XPDT",7676,"FIA",8989.3,0,"VR")="8.0^XU"
^XTMP("XPDT",7676,"FIA",8989.3,8989.3)="1"
^XTMP("XPDT",7676,"FIA",8989.3,8989.3,13)=""
^XTMP("XPDT",7676,"INIT")="POST^XU8P514"
^XTMP("XPDT",7676,"KRN",.402,9,-1)="0^1"
^XTMP("XPDT",7676,"KRN",.402,9,0)="XUEDIT CHARACTERISTICS^3090707.1717^^200^^#^3090729"
^XTMP("XPDT",7676,"KRN",.402,9,"DR",1,200)="11.1;1;13;200.05;200.06;200.09;31.2;31.3;.131;.132;501.1;"
^XTMP("XPDT",7676,"KRN",.403,2,-1)="0^1"
^XTMP("XPDT",7676,"KRN",.403,2,0)="XUEDIT CHARACTERISTICS^^^^2901206^^^200^0^0^1"
^XTMP("XPDT",7676,"KRN",.403,2,40,0)="^.4031I^1^1"
^XTMP("XPDT",7676,"KRN",.403,2,40,1,0)="1^XUEDIT CHARACTERISTICS HDR^1,1^^^^^^"
^XTMP("XPDT",7676,"KRN",.403,2,40,1,1)="Page 1 of 1"
^XTMP("XPDT",7676,"KRN",.403,2,40,1,40,0)="^.4032PI^27^1"
^XTMP("XPDT",7676,"KRN",.403,2,40,1,40,27,0)="XUEDIT CHARACTERISTICS^1^5,1^e"
^XTMP("XPDT",7676,"KRN",.404,26,0)="XUEDIT CHARACTERISTICS HDR^200^0^^"
^XTMP("XPDT",7676,"KRN",.404,26,40,0)="^.4044I^4^4"
^XTMP("XPDT",7676,"KRN",.404,26,40,1,0)="1^EDIT USER CHARACTERISTICS^1^"
^XTMP("XPDT",7676,"KRN",.404,26,40,1,2)="^^1,28^"
^XTMP("XPDT",7676,"KRN",.404,26,40,2,0)="2^NAME^3^"
^XTMP("XPDT",7676,"KRN",.404,26,40,2,1)=".01"
^XTMP("XPDT",7676,"KRN",.404,26,40,2,2)="2,7^30^2,1"
^XTMP("XPDT",7676,"KRN",.404,26,40,3,0)="3^PAGE 1 OF 1^1^"
^XTMP("XPDT",7676,"KRN",.404,26,40,3,2)="^^2,69^"
^XTMP("XPDT",7676,"KRN",.404,26,40,4,0)="4^_______________________________________________________________________________^1^"
^XTMP("XPDT",7676,"KRN",.404,26,40,4,2)="^^3,1^"
^XTMP("XPDT",7676,"KRN",.404,27,0)="XUEDIT CHARACTERISTICS^200^^^"
^XTMP("XPDT",7676,"KRN",.404,27,15,0)="1^^1^1^2930813^^^^"
^XTMP("XPDT",7676,"KRN",.404,27,15,1,0)="Part of KERNEL."
^XTMP("XPDT",7676,"KRN",.404,27,40,0)="^.4044I^13^13"
^XTMP("XPDT",7676,"KRN",.404,27,40,1,0)="1^INITIAL^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,1,1)="1"
^XTMP("XPDT",7676,"KRN",.404,27,40,1,2)="1,29^5^1,20"
^XTMP("XPDT",7676,"KRN",.404,27,40,1,11)="N T S T(1)=""To Exit form and save changes, enter: <PF1>E"",T(2)=""To Quit form without saving changes, enter: <PF1>Q"" D HLP^DDSUTL(.T)"
^XTMP("XPDT",7676,"KRN",.404,27,40,2,0)="3^NICK NAME^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,2,1)="13"
^XTMP("XPDT",7676,"KRN",.404,27,40,2,2)="2,29^10^2,18"
^XTMP("XPDT",7676,"KRN",.404,27,40,3,0)="2^PHONE^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,3,1)=".131"
^XTMP("XPDT",7676,"KRN",.404,27,40,3,2)="1,62^15^1,55"
^XTMP("XPDT",7676,"KRN",.404,27,40,4,0)="4^OFFICE PHONE^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,4,1)=".132"
^XTMP("XPDT",7676,"KRN",.404,27,40,4,2)="2,62^15^2,48"
^XTMP("XPDT",7676,"KRN",.404,27,40,5,0)="7^ASK DEVICE TYPE AT SIGN-ON^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,5,1)="200.05"
^XTMP("XPDT",7676,"KRN",.404,27,40,5,2)="5,33^9^5,5"
^XTMP("XPDT",7676,"KRN",.404,27,40,6,0)="8^AUTO MENU^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,6,1)="200.06"
^XTMP("XPDT",7676,"KRN",.404,27,40,6,2)="6,33^20^6,22"
^XTMP("XPDT",7676,"KRN",.404,27,40,7,0)="9^TYPE-AHEAD^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,7,1)="200.09"
^XTMP("XPDT",7676,"KRN",.404,27,40,7,2)="7,33^11^7,21"
^XTMP("XPDT",7676,"KRN",.404,27,40,8,0)="10^TEXT TERMINATOR^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,8,1)="31.2"
^XTMP("XPDT",7676,"KRN",.404,27,40,8,2)="8,33^5^8,16"
^XTMP("XPDT",7676,"KRN",.404,27,40,9,0)="11^PREFERRED EDITOR^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,9,1)="31.3"
^XTMP("XPDT",7676,"KRN",.404,27,40,9,2)="9,33^30^9,15"
^XTMP("XPDT",7676,"KRN",.404,27,40,10,0)="13^Want to edit VERIFY CODE (Y/N)^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,10,1)="11.1"
^XTMP("XPDT",7676,"KRN",.404,27,40,10,2)="13,33^3^13,1"
^XTMP("XPDT",7676,"KRN",.404,27,40,11,0)="5^VOICE PAGER^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,11,1)=".137"
^XTMP("XPDT",7676,"KRN",.404,27,40,11,2)="3,62^15^3,49"
^XTMP("XPDT",7676,"KRN",.404,27,40,12,0)="6^DIGITAL PAGER^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,12,1)=".138"
^XTMP("XPDT",7676,"KRN",.404,27,40,12,2)="4,62^15^4,47"
^XTMP("XPDT",7676,"KRN",.404,27,40,13,0)="12^NETWORK USERNAME^3"
^XTMP("XPDT",7676,"KRN",.404,27,40,13,1)="501.1"
^XTMP("XPDT",7676,"KRN",.404,27,40,13,2)="10,33^15^10,15"
^XTMP("XPDT",7676,"KRN",19,64,-1)="0^1"
^XTMP("XPDT",7676,"KRN",19,64,0)="XUAUTODEACTIVATE^Automatic Deactivation of Users^^R^^^^^^^^^n^^"
^XTMP("XPDT",7676,"KRN",19,64,1,0)="^^17^17^3090727^"
^XTMP("XPDT",7676,"KRN",19,64,1,1,0)="This option will go thru the New Person file, and search for users with "
^XTMP("XPDT",7676,"KRN",19,64,1,2,0)="a termination date in the past who still have an access code.  It will "
^XTMP("XPDT",7676,"KRN",19,64,1,3,0)="delete there access code and Keys. It calls the XU USER TERMINATE "
^XTMP("XPDT",7676,"KRN",19,64,1,4,0)="protocol in the OPTION FILE so other applications can take any action they"
^XTMP("XPDT",7676,"KRN",19,64,1,5,0)="need. If the DELETE ALL MAIL ACCESS field is set then the user will be"
^XTMP("XPDT",7676,"KRN",19,64,1,6,0)="removed them from the mail system, this will delete their mail boxes and"
^XTMP("XPDT",7676,"KRN",19,64,1,7,0)="delete them from any mail groups. "
^XTMP("XPDT",7676,"KRN",19,64,1,8,0)=" "
^XTMP("XPDT",7676,"KRN",19,64,1,9,0)="Patch XU*8*514 implements the Logical Access Controls section of VA "
^XTMP("XPDT",7676,"KRN",19,64,1,10,0)="Handbook 6500. Item 'd' states that accounts are automatically disabled"
^XTMP("XPDT",7676,"KRN",19,64,1,11,0)="if inactive for 30 days."
^XTMP("XPDT",7676,"KRN",19,64,1,12,0)=" "
^XTMP("XPDT",7676,"KRN",19,64,1,13,0)="The routine checks for users that have an access code and a Last Signon "
^XTMP("XPDT",7676,"KRN",19,64,1,14,0)="Date (#202) where the Last Signon Date is more than 30 days old and sets "
^XTMP("XPDT",7676,"KRN",19,64,1,15,0)="the DISUSER (#7) flag for the user. If the site has set the ACADEMIC"
^XTMP("XPDT",7676,"KRN",19,64,1,16,0)="AFFILIATION WAIVER (#13) field to YES in the KERNEL SYSTEM PARAMETERS file"
^XTMP("XPDT",7676,"KRN",19,64,1,17,0)="(#8989.3) then a 90 day limit is used in place of 30 days."
^XTMP("XPDT",7676,"KRN",19,64,2)="n"
^XTMP("XPDT",7676,"KRN",19,64,25)="CHECK^XUSTERM1"
^XTMP("XPDT",7676,"KRN",19,64,200.9)="y"
^XTMP("XPDT",7676,"KRN",19,64,"U")="AUTOMATIC DEACTIVATION OF USER"
^XTMP("XPDT",7676,"MBREQ")="0"
^XTMP("XPDT",7676,"ORD",7,.402)=".402;7;;;EDEOUT^DIFROMSO(.402,DA,"""",XPDA);FPRE^DIFROMSI(.402,"""",XPDA);EPRE^DIFROMSI(.402,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.402,DA,"""",XPDA);DEL^DIFROMSK(.402,"""",%)"
^XTMP("XPDT",7676,"ORD",7,.402,0)="INPUT TEMPLATE"
^XTMP("XPDT",7676,"ORD",8,.403)=".403;8;;;EDEOUT^DIFROMSO(.403,DA,"""",XPDA);FPRE^DIFROMSI(.403,"""",XPDA);EPRE^DIFROMSI(.403,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.403,DA,"""",XPDA);DEL^DIFROMSK(.403,"""",%)"
^XTMP("XPDT",7676,"ORD",8,.403,0)="FORM"
^XTMP("XPDT",7676,"ORD",18,19)="19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA"
^XTMP("XPDT",7676,"ORD",18,19,0)="OPTION"
^XTMP("XPDT",7676,"PKG",3,-1)="1^1"
^XTMP("XPDT",7676,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7676,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7676,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7676,"PKG",3,22,1,0)="8.0^3090706^3090706^6"
^XTMP("XPDT",7676,"PKG",3,22,1,"PAH",1,0)="514^3091005"
^XTMP("XPDT",7676,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3091005"
^XTMP("XPDT",7676,"PKG",3,22,1,"PAH",1,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7676,"PKG",3,22,1,"PAH",1,1,2,0)="XU*8*514  XUSTZ error fix."
^XTMP("XPDT",7676,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7676,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7676,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7676,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7676,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7676,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7676,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7676,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7676,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7676,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7676,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7676,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7676,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7676,"QUES","XPI1","B")="YES"
^XTMP("XPDT",7676,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7676,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7676,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7676,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7676,"QUES","XPM1","B")=""
^XTMP("XPDT",7676,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7676,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7676,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7676,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7676,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7676,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7676,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7676,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7676,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7676,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7676,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7676,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7676,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7676,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7676,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7676,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7676,"RTN")="6"
^XTMP("XPDT",7676,"RTN","XGKB1")="0^2^B7627724^B7636164"
^XTMP("XPDT",7676,"RTN","XGKB1",1,0)="XGKB1 ;SFISC/VYD - Read with Escape Processing cont. ;11/06/08  15:08"
^XTMP("XPDT",7676,"RTN","XGKB1",2,0)=" ;;8.0;KERNEL;**244,514**;Jul 10, 1995;Build 8"
^XTMP("XPDT",7676,"RTN","XGKB1",3,0)=" ;;Special thanks to MELDRUM.KEVIN@ISC-SLC.VA.GOV"
^XTMP("XPDT",7676,"RTN","XGKB1",4,0)=" ;"
^XTMP("XPDT",7676,"RTN","XGKB1",5,0)="VAXDSM ; $ZB ($KEY) values for VAX DSM"
^XTMP("XPDT",7676,"RTN","XGKB1",6,0)="MSM ; $ZB ($KEY) values for MSM"
^XTMP("XPDT",7676,"RTN","XGKB1",7,0)=" F I=2:1:31 D"
^XTMP("XPDT",7676,"RTN","XGKB1",8,0)=" . S X=$TR($T(KBD+I),"" "","""")"
^XTMP("XPDT",7676,"RTN","XGKB1",9,0)=" . S ^XUTL(""XGKB"",$P(X,"";"",4))=$P(X,"";"",3)"
^XTMP("XPDT",7676,"RTN","XGKB1",10,0)=" F I=29:1 S X=$TR($T(KBD+I),"" "","""") Q:$P(X,"";"",3)=""ZZZ""  D"
^XTMP("XPDT",7676,"RTN","XGKB1",11,0)=" . S ^XUTL(""XGKB"",$P(X,"";"",4)*256+27)=$P(X,"";"",3)"
^XTMP("XPDT",7676,"RTN","XGKB1",12,0)=" Q"
^XTMP("XPDT",7676,"RTN","XGKB1",13,0)=" ;"
^XTMP("XPDT",7676,"RTN","XGKB1",14,0)=" ;"
^XTMP("XPDT",7676,"RTN","XGKB1",15,0)="GTM ; $ZB ($KEY) values for GT.M"
^XTMP("XPDT",7676,"RTN","XGKB1",16,0)="DTM ; $ZB ($KEY) values for DTM"
^XTMP("XPDT",7676,"RTN","XGKB1",17,0)=" F I=2:1 S X=$TR($T(KBD+I),"" "","""") Q:$P(X,"";"",3)=""ZZZ""  D"
^XTMP("XPDT",7676,"RTN","XGKB1",18,0)=" . S @(""^XUTL(""""XGKB"""",$C(""_$P(X,"";"",5)_""))=$P(X,"""";"""",3)"")"
^XTMP("XPDT",7676,"RTN","XGKB1",19,0)=" Q"
^XTMP("XPDT",7676,"RTN","XGKB1",20,0)=" ;"
^XTMP("XPDT",7676,"RTN","XGKB1",21,0)=" ;"
^XTMP("XPDT",7676,"RTN","XGKB1",22,0)="KBD ; $KEY values for DSM, MSM, and DTM when using escape processing"
^XTMP("XPDT",7676,"RTN","XGKB1",23,0)=" ; Key      ;DSM ;DTM       (MSM is the same as DSM)"
^XTMP("XPDT",7676,"RTN","XGKB1",24,0)=" ;;^A       ;1   ;1"
^XTMP("XPDT",7676,"RTN","XGKB1",25,0)=" ;;^B       ;2   ;2"
^XTMP("XPDT",7676,"RTN","XGKB1",26,0)=" ;;^C       ;3   ;3"
^XTMP("XPDT",7676,"RTN","XGKB1",27,0)=" ;;^D       ;4   ;4"
^XTMP("XPDT",7676,"RTN","XGKB1",28,0)=" ;;^E       ;5   ;5"
^XTMP("XPDT",7676,"RTN","XGKB1",29,0)=" ;;^F       ;6   ;6"
^XTMP("XPDT",7676,"RTN","XGKB1",30,0)=" ;;^G       ;7   ;7"
^XTMP("XPDT",7676,"RTN","XGKB1",31,0)=" ;;^H       ;8   ;8"
^XTMP("XPDT",7676,"RTN","XGKB1",32,0)=" ;;TAB      ;9   ;9"
^XTMP("XPDT",7676,"RTN","XGKB1",33,0)=" ;;^J       ;10  ;10"
^XTMP("XPDT",7676,"RTN","XGKB1",34,0)=" ;;^K       ;11  ;11"
^XTMP("XPDT",7676,"RTN","XGKB1",35,0)=" ;;^L       ;12  ;12"
^XTMP("XPDT",7676,"RTN","XGKB1",36,0)=" ;;CR       ;13  ;13"
^XTMP("XPDT",7676,"RTN","XGKB1",37,0)=" ;;^N       ;14  ;14"
^XTMP("XPDT",7676,"RTN","XGKB1",38,0)=" ;;^O       ;15  ;15"
^XTMP("XPDT",7676,"RTN","XGKB1",39,0)=" ;;^P       ;16  ;16"
^XTMP("XPDT",7676,"RTN","XGKB1",40,0)=" ;;^Q       ;17  ;17"
^XTMP("XPDT",7676,"RTN","XGKB1",41,0)=" ;;^R       ;18  ;18"
^XTMP("XPDT",7676,"RTN","XGKB1",42,0)=" ;;^S       ;19  ;19"
^XTMP("XPDT",7676,"RTN","XGKB1",43,0)=" ;;^T       ;20  ;20"
^XTMP("XPDT",7676,"RTN","XGKB1",44,0)=" ;;^U       ;21  ;21"
^XTMP("XPDT",7676,"RTN","XGKB1",45,0)=" ;;^V       ;22  ;22"
^XTMP("XPDT",7676,"RTN","XGKB1",46,0)=" ;;^W       ;23  ;23"
^XTMP("XPDT",7676,"RTN","XGKB1",47,0)=" ;;^X       ;24  ;24"
^XTMP("XPDT",7676,"RTN","XGKB1",48,0)=" ;;^Y       ;25  ;25"
^XTMP("XPDT",7676,"RTN","XGKB1",49,0)=" ;;^Z       ;26  ;26"
^XTMP("XPDT",7676,"RTN","XGKB1",50,0)=" ;;^\       ;28  ;28"
^XTMP("XPDT",7676,"RTN","XGKB1",51,0)=" ;;^]       ;29  ;29"
^XTMP("XPDT",7676,"RTN","XGKB1",52,0)=" ;;^6       ;30  ;30"
^XTMP("XPDT",7676,"RTN","XGKB1",53,0)=" ;;^_       ;31  ;31"
^XTMP("XPDT",7676,"RTN","XGKB1",54,0)=" ;;KP0      ;0   ;27,79,112"
^XTMP("XPDT",7676,"RTN","XGKB1",55,0)=" ;;KP1      ;1   ;27,79,113"
^XTMP("XPDT",7676,"RTN","XGKB1",56,0)=" ;;KP2      ;2   ;27,79,114"
^XTMP("XPDT",7676,"RTN","XGKB1",57,0)=" ;;KP3      ;3   ;27,79,115"
^XTMP("XPDT",7676,"RTN","XGKB1",58,0)=" ;;KP4      ;4   ;27,79,116"
^XTMP("XPDT",7676,"RTN","XGKB1",59,0)=" ;;KP5      ;5   ;27,79,117"
^XTMP("XPDT",7676,"RTN","XGKB1",60,0)=" ;;KP6      ;6   ;27,79,118"
^XTMP("XPDT",7676,"RTN","XGKB1",61,0)=" ;;KP7      ;7   ;27,79,119"
^XTMP("XPDT",7676,"RTN","XGKB1",62,0)=" ;;KP8      ;8   ;27,79,120"
^XTMP("XPDT",7676,"RTN","XGKB1",63,0)=" ;;KP9      ;9   ;27,79,121"
^XTMP("XPDT",7676,"RTN","XGKB1",64,0)=" ;;UP       ;17  ;27,91,65"
^XTMP("XPDT",7676,"RTN","XGKB1",65,0)=" ;;DOWN     ;18  ;27,91,66"
^XTMP("XPDT",7676,"RTN","XGKB1",66,0)=" ;;RIGHT    ;19  ;27,91,67"
^XTMP("XPDT",7676,"RTN","XGKB1",67,0)=" ;;LEFT     ;20  ;27,91,68"
^XTMP("XPDT",7676,"RTN","XGKB1",68,0)=" ;;FIND     ;21  ;27,91,49,126"
^XTMP("XPDT",7676,"RTN","XGKB1",69,0)=" ;;INSERT   ;22  ;27,91,50,126"
^XTMP("XPDT",7676,"RTN","XGKB1",70,0)=" ;;REMOVE   ;23  ;27,91,51,126"
^XTMP("XPDT",7676,"RTN","XGKB1",71,0)=" ;;SELECT   ;24  ;27,91,52,126"
^XTMP("XPDT",7676,"RTN","XGKB1",72,0)=" ;;PREV     ;25  ;27,91,53,126"
^XTMP("XPDT",7676,"RTN","XGKB1",73,0)=" ;;NEXT     ;26  ;27,91,54,126"
^XTMP("XPDT",7676,"RTN","XGKB1",74,0)=" ;;KPENTER  ;29  ;27,79,77"
^XTMP("XPDT",7676,"RTN","XGKB1",75,0)=" ;;PF1      ;32  ;27,79,80"
^XTMP("XPDT",7676,"RTN","XGKB1",76,0)=" ;;PF2      ;33  ;27,79,81"
^XTMP("XPDT",7676,"RTN","XGKB1",77,0)=" ;;PF3      ;34  ;27,79,82"
^XTMP("XPDT",7676,"RTN","XGKB1",78,0)=" ;;PF4      ;35  ;27,79,83"
^XTMP("XPDT",7676,"RTN","XGKB1",79,0)=" ;;F6       ;37  ;27,91,49,55,126"
^XTMP("XPDT",7676,"RTN","XGKB1",80,0)=" ;;F7       ;38  ;27,91,49,56,126"
^XTMP("XPDT",7676,"RTN","XGKB1",81,0)=" ;;F8       ;39  ;27,91,49,57,126"
^XTMP("XPDT",7676,"RTN","XGKB1",82,0)=" ;;F9       ;40  ;27,91,50,48,126"
^XTMP("XPDT",7676,"RTN","XGKB1",83,0)=" ;;F10      ;41  ;27,91,50,49,126"
^XTMP("XPDT",7676,"RTN","XGKB1",84,0)=" ;;F11      ;43  ;27,91,50,51,126"
^XTMP("XPDT",7676,"RTN","XGKB1",85,0)=" ;;F12      ;44  ;27,91,50,52,126"
^XTMP("XPDT",7676,"RTN","XGKB1",86,0)=" ;;F13      ;45  ;27,91,50,53,126"
^XTMP("XPDT",7676,"RTN","XGKB1",87,0)=" ;;F14      ;46  ;27,91,50,54,126"
^XTMP("XPDT",7676,"RTN","XGKB1",88,0)=" ;;HELP     ;48  ;27,91,50,56,126"
^XTMP("XPDT",7676,"RTN","XGKB1",89,0)=" ;;DO       ;49  ;27,91,50,57,126"
^XTMP("XPDT",7676,"RTN","XGKB1",90,0)=" ;;F17      ;51  ;27,91,51,49,126"
^XTMP("XPDT",7676,"RTN","XGKB1",91,0)=" ;;F18      ;52  ;27,91,51,50,126"
^XTMP("XPDT",7676,"RTN","XGKB1",92,0)=" ;;F19      ;53  ;27,91,51,51,126"
^XTMP("XPDT",7676,"RTN","XGKB1",93,0)=" ;;F20      ;54  ;27,91,51,52,126"
^XTMP("XPDT",7676,"RTN","XGKB1",94,0)=" ;;KP-      ;60  ;27,79,109"
^XTMP("XPDT",7676,"RTN","XGKB1",95,0)=" ;;KP+      ;61  ;27,79,108"
^XTMP("XPDT",7676,"RTN","XGKB1",96,0)=" ;;KP.      ;62  ;27,79,110"
^XTMP("XPDT",7676,"RTN","XGKB1",97,0)=" ;;ZZZ"
^XTMP("XPDT",7676,"RTN","XQHLP")="0^5^B16208032^B16266682"
^XTMP("XPDT",7676,"RTN","XQHLP",1,0)="XQHLP ;SEA/MJM - Menu Helper  ;07/21/09  11:37"
^XTMP("XPDT",7676,"RTN","XQHLP",2,0)=" ;;8.0;KERNEL;**46,514**;Jul 10, 1995;Build 8"
^XTMP("XPDT",7676,"RTN","XQHLP",3,0)=" ;"
^XTMP("XPDT",7676,"RTN","XQHLP",4,0)="PAUSE R !!,""  **> Press 'RETURN' to continue, '^' to stop, or '?[option text]' for more"",!?25,""help: "",XQL:DTIME D:XQL?1""?""1AN.ANP HELP S XQL=$S(XQL[U:-1,1:XQLN) W @IOF Q"
^XTMP("XPDT",7676,"RTN","XQHLP",5,0)=" ;"
^XTMP("XPDT",7676,"RTN","XQHLP",6,0)="PAUSE1 R !!,""  **> Press 'RETURN' to continue, '^' to stop: "",XQL:DTIME S XQL=$S(XQL[U:-1,1:XQLN) W @IOF Q"
^XTMP("XPDT",7676,"RTN","XQHLP",7,0)=" ;"
^XTMP("XPDT",7676,"RTN","XQHLP",8,0)="SHOW  F  S XQX=$O(^XUTL(""XQO"",XQDIC,XQX)) Q:XQX=U!(XQL<0)!(XQX="""")  I $P(^(XQX),U,2) D"
^XTMP("XPDT",7676,"RTN","XQHLP",9,0)=" .S XQHY=^(XQX)"
^XTMP("XPDT",7676,"RTN","XQHLP",10,0)=" .D PRNT"
^XTMP("XPDT",7676,"RTN","XQHLP",11,0)=" .Q  ;G SHOW"
^XTMP("XPDT",7676,"RTN","XQHLP",12,0)=" Q"
^XTMP("XPDT",7676,"RTN","XQHLP",13,0)=" ;"
^XTMP("XPDT",7676,"RTN","XQHLP",14,0)="PRNT ;Print out the description of the option XQHY"
^XTMP("XPDT",7676,"RTN","XQHLP",15,0)=" I '$L($P(XQHY,U,2))!'$D(^DIC(19,+XQHY,0)) Q"
^XTMP("XPDT",7676,"RTN","XQHLP",16,0)=" I XQL<5 D PAUSE Q:XQL<0"
^XTMP("XPDT",7676,"RTN","XQHLP",17,0)=" S XQHY0=^XUTL(""XQO"",XQDIC,""^"",+XQHY) W !!,""'""_$P(XQHY0,U,3)_""'     Option name: "",$P(XQHY0,U,2) S XQL=XQL-2 S %=$P(XQHY0,U) I %]"""" W ""     Synonym: "",%"
^XTMP("XPDT",7676,"RTN","XQHLP",18,0)=" I '$D(XQHLP),$P(XQHY0,U,8)'="""" S %=$P($P(XQHY0,U,3),"" ""),%=$S($L(%)>3:%,1:$P($P(XQHY0,U,3),"" "",1,2)) W !,""  **> Extended help available.  Type "","""""""",""?""_%,"""""""","" to see it."" S XQL=XQL-1"
^XTMP("XPDT",7676,"RTN","XQHLP",19,0)=" F XQNXTOP=0:0 S XQNXTOP=$O(^DIC(19,+XQHY,1,XQNXTOP)) Q:XQNXTOP=""""  S XQA=^(XQNXTOP,0) W !?5,XQA S XQL=XQL-1 D PAUSE:'XQL"
^XTMP("XPDT",7676,"RTN","XQHLP",20,0)=" Q"
^XTMP("XPDT",7676,"RTN","XQHLP",21,0)=" ;"
^XTMP("XPDT",7676,"RTN","XQHLP",22,0)="HELP ;Display a help screen"
^XTMP("XPDT",7676,"RTN","XQHLP",23,0)=" N XQHY,XQX S XQHSV=XQY_U_XQDIC_U_XQY0,XQUR=$P(XQL,""?"",2) D DIC^XQ71"
^XTMP("XPDT",7676,"RTN","XQHLP",24,0)=" I XQY<0 W "" ??"",*7 S XQY=+XQHSV,XQDIC=$P(XQHSV,U,2),XQY0=$P(XQHSV,U,3,99) Q"
^XTMP("XPDT",7676,"RTN","XQHLP",25,0)=" S XQH=$P(XQY0,U,7) I '$L(XQH) W !!,""**> Sorry, no help text available for this option."" S XQY=+XQHSV,XQDIC=$P(XQHSV,U,2),XQY0=$P(XQHSV,U,3,99) Q"
^XTMP("XPDT",7676,"RTN","XQHLP",26,0)=" D EN^XQH S XQY=+XQHSV,XQDIC=$P(XQHSV,U,2),XQY0=$P(XQHSV,U,3,99),XQL=0"
^XTMP("XPDT",7676,"RTN","XQHLP",27,0)=" Q"
^XTMP("XPDT",7676,"RTN","XQHLP",28,0)=" ;"
^XTMP("XPDT",7676,"RTN","XQHLP",29,0)="EN ;Show descriptions from Option File Entry point from EN^XQ2"
^XTMP("XPDT",7676,"RTN","XQHLP",30,0)=" ;S XQHSV=XQY_U_XQDIC_U_XQY0"
^XTMP("XPDT",7676,"RTN","XQHLP",31,0)=" S XQX=0,(XQL,XQLN)=$S($D(IOSL):IOSL-2,1:22),XQSAV=XQDIC D:$S('($D(^XUTL(""XQO"",XQDIC,0))#2):1,'$D(^DIC(19,XQDIC,99)):1,1:^DIC(19,XQDIC,99)'=$P(^XUTL(""XQO"",XQDIC,0),U,2)) ^XQSET D SHOW W !! G:XQL<0 OUT"
^XTMP("XPDT",7676,"RTN","XQHLP",32,0)=" S DIR(0)=""Y"",DIR(""A"")=""  Shall I show you your secondary menus too"",DIR(""B"")=""No"" D ^DIR G:$D(DUOUT) OUT"
^XTMP("XPDT",7676,"RTN","XQHLP",33,0)=" I Y W @IOF S XQDIC=""U""_DUZ D:$S('($D(^XUTL(""XQO"",XQDIC,0))#2):1,'$D(^VA(200,DUZ,203.1)):1,1:^VA(200,DUZ,203.1)'=$P(^XUTL(""XQO"",XQDIC,0),U,2)) ^XQSET S XQL=XQLN,XQX=0 W ?25,""**> Your secondary options <**"",!! D SHOW W !!"
^XTMP("XPDT",7676,"RTN","XQHLP",34,0)=" G:XQL<0 OUT"
^XTMP("XPDT",7676,"RTN","XQHLP",35,0)=" S DIR(0)=""Y"",DIR(""A"")=""  Would you like to see the Common Options"",DIR(""B"")=""No"" D ^DIR G:$D(DUOUT) OUT"
^XTMP("XPDT",7676,"RTN","XQHLP",36,0)=" I Y W @IOF S XQL=XQLN,XQX=0,XQDIC=$O(^DIC(19,""B"",""XUCOMMAND"",0))"
^XTMP("XPDT",7676,"RTN","XQHLP",37,0)=" I Y D:$S('($D(^XUTL(""XQO"",XQDIC,0))#2):1,'$D(^DIC(19,XQDIC,99)):1,1:^DIC(19,XQDIC,99)'=$P(^XUTL(""XQO"",XQDIC,0),U,2)) ^XQSET W ?17,""**> The Common Options, options available to everyone <**"",!! D SHOW"
^XTMP("XPDT",7676,"RTN","XQHLP",38,0)=" ;"
^XTMP("XPDT",7676,"RTN","XQHLP",39,0)="OUT ;Exit here"
^XTMP("XPDT",7676,"RTN","XQHLP",40,0)=" W !!"
^XTMP("XPDT",7676,"RTN","XQHLP",41,0)=" ;S:$D(XQSAV) XQDIC=XQSAV"
^XTMP("XPDT",7676,"RTN","XQHLP",42,0)=" K DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XQA,XQHSV,XQHY,XQHY0,XQNXTOP,XQL,XQLN,XQN,XQSAV,XQX,Y"
^XTMP("XPDT",7676,"RTN","XQHLP",43,0)=" I $D(XQHLP) K XQHLP Q"
^XTMP("XPDT",7676,"RTN","XQHLP",44,0)=" G M2^XQ"
^XTMP("XPDT",7676,"RTN","XQHLP",45,0)=" ;"
^XTMP("XPDT",7676,"RTN","XQHLP",46,0)="OPT ;Respond to a user entering ""?Option_text"""
^XTMP("XPDT",7676,"RTN","XQHLP",47,0)=" ;Enter with XQUR from XQ.  Find option, show help, return to XQ"
^XTMP("XPDT",7676,"RTN","XQHLP",48,0)=" S XQHSV=XQY_U_XQDIC_U_XQY0"
^XTMP("XPDT",7676,"RTN","XQHLP",49,0)=" S (XQL,XQLN)=$S($D(IOSL):IOSL-2,1:22)"
^XTMP("XPDT",7676,"RTN","XQHLP",50,0)=" I XQUR[""?"" F  S XQUR=$P(XQUR,""?"",2) Q:XQUR'[""?"""
^XTMP("XPDT",7676,"RTN","XQHLP",51,0)=" S XQHLP="""" ;Set a flag so we know it isn't a jump"
^XTMP("XPDT",7676,"RTN","XQHLP",52,0)=" D S^XQ75"
^XTMP("XPDT",7676,"RTN","XQHLP",53,0)=" I XQY>0 D"
^XTMP("XPDT",7676,"RTN","XQHLP",54,0)=" .W @IOF W !!!"
^XTMP("XPDT",7676,"RTN","XQHLP",55,0)=" .S XQHY=XQY_U_XQY0"
^XTMP("XPDT",7676,"RTN","XQHLP",56,0)=" .D PRNT,PAUSE1"
^XTMP("XPDT",7676,"RTN","XQHLP",57,0)=" .I $P(XQY0,U,7)'="""" D"
^XTMP("XPDT",7676,"RTN","XQHLP",58,0)=" ..S XQH=$P(XQY0,U,7) D EN^XQH"
^XTMP("XPDT",7676,"RTN","XQHLP",59,0)=" ..Q"
^XTMP("XPDT",7676,"RTN","XQHLP",60,0)=" .Q"
^XTMP("XPDT",7676,"RTN","XQHLP",61,0)=" S (XQY,XQDIC)=$P(XQHSV,U),XQY0=$P(XQHSV,U,3,99)"
^XTMP("XPDT",7676,"RTN","XQHLP",62,0)=" G OUT"
^XTMP("XPDT",7676,"RTN","XQHLP",63,0)=" Q"
^XTMP("XPDT",7676,"RTN","XU8P514")="0^^B174474^n/a"
^XTMP("XPDT",7676,"RTN","XU8P514",1,0)="XU8P514 ;ISF/RWF - Patch XU*8*514 post-init ;07/29/09  14:54"
^XTMP("XPDT",7676,"RTN","XU8P514",2,0)=" ;;8.0;KERNEL;**514**;;Build 8"
^XTMP("XPDT",7676,"RTN","XU8P514",3,0)=" Q"
^XTMP("XPDT",7676,"RTN","XU8P514",4,0)=" ;"
^XTMP("XPDT",7676,"RTN","XU8P514",5,0)="POST ;See that node 3 just has 3 values to match the DD."
^XTMP("XPDT",7676,"RTN","XU8P514",6,0)=" N X"
^XTMP("XPDT",7676,"RTN","XU8P514",7,0)=" S X=$G(^XTV(8989.3,1,3))"
^XTMP("XPDT",7676,"RTN","XU8P514",8,0)=" I $L($P(X,U,4)),""01""'[$P(X,U,4) S $P(^XTV(8989.3,1,3),U,4,6)="""""
^XTMP("XPDT",7676,"RTN","XU8P514",9,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSER1")="0^6^B10316909^B7947642"
^XTMP("XPDT",7676,"RTN","XUSER1",1,0)="XUSER1 ;ISF/RWF - User file Utilities ;09/30/09  16:38"
^XTMP("XPDT",7676,"RTN","XUSER1",2,0)=" ;;8.0;KERNEL;**169,210,222,514**;Jul 10, 1995;Build 8"
^XTMP("XPDT",7676,"RTN","XUSER1",3,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSER1",4,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSER1",5,0)="PAGE() ;Do a page break; Return 0 if ok to continue, 1 if to abort"
^XTMP("XPDT",7676,"RTN","XUSER1",6,0)=" N DIR"
^XTMP("XPDT",7676,"RTN","XUSER1",7,0)=" S DIR(0)=""E"" D ^DIR:($E(IOST,1,2)[""C-"")"
^XTMP("XPDT",7676,"RTN","XUSER1",8,0)=" Q:$D(DIRUT) 1 W @IOF S ($X,$Y)=0"
^XTMP("XPDT",7676,"RTN","XUSER1",9,0)=" Q 0"
^XTMP("XPDT",7676,"RTN","XUSER1",10,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSER1",11,0)="GKEYS(IE,XUA) ;Get the keys held. IE=user"
^XTMP("XPDT",7676,"RTN","XUSER1",12,0)=" N %,V,XUB"
^XTMP("XPDT",7676,"RTN","XUSER1",13,0)=" S %=0 ;Sort list alphabetical"
^XTMP("XPDT",7676,"RTN","XUSER1",14,0)=" F  S %=$O(^VA(200,IE,51,%)) Q:(%'>0)  S V=$P($G(^DIC(19.1,%,0)),U,1) I $L(V) S XUB(V)="""""
^XTMP("XPDT",7676,"RTN","XUSER1",15,0)=" S V="""" ;return to user"
^XTMP("XPDT",7676,"RTN","XUSER1",16,0)=" F %=1:1 S V=$O(XUB(V)) Q:'$L(V)  S XUA(%)=V"
^XTMP("XPDT",7676,"RTN","XUSER1",17,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSER1",18,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSER1",19,0)="SHLIST(ARRAY,LM,SP) ; Show a list, Array=list, LM=Left Margin, SP=spacing"
^XTMP("XPDT",7676,"RTN","XUSER1",20,0)=" ;Set DN=0 to get FM22 to stop the print"
^XTMP("XPDT",7676,"RTN","XUSER1",21,0)=" N %,Y2,Y4,Y5,Y6,DIR"
^XTMP("XPDT",7676,"RTN","XUSER1",22,0)=" I $Y+4>IOSL,$$PAGE S DN=0 Q"
^XTMP("XPDT",7676,"RTN","XUSER1",23,0)=" S Y4=-1,%=0,Y2=IOM-LM\SP,Y5=0"
^XTMP("XPDT",7676,"RTN","XUSER1",24,0)=" F  S %=$O(ARRAY(%)),Y4=Y4+1 Q:(%'>0)!$D(DIRUT)  S Y6=$G(ARRAY(%)) D:$L(Y6)"
^XTMP("XPDT",7676,"RTN","XUSER1",25,0)=" . S:Y4'<SP Y4=0 S Y5=(Y4*Y2+LM)"
^XTMP("XPDT",7676,"RTN","XUSER1",26,0)=" . I $X>0,Y5+$L(Y6)'<IOM S Y4=0,Y5=(Y4*Y2+LM)"
^XTMP("XPDT",7676,"RTN","XUSER1",27,0)=" . I 'Y4 W ! I $Y+3>IOSL S Y4=0,Y5=(Y4*Y2+LM) I $$PAGE S DN=0 Q"
^XTMP("XPDT",7676,"RTN","XUSER1",28,0)=" . W ?Y5,Y6 S:(($X+1)>(Y5+Y2)) Y4=Y4+1"
^XTMP("XPDT",7676,"RTN","XUSER1",29,0)=" . Q"
^XTMP("XPDT",7676,"RTN","XUSER1",30,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSER1",31,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSER1",32,0)="SHPC(IE) ;Show the Person Class"
^XTMP("XPDT",7676,"RTN","XUSER1",33,0)=" N %,Y S:'$D(DT) DT=$$DT^XLFDT"
^XTMP("XPDT",7676,"RTN","XUSER1",34,0)=" S %=$X,Y=$$GET^XUA4A72(IE,DT)"
^XTMP("XPDT",7676,"RTN","XUSER1",35,0)=" I $L(Y) W $P(Y,U,2) I $L($P(Y,U,3)) W !,?(%+2),$P(Y,U,3) I $L($P(Y,U,4)) W !,?(%+4),$P(Y,U,4)"
^XTMP("XPDT",7676,"RTN","XUSER1",36,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSER1",37,0)="GMG(IE,XUA) ;Get mail groups"
^XTMP("XPDT",7676,"RTN","XUSER1",38,0)=" N %,Y,XUI,Y4,Y2,XUK"
^XTMP("XPDT",7676,"RTN","XUSER1",39,0)=" S %=0"
^XTMP("XPDT",7676,"RTN","XUSER1",40,0)=" F  S %=$O(^XMB(3.8,""AB"",IE,%)) Q:%'>0  S XUA(%)=$P($G(^XMB(3.8,%,0)),U,1)"
^XTMP("XPDT",7676,"RTN","XUSER1",41,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSER1",42,0)="GPARAM(IE,PRAM,XUA) ;Get an entry from the Parameter tool"
^XTMP("XPDT",7676,"RTN","XUSER1",43,0)=" ;IE is the user to get the list for. PARAM what parameter, XUA return array."
^XTMP("XPDT",7676,"RTN","XUSER1",44,0)=" N XUENT,XUX,XUERR,XU1"
^XTMP("XPDT",7676,"RTN","XUSER1",45,0)=" S XUENT=IE_"";VA(200,""_$S($G(^VA(200,IE,5)):""^SRV.`""_+$G(^(5)),1:""""),XUA="""""
^XTMP("XPDT",7676,"RTN","XUSER1",46,0)=" D GETLST^XPAR(.XUX,XUENT,PRAM,""E"",.XUERR)"
^XTMP("XPDT",7676,"RTN","XUSER1",47,0)=" Q:XUX'>0"
^XTMP("XPDT",7676,"RTN","XUSER1",48,0)=" S XUA(.5)=PRAM_"":"""
^XTMP("XPDT",7676,"RTN","XUSER1",49,0)=" F %=1:1:XUX S XUA(%)=$P(XUX(%),U,2)"
^XTMP("XPDT",7676,"RTN","XUSER1",50,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSER1",51,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSER1",52,0)="DIVCHG ;Allow user to change Division [DUZ(2)] value"
^XTMP("XPDT",7676,"RTN","XUSER1",53,0)=" ;Called from option: XUSER DIV CHG"
^XTMP("XPDT",7676,"RTN","XUSER1",54,0)=" N Y,X,DIC,I,CD"
^XTMP("XPDT",7676,"RTN","XUSER1",55,0)=" I '$D(^VA(200,+$G(DUZ),0))#2 W !,""You are not a valid user."",!!,$C(7) Q"
^XTMP("XPDT",7676,"RTN","XUSER1",56,0)=" I $G(DUZ(2))="""" D  ;Should not happen"
^XTMP("XPDT",7676,"RTN","XUSER1",57,0)=" . N XOPT D XOPT^XUS1A S DUZ(2)=$P(XOPT,U,17)"
^XTMP("XPDT",7676,"RTN","XUSER1",58,0)=" S CD=$$NS^XUAF4(DUZ(2))"
^XTMP("XPDT",7676,"RTN","XUSER1",59,0)=" W !,""Your current Division is "",$P(CD,U)_""  ""_$P(CD,U,2)"
^XTMP("XPDT",7676,"RTN","XUSER1",60,0)=" S X=+$O(^VA(200,DUZ,2,0)),Y=+$O(^(X))"
^XTMP("XPDT",7676,"RTN","XUSER1",61,0)=" I 'Y W !,""You do not have any choices. "",!,"" Change is not possible."",!! Q"
^XTMP("XPDT",7676,"RTN","XUSER1",62,0)=" K DIC S DIC=""^VA(200,DUZ,2,"",DIC(0)=""AEMNQ"""
^XTMP("XPDT",7676,"RTN","XUSER1",63,0)=" S DIC(""S"")=""I $G(^DIC(4,+Y,99))"""
^XTMP("XPDT",7676,"RTN","XUSER1",64,0)=" ;Check if user has a default"
^XTMP("XPDT",7676,"RTN","XUSER1",65,0)=" S X=$O(^VA(200,DUZ,2,""AX1"",1,0)) S:X>0 DIC(""B"")=$P($$NS^XUAF4(X),U)"
^XTMP("XPDT",7676,"RTN","XUSER1",66,0)=" D ^DIC K DIC"
^XTMP("XPDT",7676,"RTN","XUSER1",67,0)=" I Y'>0 D  Q"
^XTMP("XPDT",7676,"RTN","XUSER1",68,0)=" .W !,$C(7),""Division Unchanged - Currently you are assigned to """
^XTMP("XPDT",7676,"RTN","XUSER1",69,0)=" .W $P(CD,U)_""  ""_$P(CD,U,2),!"
^XTMP("XPDT",7676,"RTN","XUSER1",70,0)=" S DUZ(2)=+Y,CD=$$NS^XUAF4(DUZ(2))"
^XTMP("XPDT",7676,"RTN","XUSER1",71,0)=" W !?5,""Division is now set to [ "",$P(CD,U)_""  ""_$P(CD,U,2),"" ]"",!"
^XTMP("XPDT",7676,"RTN","XUSER1",72,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSER1",73,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSER1",74,0)="NETNM(NM,IEN) ;Check NetName, Called from input transform for field 501.1 NPF."
^XTMP("XPDT",7676,"RTN","XUSER1",75,0)=" ;Return 1 to abort, 0 to allow"
^XTMP("XPDT",7676,"RTN","XUSER1",76,0)=" N NPF,OV"
^XTMP("XPDT",7676,"RTN","XUSER1",77,0)=" S NPF(0)=$P($G(^VA(200,IEN,0)),U,1),OV=0"
^XTMP("XPDT",7676,"RTN","XUSER1",78,0)=" I $E(NM,1,3)'=""VHA"" D EN^DDIOL(""WARNING: Prefix not VHA."","""") S OV=1"
^XTMP("XPDT",7676,"RTN","XUSER1",79,0)=" S NPF(1)=$E($P(NPF(0),"",""),1,5)_$E($P(NPF(0),"","",2),1)"
^XTMP("XPDT",7676,"RTN","XUSER1",80,0)=" I $E(NM,7,6+$L(NPF(1)))'=NPF(1) D EN^DDIOL(""WARNING: Missing ""_NPF(1)_"" from username."","""") S OV=1"
^XTMP("XPDT",7676,"RTN","XUSER1",81,0)=" I OV S OV='((DUZ(0)[""@"")!$D(^XUSEC(""XUMGR"",DUZ)))"
^XTMP("XPDT",7676,"RTN","XUSER1",82,0)=" Q OV"
^XTMP("XPDT",7676,"RTN","XUSER1",83,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTERM1")="0^3^B25005360^B24052516"
^XTMP("XPDT",7676,"RTN","XUSTERM1",1,0)="XUSTERM1 ;SEA/WDE - DEACTIVATE USER ;06/08/09  15:06"
^XTMP("XPDT",7676,"RTN","XUSTERM1",2,0)=" ;;8.0;KERNEL;**102,180,208,222,274,313,332,360,384,436,514**;Jul 10, 1995;Build 8"
^XTMP("XPDT",7676,"RTN","XUSTERM1",3,0)="ENALL ;Interactive scan all"
^XTMP("XPDT",7676,"RTN","XUSTERM1",4,0)=" S U=""^"",DTIME=$G(DTIME,60)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",5,0)=" W !!,""This option can purge all access & verify codes, mail baskets, messages,"",!,""authorized senders access, keys, and electronic signature codes of users who have been terminated."""
^XTMP("XPDT",7676,"RTN","XUSTERM1",6,0)="RD1 W !!,""Do you wish to proceed """
^XTMP("XPDT",7676,"RTN","XUSTERM1",7,0)=" S %=2 D YN^DICN G:%=2!(%=-1) END I %=0 S XQH=""XUUSER-PURGEATT"" D EN^XQH G RD1"
^XTMP("XPDT",7676,"RTN","XUSTERM1",8,0)="RD2 W !,""Do you wish to verify each user """
^XTMP("XPDT",7676,"RTN","XUSTERM1",9,0)=" S %=2,XUVE=0 D YN^DICN S:%=1 XUVE=1 G:%=1 CHECK G:%=-1 END I %=0 S XQH=""XUUSER-PURGEATT-VER"" D EN^XQH G RD2"
^XTMP("XPDT",7676,"RTN","XUSTERM1",10,0)="QUE W !,""Do you wish to have this queued for a later time """
^XTMP("XPDT",7676,"RTN","XUSTERM1",11,0)=" S %=1 D YN^DICN I %=1 D  Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",12,0)=" . S ZTDESC=""USER DEACTIVATION"",ZTRTN=""CHECK^XUSTERM1"",ZTIO="""",ZTSAVE(""DUZ*"")="""""
^XTMP("XPDT",7676,"RTN","XUSTERM1",13,0)=" . D ^%ZTLOAD"
^XTMP("XPDT",7676,"RTN","XUSTERM1",14,0)=" . Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",15,0)=" I %=0 K X,XUVE Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",16,0)=" ;Fall thru if user doesn't queue"
^XTMP("XPDT",7676,"RTN","XUSTERM1",17,0)="CHECK ;Entry point for taskman."
^XTMP("XPDT",7676,"RTN","XUSTERM1",18,0)=" N XUDT540,XUDT90,XUDT30,FDA,XUDT,XUAAW"
^XTMP("XPDT",7676,"RTN","XUSTERM1",19,0)=" S U=""^"",DT=$$DT^XLFDT(),XUDT90=$$HTFM^XLFDT($H-90,1),XUDT30=$$HTFM^XLFDT($H-30,1)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",20,0)=" S XUAAW=+$P($G(^XTV(8989.3,1,3)),U,4) ;Academic Waiver"
^XTMP("XPDT",7676,"RTN","XUSTERM1",21,0)=" S XUDT540=$$HTFM^XLFDT($H-540,1) ;*p332"
^XTMP("XPDT",7676,"RTN","XUSTERM1",22,0)=" S XUDA=.6,XUVE=$G(XUVE,0)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",23,0)=" F  S XUDA=$O(^VA(200,XUDA)) Q:XUDA'>0  S XUJ=$G(^(XUDA,0)) D"
^XTMP("XPDT",7676,"RTN","XUSTERM1",24,0)=" . S XUDT=$P(XUJ,U,11)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",25,0)=" . I $P(XUJ,U,3)]"""",$L(XUDT),(XUDT'>DT) D"
^XTMP("XPDT",7676,"RTN","XUSTERM1",26,0)=" . . D GET"
^XTMP("XPDT",7676,"RTN","XUSTERM1",27,0)=" . . I 'XUEMP K Y D:XUVE DISP Q:$D(Y)  D ACT ;XUEMP=any data to remove"
^XTMP("XPDT",7676,"RTN","XUSTERM1",28,0)=" . . Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",29,0)=" . I $P(XUJ,U,3)]"""",'$P(XUJ,U,8),$$NOSIGNON D DISUSER(XUDA)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",30,0)=" . I $P(XUJ,U,7) D AUSER(XUDA) ;*p332"
^XTMP("XPDT",7676,"RTN","XUSTERM1",31,0)=" . Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",32,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTERM1",33,0)="END K XUEMP,XUDA,XUI,XUJ,XUK,XUACT,XUKEY,XUGRP,XUSUR,XUNAM,XUF,XUDT,XUIN,XUVE,X,DIC,XUDB,XUDC,XUDP"
^XTMP("XPDT",7676,"RTN","XUSTERM1",34,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",35,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTERM1",36,0)="DISUSER(XUDA) ;Set DISUSER flag and reason, Remove last menu option"
^XTMP("XPDT",7676,"RTN","XUSTERM1",37,0)=" Q:$P(XUJ,U,7)  ;DISUSER already set *p332"
^XTMP("XPDT",7676,"RTN","XUSTERM1",38,0)=" N %,FDA S %=XUDA_"","""
^XTMP("XPDT",7676,"RTN","XUSTERM1",39,0)=" S FDA(200,%,7)=1,FDA(200,%,9.4)=""User Inactive for too long"""
^XTMP("XPDT",7676,"RTN","XUSTERM1",40,0)=" D FILE^DIE("""",""FDA""),CONTCL(XUDA) ;Set Disuser"
^XTMP("XPDT",7676,"RTN","XUSTERM1",41,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",42,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTERM1",43,0)="AUSER(XUDA) ;If DISUSERed and Last Sign > 540[18Mo.*30] days, then remove""AUSER"" xref"
^XTMP("XPDT",7676,"RTN","XUSTERM1",44,0)=" I $D(^XUSEC(""XUORES"",XUDA)) Q  ;Owner of XUORES key ;p*436"
^XTMP("XPDT",7676,"RTN","XUSTERM1",45,0)=" N Q S Q=$P($G(^VA(200,XUDA,1.1)),U) ;Get last sign-on"
^XTMP("XPDT",7676,"RTN","XUSTERM1",46,0)=" I $L(Q),Q<XUDT540 K ^VA(200,""AUSER"",$P(XUJ,U),XUDA) ;*p360;*p384"
^XTMP("XPDT",7676,"RTN","XUSTERM1",47,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",48,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTERM1",49,0)=" ;If site has an Academic Affiliation Waiver the last sign-on moves to 90 days from 30."
^XTMP("XPDT",7676,"RTN","XUSTERM1",50,0)="NOSIGNON() ;Check last signon. Return 1 if should disable account"
^XTMP("XPDT",7676,"RTN","XUSTERM1",51,0)=" N Q S Q=$P($G(^VA(200,XUDA,1.1)),U) ;Get last sign-on"
^XTMP("XPDT",7676,"RTN","XUSTERM1",52,0)=" I $L(Q),Q>$S('XUAAW:XUDT30,1:XUDT90) Q 0 ;Last sign-on within 30/90 days VA Handbook 6500 ;p514"
^XTMP("XPDT",7676,"RTN","XUSTERM1",53,0)=" S Q=$P($G(^VA(200,XUDA,1.1)),U,4) ;Get last Edit date"
^XTMP("XPDT",7676,"RTN","XUSTERM1",54,0)=" I $L(Q),Q>XUDT30 Q 0 ;User edited in last 30 days"
^XTMP("XPDT",7676,"RTN","XUSTERM1",55,0)=" S Q=$P($G(^VA(200,XUDA,1)),U,7) ;Create Date"
^XTMP("XPDT",7676,"RTN","XUSTERM1",56,0)=" I $L(Q),Q>XUDT30 Q 0 ;User set up in last 30 days"
^XTMP("XPDT",7676,"RTN","XUSTERM1",57,0)=" S Q=$P($G(^VA(200,XUDA,.1)),U) ;Get verify code change date"
^XTMP("XPDT",7676,"RTN","XUSTERM1",58,0)=" I $L(Q),(Q+30)>$H Q 0 ;Verify code changed in last 30 days"
^XTMP("XPDT",7676,"RTN","XUSTERM1",59,0)=" Q 1"
^XTMP("XPDT",7676,"RTN","XUSTERM1",60,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTERM1",61,0)="CONTCL(XUDA) ;Clear the fields for Menu ""Continue"""
^XTMP("XPDT",7676,"RTN","XUSTERM1",62,0)=" N FDA"
^XTMP("XPDT",7676,"RTN","XUSTERM1",63,0)=" S FDA(200,XUDA_"","",202.1)=""@"",FDA(200,XUDA_"","",202.2)=""@"""
^XTMP("XPDT",7676,"RTN","XUSTERM1",64,0)=" D FILE^DIE("""",""FDA"") ;Clear 202.1 and 202.2"
^XTMP("XPDT",7676,"RTN","XUSTERM1",65,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",66,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTERM1",67,0)="ACT ;"
^XTMP("XPDT",7676,"RTN","XUSTERM1",68,0)=" D ACT^XUSTERM"
^XTMP("XPDT",7676,"RTN","XUSTERM1",69,0)=" S XUJ=^VA(200,XUDA,0) ;Get new copy of zero node"
^XTMP("XPDT",7676,"RTN","XUSTERM1",70,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",71,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTERM1",72,0)="GET ;Kill ^DISV entries each time, should get all CPUs at some point"
^XTMP("XPDT",7676,"RTN","XUSTERM1",73,0)=" N XUJ"
^XTMP("XPDT",7676,"RTN","XUSTERM1",74,0)=" D GET^XUSTERM K ^DISV(XUDA),Y"
^XTMP("XPDT",7676,"RTN","XUSTERM1",75,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",76,0)="DISP ;Display info and get responses."
^XTMP("XPDT",7676,"RTN","XUSTERM1",77,0)=" N DA,DIE,DR,XUJ"
^XTMP("XPDT",7676,"RTN","XUSTERM1",78,0)=" S DA=XUDA"
^XTMP("XPDT",7676,"RTN","XUSTERM1",79,0)=" L +^VA(200,DA,0):6 D DISP2 L -^VA(200,DA,0)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",80,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",81,0)="DISP2 ;Do the work."
^XTMP("XPDT",7676,"RTN","XUSTERM1",82,0)=" W !!,$S(XUTX1(1)[""User"":XUNAM_$P(XUTX1(1),""User"",2),1:XUTX1(1)) ;*p360"
^XTMP("XPDT",7676,"RTN","XUSTERM1",83,0)=" S DR=""9.21//YES"",DIE=200 D ^DIE Q:$D(Y)  G:'$D(XUSUR) KEYS"
^XTMP("XPDT",7676,"RTN","XUSTERM1",84,0)=" W !!,XUNAM,"" acts as surrogate for the following users:"""
^XTMP("XPDT",7676,"RTN","XUSTERM1",85,0)=" S XUJ=0,XUI=3 F XUK=0:1 S XUJ=$O(XUSUR(XUJ)) Q:XUJ'>0  W:'(XUK#XUI) ! W ?(XUK#XUI*26),$P(^VA(200,XUJ,0),U,1) W !,""These surrogate privileges will be deleted on deactivation."""
^XTMP("XPDT",7676,"RTN","XUSTERM1",86,0)="KEYS ;This section checks for authorized senders of mail groups and security keys."
^XTMP("XPDT",7676,"RTN","XUSTERM1",87,0)=" W !,""User will no longer be an authorized sender to any mail groups."""
^XTMP("XPDT",7676,"RTN","XUSTERM1",88,0)=" I '$D(XUKEY) W !!,XUNAM,"" currently holds no keys."" G KEYS1"
^XTMP("XPDT",7676,"RTN","XUSTERM1",89,0)=" W !!,XUNAM,"" holds the following keys: """
^XTMP("XPDT",7676,"RTN","XUSTERM1",90,0)=" S XUJ=0,XUI=5 F XUK=0:1 S XUJ=$O(XUKEY(XUJ)) Q:XUJ'>0  W:'(XUK#XUI) ! W ?(XUK#XUI*15),$P($G(^DIC(19.1,XUJ,0)),U,1)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",91,0)="KEYS1 W ! S DR=""9.22//YES"" D ^DIE Q:$D(Y)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",92,0)="GROUP I '$D(XUGRP) W !!,XUNAM,"" currently is not a member of any MAIL GROUP."" G GROUP1"
^XTMP("XPDT",7676,"RTN","XUSTERM1",93,0)=" W !!,XUNAM,"" is a member of the following Mail Groups:"""
^XTMP("XPDT",7676,"RTN","XUSTERM1",94,0)=" S XUI="""" F XUI=0:0 S XUI=$O(XUGRP(XUI)) Q:XUI'>0  D"
^XTMP("XPDT",7676,"RTN","XUSTERM1",95,0)=" . S XUJ=XUGRP(XUI)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",96,0)=" . I $P(XUJ,U,2)=""PU""!$D(^XMB(3.8,""AB"",XUDA,XUI)) W !?2,$P(XUJ,U,1) W:$P(XUJ,U,3) "" (Organizer)"" W ?40,$S(($P(XUJ,U,2)=""PR""):""(Private)"",1:""(Public)"")"
^XTMP("XPDT",7676,"RTN","XUSTERM1",97,0)=" . Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",98,0)="GROUP1 W ! S DR=""9.23//YES"" D ^DIE Q:$D(Y)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",99,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",100,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTERM1",101,0)="DQ1 ;Terminate one person."
^XTMP("XPDT",7676,"RTN","XUSTERM1",102,0)=" N XUJ,XUDT,XUVE"
^XTMP("XPDT",7676,"RTN","XUSTERM1",103,0)=" S XUJ=$G(^VA(200,XUDA,0)),XUDT=$P(XUJ,U,11) I XUDT,(XUDT'>DT) D"
^XTMP("XPDT",7676,"RTN","XUSTERM1",104,0)=" . S XUVE=0 D GET I 'XUEMP D ACT"
^XTMP("XPDT",7676,"RTN","XUSTERM1",105,0)=" . Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",106,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTERM1",107,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTERM1",108,0)="SEND ; send deactivated message to assigned mail group"
^XTMP("XPDT",7676,"RTN","XUSTERM1",109,0)=" K XMB,XMY"
^XTMP("XPDT",7676,"RTN","XUSTERM1",110,0)=" S XMB(1)=$P(XUJ,""^"",1)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",111,0)=" S XMB(2)=$$GET1^DIQ(200,XUDA,8)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",112,0)=" S XMB(3)=$$GET1^DIQ(200,XUDA,29)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",113,0)=" S XMB(4)=$$FMTE^XLFDT(XUDT)"
^XTMP("XPDT",7676,"RTN","XUSTERM1",114,0)=" S XMB=""XUSERDEAC"" D ^XMB:$D(^XMB(3.6,""B"",XMB))"
^XTMP("XPDT",7676,"RTN","XUSTERM1",115,0)=" K XMB"
^XTMP("XPDT",7676,"RTN","XUSTERM1",116,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTZ")="0^1^B8373786^B8122743"
^XTMP("XPDT",7676,"RTN","XUSTZ",1,0)="XUSTZ ;SF/RWF - Security Twilight Zone ;11/25/08  15:21"
^XTMP("XPDT",7676,"RTN","XUSTZ",2,0)=" ;;8.0;KERNEL;**36,180,265,514**;Jul 10, 1995;Build 8"
^XTMP("XPDT",7676,"RTN","XUSTZ",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7676,"RTN","XUSTZ",4,0)=" ;Called from XUS3 for R/S"
^XTMP("XPDT",7676,"RTN","XUSTZ",5,0)=" N XUSTZ,DUOUT,SETLK,TMOUT"
^XTMP("XPDT",7676,"RTN","XUSTZ",6,0)=" ;Only send the bulletin once."
^XTMP("XPDT",7676,"RTN","XUSTZ",7,0)=" I '$D(XUSTZ) S XUSTZ=1 D SB"
^XTMP("XPDT",7676,"RTN","XUSTZ",8,0)=" ;Set the lockout time"
^XTMP("XPDT",7676,"RTN","XUSTZ",9,0)=" S TMOUT=$$LKTME"
^XTMP("XPDT",7676,"RTN","XUSTZ",10,0)=" ;Check and Lock"
^XTMP("XPDT",7676,"RTN","XUSTZ",11,0)=" W !!,?10,$$RA"
^XTMP("XPDT",7676,"RTN","XUSTZ",12,0)=" ;If because device is locked only lock till ""Lock till time"""
^XTMP("XPDT",7676,"RTN","XUSTZ",13,0)=" I $$LKCHECK^XUSTZIP() S TMOUT=$$LKWAIT^XUSTZIP(TMOUT)"
^XTMP("XPDT",7676,"RTN","XUSTZ",14,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTZ",15,0)=" ;Make user wait for timeout."
^XTMP("XPDT",7676,"RTN","XUSTZ",16,0)=" F  D ASK Q:$D(DUOUT)"
^XTMP("XPDT",7676,"RTN","XUSTZ",17,0)=" D CLEAN^XUSTZIP"
^XTMP("XPDT",7676,"RTN","XUSTZ",18,0)=" I XUF D FILE"
^XTMP("XPDT",7676,"RTN","XUSTZ",19,0)=" W !!,$$EZBLD^DIALOG(30810.41)"
^XTMP("XPDT",7676,"RTN","XUSTZ",20,0)=" K ^DISV(""XU"",IOS)"
^XTMP("XPDT",7676,"RTN","XUSTZ",21,0)=" Q  ;Back to XUS3"
^XTMP("XPDT",7676,"RTN","XUSTZ",22,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTZ",23,0)="RA(IP) ;EF. Entry point for Remote Access (Broker/Vistalink) and R/S"
^XTMP("XPDT",7676,"RTN","XUSTZ",24,0)=" ;This is used to Lock the User or IP.  Returns Text."
^XTMP("XPDT",7676,"RTN","XUSTZ",25,0)=" N TXT,TMOUT"
^XTMP("XPDT",7676,"RTN","XUSTZ",26,0)=" S TXT="""",TMOUT=$$LKTME,IP=$$IP^XUSTZIP,XUFAC=+$G(XUFAC)"
^XTMP("XPDT",7676,"RTN","XUSTZ",27,0)=" D FILE ;File in FAA, Do now before user can disconnect"
^XTMP("XPDT",7676,"RTN","XUSTZ",28,0)=" D CLEAN^XUSTZIP"
^XTMP("XPDT",7676,"RTN","XUSTZ",29,0)=" ;Check if Lock the user"
^XTMP("XPDT",7676,"RTN","XUSTZ",30,0)=" I $G(XUF(.3))>0,$$LKUSER(XUF(.3)) S TXT=$$EZBLD^DIALOG(30810.43,TMOUT)"
^XTMP("XPDT",7676,"RTN","XUSTZ",31,0)=" ;Check and LOCK the IP."
^XTMP("XPDT",7676,"RTN","XUSTZ",32,0)=" I '$T,$$IPCHECK^XUSTZIP(IP) D"
^XTMP("XPDT",7676,"RTN","XUSTZ",33,0)=" . S SETLK=$$LKSET^XUSTZIP(IP)"
^XTMP("XPDT",7676,"RTN","XUSTZ",34,0)=" . I SETLK>0 S TXT=$$EZBLD^DIALOG(30810.44)"
^XTMP("XPDT",7676,"RTN","XUSTZ",35,0)=" . Q"
^XTMP("XPDT",7676,"RTN","XUSTZ",36,0)=" Q TXT"
^XTMP("XPDT",7676,"RTN","XUSTZ",37,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTZ",38,0)="ASK N XUM"
^XTMP("XPDT",7676,"RTN","XUSTZ",39,0)=" W !!!,$$EZBLD^DIALOG(30810.42)"
^XTMP("XPDT",7676,"RTN","XUSTZ",40,0)=" X XUEOFF S %="""",XUM=4,XUEXIT=0,XUC="""",TMOUT=$S(TMOUT>10:TMOUT,1:10)"
^XTMP("XPDT",7676,"RTN","XUSTZ",41,0)="A1 ;Let user keep trying"
^XTMP("XPDT",7676,"RTN","XUSTZ",42,0)=" W !,XUSTMP(51) S X=$$ACCEPT^XUS(TMOUT) ;Access"
^XTMP("XPDT",7676,"RTN","XUSTZ",43,0)=" Q:$D(DUOUT)  G A1:X="""" ;,OK:'$D(^DISV(""XU"",IOS)),A1:X="""""
^XTMP("XPDT",7676,"RTN","XUSTZ",44,0)=" I X[U W ""  '^' not allowed in Access Code, Use EDIT USER option."" Q"
^XTMP("XPDT",7676,"RTN","XUSTZ",45,0)=" S:X["";"" %=$P(X,"";"",2),X=$P(X,"";"") I XUF S %1=""Access: ""_X D FAC"
^XTMP("XPDT",7676,"RTN","XUSTZ",46,0)=" HANG 2"
^XTMP("XPDT",7676,"RTN","XUSTZ",47,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTZ",48,0)=" S %1="""" I %="""" W !,XUSTMP(52) S X=$$ACCEPT^XUS(60),%="""" ;Verify"
^XTMP("XPDT",7676,"RTN","XUSTZ",49,0)=" I XUF S %1=""Verify: ""_X D FAC"
^XTMP("XPDT",7676,"RTN","XUSTZ",50,0)=" HANG 2"
^XTMP("XPDT",7676,"RTN","XUSTZ",51,0)=" I XUF,XUF(.2)>50 D FILE S XUF(.2)=0,XUFAC=0"
^XTMP("XPDT",7676,"RTN","XUSTZ",52,0)=" ;I XUF,XUF(.2)>2 D FILE S XUF(.2)=0,XUFAC=0 ;used for testing"
^XTMP("XPDT",7676,"RTN","XUSTZ",53,0)=" S XUFAC=XUFAC+1,%=$$NO^XUS3"
^XTMP("XPDT",7676,"RTN","XUSTZ",54,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTZ",55,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTZ",56,0)="FAC G FAC^XUS"
^XTMP("XPDT",7676,"RTN","XUSTZ",57,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTZ",58,0)="FILE ;File data into Access Atempt Log"
^XTMP("XPDT",7676,"RTN","XUSTZ",59,0)=" ;Call needs, IOS,XUVOL,XUF(.1),(.2),(.3),XUT,XUCI,IO(""ZIO""),XUNOW"
^XTMP("XPDT",7676,"RTN","XUSTZ",60,0)=" ;Want to use IO(""IP"") in place of IO(""ZIO"") if we have it."
^XTMP("XPDT",7676,"RTN","XUSTZ",61,0)=" Q:'$G(XUF)"
^XTMP("XPDT",7676,"RTN","XUSTZ",62,0)=" N XUT,ZIO S ZIO=$G(IO(""ZIO"")) S:$D(IO(""IP"")) IO(""ZIO"")=IO(""IP"")"
^XTMP("XPDT",7676,"RTN","XUSTZ",63,0)=" S X1=IOS,X2=DT F I=1:1:XUF(.2) S X=XUF(I) D EN^XUSHSHP S XUF(I)=X"
^XTMP("XPDT",7676,"RTN","XUSTZ",64,0)=" S XUT=XUFAC"
^XTMP("XPDT",7676,"RTN","XUSTZ",65,0)=" ;S XUSLNT=1,XQZ=""FAAL^ZUA[MGR]"" D DO^%XUCI"
^XTMP("XPDT",7676,"RTN","XUSTZ",66,0)=" D FAAL^ZUA"
^XTMP("XPDT",7676,"RTN","XUSTZ",67,0)=" F I=1:1:XUF(.2) K XUF(I)"
^XTMP("XPDT",7676,"RTN","XUSTZ",68,0)=" S XUF(.2)=0,XUFAC=0 S:$L(ZIO) IO(""ZIO"")=ZIO"
^XTMP("XPDT",7676,"RTN","XUSTZ",69,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTZ",70,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTZ",71,0)="SB ;Send the XUSLOCK bulletin"
^XTMP("XPDT",7676,"RTN","XUSTZ",72,0)=" S XMB=""XUSLOCK"",XMB(1)=$S($D(IO(""IP"")):IO(""IP""),$D(IO(""ZIO"")):IO(""ZIO""),1:$I),XMB(2)=+XUFAC,XMB(3)=ION"
^XTMP("XPDT",7676,"RTN","XUSTZ",73,0)=" D ^XMB"
^XTMP("XPDT",7676,"RTN","XUSTZ",74,0)=" Q"
^XTMP("XPDT",7676,"RTN","XUSTZ",75,0)="LKTME() ;Get Lock-out time"
^XTMP("XPDT",7676,"RTN","XUSTZ",76,0)=" I $D(XOPT) Q $P(XOPT,U,3)"
^XTMP("XPDT",7676,"RTN","XUSTZ",77,0)=" Q $P(^XTV(8989.3,1,""XUS""),U,3)"
^XTMP("XPDT",7676,"RTN","XUSTZ",78,0)=" ;"
^XTMP("XPDT",7676,"RTN","XUSTZ",79,0)="LKUSER(IEN) ;Lock user, Return: 0 not locked, 1 locked"
^XTMP("XPDT",7676,"RTN","XUSTZ",80,0)=" Q:$P($G(^XTV(8989.3,1,405)),U,4)'=""y"" 0"
^XTMP("XPDT",7676,"RTN","XUSTZ",81,0)=" N FDA"
^XTMP("XPDT",7676,"RTN","XUSTZ",82,0)=" ;If already locked don't change time"
^XTMP("XPDT",7676,"RTN","XUSTZ",83,0)=" S FDA=$$GET1^DIQ(200,IEN_"","",202.05,""I"")"
^XTMP("XPDT",7676,"RTN","XUSTZ",84,0)=" I FDA>XUNOW Q 0 ;Still Locked."
^XTMP("XPDT",7676,"RTN","XUSTZ",85,0)=" ;If locking user clear XUFAC."
^XTMP("XPDT",7676,"RTN","XUSTZ",86,0)=" D CLRFAC^XUS3($G(IO(""IP"")))"
^XTMP("XPDT",7676,"RTN","XUSTZ",87,0)=" K FDA ;Add d,h,m,s"
^XTMP("XPDT",7676,"RTN","XUSTZ",88,0)=" S FDA(200,IEN_"","",202.05)=$$HTFM^XLFDT($$HADD^XLFDT($H,0,0,0,TMOUT))"
^XTMP("XPDT",7676,"RTN","XUSTZ",89,0)=" D UPDATE^DIE("""",""FDA"")"
^XTMP("XPDT",7676,"RTN","XUSTZ",90,0)=" Q 1"
^XTMP("XPDT",7676,"VER")="8.0^22.0"
^XTMP("XPDT",7676,"^DD",200,200,501.1,0)="NETWORK USERNAME^FX^^501;1^K:$L(X)>15!($L(X)<9) X I $D(X) S X=$$UP^XLFSTR(X) K:$$NETNM^XUSER1(X,DA) X"
^XTMP("XPDT",7676,"^DD",200,200,501.1,3)="Enter the Active Directory Username (9-15 characters)."
^XTMP("XPDT",7676,"^DD",200,200,501.1,21,0)="^^4^4^3090707^"
^XTMP("XPDT",7676,"^DD",200,200,501.1,21,1,0)="This is the username that is used by the Windows Active Directory."
^XTMP("XPDT",7676,"^DD",200,200,501.1,21,2,0)="It should be 'VHA' + 3 char station ID + first 5 of last name + first"
^XTMP("XPDT",7676,"^DD",200,200,501.1,21,3,0)="character of first name."
^XTMP("XPDT",7676,"^DD",200,200,501.1,21,4,0)="Holders of the XUMGR key can override this."
^XTMP("XPDT",7676,"^DD",200,200,501.1,23,0)="^^2^2^3090707^"
^XTMP("XPDT",7676,"^DD",200,200,501.1,23,1,0)="Holders of the XUMGR key can override the syntax check."
^XTMP("XPDT",7676,"^DD",200,200,501.1,23,2,0)="Users with DUZ(0)=""@"" can override the syntax check."
^XTMP("XPDT",7676,"^DD",200,200,501.1,"DT")="3090707"
^XTMP("XPDT",7676,"^DD",200,200,747.11,0)="APPOINTMENT STATUS^S^1:FULL-TIME;2:PART-TIME;3:CONSULTING;4:CONTRACT;5:RESIDENT;6:FEE BASIS, ON STATION;7:SPECIALTY FELLOW;8:WOC;9:OTHER;^QAR12;1^Q"
^XTMP("XPDT",7676,"^DD",200,200,747.11,3)="Enter the appropriate Appointment Status."
^XTMP("XPDT",7676,"^DD",200,200,747.11,21,0)="^^1^1^2910403^^"
^XTMP("XPDT",7676,"^DD",200,200,747.11,21,1,0)="Contains the Appointment Status for this person."
^XTMP("XPDT",7676,"^DD",200,200,747.11,"DT")="2900817"
^XTMP("XPDT",7676,"^DD",200,200,747.113,0)="RENEW DATE^D^^QAR8;2^S %DT=""E"" D ^%DT S X=Y K:Y<1 X"
^XTMP("XPDT",7676,"^DD",200,200,747.113,3)="Enter the Renewal Date for our General Privilege."
^XTMP("XPDT",7676,"^DD",200,200,747.113,21,0)="^^1^1^2910403^"
^XTMP("XPDT",7676,"^DD",200,200,747.113,21,1,0)="Contains the Renewal Date for our General Privilege."
^XTMP("XPDT",7676,"^DD",200,200,747.113,"DT")="2900821"
^XTMP("XPDT",7676,"^DD",200,200,747.44,0)="DEA EXPIRATION DATE^D^^QAR;9^S %DT=""EX"" D ^%DT S X=Y K:Y<1 X"
^XTMP("XPDT",7676,"^DD",200,200,747.44,3)="Enter DEA # Expiration Date"
^XTMP("XPDT",7676,"^DD",200,200,747.44,21,0)="^^1^1^2920731^"
^XTMP("XPDT",7676,"^DD",200,200,747.44,21,1,0)="This field contains the expiration date for DEA #."
^XTMP("XPDT",7676,"^DD",200,200,747.44,"DT")="2910723"
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,0)="ACADEMIC AFFILIATION WAIVER^S^0:No;1:Yes;^3;4^Q"
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,3)="Does your site have an Academic Affiliation Waiver."
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,0)="^^13^13^3090609^"
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,1,0)="The VA Handbook 6500 page 60 requires:"
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,2,0)="6. POLICY AND PROCEDURES, c. Technical Controls,"
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,3,0)=" (2) Logical Access Controls."
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,4,0)="   d. Accounts are automatically disabled if inactive for 30 days."
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,5,0)=" "
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,6,0)="The Office of Academic Affiliation requested a waiver to the 30 day"
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,7,0)="disabling of inactive accounts asking it be 90 days and this waiver was "
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,8,0)="approved."
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,9,0)=" "
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,10,0)="This field controls if the VA Handbook 6500 30 day limit is used or the"
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,11,0)="site has an Academic Affiliation and the 90 day limit is to be used."
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,12,0)=" "
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,21,13,0)="There is a copy of the waiver attached to Remedy Ticket 283028."
^XTMP("XPDT",7676,"^DD",8989.3,8989.3,13,"DT")="3090609"
^XTMP("XPDT",7682)="1"
^XTMP("XPDT",7682,"BLD",1278,0)="XU*8.0*540^KERNEL^0^3100112^y"
^XTMP("XPDT",7682,"BLD",1278,1,0)="^^2^2^3100112^^^"
^XTMP("XPDT",7682,"BLD",1278,1,1,0)="Please see the patch description in the Patch Module on FORUM."
^XTMP("XPDT",7682,"BLD",1278,1,2,0)=""
^XTMP("XPDT",7682,"BLD",1278,4,0)="^9.64PA^^"
^XTMP("XPDT",7682,"BLD",1278,6)="^429"
^XTMP("XPDT",7682,"BLD",1278,6.3)="4"
^XTMP("XPDT",7682,"BLD",1278,"INI")="PRE^XU8P540"
^XTMP("XPDT",7682,"BLD",1278,"INIT")="POST^XU8P540"
^XTMP("XPDT",7682,"BLD",1278,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7682,"BLD",1278,"KRN",.4,0)=".4"
^XTMP("XPDT",7682,"BLD",1278,"KRN",.401,0)=".401"
^XTMP("XPDT",7682,"BLD",1278,"KRN",.402,0)=".402"
^XTMP("XPDT",7682,"BLD",1278,"KRN",.403,0)=".403"
^XTMP("XPDT",7682,"BLD",1278,"KRN",.403,"NM",0)="^9.68A^^0"
^XTMP("XPDT",7682,"BLD",1278,"KRN",.5,0)=".5"
^XTMP("XPDT",7682,"BLD",1278,"KRN",.84,0)=".84"
^XTMP("XPDT",7682,"BLD",1278,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7682,"BLD",1278,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7682,"BLD",1278,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7682,"BLD",1278,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7682,"BLD",1278,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7682,"BLD",1278,"KRN",9.8,"NM",1,0)="XU8P540^^0^B8615268"
^XTMP("XPDT",7682,"BLD",1278,"KRN",9.8,"NM","B","XU8P540",1)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN",19,0)="19"
^XTMP("XPDT",7682,"BLD",1278,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7682,"BLD",1278,"KRN",101,0)="101"
^XTMP("XPDT",7682,"BLD",1278,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7682,"BLD",1278,"KRN",771,0)="771"
^XTMP("XPDT",7682,"BLD",1278,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7682,"BLD",1278,"KRN",870,0)="870"
^XTMP("XPDT",7682,"BLD",1278,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7682,"BLD",1278,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7682,"BLD",1278,"KRN",8994,0)="8994"
^XTMP("XPDT",7682,"BLD",1278,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",.4,.4)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",.401,.401)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",.402,.402)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",.403,.403)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",.5,.5)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",.84,.84)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",19,19)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",101,101)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",771,771)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",870,870)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",8994,8994)=""
^XTMP("XPDT",7682,"BLD",1278,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7682,"BLD",1278,"QDEF")="^^^^^^^^^^YES"
^XTMP("XPDT",7682,"BLD",1278,"QUES",0)="^9.62^^"
^XTMP("XPDT",7682,"BLD",1278,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7682,"BLD",1278,"REQB",1,0)="XU*8.0*512^1"
^XTMP("XPDT",7682,"BLD",1278,"REQB","B","XU*8.0*512",1)=""
^XTMP("XPDT",7682,"INI")="PRE^XU8P540"
^XTMP("XPDT",7682,"INIT")="POST^XU8P540"
^XTMP("XPDT",7682,"MBREQ")="0"
^XTMP("XPDT",7682,"PKG",3,-1)="1^1"
^XTMP("XPDT",7682,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7682,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7682,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7682,"PKG",3,22,1,0)="8.0^3090706^3090706^6"
^XTMP("XPDT",7682,"PKG",3,22,1,"PAH",1,0)="540^3100112^1000051"
^XTMP("XPDT",7682,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3100112"
^XTMP("XPDT",7682,"PKG",3,22,1,"PAH",1,1,1,0)="Please see the patch description in the Patch Module on FORUM."
^XTMP("XPDT",7682,"PKG",3,22,1,"PAH",1,1,2,0)=""
^XTMP("XPDT",7682,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7682,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7682,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7682,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7682,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7682,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7682,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7682,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7682,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7682,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7682,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7682,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7682,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7682,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7682,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7682,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7682,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7682,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7682,"QUES","XPM1","B")=""
^XTMP("XPDT",7682,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7682,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7682,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7682,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7682,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7682,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7682,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7682,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7682,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7682,"QUES","XPZ1","B")="YES"
^XTMP("XPDT",7682,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7682,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7682,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7682,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7682,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7682,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7682,"RTN")="1"
^XTMP("XPDT",7682,"RTN","XU8P540")="0^1^B8615268^n/a"
^XTMP("XPDT",7682,"RTN","XU8P540",1,0)="XU8P540 ;SFISC/GB- POST INSTALL ;24 DEC 2009"
^XTMP("XPDT",7682,"RTN","XU8P540",2,0)=" ;;8.0;KERNEL;**540**;Jul 10, 1995;Build 4"
^XTMP("XPDT",7682,"RTN","XU8P540",3,0)="PRE ; Pre-Init"
^XTMP("XPDT",7682,"RTN","XU8P540",4,0)=" D GROUP"
^XTMP("XPDT",7682,"RTN","XU8P540",5,0)=" Q"
^XTMP("XPDT",7682,"RTN","XU8P540",6,0)=" ;"
^XTMP("XPDT",7682,"RTN","XU8P540",7,0)="GROUP ; Check to see if mail group has correct remote address. If not, correct it."
^XTMP("XPDT",7682,"RTN","XU8P540",8,0)=" N XUGIEN,XUOIEN,XUNIEN"
^XTMP("XPDT",7682,"RTN","XU8P540",9,0)=" D BMES^XPDUTL(""Checking Mail Group 'XUOAA CLIN TRAINEE'..."")"
^XTMP("XPDT",7682,"RTN","XU8P540",10,0)=" S XUGIEN=$$FIND1^DIC(3.8,"""",""X"",""XUOAA CLIN TRAINEE"") ; eXact match only"
^XTMP("XPDT",7682,"RTN","XU8P540",11,0)=" I 'XUGIEN D  Q"
^XTMP("XPDT",7682,"RTN","XU8P540",12,0)=" . D BMES^XPDUTL(""ERROR: Cannot find mail group 'XUOAA CLIN TRAINEE'"")"
^XTMP("XPDT",7682,"RTN","XU8P540",13,0)=" . S XPDABORT=1"
^XTMP("XPDT",7682,"RTN","XU8P540",14,0)=" S XUOIEN=$$FIND1^DIC(3.812,"",""_XUGIEN_"","",""X"",""AIMCDATA@LRN.VA.GOV"")"
^XTMP("XPDT",7682,"RTN","XU8P540",15,0)=" I $D(DIERR) D  Q"
^XTMP("XPDT",7682,"RTN","XU8P540",16,0)=" . D BMES^XPDUTL(""ERROR: Lookup of old remote address failed."")"
^XTMP("XPDT",7682,"RTN","XU8P540",17,0)=" . S XPDABORT=1"
^XTMP("XPDT",7682,"RTN","XU8P540",18,0)=" I XUOIEN D  ; Delete the old remote address from the group."
^XTMP("XPDT",7682,"RTN","XU8P540",19,0)=" . N DIR,X,Y,DA,DIK"
^XTMP("XPDT",7682,"RTN","XU8P540",20,0)=" . S DA(1)=XUGIEN,DA=XUOIEN,DIK=""^XMB(3.8,""_XUGIEN_"",6,"""
^XTMP("XPDT",7682,"RTN","XU8P540",21,0)=" . D ^DIK"
^XTMP("XPDT",7682,"RTN","XU8P540",22,0)=" . D MES^XPDUTL(""I've deleted the old remote address from the group."")"
^XTMP("XPDT",7682,"RTN","XU8P540",23,0)=" E  D"
^XTMP("XPDT",7682,"RTN","XU8P540",24,0)=" . D MES^XPDUTL(""The old remote address was already deleted. No action taken."")"
^XTMP("XPDT",7682,"RTN","XU8P540",25,0)=" S XUNIEN=$$FIND1^DIC(3.812,"",""_XUGIEN_"","",""X"",""AIMCDATA@VA.GOV"")"
^XTMP("XPDT",7682,"RTN","XU8P540",26,0)=" I $D(DIERR) D  Q"
^XTMP("XPDT",7682,"RTN","XU8P540",27,0)=" . D BMES^XPDUTL(""ERROR: Lookup of new remote address failed."")"
^XTMP("XPDT",7682,"RTN","XU8P540",28,0)=" . S XPDABORT=1"
^XTMP("XPDT",7682,"RTN","XU8P540",29,0)=" I XUNIEN D"
^XTMP("XPDT",7682,"RTN","XU8P540",30,0)=" . D MES^XPDUTL(""The new remote address 'AIMCDATA@VA.GOV' was already added. No action taken."")"
^XTMP("XPDT",7682,"RTN","XU8P540",31,0)=" E  D  ; Add the new remote address to the group."
^XTMP("XPDT",7682,"RTN","XU8P540",32,0)=" . N XUFDA"
^XTMP("XPDT",7682,"RTN","XU8P540",33,0)=" . S XUFDA(3.812,""?+1,""_XUGIEN_"","",.01)=""AIMCDATA@VA.GOV"""
^XTMP("XPDT",7682,"RTN","XU8P540",34,0)=" . D UPDATE^DIE("""",""XUFDA"")"
^XTMP("XPDT",7682,"RTN","XU8P540",35,0)=" . I $D(DIERR) D  Q"
^XTMP("XPDT",7682,"RTN","XU8P540",36,0)=" . . D BMES^XPDUTL(""ERROR: Cannot add the new remote address to the group."")"
^XTMP("XPDT",7682,"RTN","XU8P540",37,0)=" . . S XPDABORT=1"
^XTMP("XPDT",7682,"RTN","XU8P540",38,0)=" . D MES^XPDUTL(""I've added the new remote address 'AIMCDATA@VA.GOV' to the group."")"
^XTMP("XPDT",7682,"RTN","XU8P540",39,0)=" D MES^XPDUTL(""Finished Mail Group Check."")"
^XTMP("XPDT",7682,"RTN","XU8P540",40,0)=" Q"
^XTMP("XPDT",7682,"RTN","XU8P540",41,0)=" ;"
^XTMP("XPDT",7682,"RTN","XU8P540",42,0)="POST ; Post-Init"
^XTMP("XPDT",7682,"RTN","XU8P540",43,0)=" I '$$PROD^XUPROD D BMES^XPDUTL(""Not a production UCI. Quitting without reindexing/transmitting."") Q"
^XTMP("XPDT",7682,"RTN","XU8P540",44,0)=" D REINDEX"
^XTMP("XPDT",7682,"RTN","XU8P540",45,0)=" D XMIT"
^XTMP("XPDT",7682,"RTN","XU8P540",46,0)=" Q"
^XTMP("XPDT",7682,"RTN","XU8P540",47,0)=" ;"
^XTMP("XPDT",7682,"RTN","XU8P540",48,0)="REINDEX ; Re-index the ATR xref"
^XTMP("XPDT",7682,"RTN","XU8P540",49,0)=" ; We do this to ensure that data for ALL clinical trainees are transmitted."
^XTMP("XPDT",7682,"RTN","XU8P540",50,0)=" D BMES^XPDUTL(""Reindexing """"ATR"""" cross-reference in the NEW PERSON [#200] file..."")"
^XTMP("XPDT",7682,"RTN","XU8P540",51,0)=" N DIK"
^XTMP("XPDT",7682,"RTN","XU8P540",52,0)=" S DIK=""^VA(200,"""
^XTMP("XPDT",7682,"RTN","XU8P540",53,0)=" S DIK(1)=""12.2^ATR"""
^XTMP("XPDT",7682,"RTN","XU8P540",54,0)=" D ENALL^DIK"
^XTMP("XPDT",7682,"RTN","XU8P540",55,0)=" D MES^XPDUTL(""Finished reindexing."")"
^XTMP("XPDT",7682,"RTN","XU8P540",56,0)=" Q"
^XTMP("XPDT",7682,"RTN","XU8P540",57,0)=" ;"
^XTMP("XPDT",7682,"RTN","XU8P540",58,0)="XMIT ; Transmit Data to OAA database"
^XTMP("XPDT",7682,"RTN","XU8P540",59,0)=" D MES^XPDUTL(""Initiating transmission of OAA Clinical Trainee data..."")"
^XTMP("XPDT",7682,"RTN","XU8P540",60,0)=" D OAA^XUOAAHL7"
^XTMP("XPDT",7682,"RTN","XU8P540",61,0)=" D MES^XPDUTL(""Finished with transmission."")"
^XTMP("XPDT",7682,"RTN","XU8P540",62,0)=" Q"
^XTMP("XPDT",7682,"VER")="8.0^22.0"
^XTMP("XPDT",7699)="1"
^XTMP("XPDT",7699,"BLD",6947,0)="PSN*4.0*193^NATIONAL DRUG FILE^0^3090507^y"
^XTMP("XPDT",7699,"BLD",6947,1,0)="^^9^9^3090507^"
^XTMP("XPDT",7699,"BLD",6947,1,1,0)="This patch will create the ""AC"" cross reference on the PARENT CLASS field "
^XTMP("XPDT",7699,"BLD",6947,1,2,0)="(#2) of the VA DRUG CLASS file (#50.605)."
^XTMP("XPDT",7699,"BLD",6947,1,3,0)=" "
^XTMP("XPDT",7699,"BLD",6947,1,4,0)="The new cross reference is utilized by the Patients on Specific Drug(s) "
^XTMP("XPDT",7699,"BLD",6947,1,5,0)="Multidivisional Enhancements patch PSJ*5*214, a Class III to Class I "
^XTMP("XPDT",7699,"BLD",6947,1,6,0)="conversion project."
^XTMP("XPDT",7699,"BLD",6947,1,7,0)=" "
^XTMP("XPDT",7699,"BLD",6947,1,8,0)="With the ""AC"" cross reference, a user can identify all child drug classes "
^XTMP("XPDT",7699,"BLD",6947,1,9,0)="that belong to a selected parent class."
^XTMP("XPDT",7699,"BLD",6947,4,0)="^9.64PA^50.605^1"
^XTMP("XPDT",7699,"BLD",6947,4,50.605,0)="50.605"
^XTMP("XPDT",7699,"BLD",6947,4,50.605,2,0)="^9.641^50.605^1"
^XTMP("XPDT",7699,"BLD",6947,4,50.605,2,50.605,0)="VA DRUG CLASS  (File-top level)"
^XTMP("XPDT",7699,"BLD",6947,4,50.605,2,50.605,1,0)="^9.6411^2^1"
^XTMP("XPDT",7699,"BLD",6947,4,50.605,2,50.605,1,2,0)="PARENT CLASS"
^XTMP("XPDT",7699,"BLD",6947,4,50.605,222)="y^y^p^^^^n^^n"
^XTMP("XPDT",7699,"BLD",6947,4,50.605,224)=" "
^XTMP("XPDT",7699,"BLD",6947,4,"APDD",50.605,50.605)=" "
^XTMP("XPDT",7699,"BLD",6947,4,"APDD",50.605,50.605,2)=" "
^XTMP("XPDT",7699,"BLD",6947,4,"B",50.605,50.605)=" "
^XTMP("XPDT",7699,"BLD",6947,6)="^221"
^XTMP("XPDT",7699,"BLD",6947,6.3)="4"
^XTMP("XPDT",7699,"BLD",6947,"INID")="^y"
^XTMP("XPDT",7699,"BLD",6947,"INIT")="PSN193P"
^XTMP("XPDT",7699,"BLD",6947,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7699,"BLD",6947,"KRN",.4,0)=".4"
^XTMP("XPDT",7699,"BLD",6947,"KRN",.401,0)=".401"
^XTMP("XPDT",7699,"BLD",6947,"KRN",.402,0)=".402"
^XTMP("XPDT",7699,"BLD",6947,"KRN",.403,0)=".403"
^XTMP("XPDT",7699,"BLD",6947,"KRN",.5,0)=".5"
^XTMP("XPDT",7699,"BLD",6947,"KRN",.84,0)=".84"
^XTMP("XPDT",7699,"BLD",6947,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7699,"BLD",6947,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7699,"BLD",6947,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7699,"BLD",6947,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7699,"BLD",6947,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7699,"BLD",6947,"KRN",9.8,"NM",1,0)="PSN193P^^0^B473435"
^XTMP("XPDT",7699,"BLD",6947,"KRN",9.8,"NM","B","PSN193P",1)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN",19,0)="19"
^XTMP("XPDT",7699,"BLD",6947,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7699,"BLD",6947,"KRN",101,0)="101"
^XTMP("XPDT",7699,"BLD",6947,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7699,"BLD",6947,"KRN",771,0)="771"
^XTMP("XPDT",7699,"BLD",6947,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7699,"BLD",6947,"KRN",870,0)="870"
^XTMP("XPDT",7699,"BLD",6947,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7699,"BLD",6947,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7699,"BLD",6947,"KRN",8994,0)="8994"
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",.4,.4)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",.401,.401)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",.402,.402)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",.403,.403)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",.5,.5)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",.84,.84)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",3.6,3.6)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",3.8,3.8)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",9.2,9.2)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",9.8,9.8)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",19,19)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",19.1,19.1)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",101,101)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",409.61,409.61)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",771,771)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",779.2,779.2)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",870,870)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",8989.51,8989.51)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",8989.52,8989.52)=" "
^XTMP("XPDT",7699,"BLD",6947,"KRN","B",8994,8994)=" "
^XTMP("XPDT",7699,"BLD",6947,"QUES",0)="^9.62^^"
^XTMP("XPDT",7699,"FIA",50.605)="VA DRUG CLASS"
^XTMP("XPDT",7699,"FIA",50.605,0)="^PS(50.605,"
^XTMP("XPDT",7699,"FIA",50.605,0,0)="50.605I"
^XTMP("XPDT",7699,"FIA",50.605,0,1)="y^y^p^^^^n^^n"
^XTMP("XPDT",7699,"FIA",50.605,0,10)=" "
^XTMP("XPDT",7699,"FIA",50.605,0,11)=" "
^XTMP("XPDT",7699,"FIA",50.605,0,"RLRO")=" "
^XTMP("XPDT",7699,"FIA",50.605,0,"VR")="4.0^PSN"
^XTMP("XPDT",7699,"FIA",50.605,50.605)="1"
^XTMP("XPDT",7699,"FIA",50.605,50.605,2)=" "
^XTMP("XPDT",7699,"INIT")="PSN193P"
^XTMP("XPDT",7699,"MBREQ")="0"
^XTMP("XPDT",7699,"PKG",136,-1)="1^1"
^XTMP("XPDT",7699,"PKG",136,0)="NATIONAL DRUG FILE^PSN^This is the National Drug File Package V 4.0"
^XTMP("XPDT",7699,"PKG",136,22,0)="^9.49I^1^1"
^XTMP("XPDT",7699,"PKG",136,22,1,0)="4.0^2981030^2981223^11595"
^XTMP("XPDT",7699,"PKG",136,22,1,"PAH",1,0)="193^3090507"
^XTMP("XPDT",7699,"PKG",136,22,1,"PAH",1,1,0)="^^9^9^3090507"
^XTMP("XPDT",7699,"PKG",136,22,1,"PAH",1,1,1,0)="This patch will create the ""AC"" cross reference on the PARENT CLASS field "
^XTMP("XPDT",7699,"PKG",136,22,1,"PAH",1,1,2,0)="(#2) of the VA DRUG CLASS file (#50.605)."
^XTMP("XPDT",7699,"PKG",136,22,1,"PAH",1,1,3,0)=" "
^XTMP("XPDT",7699,"PKG",136,22,1,"PAH",1,1,4,0)="The new cross reference is utilized by the Patients on Specific Drug(s) "
^XTMP("XPDT",7699,"PKG",136,22,1,"PAH",1,1,5,0)="Multidivisional Enhancements patch PSJ*5*214, a Class III to Class I "
^XTMP("XPDT",7699,"PKG",136,22,1,"PAH",1,1,6,0)="conversion project."
^XTMP("XPDT",7699,"PKG",136,22,1,"PAH",1,1,7,0)=" "
^XTMP("XPDT",7699,"PKG",136,22,1,"PAH",1,1,8,0)="With the ""AC"" cross reference, a user can identify all child drug classes "
^XTMP("XPDT",7699,"PKG",136,22,1,"PAH",1,1,9,0)="that belong to a selected parent class."
^XTMP("XPDT",7699,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7699,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7699,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7699,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7699,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7699,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7699,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7699,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7699,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7699,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7699,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7699,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7699,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7699,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7699,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7699,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7699,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7699,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7699,"QUES","XPM1","B")=" "
^XTMP("XPDT",7699,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7699,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7699,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7699,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7699,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7699,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7699,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7699,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7699,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7699,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7699,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7699,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7699,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7699,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7699,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7699,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7699,"RTN")="1"
^XTMP("XPDT",7699,"RTN","PSN193P")="0^1^B473435^n/a"
^XTMP("XPDT",7699,"RTN","PSN193P",1,0)="PSN193P ;;BIR/RMS - CREATE NEW VA DRUG CLASS CROSS-REFERENCE ; 5/7/09 9:28am"
^XTMP("XPDT",7699,"RTN","PSN193P",2,0)=" ;;4.0; NATIONAL DRUG FILE;**193**; 30 Oct 98;Build 4"
^XTMP("XPDT",7699,"RTN","PSN193P",3,0)="EN N DIK"
^XTMP("XPDT",7699,"RTN","PSN193P",4,0)=" S DIK=""^PS(50.605,"" ;VA DRUG CLASS FILE (#50.605)"
^XTMP("XPDT",7699,"RTN","PSN193P",5,0)=" S DIK(1)=2 ;PARENT CLASS FIELD (#2)"
^XTMP("XPDT",7699,"RTN","PSN193P",6,0)=" D ENALL^DIK ;THIS CALL WILL CREATE (SET ONLY) THE ""AC"" X-REF"
^XTMP("XPDT",7699,"RTN","PSN193P",7,0)=" Q"
^XTMP("XPDT",7699,"VER")="8.0^22.0"
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,0)="PARENT CLASS^P50.605'a^PS(50.605,^0;3^Q"
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,1,0)="^.1"
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,1,1,0)="50.605^AC"
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,1,1,1)="S ^PS(50.605,""AC"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,1,1,2)="K ^PS(50.605,""AC"",$E(X,1,30),DA)"
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,1,1,"%D",0)="^^4^4^3090109^"
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,1,1,"%D",1,0)="Introduced by PSN*4*193 as part of the Patients on Specific Drug(s) "
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,1,1,"%D",2,0)="Multidivisional Enhancements Class III to Class I Conversion Project "
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,1,1,"%D",3,0)="(PSJ*5*214).  This index permits identification of all VA DRUG CLASS "
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,1,1,"%D",4,0)="entries that belong to a selected PARENT CLASS (field #2)."
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,1,1,"DT")="2991102"
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,8.5)="^"
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,9)="^"
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,21,0)="^^1^1^2910130^"
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,21,1,0)="This is the parent class."
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,"AUDIT")="y"
^XTMP("XPDT",7699,"^DD",50.605,50.605,2,"DT")="2961121"
^XTMP("XPDT",7705)="1"
^XTMP("XPDT",7705,"BLD",1242,0)="XU*8.0*531^KERNEL^0^3090728^y"
^XTMP("XPDT",7705,"BLD",1242,1,0)="^^2^2^3090727^"
^XTMP("XPDT",7705,"BLD",1242,1,1,0)="Kernel patch XU*8.0*531; Updates the Person Class file #(8932.1)."
^XTMP("XPDT",7705,"BLD",1242,1,2,0)="Please refer to the Description in Forum Patch Module for details."
^XTMP("XPDT",7705,"BLD",1242,4,0)="^9.64PA^^"
^XTMP("XPDT",7705,"BLD",1242,6)="^431"
^XTMP("XPDT",7705,"BLD",1242,6.3)="7"
^XTMP("XPDT",7705,"BLD",1242,"ABPKG")="n"
^XTMP("XPDT",7705,"BLD",1242,"INID")="^y"
^XTMP("XPDT",7705,"BLD",1242,"INIT")="POST^XU8P531"
^XTMP("XPDT",7705,"BLD",1242,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7705,"BLD",1242,"KRN",.4,0)=".4"
^XTMP("XPDT",7705,"BLD",1242,"KRN",.401,0)=".401"
^XTMP("XPDT",7705,"BLD",1242,"KRN",.402,0)=".402"
^XTMP("XPDT",7705,"BLD",1242,"KRN",.403,0)=".403"
^XTMP("XPDT",7705,"BLD",1242,"KRN",.5,0)=".5"
^XTMP("XPDT",7705,"BLD",1242,"KRN",.84,0)=".84"
^XTMP("XPDT",7705,"BLD",1242,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7705,"BLD",1242,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7705,"BLD",1242,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7705,"BLD",1242,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7705,"BLD",1242,"KRN",9.8,"NM",0)="^9.68A^3^3"
^XTMP("XPDT",7705,"BLD",1242,"KRN",9.8,"NM",1,0)="XU8P531^^0^B12716447"
^XTMP("XPDT",7705,"BLD",1242,"KRN",9.8,"NM",2,0)="XU8P531A^^0^B117185667"
^XTMP("XPDT",7705,"BLD",1242,"KRN",9.8,"NM",3,0)="XU8P531B^^0^B213709229"
^XTMP("XPDT",7705,"BLD",1242,"KRN",9.8,"NM","B","XU8P531",1)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN",9.8,"NM","B","XU8P531A",2)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN",9.8,"NM","B","XU8P531B",3)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN",19,0)="19"
^XTMP("XPDT",7705,"BLD",1242,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7705,"BLD",1242,"KRN",101,0)="101"
^XTMP("XPDT",7705,"BLD",1242,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7705,"BLD",1242,"KRN",771,0)="771"
^XTMP("XPDT",7705,"BLD",1242,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7705,"BLD",1242,"KRN",870,0)="870"
^XTMP("XPDT",7705,"BLD",1242,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7705,"BLD",1242,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7705,"BLD",1242,"KRN",8994,0)="8994"
^XTMP("XPDT",7705,"BLD",1242,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",.4,.4)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",.401,.401)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",.402,.402)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",.403,.403)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",.5,.5)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",.84,.84)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",19,19)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",101,101)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",771,771)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",870,870)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",8994,8994)=""
^XTMP("XPDT",7705,"BLD",1242,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7705,"BLD",1242,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7705,"BLD",1242,"QUES",0)="^9.62^^"
^XTMP("XPDT",7705,"BLD",1242,"REQB",0)="^9.611^^"
^XTMP("XPDT",7705,"INIT")="POST^XU8P531"
^XTMP("XPDT",7705,"MBREQ")="0"
^XTMP("XPDT",7705,"PKG",3,-1)="1^1"
^XTMP("XPDT",7705,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7705,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7705,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7705,"PKG",3,22,1,0)="8.0^3090706^3090706^6"
^XTMP("XPDT",7705,"PKG",3,22,1,"PAH",1,0)="531^3090728"
^XTMP("XPDT",7705,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3090728"
^XTMP("XPDT",7705,"PKG",3,22,1,"PAH",1,1,1,0)="Kernel patch XU*8.0*531; Updates the Person Class file #(8932.1)."
^XTMP("XPDT",7705,"PKG",3,22,1,"PAH",1,1,2,0)="Please refer to the Description in Forum Patch Module for details."
^XTMP("XPDT",7705,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7705,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7705,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7705,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7705,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7705,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7705,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7705,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7705,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7705,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7705,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7705,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7705,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7705,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7705,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7705,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7705,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7705,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7705,"QUES","XPM1","B")=""
^XTMP("XPDT",7705,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7705,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7705,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7705,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7705,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7705,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7705,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7705,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7705,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7705,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7705,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7705,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7705,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7705,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7705,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7705,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7705,"RTN")="3"
^XTMP("XPDT",7705,"RTN","XU8P531")="0^1^B12716447^n/a"
^XTMP("XPDT",7705,"RTN","XU8P531",1,0)="XU8P531 ;BT/BP-OAK Person Class File APIs; 7/8/09"
^XTMP("XPDT",7705,"RTN","XU8P531",2,0)=" ;;8.0;KERNEL;**531**; July 10, 1995;Build 7"
^XTMP("XPDT",7705,"RTN","XU8P531",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7705,"RTN","XU8P531",4,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",5,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531",6,0)="POST ;"
^XTMP("XPDT",7705,"RTN","XU8P531",7,0)=" D CORSP(77,904) ; correct SPECIALTY CODE for the entry #904"
^XTMP("XPDT",7705,"RTN","XU8P531",8,0)=" D EDIT ; inactivate entries #1037 and 1066 and edit #198 and 669"
^XTMP("XPDT",7705,"RTN","XU8P531",9,0)=" D DEL ; delete entries 1153-1158 if existed before this patch"
^XTMP("XPDT",7705,"RTN","XU8P531",10,0)=" D ADD ; add new entries #1153-1158"
^XTMP("XPDT",7705,"RTN","XU8P531",11,0)=" D DEF^XU8P531A,DEF^XU8P531B ; update definitons"
^XTMP("XPDT",7705,"RTN","XU8P531",12,0)=" D DELXU8P ; delete post rotines XU8P531A and XU8P531B "
^XTMP("XPDT",7705,"RTN","XU8P531",13,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",14,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531",15,0)="CORSP(XUPRO,XUIEN) ; correct SPECIALTY CODE by IEN"
^XTMP("XPDT",7705,"RTN","XU8P531",16,0)=" I $G(XUPRO)="""" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",17,0)=" I $G(XUIEN)'=+$G(XUIEN) Q"
^XTMP("XPDT",7705,"RTN","XU8P531",18,0)=" S $P(^USC(8932.1,XUIEN,0),""^"",9)="""" ;clean the data before update"
^XTMP("XPDT",7705,"RTN","XU8P531",19,0)=" D SETSP(XUPRO,XUIEN)"
^XTMP("XPDT",7705,"RTN","XU8P531",20,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",21,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531",22,0)="SETSP(XUPRO,XUIEN) ;set/add SPECIALTY CODE by IEN"
^XTMP("XPDT",7705,"RTN","XU8P531",23,0)=" I $G(XUPRO)="""" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",24,0)=" I $G(XUIEN)'=+$G(XUIEN) Q"
^XTMP("XPDT",7705,"RTN","XU8P531",25,0)=" N DR,DIE,DA S DR=""8///^S X=XUPRO"",DIE=""^USC(8932.1,"",DA=XUIEN D ^DIE"
^XTMP("XPDT",7705,"RTN","XU8P531",26,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",27,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531",28,0)="DELXU8P ;"
^XTMP("XPDT",7705,"RTN","XU8P531",29,0)=" ;Delete the routine XU8P509A,B,C,D:"
^XTMP("XPDT",7705,"RTN","XU8P531",30,0)=" N X F X=""XU8P531A"",""XU8P531B"" X ^%ZOSF(""DEL"")"
^XTMP("XPDT",7705,"RTN","XU8P531",31,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",32,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531",33,0)="ADD ; Add new entries from 1153-1158"
^XTMP("XPDT",7705,"RTN","XU8P531",34,0)=" N XUI,XUDATA"
^XTMP("XPDT",7705,"RTN","XU8P531",35,0)=" F XUI=1:1:6 S XUDATA=$T(DATA+XUI) Q:XUDATA="" ;;END""  D"
^XTMP("XPDT",7705,"RTN","XU8P531",36,0)=" . S XUDATA=$P(XUDATA,"";;"",2) Q:XUDATA=""END"""
^XTMP("XPDT",7705,"RTN","XU8P531",37,0)=" . D ADD1(XUDATA)"
^XTMP("XPDT",7705,"RTN","XU8P531",38,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",39,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531",40,0)="ADD1(XUDATA) ; add single entry"
^XTMP("XPDT",7705,"RTN","XU8P531",41,0)=" N FDA,FDAIEN,XUD"
^XTMP("XPDT",7705,"RTN","XU8P531",42,0)=" S XUD=$G(XUDATA)"
^XTMP("XPDT",7705,"RTN","XU8P531",43,0)=" S FDAIEN(1)=$P(XUD,""^"")"
^XTMP("XPDT",7705,"RTN","XU8P531",44,0)=" S FDA(8932.1,""+1,"",.01)=$P(XUD,""^"",2)"
^XTMP("XPDT",7705,"RTN","XU8P531",45,0)=" S FDA(8932.1,""+1,"",1)=$P(XUD,""^"",3)"
^XTMP("XPDT",7705,"RTN","XU8P531",46,0)=" S FDA(8932.1,""+1,"",2)=$P(XUD,""^"",4)"
^XTMP("XPDT",7705,"RTN","XU8P531",47,0)=" S FDA(8932.1,""+1,"",3)=""a"""
^XTMP("XPDT",7705,"RTN","XU8P531",48,0)=" S FDA(8932.1,""+1,"",5)=$P(XUD,""^"",5)"
^XTMP("XPDT",7705,"RTN","XU8P531",49,0)=" S FDA(8932.1,""+1,"",6)=$P(XUD,""^"",6)"
^XTMP("XPDT",7705,"RTN","XU8P531",50,0)=" S FDA(8932.1,""+1,"",8)=$P(XUD,""^"",7)"
^XTMP("XPDT",7705,"RTN","XU8P531",51,0)=" S FDA(8932.1,""+1,"",90002)=$P(XUD,""^"",8)"
^XTMP("XPDT",7705,"RTN","XU8P531",52,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7705,"RTN","XU8P531",53,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",54,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531",55,0)="DEL ; Delete entry"
^XTMP("XPDT",7705,"RTN","XU8P531",56,0)=" N XUI F XUI=1153:1:1158 D"
^XTMP("XPDT",7705,"RTN","XU8P531",57,0)=" . N DIK,DA S DIK=""^USC(8932.1,"",DA=XUI D ^DIK"
^XTMP("XPDT",7705,"RTN","XU8P531",58,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",59,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531",60,0)="GET ;Get information of entries from the Person Class file"
^XTMP("XPDT",7705,"RTN","XU8P531",61,0)=" N XUI"
^XTMP("XPDT",7705,"RTN","XU8P531",62,0)=" F XUI=1153:1:1158 D GET1(XUI)"
^XTMP("XPDT",7705,"RTN","XU8P531",63,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",64,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531",65,0)="GET1(XUIEN) ; Get information of given entry from Person Class file."
^XTMP("XPDT",7705,"RTN","XU8P531",66,0)=" N XUI"
^XTMP("XPDT",7705,"RTN","XU8P531",67,0)=" S XUI=$G(^USC(8932.1,XUIEN,0))"
^XTMP("XPDT",7705,"RTN","XU8P531",68,0)=" S XUI="" ;;""_XUIEN_""^""_$P(XUI,""^"",1,3)_""^""_$P(XUI,""^"",6,9) W !,XUI"
^XTMP("XPDT",7705,"RTN","XU8P531",69,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531",70,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531",71,0)="DATA ; information of entries from 1153-1156"
^XTMP("XPDT",7705,"RTN","XU8P531",72,0)=" ;;1153^Other Service^Health Educator^^V081902^174H00000X^"
^XTMP("XPDT",7705,"RTN","XU8P531",73,0)=" ;;1154^Allopathic & Osteopathic Physicians^Pediatrics^Child Abuse Pediatrics^V180506^2080C0008X^37"
^XTMP("XPDT",7705,"RTN","XU8P531",74,0)=" ;;1155^Nursing Service Related^Doula^^V170603^374J00000X^"
^XTMP("XPDT",7705,"RTN","XU8P531",75,0)=" ;;1156^Nursing Service Related^Religious Nonmedical Practitioner^^V170101^374K00000X^"
^XTMP("XPDT",7705,"RTN","XU8P531",76,0)=" ;;1157^Allopathic & Osteopathic Physicians^Phlebology^^V182415^202K00000X^22"
^XTMP("XPDT",7705,"RTN","XU8P531",77,0)=" ;;1158^Allopathic & Osteopathic Physicians^Pathology^Clinical Pathology^V182416^207ZC0006X^22"
^XTMP("XPDT",7705,"RTN","XU8P531",78,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531",79,0)=" ;;"
^XTMP("XPDT",7705,"RTN","XU8P531",80,0)="EDIT ;Edit entries 198,669"
^XTMP("XPDT",7705,"RTN","XU8P531",81,0)=" N FDA S FDA(8932.1,""198,"",2)=""Occupational Health"" D FILE^DIE("""",""FDA"",""ZZERR"")"
^XTMP("XPDT",7705,"RTN","XU8P531",82,0)=" N FDA S FDA(8932.1,""669,"",1)=""Religious Nonmedical Nursing Personnel"" D FILE^DIE("""",""FDA"",""ZZERR"")"
^XTMP("XPDT",7705,"RTN","XU8P531",83,0)=" ; inactivate the entry #1037,1066"
^XTMP("XPDT",7705,"RTN","XU8P531",84,0)=" N FDA S FDA(8932.1,""1037,"",3)=""i"",FDA(8932.1,""1037,"",4)=3091001 D FILE^DIE("""",""FDA"",""ZZERR"")"
^XTMP("XPDT",7705,"RTN","XU8P531",85,0)=" N FDA S FDA(8932.1,""1066,"",3)=""i"",FDA(8932.1,""1066,"",4)=3091001 D FILE^DIE("""",""FDA"",""ZZERR"")"
^XTMP("XPDT",7705,"RTN","XU8P531",86,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531A")="0^2^B117185667^n/a"
^XTMP("XPDT",7705,"RTN","XU8P531A",1,0)="XU8P531A ; BP/BDT - POST ROUTINE; 7/8/09"
^XTMP("XPDT",7705,"RTN","XU8P531A",2,0)=" ;;8.0;KERNEL;**531**;Jul 10, 1995;Build 7"
^XTMP("XPDT",7705,"RTN","XU8P531A",3,0)=" ;;""Per VHA Directive 2004-038, this routine should not be modified""."
^XTMP("XPDT",7705,"RTN","XU8P531A",4,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531A",5,0)="DEF ; Update definitions 369,370,195,196,197,1153,1154,1155,115+6,1157,1158"
^XTMP("XPDT",7705,"RTN","XU8P531A",6,0)=" N XUI"
^XTMP("XPDT",7705,"RTN","XU8P531A",7,0)=" F XUI=369,370,195,196,197,1153,1154,1155,1156,1157,1158 D"
^XTMP("XPDT",7705,"RTN","XU8P531A",8,0)=" . D DEF1(XUI)"
^XTMP("XPDT",7705,"RTN","XU8P531A",9,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531A",10,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",11,0)="DEF1(XUI) ; Update definition for single entry XUI"
^XTMP("XPDT",7705,"RTN","XU8P531A",12,0)=" N XUI1,XUDATA,XUY"
^XTMP("XPDT",7705,"RTN","XU8P531A",13,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7705,"RTN","XU8P531A",14,0)=" F XUY=1:1:100 S XUDATA=$T(@XUI+XUY) Q:XUDATA="" ;;END""  D "
^XTMP("XPDT",7705,"RTN","XU8P531A",15,0)=" . S ^TMP($J,""XUBA"",XUI,XUY,0)=$P(XUDATA,"";;"",2)"
^XTMP("XPDT",7705,"RTN","XU8P531A",16,0)=" S XUI1=XUI_"","""
^XTMP("XPDT",7705,"RTN","XU8P531A",17,0)=" D WP^DIE(8932.1,XUI1,11,""K"",""^TMP($J,""""XUBA"""",XUI)"")"
^XTMP("XPDT",7705,"RTN","XU8P531A",18,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7705,"RTN","XU8P531A",19,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531A",20,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",21,0)="GETDATA ; get definition"
^XTMP("XPDT",7705,"RTN","XU8P531A",22,0)=" N XUI,XUY"
^XTMP("XPDT",7705,"RTN","XU8P531A",23,0)=" F XUI=369,370,195,196,197,1153,1154,1155,1156,1157,1158 D"
^XTMP("XPDT",7705,"RTN","XU8P531A",24,0)=" . S XUY=$G(^USC(8932.1,XUI,11,0)),XUY=$P(XUY,""^"",3)"
^XTMP("XPDT",7705,"RTN","XU8P531A",25,0)=" . I XUY>0 D GETDES(XUI,XUY)"
^XTMP("XPDT",7705,"RTN","XU8P531A",26,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531A",27,0)="GETDES(XUI,XUY) ; get definition"
^XTMP("XPDT",7705,"RTN","XU8P531A",28,0)=" N XUA,XUB"
^XTMP("XPDT",7705,"RTN","XU8P531A",29,0)=" W !,XUI,"" ;"""
^XTMP("XPDT",7705,"RTN","XU8P531A",30,0)=" F XUA=1:1:XUY W !,"" ;;"",$G(^USC(8932.1,XUI,11,XUA,0))"
^XTMP("XPDT",7705,"RTN","XU8P531A",31,0)=" W !,"" ;;END"""
^XTMP("XPDT",7705,"RTN","XU8P531A",32,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531A",33,0)=" ; information of definitions"
^XTMP("XPDT",7705,"RTN","XU8P531A",34,0)="369 ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",35,0)=" ;;A social worker is a person who is qualified by a Social Work degree, and "
^XTMP("XPDT",7705,"RTN","XU8P531A",36,0)=" ;;licensed, certified or registered by the state as a social worker to "
^XTMP("XPDT",7705,"RTN","XU8P531A",37,0)=" ;;practice within the scope of that license. A social worker provides "
^XTMP("XPDT",7705,"RTN","XU8P531A",38,0)=" ;;assistance and counseling to clients and their families who are dealing "
^XTMP("XPDT",7705,"RTN","XU8P531A",39,0)=" ;;with social, emotional and environmental problems. Social work services "
^XTMP("XPDT",7705,"RTN","XU8P531A",40,0)=" ;;may be rendered to individuals, families, groups, and the public."
^XTMP("XPDT",7705,"RTN","XU8P531A",41,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531A",42,0)=" ;;Source: National Association of Social Workers, 2009"
^XTMP("XPDT",7705,"RTN","XU8P531A",43,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531A",44,0)="370 ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",45,0)=" ;;A social worker who holds a master's or doctoral degree in social work "
^XTMP("XPDT",7705,"RTN","XU8P531A",46,0)=" ;;from an accredited school of social work in addition to at least two "
^XTMP("XPDT",7705,"RTN","XU8P531A",47,0)=" ;;years of post-master's supervised experience in a clinical setting. The "
^XTMP("XPDT",7705,"RTN","XU8P531A",48,0)=" ;;social worker must be licensed, certified, or registered at the clinical "
^XTMP("XPDT",7705,"RTN","XU8P531A",49,0)=" ;;level in the jurisdiction of practice. A clinical social worker provides "
^XTMP("XPDT",7705,"RTN","XU8P531A",50,0)=" ;;direct services, including interventions focused on interpersonal "
^XTMP("XPDT",7705,"RTN","XU8P531A",51,0)=" ;;interactions, intrapsychic dynamics, and life management issues. Clinical "
^XTMP("XPDT",7705,"RTN","XU8P531A",52,0)=" ;;social work services are based on bio-psychosocial perspectives. Services "
^XTMP("XPDT",7705,"RTN","XU8P531A",53,0)=" ;;consist of assessment, diagnosis, treatment (including psychotherapy and "
^XTMP("XPDT",7705,"RTN","XU8P531A",54,0)=" ;;counseling), client-centered advocacy, consultation, evaluation, and "
^XTMP("XPDT",7705,"RTN","XU8P531A",55,0)=" ;;prevention of mental illness, emotional, or behavioral disturbances. "
^XTMP("XPDT",7705,"RTN","XU8P531A",56,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531A",57,0)=" ;;Source: National Association of Social Workers, 2009"
^XTMP("XPDT",7705,"RTN","XU8P531A",58,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531A",59,0)="195 ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",60,0)=" ;;The chiropractic internist may serve as a primary care physician or may "
^XTMP("XPDT",7705,"RTN","XU8P531A",61,0)=" ;;see patients referred from other providers for evaluation and "
^XTMP("XPDT",7705,"RTN","XU8P531A",62,0)=" ;;co-management. Evaluation is focused on the early detection of "
^XTMP("XPDT",7705,"RTN","XU8P531A",63,0)=" ;;functional, nutritional, and pathological disorders. A chiropractic "
^XTMP("XPDT",7705,"RTN","XU8P531A",64,0)=" ;;internist utilizes the diagnostic instruments necessary for proper "
^XTMP("XPDT",7705,"RTN","XU8P531A",65,0)=" ;;examination. In cases where laboratory examination is necessary, a "
^XTMP("XPDT",7705,"RTN","XU8P531A",66,0)=" ;;chiropractic internist utilizes a recognized reference laboratory "
^XTMP("XPDT",7705,"RTN","XU8P531A",67,0)=" ;;facility. A chiropractic internist may manage his or her own cases or may "
^XTMP("XPDT",7705,"RTN","XU8P531A",68,0)=" ;;refer to another specialist when prudent to do so. The chiropractic "
^XTMP("XPDT",7705,"RTN","XU8P531A",69,0)=" ;;internist utilizes documented natural therapies, therapeutic lifestyle "
^XTMP("XPDT",7705,"RTN","XU8P531A",70,0)=" ;;changes, patient education and other resources to promote patient health "
^XTMP("XPDT",7705,"RTN","XU8P531A",71,0)=" ;;and avoidance of disease. "
^XTMP("XPDT",7705,"RTN","XU8P531A",72,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531A",73,0)=" ;;Source: American Chiropractic Association, 2008"
^XTMP("XPDT",7705,"RTN","XU8P531A",74,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531A",75,0)="196 ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",76,0)=" ;;Chiropractic Neurology is defined as the field of functional neurology "
^XTMP("XPDT",7705,"RTN","XU8P531A",77,0)=" ;;that engages the internal - and external environment of the individual in "
^XTMP("XPDT",7705,"RTN","XU8P531A",78,0)=" ;;a structured and targeted approach to affect positive changes in the "
^XTMP("XPDT",7705,"RTN","XU8P531A",79,0)=" ;;nervous system and consequently the physiology and behavior of an "
^XTMP("XPDT",7705,"RTN","XU8P531A",80,0)=" ;;individual. Chiropractic Neurologists are board-certified specialists in "
^XTMP("XPDT",7705,"RTN","XU8P531A",81,0)=" ;;non-drug, non-surgical care for those with neurologically based health "
^XTMP("XPDT",7705,"RTN","XU8P531A",82,0)=" ;;problems. There are many conditions people suffer from that are in this "
^XTMP("XPDT",7705,"RTN","XU8P531A",83,0)=" ;;broad category: learning and attention disorders, headaches, vertigo, "
^XTMP("XPDT",7705,"RTN","XU8P531A",84,0)=" ;;pain syndromes, developmental disorders, nerve injury, spinal cord "
^XTMP("XPDT",7705,"RTN","XU8P531A",85,0)=" ;;injury, head injury or stroke, movement disorders, and many other "
^XTMP("XPDT",7705,"RTN","XU8P531A",86,0)=" ;;conditions. "
^XTMP("XPDT",7705,"RTN","XU8P531A",87,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531A",88,0)=" ;;Source: American Chiropractic Neurology Board, 2008 & American "
^XTMP("XPDT",7705,"RTN","XU8P531A",89,0)=" ;;Chiropractic Association, 2008"
^XTMP("XPDT",7705,"RTN","XU8P531A",90,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531A",91,0)="197 ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",92,0)=" ;;Chiropractic Nutrition is that specialty within the chiropractic "
^XTMP("XPDT",7705,"RTN","XU8P531A",93,0)=" ;;profession that deals with the overall factors that affect the patient's "
^XTMP("XPDT",7705,"RTN","XU8P531A",94,0)=" ;;ability to maintain the manipulative correction and thus sustain better "
^XTMP("XPDT",7705,"RTN","XU8P531A",95,0)=" ;;neurological integrity. The Chiropractic Nutrition Specialist will "
^XTMP("XPDT",7705,"RTN","XU8P531A",96,0)=" ;;perform extensive research on the patient's previous health history, "
^XTMP("XPDT",7705,"RTN","XU8P531A",97,0)=" ;;ethnicity, and any family history related to what the patient is being "
^XTMP("XPDT",7705,"RTN","XU8P531A",98,0)=" ;;treated for. Patients fill out questionnaires concerning dietary and "
^XTMP("XPDT",7705,"RTN","XU8P531A",99,0)=" ;;sleep patterns and previous or present symptomology. A nutrition "
^XTMP("XPDT",7705,"RTN","XU8P531A",100,0)=" ;;examination would be performed to assess areas such as absorption rates, "
^XTMP("XPDT",7705,"RTN","XU8P531A",101,0)=" ;;adrenal function, kidney health, lung health etc. The patient is often "
^XTMP("XPDT",7705,"RTN","XU8P531A",102,0)=" ;;instructed on how to check the pH of their saliva and urine, test for the "
^XTMP("XPDT",7705,"RTN","XU8P531A",103,0)=" ;;presence of Candida Albicans, etc., at home. Outside laboratory testing "
^XTMP("XPDT",7705,"RTN","XU8P531A",104,0)=" ;;includes blood, urine, hair analysis, food allergy testing etc. The "
^XTMP("XPDT",7705,"RTN","XU8P531A",105,0)=" ;;patient's prescription and over the counter medications are recorded and "
^XTMP("XPDT",7705,"RTN","XU8P531A",106,0)=" ;;analyzed. "
^XTMP("XPDT",7705,"RTN","XU8P531A",107,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531A",108,0)=" ;;Source: American Chiropractic Association, 2008"
^XTMP("XPDT",7705,"RTN","XU8P531A",109,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531A",110,0)="1153 ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",111,0)=" ;;Health educators work in a variety of settings providing education to "
^XTMP("XPDT",7705,"RTN","XU8P531A",112,0)=" ;;individuals or groups of individuals on healthy behaviors, wellness, and "
^XTMP("XPDT",7705,"RTN","XU8P531A",113,0)=" ;;health-related topics with the goal of preventing diseases and health "
^XTMP("XPDT",7705,"RTN","XU8P531A",114,0)=" ;;problems. Health educators generally require a bachelor's degree and may "
^XTMP("XPDT",7705,"RTN","XU8P531A",115,0)=" ;;receive additional training, such as through mentoring, internships, or "
^XTMP("XPDT",7705,"RTN","XU8P531A",116,0)=" ;;volunteer work."
^XTMP("XPDT",7705,"RTN","XU8P531A",117,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531A",118,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7705,"RTN","XU8P531A",119,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531A",120,0)="1154 ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",121,0)=" ;;A Child Abuse Pediatrician serves as a resource to children, families and "
^XTMP("XPDT",7705,"RTN","XU8P531A",122,0)=" ;;communities by accurately diagnosing abuse; consulting with community "
^XTMP("XPDT",7705,"RTN","XU8P531A",123,0)=" ;;agencies on child safety; providing expertise in courts of law; treating "
^XTMP("XPDT",7705,"RTN","XU8P531A",124,0)=" ;;consequences of abuse and neglect; directing child abuse and neglect "
^XTMP("XPDT",7705,"RTN","XU8P531A",125,0)=" ;;prevention programs and participating on multidisciplinary teams "
^XTMP("XPDT",7705,"RTN","XU8P531A",126,0)=" ;;investigating; and managing child abuse cases."
^XTMP("XPDT",7705,"RTN","XU8P531A",127,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531A",128,0)=" ;;Source: American Board of Medical Specialties, 2009 *** Pending "
^XTMP("XPDT",7705,"RTN","XU8P531A",129,0)=" ;;permission from ABMS"
^XTMP("XPDT",7705,"RTN","XU8P531A",130,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531A",131,0)="1155 ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",132,0)=" ;;Doulas work in a variety of settings and have been trained to provide "
^XTMP("XPDT",7705,"RTN","XU8P531A",133,0)=" ;;physical, emotional, and informational support to a mother before, "
^XTMP("XPDT",7705,"RTN","XU8P531A",134,0)=" ;;during, and just after birth and/or provide emotional and practical "
^XTMP("XPDT",7705,"RTN","XU8P531A",135,0)=" ;;support to a mother during the postpartum period."
^XTMP("XPDT",7705,"RTN","XU8P531A",136,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531A",137,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7705,"RTN","XU8P531A",138,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531A",139,0)="1156 ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",140,0)=" ;;A religious nonmedical practitioner offers spiritually-based care. "
^XTMP("XPDT",7705,"RTN","XU8P531A",141,0)=" ;;Services may be rendered in an office, home, or care facility or by phone,"
^XTMP("XPDT",7705,"RTN","XU8P531A",142,0)=" ;;email, or written correspondence. "
^XTMP("XPDT",7705,"RTN","XU8P531A",143,0)=" ;;"
^XTMP("XPDT",7705,"RTN","XU8P531A",144,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7705,"RTN","XU8P531A",145,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531A",146,0)="1157 ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",147,0)=" ;;Phlebology is the medical discipline that involves the diagnosis and "
^XTMP("XPDT",7705,"RTN","XU8P531A",148,0)=" ;;treatment of venous disorders, including spider veins, varicose veins, "
^XTMP("XPDT",7705,"RTN","XU8P531A",149,0)=" ;;chronic venous insufficiency, venous leg ulcers, congenital venous "
^XTMP("XPDT",7705,"RTN","XU8P531A",150,0)=" ;;abnormalities, venous thromboembolism and other disorders of venous "
^XTMP("XPDT",7705,"RTN","XU8P531A",151,0)=" ;;origin. A phlebologist has attained a minimum of 50 hours of CME units in "
^XTMP("XPDT",7705,"RTN","XU8P531A",152,0)=" ;;phlebology-related courses, and is knowledgeable of and trained in a "
^XTMP("XPDT",7705,"RTN","XU8P531A",153,0)=" ;;variety of diagnostic techniques including physical examination, venous "
^XTMP("XPDT",7705,"RTN","XU8P531A",154,0)=" ;;imaging techniques such as duplex ultrasound, CT and MR, plethysmographic "
^XTMP("XPDT",7705,"RTN","XU8P531A",155,0)=" ;;techniques and laboratory evaluation related to venous thromboembolism. "
^XTMP("XPDT",7705,"RTN","XU8P531A",156,0)=" ;;The phlebologist is also trained in a variety of therapeutic "
^XTMP("XPDT",7705,"RTN","XU8P531A",157,0)=" ;;interventions, which may include compression, sclerotherapy, cutaneous "
^XTMP("XPDT",7705,"RTN","XU8P531A",158,0)=" ;;vascular laser, endovenous thermoablation procedures (laser and "
^XTMP("XPDT",7705,"RTN","XU8P531A",159,0)=" ;;radiofrequency) endovenous chemical ablation, surgical procedures (e.g., "
^XTMP("XPDT",7705,"RTN","XU8P531A",160,0)=" ;;ambulatory phlebectomy, venous ligation), vasoactive medications and the "
^XTMP("XPDT",7705,"RTN","XU8P531A",161,0)=" ;;management of venous thromboembolism.   Source: American College of "
^XTMP("XPDT",7705,"RTN","XU8P531A",162,0)=" ;;Phlebology 12/2006. [1/1/2007: new, 7/1/2009: definition reformatted]"
^XTMP("XPDT",7705,"RTN","XU8P531A",163,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531A",164,0)=" ;;Additional Resources: Training Programs, Fellowships, and/or "
^XTMP("XPDT",7705,"RTN","XU8P531A",165,0)=" ;;Preceptorships: Certification exam is being established by the American "
^XTMP("XPDT",7705,"RTN","XU8P531A",166,0)=" ;;Board of Phlebology. ACGME Accredited Residency Program Requirements: "
^XTMP("XPDT",7705,"RTN","XU8P531A",167,0)=" ;;None"
^XTMP("XPDT",7705,"RTN","XU8P531A",168,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531A",169,0)="1158 ;"
^XTMP("XPDT",7705,"RTN","XU8P531A",170,0)=" ;;A pathologist deals with the causes and nature of disease and contributes "
^XTMP("XPDT",7705,"RTN","XU8P531A",171,0)=" ;;to diagnosis, prognosis and treatment through knowledge gained by the "
^XTMP("XPDT",7705,"RTN","XU8P531A",172,0)=" ;;laboratory application of the biologic, chemical and physical sciences. A "
^XTMP("XPDT",7705,"RTN","XU8P531A",173,0)=" ;;pathologist uses information gathered from the microscopic examination of "
^XTMP("XPDT",7705,"RTN","XU8P531A",174,0)=" ;;tissue specimens, cells and body fluids, and from clinical laboratory "
^XTMP("XPDT",7705,"RTN","XU8P531A",175,0)=" ;;tests on body fluids and secretions for the diagnosis, exclusion and "
^XTMP("XPDT",7705,"RTN","XU8P531A",176,0)=" ;;monitoring of disease.   Source: American Board of Medical Specialties, "
^XTMP("XPDT",7705,"RTN","XU8P531A",177,0)=" ;;2007. www.abms.org [7/1/2007: new, 7/1/2009: definition reformatted]"
^XTMP("XPDT",7705,"RTN","XU8P531A",178,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531A",179,0)=" ;;Additional Resources: American Board of Pathology, 2007. "
^XTMP("XPDT",7705,"RTN","XU8P531A",180,0)=" ;;http://www.abpath.org/"
^XTMP("XPDT",7705,"RTN","XU8P531A",181,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531A",182,0)=" ;;This taxonomy code identifies the combined anatomic ""clinical pathology "
^XTMP("XPDT",7705,"RTN","XU8P531A",183,0)=" ;;only"" route. Board Certification for Medical Doctors (MDs) is provided by "
^XTMP("XPDT",7705,"RTN","XU8P531A",184,0)=" ;;the American Board of Pathology. To acknowledge the diverse activities in "
^XTMP("XPDT",7705,"RTN","XU8P531A",185,0)=" ;;the practice of pathology and to accommodate the interests of individuals "
^XTMP("XPDT",7705,"RTN","XU8P531A",186,0)=" ;;wanting to enter the field, the ABP offers primary certification through "
^XTMP("XPDT",7705,"RTN","XU8P531A",187,0)=" ;;the following three routes: combined anatomic pathology and clinical "
^XTMP("XPDT",7705,"RTN","XU8P531A",188,0)=" ;;pathology, anatomic pathology only and clinical pathology only. Primary "
^XTMP("XPDT",7705,"RTN","XU8P531A",189,0)=" ;;certification in anatomic pathology or clinical pathology may be combined "
^XTMP("XPDT",7705,"RTN","XU8P531A",190,0)=" ;;with some of the subspecialty certifications."
^XTMP("XPDT",7705,"RTN","XU8P531A",191,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B")="0^3^B213709229^n/a"
^XTMP("XPDT",7705,"RTN","XU8P531B",1,0)="XU8P531B ; BP/BDT - Update definition field; 7/8/09"
^XTMP("XPDT",7705,"RTN","XU8P531B",2,0)=" ;;8.0;KERNEL;**531**;Jul 10, 1995;Build 7"
^XTMP("XPDT",7705,"RTN","XU8P531B",3,0)=" ;;""Per VHA Directive 2004-038, this routine should not be modified""."
^XTMP("XPDT",7705,"RTN","XU8P531B",4,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531B",5,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",6,0)="DEF ; Update definitions for entries 200,201,198,199,836,837,864,904,905,910,914,669"
^XTMP("XPDT",7705,"RTN","XU8P531B",7,0)=" N XUI"
^XTMP("XPDT",7705,"RTN","XU8P531B",8,0)=" F XUI=200,201,198,199,836,837,864,904,905,910,914,669 D"
^XTMP("XPDT",7705,"RTN","XU8P531B",9,0)=" . D DEF1(XUI)"
^XTMP("XPDT",7705,"RTN","XU8P531B",10,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531B",11,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",12,0)="DEF1(XUI) ; Update definition for single entry XUI"
^XTMP("XPDT",7705,"RTN","XU8P531B",13,0)=" N XUI1,XUDATA,XUY"
^XTMP("XPDT",7705,"RTN","XU8P531B",14,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7705,"RTN","XU8P531B",15,0)=" F XUY=1:1:100 S XUDATA=$T(@XUI+XUY) Q:XUDATA="" ;;END""  D "
^XTMP("XPDT",7705,"RTN","XU8P531B",16,0)=" . S ^TMP($J,""XUBA"",XUI,XUY,0)=$P(XUDATA,"";;"",2)"
^XTMP("XPDT",7705,"RTN","XU8P531B",17,0)=" S XUI1=XUI_"","""
^XTMP("XPDT",7705,"RTN","XU8P531B",18,0)=" D WP^DIE(8932.1,XUI1,11,""K"",""^TMP($J,""""XUBA"""",XUI)"")"
^XTMP("XPDT",7705,"RTN","XU8P531B",19,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7705,"RTN","XU8P531B",20,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531B",21,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",22,0)="GETDATA ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",23,0)=" N XUI,XUY"
^XTMP("XPDT",7705,"RTN","XU8P531B",24,0)=" F XUI=200,201,198,199,836,837,864,904,905,910,914,669 D"
^XTMP("XPDT",7705,"RTN","XU8P531B",25,0)=" . S XUY=$G(^USC(8932.1,XUI,11,0)),XUY=$P(XUY,""^"",3)"
^XTMP("XPDT",7705,"RTN","XU8P531B",26,0)=" . I XUY>0 D GETDES(XUI,XUY)"
^XTMP("XPDT",7705,"RTN","XU8P531B",27,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531B",28,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",29,0)="GETDES(XUI,XUY) ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",30,0)=" N XUA,XUB"
^XTMP("XPDT",7705,"RTN","XU8P531B",31,0)=" W !,XUI,"" ;"""
^XTMP("XPDT",7705,"RTN","XU8P531B",32,0)=" F XUA=1:1:XUY W !,"" ;;"",$G(^USC(8932.1,XUI,11,XUA,0))"
^XTMP("XPDT",7705,"RTN","XU8P531B",33,0)=" W !,"" ;;END"""
^XTMP("XPDT",7705,"RTN","XU8P531B",34,0)=" Q"
^XTMP("XPDT",7705,"RTN","XU8P531B",35,0)=" ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",36,0)="200 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",37,0)=" ;;Chiropractic radiology is a referral specialty that provides consultation "
^XTMP("XPDT",7705,"RTN","XU8P531B",38,0)=" ;;services at the request of other qualified doctors. Chiropractic "
^XTMP("XPDT",7705,"RTN","XU8P531B",39,0)=" ;;radiologists provide consultation in health care facilities (private "
^XTMP("XPDT",7705,"RTN","XU8P531B",40,0)=" ;;offices, hospitals and teaching institutions) to meet the needs of "
^XTMP("XPDT",7705,"RTN","XU8P531B",41,0)=" ;;referring doctors and their patients. The quality of the consultative "
^XTMP("XPDT",7705,"RTN","XU8P531B",42,0)=" ;;services by the chiropractic radiologist in independent practice is "
^XTMP("XPDT",7705,"RTN","XU8P531B",43,0)=" ;;reflected by the quality of their professional credentials. Chiropractic "
^XTMP("XPDT",7705,"RTN","XU8P531B",44,0)=" ;;radiologists recommend, supervise, and interpret radiologic studies as "
^XTMP("XPDT",7705,"RTN","XU8P531B",45,0)=" ;;well as advanced imaging procedures. They advise referring physicians on "
^XTMP("XPDT",7705,"RTN","XU8P531B",46,0)=" ;;the necessity and appropriateness of radiologic services and whether to "
^XTMP("XPDT",7705,"RTN","XU8P531B",47,0)=" ;;select or to avoid certain diagnostic or clinical procedures. In some "
^XTMP("XPDT",7705,"RTN","XU8P531B",48,0)=" ;;instances the radiologist may act as a private practitioner. They may "
^XTMP("XPDT",7705,"RTN","XU8P531B",49,0)=" ;;conduct research and apply diagnostic radiologic procedures and may be "
^XTMP("XPDT",7705,"RTN","XU8P531B",50,0)=" ;;called upon to act as expert witnesses in matters of litigation. "
^XTMP("XPDT",7705,"RTN","XU8P531B",51,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",52,0)=" ;;Chiropractic radiologists are also concerned with imaging technology "
^XTMP("XPDT",7705,"RTN","XU8P531B",53,0)=" ;;including image production, demonstration of normal and abnormal anatomy, "
^XTMP("XPDT",7705,"RTN","XU8P531B",54,0)=" ;;and the interaction of energy and matter. The advances in the "
^XTMP("XPDT",7705,"RTN","XU8P531B",55,0)=" ;;technological facets of radiology are so rapid that only qualified "
^XTMP("XPDT",7705,"RTN","XU8P531B",56,0)=" ;;radiologists can reasonably be expected to maintain the high level of "
^XTMP("XPDT",7705,"RTN","XU8P531B",57,0)=" ;;proficiency required to supervise and interpret these procedures. The "
^XTMP("XPDT",7705,"RTN","XU8P531B",58,0)=" ;;practice of radiology continuously involves the application of this "
^XTMP("XPDT",7705,"RTN","XU8P531B",59,0)=" ;;technology to patient imaging and treatment. "
^XTMP("XPDT",7705,"RTN","XU8P531B",60,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",61,0)=" ;;It is now well recognized that chiropractic radiology includes, but is "
^XTMP("XPDT",7705,"RTN","XU8P531B",62,0)=" ;;not limited to, plain film radiography, fluoroscopy, tomography, "
^XTMP("XPDT",7705,"RTN","XU8P531B",63,0)=" ;;ultrasonography, radioisotope imaging, computed tomography, digital "
^XTMP("XPDT",7705,"RTN","XU8P531B",64,0)=" ;;radiography, and magnetic resonance imaging. Individual practices may "
^XTMP("XPDT",7705,"RTN","XU8P531B",65,0)=" ;;vary by intent, licensure, and scope of practice laws. "
^XTMP("XPDT",7705,"RTN","XU8P531B",66,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",67,0)=" ;;Source: American Chiropractic Board of Radiology, 2009"
^XTMP("XPDT",7705,"RTN","XU8P531B",68,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B",69,0)="201 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",70,0)=" ;;A sports chiropractor is uniquely trained to provide care and treatment "
^XTMP("XPDT",7705,"RTN","XU8P531B",71,0)=" ;;of injuries or illness resulting from sports and physical fitness "
^XTMP("XPDT",7705,"RTN","XU8P531B",72,0)=" ;;activities. Doctors of Chiropractic with the Diplomate American "
^XTMP("XPDT",7705,"RTN","XU8P531B",73,0)=" ;;Chiropractic Board of Sports Physicians (DACBSP) or the Certified "
^XTMP("XPDT",7705,"RTN","XU8P531B",74,0)=" ;;Chiropractic Sports Physician (CCSP), sport specialty certifications from "
^XTMP("XPDT",7705,"RTN","XU8P531B",75,0)=" ;;the American Chiropractic Board of Sports Physicians, have advanced "
^XTMP("XPDT",7705,"RTN","XU8P531B",76,0)=" ;;training in the assessment, management and rehabilitation of sports "
^XTMP("XPDT",7705,"RTN","XU8P531B",77,0)=" ;;related injuries. Extremity care, rehabilitation and soft tissue "
^XTMP("XPDT",7705,"RTN","XU8P531B",78,0)=" ;;procedures are common skills utilized by these doctors. The specialty "
^XTMP("XPDT",7705,"RTN","XU8P531B",79,0)=" ;;training covers a broad spectrum from the pediatric athlete to "
^XTMP("XPDT",7705,"RTN","XU8P531B",80,0)=" ;;professional and Olympic athletes, and everything in between, using a "
^XTMP("XPDT",7705,"RTN","XU8P531B",81,0)=" ;;variety of techniques and modalities."
^XTMP("XPDT",7705,"RTN","XU8P531B",82,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",83,0)=" ;;Source: American Chiropractic Board of Sports Physicians, 2009"
^XTMP("XPDT",7705,"RTN","XU8P531B",84,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B",85,0)="198 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",86,0)=" ;;Occupational Health is that specialty within the chiropractic profession "
^XTMP("XPDT",7705,"RTN","XU8P531B",87,0)=" ;;that deals with the prevention and management of work related injuries. "
^XTMP("XPDT",7705,"RTN","XU8P531B",88,0)=" ;;It also considers and assists clients with State and Federal Compliance "
^XTMP("XPDT",7705,"RTN","XU8P531B",89,0)=" ;;assistance. Occupational Health goes much farther than simply treating "
^XTMP("XPDT",7705,"RTN","XU8P531B",90,0)=" ;;injured workers however. This may mean working with clients to promote "
^XTMP("XPDT",7705,"RTN","XU8P531B",91,0)=" ;;optimum safety and ergonomic principles, interacting with the injured "
^XTMP("XPDT",7705,"RTN","XU8P531B",92,0)=" ;;worker to promote safety and prevent future injuries, assisting a company "
^XTMP("XPDT",7705,"RTN","XU8P531B",93,0)=" ;;with accident investigation to identify root cause, redesigning a "
^XTMP("XPDT",7705,"RTN","XU8P531B",94,0)=" ;;workstation to eliminate hazards, working with safety teams, providing "
^XTMP("XPDT",7705,"RTN","XU8P531B",95,0)=" ;;training programs etc. The list of potential services that the specialist "
^XTMP("XPDT",7705,"RTN","XU8P531B",96,0)=" ;;can interact with a client company or patient is lengthy and varied "
^XTMP("XPDT",7705,"RTN","XU8P531B",97,0)=" ;;involving both in office services as well as on site services. "
^XTMP("XPDT",7705,"RTN","XU8P531B",98,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",99,0)=" ;;Source: American Chiropractic Association, 2008"
^XTMP("XPDT",7705,"RTN","XU8P531B",100,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B",101,0)="199 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",102,0)=" ;;Chiropractic Orthopedics is defined as that branch of chiropractic "
^XTMP("XPDT",7705,"RTN","XU8P531B",103,0)=" ;;medicine that includes the continued acquisition of knowledge relative to "
^XTMP("XPDT",7705,"RTN","XU8P531B",104,0)=" ;;both normal functions and diseases of the human body as they relate to "
^XTMP("XPDT",7705,"RTN","XU8P531B",105,0)=" ;;the bones, joints, capsules, discs, muscles, ligaments, tendons, their "
^XTMP("XPDT",7705,"RTN","XU8P531B",106,0)=" ;;complete neurological and vascular components, referred organ systems and "
^XTMP("XPDT",7705,"RTN","XU8P531B",107,0)=" ;;contiguous tissues. This also includes the development and perfection of "
^XTMP("XPDT",7705,"RTN","XU8P531B",108,0)=" ;;skills relative to health maintenance when such exists and when not, the "
^XTMP("XPDT",7705,"RTN","XU8P531B",109,0)=" ;;investigations, historical review, physical detection, correlative "
^XTMP("XPDT",7705,"RTN","XU8P531B",110,0)=" ;;diagnosis development and complete management of any disorder within the "
^XTMP("XPDT",7705,"RTN","XU8P531B",111,0)=" ;;bounds defined herein. Also necessary is the delivery of the combined "
^XTMP("XPDT",7705,"RTN","XU8P531B",112,0)=" ;;knowledge and skill on a primary basis to patients who both need and "
^XTMP("XPDT",7705,"RTN","XU8P531B",113,0)=" ;;desire this service to the eventual outcome of remissions, whenever "
^XTMP("XPDT",7705,"RTN","XU8P531B",114,0)=" ;;resolution is not readily achievable. In addition the certified "
^XTMP("XPDT",7705,"RTN","XU8P531B",115,0)=" ;;chiropractic orthopedist provides consultation services at the request of "
^XTMP("XPDT",7705,"RTN","XU8P531B",116,0)=" ;;other qualified doctors seeking assistance in the care of their patients. "
^XTMP("XPDT",7705,"RTN","XU8P531B",117,0)=" ;;The chiropractic orthopedist may also engage in the teaching and or "
^XTMP("XPDT",7705,"RTN","XU8P531B",118,0)=" ;;research of subjects and materials relevant to pursuing the quest for "
^XTMP("XPDT",7705,"RTN","XU8P531B",119,0)=" ;;knowledge in the ever changing field of the orthopedic specialty. "
^XTMP("XPDT",7705,"RTN","XU8P531B",120,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",121,0)=" ;;Source: American Chiropractic Association, 2008"
^XTMP("XPDT",7705,"RTN","XU8P531B",122,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B",123,0)="836 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",124,0)=" ;;A pathologist deals with the causes and nature of disease and contributes "
^XTMP("XPDT",7705,"RTN","XU8P531B",125,0)=" ;;to diagnosis, prognosis and treatment through knowledge gained by the "
^XTMP("XPDT",7705,"RTN","XU8P531B",126,0)=" ;;laboratory application of the biologic, chemical and physical sciences. A "
^XTMP("XPDT",7705,"RTN","XU8P531B",127,0)=" ;;pathologist uses information gathered from the microscopic examination of "
^XTMP("XPDT",7705,"RTN","XU8P531B",128,0)=" ;;tissue specimens, cells and body fluids, and from clinical laboratory "
^XTMP("XPDT",7705,"RTN","XU8P531B",129,0)=" ;;tests on body fluids and secretions for the diagnosis, exclusion and "
^XTMP("XPDT",7705,"RTN","XU8P531B",130,0)=" ;;monitoring of disease.   Source: American Board of Medical Specialties, "
^XTMP("XPDT",7705,"RTN","XU8P531B",131,0)=" ;;2007. [7/1/2007: definition added, source added, 7/1/2009: definition "
^XTMP("XPDT",7705,"RTN","XU8P531B",132,0)=" ;;reformatted]"
^XTMP("XPDT",7705,"RTN","XU8P531B",133,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",134,0)=" ;;Additional Resources: American Board of Pathology, 2007. "
^XTMP("XPDT",7705,"RTN","XU8P531B",135,0)=" ;;http://www.abpath.org/. American Osteopathic Board of Pathology, 2007. "
^XTMP("XPDT",7705,"RTN","XU8P531B",136,0)=" ;;https://www.do-online.org/index.cfm?PageID=edu_main&au=D&SubSubPageID=crt_"
^XTMP("XPDT",7705,"RTN","XU8P531B",137,0)=" ;;speclist&SubPageID=crt_main"
^XTMP("XPDT",7705,"RTN","XU8P531B",138,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",139,0)=" ;;Board certification for Medical Doctors (MDs) is provided by the American "
^XTMP("XPDT",7705,"RTN","XU8P531B",140,0)=" ;;Board of Pathology (note: this taxonomy code identifies the ""anatomic "
^XTMP("XPDT",7705,"RTN","XU8P531B",141,0)=" ;;pathology only"" route). To acknowledge the diverse activities in the "
^XTMP("XPDT",7705,"RTN","XU8P531B",142,0)=" ;;practice of pathology and to accommodate the interests of individuals "
^XTMP("XPDT",7705,"RTN","XU8P531B",143,0)=" ;;wanting to enter the field, the ABP offers primary certification through "
^XTMP("XPDT",7705,"RTN","XU8P531B",144,0)=" ;;the following three routes: combined anatomic pathology and clinical "
^XTMP("XPDT",7705,"RTN","XU8P531B",145,0)=" ;;pathology, anatomic pathology only and clinical pathology only. Primary "
^XTMP("XPDT",7705,"RTN","XU8P531B",146,0)=" ;;certification in anatomic pathology or clinical pathology may be combined "
^XTMP("XPDT",7705,"RTN","XU8P531B",147,0)=" ;;with some of the subspecialty certifications."
^XTMP("XPDT",7705,"RTN","XU8P531B",148,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B",149,0)="837 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",150,0)=" ;;A pathologist deals with the causes and nature of disease and contributes "
^XTMP("XPDT",7705,"RTN","XU8P531B",151,0)=" ;;to diagnosis, prognosis and treatment through knowledge gained by the "
^XTMP("XPDT",7705,"RTN","XU8P531B",152,0)=" ;;laboratory application of the biologic, chemical and physical sciences. A "
^XTMP("XPDT",7705,"RTN","XU8P531B",153,0)=" ;;pathologist uses information gathered from the microscopic examination of "
^XTMP("XPDT",7705,"RTN","XU8P531B",154,0)=" ;;tissue specimens, cells and body fluids, and from clinical laboratory "
^XTMP("XPDT",7705,"RTN","XU8P531B",155,0)=" ;;tests on body fluids and secretions for the diagnosis, exclusion and "
^XTMP("XPDT",7705,"RTN","XU8P531B",156,0)=" ;;monitoring of disease.   Source: American Board of Medical Specialties, "
^XTMP("XPDT",7705,"RTN","XU8P531B",157,0)=" ;;2007. www.abms.org [7/1/2007: definition added, source added, 7/1/2009: "
^XTMP("XPDT",7705,"RTN","XU8P531B",158,0)=" ;;definition reformatted]"
^XTMP("XPDT",7705,"RTN","XU8P531B",159,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",160,0)=" ;;Additional Resources: American Board of Pathology, 2007. "
^XTMP("XPDT",7705,"RTN","XU8P531B",161,0)=" ;;http://www.abpath.org/"
^XTMP("XPDT",7705,"RTN","XU8P531B",162,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",163,0)=" ;;This taxonomy code identifies the combined anatomic pathology & clinical "
^XTMP("XPDT",7705,"RTN","XU8P531B",164,0)=" ;;pathology route. Board certification for Medical Doctors (MDs) is "
^XTMP("XPDT",7705,"RTN","XU8P531B",165,0)=" ;;provided by the American Board of Pathology. To acknowledge the diverse "
^XTMP("XPDT",7705,"RTN","XU8P531B",166,0)=" ;;activities in the practice of pathology and to accommodate the interests "
^XTMP("XPDT",7705,"RTN","XU8P531B",167,0)=" ;;of individuals wanting to enter the field, the ABP offers primary "
^XTMP("XPDT",7705,"RTN","XU8P531B",168,0)=" ;;certification through the following three routes: combined anatomic "
^XTMP("XPDT",7705,"RTN","XU8P531B",169,0)=" ;;pathology and clinical pathology, anatomic pathology only and clinical "
^XTMP("XPDT",7705,"RTN","XU8P531B",170,0)=" ;;pathology only. Primary certification in anatomic pathology or clinical "
^XTMP("XPDT",7705,"RTN","XU8P531B",171,0)=" ;;pathology may be combined with some of the subspecialty certifications."
^XTMP("XPDT",7705,"RTN","XU8P531B",172,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B",173,0)="864 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",174,0)=" ;;A physician who specializes in Sports Medicine is responsible for "
^XTMP("XPDT",7705,"RTN","XU8P531B",175,0)=" ;;continuous care related to the enhancement of health and fitness as well "
^XTMP("XPDT",7705,"RTN","XU8P531B",176,0)=" ;;as the prevention of injury and illness. The specialist possesses "
^XTMP("XPDT",7705,"RTN","XU8P531B",177,0)=" ;;knowledge and experience in the promotion of wellness and the prevention "
^XTMP("XPDT",7705,"RTN","XU8P531B",178,0)=" ;;of injury from many areas of medicine such as exercise physiology, "
^XTMP("XPDT",7705,"RTN","XU8P531B",179,0)=" ;;biomechanics, nutrition, psychology, physical rehabilitation, "
^XTMP("XPDT",7705,"RTN","XU8P531B",180,0)=" ;;epidemiology, physical evaluation and injuries. It is the goal of a "
^XTMP("XPDT",7705,"RTN","XU8P531B",181,0)=" ;;Sports Medicine specialist to improve the healthcare of the individual "
^XTMP("XPDT",7705,"RTN","XU8P531B",182,0)=" ;;engaged in physical exercise."
^XTMP("XPDT",7705,"RTN","XU8P531B",183,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",184,0)=" ;;Source: American Board of Medical Specialties, 2009. www.abms.org"
^XTMP("XPDT",7705,"RTN","XU8P531B",185,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B",186,0)="904 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",187,0)=" ;;A surgeon with expertise in the management of surgical disorders of the "
^XTMP("XPDT",7705,"RTN","XU8P531B",188,0)=" ;;blood vessels, excluding the intracranial vessels or the heart. "
^XTMP("XPDT",7705,"RTN","XU8P531B",189,0)=" ;;Source: American Board of Medical Specialties, 2007. www.abms.org"
^XTMP("XPDT",7705,"RTN","XU8P531B",190,0)=" ;;"
^XTMP("XPDT",7705,"RTN","XU8P531B",191,0)=" ;;Additional Resources: American Board of Surgery, 2007. "
^XTMP("XPDT",7705,"RTN","XU8P531B",192,0)=" ;;http://www.absurgery.org/. American Osteopathic Board of Surgery, 2007. "
^XTMP("XPDT",7705,"RTN","XU8P531B",193,0)=" ;;https://www.do-online.org/index.cfm?PageID=edu_main&au=D&SubSubPageID=crt_"
^XTMP("XPDT",7705,"RTN","XU8P531B",194,0)=" ;;speclist&SubPageID=crt_main"
^XTMP("XPDT",7705,"RTN","XU8P531B",195,0)=" ;;"
^XTMP("XPDT",7705,"RTN","XU8P531B",196,0)=" ;;Board certification for Medical Doctors (MDs) is provided by the American "
^XTMP("XPDT",7705,"RTN","XU8P531B",197,0)=" ;;Board of Surgery. Board certification for Doctors of Osteopathy is "
^XTMP("XPDT",7705,"RTN","XU8P531B",198,0)=" ;;provided by the American Osteopathic Board of Surgery."
^XTMP("XPDT",7705,"RTN","XU8P531B",199,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B",200,0)="905 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",201,0)=" ;;A surgical oncologist is a well-qualified surgeon who has obtained "
^XTMP("XPDT",7705,"RTN","XU8P531B",202,0)=" ;;additional training and experience in the multidisciplinary approach to "
^XTMP("XPDT",7705,"RTN","XU8P531B",203,0)=" ;;the prevention, diagnosis, treatment, and rehabilitation of cancer "
^XTMP("XPDT",7705,"RTN","XU8P531B",204,0)=" ;;patients, and devotes a major portion of his or her professional practice "
^XTMP("XPDT",7705,"RTN","XU8P531B",205,0)=" ;;to these activities and cancer research.   Source: Society of Surgical "
^XTMP("XPDT",7705,"RTN","XU8P531B",206,0)=" ;;Oncology, 2007 [1/1/2008: definition added, source added, 7/1/2009: "
^XTMP("XPDT",7705,"RTN","XU8P531B",207,0)=" ;;definition reformatted]"
^XTMP("XPDT",7705,"RTN","XU8P531B",208,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",209,0)=" ;;Additional Resources: http://www.surgonc.org/ ; American Board of Medical "
^XTMP("XPDT",7705,"RTN","XU8P531B",210,0)=" ;;Specialties, 2007, www.abms.org ; American Board of Surgery, 2007, "
^XTMP("XPDT",7705,"RTN","XU8P531B",211,0)=" ;;http://www.absurgery.org/ "
^XTMP("XPDT",7705,"RTN","XU8P531B",212,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",213,0)=" ;;Surgical oncology is a recognized fellowship subspecialty program of "
^XTMP("XPDT",7705,"RTN","XU8P531B",214,0)=" ;;surgery. Separate board certification is not currently offered."
^XTMP("XPDT",7705,"RTN","XU8P531B",215,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B",216,0)="910 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",217,0)=" ;;Hospitalists are physicians whose primary professional focus is the "
^XTMP("XPDT",7705,"RTN","XU8P531B",218,0)=" ;;general medical care of hospitalized patients. Their activities include "
^XTMP("XPDT",7705,"RTN","XU8P531B",219,0)=" ;;patient care, teaching, research, and leadership related to Hospital "
^XTMP("XPDT",7705,"RTN","XU8P531B",220,0)=" ;;Medicine. The term 'hospitalist' refers to physicians whose practice "
^XTMP("XPDT",7705,"RTN","XU8P531B",221,0)=" ;;emphasizes providing care for hospitalized patients."
^XTMP("XPDT",7705,"RTN","XU8P531B",222,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",223,0)=" ;;Source: American Society of Hospital Medicine, 2007. "
^XTMP("XPDT",7705,"RTN","XU8P531B",224,0)=" ;;http://www.hospitalmedicine.org/"
^XTMP("XPDT",7705,"RTN","XU8P531B",225,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",226,0)=" ;;Additional Resources: Hospitalist is a recognized fellowship specialty "
^XTMP("XPDT",7705,"RTN","XU8P531B",227,0)=" ;;program offered by many medical institutions. There is no board "
^XTMP("XPDT",7705,"RTN","XU8P531B",228,0)=" ;;certification for the specialty at this point."
^XTMP("XPDT",7705,"RTN","XU8P531B",229,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B",230,0)="914 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",231,0)=" ;;Legal Medicine is a special field of medicine that focuses on various "
^XTMP("XPDT",7705,"RTN","XU8P531B",232,0)=" ;;aspects of medicine and law. Historically, the practice of legal medicine "
^XTMP("XPDT",7705,"RTN","XU8P531B",233,0)=" ;;made contributions to medicine as a scientific instrument to solve "
^XTMP("XPDT",7705,"RTN","XU8P531B",234,0)=" ;;criminal perplexities. Since World War II, the domain of legal medicine "
^XTMP("XPDT",7705,"RTN","XU8P531B",235,0)=" ;;has broadened to include not only aspects of medical science to solve "
^XTMP("XPDT",7705,"RTN","XU8P531B",236,0)=" ;;legal and criminal problems but aspects of law as it applies to medicine. "
^XTMP("XPDT",7705,"RTN","XU8P531B",237,0)=" ;;Legal Medicine continues to grow as medicolegal issues like medical "
^XTMP("XPDT",7705,"RTN","XU8P531B",238,0)=" ;;malpractice and liability, government regulation of health care, issues "
^XTMP("XPDT",7705,"RTN","XU8P531B",239,0)=" ;;of tort reform, and moral and ethical complexities presented by "
^XTMP("XPDT",7705,"RTN","XU8P531B",240,0)=" ;;technological advances become increasingly prominent. Many medical "
^XTMP("XPDT",7705,"RTN","XU8P531B",241,0)=" ;;schools have implemented courses which supply medicolegal instruction for "
^XTMP("XPDT",7705,"RTN","XU8P531B",242,0)=" ;;medical students, and many law schools now offer medicolegal courses. "
^XTMP("XPDT",7705,"RTN","XU8P531B",243,0)=" ;;Also, dual degree programs in law and medicine have been created to "
^XTMP("XPDT",7705,"RTN","XU8P531B",244,0)=" ;;assist physicians to bridge the gap between medicine and the law.   "
^XTMP("XPDT",7705,"RTN","XU8P531B",245,0)=" ;;Source: American Board of Legal Medicine 08/1992 [7/1/2009: definition "
^XTMP("XPDT",7705,"RTN","XU8P531B",246,0)=" ;;reformatted]"
^XTMP("XPDT",7705,"RTN","XU8P531B",247,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",248,0)=" ;;Additional Resources: Training Programs, and/or Fellowships, "
^XTMP("XPDT",7705,"RTN","XU8P531B",249,0)=" ;;Preceptorships: Certification available through the American Board of "
^XTMP("XPDT",7705,"RTN","XU8P531B",250,0)=" ;;Legal Medicine. ACGME Accredited Residency Program Requirements: None."
^XTMP("XPDT",7705,"RTN","XU8P531B",251,0)=" ;;END"
^XTMP("XPDT",7705,"RTN","XU8P531B",252,0)="669 ;"
^XTMP("XPDT",7705,"RTN","XU8P531B",253,0)=" ;;Religious nonmedical nursing personnel are experienced in caring for the "
^XTMP("XPDT",7705,"RTN","XU8P531B",254,0)=" ;;physical needs of nonmedical patients. For example, caring for the "
^XTMP("XPDT",7705,"RTN","XU8P531B",255,0)=" ;;physical needs such as assistance with activities of daily living; "
^XTMP("XPDT",7705,"RTN","XU8P531B",256,0)=" ;;assistance with moving, positioning, and ambulation; nutritional needs; "
^XTMP("XPDT",7705,"RTN","XU8P531B",257,0)=" ;;and comfort and support measures."
^XTMP("XPDT",7705,"RTN","XU8P531B",258,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",259,0)=" ;;Source: Centers for Medicare & Medicaid Services"
^XTMP("XPDT",7705,"RTN","XU8P531B",260,0)=" ;; "
^XTMP("XPDT",7705,"RTN","XU8P531B",261,0)=" ;;Additional Resources:"
^XTMP("XPDT",7705,"RTN","XU8P531B",262,0)=" ;;www.cms.hhs.gov/CertificationandComplianc/19_RNHCIs.asp "
^XTMP("XPDT",7705,"RTN","XU8P531B",263,0)=" ;;2005 Code of Federal Regulations, Title 42, Chapter IV, Part 403, Subpart "
^XTMP("XPDT",7705,"RTN","XU8P531B",264,0)=" ;;G, 403.702 Definitions and Terms"
^XTMP("XPDT",7705,"RTN","XU8P531B",265,0)=" ;;END"
^XTMP("XPDT",7705,"VER")="8.0^22.0"
^XTMP("XPDT",7723)="1"
^XTMP("XPDT",7723,"BLD",1223,0)="XWB*1.1*54^RPC BROKER^0^3090824^y"
^XTMP("XPDT",7723,"BLD",1223,1,0)="^^2^2^3090323^"
^XTMP("XPDT",7723,"BLD",1223,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7723,"BLD",1223,1,2,0)="XWB*1.1*54 Handle long parameters in RDV."
^XTMP("XPDT",7723,"BLD",1223,4,0)="^9.64PA^^"
^XTMP("XPDT",7723,"BLD",1223,6)="^41"
^XTMP("XPDT",7723,"BLD",1223,6.3)="5"
^XTMP("XPDT",7723,"BLD",1223,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7723,"BLD",1223,"KRN",.4,0)=".4"
^XTMP("XPDT",7723,"BLD",1223,"KRN",.401,0)=".401"
^XTMP("XPDT",7723,"BLD",1223,"KRN",.402,0)=".402"
^XTMP("XPDT",7723,"BLD",1223,"KRN",.403,0)=".403"
^XTMP("XPDT",7723,"BLD",1223,"KRN",.5,0)=".5"
^XTMP("XPDT",7723,"BLD",1223,"KRN",.84,0)=".84"
^XTMP("XPDT",7723,"BLD",1223,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7723,"BLD",1223,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7723,"BLD",1223,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7723,"BLD",1223,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7723,"BLD",1223,"KRN",9.8,"NM",0)="^9.68A^2^2"
^XTMP("XPDT",7723,"BLD",1223,"KRN",9.8,"NM",1,0)="XWB2HL7^^0^B59516384"
^XTMP("XPDT",7723,"BLD",1223,"KRN",9.8,"NM",2,0)="XWB2HL7A^^0^B24063591"
^XTMP("XPDT",7723,"BLD",1223,"KRN",9.8,"NM","B","XWB2HL7",1)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN",9.8,"NM","B","XWB2HL7A",2)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN",19,0)="19"
^XTMP("XPDT",7723,"BLD",1223,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7723,"BLD",1223,"KRN",101,0)="101"
^XTMP("XPDT",7723,"BLD",1223,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7723,"BLD",1223,"KRN",771,0)="771"
^XTMP("XPDT",7723,"BLD",1223,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7723,"BLD",1223,"KRN",870,0)="870"
^XTMP("XPDT",7723,"BLD",1223,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7723,"BLD",1223,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7723,"BLD",1223,"KRN",8994,0)="8994"
^XTMP("XPDT",7723,"BLD",1223,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",.4,.4)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",.401,.401)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",.402,.402)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",.403,.403)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",.5,.5)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",.84,.84)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",19,19)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",101,101)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",771,771)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",870,870)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",8994,8994)=""
^XTMP("XPDT",7723,"BLD",1223,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7723,"BLD",1223,"QUES",0)="^9.62^^"
^XTMP("XPDT",7723,"BLD",1223,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7723,"BLD",1223,"REQB",1,0)="XWB*1.1*39^0"
^XTMP("XPDT",7723,"BLD",1223,"REQB","B","XWB*1.1*39",1)=""
^XTMP("XPDT",7723,"MBREQ")="0"
^XTMP("XPDT",7723,"PKG",8,-1)="1^1"
^XTMP("XPDT",7723,"PKG",8,0)="RPC BROKER^XWB^Remote Procedure Call Broker^"
^XTMP("XPDT",7723,"PKG",8,20,0)="^9.402P^^"
^XTMP("XPDT",7723,"PKG",8,22,0)="^9.49I^1^1"
^XTMP("XPDT",7723,"PKG",8,22,1,0)="1.1^2970918^2971120^7"
^XTMP("XPDT",7723,"PKG",8,22,1,"PAH",1,0)="54^3090824"
^XTMP("XPDT",7723,"PKG",8,22,1,"PAH",1,1,0)="^^2^2^3090824"
^XTMP("XPDT",7723,"PKG",8,22,1,"PAH",1,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7723,"PKG",8,22,1,"PAH",1,1,2,0)="XWB*1.1*54 Handle long parameters in RDV."
^XTMP("XPDT",7723,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7723,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7723,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7723,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7723,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7723,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7723,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7723,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7723,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7723,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7723,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7723,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7723,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7723,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7723,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7723,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7723,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7723,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7723,"QUES","XPM1","B")=""
^XTMP("XPDT",7723,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7723,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7723,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7723,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7723,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7723,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7723,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7723,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7723,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7723,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7723,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7723,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7723,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7723,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7723,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7723,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7723,"RTN")="2"
^XTMP("XPDT",7723,"RTN","XWB2HL7")="0^1^B59516384^B58790957"
^XTMP("XPDT",7723,"RTN","XWB2HL7",1,0)="XWB2HL7 ;ISF/RWF - Remote RPC via HL7 ;08/24/09  14:32"
^XTMP("XPDT",7723,"RTN","XWB2HL7",2,0)=" ;;1.1;RPC BROKER;**12,18,20,22,27,32,39,54**;Mar 28, 1997;Build 5"
^XTMP("XPDT",7723,"RTN","XWB2HL7",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7723,"RTN","XWB2HL7",4,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",5,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",6,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",7,0)=" ; EN1^XLWB2HL7 is the entry point used by the Broker."
^XTMP("XPDT",7723,"RTN","XWB2HL7",8,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",9,0)=" ; Patch XWB*1.1*27 modified the EN1^XWB2HL7 call point.  However,"
^XTMP("XPDT",7723,"RTN","XWB2HL7",10,0)=" ; the code associated with the original pre-modification version"
^XTMP("XPDT",7723,"RTN","XWB2HL7",11,0)=" ; of the EN1 call point still exists in the XWB2HL7C routine."
^XTMP("XPDT",7723,"RTN","XWB2HL7",12,0)=" ; Please note that when the original EN1 code was moved to XWB2HL7C"
^XTMP("XPDT",7723,"RTN","XWB2HL7",13,0)=" ; it was renamed OLDEN1."
^XTMP("XPDT",7723,"RTN","XWB2HL7",14,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",15,0)="EN1(RET,LOC,RPC,RPCVER,P1,P2,P3,P4,P5,P6,P7,P8,P9,P10) ; Call a remote RPC"
^XTMP("XPDT",7723,"RTN","XWB2HL7",16,0)=" ; with 1-10 parameters."
^XTMP("XPDT",7723,"RTN","XWB2HL7",17,0)=" ; (This reworked EN1 emtry point replaces the original EN1 entry point,"
^XTMP("XPDT",7723,"RTN","XWB2HL7",18,0)=" ; which was renamed OLDEN1.)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",19,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",20,0)=" N I,INX,N,PMAX,RPCIEN,X,XWBDVER,XWBESSO,XWBHDL,XWBHL7,XWBMSG"
^XTMP("XPDT",7723,"RTN","XWB2HL7",21,0)=" N XWBPAR,XWBPCNT,XWBSEC,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK"
^XTMP("XPDT",7723,"RTN","XWB2HL7",22,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",23,0)=" D SETUP(1) I $G(RET(1))'="""" QUIT  ;->"
^XTMP("XPDT",7723,"RTN","XWB2HL7",24,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",25,0)=" ; Queue up request... (OLDEN1 used DIRECT call)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",26,0)=" S ZTSAVE(""*"")="""",ZTRTN=""DEQ^XWB2HL7C"",ZTDTH=$H,ZTIO="""""
^XTMP("XPDT",7723,"RTN","XWB2HL7",27,0)=" S ZTDESC=""RPC Broker queued call from EN1~XWB2HL7"""
^XTMP("XPDT",7723,"RTN","XWB2HL7",28,0)=" D ^%ZTLOAD"
^XTMP("XPDT",7723,"RTN","XWB2HL7",29,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",30,0)=" ; What happened?"
^XTMP("XPDT",7723,"RTN","XWB2HL7",31,0)=" I $G(ZTSK)'>0 S RET(0)=""-1^Failed to task"" QUIT  ;->"
^XTMP("XPDT",7723,"RTN","XWB2HL7",32,0)=" S RET(0)=XWBHDL"
^XTMP("XPDT",7723,"RTN","XWB2HL7",33,0)=" D SETNODE^XWBDRPC(XWBHDL,""TASK"",ZTSK)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",34,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",35,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",36,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",37,0)=" ;This is the Direct HL7 call point"
^XTMP("XPDT",7723,"RTN","XWB2HL7",38,0)="DIRECT(RET,LOC,RPC,RPCVER,P1,P2,P3,P4,P5,P6,P7,P8,P9,P10)  ;Call a remote RPC"
^XTMP("XPDT",7723,"RTN","XWB2HL7",39,0)=" N X,I,INX,N,XWBHL7,XWBPAR,XWBPCNT,XWBDVER,XWBESSO,XWBHDL,PMAX"
^XTMP("XPDT",7723,"RTN","XWB2HL7",40,0)=" N XWBMSG,XWBSEC,RPCIEN"
^XTMP("XPDT",7723,"RTN","XWB2HL7",41,0)=" ;Protect caller from HL7"
^XTMP("XPDT",7723,"RTN","XWB2HL7",42,0)=" N HLMTIEN,HLDOM,HLECH,HLFS,HLINSTN,HLNEXT,HLNODE,HLPARAM,HLQ,HLQUIT"
^XTMP("XPDT",7723,"RTN","XWB2HL7",43,0)=" D SETUP(1) I $G(RET(1))'="""" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",44,0)=" ;(procedurename, query tag, error return, destination, Parameter array)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",45,0)=" D DIRECT^XWB2HL7A(""ZREMOTE RPC"",XWBHDL,.XWBMSG,LOC,.XWBPAR)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",46,0)=" I $P(XWBMSG,U,2) S RET(0)=""-1^""_$P(XWBMSG,""^"",3) Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",47,0)=" I 'HLMTIEN S RET(0)=""-1^No Message returned"" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",48,0)=" D RETURN,RTNDATA^XWBDRPC(.RET,XWBHDL)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",49,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",50,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",51,0)="SETUP(XWBDIR) ;Check/setup for HL7 call"
^XTMP("XPDT",7723,"RTN","XWB2HL7",52,0)=" S RET="""",(XWBPAR,RPCIEN)="""",XWBPCNT=0,XWBDVER=1,RPCVER=$G(RPCVER),PMAX=10"
^XTMP("XPDT",7723,"RTN","XWB2HL7",53,0)=" ;Check that user can access remote system with ESSO"
^XTMP("XPDT",7723,"RTN","XWB2HL7",54,0)=" S XWBESSO=$$GET^XUESSO1 I +XWBESSO<0 S RET(0)="""",RET(1)=XWBESSO Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",55,0)=" ;Check that the link is setup."
^XTMP("XPDT",7723,"RTN","XWB2HL7",56,0)=" I 'XWBDIR,'$$STAT^HLCSLM S RET(0)="""",RET(1)=""-1^Link Manager not running"" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",57,0)=" I '$$CHKLL^HLUTIL(LOC) S RET(0)="""",RET(1)=""-1^Link not setup"" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",58,0)=" ;Find local RPC here"
^XTMP("XPDT",7723,"RTN","XWB2HL7",59,0)=" S RPCIEN=$$RPCIEN^XWBLIB(RPC) I RPCIEN'>0 S RET(0)="""",RET(1)=""-1^No Local RPC"" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",60,0)=" F I=1:1:PMAX Q:'$D(@(""P""_I))  S XWBPCNT=I"
^XTMP("XPDT",7723,"RTN","XWB2HL7",61,0)=" ;Get any security info."
^XTMP("XPDT",7723,"RTN","XWB2HL7",62,0)=" S XWBSEC=3.14"
^XTMP("XPDT",7723,"RTN","XWB2HL7",63,0)=" ;Do parameter conversion"
^XTMP("XPDT",7723,"RTN","XWB2HL7",64,0)=" ;F IX=1:1:XWBPCNT I $G(^XWB(8994,RPCIEN,2,IX,2))]"""" S N=""P""_IX,X=@N,@(N_""=^(2)"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",65,0)=" ;Build value to send"
^XTMP("XPDT",7723,"RTN","XWB2HL7",66,0)=" K XWBPAR S INX=1"
^XTMP("XPDT",7723,"RTN","XWB2HL7",67,0)=" F N=""RPC"",""RPCVER"",""XWBPCNT"",""XWBESSO"",""XWBDVER"",""XWBSEC"" D"
^XTMP("XPDT",7723,"RTN","XWB2HL7",68,0)=" . S XWBPAR(INX)=$$V2S(N)_$$V2S(@N),INX=INX+1"
^XTMP("XPDT",7723,"RTN","XWB2HL7",69,0)=" ;Load parameters into a string"
^XTMP("XPDT",7723,"RTN","XWB2HL7",70,0)=" F I=1:1:PMAX S N=""P""_I Q:'$D(@N)  S X=$$LD(N),XWBPAR(INX)=X,INX=INX+1"
^XTMP("XPDT",7723,"RTN","XWB2HL7",71,0)=" ;Build a handle to link request with return."
^XTMP("XPDT",7723,"RTN","XWB2HL7",72,0)=" S XWBHDL=$$HANDLE^XWBDRPC(),XWBMSG="""" D ADDHDL^XWBDRPC(XWBHDL)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",73,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",74,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",75,0)="LD(%V) ;Convert a var name into a transport string. Grabs from symbol table"
^XTMP("XPDT",7723,"RTN","XWB2HL7",76,0)=" N %1,%2,%3,%4"
^XTMP("XPDT",7723,"RTN","XWB2HL7",77,0)=" I $D(@%V)=1 Q $$V2S(%V)_$$V2S(@%V)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",78,0)=" S %1=$S($D(@%V)#2:$$V2S(N)_$$V2S(@N),1:"""")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",79,0)=" F  S %V=$Q(@%V) Q:%V=""""  S %3=$$V2S(%V),%4=$$V2S(@%V) S:$L(%1)+$L(%3)+$L(%4)>245 XWBPAR(INX)=%1,INX=INX+1,%1="""" S %1=%1_%3_%4"
^XTMP("XPDT",7723,"RTN","XWB2HL7",80,0)=" Q %1"
^XTMP("XPDT",7723,"RTN","XWB2HL7",81,0)="V2S(V) ;Convert a value into L_value string"
^XTMP("XPDT",7723,"RTN","XWB2HL7",82,0)=" Q $E(1000+$L(V),2,4)_V"
^XTMP("XPDT",7723,"RTN","XWB2HL7",83,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",84,0)="S2V(S) ;Convert a string L_value into a value"
^XTMP("XPDT",7723,"RTN","XWB2HL7",85,0)=" N D,L S L=+$E(S,1,3),D="""""
^XTMP("XPDT",7723,"RTN","XWB2HL7",86,0)=" S:L D=$E(S,4,3+L) S S=$E(S,4+L,999)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",87,0)=" Q D"
^XTMP("XPDT",7723,"RTN","XWB2HL7",88,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",89,0)="UD(%1) ;Unload strings into variables. Builds symbol table"
^XTMP("XPDT",7723,"RTN","XWB2HL7",90,0)=" N %"
^XTMP("XPDT",7723,"RTN","XWB2HL7",91,0)=" F  Q:%1=""""  S %=$$S2V(.%1),@%=$$S2V(.%1)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",92,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",93,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",94,0)=" ;This is called by HL7 to process a RPC on the remote system."
^XTMP("XPDT",7723,"RTN","XWB2HL7",95,0)=" ;Call parameters"
^XTMP("XPDT",7723,"RTN","XWB2HL7",96,0)=" ; 1. return the $NAME for the data"
^XTMP("XPDT",7723,"RTN","XWB2HL7",97,0)=" ; 2. query tag"
^XTMP("XPDT",7723,"RTN","XWB2HL7",98,0)=" ; 3. remote procedure name"
^XTMP("XPDT",7723,"RTN","XWB2HL7",99,0)=" ; 4. parameter array"
^XTMP("XPDT",7723,"RTN","XWB2HL7",100,0)="REMOTE(XWBY,XWBQT,XWBSPN,XWBPAR) ;Entry point on Remote system"
^XTMP("XPDT",7723,"RTN","XWB2HL7",101,0)=" ;XWBY is the return data"
^XTMP("XPDT",7723,"RTN","XWB2HL7",102,0)=" ;DUZ is NEWed to protect HL7"
^XTMP("XPDT",7723,"RTN","XWB2HL7",103,0)=" N %,I,X,Y,ERR,RPC,P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,XWBPCNT,XWBDVER,XWBRPC"
^XTMP("XPDT",7723,"RTN","XWB2HL7",104,0)=" N RPC,RPCVER,XWBESSO,DUZ,$ESTACK,$ETRAP"
^XTMP("XPDT",7723,"RTN","XWB2HL7",105,0)=" N XWBA1,XWBA2,XWBA3,XWBA4,XWBA5,XWBA6,XWBA7,XWBA8,XWBA9,XWBA10"
^XTMP("XPDT",7723,"RTN","XWB2HL7",106,0)=" ;Set local error trap"
^XTMP("XPDT",7723,"RTN","XWB2HL7",107,0)=" S $ETRAP=""D ETRAP^XWB2HL7"""
^XTMP("XPDT",7723,"RTN","XWB2HL7",108,0)=" ;See that leftover data in XUTL won't cause problems with %ZIS & HOME"
^XTMP("XPDT",7723,"RTN","XWB2HL7",109,0)=" K ^XUTL(""XQ"",$J,""IO"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",110,0)=" ;Expand parameters into values"
^XTMP("XPDT",7723,"RTN","XWB2HL7",111,0)=" F I=1:1 Q:'$D(XWBPAR(I))  D UD(XWBPAR(I)_$G(XWBPAR(I,1))) ;p54"
^XTMP("XPDT",7723,"RTN","XWB2HL7",112,0)=" I '$D(RPC) S XWBY(0)=""-1^Bad Message"" G REX ;Bad msg"
^XTMP("XPDT",7723,"RTN","XWB2HL7",113,0)=" S XWBRPC=0,XWBRPC=$$RPCGET(RPC,.XWBRPC) I XWBRPC'>0 S XWBY(0)=""-1^RPC name not found"" G REX"
^XTMP("XPDT",7723,"RTN","XWB2HL7",114,0)=" I '$$RPCAVAIL^XWBLIB(XWBRPC,""R"",RPCVER) S XWBY(0)=""-1^RPC Access Blocked/Wrong Version at Remote Site"" G REX"
^XTMP("XPDT",7723,"RTN","XWB2HL7",115,0)=" ;Check any security info."
^XTMP("XPDT",7723,"RTN","XWB2HL7",116,0)=" ;I $D(XWBSEC),XWBSEC'=3.14 S XWBY(0)=""-1^Invalid security"" G REX"
^XTMP("XPDT",7723,"RTN","XWB2HL7",117,0)=" ;Check and Setup the user"
^XTMP("XPDT",7723,"RTN","XWB2HL7",118,0)=" D  I $G(XWBY(0))<0 G REX"
^XTMP("XPDT",7723,"RTN","XWB2HL7",119,0)=" . I XWBRPC(""USER"")=1 S DUZ=.5,DUZ(0)="""" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",120,0)=" . I '$$PUT^XUESSO1(XWBESSO) S XWBY(0)=""-1^Bad User"""
^XTMP("XPDT",7723,"RTN","XWB2HL7",121,0)=" ;Enter in Sign-on log"
^XTMP("XPDT",7723,"RTN","XWB2HL7",122,0)=" D GETENV^%ZOSV S XWBSTATE(""SLOG"")=$$SLOG^XUS1($P(Y,U,2),,"""",$P(Y,U),$P(Y,U,3),$P(XWBESSO,U,3),$P(XWBESSO,U,5))"
^XTMP("XPDT",7723,"RTN","XWB2HL7",123,0)=" ;Do parameter conversion"
^XTMP("XPDT",7723,"RTN","XWB2HL7",124,0)=" ;F IX=1:1:XWBPCNT I $G(^XWB(8994,XWBRPC,2,IX,3))]"""" S N=""P""_IX,X=@N,@(N_""=^(3)"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",125,0)=" S PAR=$$PARAM"
^XTMP("XPDT",7723,"RTN","XWB2HL7",126,0)=" ;Save HL7 device"
^XTMP("XPDT",7723,"RTN","XWB2HL7",127,0)=" I $L($G(IO)) S IO(1,IO)="""",IO(0)=IO D SAVDEV^%ZISUTL(""HL7HOME"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",128,0)=" ;Result returned in XWBY"
^XTMP("XPDT",7723,"RTN","XWB2HL7",129,0)=" D CAPI(XWBRPC(""RTAG""),XWBRPC(""RNAM""),PAR)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",130,0)=" ;Restore HL7 Device"
^XTMP("XPDT",7723,"RTN","XWB2HL7",131,0)=" D USE^%ZISUTL(""HL7HOME""),RMDEV^%ZISUTL(""HL7HOME"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",132,0)="REX ;Exit from remote."
^XTMP("XPDT",7723,"RTN","XWB2HL7",133,0)=" ;What to do to data in XWBY for HL7 return."
^XTMP("XPDT",7723,"RTN","XWB2HL7",134,0)=" K ^TMP(""XWBR"",$J)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",135,0)=" I '$D(XWBY) S XWBY(0)=""-1^Application failed to return any data"""
^XTMP("XPDT",7723,"RTN","XWB2HL7",136,0)=" I $D(XWBY)>9 D"
^XTMP("XPDT",7723,"RTN","XWB2HL7",137,0)=" . M ^TMP(""XWBR"",$J)=XWBY K XWBY S XWBY=$NA(^TMP(""XWBR"",$J))"
^XTMP("XPDT",7723,"RTN","XWB2HL7",138,0)=" I $D(XWBY)=1,$E(XWBY)'=""^"" D"
^XTMP("XPDT",7723,"RTN","XWB2HL7",139,0)=" . S ^TMP(""XWBR"",$J,0)=XWBY K XWBY S XWBY=$NA(^TMP(""XWBR"",$J))"
^XTMP("XPDT",7723,"RTN","XWB2HL7",140,0)=" ;If XWBY is a $NA value just return it."
^XTMP("XPDT",7723,"RTN","XWB2HL7",141,0)=" I $D(XWBSTATE(""SLOG"")) D LOUT^XUSCLEAN(XWBSTATE(""SLOG""))"
^XTMP("XPDT",7723,"RTN","XWB2HL7",142,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",143,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",144,0)="CAPI(TAG,NAM,PAR) ;make API call"
^XTMP("XPDT",7723,"RTN","XWB2HL7",145,0)=" ;DUZ was setup in Remote"
^XTMP("XPDT",7723,"RTN","XWB2HL7",146,0)=" N HL,HLA,HLERR,HLL,HLMTIENS,IO,R,$ES,$ET ;p39"
^XTMP("XPDT",7723,"RTN","XWB2HL7",147,0)=" S $ET=""D CAPIER^XWB2HL7"""
^XTMP("XPDT",7723,"RTN","XWB2HL7",148,0)=" S R=TAG_""^""_NAM_""(.XWBY""_$S(PAR="""":"")"",1:"",""_PAR_"")"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",149,0)=" ;Ready to call RPC?  Setup the Null device"
^XTMP("XPDT",7723,"RTN","XWB2HL7",150,0)=" S IOP=""NULL"",%ZIS=""H0N"" D ^%ZIS"
^XTMP("XPDT",7723,"RTN","XWB2HL7",151,0)=" D @R"
^XTMP("XPDT",7723,"RTN","XWB2HL7",152,0)=" ;Close the NULL device"
^XTMP("XPDT",7723,"RTN","XWB2HL7",153,0)=" S IO(""C"")=1 D ^%ZISC"
^XTMP("XPDT",7723,"RTN","XWB2HL7",154,0)=" ;Return data is in XWBY."
^XTMP("XPDT",7723,"RTN","XWB2HL7",155,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",156,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",157,0)="CAPIER ;Handle a error in called RPC"
^XTMP("XPDT",7723,"RTN","XWB2HL7",158,0)=" S XWBY(0)=""-1^Remote Error: ""_$E($$EC^%ZOSV,1,200) ;Grab the error first"
^XTMP("XPDT",7723,"RTN","XWB2HL7",159,0)=" D ^%ZTER ;record"
^XTMP("XPDT",7723,"RTN","XWB2HL7",160,0)=" S IO(""C"")=1 D ^%ZISC ;Close the NULL device"
^XTMP("XPDT",7723,"RTN","XWB2HL7",161,0)=" D UNWIND^%ZTER ;Unwind stack and return to HL7"
^XTMP("XPDT",7723,"RTN","XWB2HL7",162,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",163,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",164,0)="RETURN ;This tag is called by HL7 when the data returns from the remote system"
^XTMP("XPDT",7723,"RTN","XWB2HL7",165,0)=" ;Need to get the MSG id that we added so we know where to place the"
^XTMP("XPDT",7723,"RTN","XWB2HL7",166,0)=" ;results. Set in XWB RPC SERVER SEND protocol."
^XTMP("XPDT",7723,"RTN","XWB2HL7",167,0)=" N $ES,$ETRAP S $ETRAP=""D ^%ZTER D UNWIND^%ZTER"""
^XTMP("XPDT",7723,"RTN","XWB2HL7",168,0)=" N XWBHDL,XWB1,XWB2,I,J,X"
^XTMP("XPDT",7723,"RTN","XWB2HL7",169,0)=" Q:'$D(HLNEXT)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",170,0)=" ;Now to find the MSA line"
^XTMP("XPDT",7723,"RTN","XWB2HL7",171,0)=" F I=1:1 X HLNEXT Q:HLQUIT'>0  S X(I)=HLNODE Q:""MSA""=$E(HLNODE,1,3)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",172,0)=" I HLNODE'[""MSA"" Q  ;Something wrong"
^XTMP("XPDT",7723,"RTN","XWB2HL7",173,0)=" I $P(HLNODE,U,2)'=""AA"" G REJECT"
^XTMP("XPDT",7723,"RTN","XWB2HL7",174,0)=" ;Now to find the QAK line"
^XTMP("XPDT",7723,"RTN","XWB2HL7",175,0)=" F I=I+1:1 X HLNEXT Q:HLQUIT'>0  S X(I)=HLNODE Q:""QAK""=$E(HLNODE,1,3)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",176,0)=" I HLNODE'[""QAK"" Q  ;Something wrong"
^XTMP("XPDT",7723,"RTN","XWB2HL7",177,0)=" ;Get the handle"
^XTMP("XPDT",7723,"RTN","XWB2HL7",178,0)=" S XWBHDL=$P(HLNODE,""^"",2)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",179,0)=" Q:$$CHKHDL^XWBDRPC(XWBHDL)[""-1""  ;XTMP missing"
^XTMP("XPDT",7723,"RTN","XWB2HL7",180,0)=" ;Now to place the data"
^XTMP("XPDT",7723,"RTN","XWB2HL7",181,0)=" F I=1:1 X HLNEXT Q:HLQUIT'>0  D:$E(HLNODE,1,3)=""RDT"""
^XTMP("XPDT",7723,"RTN","XWB2HL7",182,0)=" . S X=$E(HLNODE,5,999),J=0 F  S J=$O(HLNODE(J)) Q:'J  S X=X_HLNODE(J)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",183,0)=" . D PLACE(XWBHDL,X)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",184,0)=" . Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",185,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",186,0)=" S X=$$HDLSTA^XWBDRPC(XWBHDL,""1^Done"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",187,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",188,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",189,0)="REJECT ;Handle some kind of reject on remote system"
^XTMP("XPDT",7723,"RTN","XWB2HL7",190,0)=" N HDL,MID,MSG,X"
^XTMP("XPDT",7723,"RTN","XWB2HL7",191,0)=" S HDL=""XWBDRPC"",MID=$P(HLNODE,U,3),MSG=""-1^""_$P(HLNODE,U,4) ;Save reason"
^XTMP("XPDT",7723,"RTN","XWB2HL7",192,0)=" F  S HDL=$O(^XTMP(HDL)),X="""" Q:HDL'[""XWBDRPC""  S X=$$GETNODE^XWBDRPC(HDL,""MSGID"") Q:X=MID"
^XTMP("XPDT",7723,"RTN","XWB2HL7",193,0)=" Q:X=""""  ;Didn't find Handle"
^XTMP("XPDT",7723,"RTN","XWB2HL7",194,0)=" S X=$$HDLSTA^XWBDRPC(HDL,MSG)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",195,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",196,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",197,0)="PLACE(HL,DATA) ;Called by HL7 to place each line of data."
^XTMP("XPDT",7723,"RTN","XWB2HL7",198,0)=" N IX"
^XTMP("XPDT",7723,"RTN","XWB2HL7",199,0)=" S IX=+$G(^XTMP(HL,""CNT"")),^XTMP(HL,""D"",IX)=DATA,^XTMP(HL,""CNT"")=IX+1 ;p32"
^XTMP("XPDT",7723,"RTN","XWB2HL7",200,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",201,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",202,0)="RPCGET(N,R) ;Convert RPC name to IEN and parameters."
^XTMP("XPDT",7723,"RTN","XWB2HL7",203,0)=" N T,T0"
^XTMP("XPDT",7723,"RTN","XWB2HL7",204,0)=" S T=$G(N) Q:T="""" ""-1^No RPC name"""
^XTMP("XPDT",7723,"RTN","XWB2HL7",205,0)=" S T=$$RPCIEN^XWBLIB(T) Q:T'>0 ""-1^Bad RPC name"""
^XTMP("XPDT",7723,"RTN","XWB2HL7",206,0)=" Q:'$D(R) T"
^XTMP("XPDT",7723,"RTN","XWB2HL7",207,0)=" S T0=$G(^XWB(8994,T,0)),R(""IEN"")=T,R(""NAME"")=$P(T0,""^"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",208,0)=" S R(""RTAG"")=$P(T0,""^"",2),R(""RNAM"")=$P(T0,""^"",3)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",209,0)=" S R(""XWBPTYPE"")=$P(T0,""^"",4),R(""XWBWRAP"")=$P(T0,""^"",8),R(""USER"")=$P(T0,""^"",10)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",210,0)=" ;S XWBPCNT=0 F I=0:0 S I=$O(^XWB(8994,T,1,I)) Q:I'>0  S XWBPCNT=XWBPCNT+1"
^XTMP("XPDT",7723,"RTN","XWB2HL7",211,0)=" Q T"
^XTMP("XPDT",7723,"RTN","XWB2HL7",212,0)="PARAM() ;Build remote parameter list"
^XTMP("XPDT",7723,"RTN","XWB2HL7",213,0)=" N I,%,X,A S X="""""
^XTMP("XPDT",7723,"RTN","XWB2HL7",214,0)=" F I=1:1:XWBPCNT S %=""P""_I,A=""XWBA""_I Q:'$D(@%)  K @A D"
^XTMP("XPDT",7723,"RTN","XWB2HL7",215,0)=" . I $D(@%)=1 S X=X_%_"","" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",216,0)=" . S X=X_"".""_A_"","" M @A=@% Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",217,0)=" Q $E(X,1,$L(X)-1)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",218,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",219,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",220,0)="RPCCHK(RET,HDL) ;RPC call to check a handle status"
^XTMP("XPDT",7723,"RTN","XWB2HL7",221,0)=" N S,M,Z"
^XTMP("XPDT",7723,"RTN","XWB2HL7",222,0)=" I $G(HDL)="""" S RET(0)=""-1^Bad Handle"" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",223,0)=" S RET(0)=$$CHKHDL^XWBDRPC(HDL),S=$$GETNODE(HDL,""MSGID"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",224,0)=" I RET(0)'[""Done"",$L(S) D  S $P(RET(1),""^"",3)=Z"
^XTMP("XPDT",7723,"RTN","XWB2HL7",225,0)=" . S RET(1)=$$MSGSTAT^HLUTIL(S),M=+RET(1),Z="""""
^XTMP("XPDT",7723,"RTN","XWB2HL7",226,0)=" . I M=1 S Z=$S($P(RET(1),""^"",5)>1:""NOT first in queue"",1:""First in queue"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",227,0)=" . I M=1.5 S Z=""Opening connection""_$S($P(RET(1),""^"",6):"", open failed ""_$P(RET(1),""^"",6)_"" times."",1:"""")"
^XTMP("XPDT",7723,"RTN","XWB2HL7",228,0)=" . I M=1.7 S Z=""Sent, awaiting responce"""
^XTMP("XPDT",7723,"RTN","XWB2HL7",229,0)=" . I M=2 S Z=""Awaiting application ACK"""
^XTMP("XPDT",7723,"RTN","XWB2HL7",230,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7",231,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",232,0)="GETNODE(%1,%2) ;Pass to XWBDRPC"
^XTMP("XPDT",7723,"RTN","XWB2HL7",233,0)=" Q $$GETNODE^XWBDRPC(%1,%2)"
^XTMP("XPDT",7723,"RTN","XWB2HL7",234,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7",235,0)="ETRAP ;Handle errors in the RPC at the remote site."
^XTMP("XPDT",7723,"RTN","XWB2HL7",236,0)=" K ^TMP(""XWBR"",$J),XWBY"
^XTMP("XPDT",7723,"RTN","XWB2HL7",237,0)=" S ^TMP(""XWBR"",$J,0)=""-1^Trapped Error at remote site.  ""_$$EC^%ZOSV,XWBY=$NA(^TMP(""XWBR"",$J))"
^XTMP("XPDT",7723,"RTN","XWB2HL7",238,0)=" S XWBY=$NA(^TMP(""XWBR"",$J)) ;Setup the return data."
^XTMP("XPDT",7723,"RTN","XWB2HL7",239,0)=" ;Record the error, and exit to caller"
^XTMP("XPDT",7723,"RTN","XWB2HL7",240,0)=" D ^%ZTER,UNWIND^%ZTER"
^XTMP("XPDT",7723,"RTN","XWB2HL7",241,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A")="0^2^B24063591^B23859514"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",1,0)="XWB2HL7A ;;ISF/AC - Remote RPCs via HL7. ;03/26/09  16:22"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",2,0)=" ;;1.1;RPC BROKER;**12,54**;Mar 28, 1997;Build 5"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7723,"RTN","XWB2HL7A",4,0)="RPCINFO ;RPC Information"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",5,0)=" ;Msg Type: SPQ - stored procedure request (event Q01)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",6,0)=" ;--------------"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",7,0)=" ;MSH Message Header"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",8,0)=" ;SPR Store Procedure Request"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",9,0)=" ;    Query Tag^Query/Response Format Code^Stored Proc Name^Param List"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",10,0)=" ;[ RDF ] Table Row Definition"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",11,0)=" ;        # of Columns per Row^Column Description"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",12,0)=" ;[ DSC ] Continuation Pointer"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",13,0)=" ;--------------"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",14,0)=" ;Response Msg Type: TBR - tabular data response"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",15,0)=" ;--------------"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",16,0)=" ;MSH Message Header"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",17,0)=" ;MSA Message Acknowledgment"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",18,0)=" ;[ERR] Error"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",19,0)=" ;QAK Query Acknowledgment"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",20,0)=" ;RDF Table Row Definition"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",21,0)=" ;        # of Columns per Row^Column Description"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",22,0)=" ;{ RDT } Table Row Data"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",23,0)=" ;        Column Value"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",24,0)=" ;[ DSC ] Continuation Pointer"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",25,0)=" ;-------------"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",26,0)="DIRECT(XWB2SPN,XWB2HNDL,XWB2RET,XWB2DEST,XWB2PRAM,XWB2PARY) ;DIR RPC CALL"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",27,0)=" N XWB2DRCT"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",28,0)=" S XWB2DRCT=1"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",29,0)=" G D2"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",30,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",31,0)=" ;-------------"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",32,0)=" ;This is where the RPC calls to send the RPC to the remote system"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",33,0)=" ;(procedurename, query tag, error return, destination, Parameter array)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",34,0)="CALL(XWB2SPN,XWB2HNDL,XWB2RET,XWB2DEST,XWB2PRAM,XWB2PARY) ;RPC CALL"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",35,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",36,0)="D2 N I,J,HL,HLA,HLL,XWB2LSTI,HLERR,XWB2EMAP,XWB2FLD,XWB2LPRM,XWB2MAP2,XWB2PARM,XWB2QTAG,XWB2SPRL,XWB2SPR,XWB2X,XWB2EID,XWB2MIEN,XWB2OVFL,XWB2RSLT,Y"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",37,0)=" S XWB2QTAG=$G(XWB2HNDL)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",38,0)=" S XWB2SPN=$G(XWB2SPN)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",39,0)=" S XWB2FLD=""@SPR.4.2"""
^XTMP("XPDT",7723,"RTN","XWB2HL7A",40,0)=" S (XWB2RET,XWB2PARM)="""""
^XTMP("XPDT",7723,"RTN","XWB2HL7A",41,0)=" D BLDDIST($G(XWB2DEST))"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",42,0)=" I '$O(HLL(""LINKS"",0)) S $P(XWB2RET,""^"",2,3)=""-1^Station # not found"" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",43,0)=" S XWB2EID=+$$FIND1^DIC(101,,""MX"",""XWB RPC EVENT"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",44,0)=" I 'XWB2EID S $P(XWB2RET,""^"",2,3)=""-1^RPC Broker Protocol not setup"" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",45,0)=" D INIT^HLFNC2(.XWB2EID,.HL)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",46,0)=" I $O(HL(""""))']"""" S $P(XWB2RET,""^"",2,3)=""-1^RPC Broker Params not setup"" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",47,0)=" ;XWB2EMAP=encoding characters to map by order."
^XTMP("XPDT",7723,"RTN","XWB2HL7A",48,0)=" ;XWB2MAP2=escaped characters used for mapping encoding characters."
^XTMP("XPDT",7723,"RTN","XWB2HL7A",49,0)=" S Y="""""
^XTMP("XPDT",7723,"RTN","XWB2HL7A",50,0)=" F I=3,0,1,2,4 S Y=Y_$S(I:$E(HL(""ECH""),I),1:HL(""FS""))"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",51,0)=" S XWB2EMAP=Y,XWB2MAP2=""EFSRT"""
^XTMP("XPDT",7723,"RTN","XWB2HL7A",52,0)=" F I=0:0 S I=$O(XWB2PRAM(I)) Q:I'>0!$P(XWB2RET,""^"",2)  D"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",53,0)=" .I $L(XWB2PRAM(I))>255 S $P(XWB2RET,""^"",2,3)=""-1^RPC Parameter(s) exceed length of 255."" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",54,0)=" .S XWB2PRAM(I)=$$XLATE(XWB2PRAM(I),.XWB2OVFL)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",55,0)=" .S J=0"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",56,0)=" .I $O(XWB2OVFL(0)) D  K XWB2OVFL"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",57,0)=" ..F K=1,2 I $D(XWB2OVFL(K)) D"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",58,0)=" ...S XWB2PRAM(I,(K/10))=XWB2OVFL(1)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",59,0)=" ...S J=(K/10) K XWB2OVFL(K)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",60,0)=" .F  S J=$O(XWB2PRAM(I,J)) Q:J'>0!$P(XWB2RET,""^"",2)  D"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",61,0)=" ..I $L(XWB2PRAM(I))>255 S $P(XWB2RET,""^"",2,3)=""-1^RPC Parameter(s) exceed length of 255."" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",62,0)=" ..S XWB2PRAM(I,J)=$$XLATE(XWB2PRAM(I,J),.XWB2OVFL)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",63,0)=" ..I $O(XWB2OVFL(0)) D  K XWB2OVFL"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",64,0)=" ...F K=1,2 I $D(XWB2OVFL(K)) D"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",65,0)=" ....S XWB2PRAM(I,J+(K/10))=XWB2OVFL(1)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",66,0)=" ....S J=J+(K/10) K XWB2OVFL(K)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",67,0)=" I $P(XWB2RET,""^"",2) Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",68,0)=" D RPCSEND"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",69,0)=" M XWB2RET=XWB2RSLT ;Move the return info into return var."
^XTMP("XPDT",7723,"RTN","XWB2HL7A",70,0)="CALLXIT ;Cleanup before exit."
^XTMP("XPDT",7723,"RTN","XWB2HL7A",71,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",72,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",73,0)="RPCSEND ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",74,0)=" N I,J"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",75,0)=" S HLA(""HLS"",1)=""SPR""_HL(""FS"")_XWB2QTAG_HL(""FS"")_""T""_HL(""FS"")_XWB2SPN_HL(""FS"")_XWB2FLD_$E(HL(""ECH""))"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",76,0)=" S XWB2SPRL=$L(HLA(""HLS"",1)),XWB2SPR=$NA(HLA(""HLS"",1))"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",77,0)=" S I=$O(XWB2PRAM(0)) Q:I'>0  D"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",78,0)=" .S XWB2LSTI=I,XWB2X=XWB2PRAM(I)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",79,0)=" .I (XWB2SPRL+$L(XWB2X))>255!$O(XWB2PRAM(I,0)) D NXTNODE"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",80,0)=" .S @XWB2SPR=@XWB2SPR_XWB2X,XWB2SPRL=$L(@XWB2SPR)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",81,0)=" .F J=0:0 S J=$O(XWB2PRAM(I,J)) Q:J'>0  D"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",82,0)=" ..S XWB2X=XWB2PRAM(I,J)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",83,0)=" ..D NXTNODE"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",84,0)=" ..S @XWB2SPR=@XWB2SPR_XWB2X,XWB2SPRL=$L(@XWB2SPR)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",85,0)=" ..Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",86,0)=" F  S I=$O(XWB2PRAM(I)) Q:I'>0  D"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",87,0)=" .S XWB2X=XWB2PRAM(I)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",88,0)=" .I (XWB2SPRL+$L(XWB2X)+1)>255!$O(XWB2PRAM(I,0)) D NXTNODE"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",89,0)=" .S @XWB2SPR=@XWB2SPR_$E(HL(""ECH""),4)_XWB2X,XWB2SPRL=$L(@XWB2SPR)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",90,0)=" .F J=0:0 S J=$O(XWB2PRAM(I,J)) Q:J'>0  D"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",91,0)=" ..S XWB2X=XWB2PRAM(I,J)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",92,0)=" ..D NXTNODE"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",93,0)=" ..S @XWB2SPR=@XWB2SPR_XWB2X,XWB2SPRL=$L(@XWB2SPR)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",94,0)=" ..Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",95,0)=" S HLA(""HLS"",2)=""RDF""_HL(""FS"")_""1""_HL(""FS"")_""@DSP.3""_$E(HL(""ECH""))_""TX""_$E(HL(""ECH""))_""300"""
^XTMP("XPDT",7723,"RTN","XWB2HL7A",96,0)=" I $D(XWB2DRCT) D DIRECT^HLMA(XWB2EID,""LM"",1,.XWB2RSLT) Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",97,0)=" D GENERATE^HLMA(XWB2EID,""LM"",1,.XWB2RSLT,.XWB2MIEN)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",98,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",99,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",100,0)="NXTNODE ;Get next node"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",101,0)=" N XWB2QL,XWB2QS"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",102,0)=" S XWB2QL=$QL($NA(@XWB2SPR))"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",103,0)=" I XWB2QL=2 S XWB2SPR=$NA(@XWB2SPR@(1)),@XWB2SPR="""" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",104,0)=" I XWB2QL=3 D  Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",105,0)=" .S XWB2QS=+$QS($NA(@XWB2SPR),3)+1"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",106,0)=" .S XWB2SPR=$NA(@$NA(@XWB2SPR,2)@(XWB2QS)),@XWB2SPR="""""
^XTMP("XPDT",7723,"RTN","XWB2HL7A",107,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",108,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",109,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",110,0)="BLDDIST(X) ;Build distribution list -- HLL(""LINKS"") ARRAY."
^XTMP("XPDT",7723,"RTN","XWB2HL7A",111,0)=" N %,XWB2LIST"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",112,0)=" D LINK^HLUTIL3(X,.XWB2LIST,""I"")"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",113,0)=" S %=+$O(XWB2LIST(0)) Q:'%"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",114,0)=" S HLL(""LINKS"",1)=""XWB RPC SUBSCRIBER""_U_XWB2LIST(%)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",115,0)=" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",116,0)="XLATE(S,OF) ;TRANSLATE FS and Encoding characters to Formating codes."
^XTMP("XPDT",7723,"RTN","XWB2HL7A",117,0)=" ;Change ^ > \F\"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",118,0)=" N X,I,I1,I2,I3,FC,TC,N,Y,Y1,L,L1,L2"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",119,0)=" S OF(0)=S"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",120,0)=" F I1=1:1:5 S FC=$E(XWB2EMAP,I1),TC=$E(XWB2MAP2,I1) D"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",121,0)=" . S Y="""""
^XTMP("XPDT",7723,"RTN","XWB2HL7A",122,0)=" . F I2=0,1,2 Q:'$D(OF(I2))  S S=OF(I2) D  S OF(I2)=S"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",123,0)=" . . S L1=1,L2=$F(S,FC) Q:'L2"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",124,0)=" . . F  S Y1=$E(S,L1,L2-2) D  S L1=L2,L2=$F(S,FC,L1) Q:'L2"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",125,0)=" . . . ;If next part wont fit, add it to the overflow node and exit"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",126,0)=" . . . I $L(Y)+$L(Y1)+3>250 S OF(I2+1)=$E(S,L1,$L(S))_$G(OF(I2+1)),OF(I2)=Y,S="""" Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",127,0)=" . . . S Y=Y_Y1_$$ECODE(TC)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",128,0)=" . . . Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",129,0)=" . . ;Add the rest of S to the output."
^XTMP("XPDT",7723,"RTN","XWB2HL7A",130,0)=" . . S N=$E(S,L1,$L(S)) I $L(Y)+$L(N)>250 S OF(I2+1)=N_$G(OF(I2+1)),N="""""
^XTMP("XPDT",7723,"RTN","XWB2HL7A",131,0)=" . . S S=Y_N,Y="""""
^XTMP("XPDT",7723,"RTN","XWB2HL7A",132,0)=" . . Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",133,0)=" . Q"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",134,0)=" S Y=OF(0) K OF(0)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",135,0)=" Q Y"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",136,0)=" ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",137,0)="ECODE(%) ;"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",138,0)=" Q $E(HL(""ECH""),3)_%_$E(HL(""ECH""),3)"
^XTMP("XPDT",7723,"RTN","XWB2HL7A",139,0)=" ;"
^XTMP("XPDT",7723,"VER")="8.0^22.0"
^XTMP("XPDT",7742)="1"
^XTMP("XPDT",7742,"BLD",1265,0)="XU*8.0*536^KERNEL^0^3091112^y"
^XTMP("XPDT",7742,"BLD",1265,1,0)="^^2^2^3091027^"
^XTMP("XPDT",7742,"BLD",1265,1,1,0)="Kernel patch XU*8.0*536; New Taxonomies. Please refer to the"
^XTMP("XPDT",7742,"BLD",1265,1,2,0)="Description in Forum Patch Module for details."
^XTMP("XPDT",7742,"BLD",1265,4,0)="^9.64PA^^"
^XTMP("XPDT",7742,"BLD",1265,6)="^432"
^XTMP("XPDT",7742,"BLD",1265,6.3)="3"
^XTMP("XPDT",7742,"BLD",1265,"ABPKG")="n"
^XTMP("XPDT",7742,"BLD",1265,"INID")="^y"
^XTMP("XPDT",7742,"BLD",1265,"INIT")="POST^XU8P536"
^XTMP("XPDT",7742,"BLD",1265,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7742,"BLD",1265,"KRN",.4,0)=".4"
^XTMP("XPDT",7742,"BLD",1265,"KRN",.401,0)=".401"
^XTMP("XPDT",7742,"BLD",1265,"KRN",.402,0)=".402"
^XTMP("XPDT",7742,"BLD",1265,"KRN",.403,0)=".403"
^XTMP("XPDT",7742,"BLD",1265,"KRN",.5,0)=".5"
^XTMP("XPDT",7742,"BLD",1265,"KRN",.84,0)=".84"
^XTMP("XPDT",7742,"BLD",1265,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7742,"BLD",1265,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7742,"BLD",1265,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7742,"BLD",1265,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7742,"BLD",1265,"KRN",19,0)="19"
^XTMP("XPDT",7742,"BLD",1265,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7742,"BLD",1265,"KRN",101,0)="101"
^XTMP("XPDT",7742,"BLD",1265,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7742,"BLD",1265,"KRN",771,0)="771"
^XTMP("XPDT",7742,"BLD",1265,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7742,"BLD",1265,"KRN",870,0)="870"
^XTMP("XPDT",7742,"BLD",1265,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7742,"BLD",1265,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7742,"BLD",1265,"KRN",8994,0)="8994"
^XTMP("XPDT",7742,"BLD",1265,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",.4,.4)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",.401,.401)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",.402,.402)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",.403,.403)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",.5,.5)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",.84,.84)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",19,19)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",101,101)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",771,771)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",870,870)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",8994,8994)=""
^XTMP("XPDT",7742,"BLD",1265,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7742,"BLD",1265,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7742,"BLD",1265,"QUES",0)="^9.62^^"
^XTMP("XPDT",7742,"BLD",1265,"REQB",0)="^9.611^2^2"
^XTMP("XPDT",7742,"BLD",1265,"REQB",1,0)="XU*8.0*509^0"
^XTMP("XPDT",7742,"BLD",1265,"REQB",2,0)="XU*8.0*531^0"
^XTMP("XPDT",7742,"BLD",1265,"REQB","B","XU*8.0*509",1)=""
^XTMP("XPDT",7742,"BLD",1265,"REQB","B","XU*8.0*531",2)=""
^XTMP("XPDT",7742,"INIT")="POST^XU8P536"
^XTMP("XPDT",7742,"MBREQ")="0"
^XTMP("XPDT",7742,"PKG",3,-1)="1^1"
^XTMP("XPDT",7742,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7742,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7742,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7742,"PKG",3,22,1,0)="8.0^3090706^3090706^6"
^XTMP("XPDT",7742,"PKG",3,22,1,"PAH",1,0)="536^3091112"
^XTMP("XPDT",7742,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3091112"
^XTMP("XPDT",7742,"PKG",3,22,1,"PAH",1,1,1,0)="Kernel patch XU*8.0*536; New Taxonomies. Please refer to the"
^XTMP("XPDT",7742,"PKG",3,22,1,"PAH",1,1,2,0)="Description in Forum Patch Module for details."
^XTMP("XPDT",7742,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7742,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7742,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7742,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7742,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7742,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7742,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7742,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7742,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7742,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7742,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7742,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7742,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7742,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7742,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7742,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7742,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7742,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7742,"QUES","XPM1","B")=""
^XTMP("XPDT",7742,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7742,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7742,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7742,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7742,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7742,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7742,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7742,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7742,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7742,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7742,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7742,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7742,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7742,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7742,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7742,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7742,"RTN")="1"
^XTMP("XPDT",7742,"RTN","XU8P536")="0^^B11588480^n/a"
^XTMP("XPDT",7742,"RTN","XU8P536",1,0)="XU8P536 ;BT/BP-OAK Person Class File APIs; 10/22/09"
^XTMP("XPDT",7742,"RTN","XU8P536",2,0)=" ;;8.0;KERNEL;**536**; July 10, 1995;Build 3"
^XTMP("XPDT",7742,"RTN","XU8P536",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7742,"RTN","XU8P536",4,0)=" Q"
^XTMP("XPDT",7742,"RTN","XU8P536",5,0)=" ;"
^XTMP("XPDT",7742,"RTN","XU8P536",6,0)="POST ;"
^XTMP("XPDT",7742,"RTN","XU8P536",7,0)=" D DEL"
^XTMP("XPDT",7742,"RTN","XU8P536",8,0)=" D ADD"
^XTMP("XPDT",7742,"RTN","XU8P536",9,0)=" D DEF"
^XTMP("XPDT",7742,"RTN","XU8P536",10,0)=" Q"
^XTMP("XPDT",7742,"RTN","XU8P536",11,0)=" ;"
^XTMP("XPDT",7742,"RTN","XU8P536",12,0)="ADD ; Add new entries from 1159 and 1160"
^XTMP("XPDT",7742,"RTN","XU8P536",13,0)=" N XUI,XUDATA"
^XTMP("XPDT",7742,"RTN","XU8P536",14,0)=" F XUI=1:1:2 S XUDATA=$T(DATA+XUI) Q:XUDATA="" ;;END""  D"
^XTMP("XPDT",7742,"RTN","XU8P536",15,0)=" . S XUDATA=$P(XUDATA,"";;"",2) Q:XUDATA=""END"""
^XTMP("XPDT",7742,"RTN","XU8P536",16,0)=" . D ADD1(XUDATA)"
^XTMP("XPDT",7742,"RTN","XU8P536",17,0)=" Q"
^XTMP("XPDT",7742,"RTN","XU8P536",18,0)=" ;"
^XTMP("XPDT",7742,"RTN","XU8P536",19,0)="ADD1(XUDATA) ; add single entry"
^XTMP("XPDT",7742,"RTN","XU8P536",20,0)=" N FDA,FDAIEN,XUD"
^XTMP("XPDT",7742,"RTN","XU8P536",21,0)=" S XUD=$G(XUDATA)"
^XTMP("XPDT",7742,"RTN","XU8P536",22,0)=" S FDAIEN(1)=$P(XUD,""^"")"
^XTMP("XPDT",7742,"RTN","XU8P536",23,0)=" S FDA(8932.1,""+1,"",.01)=$P(XUD,""^"",2)"
^XTMP("XPDT",7742,"RTN","XU8P536",24,0)=" S FDA(8932.1,""+1,"",1)=$P(XUD,""^"",3)"
^XTMP("XPDT",7742,"RTN","XU8P536",25,0)=" S FDA(8932.1,""+1,"",2)=$P(XUD,""^"",4)"
^XTMP("XPDT",7742,"RTN","XU8P536",26,0)=" S FDA(8932.1,""+1,"",3)=""a"""
^XTMP("XPDT",7742,"RTN","XU8P536",27,0)=" S FDA(8932.1,""+1,"",5)=$P(XUD,""^"",5)"
^XTMP("XPDT",7742,"RTN","XU8P536",28,0)=" S FDA(8932.1,""+1,"",6)=$P(XUD,""^"",6)"
^XTMP("XPDT",7742,"RTN","XU8P536",29,0)=" S FDA(8932.1,""+1,"",8)=$P(XUD,""^"",7)"
^XTMP("XPDT",7742,"RTN","XU8P536",30,0)=" S FDA(8932.1,""+1,"",90002)=$P(XUD,""^"",8)"
^XTMP("XPDT",7742,"RTN","XU8P536",31,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7742,"RTN","XU8P536",32,0)=" Q"
^XTMP("XPDT",7742,"RTN","XU8P536",33,0)=" ;"
^XTMP("XPDT",7742,"RTN","XU8P536",34,0)="DEL ; Delete entry"
^XTMP("XPDT",7742,"RTN","XU8P536",35,0)=" N XUI F XUI=1159,1160 D"
^XTMP("XPDT",7742,"RTN","XU8P536",36,0)=" . N DIK,DA S DIK=""^USC(8932.1,"",DA=XUI D ^DIK"
^XTMP("XPDT",7742,"RTN","XU8P536",37,0)=" Q"
^XTMP("XPDT",7742,"RTN","XU8P536",38,0)=" ;"
^XTMP("XPDT",7742,"RTN","XU8P536",39,0)="DATA ; information of entries from 1153-1156"
^XTMP("XPDT",7742,"RTN","XU8P536",40,0)=" ;;1159^Pharmacy Service Providers^Pharmacist^Oncology^V090108^1835X0200X^87^I"
^XTMP("XPDT",7742,"RTN","XU8P536",41,0)=" ;;1160^Pharmacy Service Providers^Pharmacist^Geriatric^V090107^1835G0303X^87^I"
^XTMP("XPDT",7742,"RTN","XU8P536",42,0)=" ;;END"
^XTMP("XPDT",7742,"RTN","XU8P536",43,0)=" ;;"
^XTMP("XPDT",7742,"RTN","XU8P536",44,0)="DEF ; Update definitions 1159 and 1160"
^XTMP("XPDT",7742,"RTN","XU8P536",45,0)=" N XUI"
^XTMP("XPDT",7742,"RTN","XU8P536",46,0)=" F XUI=1159,1160 D"
^XTMP("XPDT",7742,"RTN","XU8P536",47,0)=" . D DEF1(XUI)"
^XTMP("XPDT",7742,"RTN","XU8P536",48,0)=" Q"
^XTMP("XPDT",7742,"RTN","XU8P536",49,0)=" ;"
^XTMP("XPDT",7742,"RTN","XU8P536",50,0)="DEF1(XUI) ; Update definition for single entry XUI"
^XTMP("XPDT",7742,"RTN","XU8P536",51,0)=" N XUI1,XUDATA,XUY"
^XTMP("XPDT",7742,"RTN","XU8P536",52,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7742,"RTN","XU8P536",53,0)=" F XUY=1:1:100 S XUDATA=$T(@XUI+XUY) Q:XUDATA="" ;;END""  D "
^XTMP("XPDT",7742,"RTN","XU8P536",54,0)=" . S ^TMP($J,""XUBA"",XUI,XUY,0)=$P(XUDATA,"";;"",2)"
^XTMP("XPDT",7742,"RTN","XU8P536",55,0)=" S XUI1=XUI_"","""
^XTMP("XPDT",7742,"RTN","XU8P536",56,0)=" D WP^DIE(8932.1,XUI1,11,""K"",""^TMP($J,""""XUBA"""",XUI)"")"
^XTMP("XPDT",7742,"RTN","XU8P536",57,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7742,"RTN","XU8P536",58,0)=" Q"
^XTMP("XPDT",7742,"RTN","XU8P536",59,0)=" ; information of definitions"
^XTMP("XPDT",7742,"RTN","XU8P536",60,0)="1159 ;"
^XTMP("XPDT",7742,"RTN","XU8P536",61,0)=" ;;A licensed pharmacist who has demonstrated specialized knowledge and "
^XTMP("XPDT",7742,"RTN","XU8P536",62,0)=" ;;skill in developing, recommending, implementing, monitoring, and "
^XTMP("XPDT",7742,"RTN","XU8P536",63,0)=" ;;modifying pharmacotherapeutic plans to optimize outcomes in patients with "
^XTMP("XPDT",7742,"RTN","XU8P536",64,0)=" ;;malignant diseases."
^XTMP("XPDT",7742,"RTN","XU8P536",65,0)=" ;; "
^XTMP("XPDT",7742,"RTN","XU8P536",66,0)=" ;;Source: Specialty certification and recertification program administered "
^XTMP("XPDT",7742,"RTN","XU8P536",67,0)=" ;;by Board of Pharmaceutical Specialties, www.bpsweb.org [7/1/2006: new]"
^XTMP("XPDT",7742,"RTN","XU8P536",68,0)=" ;;END"
^XTMP("XPDT",7742,"RTN","XU8P536",69,0)="1160 ;"
^XTMP("XPDT",7742,"RTN","XU8P536",70,0)=" ;;A pharmacist who is certified in geriatric pharmacy practice is "
^XTMP("XPDT",7742,"RTN","XU8P536",71,0)=" ;;designated as a ""Certified Geriatric Pharmacist"" (CGP). To become "
^XTMP("XPDT",7742,"RTN","XU8P536",72,0)=" ;;certified, candidates are expected to be knowledgeable about principles "
^XTMP("XPDT",7742,"RTN","XU8P536",73,0)=" ;;of geriatric pharmacotherapy and the provision of pharmaceutical care to "
^XTMP("XPDT",7742,"RTN","XU8P536",74,0)=" ;;the elderly."
^XTMP("XPDT",7742,"RTN","XU8P536",75,0)=" ;; "
^XTMP("XPDT",7742,"RTN","XU8P536",76,0)=" ;;Source: Commission for Certification in Geriatric Pharmacy (www.ccgp.org) "
^XTMP("XPDT",7742,"RTN","XU8P536",77,0)=" ;;[7/1/2006: new]"
^XTMP("XPDT",7742,"RTN","XU8P536",78,0)=" ;;END"
^XTMP("XPDT",7742,"VER")="8.0^22.0"
^XTMP("XPDT",7743)="1"
^XTMP("XPDT",7743,"BLD",1233,0)="XWB*1.1*53^RPC BROKER^0^3100208^y"
^XTMP("XPDT",7743,"BLD",1233,1,0)="^^1^1^3090429^"
^XTMP("XPDT",7743,"BLD",1233,1,1,0)="XWB*1.1*53.  See the patch description on Forum."
^XTMP("XPDT",7743,"BLD",1233,4,0)="^9.64PA^^"
^XTMP("XPDT",7743,"BLD",1233,6)="^42"
^XTMP("XPDT",7743,"BLD",1233,6.3)="4"
^XTMP("XPDT",7743,"BLD",1233,"ABPKG")="n"
^XTMP("XPDT",7743,"BLD",1233,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7743,"BLD",1233,"KRN",.4,0)=".4"
^XTMP("XPDT",7743,"BLD",1233,"KRN",.401,0)=".401"
^XTMP("XPDT",7743,"BLD",1233,"KRN",.402,0)=".402"
^XTMP("XPDT",7743,"BLD",1233,"KRN",.403,0)=".403"
^XTMP("XPDT",7743,"BLD",1233,"KRN",.5,0)=".5"
^XTMP("XPDT",7743,"BLD",1233,"KRN",.84,0)=".84"
^XTMP("XPDT",7743,"BLD",1233,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7743,"BLD",1233,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7743,"BLD",1233,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7743,"BLD",1233,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7743,"BLD",1233,"KRN",9.8,"NM",0)="^9.68A^4^4"
^XTMP("XPDT",7743,"BLD",1233,"KRN",9.8,"NM",1,0)="XWBSEC^^0^B5680874"
^XTMP("XPDT",7743,"BLD",1233,"KRN",9.8,"NM",2,0)="XWBTCPM2^^0^B4246015"
^XTMP("XPDT",7743,"BLD",1233,"KRN",9.8,"NM",3,0)="XWBTCPM^^0^B56306340"
^XTMP("XPDT",7743,"BLD",1233,"KRN",9.8,"NM",4,0)="XWBTCPMT^^0^B11304181"
^XTMP("XPDT",7743,"BLD",1233,"KRN",9.8,"NM","B","XWBSEC",1)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN",9.8,"NM","B","XWBTCPM",3)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN",9.8,"NM","B","XWBTCPM2",2)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN",9.8,"NM","B","XWBTCPMT",4)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN",19,0)="19"
^XTMP("XPDT",7743,"BLD",1233,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7743,"BLD",1233,"KRN",101,0)="101"
^XTMP("XPDT",7743,"BLD",1233,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7743,"BLD",1233,"KRN",771,0)="771"
^XTMP("XPDT",7743,"BLD",1233,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7743,"BLD",1233,"KRN",870,0)="870"
^XTMP("XPDT",7743,"BLD",1233,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7743,"BLD",1233,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7743,"BLD",1233,"KRN",8994,0)="8994"
^XTMP("XPDT",7743,"BLD",1233,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",.4,.4)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",.401,.401)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",.402,.402)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",.403,.403)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",.5,.5)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",.84,.84)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",19,19)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",101,101)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",771,771)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",870,870)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",8994,8994)=""
^XTMP("XPDT",7743,"BLD",1233,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7743,"BLD",1233,"QDEF")="^^^^YES^^^^NO^^NO"
^XTMP("XPDT",7743,"BLD",1233,"QUES",0)="^9.62^^"
^XTMP("XPDT",7743,"BLD",1233,"REQB",0)="^9.611^^"
^XTMP("XPDT",7743,"MBREQ")="0"
^XTMP("XPDT",7743,"PKG",8,-1)="1^1"
^XTMP("XPDT",7743,"PKG",8,0)="RPC BROKER^XWB^Remote Procedure Call Broker^"
^XTMP("XPDT",7743,"PKG",8,20,0)="^9.402P^^"
^XTMP("XPDT",7743,"PKG",8,22,0)="^9.49I^1^1"
^XTMP("XPDT",7743,"PKG",8,22,1,0)="1.1^2970918^2971120^7"
^XTMP("XPDT",7743,"PKG",8,22,1,"PAH",1,0)="53^3100208^20"
^XTMP("XPDT",7743,"PKG",8,22,1,"PAH",1,1,0)="^^1^1^3100208"
^XTMP("XPDT",7743,"PKG",8,22,1,"PAH",1,1,1,0)="XWB*1.1*53.  See the patch description on Forum."
^XTMP("XPDT",7743,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7743,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7743,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7743,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7743,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7743,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7743,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7743,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7743,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7743,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7743,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7743,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7743,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7743,"QUES","XPI1","B")="YES"
^XTMP("XPDT",7743,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7743,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7743,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7743,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7743,"QUES","XPM1","B")=""
^XTMP("XPDT",7743,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7743,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7743,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7743,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7743,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7743,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7743,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7743,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7743,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7743,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7743,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7743,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7743,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7743,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7743,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7743,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7743,"RTN")="4"
^XTMP("XPDT",7743,"RTN","XWBSEC")="0^1^B5680874^B5461544"
^XTMP("XPDT",7743,"RTN","XWBSEC",1,0)="XWBSEC ;SFISC/VYD - RPC BROKER ;02/03/10  11:37"
^XTMP("XPDT",7743,"RTN","XWBSEC",2,0)=" ;;1.1;RPC BROKER;**3,6,10,35,53**;Mar 28, 1997;Build 4"
^XTMP("XPDT",7743,"RTN","XWBSEC",3,0)="CHKPRMIT(XWBRP) ;checks to see if remote procedure is permited to run"
^XTMP("XPDT",7743,"RTN","XWBSEC",4,0)=" ;Input:  XWBRP - Remote procedure to check"
^XTMP("XPDT",7743,"RTN","XWBSEC",5,0)=" Q:$$KCHK^XUSRB(""XUPROGMODE"")"
^XTMP("XPDT",7743,"RTN","XWBSEC",6,0)=" N ERR,XWBPRMIT,XWBALLOW"
^XTMP("XPDT",7743,"RTN","XWBSEC",7,0)=" S U=""^"",XWBSEC="""" ;Return XWBSEC="""" if OK to run RPC"
^XTMP("XPDT",7743,"RTN","XWBSEC",8,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBSEC",9,0)=" ;In the beginning, when no DUZ is defined and no context exist, setup"
^XTMP("XPDT",7743,"RTN","XWBSEC",10,0)=" ;default signon context"
^XTMP("XPDT",7743,"RTN","XWBSEC",11,0)=" S:'$G(DUZ) DUZ=0,XQY0=""XUS SIGNON""   ;set up default context"
^XTMP("XPDT",7743,"RTN","XWBSEC",12,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBSEC",13,0)=" ;These RPC's are allowed in any context, so we can just quit"
^XTMP("XPDT",7743,"RTN","XWBSEC",14,0)=" I ""^XWB IM HERE^XWB CREATE CONTEXT^XWB RPC LIST^XWB IS RPC AVAILABLE^XUS GET USER INFO^XUS GET TOKEN^XUS SET VISITOR^""[(U_XWBRP_U) Q  ;p53"
^XTMP("XPDT",7743,"RTN","XWBSEC",15,0)=" ;VistAlink RPC's that are always allowed."
^XTMP("XPDT",7743,"RTN","XWBSEC",16,0)=" I ""^XUS KAAJEE GET USER INFO^XUS KAAJEE LOGOUT^""[(U_XWBRP_U) Q"
^XTMP("XPDT",7743,"RTN","XWBSEC",17,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBSEC",18,0)=" ;If in Signon context, only allow XUS and XWB rpc's"
^XTMP("XPDT",7743,"RTN","XWBSEC",19,0)=" I $G(XQY0)=""XUS SIGNON"",""^XUS^XWB^""'[(U_$E(XWBRP,1,3)_U) S XWBSEC=""Application context has not been created!"" Q"
^XTMP("XPDT",7743,"RTN","XWBSEC",20,0)=" ;XQCS allows all users access to the XUS SIGNON context."
^XTMP("XPDT",7743,"RTN","XWBSEC",21,0)=" ;Also to any context in the XUCOMMAND menu."
^XTMP("XPDT",7743,"RTN","XWBSEC",22,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBSEC",23,0)=" I $G(XQY0)'="""" D  ;1.1*6. XQY0="""" after XUS SIGNON context deleted."
^XTMP("XPDT",7743,"RTN","XWBSEC",24,0)=" . S XWBALLOW=$$CHK^XQCS(DUZ,$P(XQY0,U),XWBRP)         ;do the check"
^XTMP("XPDT",7743,"RTN","XWBSEC",25,0)=" . S:'XWBALLOW XWBSEC=XWBALLOW"
^XTMP("XPDT",7743,"RTN","XWBSEC",26,0)=" E  S XWBSEC=""Application context has not been created!"""
^XTMP("XPDT",7743,"RTN","XWBSEC",27,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBSEC",28,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBSEC",29,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBSEC",30,0)="CRCONTXT(RESULT,OPTION) ;creates context for the passed in option"
^XTMP("XPDT",7743,"RTN","XWBSEC",31,0)=" K XQY0,XQY N XWB1,XABPGMOD,XWBPGMOD S RESULT=0"
^XTMP("XPDT",7743,"RTN","XWBSEC",32,0)=" S OPTION=$$DECRYP^XUSRB1(OPTION) ;S:OPTION="""" OPTION=""\"""
^XTMP("XPDT",7743,"RTN","XWBSEC",33,0)=" I OPTION="""" S XQY=0,XQY0="""",RESULT=1 Q  ;delete context if """" passed in."
^XTMP("XPDT",7743,"RTN","XWBSEC",34,0)=" S XWB1=$$OPTLK^XQCS(OPTION)"
^XTMP("XPDT",7743,"RTN","XWBSEC",35,0)=" I XWB1="""" S (XWBSEC,RESULT)=""The context '""_OPTION_""' does not exist on server."" Q  ;P10"
^XTMP("XPDT",7743,"RTN","XWBSEC",36,0)=" S RESULT=$$CHK^XQCS(DUZ,XWB1)"
^XTMP("XPDT",7743,"RTN","XWBSEC",37,0)=" ;Access or programmer"
^XTMP("XPDT",7743,"RTN","XWBSEC",38,0)=" S XWBPGMOD=$$KCHK^XUSRB(""XUPROGMODE"")"
^XTMP("XPDT",7743,"RTN","XWBSEC",39,0)=" I RESULT!XWBPGMOD S XQY0=OPTION,XQY=XWB1,RESULT=1"
^XTMP("XPDT",7743,"RTN","XWBSEC",40,0)=" E  S XWBSEC=RESULT"
^XTMP("XPDT",7743,"RTN","XWBSEC",41,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBSEC",42,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBSEC",43,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBSEC",44,0)="STATE(%) ;Return a state value"
^XTMP("XPDT",7743,"RTN","XWBSEC",45,0)=" Q:'$L($G(%)) $G(XWBSTATE)"
^XTMP("XPDT",7743,"RTN","XWBSEC",46,0)=" Q $G(XWBSTATE(%))"
^XTMP("XPDT",7743,"RTN","XWBSEC",47,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBSEC",48,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBSEC",49,0)="SET(%,VALUE) ;Set the state variable"
^XTMP("XPDT",7743,"RTN","XWBSEC",50,0)=" I $G(%)="""" S XWBSTATE=VALUE"
^XTMP("XPDT",7743,"RTN","XWBSEC",51,0)=" S XWBSTATE(%)=VALUE"
^XTMP("XPDT",7743,"RTN","XWBSEC",52,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBSEC",53,0)="KILL(%) ;Kill state variable"
^XTMP("XPDT",7743,"RTN","XWBSEC",54,0)=" I $L($G(%)) K XWBSTATE(%)"
^XTMP("XPDT",7743,"RTN","XWBSEC",55,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM")="0^3^B56306340^B55441602"
^XTMP("XPDT",7743,"RTN","XWBTCPM",1,0)="XWBTCPM ;ISF/RWF - BROKER TCP/IP PROCESS HANDLER ;02/08/10  07:46"
^XTMP("XPDT",7743,"RTN","XWBTCPM",2,0)=" ;;1.1;RPC BROKER;**35,43,49,53**;Mar 28, 1997;Build 4"
^XTMP("XPDT",7743,"RTN","XWBTCPM",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7743,"RTN","XWBTCPM",4,0)=" ;Based on: XWBTCPC & XWBTCPL, Modified by ISF/RWF"
^XTMP("XPDT",7743,"RTN","XWBTCPM",5,0)=" ;Changed to be started by TCPIP service or %ZISTCPS"
^XTMP("XPDT",7743,"RTN","XWBTCPM",6,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",7,0)="DSM ;DSM called from ucx, % passed in with device."
^XTMP("XPDT",7743,"RTN","XWBTCPM",8,0)=" D ESET"
^XTMP("XPDT",7743,"RTN","XWBTCPM",9,0)=" ;Open the device"
^XTMP("XPDT",7743,"RTN","XWBTCPM",10,0)=" S XWBTDEV=% X ""O XWBTDEV:(TCPDEV):60"" ;Special UCX/DSM open"
^XTMP("XPDT",7743,"RTN","XWBTCPM",11,0)=" ;Go find the connection type"
^XTMP("XPDT",7743,"RTN","XWBTCPM",12,0)=" U XWBTDEV"
^XTMP("XPDT",7743,"RTN","XWBTCPM",13,0)=" G CONNTYPE"
^XTMP("XPDT",7743,"RTN","XWBTCPM",14,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",15,0)="CACHEVMS ;Cache'/VMS tcpip entry point, called from XWBTCP_START.COM file"
^XTMP("XPDT",7743,"RTN","XWBTCPM",16,0)=" D ESET"
^XTMP("XPDT",7743,"RTN","XWBTCPM",17,0)=" S XWBTDEV=$S($ZV[""VMS"":""SYS$NET"",1:$P) ;Support for both VMS/TCPIP and Linux/xinetd"
^XTMP("XPDT",7743,"RTN","XWBTCPM",18,0)=" ; **Cache'/VMS specific code**"
^XTMP("XPDT",7743,"RTN","XWBTCPM",19,0)=" O XWBTDEV::5"
^XTMP("XPDT",7743,"RTN","XWBTCPM",20,0)=" X ""U XWBTDEV:(::""""-M"""")"" ;Packet mode like DSM"
^XTMP("XPDT",7743,"RTN","XWBTCPM",21,0)=" G CONNTYPE"
^XTMP("XPDT",7743,"RTN","XWBTCPM",22,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",23,0)="NT ;entry from ZISTCPS"
^XTMP("XPDT",7743,"RTN","XWBTCPM",24,0)=" ;JOB LISTEN^%ZISTCPS(""port"",""NT^XWBTCPM"",""stop code"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",25,0)=" D ESET"
^XTMP("XPDT",7743,"RTN","XWBTCPM",26,0)=" S XWBTDEV=IO"
^XTMP("XPDT",7743,"RTN","XWBTCPM",27,0)=" G CONNTYPE"
^XTMP("XPDT",7743,"RTN","XWBTCPM",28,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",29,0)="GTMUCX(%) ;From ucx ZFOO"
^XTMP("XPDT",7743,"RTN","XWBTCPM",30,0)=" ;If called from LISTEN^%ZISTCP(PORT,""GTM^XWBTCPM"") S XWBTDEV=IO"
^XTMP("XPDT",7743,"RTN","XWBTCPM",31,0)=" D ESET"
^XTMP("XPDT",7743,"RTN","XWBTCPM",32,0)=" ;GTM specific code"
^XTMP("XPDT",7743,"RTN","XWBTCPM",33,0)=" S @(""$ZINTERRUPT=""""I $$JOBEXAM^ZU($ZPOSITION)"""""")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",34,0)=" S XWBTDEV=% X ""O %:(RECORDSIZE=512)"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",35,0)=" G CONNTYPE"
^XTMP("XPDT",7743,"RTN","XWBTCPM",36,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",37,0)="GTMLNX ;From Linux xinetd script"
^XTMP("XPDT",7743,"RTN","XWBTCPM",38,0)=" D ESET"
^XTMP("XPDT",7743,"RTN","XWBTCPM",39,0)=" ;GTM specific code"
^XTMP("XPDT",7743,"RTN","XWBTCPM",40,0)=" S @(""$ZINTERRUPT=""""I $$JOBEXAM^ZU($ZPOSITION)"""""")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",41,0)=" S XWBTDEV=$P X ""U XWBTDEV:(nowrap:nodelimiter:ioerror=""""TRAP"""")"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",42,0)=" S %="""",@(""%=$ZTRNLNM(""""REMOTE_HOST"""")"") S:$L(%) IO(""GTM-IP"")=%"
^XTMP("XPDT",7743,"RTN","XWBTCPM",43,0)=" G CONNTYPE"
^XTMP("XPDT",7743,"RTN","XWBTCPM",44,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",45,0)="ESET ;Set inital error trap"
^XTMP("XPDT",7743,"RTN","XWBTCPM",46,0)=" S U=""^"",$ETRAP=""D ^%ZTER H"" ;Set up the error trap"
^XTMP("XPDT",7743,"RTN","XWBTCPM",47,0)=" S X="""",@(""$ZT=X"") ;Clear old trap"
^XTMP("XPDT",7743,"RTN","XWBTCPM",48,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",49,0)=" ;Find the type of connection and jump to the processing routine."
^XTMP("XPDT",7743,"RTN","XWBTCPM",50,0)="CONNTYPE ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",51,0)=" N XWBDEBUG,XWBAPVER,XWBCLMAN,XWBENVL,XWBLOG,XWBOS,XWBPTYPE"
^XTMP("XPDT",7743,"RTN","XWBTCPM",52,0)=" N XWBTBUF,XWBTIP,XWBTSKT,XWBVER,XWBWRAP,XWBSHARE,XWBT"
^XTMP("XPDT",7743,"RTN","XWBTCPM",53,0)=" N SOCK,TYPE"
^XTMP("XPDT",7743,"RTN","XWBTCPM",54,0)=" D INIT"
^XTMP("XPDT",7743,"RTN","XWBTCPM",55,0)=" S XWB=$$BREAD^XWBRW(5,XWBTIME)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",56,0)=" D LOG(""MSG format is ""_XWB_"" type ""_$S(XWB=""[XWB]"":""NEW"",XWB=""{XWB}"":""OLD"",XWB=""<?xml"":""M2M"",XWB=""~BSE~"":""BSE"",XWB=""~EAC~"":""EAC"",XWB=""~SVR~"":""SVR"",1:""Unk"")) ; XWB*1.1*XX"
^XTMP("XPDT",7743,"RTN","XWBTCPM",57,0)=" I XWB[""[XWB]"" G NEW"
^XTMP("XPDT",7743,"RTN","XWBTCPM",58,0)=" I XWB[""{XWB}"" G OLD^XWBTCPM1"
^XTMP("XPDT",7743,"RTN","XWBTCPM",59,0)=" I XWB[""<?xml"" G M2M"
^XTMP("XPDT",7743,"RTN","XWBTCPM",60,0)=" I $L($T(OTH^XWBTCPM2)) D OTH^XWBTCPM2 ;See if a special code."
^XTMP("XPDT",7743,"RTN","XWBTCPM",61,0)=" I '$L($T(OTH^XWBTCPM2)) D LOG(""Prefix not known: ""_XWB) ; XWB*1.1*XX"
^XTMP("XPDT",7743,"RTN","XWBTCPM",62,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",63,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",64,0)="NEWJOB() ;Check if OK to start a new job, Return 1 if OK, 0 if not OK."
^XTMP("XPDT",7743,"RTN","XWBTCPM",65,0)=" N X,Y,J,XWBVOL"
^XTMP("XPDT",7743,"RTN","XWBTCPM",66,0)=" D GETENV^%ZOSV S XWBVOL=$P(Y,""^"",2)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",67,0)=" S X=$O(^XTV(8989.3,1,4,""B"",XWBVOL,0)),J=$S(X>0:^XTV(8989.3,1,4,X,0),1:""ROU^y^1"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",68,0)=" I $G(^%ZIS(14.5,""LOGON"",XWBVOL)) Q 0 ;Check INHIBIT LOGONS?"
^XTMP("XPDT",7743,"RTN","XWBTCPM",69,0)=" I $D(^%ZOSF(""ACTJ"")) X ^(""ACTJ"") I $P(J,U,3),($P(J,U,3)'>Y) Q 0"
^XTMP("XPDT",7743,"RTN","XWBTCPM",70,0)=" Q 1"
^XTMP("XPDT",7743,"RTN","XWBTCPM",71,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",72,0)="M2M ;M2M Broker"
^XTMP("XPDT",7743,"RTN","XWBTCPM",73,0)=" S XWBRBUF=XWB_XWBRBUF,(IO,IO(0))=XWBTDEV G SPAWN^XWBVLL"
^XTMP("XPDT",7743,"RTN","XWBTCPM",74,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",75,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",76,0)="NEW ;New broker"
^XTMP("XPDT",7743,"RTN","XWBTCPM",77,0)=" S U=""^"",DUZ=0,DUZ(0)="""",XWBVER=1.108"
^XTMP("XPDT",7743,"RTN","XWBTCPM",78,0)=" D SETTIME(1) ;Setup for sign-on timeout"
^XTMP("XPDT",7743,"RTN","XWBTCPM",79,0)=" U XWBTDEV D"
^XTMP("XPDT",7743,"RTN","XWBTCPM",80,0)=" . N XWB,ERR,NATIP,I"
^XTMP("XPDT",7743,"RTN","XWBTCPM",81,0)=" . S ERR=$$PRSP^XWBPRS"
^XTMP("XPDT",7743,"RTN","XWBTCPM",82,0)=" . S ERR=$$PRSM^XWBPRS"
^XTMP("XPDT",7743,"RTN","XWBTCPM",83,0)=" . S MSG=$G(XWB(4,""CMD"")) ;Build connect msg."
^XTMP("XPDT",7743,"RTN","XWBTCPM",84,0)=" . S I="""" F  S I=$O(XWB(5,""P"",I)) Q:I=""""  S MSG=MSG_U_XWB(5,""P"",I)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",85,0)=" . ;Get the peer and save that IP."
^XTMP("XPDT",7743,"RTN","XWBTCPM",86,0)=" . S NATIP=$$GETPEER^%ZOSV S:'$L(NATIP) NATIP=$P(MSG,""^"",2)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",87,0)=" . I NATIP'=$P(MSG,""^"",2) S $P(MSG,""^"",2)=NATIP"
^XTMP("XPDT",7743,"RTN","XWBTCPM",88,0)=" . Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",89,0)=" S X=$$NEWJOB() D:'X LOG(""No New Connects"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",90,0)=" I ($P(MSG,U)'=""TCPConnect"")!('X) D QSND^XWBRW(""reject""),LOG(""reject: ""_MSG) Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",91,0)=" D QSND^XWBRW(""accept""),LOG(""accept"") ;Ack"
^XTMP("XPDT",7743,"RTN","XWBTCPM",92,0)=" S IO(""IP"")=$P(MSG,U,2),XWBTSKT=$P(MSG,U,3),XWBCLMAN=$P(MSG,U,4)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",93,0)=" S XWBTIP=$G(IO(""IP""))"
^XTMP("XPDT",7743,"RTN","XWBTCPM",94,0)=" ;start RUM for Broker Handler XWB*1.1*5"
^XTMP("XPDT",7743,"RTN","XWBTCPM",95,0)=" D LOGRSRC^%ZOSV(""$BROKER HANDLER$"",2,1)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",96,0)=" ;GTM"
^XTMP("XPDT",7743,"RTN","XWBTCPM",97,0)=" I $G(XWBT(""PCNT"")) D"
^XTMP("XPDT",7743,"RTN","XWBTCPM",98,0)=" . S X=$NA(^XUTL(""XUSYS"",$J,1)) L +@X:0"
^XTMP("XPDT",7743,"RTN","XWBTCPM",99,0)=" . D COUNT^XUSCNT(1),SETLOCK^XUSCNT(X)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",100,0)=" ;We don't use a callback"
^XTMP("XPDT",7743,"RTN","XWBTCPM",101,0)=" K XWB,CON,LEN,MSG ;Clean up"
^XTMP("XPDT",7743,"RTN","XWBTCPM",102,0)=" ;Attempt to share license, Must have TCP port open first."
^XTMP("XPDT",7743,"RTN","XWBTCPM",103,0)=" U XWBTDEV ;D SHARELIC^%ZOSV(1)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",104,0)=" ;setup null device ""NULL"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",105,0)=" S %ZIS=""0H"",IOP=""NULL"" D ^%ZIS S XWBNULL=IO I POP S XWBERROR=""No NULL device"" D LOG(XWBERROR),EXIT Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",106,0)=" D SAVDEV^%ZISUTL(""XWBNULL"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",107,0)=" ;change process name"
^XTMP("XPDT",7743,"RTN","XWBTCPM",108,0)=" D CHPRN(""ip""_$P(XWBTIP,""."",3,4)_"":""_XWBTDEV)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",109,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",110,0)="RESTART ;The error trap returns to here"
^XTMP("XPDT",7743,"RTN","XWBTCPM",111,0)=" N $ESTACK S $ETRAP=""D ETRAP^XWBTCPM(0)"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",112,0)=" S DT=$$DT^XLFDT,DTIME=30"
^XTMP("XPDT",7743,"RTN","XWBTCPM",113,0)=" U XWBTDEV D MAIN"
^XTMP("XPDT",7743,"RTN","XWBTCPM",114,0)=" D LOG(""Exit: ""_XWBTBUF)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",115,0)=" ;Turn off the error trap for the exit"
^XTMP("XPDT",7743,"RTN","XWBTCPM",116,0)=" S $ETRAP="""""
^XTMP("XPDT",7743,"RTN","XWBTCPM",117,0)=" D EXIT ;Logout"
^XTMP("XPDT",7743,"RTN","XWBTCPM",118,0)=" K XWBR,XWBARY"
^XTMP("XPDT",7743,"RTN","XWBTCPM",119,0)=" ;stop RUM for handler XWB*1.1*5"
^XTMP("XPDT",7743,"RTN","XWBTCPM",120,0)=" D LOGRSRC^%ZOSV(""$BROKER HANDLER$"",2,2)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",121,0)=" D USE^%ZISUTL(""XWBNULL""),CLOSE^%ZISUTL(""XWBNULL"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",122,0)=" ;Close in the calling script"
^XTMP("XPDT",7743,"RTN","XWBTCPM",123,0)=" K SOCK,TYPE,XWBSND,XWBTYPE,XWBRBUF"
^XTMP("XPDT",7743,"RTN","XWBTCPM",124,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",125,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",126,0)="MAIN ; -- main message processing loop. debug at MAIN+1"
^XTMP("XPDT",7743,"RTN","XWBTCPM",127,0)=" F  D  Q:XWBTBUF=""#BYE#"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",128,0)=" . ;Setup"
^XTMP("XPDT",7743,"RTN","XWBTCPM",129,0)=" . S XWBAPVER=0,XWBTBUF="""",XWBTCMD="""",XWBRBUF="""""
^XTMP("XPDT",7743,"RTN","XWBTCPM",130,0)=" . K XWBR,XWBARY,XWBPRT"
^XTMP("XPDT",7743,"RTN","XWBTCPM",131,0)=" . ; -- read client request"
^XTMP("XPDT",7743,"RTN","XWBTCPM",132,0)=" . S XR=$$BREAD^XWBRW(1,XWBTIME,1)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",133,0)=" . I '$L(XR) D LOG(""Timeout: ""_XWBTIME) S XWBTBUF=""#BYE#"" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",134,0)=" . S XR=XR_$$BREAD^XWBRW(4)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",135,0)=" . I XR=""#BYE#"" D  Q  ;Check for exit"
^XTMP("XPDT",7743,"RTN","XWBTCPM",136,0)=" . . D QSND^XWBRW(""#BYE#""),LOG(""BYE CMD"") S XWBTBUF=""#BYE#"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",137,0)=" . . Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",138,0)=" . S TYPE=(XR=""[XWB]"")  ;check HDR"
^XTMP("XPDT",7743,"RTN","XWBTCPM",139,0)=" . I 'TYPE D LOG(""Bad Header: ""_XR) Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",140,0)=" . D CALLP^XWBPRS(.XWBR,$G(XWBDEBUG)) ;Read the NEW Msg parameters and call RPC"
^XTMP("XPDT",7743,"RTN","XWBTCPM",141,0)=" . IF XWBTCMD=""#BYE#"" D  Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",142,0)=" . . D QSND^XWBRW(""#BYE#""),LOG(""BYE CMD"") S XWBTBUF=XWBTCMD"
^XTMP("XPDT",7743,"RTN","XWBTCPM",143,0)=" . . Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",144,0)=" . U XWBTDEV"
^XTMP("XPDT",7743,"RTN","XWBTCPM",145,0)=" . S XWBPTYPE=$S('$D(XWBPTYPE):1,XWBPTYPE<1:1,XWBPTYPE>6:1,1:XWBPTYPE)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",146,0)=" . ;I $G(XWBPRT) D RETURN^XWBPRS2 Q  ;New msg return"
^XTMP("XPDT",7743,"RTN","XWBTCPM",147,0)=" . I '$G(XWBPRT) D SND^XWBRW ;Return data,flush buffer"
^XTMP("XPDT",7743,"RTN","XWBTCPM",148,0)=" Q  ;End Of Main"
^XTMP("XPDT",7743,"RTN","XWBTCPM",149,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",150,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",151,0)="ETRAP(EXIT) ; -- on trapped error, send error info to client"
^XTMP("XPDT",7743,"RTN","XWBTCPM",152,0)=" N XWBERC,XWBERR"
^XTMP("XPDT",7743,"RTN","XWBTCPM",153,0)=" ;Change trapping during trap."
^XTMP("XPDT",7743,"RTN","XWBTCPM",154,0)=" S $ETRAP=""D ^%ZTER,ETRAP^XWBTCPM(1)"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",155,0)=" S XWBERC=$E($$EC^%ZOSV,1,200),XWBERR=""M  ERROR=""_XWBERC_$C(13,10)_""LAST REF=""_$$LGR^%ZOSV"
^XTMP("XPDT",7743,"RTN","XWBTCPM",156,0)=" I $EC[""U411"" S XWBERROR=""U411"",XWBSEC="""",XWBERR=""Data Transfer Error to Server"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",157,0)=" D ^%ZTER ;%ZTER clears $ZE and $ZCODE"
^XTMP("XPDT",7743,"RTN","XWBTCPM",158,0)=" D LOG(""In ETRAP: ""_XWBERC) ;Log"
^XTMP("XPDT",7743,"RTN","XWBTCPM",159,0)=" I (XWBERC[""READ"")!(XWBERC[""WRITE"")!(XWBERC[""SYSTEM-F"")!(XWBERC[""IOEOF"") D EXIT X ""HALT """
^XTMP("XPDT",7743,"RTN","XWBTCPM",160,0)=" U XWBTDEV"
^XTMP("XPDT",7743,"RTN","XWBTCPM",161,0)=" I $G(XWBT(""PCNT"")) L +^XUTL(""XUSYS"",$J,0):99"
^XTMP("XPDT",7743,"RTN","XWBTCPM",162,0)=" E  L  ;Clear Locks"
^XTMP("XPDT",7743,"RTN","XWBTCPM",163,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",164,0)=" D ESND^XWBRW($C(24)_XWBERR_$C(4))"
^XTMP("XPDT",7743,"RTN","XWBTCPM",165,0)=" I EXIT D EXIT X ""HALT """
^XTMP("XPDT",7743,"RTN","XWBTCPM",166,0)=" S $ETRAP=""Q:($ESTACK&'$QUIT)  Q:$ESTACK -9 S $ECODE="""""""" D CLEANP^XWBTCPM G RESTART^XWBTCPM"",$ECODE="",U99,"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",167,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",168,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",169,0)="CLEANP ;Clean up the partion"
^XTMP("XPDT",7743,"RTN","XWBTCPM",170,0)=" N XWBTDEV,XWBNULL D KILL^XUSCLEAN"
^XTMP("XPDT",7743,"RTN","XWBTCPM",171,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",172,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",173,0)="STYPE(X,WRAP) ;For backward compatability only"
^XTMP("XPDT",7743,"RTN","XWBTCPM",174,0)=" I $D(WRAP) Q $$RTRNFMT^XWBLIB($G(X),WRAP)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",175,0)=" Q $$RTRNFMT^XWBLIB(X)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",176,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",177,0)="BREAD(L,T) ;read tcp buffer, L is length"
^XTMP("XPDT",7743,"RTN","XWBTCPM",178,0)=" Q $$BREAD^XWBRW(L,$G(T))"
^XTMP("XPDT",7743,"RTN","XWBTCPM",179,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",180,0)="CHPRN(N) ;change process name"
^XTMP("XPDT",7743,"RTN","XWBTCPM",181,0)=" ;Change process name to N"
^XTMP("XPDT",7743,"RTN","XWBTCPM",182,0)=" D SETNM^%ZOSV($E(N,1,15))"
^XTMP("XPDT",7743,"RTN","XWBTCPM",183,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",184,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",185,0)="SETTIME(%) ;Set the Read timeout 0=RPC, 1=sign-on"
^XTMP("XPDT",7743,"RTN","XWBTCPM",186,0)=" ; Increased timeout period (%=1) during signon from 90 to 180 for accessibility reasons"
^XTMP("XPDT",7743,"RTN","XWBTCPM",187,0)=" S XWBTIME=$S($G(%):180,$G(XWBVER)>1.1:$$BAT^XUPARAM,1:36000),XWBTIME(1)=5 ; (*p35)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",188,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",189,0)="TIMEOUT ;Do this on MAIN  loop timeout"
^XTMP("XPDT",7743,"RTN","XWBTCPM",190,0)=" I $G(DUZ)>0 D QSND^XWBRW(""#BYE#"") Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",191,0)=" ;Sign-on timeout"
^XTMP("XPDT",7743,"RTN","XWBTCPM",192,0)=" S XWBR(0)=0,XWBR(1)=1,XWBR(2)="""",XWBR(3)=""TIME-OUT"",XWBPTYPE=2"
^XTMP("XPDT",7743,"RTN","XWBTCPM",193,0)=" D SND^XWBRW"
^XTMP("XPDT",7743,"RTN","XWBTCPM",194,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",195,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",196,0)="OS() ;Return the OS"
^XTMP("XPDT",7743,"RTN","XWBTCPM",197,0)=" Q $S(^%ZOSF(""OS"")[""OpenM"":""OpenM"",^%ZOSF(""OS"")[""GT.M"":""GT.M"",^(""OS"")[""DSM"":""DSM"",1:""UNK"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",198,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",199,0)="INIT ;Setup"
^XTMP("XPDT",7743,"RTN","XWBTCPM",200,0)=" S U=""^"",XWBTIME=10,XWBOS=$$OS,XWBDEBUG=0,XWBRBUF="""""
^XTMP("XPDT",7743,"RTN","XWBTCPM",201,0)=" S XWBDEBUG=$$GET^XPAR(""SYS"",""XWBDEBUG"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",202,0)=" S XWBT(""BF"")=$S(XWBOS=""GT.M"":""#"",1:""!"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",203,0)=" S XWBT(""PCNT"")=0 I XWBOS=""GT.M"",$L($T(^XUSCNT)) S XWBT(""PCNT"")=1"
^XTMP("XPDT",7743,"RTN","XWBTCPM",204,0)=" D LOGSTART^XWBDLOG(""XWBTCPM"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",205,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",206,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",207,0)="DEBUG ;Entry point for debug, Build a server to get the connect"
^XTMP("XPDT",7743,"RTN","XWBTCPM",208,0)=" ;Cache sample;ZB SERV+1^XWBTCPM:""L+"" ZB ETRAP+1^XWBTCPM:""B"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",209,0)=" W !,""Before running this entry point set your debugger to stop at"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",210,0)=" W !,""the place you want to debug. Some spots to use:"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",211,0)=" W !,""'SERV+1^XWBTCPM', 'MAIN+1^XWBTCPM' or 'CAPI+1^XWBPRS.'"",!"
^XTMP("XPDT",7743,"RTN","XWBTCPM",212,0)=" W !,""or location of your choice."",!"
^XTMP("XPDT",7743,"RTN","XWBTCPM",213,0)=" W !,""IP Socket to Listen on: "" R SOCK:300,! Q:'$T!(SOCK[""^"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",214,0)=" ;Use %ZISTCP to do a single server"
^XTMP("XPDT",7743,"RTN","XWBTCPM",215,0)=" D LISTEN^%ZISTCP(SOCK,""SERV^XWBTCPM"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM",216,0)=" U $P W !,""Done"""
^XTMP("XPDT",7743,"RTN","XWBTCPM",217,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",218,0)="SERV ;Callback from the server"
^XTMP("XPDT",7743,"RTN","XWBTCPM",219,0)=" S XWBTDEV=IO,XWBTIME(1)=3600 D INIT"
^XTMP("XPDT",7743,"RTN","XWBTCPM",220,0)=" S XWBDEBUG=1,MSG=$$BREAD^XWBRW(5,60) ;R MSG#5"
^XTMP("XPDT",7743,"RTN","XWBTCPM",221,0)=" D NEW"
^XTMP("XPDT",7743,"RTN","XWBTCPM",222,0)=" S IO(""C"")=1 ;Cause the Listenr to stop"
^XTMP("XPDT",7743,"RTN","XWBTCPM",223,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",224,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",225,0)="EXIT ;Close out"
^XTMP("XPDT",7743,"RTN","XWBTCPM",226,0)=" I $G(DUZ) D LOGOUT^XUSRB"
^XTMP("XPDT",7743,"RTN","XWBTCPM",227,0)=" I $G(XWBT(""PCNT"")) D COUNT^XUSCNT(-1)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",228,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",229,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM",230,0)="LOG(MSG) ;Record Debug Info"
^XTMP("XPDT",7743,"RTN","XWBTCPM",231,0)=" D:$G(XWBDEBUG) LOG^XWBDLOG(MSG)"
^XTMP("XPDT",7743,"RTN","XWBTCPM",232,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM",233,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM2")="0^2^B4246015^B3174797"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",1,0)="XWBTCPM2 ;ISF/RWF - BROKER Other Service ;12/16/09  07:58"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",2,0)=" ;;1.1;RPC BROKER;**43,45,53**;Mar 28, 1997;Build 4"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",3,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",4,0)="OTH ;Check if some other special service."
^XTMP("XPDT",7743,"RTN","XWBTCPM2",5,0)=" ; ZEXCEPT: XWB - set prior to call from CONNTYPE^XWBTCPM"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",6,0)=" S $ETRAP=""D ERR^XWBTCPM2"""
^XTMP("XPDT",7743,"RTN","XWBTCPM2",7,0)=" I XWB=""~EAC~"" G EAC"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",8,0)=" I XWB=""~BSE~"" G BSE"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",9,0)=" I XWB=""~SVR~"" G SVR"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",10,0)=" D LOG(""In 0TH^XWBTCPM2 - Prefix not known: ""_XWB)"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",11,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",12,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",13,0)="SVR ;Handle"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",14,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",15,0)="EAC ;Enterprise Access"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",16,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",17,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",18,0)="BSE ;Broker Security Enhansment"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",19,0)=" D LOG(""BSE msg"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",20,0)=" N L,HDL,RET,XWBSBUF"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",21,0)=" S XWBSBUF="""",RET="""",HDL="""""
^XTMP("XPDT",7743,"RTN","XWBTCPM2",22,0)=" S L=$$BREAD^XWBRW(3) I L S HDL=$$BREAD^XWBRW(L)"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",23,0)=" I $E(HDL,1,3)=""PUT"" D"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",24,0)=" . D RPUT^XUSBSE1(.RET,HDL)"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",25,0)=" . Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",26,0)=" ;Check IT"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",27,0)=" I $E(HDL,1,3)'=""PUT"" D GETVISIT^XUSBSE1(.RET,HDL)"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",28,0)=" D WRITE(RET),WBF"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",29,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",30,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",31,0)="ERR ;Error Trap"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",32,0)=" D ^%ZTER"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",33,0)=" G H2^XUSCLEAN"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",34,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",35,0)="LOG(%) ;Link to logger"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",36,0)=" Q:'$G(XWBDEBUG)"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",37,0)=" D LOG^XWBTCPM(%)"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",38,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",39,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",40,0)="WRITE(M,F) ;Write"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",41,0)=" N L S L="""" I '$G(F) S L=$E(1000+$L(M),2,4)"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",42,0)=" D WRITE^XWBRW(L_M)"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",43,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",44,0)="WBF ;Buffer Flush"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",45,0)=" D WBF^XWBRW"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",46,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",47,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",48,0)="OPEN(P1,P2) ;Open the device and set the variables"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",49,0)=" D CALL^%ZISTCP(P1,P2) Q:POP"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",50,0)=" S XWBTDEV=IO"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",51,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",52,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",53,0)="CALLBSE(SERVER,PORT,TOKEN,STN) ;Special Broker service"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",54,0)=" N XWBDEBUG,XWBOS,XWBRBUF,XWBSBUF,XWBT,XWBTIME,IO"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",55,0)=" N DEMOSTR,XWBTDEV,RET,X,POP"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",56,0)=" S IO(0)=$P"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",57,0)=" D INIT^XWBTCPM,LOG(""CALLBSE"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",58,0)=" D OPEN(SERVER,PORT)"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",59,0)=" ; if initial failure try to get web address"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",60,0)=" I POP,$G(STN)'="""" S SERVER=$$WEBADDRS^XUSBSE1(STN) I SERVER'="""" D OPEN(SERVER,PORT)"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",61,0)=" I POP Q ""Didn't open connection."""
^XTMP("XPDT",7743,"RTN","XWBTCPM2",62,0)=" S XWBSBUF="""",XWBRBUF="""""
^XTMP("XPDT",7743,"RTN","XWBTCPM2",63,0)=" U XWBTDEV"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",64,0)=" D WRITE(""~BSE~"",1),WRITE(TOKEN),WBF^XWBRW"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",65,0)=" S X=$$BREAD^XWBRW(3),RET=""No Response"" I X S RET=$$BREAD^XWBRW(X)"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",66,0)=" D CLOSE^%ZISTCP,LOG(""FINISH"")"
^XTMP("XPDT",7743,"RTN","XWBTCPM2",67,0)=" Q RET"
^XTMP("XPDT",7743,"RTN","XWBTCPMT")="0^4^B11304181^B11122547"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",1,0)="XWBTCPMT ;ISF/RWF - Routine to test a connection ;10/07/09  16:37"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",2,0)=" ;;1.1;RPC BROKER;**43,49,53**;Mar 28, 1997;Build 4"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",3,0)="CALL ;Interactive"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",4,0)=" N IP,PORT,STAT"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",5,0)=" D HOME^%ZIS"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",6,0)=" S U=""^"",DTIME=$$DTIME^XUP"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",7,0)=" W !,""Interactive Broker Test"""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",8,0)=" R !,""IP ADDRESS: "",IP:DTIME"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",9,0)=" I IP[""^"" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",10,0)=" R !,""PORT: "",PORT:DTIME"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",11,0)=" I PORT[""^"" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",12,0)=" S STAT=$$TEST(IP,PORT,1)"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",13,0)=" U $P"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",14,0)=" W !,$S(STAT>0:""Success, response: ""_$P(STAT,U,2),1:""Failed: ""_$P(STAT,U,2,9))"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",15,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",16,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",17,0)="TEST(IP,PORT,TALK) ;"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",18,0)=" N T1,T2,T3,T4,OS,RES,RES2,RES3"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",19,0)=" S OS=^%ZOSF(""OS"")"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",20,0)=" I IP'?1.3N1P1.3N1P1.3N1P1.3N S IP=$$ADDRESS^XLFNSLK(IP)"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",21,0)=" I IP'?1.3N1P1.3N1P1.3N1P1.3N Q ""-1^BAD IP"""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",22,0)=" I OS[""OpenM"" X ""S T1=$ZH"""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",23,0)=" D CALL^%ZISTCP(IP,PORT)"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",24,0)=" I OS[""OpenM"" X ""S T2=$ZH"""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",25,0)=" I POP Q ""-1^Failed to Connect"""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",26,0)=" U IO"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",27,0)=" N $ET S $ET=""G ERR^XWBTCPMT"""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",28,0)=" ;TCPConnect"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",29,0)=" W ""[XWB]10304""_$C(10)_""TCPConnect5001010.6.17.95f00010f0024ISF-FORTW.vha.med.va.govf""_$C(4),@IOF"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",30,0)=" R RES:10 I '$T S RES=""-1^TIMEOUT"" G EXIT"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",31,0)=" I OS[""OpenM"" X ""S T3=$ZH"""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",32,0)=" W ""[XWB]11302""_$C(1)_""0""_$C(16)_""XUS SIGNON SETUP54f""_$C(4),@IOF"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",33,0)=" R RES2:10"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",34,0)=" I OS[""OpenM"" X ""S T4=$ZH"""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",35,0)=" W ""[XWB]10304""_$C(5)_""#BYE#""_$C(4),@IOF"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",36,0)=" R RES3:3 I '$T S RES=""-1^TIMEOUT after accept"" G EXIT"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",37,0)=" S RES=""1^""_RES_U_($G(T2)-$G(T1))_U_($G(T3)-$G(T2))_U_($G(T4)-$G(T3))"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",38,0)="EXIT ;Close and Exit"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",39,0)=" D CLOSE^%ZISTCP"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",40,0)=" Q RES"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",41,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",42,0)="ERR ;"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",43,0)=" D CLOSE^%ZISTCP"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",44,0)=" U $P"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",45,0)=" Q ""-1^""_$$EC^%ZOSV"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",46,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",47,0)="CHECK ;Check server setup"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",48,0)=" N XPARSYS,XWBDEBUG,XWBOS,XWBT,XWNRBUF,XWBTIME,NEWJOB,XWBVER"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",49,0)=" W !,""This will check for some of the errors that can prevent the Broker"""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",50,0)=" W !,""from getting started."",!"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",51,0)=" D HOME^%ZIS"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",52,0)=" S XWBVER=1.108"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",53,0)=" D INIT^XWBTCPM"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",54,0)=" W !,""Debugging is set to "",$S(XWBDEBUG=1:""On"",XWBDEBUG=2:""Verbose"",XWBDEBUG=3:""Very Verbose"",1:""Off"")"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",55,0)=" D SETTIME^XWBTCPM(0)"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",56,0)=" W !,""Broker activity timeout is set to "",XWBTIME"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",57,0)=" S %ZIS=""M"",IOP=""NULL"" D ^%ZIS"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",58,0)=" I POP W !,""The NULL device is not setup correctly."""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",59,0)=" I 'POP D"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",60,0)=" . W !,""Checking can Write to null device"""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",61,0)=" . U IO W !,""TEST"",!"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",62,0)=" . D ^%ZISC U IO W !,""The NULL device is OK."""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",63,0)=" I $T(SHARELIC^%ZOSV)="""" W !,""The routine %ZOSV is missing the entry point 'SHARELIC'."""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",64,0)=" I $T(GETPEER^%ZOSV)="""" W !,""The routine %ZOSV is missing the entry point 'GETPEER'."""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",65,0)=" I $G(XWBT(""PCNT"")),$T(COUNT^XUSCNT)="""" W !,""The routine XUSCNT is missing on a GT.M system."""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",66,0)=" W !,""Checking if new JOB's can start."""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",67,0)=" S ^TMP(""XWB"",$J)=1 X ""J HOLD^XWBTCPMT($J) H 1"""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",68,0)=" I $G(^TMP(""XWB"",$J))=1 W !,""Doesn't look like a new JOB could start!"",!"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",69,0)=" S NEWJOB=$$NEWJOB^XWBTCPM()"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",70,0)=" W !,""New jobs are ""_$S('NEWJOB:""not "",1:"""")_""allowed."""
^XTMP("XPDT",7743,"RTN","XWBTCPMT",71,0)=" W !,""Done with the checks."",!"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",72,0)=" K ^TMP(""XWB"",$J)"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",73,0)=" Q"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",74,0)=" ;"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",75,0)="HOLD(MJ) ;Show that a new job is allowed."
^XTMP("XPDT",7743,"RTN","XWBTCPMT",76,0)=" S ^TMP(""XWB"",MJ)=5"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",77,0)=" HANG 5"
^XTMP("XPDT",7743,"RTN","XWBTCPMT",78,0)=" Q"
^XTMP("XPDT",7743,"VER")="8.0^22.0"
^XTMP("XPDT",7744)="1"
^XTMP("XPDT",7744,"BLD",1234,0)="XU*8.0*523^KERNEL^0^3100211^y"
^XTMP("XPDT",7744,"BLD",1234,1,0)="^^3^3^3100211^^^"
^XTMP("XPDT",7744,"BLD",1234,1,1,0)="Patch XU*8*523 BROKER SECURITY ENCHANCEMENT FOR IMAGING"
^XTMP("XPDT",7744,"BLD",1234,1,2,0)=" "
^XTMP("XPDT",7744,"BLD",1234,1,3,0)="See the description in the patch module on Forum."
^XTMP("XPDT",7744,"BLD",1234,4,0)="^9.64PA^3.081^2"
^XTMP("XPDT",7744,"BLD",1234,4,3.081,0)="3.081"
^XTMP("XPDT",7744,"BLD",1234,4,3.081,2,0)="^9.641^3.081^1"
^XTMP("XPDT",7744,"BLD",1234,4,3.081,2,3.081,0)="SIGN-ON LOG  (File-top level)"
^XTMP("XPDT",7744,"BLD",1234,4,3.081,2,3.081,1,0)="^9.6411^18^1"
^XTMP("XPDT",7744,"BLD",1234,4,3.081,2,3.081,1,18,0)="Remote App"
^XTMP("XPDT",7744,"BLD",1234,4,3.081,222)="y^n^p^^^^n^^n"
^XTMP("XPDT",7744,"BLD",1234,4,3.081,224)=""
^XTMP("XPDT",7744,"BLD",1234,4,8994.5,0)="8994.5"
^XTMP("XPDT",7744,"BLD",1234,4,8994.5,222)="y^y^f^^^^n"
^XTMP("XPDT",7744,"BLD",1234,4,"APDD",3.081,3.081)=""
^XTMP("XPDT",7744,"BLD",1234,4,"APDD",3.081,3.081,18)=""
^XTMP("XPDT",7744,"BLD",1234,4,"B",3.081,3.081)=""
^XTMP("XPDT",7744,"BLD",1234,4,"B",8994.5,8994.5)=""
^XTMP("XPDT",7744,"BLD",1234,6)="^433"
^XTMP("XPDT",7744,"BLD",1234,6.3)="16"
^XTMP("XPDT",7744,"BLD",1234,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7744,"BLD",1234,"KRN",.4,0)=".4"
^XTMP("XPDT",7744,"BLD",1234,"KRN",.401,0)=".401"
^XTMP("XPDT",7744,"BLD",1234,"KRN",.402,0)=".402"
^XTMP("XPDT",7744,"BLD",1234,"KRN",.403,0)=".403"
^XTMP("XPDT",7744,"BLD",1234,"KRN",.5,0)=".5"
^XTMP("XPDT",7744,"BLD",1234,"KRN",.84,0)=".84"
^XTMP("XPDT",7744,"BLD",1234,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7744,"BLD",1234,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM",0)="^9.68A^6^6"
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM",1,0)="XUSBSE1^^0^B46486369"
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM",2,0)="XUSBSE2^^0^B17916276"
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM",3,0)="XUSRB4^^0^B16820466"
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM",4,0)="XUSRB^^0^B33401626"
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM",5,0)="XUS1^^0^B26024789"
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM",6,0)="XUESSO1^^0^B41206647"
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM","B","XUESSO1",6)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM","B","XUS1",5)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM","B","XUSBSE1",1)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM","B","XUSBSE2",2)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM","B","XUSRB",4)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN",9.8,"NM","B","XUSRB4",3)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN",19,0)="19"
^XTMP("XPDT",7744,"BLD",1234,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7744,"BLD",1234,"KRN",101,0)="101"
^XTMP("XPDT",7744,"BLD",1234,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7744,"BLD",1234,"KRN",771,0)="771"
^XTMP("XPDT",7744,"BLD",1234,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7744,"BLD",1234,"KRN",870,0)="870"
^XTMP("XPDT",7744,"BLD",1234,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7744,"BLD",1234,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7744,"BLD",1234,"KRN",8994,0)="8994"
^XTMP("XPDT",7744,"BLD",1234,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",.4,.4)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",.401,.401)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",.402,.402)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",.403,.403)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",.5,.5)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",.84,.84)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",19,19)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",101,101)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",771,771)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",870,870)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",8994,8994)=""
^XTMP("XPDT",7744,"BLD",1234,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7744,"BLD",1234,"QDEF")="^^^^YES^^^^NO^^NO"
^XTMP("XPDT",7744,"BLD",1234,"QUES",0)="^9.62^^"
^XTMP("XPDT",7744,"BLD",1234,"REQB",0)="^9.611^4^4"
^XTMP("XPDT",7744,"BLD",1234,"REQB",1,0)="XWB*1.1*53^2"
^XTMP("XPDT",7744,"BLD",1234,"REQB",2,0)="XU*8.0*439^0"
^XTMP("XPDT",7744,"BLD",1234,"REQB",3,0)="XU*8.0*469^0"
^XTMP("XPDT",7744,"BLD",1234,"REQB",4,0)="XU*8.0*499^2"
^XTMP("XPDT",7744,"BLD",1234,"REQB","B","XU*8.0*439",2)=""
^XTMP("XPDT",7744,"BLD",1234,"REQB","B","XU*8.0*469",3)=""
^XTMP("XPDT",7744,"BLD",1234,"REQB","B","XU*8.0*499",4)=""
^XTMP("XPDT",7744,"BLD",1234,"REQB","B","XWB*1.1*53",1)=""
^XTMP("XPDT",7744,"FIA",3.081)="SIGN-ON LOG"
^XTMP("XPDT",7744,"FIA",3.081,0)="^XUSEC(0,"
^XTMP("XPDT",7744,"FIA",3.081,0,0)="3.081P"
^XTMP("XPDT",7744,"FIA",3.081,0,1)="y^n^p^^^^n^^n"
^XTMP("XPDT",7744,"FIA",3.081,0,10)=""
^XTMP("XPDT",7744,"FIA",3.081,0,11)=""
^XTMP("XPDT",7744,"FIA",3.081,0,"RLRO")=""
^XTMP("XPDT",7744,"FIA",3.081,0,"VR")="8.0^XU"
^XTMP("XPDT",7744,"FIA",3.081,3.081)="1"
^XTMP("XPDT",7744,"FIA",3.081,3.081,18)=""
^XTMP("XPDT",7744,"FIA",8994.5)="REMOTE APPLICATION"
^XTMP("XPDT",7744,"FIA",8994.5,0)="^XWB(8994.5,"
^XTMP("XPDT",7744,"FIA",8994.5,0,0)="8994.5"
^XTMP("XPDT",7744,"FIA",8994.5,0,1)="y^y^f^^^^n"
^XTMP("XPDT",7744,"FIA",8994.5,0,10)=""
^XTMP("XPDT",7744,"FIA",8994.5,0,11)=""
^XTMP("XPDT",7744,"FIA",8994.5,0,"RLRO")=""
^XTMP("XPDT",7744,"FIA",8994.5,0,"VR")="8.0^XU"
^XTMP("XPDT",7744,"FIA",8994.5,8994.5)="0"
^XTMP("XPDT",7744,"FIA",8994.5,8994.51)="0"
^XTMP("XPDT",7744,"MBREQ")="0"
^XTMP("XPDT",7744,"PKG",3,-1)="1^1"
^XTMP("XPDT",7744,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7744,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7744,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7744,"PKG",3,22,1,0)="8.0^3090706^3090706^6"
^XTMP("XPDT",7744,"PKG",3,22,1,"PAH",1,0)="523^3100211^20"
^XTMP("XPDT",7744,"PKG",3,22,1,"PAH",1,1,0)="^^3^3^3100211"
^XTMP("XPDT",7744,"PKG",3,22,1,"PAH",1,1,1,0)="Patch XU*8*523 BROKER SECURITY ENCHANCEMENT FOR IMAGING"
^XTMP("XPDT",7744,"PKG",3,22,1,"PAH",1,1,2,0)=" "
^XTMP("XPDT",7744,"PKG",3,22,1,"PAH",1,1,3,0)="See the description in the patch module on Forum."
^XTMP("XPDT",7744,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7744,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7744,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7744,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7744,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7744,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7744,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7744,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7744,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7744,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7744,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7744,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7744,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7744,"QUES","XPI1","B")="YES"
^XTMP("XPDT",7744,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7744,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7744,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7744,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7744,"QUES","XPM1","B")=""
^XTMP("XPDT",7744,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7744,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7744,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7744,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7744,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7744,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7744,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7744,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7744,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7744,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7744,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7744,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7744,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7744,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7744,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7744,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7744,"RTN")="6"
^XTMP("XPDT",7744,"RTN","XUESSO1")="0^6^B41206647^B38935544"
^XTMP("XPDT",7744,"RTN","XUESSO1",1,0)="XUESSO1 ;LUKE/SEA Single Sign-on utilities;02/11/10  14:57;08/18/09  14:29"
^XTMP("XPDT",7744,"RTN","XUESSO1",2,0)=" ;;8.0;KERNEL;**165,183,196,245,254,269,337,395,466,523**;Jul 10, 1995;Build 16"
^XTMP("XPDT",7744,"RTN","XUESSO1",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7744,"RTN","XUESSO1",4,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",5,0)="GET(INDUZ) ;Gather identifying data from user's home site."
^XTMP("XPDT",7744,"RTN","XUESSO1",6,0)=" ;Must have Name, Access&Verify codes, SSN (no pseudo), station name&number"
^XTMP("XPDT",7744,"RTN","XUESSO1",7,0)=" N %,NAME,SITE,SSN,PHONE,X,N,VPID"
^XTMP("XPDT",7744,"RTN","XUESSO1",8,0)=" I '$D(DUZ) G BOMB"
^XTMP("XPDT",7744,"RTN","XUESSO1",9,0)=" I '$D(DUZ(2)) G BOMB"
^XTMP("XPDT",7744,"RTN","XUESSO1",10,0)=" ;I '$D(INDUZ) S INDUZ=DUZ"
^XTMP("XPDT",7744,"RTN","XUESSO1",11,0)=" S N=$G(^VA(200,DUZ,0))"
^XTMP("XPDT",7744,"RTN","XUESSO1",12,0)=" I '$L(N) G BOMB"
^XTMP("XPDT",7744,"RTN","XUESSO1",13,0)=" S %=$P(N,U,3) I $L(%)<1 G BOMB ;No Access Code"
^XTMP("XPDT",7744,"RTN","XUESSO1",14,0)=" S %=$P($G(^VA(200,DUZ,.1)),U,2) I $L(%)<1 G BOMB ;No Verify Code"
^XTMP("XPDT",7744,"RTN","XUESSO1",15,0)=" S %=$P(N,U,11) I $L(%)>1,(DT>%) G BOMB ;Terminated"
^XTMP("XPDT",7744,"RTN","XUESSO1",16,0)=" S NAME=$P(N,U)"
^XTMP("XPDT",7744,"RTN","XUESSO1",17,0)=" I '$L(NAME) G BOMB"
^XTMP("XPDT",7744,"RTN","XUESSO1",18,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",19,0)=" S SITE=$$NS^XUAF4(DUZ(2)) ;Site is name^station#"
^XTMP("XPDT",7744,"RTN","XUESSO1",20,0)=" I $P(SITE,U,2)="""" G BOMB ;Need a station number"
^XTMP("XPDT",7744,"RTN","XUESSO1",21,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",22,0)=" S SSN=$P($G(^VA(200,DUZ,1)),U,9)"
^XTMP("XPDT",7744,"RTN","XUESSO1",23,0)=" I $$SPECIAL($P(SITE,""^"",2)) S SSN=999999999 G G4 ;Manila RO doesn't need SSN"
^XTMP("XPDT",7744,"RTN","XUESSO1",24,0)=" I 'SSN G BOMB"
^XTMP("XPDT",7744,"RTN","XUESSO1",25,0)=" ;Don't allow if the SSN is pseudo"
^XTMP("XPDT",7744,"RTN","XUESSO1",26,0)=" I $E(SSN,10)=""P"" G BOMB"
^XTMP("XPDT",7744,"RTN","XUESSO1",27,0)=" ;Don't allow if the SSN is not real, (e.g. 00000NNNN)"
^XTMP("XPDT",7744,"RTN","XUESSO1",28,0)=" I $E(SSN,1,5)=""00000"" G BOMB"
^XTMP("XPDT",7744,"RTN","XUESSO1",29,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",30,0)="G4 S PHONE=$$PH"
^XTMP("XPDT",7744,"RTN","XUESSO1",31,0)=" S VPID=$$VPID^XUPS(DUZ) ;(p337)"
^XTMP("XPDT",7744,"RTN","XUESSO1",32,0)=" S X=SSN_U_NAME_U_SITE_U_DUZ"
^XTMP("XPDT",7744,"RTN","XUESSO1",33,0)=" I $L(PHONE)>2&($L(PHONE<20)) S X=X_U_PHONE"
^XTMP("XPDT",7744,"RTN","XUESSO1",34,0)=" S $P(X,U,7)=VPID ;(p337)"
^XTMP("XPDT",7744,"RTN","XUESSO1",35,0)=" ;ssn^name^station name^station number^DUZ^phone^vpid"
^XTMP("XPDT",7744,"RTN","XUESSO1",36,0)=" Q X"
^XTMP("XPDT",7744,"RTN","XUESSO1",37,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",38,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",39,0)="BOMB ;Insufficient information to allow visiting"
^XTMP("XPDT",7744,"RTN","XUESSO1",40,0)=" S X=""-1^Insufficient User Information On File.  ssn,name,station name,station number,DUZ,phone"""
^XTMP("XPDT",7744,"RTN","XUESSO1",41,0)=" Q X"
^XTMP("XPDT",7744,"RTN","XUESSO1",42,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",43,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",44,0)="PH() ; Try for a phone number or pager"
^XTMP("XPDT",7744,"RTN","XUESSO1",45,0)=" N %,X"
^XTMP("XPDT",7744,"RTN","XUESSO1",46,0)=" S %="""""
^XTMP("XPDT",7744,"RTN","XUESSO1",47,0)=" S X=$G(^VA(200,DUZ,.13))"
^XTMP("XPDT",7744,"RTN","XUESSO1",48,0)=" I '$L(X) Q """""
^XTMP("XPDT",7744,"RTN","XUESSO1",49,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",50,0)=" S %=$P(X,U,5) I $L(%)>6 Q %  ;Commercial #"
^XTMP("XPDT",7744,"RTN","XUESSO1",51,0)=" S %=$P(X,U,2) I $L(%)>2 Q %  ;Office"
^XTMP("XPDT",7744,"RTN","XUESSO1",52,0)=" S %=$P(X,U,8) I $L(%)>6 Q %  ;Digital Pager"
^XTMP("XPDT",7744,"RTN","XUESSO1",53,0)=" S %=$P(X,U,7) I $L(%)>6 Q %  ;Pager"
^XTMP("XPDT",7744,"RTN","XUESSO1",54,0)=" S %=$P(X,U,3) I $L(%)>2 Q %  ;Phone #3"
^XTMP("XPDT",7744,"RTN","XUESSO1",55,0)=" S %=$P(X,U,4) I $L(%)>2 Q %  ;Phone #4"
^XTMP("XPDT",7744,"RTN","XUESSO1",56,0)=" S %=$P(X,U,1) I $L(%)>2 Q %  ;Home Phone"
^XTMP("XPDT",7744,"RTN","XUESSO1",57,0)=" Q """" ;Couldn't find one."
^XTMP("XPDT",7744,"RTN","XUESSO1",58,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",59,0)="SPECIAL(SN) ;Special Manila RO site"
^XTMP("XPDT",7744,"RTN","XUESSO1",60,0)=" Q 358=SN"
^XTMP("XPDT",7744,"RTN","XUESSO1",61,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",62,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",63,0)="PUT(DATIN) ;;Setup data from authenticating site GET() at receiving site"
^XTMP("XPDT",7744,"RTN","XUESSO1",64,0)=" ;Return: 0=fail, 1=OK"
^XTMP("XPDT",7744,"RTN","XUESSO1",65,0)=" N NEWDUZ,FDR,TODAY,IEN,DIC,USER,X,%T"
^XTMP("XPDT",7744,"RTN","XUESSO1",66,0)=" N SSN,NAME,SITE,SITENUM,RMTDUZ,PHONE,VPID,XUMF"
^XTMP("XPDT",7744,"RTN","XUESSO1",67,0)=" S U=""^"",TODAY=$$HTFM^XLFDT($H),DT=$P(TODAY,"".""),NEWDUZ=0"
^XTMP("XPDT",7744,"RTN","XUESSO1",68,0)=" K ^TMP(""DIERR"",$J)"
^XTMP("XPDT",7744,"RTN","XUESSO1",69,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",70,0)=" S SSN=$P(DATIN,U,1),NAME=$P(DATIN,U,2),SITE=$P(DATIN,U,3)"
^XTMP("XPDT",7744,"RTN","XUESSO1",71,0)=" S SITENUM=$P(DATIN,U,4),RMTDUZ=$P(DATIN,U,5),PHONE=$P(DATIN,U,6)"
^XTMP("XPDT",7744,"RTN","XUESSO1",72,0)=" S VPID=$P(DATIN,U,7) ;(p337)"
^XTMP("XPDT",7744,"RTN","XUESSO1",73,0)=" ;Format checks"
^XTMP("XPDT",7744,"RTN","XUESSO1",74,0)=" I NAME'?1U.E1"",""1U.E Q 0"
^XTMP("XPDT",7744,"RTN","XUESSO1",75,0)=" I SSN'?9N Q 0"
^XTMP("XPDT",7744,"RTN","XUESSO1",76,0)=" I '$L(SITE)!('$L(SITENUM)) Q 0"
^XTMP("XPDT",7744,"RTN","XUESSO1",77,0)=" S XUMF=1 D CHK^DIE(4,99,,SITENUM,.%T) I %T=U Q 0 ;p533"
^XTMP("XPDT",7744,"RTN","XUESSO1",78,0)=" D CHK^DIE(200.06,1,,SITE,.%T) I %T=U Q 0 ;p533"
^XTMP("XPDT",7744,"RTN","XUESSO1",79,0)=" I RMTDUZ'>0 Q 0 ;p337"
^XTMP("XPDT",7744,"RTN","XUESSO1",80,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",81,0)=" ;Get a LOCK. Block if can't get."
^XTMP("XPDT",7744,"RTN","XUESSO1",82,0)=" L +^VA(200,""HL7""):10 Q:'$T 0"
^XTMP("XPDT",7744,"RTN","XUESSO1",83,0)=" S %T=$$TALL($G(DUZ,0)) L -^VA(200,""HL7"")"
^XTMP("XPDT",7744,"RTN","XUESSO1",84,0)=" I %T Q $$SET(NEWDUZ) ;Return 1 if OK."
^XTMP("XPDT",7744,"RTN","XUESSO1",85,0)=" Q 0"
^XTMP("XPDT",7744,"RTN","XUESSO1",86,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",87,0)=" ;Per PSIM don't load VPID's, Only done by PSIM."
^XTMP("XPDT",7744,"RTN","XUESSO1",88,0)=" ;Code for adding VPID removed in p466."
^XTMP("XPDT",7744,"RTN","XUESSO1",89,0)="TALL(DUZ) ;Test for existing user or adds a new one"
^XTMP("XPDT",7744,"RTN","XUESSO1",90,0)=" N FLAG,NEWREC"
^XTMP("XPDT",7744,"RTN","XUESSO1",91,0)=" S FLAG=0,DUZ(0)=""@"" ;Make sure we can add the entry"
^XTMP("XPDT",7744,"RTN","XUESSO1",92,0)=" ;See if match VPID, Per PSIM only use for lookup."
^XTMP("XPDT",7744,"RTN","XUESSO1",93,0)=" I $L(VPID) D"
^XTMP("XPDT",7744,"RTN","XUESSO1",94,0)=" . S NEWDUZ=+$$IEN^XUPS(VPID) Q:NEWDUZ<1"
^XTMP("XPDT",7744,"RTN","XUESSO1",95,0)=" . I '$D(^VA(200,NEWDUZ,8910,""B"",SITENUM)) D VISM"
^XTMP("XPDT",7744,"RTN","XUESSO1",96,0)=" . D UPDT S FLAG=1"
^XTMP("XPDT",7744,"RTN","XUESSO1",97,0)=" . Q"
^XTMP("XPDT",7744,"RTN","XUESSO1",98,0)=" I FLAG Q 1 ;Quit here if we found a match on VPID"
^XTMP("XPDT",7744,"RTN","XUESSO1",99,0)=" ;See if the SSN is in the NPF cross reference"
^XTMP("XPDT",7744,"RTN","XUESSO1",100,0)=" I '$$SPECIAL(SITENUM),$D(^VA(200,""SSN"",SSN)) D"
^XTMP("XPDT",7744,"RTN","XUESSO1",101,0)=" .S NEWDUZ=$O(^VA(200,""SSN"",SSN,0))"
^XTMP("XPDT",7744,"RTN","XUESSO1",102,0)=" .I '$D(^VA(200,NEWDUZ,8910,""B"",SITENUM)) D VISM"
^XTMP("XPDT",7744,"RTN","XUESSO1",103,0)=" .D UPDT"
^XTMP("XPDT",7744,"RTN","XUESSO1",104,0)=" .S FLAG=1"
^XTMP("XPDT",7744,"RTN","XUESSO1",105,0)=" .Q"
^XTMP("XPDT",7744,"RTN","XUESSO1",106,0)=" ;See if in the AVISIT cross reference"
^XTMP("XPDT",7744,"RTN","XUESSO1",107,0)=" I 'FLAG,$$SPECIAL(SITENUM) D"
^XTMP("XPDT",7744,"RTN","XUESSO1",108,0)=" . S NEWDUZ=$O(^VA(200,""AVISIT"",SITENUM,RMTDUZ,0))"
^XTMP("XPDT",7744,"RTN","XUESSO1",109,0)=" . Q:NEWDUZ'>0"
^XTMP("XPDT",7744,"RTN","XUESSO1",110,0)=" . D UPDT S FLAG=1"
^XTMP("XPDT",7744,"RTN","XUESSO1",111,0)=" . Q"
^XTMP("XPDT",7744,"RTN","XUESSO1",112,0)=" I FLAG Q 1 ;Quit here if we found a match for SSN or AVISIT"
^XTMP("XPDT",7744,"RTN","XUESSO1",113,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",114,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",115,0)=" ;There is no matching SSN, try for a NAME match in ""B"""
^XTMP("XPDT",7744,"RTN","XUESSO1",116,0)=" S FLAG=0,NAME=$$UP^XLFSTR(NAME)"
^XTMP("XPDT",7744,"RTN","XUESSO1",117,0)=" I $D(^VA(200,""B"",NAME)) D"
^XTMP("XPDT",7744,"RTN","XUESSO1",118,0)=" .N %,USER,USER2"
^XTMP("XPDT",7744,"RTN","XUESSO1",119,0)=" .S NEWDUZ=$O(^VA(200,""B"",NAME,0))"
^XTMP("XPDT",7744,"RTN","XUESSO1",120,0)=" .S USER2=$O(^VA(200,""B"",NAME,NEWDUZ)) ;More then one?"
^XTMP("XPDT",7744,"RTN","XUESSO1",121,0)=" .Q:$L(USER2)>0"
^XTMP("XPDT",7744,"RTN","XUESSO1",122,0)=" .;"
^XTMP("XPDT",7744,"RTN","XUESSO1",123,0)=" .S %=$P($G(^VA(200,NEWDUZ,1)),U,9)"
^XTMP("XPDT",7744,"RTN","XUESSO1",124,0)=" .Q:%'=SSN  ;Don't use this name if it has a different SSN"
^XTMP("XPDT",7744,"RTN","XUESSO1",125,0)=" .;"
^XTMP("XPDT",7744,"RTN","XUESSO1",126,0)=" .I '$L($P(^VA(200,NEWDUZ,1),U,9)) D ADDS"
^XTMP("XPDT",7744,"RTN","XUESSO1",127,0)=" .I '$D(^VA(200,NEWDUZ,8910,""B"",SITENUM)) D VISM"
^XTMP("XPDT",7744,"RTN","XUESSO1",128,0)=" .D UPDT S FLAG=1"
^XTMP("XPDT",7744,"RTN","XUESSO1",129,0)=" .Q"
^XTMP("XPDT",7744,"RTN","XUESSO1",130,0)=" I FLAG Q 1 ;Quit here if we found an exact match for NAME (w/o SSN)"
^XTMP("XPDT",7744,"RTN","XUESSO1",131,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",132,0)="NEWU ;We didn't find anybody under SSN or NAME so we add a new user"
^XTMP("XPDT",7744,"RTN","XUESSO1",133,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",134,0)=" S DIC(0)="""" ;Turn off ^XUA4A7 (work around)"
^XTMP("XPDT",7744,"RTN","XUESSO1",135,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",136,0)=" ;Put the name in the .01 field first."
^XTMP("XPDT",7744,"RTN","XUESSO1",137,0)=" D ADDU ;ADDU will set NEWDUZ"
^XTMP("XPDT",7744,"RTN","XUESSO1",138,0)=" ;If NEWDUZ is still 0, the User add didn't work so exit."
^XTMP("XPDT",7744,"RTN","XUESSO1",139,0)=" I NEWDUZ=0 Q 0"
^XTMP("XPDT",7744,"RTN","XUESSO1",140,0)=" ; Add SSN and Alias."
^XTMP("XPDT",7744,"RTN","XUESSO1",141,0)=" D ADDS,ADDA ;(p337)"
^XTMP("XPDT",7744,"RTN","XUESSO1",142,0)=" ; Fill in the  VISITED FROM multiple"
^XTMP("XPDT",7744,"RTN","XUESSO1",143,0)=" D VISM,UPDT ;Do update for all data in UPDT"
^XTMP("XPDT",7744,"RTN","XUESSO1",144,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",145,0)=" I $D(^TMP(""DIERR"",$J)) Q 0  ;FileMan Error"
^XTMP("XPDT",7744,"RTN","XUESSO1",146,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",147,0)=" I NEWDUZ D BULL Q 1  ;Every thing OK"
^XTMP("XPDT",7744,"RTN","XUESSO1",148,0)=" Q 0  ;Couldn't add user"
^XTMP("XPDT",7744,"RTN","XUESSO1",149,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",150,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",151,0)=" ;              *****Subroutines*****"
^XTMP("XPDT",7744,"RTN","XUESSO1",152,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",153,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",154,0)="SET(NEWDUZ) ;Set the user up to go"
^XTMP("XPDT",7744,"RTN","XUESSO1",155,0)=" Q:NEWDUZ'>0 0"
^XTMP("XPDT",7744,"RTN","XUESSO1",156,0)=" N XUSER,XOPT"
^XTMP("XPDT",7744,"RTN","XUESSO1",157,0)=" S DUZ=NEWDUZ,U=""^"",DUZ(""VISITOR"")=SITENUM_U_RMTDUZ ;p533"
^XTMP("XPDT",7744,"RTN","XUESSO1",158,0)=" D DUZ^XUS1A"
^XTMP("XPDT",7744,"RTN","XUESSO1",159,0)=" Q 1"
^XTMP("XPDT",7744,"RTN","XUESSO1",160,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",161,0)="ADDU ;Add a new name to the New Person File"
^XTMP("XPDT",7744,"RTN","XUESSO1",162,0)=" N DD,DO,DIC,DA,X,Y"
^XTMP("XPDT",7744,"RTN","XUESSO1",163,0)=" S DIC=""^VA(200,"",DIC(0)=""L"",X=NAME,NEWREC=1 ;p533"
^XTMP("XPDT",7744,"RTN","XUESSO1",164,0)=" D FILE^DICN"
^XTMP("XPDT",7744,"RTN","XUESSO1",165,0)=" S:Y>0 NEWDUZ=+Y"
^XTMP("XPDT",7744,"RTN","XUESSO1",166,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUESSO1",167,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",168,0)="ADDS ;Add a SSN to the file"
^XTMP("XPDT",7744,"RTN","XUESSO1",169,0)=" Q:$$SPECIAL(SITENUM)"
^XTMP("XPDT",7744,"RTN","XUESSO1",170,0)=" S IEN=NEWDUZ_"","""
^XTMP("XPDT",7744,"RTN","XUESSO1",171,0)=" S FDR(200,IEN,9)=SSN"
^XTMP("XPDT",7744,"RTN","XUESSO1",172,0)=" ;Do update for all data in UPDT"
^XTMP("XPDT",7744,"RTN","XUESSO1",173,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUESSO1",174,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",175,0)="ADDA ;Add a new Alias to file 200.04"
^XTMP("XPDT",7744,"RTN","XUESSO1",176,0)=" Q:$D(^VA(200,NEWDUZ,3,""B"",""VISITOR""))"
^XTMP("XPDT",7744,"RTN","XUESSO1",177,0)=" S IEN=""+2,""_NEWDUZ_"","""
^XTMP("XPDT",7744,"RTN","XUESSO1",178,0)=" S FDR(""200.04"",IEN,.01)=""VISITOR"""
^XTMP("XPDT",7744,"RTN","XUESSO1",179,0)=" ;Do update for all data in UPDT"
^XTMP("XPDT",7744,"RTN","XUESSO1",180,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUESSO1",181,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",182,0)="VISM ;Create a multiple for this site number in the VISTED FROM file"
^XTMP("XPDT",7744,"RTN","XUESSO1",183,0)=" S IEN=""+3,""_NEWDUZ_"","""
^XTMP("XPDT",7744,"RTN","XUESSO1",184,0)=" S FDR(""200.06"",IEN,.01)=SITENUM"
^XTMP("XPDT",7744,"RTN","XUESSO1",185,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",186,0)=" S FDR(""200.06"",IEN,1)=SITE"
^XTMP("XPDT",7744,"RTN","XUESSO1",187,0)=" S FDR(""200.06"",IEN,2)=RMTDUZ"
^XTMP("XPDT",7744,"RTN","XUESSO1",188,0)=" S FDR(""200.06"",IEN,3)=TODAY"
^XTMP("XPDT",7744,"RTN","XUESSO1",189,0)=" ;I $D(PHONE),($L(PHONE)>2) S FDR(""200.06"",IEN,5)=PHONE"
^XTMP("XPDT",7744,"RTN","XUESSO1",190,0)=" ;Do update for all data in UPDT"
^XTMP("XPDT",7744,"RTN","XUESSO1",191,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUESSO1",192,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",193,0)="UPDT ;Update the LAST VISIT field"
^XTMP("XPDT",7744,"RTN","XUESSO1",194,0)=" I $D(FDR(200.06)) S IEN=$O(FDR(200.06,""""))"
^XTMP("XPDT",7744,"RTN","XUESSO1",195,0)=" E  S IEN=$O(^VA(200,NEWDUZ,8910,""B"",SITENUM,0))_"",""_NEWDUZ_"","""
^XTMP("XPDT",7744,"RTN","XUESSO1",196,0)=" S FDR(200.06,IEN,4)=TODAY"
^XTMP("XPDT",7744,"RTN","XUESSO1",197,0)=" ;Update the phone each time"
^XTMP("XPDT",7744,"RTN","XUESSO1",198,0)=" I $D(PHONE),($L(PHONE)>2) S FDR(""200.06"",IEN,5)=PHONE ;p466"
^XTMP("XPDT",7744,"RTN","XUESSO1",199,0)=" K IEN D UPDATE^DIE(""E"",""FDR"",""IEN"") ;File all the data"
^XTMP("XPDT",7744,"RTN","XUESSO1",200,0)=" I $D(^TMP(""DIERR"",$J)) D"
^XTMP("XPDT",7744,"RTN","XUESSO1",201,0)=" . N DIK,DA"
^XTMP("XPDT",7744,"RTN","XUESSO1",202,0)=" . D FAIL"
^XTMP("XPDT",7744,"RTN","XUESSO1",203,0)=" . I $D(NEWREC) S DIK=""^VA(200,"",DA=NEWDUZ D ^DIK ;Remove partial entry ;p533"
^XTMP("XPDT",7744,"RTN","XUESSO1",204,0)=" . S NEWDUZ=0 ;Tell failed"
^XTMP("XPDT",7744,"RTN","XUESSO1",205,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUESSO1",206,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",207,0)="BULL ;Set up the bulletin and fire it off, Let MM see if bulletin is there"
^XTMP("XPDT",7744,"RTN","XUESSO1",208,0)=" N XMB"
^XTMP("XPDT",7744,"RTN","XUESSO1",209,0)=" S XMB=""XUVISIT"""
^XTMP("XPDT",7744,"RTN","XUESSO1",210,0)=" S XMB(1)=$$FMTE^XLFDT(TODAY)"
^XTMP("XPDT",7744,"RTN","XUESSO1",211,0)=" S XMB(2)=NAME,XMB(3)=NEWDUZ,XMB(4)=SITE"
^XTMP("XPDT",7744,"RTN","XUESSO1",212,0)=" S XMB(5)=SITENUM,XMB(6)=RMTDUZ,XMB(7)=PHONE"
^XTMP("XPDT",7744,"RTN","XUESSO1",213,0)=" D ^XMB"
^XTMP("XPDT",7744,"RTN","XUESSO1",214,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUESSO1",215,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUESSO1",216,0)="FAIL ;Send bulletin if fail to add user."
^XTMP("XPDT",7744,"RTN","XUESSO1",217,0)=" N I,XMTEXT,XMY,XUTEXT,XMSUB,XMZ,XMMG,ZTQUEUED"
^XTMP("XPDT",7744,"RTN","XUESSO1",218,0)=" S XMSUB=""XUESSO-VISIT ADD FAILED"",ZTQUEUED=1"
^XTMP("XPDT",7744,"RTN","XUESSO1",219,0)=" D MSG^DIALOG(""AEST"",.XMTEXT)"
^XTMP("XPDT",7744,"RTN","XUESSO1",220,0)=" S XUTEXT(1)=""Attempting to add ""_NAME_"" from ""_SITE"
^XTMP("XPDT",7744,"RTN","XUESSO1",221,0)=" S XUTEXT(2)=$G(DATIN),XUTEXT(3)="" "",XUTEXT=3,I=0"
^XTMP("XPDT",7744,"RTN","XUESSO1",222,0)=" F  S I=$O(XMTEXT(I)) Q:'I  S XUTEXT=XUTEXT+1,XUTEXT(XUTEXT)=XMTEXT(I)"
^XTMP("XPDT",7744,"RTN","XUESSO1",223,0)=" S XMTEXT=""XUTEXT("",XMY(""G.XUSVISITFAIL@FO-OAKLAND.MED.VA.GOV"")="""""
^XTMP("XPDT",7744,"RTN","XUESSO1",224,0)=" D ^XMD"
^XTMP("XPDT",7744,"RTN","XUESSO1",225,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUS1")="0^5^B26024789^B24609205"
^XTMP("XPDT",7744,"RTN","XUS1",1,0)="XUS1 ;SF-ISC/STAFF - SIGNON ;02/03/10  16:01"
^XTMP("XPDT",7744,"RTN","XUS1",2,0)=" ;;8.0;KERNEL;**9,59,111,165,150,252,265,419,469,523**;Jul 10, 1995;Build 16"
^XTMP("XPDT",7744,"RTN","XUS1",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7744,"RTN","XUS1",4,0)=" ;User setup"
^XTMP("XPDT",7744,"RTN","XUS1",5,0)="USER ;"
^XTMP("XPDT",7744,"RTN","XUS1",6,0)=" K XUTEXT S XUM=$$USER^XUS1A(),$Y=0"
^XTMP("XPDT",7744,"RTN","XUS1",7,0)=" ;Show post sign-on text"
^XTMP("XPDT",7744,"RTN","XUS1",8,0)=" F I=0:0 S I=$O(XUTEXT(I)) Q:I'>0  D:$Y>20  W:$E(XUTEXT(I),1)=""!"" ! W $E(XUTEXT(I),2,999)"
^XTMP("XPDT",7744,"RTN","XUS1",9,0)=" . N DIR S DIR(0)=""E"",DIR(""A"")=""Enter RETURN to continue"" D ^DIR W @IOF Q"
^XTMP("XPDT",7744,"RTN","XUS1",10,0)=" ;if XUM=9 multi sign-on NOT allowed"
^XTMP("XPDT",7744,"RTN","XUS1",11,0)=" I XUM=9 W !!,?8,$$EZBLD^DIALOG(30810.45)"
^XTMP("XPDT",7744,"RTN","XUS1",12,0)=" Q:XUM  ;User can't sign-on."
^XTMP("XPDT",7744,"RTN","XUS1",13,0)="SET ;"
^XTMP("XPDT",7744,"RTN","XUS1",14,0)=" S Y=$$CHKDIV()"
^XTMP("XPDT",7744,"RTN","XUS1",15,0)=" I $P(Y,U,2)>0,$D(^DIC(4,0)) D ASKDIV"
^XTMP("XPDT",7744,"RTN","XUS1",16,0)=" S DUZ(2)=+Y D DUZ^XUS1A"
^XTMP("XPDT",7744,"RTN","XUS1",17,0)=" ;Check verify code"
^XTMP("XPDT",7744,"RTN","XUS1",18,0)=" I $$VCHG D CVC^XUS2 G:$D(DUOUT) H^XUS"
^XTMP("XPDT",7744,"RTN","XUS1",19,0)=" S:$P(XOPT,""^"",5) XUTT=1 ;Ask Device"
^XTMP("XPDT",7744,"RTN","XUS1",20,0)=" D ENQ ;Inquire to Terminal Type"
^XTMP("XPDT",7744,"RTN","XUS1",21,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUS1",22,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",23,0)="VCHG() ;Check if the Verify code needs to be changed"
^XTMP("XPDT",7744,"RTN","XUS1",24,0)=" I $D(DUZ(""ASH"")) Q 0 ;rwf 403"
^XTMP("XPDT",7744,"RTN","XUS1",25,0)=" D:'$D(XUSER) USER^XUS(DUZ)"
^XTMP("XPDT",7744,"RTN","XUS1",26,0)=" Q:'$L($P(XUSER(1),U,2)) 1 ;Null VC"
^XTMP("XPDT",7744,"RTN","XUS1",27,0)=" I $$BROKER^XWBLIB Q:$P(XUSER(0),U,8)=1 0 ;VC never expires, only for BROKER"
^XTMP("XPDT",7744,"RTN","XUS1",28,0)=" Q (XUSER(1)+$P(XOPT,U,15))'>$H ;Time to change"
^XTMP("XPDT",7744,"RTN","XUS1",29,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",30,0)="ASKDIV ;Ask the user for the Division, return Y"
^XTMP("XPDT",7744,"RTN","XUS1",31,0)=" N X"
^XTMP("XPDT",7744,"RTN","XUS1",32,0)=" S DIC=""^VA(200,DUZ,2,"",DIC(0)=""AEMQ"",DIC(""P"")=""200.02P"",X=$O(^VA(200,DUZ,2,""AX1"",1,0)) S:X>0 DIC(""B"")=$P($$NS^XUAF4(X),U)"
^XTMP("XPDT",7744,"RTN","XUS1",33,0)=" D ^DIC I Y'>0 W !,*7,""You must select one."" G ASKDIV"
^XTMP("XPDT",7744,"RTN","XUS1",34,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUS1",35,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",36,0)="CHKDIV(CD) ;ef,sr Check if user needs to select Division."
^XTMP("XPDT",7744,"RTN","XUS1",37,0)=" N %,%1,%2,%3,%4"
^XTMP("XPDT",7744,"RTN","XUS1",38,0)=" I $G(DUZ(""DIV""))>0 Q DUZ(""DIV"") ;p469 Set outside"
^XTMP("XPDT",7744,"RTN","XUS1",39,0)=" S %=$O(^VA(200,DUZ,2,0)),%1=$O(^(%))"
^XTMP("XPDT",7744,"RTN","XUS1",40,0)=" I %1,$D(CD) D"
^XTMP("XPDT",7744,"RTN","XUS1",41,0)=" . S %2=0,%3=0,CD=0"
^XTMP("XPDT",7744,"RTN","XUS1",42,0)=" . F  S %2=$O(^VA(200,DUZ,2,%2)) Q:%2'>0  S %4=^(%2,0),%3=%3+1,CD(%3)=%2_""^""_$$NS^XUAF4(%2)_$S($P(%4,""^"",2):""^1"",1:"""")"
^XTMP("XPDT",7744,"RTN","XUS1",43,0)=" . S CD=%3"
^XTMP("XPDT",7744,"RTN","XUS1",44,0)=" Q %_""^""_%1"
^XTMP("XPDT",7744,"RTN","XUS1",45,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",46,0)="ENQ ;Get terminal type"
^XTMP("XPDT",7744,"RTN","XUS1",47,0)=" S XUT1="""" I XUTT X XUEOFF R X:0 X ^%ZOSF(""TYPE-AHEAD"") W $C(27,91,99) R *X:2 I X=27 F  R X#1:2 S XUT1=XUT1_X Q:'$T!(X=""c"")"
^XTMP("XPDT",7744,"RTN","XUS1",48,0)=" ;Commented out the next line as Wyse 75 are not used"
^XTMP("XPDT",7744,"RTN","XUS1",49,0)=" ;I XUTT,(XUT1'[""["") R X:0 S XUT1="""" W *5 R *X:2 R:$T XUT1:2 S X=$S(X=6:""C-WYSE 75"",1:$C(X)_XUT1),XUT1="""""
^XTMP("XPDT",7744,"RTN","XUS1",50,0)=" X XUEON I XUTT,XUT1[""["" S Y=$O(^%ZIS(3.22,""B"",XUT1,0)) I Y>0 S X=$P($G(^%ZIS(3.22,Y,0)),""^"",2)"
^XTMP("XPDT",7744,"RTN","XUS1",51,0)=" I X?1.ANP S DIC=""^%ZIS(2,"",DIC(0)=""MO"" D ^DIC I Y>0 S XUIOP(1)=$P(Y,U,2),$P(XUIOP,"";"",2)=XUIOP(1),^VA(200,DUZ,1.2)=+Y"
^XTMP("XPDT",7744,"RTN","XUS1",52,0)=" I '$D(XUIOP(1)),$D(^VA(200,DUZ,1.2)) S X=+^(1.2) I X>0,$D(^%ZIS(2,X,0)) S $P(XUIOP,"";"",2)=$P(^(0),U)"
^XTMP("XPDT",7744,"RTN","XUS1",53,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUS1",54,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",55,0)="NEXT ;Jump to the next routine"
^XTMP("XPDT",7744,"RTN","XUS1",56,0)=" S IOP=XUIOP D ^%ZIS D SAVE ;Save off device/user info"
^XTMP("XPDT",7744,"RTN","XUS1",57,0)=" S X=$G(^DISV(DUZ)) ;Add kill by session or day here"
^XTMP("XPDT",7744,"RTN","XUS1",58,0)=" S ^DISV(DUZ)=$H"
^XTMP("XPDT",7744,"RTN","XUS1",59,0)=" ;Removed UCI jump p469"
^XTMP("XPDT",7744,"RTN","XUS1",60,0)=" ;S X=%UCI,N1=XUCI I PGM[""["" S X=$P(PGM,""["",2,4),PGM=$P(PGM,""["",1)"
^XTMP("XPDT",7744,"RTN","XUS1",61,0)=" ;S:X["""""""" X=$P(X,"""""""",2) S:X?.E1""]""&(X'[""["") X=$E(X,1,$L(X)-1) S XUM=14,XUM(0)=X"
^XTMP("XPDT",7744,"RTN","XUS1",62,0)=" ;S %UCI=X I ""PRODMGR""'[X,$D(^%ZOSF(""UCICHECK"")) X ^(""UCICHECK"") G NO:Y="""" S:N1=Y %UCI="""""
^XTMP("XPDT",7744,"RTN","XUS1",63,0)=" ;S XUM=15,XUM(0)=PGM G NO:PGM'?1AP.AN"
^XTMP("XPDT",7744,"RTN","XUS1",64,0)=" ;G NO:"":""_XUA_"":""'[("":""_PGM_"":"")"
^XTMP("XPDT",7744,"RTN","XUS1",65,0)=" D AUDIT"
^XTMP("XPDT",7744,"RTN","XUS1",66,0)=" S X=$S($D(^VA(200,DUZ,0)):$P($P(^(0),U),"",""),1:""Unk""),X=$E(X,1,10)_""_""_($J#10000) D SETENV^%ZOSV ;Set Process Name"
^XTMP("XPDT",7744,"RTN","XUS1",67,0)=" ;S X=$P(XOPT,U,16) X:X ^%ZOSF(""PRIORITY"")"
^XTMP("XPDT",7744,"RTN","XUS1",68,0)=" D LOG:DUZ,KILL"
^XTMP("XPDT",7744,"RTN","XUS1",69,0)=" ;I %UCI]"""" K ^XUTL(""XQ"",$J) S $P(^VA(200,DUZ,1.1),U,3)=0 G GO^%XUCI"
^XTMP("XPDT",7744,"RTN","XUS1",70,0)=" K ^XUTL(""OR"",$J),^UTILITY($J),%UCI"
^XTMP("XPDT",7744,"RTN","XUS1",71,0)=" G ^XQ ;@(U_PGM)"
^XTMP("XPDT",7744,"RTN","XUS1",72,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",73,0)="SAVE ;"
^XTMP("XPDT",7744,"RTN","XUS1",74,0)=" N X"
^XTMP("XPDT",7744,"RTN","XUS1",75,0)=" S X=""DUZ"" F  S X=$Q(@X) Q:X=""""  I $D(@X) S ^XUTL(""XQ"",$J,$TR(X,""""""""))=@X"
^XTMP("XPDT",7744,"RTN","XUS1",76,0)=" F X=""DUZ"",""IO"",""IO(""""IP"""")"",""IO(""""CLNM"""")"",""XQVOL"" I $D(@X) S ^XUTL(""XQ"",$J,X)=@X"
^XTMP("XPDT",7744,"RTN","XUS1",77,0)=" D SAVEVAR^%ZIS ;Save the HOME device variables"
^XTMP("XPDT",7744,"RTN","XUS1",78,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUS1",79,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",80,0)="LOG ;used by R/S and Broker"
^XTMP("XPDT",7744,"RTN","XUS1",81,0)=" N %,XP1,XP2"
^XTMP("XPDT",7744,"RTN","XUS1",82,0)=" S XQXFLG(""LLOG"")=$P($G(^VA(200,DUZ,1.1)),U) ;Save for LOGIN templates"
^XTMP("XPDT",7744,"RTN","XUS1",83,0)=" S XP1=$$SLOG($P(XUVOL,U,1),,XUDEV,XUCI,$P(XUENV,U,3))"
^XTMP("XPDT",7744,"RTN","XUS1",84,0)=" S %=$$COOKIE($P(^VA(200,DUZ,0),U),XP1) I $L(%) S XQXFLG(""ZEBRA"")=XP1_""~""_%,$P(^XUSEC(0,XP1,0),U,13)=% L +^XWB(""SESSION"",XQXFLG(""ZEBRA"")):60"
^XTMP("XPDT",7744,"RTN","XUS1",85,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUS1",86,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",87,0)=" ;Division updated in DIVSET^XUSRB2"
^XTMP("XPDT",7744,"RTN","XUS1",88,0)=" ;The other parameters are in the symbol table with known names."
^XTMP("XPDT",7744,"RTN","XUS1",89,0)=" ;P1=DUZ,P2=$I,P3=$J,P4=EXIT D/T,P5=VOLUME,P6=TASKMAN,P7=XUDEV,P8=UCI,P9=ZIO,P10=NODE,P11=IP,P12=CLNM,P13=HANDLE,P14=REMOTE SITE,P15=REMOTE IEN"
^XTMP("XPDT",7744,"RTN","XUS1",90,0)="SLOG(P5,P6,P7,P8,P10,P14,P15) ;"
^XTMP("XPDT",7744,"RTN","XUS1",91,0)=" N %,I,DA,DIK,N,XL1,XL2 S XL1=$$NOW^XLFDT"
^XTMP("XPDT",7744,"RTN","XUS1",92,0)=" S P5=$G(P5),P6=$G(P6),P7=$G(P7),P8=$G(P8),P10=$G(P10)"
^XTMP("XPDT",7744,"RTN","XUS1",93,0)=" S N=DUZ_""^""_$I_""^""_$J_""^^""_P5_""^""_P6_""^""_P7_""^""_P8_""^""_$G(IO(""ZIO""))_""^""_P10_""^""_$G(IO(""IP""))_""^""_$G(IO(""CLNM""))"
^XTMP("XPDT",7744,"RTN","XUS1",94,0)=" S:$D(DUZ(""VISITOR"")) $P(N,U,14,15)=DUZ(""VISITOR"") ;p523"
^XTMP("XPDT",7744,"RTN","XUS1",95,0)=" S:$G(DUZ(2))>0 $P(N,""^"",17)=DUZ(2)"
^XTMP("XPDT",7744,"RTN","XUS1",96,0)=" S:$D(DUZ(""REMAPP"")) $P(N,U,18)=$P(DUZ(""REMAPP""),U) ;p523"
^XTMP("XPDT",7744,"RTN","XUS1",97,0)=" F I=XL1:.00000001 L +^XUSEC(0,I):1 Q:'$D(^XUSEC(0,I))  L -^XUSEC(0,I)"
^XTMP("XPDT",7744,"RTN","XUS1",98,0)=" S ^XUSEC(0,I,0)=N"
^XTMP("XPDT",7744,"RTN","XUS1",99,0)=" L -^XUSEC(0,I)"
^XTMP("XPDT",7744,"RTN","XUS1",100,0)=" S $P(^XUSEC(0,0),""^"",3,4)=I_U_(1+$P(^XUSEC(0,0),""^"",4))"
^XTMP("XPDT",7744,"RTN","XUS1",101,0)=" S (XL1,DA)=I,DIK=""^XUSEC(0,"" D IX^DIK ;index new entry"
^XTMP("XPDT",7744,"RTN","XUS1",102,0)=" S ^XUTL(""XQ"",$J,0)=XL1 ;save for sign-off"
^XTMP("XPDT",7744,"RTN","XUS1",103,0)=" I 'P6 S XL2=$G(^VA(200,DUZ,1.1)),$P(XL2,U,1,3)=XL1_""^0^1"",$P(XL2,U,5)="""",^VA(200,DUZ,1.1)=XL2  ;Set last Sign-on"
^XTMP("XPDT",7744,"RTN","XUS1",104,0)=" Q XL1"
^XTMP("XPDT",7744,"RTN","XUS1",105,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",106,0)="COOKIE(J1,J2) ;Call VAdeamon for a cookie"
^XTMP("XPDT",7744,"RTN","XUS1",107,0)=" N ZZ,%"
^XTMP("XPDT",7744,"RTN","XUS1",108,0)=" I $G(XQXFLG(""ZEBRA""))=-1 K XQXFLG(""ZEBRA"") Q """" ;Disabled"
^XTMP("XPDT",7744,"RTN","XUS1",109,0)=" Q:$G(IO(""IP""))="""" """" ;Not using Telnet"
^XTMP("XPDT",7744,"RTN","XUS1",110,0)=" Q:$D(DUZ(""VISITOR"")) """" ;Don't create Handles for visitors p523"
^XTMP("XPDT",7744,"RTN","XUS1",111,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",112,0)=" S %=$$CMD^XWBCAGNT(.ZZ,""XWB CREATE HANDLE"",J1_""^""_J2) Q:'% """""
^XTMP("XPDT",7744,"RTN","XUS1",113,0)=" Q $G(ZZ(1))"
^XTMP("XPDT",7744,"RTN","XUS1",114,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",115,0)="AUDIT ;Set-up Audit info"
^XTMP("XPDT",7744,"RTN","XUS1",116,0)=" N I,I1,I2"
^XTMP("XPDT",7744,"RTN","XUS1",117,0)=" S I=$G(^XTV(8989.3,1,19)),I1=$P(I,U),I2=$P(I,U,2) Q:""asu""'[I1  I (I2>XUNOW)!($P(I,U,3)<XUNOW) Q"
^XTMP("XPDT",7744,"RTN","XUS1",118,0)=" I ""au""[I1 S:(I1=""a"")!($D(^XTV(8989.3,1,19.3,""B"",DUZ))>1) XQAUDIT=1 Q"
^XTMP("XPDT",7744,"RTN","XUS1",119,0)=" S XQAUDIT="""" F I=0:0 S I=$O(^XTV(8989.3,1,19.1,""B"",I)) Q:I'>0!($L(XQAUDIT)>245)  S XQAUDIT=XQAUDIT_""2^""_I_U"
^XTMP("XPDT",7744,"RTN","XUS1",120,0)=" S I1="""" F I=0:0 S I1=$O(^XTV(8989.3,1,19.2,""B"",I1)) Q:I1']""""!($L(XQAUDIT)>245)  S XQAUDIT=XQAUDIT_""3^""_I1_U"
^XTMP("XPDT",7744,"RTN","XUS1",121,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUS1",122,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",123,0)="DD(Y) Q $$FMTE^XLFDT(Y,1)"
^XTMP("XPDT",7744,"RTN","XUS1",124,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUS1",125,0)="KILL N %UCI,PGM,U,XQUR,XMCHAN G KILL1^XUSCLEAN"
^XTMP("XPDT",7744,"RTN","XUS1",126,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUS1",127,0)="NO G NO^XUS"
^XTMP("XPDT",7744,"RTN","XUSBSE1")="0^1^B46486369^B25570327"
^XTMP("XPDT",7744,"RTN","XUSBSE1",1,0)="XUSBSE1 ;JLI/OAK-OIFO - MODIFICATIONS FOR BSE ;02/01/10  07:35"
^XTMP("XPDT",7744,"RTN","XUSBSE1",2,0)=" ;;8.0;KERNEL;**404,439,523**;Jul 10, 1995;Build 16"
^XTMP("XPDT",7744,"RTN","XUSBSE1",3,0)=" ; SETVISIT - returns a BSE token"
^XTMP("XPDT",7744,"RTN","XUSBSE1",4,0)="SETVISIT(RES) ; .RPC"
^XTMP("XPDT",7744,"RTN","XUSBSE1",5,0)=" N TOKEN,O"
^XTMP("XPDT",7744,"RTN","XUSBSE1",6,0)=" S TOKEN=$$HANDLE^XUSRB4(""XUSBSE"",1)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",7,0)=" S ^XTMP(TOKEN,1)=$$ENCRYP^XUSRB1($$GET^XUESSO1(DUZ))"
^XTMP("XPDT",7744,"RTN","XUSBSE1",8,0)=" S ^XTMP(TOKEN,3)=+$H ;Set expiration day"
^XTMP("XPDT",7744,"RTN","XUSBSE1",9,0)=" L -^XTMP(TOKEN) ;Lock set in $$HANDLE"
^XTMP("XPDT",7744,"RTN","XUSBSE1",10,0)=" S RES=TOKEN"
^XTMP("XPDT",7744,"RTN","XUSBSE1",11,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",12,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",13,0)=" ; GETVISIT - returns demographics for user indicated by TOKEN"
^XTMP("XPDT",7744,"RTN","XUSBSE1",14,0)=" ;   output - RES - passed by reference, contains global location on return"
^XTMP("XPDT",7744,"RTN","XUSBSE1",15,0)=" ;   input  - TOKEN - token value returned by remote site"
^XTMP("XPDT",7744,"RTN","XUSBSE1",16,0)="GETVISIT(RES,TOKEN) ; .RPC"
^XTMP("XPDT",7744,"RTN","XUSBSE1",17,0)=" N O"
^XTMP("XPDT",7744,"RTN","XUSBSE1",18,0)=" S RES="""",O=0"
^XTMP("XPDT",7744,"RTN","XUSBSE1",19,0)=" ; shouldn't come in with a null token ; JLI 091218"
^XTMP("XPDT",7744,"RTN","XUSBSE1",20,0)=" I TOKEN="""" Q  ; JLI 091218"
^XTMP("XPDT",7744,"RTN","XUSBSE1",21,0)=" ;Check expiration time, and if it has passed."
^XTMP("XPDT",7744,"RTN","XUSBSE1",22,0)=" L +^XTMP(TOKEN):10 I '$T Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",23,0)=" I ($G(^XTMP(TOKEN,3))-$H) K ^XTMP(TOKEN)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",24,0)=" S RES=$G(^XTMP(TOKEN,1)) S:$L(RES) RES=$$DECRYP^XUSRB1(RES)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",25,0)=" L -^XTMP(TOKEN)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",26,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",27,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",28,0)="OLDCAPRI(XWBUSRNM) ;The OLD CAPRI code, Remove next patch"
^XTMP("XPDT",7744,"RTN","XUSBSE1",29,0)=" ; Return 1 if a valid user, else 0."
^XTMP("XPDT",7744,"RTN","XUSBSE1",30,0)=" N XVAL,XOPTION"
^XTMP("XPDT",7744,"RTN","XUSBSE1",31,0)=" S XVAL=$$PUT^XUESSO1($P(XWBUSRNM,U,3,99)) ; Sign in as Visitor"
^XTMP("XPDT",7744,"RTN","XUSBSE1",32,0)=" I XVAL D"
^XTMP("XPDT",7744,"RTN","XUSBSE1",33,0)=" . S XOPTION=$$FIND1^DIC(19,"""",""X"",""DVBA CAPRI GUI"")"
^XTMP("XPDT",7744,"RTN","XUSBSE1",34,0)=" . D SETCNTXT(XOPTION) S DTIME=$$DTIME^XUP(DUZ),DUZ(""REMAPP"")=""^Old CAPRI"""
^XTMP("XPDT",7744,"RTN","XUSBSE1",35,0)=" Q $S(XVAL>0:1,1:0)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",36,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",37,0)=" ; CHKUSER - determines if a BSE sign-on is valid"
^XTMP("XPDT",7744,"RTN","XUSBSE1",38,0)=" ;   INPUTSTR - input - String of characters from client"
^XTMP("XPDT",7744,"RTN","XUSBSE1",39,0)=" ;   return value - 1 if a valid user, else 0"
^XTMP("XPDT",7744,"RTN","XUSBSE1",40,0)=" ; called from XUSRB"
^XTMP("XPDT",7744,"RTN","XUSBSE1",41,0)="CHKUSER(INPUTSTR) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",42,0)=" N XUCODE,XUENTRY,XUSTR,XUTOKEN"
^XTMP("XPDT",7744,"RTN","XUSBSE1",43,0)=" ; ZEXCEPT: XUREMAPP - global variable naming the REMOTE APPLICATION in use"
^XTMP("XPDT",7744,"RTN","XUSBSE1",44,0)=" I +INPUTSTR=-31,INPUTSTR[""DVBA_"" Q $$OLDCAPRI(INPUTSTR)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",45,0)=" I +INPUTSTR'=-35 Q 0"
^XTMP("XPDT",7744,"RTN","XUSBSE1",46,0)=" S INPUTSTR=$P(INPUTSTR,U,2,99)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",47,0)=" K ^TMP(""XUSBSE1"",$J)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",48,0)=" S XUCODE=$$DECRYP^XUSRB1(INPUTSTR) ;TMP"
^XTMP("XPDT",7744,"RTN","XUSBSE1",49,0)=" S XUCODE=$$EN^XUSHSH($P(XUCODE,U))"
^XTMP("XPDT",7744,"RTN","XUSBSE1",50,0)=" S XUENTRY=$$FIND1^DIC(8994.5,"""",""X"",XUCODE,""ACODE"") D:XUENTRY>0"
^XTMP("XPDT",7744,"RTN","XUSBSE1",51,0)=" . S DUZ(""REMAPP"")=XUENTRY_U_$$GET1^DIQ(8994.5,XUENTRY_"","",.01)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",52,0)=" . S XUTOKEN=$P($$DECRYP^XUSRB1(INPUTSTR),U,2)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",53,0)=" . S XUSTR=$P($$DECRYP^XUSRB1(INPUTSTR),U,3,4)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",54,0)=" . S XUENTRY=$$BSEUSER(XUENTRY,XUTOKEN,XUSTR)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",55,0)=" . Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",56,0)=" S DTIME=$$DTIME^XUP(DUZ) ;p523"
^XTMP("XPDT",7744,"RTN","XUSBSE1",57,0)=" Q $S(XUENTRY'>0:0,1:XUENTRY)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",58,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",59,0)=" ; BSEUSER - returns internal entry number for authenicated user or 0"
^XTMP("XPDT",7744,"RTN","XUSBSE1",60,0)=" ;   ENTRY - input - internal entry number in REMOTE APPLICATION file"
^XTMP("XPDT",7744,"RTN","XUSBSE1",61,0)=" ;   TOKEN - input - token from authenticaing site"
^XTMP("XPDT",7744,"RTN","XUSBSE1",62,0)=" ;   STR   - input - remainder of input string (2 pieces)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",63,0)="BSEUSER(ENTRY,TOKEN,STR) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",64,0)=" N XUIEN,XUCONTXT,XUDEMOG,XCNT,XVAL,ARRAY"
^XTMP("XPDT",7744,"RTN","XUSBSE1",65,0)=" S XUIEN=0,XUDEMOG="""""
^XTMP("XPDT",7744,"RTN","XUSBSE1",66,0)=" S XCNT=0 F  S XCNT=$O(^XWB(8994.5,ENTRY,1,XCNT)) Q:XCNT'>0  S XVAL=^(XCNT,0) D  Q:XUDEMOG'="""""
^XTMP("XPDT",7744,"RTN","XUSBSE1",67,0)=" . ; CODE TO HANDLE CONNECTION TYPE AND CONNECTIONS"
^XTMP("XPDT",7744,"RTN","XUSBSE1",68,0)=" . I $P(XVAL,U)=""M"" S XUDEMOG=$$M2M($P(XVAL,U,3),$P(XVAL,U,2),TOKEN) D CLOSE^XWBM2MC() Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",69,0)=" . I $P(XVAL,U)=""R"" S XUDEMOG=$$XWB($P(XVAL,U,3),$P(XVAL,U,2),TOKEN) Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",70,0)=" . I $P(XVAL,U)=""H"" S XUDEMOG=$$POST1^XUSBSE2(.ARRAY,$P(XVAL,U,3),$P(XVAL,U,2),$P(XVAL,U,4),""xVAL=""_TOKEN) Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",71,0)=" . I $P(XVAL,U)=""S"" S XUDEMOG=$$HOME(TOKEN,XVAL,STR) Q  ;p522"
^XTMP("XPDT",7744,"RTN","XUSBSE1",72,0)=" . Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",73,0)=" ; if invalid set XWBSEC so an error is reported in the GUI application"
^XTMP("XPDT",7744,"RTN","XUSBSE1",74,0)=" I +XUDEMOG=-1 S XWBSEC=""BSE ERROR - ""_$P(XUDEMOG,""^"",2)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",75,0)=" I $L(XUDEMOG,""^"")>2 D"
^XTMP("XPDT",7744,"RTN","XUSBSE1",76,0)=" . S XUCONTXT=$P($G(^XWB(8994.5,ENTRY,0)),U,2)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",77,0)=" . S XUIEN=$$SETUP(XUDEMOG,XUCONTXT)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",78,0)=" Q $S(XUIEN'>0:0,1:XUIEN)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",79,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",80,0)="XWB(SERVER,PORT,TOKEN) ;Special Broker service"
^XTMP("XPDT",7744,"RTN","XUSBSE1",81,0)=" N DEMOSTR,IO,XWBTDEV,XWBRBUF"
^XTMP("XPDT",7744,"RTN","XUSBSE1",82,0)=" Q $$CALLBSE^XWBTCPM2(SERVER,PORT,TOKEN)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",83,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",84,0)="M2M(SERVER,PORT,TOKEN) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",85,0)=" N DEMOGSTR,XWBCRLFL,RETRNVAL,XUSBSARR"
^XTMP("XPDT",7744,"RTN","XUSBSE1",86,0)=" S DEMOGSTR="""""
^XTMP("XPDT",7744,"RTN","XUSBSE1",87,0)=" N XWBSTAT,XWBPARMS,XWBTDEV,XWBNULL"
^XTMP("XPDT",7744,"RTN","XUSBSE1",88,0)=" S XWBPARMS(""ADDRESS"")=SERVER,XWBPARMS(""PORT"")=PORT"
^XTMP("XPDT",7744,"RTN","XUSBSE1",89,0)=" S XWBPARMS(""RETRIES"")=3 ;Retries 3 times to open"
^XTMP("XPDT",7744,"RTN","XUSBSE1",90,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",91,0)=" I '$$OPEN^XWBRL(.XWBPARMS) Q ""NO OPEN"""
^XTMP("XPDT",7744,"RTN","XUSBSE1",92,0)=" S XWBPARMS(""URI"")=""XUS GET VISITOR"""
^XTMP("XPDT",7744,"RTN","XUSBSE1",93,0)=" D CLEARP^XWBM2MEZ"
^XTMP("XPDT",7744,"RTN","XUSBSE1",94,0)=" D SETPARAM^XWBM2MEZ(1,""STRING"",TOKEN)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",95,0)=" S XWBPARMS(""URI"")=""XUS GET VISITOR"""
^XTMP("XPDT",7744,"RTN","XUSBSE1",96,0)=" S XWBPARMS(""RESULTS"")=$NA(^TMP(""XUSBSE1"",$J))"
^XTMP("XPDT",7744,"RTN","XUSBSE1",97,0)=" S XWBCRLFL=0"
^XTMP("XPDT",7744,"RTN","XUSBSE1",98,0)=" D REQUEST^XWBRPCC(.XWBPARMS)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",99,0)=" I XWBCRLFL S RETRNVAL=""XWBCRLFL IS TRUE"" G M2MEXIT ; S @M2MLOC=""XWBCRLFL IS TRUE"" Q  ; Q 0"
^XTMP("XPDT",7744,"RTN","XUSBSE1",100,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",101,0)=" I '$$EXECUTE^XWBVLC(.XWBPARMS) S RETRNVAL=""FAILURE ON EXECUTE"" G M2MEXIT ; S @M2MLOC=""failure on execute"" Q  ;Run RPC and place raw XML results in ^TMP(""XWBM2MVLC"""
^XTMP("XPDT",7744,"RTN","XUSBSE1",102,0)=" D PARSE^XWBRPC(.XWBPARMS,""XUSBSARR"") ;Parse out raw XML and place results in ^TMP(""XWBM2MRPC"""
^XTMP("XPDT",7744,"RTN","XUSBSE1",103,0)=" S RETRNVAL=$G(XUSBSARR(1))"
^XTMP("XPDT",7744,"RTN","XUSBSE1",104,0)="M2MEXIT ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",105,0)=" D CLOSE^XWBM2MEZ"
^XTMP("XPDT",7744,"RTN","XUSBSE1",106,0)=" Q RETRNVAL"
^XTMP("XPDT",7744,"RTN","XUSBSE1",107,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",108,0)=" ; HOME - return value = string of demographic characteristics"
^XTMP("XPDT",7744,"RTN","XUSBSE1",109,0)=" ;   input SERVER - server address"
^XTMP("XPDT",7744,"RTN","XUSBSE1",110,0)=" ;   input PORT   - port number for connection"
^XTMP("XPDT",7744,"RTN","XUSBSE1",111,0)=" ;   input TOKEN  - token to identify user to authenticating server"
^XTMP("XPDT",7744,"RTN","XUSBSE1",112,0)=" ;   input BSE    - Parts 3 and 4 of string passed in."
^XTMP("XPDT",7744,"RTN","XUSBSE1",113,0)=" ;   input RAD    - Data from Remote application file."
^XTMP("XPDT",7744,"RTN","XUSBSE1",114,0)="HOME(TOKEN,RAD,BSE) ;Call home for token."
^XTMP("XPDT",7744,"RTN","XUSBSE1",115,0)=" N X,XUESSO,PORT,STN,IP"
^XTMP("XPDT",7744,"RTN","XUSBSE1",116,0)=" D:$G(XWBDEBUG) LOG^XWBDLOG(""ENTERED HOME BSE: ""_BSE) ; JLI 091007 DEBUG"
^XTMP("XPDT",7744,"RTN","XUSBSE1",117,0)=" Q:$P(RAD,U,2)'=-1 """" ;Not setup right"
^XTMP("XPDT",7744,"RTN","XUSBSE1",118,0)=" ;Set Station #, port from passed in data"
^XTMP("XPDT",7744,"RTN","XUSBSE1",119,0)=" S STN=$P(BSE,U),PORT=$P(BSE,U,2),XUESSO="""""
^XTMP("XPDT",7744,"RTN","XUSBSE1",120,0)=" S IP=$$IPFLOC(STN) I '$L(IP) S XUESSO=""-1^ADDRESS FOR STN ""_STN_"" NOT FOUND"""
^XTMP("XPDT",7744,"RTN","XUSBSE1",121,0)=" D:$G(XWBDEBUG) LOG^XWBDLOG(""HOME BSE IP: ""_IP_"" PORT:""_PORT)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",122,0)=" I $L(IP) S XUESSO=$$CALLBSE^XWBTCPM2(IP,PORT,TOKEN,STN)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",123,0)=" D:$G(XWBDEBUG) LOG^XWBDLOG(""LEAVING HOME XUESSO: ""_XUESSO)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",124,0)=" I XUESSO=""Didn't open connection."" S XUESSO=""-1^COULD NOT CONNECT TO STN ""_STN_"" USING PORT ""_PORT"
^XTMP("XPDT",7744,"RTN","XUSBSE1",125,0)=" I XUESSO=""No Response"" S XUESSO=""-1^BSE TOKEN EXPIRED"""
^XTMP("XPDT",7744,"RTN","XUSBSE1",126,0)=" Q XUESSO"
^XTMP("XPDT",7744,"RTN","XUSBSE1",127,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",128,0)="IPFLOC(L) ;Get the addess from the station number"
^XTMP("XPDT",7744,"RTN","XUSBSE1",129,0)=" N XUSBSE,I,RET,ADD,IP"
^XTMP("XPDT",7744,"RTN","XUSBSE1",130,0)=" ; next line added to handle IP input directly"
^XTMP("XPDT",7744,"RTN","XUSBSE1",131,0)=" D:$G(XWBDEBUG) LOG^XWBDLOG(""L IN IPFLOC: ""_L)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",132,0)=" I L?1.3N1"".""1.3N1"".""1.3N1"".""1.3N Q L ; JLI 091007"
^XTMP("XPDT",7744,"RTN","XUSBSE1",133,0)=" D FIND^DIC(870,,"".03;.08"",""MO"",L,,,,,""XUSBSE"")"
^XTMP("XPDT",7744,"RTN","XUSBSE1",134,0)=" Q:+$G(XUSBSE(""DILIST"",0))=0 """""
^XTMP("XPDT",7744,"RTN","XUSBSE1",135,0)=" S I=0,ADD="""",IP="""""
^XTMP("XPDT",7744,"RTN","XUSBSE1",136,0)=" F  S I=$O(XUSBSE(""DILIST"",""ID"",I)) Q:'I  D  Q:IP"
^XTMP("XPDT",7744,"RTN","XUSBSE1",137,0)=" . ;New DNS field"
^XTMP("XPDT",7744,"RTN","XUSBSE1",138,0)=" . S ADD=XUSBSE(""DILIST"",""ID"",I,.08) I $L(ADD) D  Q:IP'="""""
^XTMP("XPDT",7744,"RTN","XUSBSE1",139,0)=" . . I ADD?1.3N1"".""1.3N1"".""1.3N1"".""1.3N S IP=ADD Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",140,0)=" . . S IP=$$ADDRESS^XLFNSLK(ADD)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",141,0)=" . . Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",142,0)=" . ;Mail Domain"
^XTMP("XPDT",7744,"RTN","XUSBSE1",143,0)=" . S ADD=XUSBSE(""DILIST"",""ID"",I,.03) I $L(ADD) D  Q:IP'="""""
^XTMP("XPDT",7744,"RTN","XUSBSE1",144,0)=" . . I ADD?1.3N1"".""1.3N1"".""1.3N1"".""1.3N S IP=ADD Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",145,0)=" . . S IP=$$ADDRESS^XLFNSLK(""VISTA.""_ADD) S:IP="""" IP=$$ADDRESS^XLFNSLK(ADD)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",146,0)=" . . Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",147,0)=" I IP="""" S IP=$$WEBADDRS(L)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",148,0)=" Q IP"
^XTMP("XPDT",7744,"RTN","XUSBSE1",149,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",150,0)="WEBADDRS(STNNUM) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",151,0)=" N IP,URL,XUSBSE,RESULTS,I,X"
^XTMP("XPDT",7744,"RTN","XUSBSE1",152,0)=" D FIND^DIC(2005.2,,""1"",""MO"",""VISTASITESERVICE"",,,,,""XUSBSE"")"
^XTMP("XPDT",7744,"RTN","XUSBSE1",153,0)=" S URL=$G(XUSBSE(""DILIST"",""ID"",1,1))"
^XTMP("XPDT",7744,"RTN","XUSBSE1",154,0)=" D EN1^XUSBSE2(URL_""/getSite?siteID=""_STNNUM,.RESULTS)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",155,0)=" S X="""" F I=1:1 Q:'$D(RESULTS(I))  I RESULTS(I)[""hostname>"" S X=$P($P(RESULTS(I),""<hostname>"",2),""</hostname>"") Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",156,0)=" Q X"
^XTMP("XPDT",7744,"RTN","XUSBSE1",157,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",158,0)=" ; SETUP - setup user as visitor, add context option"
^XTMP("XPDT",7744,"RTN","XUSBSE1",159,0)=" ; return value = internal entry number for user, or 0"
^XTMP("XPDT",7744,"RTN","XUSBSE1",160,0)=" ;   input XUDEMOG  - string of demographic characteristics"
^XTMP("XPDT",7744,"RTN","XUSBSE1",161,0)=" ;   input XUCONTXT - context option to be given to user"
^XTMP("XPDT",7744,"RTN","XUSBSE1",162,0)="SETUP(XUDEMOG,XUCONTXT) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",163,0)=" I '$$PUT^XUESSO1(XUDEMOG) Q 0"
^XTMP("XPDT",7744,"RTN","XUSBSE1",164,0)=" I $G(DUZ)'>0 Q 0"
^XTMP("XPDT",7744,"RTN","XUSBSE1",165,0)=" D SETCNTXT(XUCONTXT)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",166,0)=" Q DUZ"
^XTMP("XPDT",7744,"RTN","XUSBSE1",167,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",168,0)="SETCNTXT(XOPT) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE1",169,0)=" N OPT,XUCONTXT"
^XTMP("XPDT",7744,"RTN","XUSBSE1",170,0)=" S XUCONTXT=""`""_XOPT"
^XTMP("XPDT",7744,"RTN","XUSBSE1",171,0)=" I $$FIND1^DIC(19,"""",""X"",XUCONTXT)'>0 Q  ; context option not in option file"
^XTMP("XPDT",7744,"RTN","XUSBSE1",172,0)=" ;Have to use $D because of screen in 200.03 keeps FIND1^DIC from working."
^XTMP("XPDT",7744,"RTN","XUSBSE1",173,0)=" I '$D(^VA(200,DUZ,203,""B"",XOPT)) D"
^XTMP("XPDT",7744,"RTN","XUSBSE1",174,0)=" . ; Have to give the user a delegated option"
^XTMP("XPDT",7744,"RTN","XUSBSE1",175,0)=" . N XARR S XARR(200.19,""+1,""_DUZ_"","",.01)=XUCONTXT"
^XTMP("XPDT",7744,"RTN","XUSBSE1",176,0)=" . D UPDATE^DIE(""E"",""XARR"")"
^XTMP("XPDT",7744,"RTN","XUSBSE1",177,0)=" . ; And now she can give himself the context option"
^XTMP("XPDT",7744,"RTN","XUSBSE1",178,0)=" . K XARR S XARR(200.03,""+1,""_DUZ_"","",.01)=XUCONTXT"
^XTMP("XPDT",7744,"RTN","XUSBSE1",179,0)=" . D UPDATE^DIE(""E"",""XARR"") ; Give context option as a secondary menu item"
^XTMP("XPDT",7744,"RTN","XUSBSE1",180,0)=" . S ^XUTL(""XQ"",$J,""DUZ(BSE)"")=XUCONTXT"
^XTMP("XPDT",7744,"RTN","XUSBSE1",181,0)=" . ; But now we have to remove the delegated option"
^XTMP("XPDT",7744,"RTN","XUSBSE1",182,0)=" . S OPT=$$FIND1^DIC(200.19,"",""_DUZ_"","",""X"",XUCONTXT)"
^XTMP("XPDT",7744,"RTN","XUSBSE1",183,0)=" . I OPT>0 D"
^XTMP("XPDT",7744,"RTN","XUSBSE1",184,0)=" . . K XARR S XARR(200.19,(OPT_"",""_DUZ_"",""),.01)=""@"""
^XTMP("XPDT",7744,"RTN","XUSBSE1",185,0)=" . . D FILE^DIE(""E"",""XARR"")"
^XTMP("XPDT",7744,"RTN","XUSBSE1",186,0)=" . . Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",187,0)=" . Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",188,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSBSE1",189,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2")="0^2^B17916276^B10222984"
^XTMP("XPDT",7744,"RTN","XUSBSE2",1,0)="XUSBSE2 ;FO-OAK/JLI-CONNECT WITH HTTP SERVER AND GET REPLY ;04/29/09  12:47"
^XTMP("XPDT",7744,"RTN","XUSBSE2",2,0)=" ;;8.0;KERNEL;**404,439,523**;Jul 10, 1995;Build 16"
^XTMP("XPDT",7744,"RTN","XUSBSE2",3,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",4,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",5,0)=" ; Original version, returns only first line after headers"
^XTMP("XPDT",7744,"RTN","XUSBSE2",6,0)="POST(SERVER,PORT,PAGE,DATA) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",7,0)=" N RESULTS"
^XTMP("XPDT",7744,"RTN","XUSBSE2",8,0)=" Q $$ENTRY1(.RESULTS,SERVER,$G(PORT),$G(PAGE),""POST"",$G(DATA))"
^XTMP("XPDT",7744,"RTN","XUSBSE2",9,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",10,0)=" ; updated, returns entire conversation"
^XTMP("XPDT",7744,"RTN","XUSBSE2",11,0)="POST1(RESULTS,SERVER,PORT,PAGE,DATA) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",12,0)=" Q $$ENTRY1(.RESULTS,SERVER,$G(PORT),$G(PAGE),""POST"",$G(DATA))"
^XTMP("XPDT",7744,"RTN","XUSBSE2",13,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",14,0)="GET(SERVER,PORT,PAGE) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",15,0)=" N RESULTS"
^XTMP("XPDT",7744,"RTN","XUSBSE2",16,0)=" Q $$ENTRY1(.RESULTS,SERVER,$G(PORT),$G(PAGE),""GET"")"
^XTMP("XPDT",7744,"RTN","XUSBSE2",17,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",18,0)="GET1(RESULTS,SERVER,PORT,PAGE) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",19,0)=" Q $$ENTRY1(.RESULTS,SERVER,$G(PORT),$G(PAGE),""GET"")"
^XTMP("XPDT",7744,"RTN","XUSBSE2",20,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",21,0)="ENTRY(SERVER,PORT,PAGE,HTTPTYPE,DATA) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",22,0)=" N RESULTS"
^XTMP("XPDT",7744,"RTN","XUSBSE2",23,0)=" S HTTPTYPE=$G(HTTPTYPE,""GET"")"
^XTMP("XPDT",7744,"RTN","XUSBSE2",24,0)=" Q $$ENTRY1(.RESULTS,SERVER,$G(PORT),$G(PAGE),HTTPTYPE,$G(DATA))"
^XTMP("XPDT",7744,"RTN","XUSBSE2",25,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",26,0)="ENTRY1(RESULTS,SERVER,PORT,PAGE,HTTPTYPE,DATA) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",27,0)=" N DONE,XVALUE,XWBICNT,XWBRBUF,XWBSBUF,XWBTDEV,I"
^XTMP("XPDT",7744,"RTN","XUSBSE2",28,0)=" N XWBDEBUG,XWBOS,XWBT,XWBTIME,POP,RESLTCNT,LINEBUF,OVERFLOW"
^XTMP("XPDT",7744,"RTN","XUSBSE2",29,0)=" N $ESTACK,$ETRAP S $ETRAP=""D TRAP^XUSBSE2"""
^XTMP("XPDT",7744,"RTN","XUSBSE2",30,0)=" K RESULTS"
^XTMP("XPDT",7744,"RTN","XUSBSE2",31,0)=" S PAGE=$G(PAGE,""/"") I PAGE="""" S PAGE=""/"""
^XTMP("XPDT",7744,"RTN","XUSBSE2",32,0)=" S HTTPTYPE=$G(HTTPTYPE,""GET"")"
^XTMP("XPDT",7744,"RTN","XUSBSE2",33,0)=" S DATA=$G(DATA),PORT=$G(PORT,80)"
^XTMP("XPDT",7744,"RTN","XUSBSE2",34,0)=" D SAVDEV^%ZISUTL(""XUSBSE"") ;S IO(0)=$P"
^XTMP("XPDT",7744,"RTN","XUSBSE2",35,0)=" D INIT^XWBTCPM"
^XTMP("XPDT",7744,"RTN","XUSBSE2",36,0)=" D OPEN^XWBTCPM2(SERVER,PORT)"
^XTMP("XPDT",7744,"RTN","XUSBSE2",37,0)=" I POP Q ""DIDN'T OPEN CONNECTION"""
^XTMP("XPDT",7744,"RTN","XUSBSE2",38,0)=" S XWBSBUF="""""
^XTMP("XPDT",7744,"RTN","XUSBSE2",39,0)=" U XWBTDEV"
^XTMP("XPDT",7744,"RTN","XUSBSE2",40,0)=" D WRITE^XWBRW(HTTPTYPE_"" ""_PAGE_"" HTTP/1.0""_$C(13,10))"
^XTMP("XPDT",7744,"RTN","XUSBSE2",41,0)=" I HTTPTYPE=""POST"" D"
^XTMP("XPDT",7744,"RTN","XUSBSE2",42,0)=" . D WRITE^XWBRW(""Referer: http://""_$$KSP^XUPARAM(""WHERE"")_$C(13,10))"
^XTMP("XPDT",7744,"RTN","XUSBSE2",43,0)=" . D WRITE^XWBRW(""Content-Type: application/x-www-form-urlencoded""_$C(13,10))"
^XTMP("XPDT",7744,"RTN","XUSBSE2",44,0)=" . D WRITE^XWBRW(""Cache-Control: no-cache""_$C(13,10))"
^XTMP("XPDT",7744,"RTN","XUSBSE2",45,0)=" . D WRITE^XWBRW(""Content-Length: ""_$L(DATA)_$C(13,10,13,10))"
^XTMP("XPDT",7744,"RTN","XUSBSE2",46,0)=" . D WRITE^XWBRW(DATA)"
^XTMP("XPDT",7744,"RTN","XUSBSE2",47,0)=" D WRITE^XWBRW($C(13,10))"
^XTMP("XPDT",7744,"RTN","XUSBSE2",48,0)=" D WBF^XWBRW"
^XTMP("XPDT",7744,"RTN","XUSBSE2",49,0)=" S XWBRBUF="""",DONE=0,XWBICNT=0"
^XTMP("XPDT",7744,"RTN","XUSBSE2",50,0)=" S OVERFLOW="""""
^XTMP("XPDT",7744,"RTN","XUSBSE2",51,0)=" S XVALUE=$$DREAD($C(13,10)) I $G(RESULTS(1))'[200 S XVALUE=$P($G(RESULTS(1)),"" "",2,5)"
^XTMP("XPDT",7744,"RTN","XUSBSE2",52,0)=" D CLOSE ;I IO=""|TCP|80"" U IO D ^%ZISC"
^XTMP("XPDT",7744,"RTN","XUSBSE2",53,0)=" I LINEBUF'="""" S RESLTCNT=RESLTCNT+1,RESULTS(RESLTCNT)=LINEBUF"
^XTMP("XPDT",7744,"RTN","XUSBSE2",54,0)=" I $G(RESULTS(1))[200 F I=1:1 I RESULTS(I)="""" S XVALUE=$G(RESULTS(I+1)) Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",55,0)=" Q XVALUE"
^XTMP("XPDT",7744,"RTN","XUSBSE2",56,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",57,0)="CLOSE ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",58,0)=" D CLOSE^%ZISTCP,GETDEV^%ZISUTL(""XUSBSE"") I $L(IO) U IO"
^XTMP("XPDT",7744,"RTN","XUSBSE2",59,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",60,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",61,0)="DREAD(D,TO) ;Delimiter Read"
^XTMP("XPDT",7744,"RTN","XUSBSE2",62,0)=" N R,S,DONE,C,L"
^XTMP("XPDT",7744,"RTN","XUSBSE2",63,0)=" ; ZEXCEPT: LINEBUF,OVERFLOW,RESLTCNT,RESULTS,XWBRBUF - NEWed and set in ENTRY"
^XTMP("XPDT",7744,"RTN","XUSBSE2",64,0)=" ; ZEXCEPT: XWBDEBUG,XWBTDEV,XWBTIME - XWB global variables"
^XTMP("XPDT",7744,"RTN","XUSBSE2",65,0)=" N $ES,$ET S $ET=""S DONE=1,$EC="""""""" Q"""
^XTMP("XPDT",7744,"RTN","XUSBSE2",66,0)=" S R="""",DONE=0,D=$G(D,$C(13)),C=0"
^XTMP("XPDT",7744,"RTN","XUSBSE2",67,0)=" S TO=$S($G(TO)>0:TO,$G(XWBTIME(1))>0:XWBTIME(1),1:60)/2+1"
^XTMP("XPDT",7744,"RTN","XUSBSE2",68,0)=" U XWBTDEV"
^XTMP("XPDT",7744,"RTN","XUSBSE2",69,0)=" F  D  Q:DONE"
^XTMP("XPDT",7744,"RTN","XUSBSE2",70,0)=" . S L=$F(XWBRBUF,D),L=$S(L>0:L,1:$L(XWBRBUF)+1),R=R_$E(XWBRBUF,1,L-1),XWBRBUF=$E(XWBRBUF,L,32000)"
^XTMP("XPDT",7744,"RTN","XUSBSE2",71,0)=" . ; I (R[D)!(C>TO) S DONE=1 Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",72,0)=" . I C>TO S DONE=1 Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",73,0)=" . R XWBRBUF:2 S:'$T C=C+1 S:$L(XWBRBUF) C=0"
^XTMP("XPDT",7744,"RTN","XUSBSE2",74,0)=" . S LINEBUF=OVERFLOW_XWBRBUF F  S L=$F(LINEBUF,D) Q:'L  S RESLTCNT=$G(RESLTCNT)+1,RESULTS(RESLTCNT)=$E(LINEBUF,1,L-3),LINEBUF=$E(LINEBUF,L,32000)"
^XTMP("XPDT",7744,"RTN","XUSBSE2",75,0)=" . S OVERFLOW=LINEBUF"
^XTMP("XPDT",7744,"RTN","XUSBSE2",76,0)=" . I $G(XWBDEBUG)>2,$L(XWBRBUF) D LOG^XWBDLOG($E(""rd (""_$L(XWBRBUF)_""): ""_XWBRBUF,1,255))"
^XTMP("XPDT",7744,"RTN","XUSBSE2",77,0)=" . Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",78,0)=" Q R"
^XTMP("XPDT",7744,"RTN","XUSBSE2",79,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",80,0)="TRAP ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",81,0)=" I '(($EC[""READ"")!($EC[""WRITE"")) D ^%ZTER"
^XTMP("XPDT",7744,"RTN","XUSBSE2",82,0)=" D CLOSE,LOG^XWBDLOG(""Error: ""_$$EC^%ZOSV):$G(XWBDEBUG),UNWIND^%ZTER"
^XTMP("XPDT",7744,"RTN","XUSBSE2",83,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",84,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",85,0)="EN(ADDRESS) ;  test with input address or 10.161.12.182 if none entered"
^XTMP("XPDT",7744,"RTN","XUSBSE2",86,0)=" N RESULTS"
^XTMP("XPDT",7744,"RTN","XUSBSE2",87,0)=" D EN1(ADDRESS,.RESULTS)"
^XTMP("XPDT",7744,"RTN","XUSBSE2",88,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",89,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",90,0)="EN1(ADDRESS,RESULTS,NOHEADERS) ;"
^XTMP("XPDT",7744,"RTN","XUSBSE2",91,0)=" N VALUE,PAGE,SERVER,PORT"
^XTMP("XPDT",7744,"RTN","XUSBSE2",92,0)=" S NOHEADERS=$G(NOHEADERS,1)"
^XTMP("XPDT",7744,"RTN","XUSBSE2",93,0)=" S PAGE=""/"",SERVER=ADDRESS,PORT=80"
^XTMP("XPDT",7744,"RTN","XUSBSE2",94,0)=" I SERVER[""/"" D"
^XTMP("XPDT",7744,"RTN","XUSBSE2",95,0)=" . I SERVER[""//"" S SERVER=$P(SERVER,""//"",2)"
^XTMP("XPDT",7744,"RTN","XUSBSE2",96,0)=" . I SERVER[""/"" S PAGE=""/""_$P(SERVER,""/"",2,99),SERVER=$P(SERVER,""/"")"
^XTMP("XPDT",7744,"RTN","XUSBSE2",97,0)=" . I SERVER["":"" S PORT=$P(SERVER,"":"",2),SERVER=$P(SERVER,"":"")"
^XTMP("XPDT",7744,"RTN","XUSBSE2",98,0)=" . Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",99,0)=" S VALUE=$$ENTRY1(.RESULTS,SERVER,PORT,PAGE)"
^XTMP("XPDT",7744,"RTN","XUSBSE2",100,0)=" D HOME^%ZIS ;I IO=""|TCP|80"" U IO D ^%ZISC"
^XTMP("XPDT",7744,"RTN","XUSBSE2",101,0)=" ; if NOHEADERS selected (default) remove the headers and first blank line"
^XTMP("XPDT",7744,"RTN","XUSBSE2",102,0)=" I NOHEADERS D"
^XTMP("XPDT",7744,"RTN","XUSBSE2",103,0)=" . N I,J,X"
^XTMP("XPDT",7744,"RTN","XUSBSE2",104,0)=" . ; remove header lines and first blank line"
^XTMP("XPDT",7744,"RTN","XUSBSE2",105,0)=" . F I=1:1 Q:'$D(RESULTS(I))  S X=(RESULTS(I)="""") K:'X RESULTS(I) I X K RESULTS(I) Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",106,0)=" . ; move lines down to start at 1 again"
^XTMP("XPDT",7744,"RTN","XUSBSE2",107,0)=" . S J=I,I=0 F  S J=J+1,I=I+1 Q:'$D(RESULTS(J))  S RESULTS(I)=RESULTS(J) K RESULTS(J)"
^XTMP("XPDT",7744,"RTN","XUSBSE2",108,0)=" . Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",109,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSBSE2",110,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB")="0^4^B33401626^B30600707"
^XTMP("XPDT",7744,"RTN","XUSRB",1,0)="XUSRB ;ISCSF/RWF - Request Broker ;02/03/10  16:07"
^XTMP("XPDT",7744,"RTN","XUSRB",2,0)=" ;;8.0;KERNEL;**11,16,28,32,59,70,82,109,115,165,150,180,213,234,238,265,337,395,404,437,523**;Jul 10, 1995;Build 16"
^XTMP("XPDT",7744,"RTN","XUSRB",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7744,"RTN","XUSRB",4,0)=" Q  ;No entry from top"
^XTMP("XPDT",7744,"RTN","XUSRB",5,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",6,0)=" ;RPC BROKER calls, First parameter is always call-by-reference"
^XTMP("XPDT",7744,"RTN","XUSRB",7,0)="VALIDAV(RET,AVCODE) ;Check a users access"
^XTMP("XPDT",7744,"RTN","XUSRB",8,0)=" ;Return R(0)=DUZ, R(1)=(0=OK, 1,2...=Can't sign-on for some reason)"
^XTMP("XPDT",7744,"RTN","XUSRB",9,0)=" ; R(2)=verify needs changing, R(3)=Message, R(4)=0, R(5)=msg cnt, R(5+n)"
^XTMP("XPDT",7744,"RTN","XUSRB",10,0)=" ; R(R(5)+6)=# div user must select from, R(R(5)+6+n)=div"
^XTMP("XPDT",7744,"RTN","XUSRB",11,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",12,0)=" N X,XUSER,XUNOW,XUDEV,XUM,XUMSG,%1,VCCH K DUZ"
^XTMP("XPDT",7744,"RTN","XUSRB",13,0)=" S U=""^"",RET(0)=0,RET(5)=0,XUF=$G(XUF,0),XUM=0,XUMSG=0,XUDEV=0"
^XTMP("XPDT",7744,"RTN","XUSRB",14,0)=" S DUZ=0,DUZ(0)="""",VCCH=0 D NOW"
^XTMP("XPDT",7744,"RTN","XUSRB",15,0)=" S XOPT=$$STATE^XWBSEC(""XUS XOPT"")"
^XTMP("XPDT",7744,"RTN","XUSRB",16,0)=" S XUMSG=$$INHIBIT() I XUMSG S XUM=1 G VAX ;Logon inhibited"
^XTMP("XPDT",7744,"RTN","XUSRB",17,0)=" ;3 Strikes"
^XTMP("XPDT",7744,"RTN","XUSRB",18,0)=" I $$LKCHECK^XUSTZIP($G(IO(""IP""))) S XUMSG=7 G VAX ;IP locked"
^XTMP("XPDT",7744,"RTN","XUSRB",19,0)=" ;Check type of sign-on code"
^XTMP("XPDT",7744,"RTN","XUSRB",20,0)=" I $L(AVCODE) D"
^XTMP("XPDT",7744,"RTN","XUSRB",21,0)=" . I $E(AVCODE,1,2)=""~1"" S DUZ=$$CHKASH^XUSRB4(AVCODE) Q"
^XTMP("XPDT",7744,"RTN","XUSRB",22,0)=" . I $E(AVCODE,1,2)=""~2"" S DUZ=$$CHKCCOW^XUSRB4(AVCODE) Q"
^XTMP("XPDT",7744,"RTN","XUSRB",23,0)=" . S DUZ=$$CHECKAV^XUS($$DECRYP^XUSRB1(AVCODE))"
^XTMP("XPDT",7744,"RTN","XUSRB",24,0)=" . Q"
^XTMP("XPDT",7744,"RTN","XUSRB",25,0)=" I DUZ'>0,$$FAIL^XUS3 D  G VAX"
^XTMP("XPDT",7744,"RTN","XUSRB",26,0)=" . S XUM=1,XUMSG=7,X=$$RA^XUSTZ H 5 ;3 Strikes"
^XTMP("XPDT",7744,"RTN","XUSRB",27,0)=" S XUMSG=$$UVALID^XUS() G:XUMSG VAX ;Check User"
^XTMP("XPDT",7744,"RTN","XUSRB",28,0)=" S VCCH=$$VCVALID() ;Check VC"
^XTMP("XPDT",7744,"RTN","XUSRB",29,0)=" I DUZ>0 S XUMSG=$$POST(1)"
^XTMP("XPDT",7744,"RTN","XUSRB",30,0)=" I XUMSG>0 S DUZ=0,VCCH=0 ;If can't sign-on, don't tell need to change VC"
^XTMP("XPDT",7744,"RTN","XUSRB",31,0)=" I 'XUMSG,VCCH S XUMSG=12 D SET^XWBSEC(""XUS DUZ"",DUZ) ;Need to change VC"
^XTMP("XPDT",7744,"RTN","XUSRB",32,0)="VAX S:XUMSG>0 DUZ=0 ;Can't sign-on, Clear DUZ."
^XTMP("XPDT",7744,"RTN","XUSRB",33,0)=" D:DUZ>0 POST2"
^XTMP("XPDT",7744,"RTN","XUSRB",34,0)=" S RET(0)=DUZ,RET(1)=XUM,RET(2)=VCCH,RET(3)=$S(XUMSG:$$TXT^XUS3(XUMSG),1:""""),RET(4)=0"
^XTMP("XPDT",7744,"RTN","XUSRB",35,0)=" K DUZ(""CCOW"")"
^XTMP("XPDT",7744,"RTN","XUSRB",36,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB",37,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",38,0)="NOW S U=""^"",XUNOW=$$NOW^XLFDT(),DT=$P(XUNOW,""."")"
^XTMP("XPDT",7744,"RTN","XUSRB",39,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB",40,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",41,0)="INTRO(RET) ;Return INTRO TEXT."
^XTMP("XPDT",7744,"RTN","XUSRB",42,0)=" D INTRO^XUS1A(""RET"")"
^XTMP("XPDT",7744,"RTN","XUSRB",43,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB",44,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",45,0)="VCVALID() ;Return 1 if the Verify code needs changing."
^XTMP("XPDT",7744,"RTN","XUSRB",46,0)=" Q:'$G(DUZ) 1"
^XTMP("XPDT",7744,"RTN","XUSRB",47,0)=" Q:$P($G(^VA(200,DUZ,.1)),U,2)="""" 1 ;VC is empty"
^XTMP("XPDT",7744,"RTN","XUSRB",48,0)=" Q:$P(^VA(200,DUZ,0),U,8)=1 0 ;VC never expires"
^XTMP("XPDT",7744,"RTN","XUSRB",49,0)=" N XUSER D USER^XUS(DUZ)"
^XTMP("XPDT",7744,"RTN","XUSRB",50,0)=" Q $$VCHG^XUS1"
^XTMP("XPDT",7744,"RTN","XUSRB",51,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",52,0)="CVC(RET,XU1) ;change VC, Return 0 = success"
^XTMP("XPDT",7744,"RTN","XUSRB",53,0)=" N XU2,XU3,XU4 S DUZ=$G(DUZ),RET(0)=99,XU4=$$STATE^XWBSEC(""XUS DUZ"") S:(DUZ=0)&(XU4>0) DUZ=XU4 Q:DUZ'>0"
^XTMP("XPDT",7744,"RTN","XUSRB",54,0)=" S U=""^"",XU2=$P(XU1,U,2),XU3=$P(XU1,U,3),XU1=$P(XU1,U)"
^XTMP("XPDT",7744,"RTN","XUSRB",55,0)=" S XU1=$$DECRYP^XUSRB1(XU1),XU2=$$DECRYP^XUSRB1(XU2),XU3=$$DECRYP^XUSRB1(XU3)"
^XTMP("XPDT",7744,"RTN","XUSRB",56,0)=" S XU3=$$BRCVC^XUS2(XU1,XU2),RET(0)=+XU3,RET(1)=$P(XU3,U,2,9)"
^XTMP("XPDT",7744,"RTN","XUSRB",57,0)=" I XU3>0 S DUZ=0 ;Clean-up if not changed."
^XTMP("XPDT",7744,"RTN","XUSRB",58,0)=" I 'XU3,XU4 D KILL^XWBSEC(""XUS DUZ""),POST2"
^XTMP("XPDT",7744,"RTN","XUSRB",59,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB",60,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",61,0)="SHOWPOST() ;EF. Check if should send the POST SIGN-ON msg."
^XTMP("XPDT",7744,"RTN","XUSRB",62,0)=" Q +$P($G(^XTV(8989.3,1,""XWB"")),""^"",2)"
^XTMP("XPDT",7744,"RTN","XUSRB",63,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",64,0)="POST(CVC) ;Finish setup partition, I CVC don't log yet"
^XTMP("XPDT",7744,"RTN","XUSRB",65,0)=" N X,XUM,XUDIV S:$D(IO)[0 IO=$I S IO(0)=IO"
^XTMP("XPDT",7744,"RTN","XUSRB",66,0)=" K ^UTILITY($J),^TMP($J)"
^XTMP("XPDT",7744,"RTN","XUSRB",67,0)=" I '$D(XUSER(0)),DUZ D USER^XUS(DUZ)"
^XTMP("XPDT",7744,"RTN","XUSRB",68,0)=" S XUM=$$USER^XUS1A Q:XUM>0 XUM ;User can't sign on for some reason."
^XTMP("XPDT",7744,"RTN","XUSRB",69,0)=" S RET(5)=0 ;The next line sends the post sign-on msg"
^XTMP("XPDT",7744,"RTN","XUSRB",70,0)=" F %=1:1 Q:'$D(XUTEXT(%))  S RET(5+%)=$E(XUTEXT(%),2,256),RET(5)=%"
^XTMP("XPDT",7744,"RTN","XUSRB",71,0)=" I '$$SHOWPOST S RET(5)=0 ;This line stops the sending/display of the msg."
^XTMP("XPDT",7744,"RTN","XUSRB",72,0)=" D:'$G(CVC) POST2"
^XTMP("XPDT",7744,"RTN","XUSRB",73,0)=" Q 0"
^XTMP("XPDT",7744,"RTN","XUSRB",74,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",75,0)="POST2 ;Finish User Setup for silent log-on"
^XTMP("XPDT",7744,"RTN","XUSRB",76,0)=" D:'$D(XUNOW) NOW"
^XTMP("XPDT",7744,"RTN","XUSRB",77,0)=" D DUZ^XUS1A,SAVE^XUS1,LOG^XUS1,ABT^XQ12"
^XTMP("XPDT",7744,"RTN","XUSRB",78,0)=" D KILL^XWBSEC(""XUS XOPT""),CLRFAC^XUS3($G(IO(""IP""))) ;p265"
^XTMP("XPDT",7744,"RTN","XUSRB",79,0)=" D SETTIME^XWBTCPM() ;Set normal Broker time-out"
^XTMP("XPDT",7744,"RTN","XUSRB",80,0)=" S DTIME=$$DTIME^XUP(DUZ) ;See DTIME set for user"
^XTMP("XPDT",7744,"RTN","XUSRB",81,0)=" K:$G(XWBVER)<1.106 XQY,XQY0 ;Delete the sign-on context."
^XTMP("XPDT",7744,"RTN","XUSRB",82,0)=" K XUTEXT,XOPT,XUEON,XUEOFF,XUTT,XUDEV,XUSER"
^XTMP("XPDT",7744,"RTN","XUSRB",83,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB",84,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",85,0)="INHIBIT() ;Is Logon to this system Inhibited?"
^XTMP("XPDT",7744,"RTN","XUSRB",86,0)=" I $$INHIB1() Q 1"
^XTMP("XPDT",7744,"RTN","XUSRB",87,0)=" I $$INHIB2() Q 2"
^XTMP("XPDT",7744,"RTN","XUSRB",88,0)=" Q 0"
^XTMP("XPDT",7744,"RTN","XUSRB",89,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",90,0)="INHIB1() ;The LOGON check"
^XTMP("XPDT",7744,"RTN","XUSRB",91,0)=" I $G(^%ZIS(14.5,""LOGON"",XQVOL)) Q 1"
^XTMP("XPDT",7744,"RTN","XUSRB",92,0)=" Q 0"
^XTMP("XPDT",7744,"RTN","XUSRB",93,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",94,0)="INHIB2() ;The Max User Check"
^XTMP("XPDT",7744,"RTN","XUSRB",95,0)=" I $D(^%ZOSF(""ACTJ"")) X ^(""ACTJ"") I $P(XUVOL,U,3),($P(XUVOL,U,3)'>Y) Q 2"
^XTMP("XPDT",7744,"RTN","XUSRB",96,0)=" Q 0"
^XTMP("XPDT",7744,"RTN","XUSRB",97,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",98,0)="LOGOUT ;Finish logout of user."
^XTMP("XPDT",7744,"RTN","XUSRB",99,0)=" N XU1"
^XTMP("XPDT",7744,"RTN","XUSRB",100,0)=" D CLEARALL^XWBDRPC(.XU1)"
^XTMP("XPDT",7744,"RTN","XUSRB",101,0)=" ;Remove CCOW sign-on data"
^XTMP("XPDT",7744,"RTN","XUSRB",102,0)=" S HDL=$G(^XUTL(""XQ"",$J,""HDL"")) I $L(HDL) D"
^XTMP("XPDT",7744,"RTN","XUSRB",103,0)=" . K ^XTMP(HDL,""JOB"",$J)"
^XTMP("XPDT",7744,"RTN","XUSRB",104,0)=" . I $O(^XTMP(HDL,""JOB"",0))="""" K ^XTMP(HDL)"
^XTMP("XPDT",7744,"RTN","XUSRB",105,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",106,0)=" D BYE^XUSCLEAN,XUTL^XUSCLEAN ;Mark the sign-on log, File cleanup."
^XTMP("XPDT",7744,"RTN","XUSRB",107,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB",108,0)=" ;D1,D2 are place holders for now"
^XTMP("XPDT",7744,"RTN","XUSRB",109,0)="SETUP(RET,XWBUSRNM,ASOSKIP,D2) ;sets up environment for GUI signon"
^XTMP("XPDT",7744,"RTN","XUSRB",110,0)=" N X1 K DUZ"
^XTMP("XPDT",7744,"RTN","XUSRB",111,0)=" S XWBUSRNM=$G(XWBUSRNM),ASOSKIP=$G(ASOSKIP)"
^XTMP("XPDT",7744,"RTN","XUSRB",112,0)=" I $L($G(XWBTIP)) S IO(""IP"")=XWBTIP"
^XTMP("XPDT",7744,"RTN","XUSRB",113,0)=" S IO(""CLNM"")=$$LOW^XLFSTR($G(XWBCLMAN)) D ZIO^%ZIS4"
^XTMP("XPDT",7744,"RTN","XUSRB",114,0)=" ;Setup needed variables"
^XTMP("XPDT",7744,"RTN","XUSRB",115,0)=" D SET1^XUS(0),SET^XWBSEC(""XUS XOPT"",XOPT) ;p265"
^XTMP("XPDT",7744,"RTN","XUSRB",116,0)=" ;I '$D(IO(""HOME"")) S %ZIS=""0H"",IOP=""NULL"" D ^%ZIS ;Setup NULL as the home device"
^XTMP("XPDT",7744,"RTN","XUSRB",117,0)=" D SAVE^XUS1 ;save the home device"
^XTMP("XPDT",7744,"RTN","XUSRB",118,0)=" ;0=server name, 1=volume, 2=uci, 3=device, 4=# attempts, 5=skip signon-screen,6=Domain Name, 7=Production (0=no, 1=Yes)"
^XTMP("XPDT",7744,"RTN","XUSRB",119,0)=" S RET(0)=$P(XUENV,U,3),RET(1)=$P(XUVOL,U),RET(2)=XUCI"
^XTMP("XPDT",7744,"RTN","XUSRB",120,0)=" S RET(3)=$I,RET(4)=$P(XOPT,U,2),RET(5)=0"
^XTMP("XPDT",7744,"RTN","XUSRB",121,0)=" S RET(6)=$G(^XMB(""NETNAME"")) ;DBIA #1131"
^XTMP("XPDT",7744,"RTN","XUSRB",122,0)=" S RET(7)=$$PROD^XUPROD ;Tell if production."
^XTMP("XPDT",7744,"RTN","XUSRB",123,0)=" S X1=$$INHIBIT() I X1 S XWBERR=$S(X1=1:""Logons Inhibited"",1:""Max Users"") Q  ;p523"
^XTMP("XPDT",7744,"RTN","XUSRB",124,0)=" ; Code for DBA Capri Type Program"
^XTMP("XPDT",7744,"RTN","XUSRB",125,0)=" I (+XWBUSRNM<-30),$$CHKUSER^XUSBSE1(XWBUSRNM) S RET(5)=1 D POST2 Q  ;p523 BSE CHANGE"
^XTMP("XPDT",7744,"RTN","XUSRB",126,0)=" ; End of Code for DBA Capri Program"
^XTMP("XPDT",7744,"RTN","XUSRB",127,0)=" ;Auto sign-on check only for Broker v1.1"
^XTMP("XPDT",7744,"RTN","XUSRB",128,0)=" I $G(ASOSKIP) S XQXFLG(""ASO"")=1 ;Skip the ASO check, Not for VISITORS p523"
^XTMP("XPDT",7744,"RTN","XUSRB",129,0)=" I $G(XWBVER)<1.1 S XQXFLG(""ZEBRA"")=-1 ;Disable for v1.0"
^XTMP("XPDT",7744,"RTN","XUSRB",130,0)=" I $L(IO(""CLNM"")),'$G(DUZ) S DUZ=$$AUTOXWB^XUS1B() ;Only check when 1.1 CL."
^XTMP("XPDT",7744,"RTN","XUSRB",131,0)=" I $G(DUZ)>0 D  ;p523"
^XTMP("XPDT",7744,"RTN","XUSRB",132,0)=" . I '$D(XUSER(0)),DUZ D USER^XUS(DUZ)"
^XTMP("XPDT",7744,"RTN","XUSRB",133,0)=" . N %T S %T=$$USER^XUS1A I %T S DUZ=0 Q"
^XTMP("XPDT",7744,"RTN","XUSRB",134,0)=" . D NOW,POST2 S RET(5)=1"
^XTMP("XPDT",7744,"RTN","XUSRB",135,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB",136,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",137,0)="OWNSKEY(RET,LIST,IEN) ;Does user have Key"
^XTMP("XPDT",7744,"RTN","XUSRB",138,0)=" N I,K S I="""""
^XTMP("XPDT",7744,"RTN","XUSRB",139,0)=" I $G(IEN)'>0 S IEN=$G(DUZ)"
^XTMP("XPDT",7744,"RTN","XUSRB",140,0)=" I $G(IEN)'>0 S RET(0)=0 Q"
^XTMP("XPDT",7744,"RTN","XUSRB",141,0)=" I $O(LIST(""""))="""" S RET(0)=$$KCHK(LIST,IEN) Q"
^XTMP("XPDT",7744,"RTN","XUSRB",142,0)=" F  S I=$O(LIST(I)) Q:I=""""  S RET(I)=$$KCHK(LIST(I),IEN)"
^XTMP("XPDT",7744,"RTN","XUSRB",143,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB",144,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",145,0)="KCHK(%,IEN) ;Key Check"
^XTMP("XPDT",7744,"RTN","XUSRB",146,0)=" S:$G(IEN)'>0 IEN=$G(DUZ) Q $S($G(IEN)>0:$D(^XUSEC(%,IEN)),1:0)"
^XTMP("XPDT",7744,"RTN","XUSRB",147,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",148,0)="ALLKEYS(RET,IEN,FLG) ;Return ALL or most KEYS that a user has."
^XTMP("XPDT",7744,"RTN","XUSRB",149,0)=" N I,J,K,L K ^TMP(""XU"",$J)"
^XTMP("XPDT",7744,"RTN","XUSRB",150,0)=" S RET=$NA(^TMP(""XU"",$J))"
^XTMP("XPDT",7744,"RTN","XUSRB",151,0)=" S:'$D(IEN) IEN=DUZ I IEN'>0 S @RET@(0)=-1 Q"
^XTMP("XPDT",7744,"RTN","XUSRB",152,0)=" S I=0,L=0"
^XTMP("XPDT",7744,"RTN","XUSRB",153,0)=" F  S I=$O(^VA(200,IEN,51,I)) Q:I'>0  S K=$G(^DIC(19.1,I,0)) D"
^XTMP("XPDT",7744,"RTN","XUSRB",154,0)=" . Q:'$P(K,U,5)  ;Check 'Send to J2EE' field."
^XTMP("XPDT",7744,"RTN","XUSRB",155,0)=" . S L=L+1,@RET@(L,0)=$P(K,U,1)"
^XTMP("XPDT",7744,"RTN","XUSRB",156,0)=" . Q"
^XTMP("XPDT",7744,"RTN","XUSRB",157,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB",158,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",159,0)="AVHELP(RET) ; send access/verify code instructions."
^XTMP("XPDT",7744,"RTN","XUSRB",160,0)=" S RET(0)=$$AVHLPTXT^XUS2()"
^XTMP("XPDT",7744,"RTN","XUSRB",161,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB",162,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",163,0)="OPTACCES(RET,USER,OPTIONS,MODE) ;Checks or sets user's access for passed in options"
^XTMP("XPDT",7744,"RTN","XUSRB",164,0)=" S MODE=""CHECK"" ;only CHECK mode supported for now"
^XTMP("XPDT",7744,"RTN","XUSRB",165,0)=" N I S I="""""
^XTMP("XPDT",7744,"RTN","XUSRB",166,0)=" I $G(USER)'>0 S RET(0)=0 Q"
^XTMP("XPDT",7744,"RTN","XUSRB",167,0)=" F  S I=$O(OPTIONS(I)) Q:I=""""  S RET(I)=$$CHK^XQCS(USER,OPTIONS(I))=1"
^XTMP("XPDT",7744,"RTN","XUSRB",168,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB",169,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB",170,0)="CHECKAV(AVC) ;SR. EF. to check an A/V code, Separate w/ "";"", return IEN or 0"
^XTMP("XPDT",7744,"RTN","XUSRB",171,0)=" N XUF,XUSER S XUF=0,U=""^"""
^XTMP("XPDT",7744,"RTN","XUSRB",172,0)=" Q $$CHECKAV^XUS(AVC)"
^XTMP("XPDT",7744,"RTN","XUSRB4")="0^3^B16820466^B15887142"
^XTMP("XPDT",7744,"RTN","XUSRB4",1,0)="XUSRB4 ;ISF/RWF - Build a temporary sign-on token ;01/06/10  09:26"
^XTMP("XPDT",7744,"RTN","XUSRB4",2,0)=" ;;8.0;KERNEL;**150,337,395,419,437,499,523**;Jul 10, 1995;Build 16"
^XTMP("XPDT",7744,"RTN","XUSRB4",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7744,"RTN","XUSRB4",4,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB4",5,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB4",6,0)="ASH(RET) ;rpc. Auto Signon Handle"
^XTMP("XPDT",7744,"RTN","XUSRB4",7,0)=" N HDL"
^XTMP("XPDT",7744,"RTN","XUSRB4",8,0)=" S HDL=$$HANDLE(""XWBAS"",1),RET=""~1""_HDL"
^XTMP("XPDT",7744,"RTN","XUSRB4",9,0)=" ;Now place user info in it."
^XTMP("XPDT",7744,"RTN","XUSRB4",10,0)=" D TOK(HDL)"
^XTMP("XPDT",7744,"RTN","XUSRB4",11,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB4",12,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB4",13,0)="CCOW(RET) ;rpc. CCOW Auto Signon Handle"
^XTMP("XPDT",7744,"RTN","XUSRB4",14,0)=" N HDL,HDL2,X"
^XTMP("XPDT",7744,"RTN","XUSRB4",15,0)=" S RET(0)=""NO PROXY USER"",RET(1)=""ERROR"""
^XTMP("XPDT",7744,"RTN","XUSRB4",16,0)=" I $$USERTYPE^XUSAP(DUZ,""APPLICATION PROXY"") Q  ;No Proxy"
^XTMP("XPDT",7744,"RTN","XUSRB4",17,0)=" I $$USERTYPE^XUSAP(DUZ,""CONNECTOR PROXY"") Q  ;No Proxy"
^XTMP("XPDT",7744,"RTN","XUSRB4",18,0)=" S X=$$ACTIVE^XUSER(DUZ) I 'X S RET(0)=X Q  ;User must be active"
^XTMP("XPDT",7744,"RTN","XUSRB4",19,0)=" S HDL=$$HANDLE(""XWBCCW"",1)"
^XTMP("XPDT",7744,"RTN","XUSRB4",20,0)=" ;Return RET(0) the CCOW token, RET(1) the domain name and the Station #"
^XTMP("XPDT",7744,"RTN","XUSRB4",21,0)=" S RET(0)=""~2""_$$LOW^XLFSTR(HDL),RET(1)=$G(^XMB(""NETNAME""))_""^""_$$STA^XUAF4(DUZ(2))"
^XTMP("XPDT",7744,"RTN","XUSRB4",22,0)=" ;Now place user info in it."
^XTMP("XPDT",7744,"RTN","XUSRB4",23,0)=" D TOK(HDL)"
^XTMP("XPDT",7744,"RTN","XUSRB4",24,0)=" S ^XUTL(""XQ"",$J,""HDL"")=HDL ;Save handle with job"
^XTMP("XPDT",7744,"RTN","XUSRB4",25,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB4",26,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB4",27,0)="HANDLE(NS,LT) ;Return a unique handle into ^XTMP (ef. sup)"
^XTMP("XPDT",7744,"RTN","XUSRB4",28,0)=" ;NS is the namespace, LT is the Handle Lifetime in days"
^XTMP("XPDT",7744,"RTN","XUSRB4",29,0)=" N %H,A,J,HL"
^XTMP("XPDT",7744,"RTN","XUSRB4",30,0)=" I $G(NS)="""" Q """" ;Return null if no namespace"
^XTMP("XPDT",7744,"RTN","XUSRB4",31,0)=" S LT=$G(LT,1) S:LT>7 LT=7 ;Default to 1"
^XTMP("XPDT",7744,"RTN","XUSRB4",32,0)=" S %H=$H,J=NS_($J#2048)_""-""_(%H#7*86400+$P(%H,"","",2))_""_"",A=$R(10)"
^XTMP("XPDT",7744,"RTN","XUSRB4",33,0)=" F  S HL=J_A,A=A+1 L +^XTMP(HL):1 I $T Q:'$D(^XTMP(HL))  L -^XTMP(HL)"
^XTMP("XPDT",7744,"RTN","XUSRB4",34,0)=" S ^XTMP(HL,0)=$$HTFM^XLFDT(%H+LT)_""^""_$$DT^XLFDT()"
^XTMP("XPDT",7744,"RTN","XUSRB4",35,0)=" ;L -^XTMP(HL) Leave the unLock to tha caller"
^XTMP("XPDT",7744,"RTN","XUSRB4",36,0)=" Q HL"
^XTMP("XPDT",7744,"RTN","XUSRB4",37,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB4",38,0)="TOK(H) ;Store a Token"
^XTMP("XPDT",7744,"RTN","XUSRB4",39,0)=" ;H is handle into XTMP"
^XTMP("XPDT",7744,"RTN","XUSRB4",40,0)=" N J,T,R,%"
^XTMP("XPDT",7744,"RTN","XUSRB4",41,0)=" S T=$$H3^%ZTM($H)"
^XTMP("XPDT",7744,"RTN","XUSRB4",42,0)=" S R=$J_""|""_T_""|""_$G(DUZ)_""|""_H"
^XTMP("XPDT",7744,"RTN","XUSRB4",43,0)=" S ^XTMP(H,""D"",0)=""|""_$$ENCRYP^XUSRB1(R)_""|"""
^XTMP("XPDT",7744,"RTN","XUSRB4",44,0)=" S ^XTMP(H,""D2"")=$G(DUZ(2))"
^XTMP("XPDT",7744,"RTN","XUSRB4",45,0)=" S %=$G(IO(""IP"")) I $L(%),%'?1.3N1P1.3N1P1.3N1P1.3N S %=$P($$ADDRESS^XLFNSLK(%),"","")"
^XTMP("XPDT",7744,"RTN","XUSRB4",46,0)=" S ^XTMP(H,""D3"")=%"
^XTMP("XPDT",7744,"RTN","XUSRB4",47,0)=" S ^XTMP(H,""CLNM"")=$G(IO(""CLNM""))"
^XTMP("XPDT",7744,"RTN","XUSRB4",48,0)=" S ^XTMP(H,""JOB"",$J)=$G(IO(""IP""))"
^XTMP("XPDT",7744,"RTN","XUSRB4",49,0)=" S ^XTMP(H,""STATUS"")=""0^New"",^(""CNT"")=0"
^XTMP("XPDT",7744,"RTN","XUSRB4",50,0)=" L -^XTMP(H) ;Clear Lock"
^XTMP("XPDT",7744,"RTN","XUSRB4",51,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB4",52,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB4",53,0)="REMOVE(HL) ;Remove (kill) a Handle. p523"
^XTMP("XPDT",7744,"RTN","XUSRB4",54,0)=" I $L($G(HL)) K ^XTMP(HL)"
^XTMP("XPDT",7744,"RTN","XUSRB4",55,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB4",56,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB4",57,0)="CHKASH(HL) ;rpc. Check a Auto Signon Handle"
^XTMP("XPDT",7744,"RTN","XUSRB4",58,0)=" N HDL,RET,FDA,IEN S HDL=$E(HL,3,999)"
^XTMP("XPDT",7744,"RTN","XUSRB4",59,0)=" S RET=$$CHECK(HDL)"
^XTMP("XPDT",7744,"RTN","XUSRB4",60,0)=" I RET>0 D"
^XTMP("XPDT",7744,"RTN","XUSRB4",61,0)=" . S DUZ(""ASH"")=1,IEN=DUZ_"","""
^XTMP("XPDT",7744,"RTN","XUSRB4",62,0)=" . I $$GET1^DIQ(200,IEN,7,""I"") S FDA(200,DUZ_"","",7)=0 D FILE^DIE(""K"",""FDA"") ;rwf 403"
^XTMP("XPDT",7744,"RTN","XUSRB4",63,0)=" D REMOVE(HDL) ;Token only good for one try."
^XTMP("XPDT",7744,"RTN","XUSRB4",64,0)=" Q RET"
^XTMP("XPDT",7744,"RTN","XUSRB4",65,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB4",66,0)="CHKCCOW(HL) ;rpc. Check a CCOW Auto Signon Handle"
^XTMP("XPDT",7744,"RTN","XUSRB4",67,0)=" N HDL,RET,T"
^XTMP("XPDT",7744,"RTN","XUSRB4",68,0)=" S HDL=$$UP^XLFSTR($E(HL,3,999)),T=$P($G(^XTV(8989.3,1,30),5400),U)"
^XTMP("XPDT",7744,"RTN","XUSRB4",69,0)=" S RET=$$CHECK(HDL,T)"
^XTMP("XPDT",7744,"RTN","XUSRB4",70,0)=" I RET>0 D"
^XTMP("XPDT",7744,"RTN","XUSRB4",71,0)=" . ;This CCOW Token good for more that one try."
^XTMP("XPDT",7744,"RTN","XUSRB4",72,0)=" . S ^XTMP(HDL,""JOB"",$J)=$G(IO(""IP""))"
^XTMP("XPDT",7744,"RTN","XUSRB4",73,0)=" . S ^XTMP(HDL,""STATUS"")=(^XTMP(HDL,""STATUS"")+1)_""^Active"""
^XTMP("XPDT",7744,"RTN","XUSRB4",74,0)=" . S ^XUTL(""XQ"",$J,""HDL"")=HDL ;Save handle with job"
^XTMP("XPDT",7744,"RTN","XUSRB4",75,0)=" . S DUZ(""CCOW"")=1 ;Flag a CCOW sign-on."
^XTMP("XPDT",7744,"RTN","XUSRB4",76,0)=" Q RET"
^XTMP("XPDT",7744,"RTN","XUSRB4",77,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB4",78,0)="CHECK(HL,TOUT) ;Check a Token"
^XTMP("XPDT",7744,"RTN","XUSRB4",79,0)=" N %,J,D,L,M,S,T,CLNM"
^XTMP("XPDT",7744,"RTN","XUSRB4",80,0)=" S S=$G(^XTMP(HL,0)) I '$L(S) Q ""0^Bad Handle"""
^XTMP("XPDT",7744,"RTN","XUSRB4",81,0)=" S S=$G(^XTMP(HL,""D"",0)) I '$L(S) Q ""0^Bad Handle"" ;Now have real token"
^XTMP("XPDT",7744,"RTN","XUSRB4",82,0)=" I $E(S)'=""|"" Q ""0^Bad Token"""
^XTMP("XPDT",7744,"RTN","XUSRB4",83,0)=" S S=$$DECRYP^XUSRB1($E(S,2,$L(S)-1)) I S="""" Q ""0^Bad Token"""
^XTMP("XPDT",7744,"RTN","XUSRB4",84,0)=" S J=$P(S,""|""),T=$P(S,""|"",2),D=$P(S,""|"",3),M=$P(S,""|"",4)"
^XTMP("XPDT",7744,"RTN","XUSRB4",85,0)=" ;Check token time"
^XTMP("XPDT",7744,"RTN","XUSRB4",86,0)=" S %=$$H3^%ZTM($H),TOUT=$G(TOUT,20)"
^XTMP("XPDT",7744,"RTN","XUSRB4",87,0)=" I T+TOUT<% D REMOVE(HL) Q ""0^Token Expired"" ;Token good for TOUT or 20 seconds"
^XTMP("XPDT",7744,"RTN","XUSRB4",88,0)=" ;Check job"
^XTMP("XPDT",7744,"RTN","XUSRB4",89,0)=" ;Check that token has handle"
^XTMP("XPDT",7744,"RTN","XUSRB4",90,0)=" I M'=HL Q ""0^Bad Token"""
^XTMP("XPDT",7744,"RTN","XUSRB4",91,0)=" ;Check User"
^XTMP("XPDT",7744,"RTN","XUSRB4",92,0)=" I $G(^VA(200,D,0))="""" Q ""0^Bad User"""
^XTMP("XPDT",7744,"RTN","XUSRB4",93,0)=" ;Do IP check"
^XTMP("XPDT",7744,"RTN","XUSRB4",94,0)=" S %=$G(IO(""IP"")),T=0,CLNM="""""
^XTMP("XPDT",7744,"RTN","XUSRB4",95,0)=" I $L(%),%'?1.3N1P1.3N1P1.3N1P1.3N S CLNM=%,%=$P($$ADDRESS^XLFNSLK(%),"","")"
^XTMP("XPDT",7744,"RTN","XUSRB4",96,0)=" S CLNM=$S($L($G(IO(""CLNM""))):IO(""CLNM""),$L(CLNM):CLNM,1:"""") ;p499"
^XTMP("XPDT",7744,"RTN","XUSRB4",97,0)=" I $L($G(^XTMP(HL,""D3""))),^XTMP(HL,""D3"")=% S T=1"
^XTMP("XPDT",7744,"RTN","XUSRB4",98,0)=" I 'T,$L(CLNM),$G(^XTMP(HL,""CLNM""))=IO(""CLNM"") S T=1"
^XTMP("XPDT",7744,"RTN","XUSRB4",99,0)=" I 'T Q ""0^Different IP"" ;p499"
^XTMP("XPDT",7744,"RTN","XUSRB4",100,0)=" I $D(^XTMP(HL,""D2"")),D>0 S DUZ(2)=^XTMP(HL,""D2"")"
^XTMP("XPDT",7744,"RTN","XUSRB4",101,0)=" D USER^XUS(D)"
^XTMP("XPDT",7744,"RTN","XUSRB4",102,0)=" Q D"
^XTMP("XPDT",7744,"RTN","XUSRB4",103,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB4",104,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB4",105,0)="CCOWPC(RET) ;Return ap"
^XTMP("XPDT",7744,"RTN","XUSRB4",106,0)=" N I,XU4"
^XTMP("XPDT",7744,"RTN","XUSRB4",107,0)=" S RET(0)="""" I '$$BROKER^XWBLIB Q"
^XTMP("XPDT",7744,"RTN","XUSRB4",108,0)=" D GETLST^XPAR(.XU4,""SYS"",""XUS CCOW VAULT PARAM"",""Q"")"
^XTMP("XPDT",7744,"RTN","XUSRB4",109,0)=" F I=0,1 S RET(I)=$P($G(XU4(I+1)),""^"",2,99)"
^XTMP("XPDT",7744,"RTN","XUSRB4",110,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB4",111,0)=" ;"
^XTMP("XPDT",7744,"RTN","XUSRB4",112,0)=" ;p500"
^XTMP("XPDT",7744,"RTN","XUSRB4",113,0)="CCOWIP(RET,CLIENTIP) ;rpc. CCOW Auto Signon Handle for middle tiered application servers"
^XTMP("XPDT",7744,"RTN","XUSRB4",114,0)=" N %"
^XTMP("XPDT",7744,"RTN","XUSRB4",115,0)=" S %=$G(IO(""IP"")) ; save original"
^XTMP("XPDT",7744,"RTN","XUSRB4",116,0)=" ; get actual ip address instead of localhost address if possible"
^XTMP("XPDT",7744,"RTN","XUSRB4",117,0)=" S IO(""IP"")=$S($G(CLIENTIP)=""127.0.0.1"":%,$G(CLIENTIP)="""":%,1:$G(CLIENTIP))"
^XTMP("XPDT",7744,"RTN","XUSRB4",118,0)=" D CCOW(.RET)"
^XTMP("XPDT",7744,"RTN","XUSRB4",119,0)=" S IO(""IP"")=% ; revert to original"
^XTMP("XPDT",7744,"RTN","XUSRB4",120,0)=" Q"
^XTMP("XPDT",7744,"RTN","XUSRB4",121,0)=" ;"
^XTMP("XPDT",7744,"SEC","^DIC",8994.5,8994.5,0,"AUDIT")="@"
^XTMP("XPDT",7744,"SEC","^DIC",8994.5,8994.5,0,"DD")="@"
^XTMP("XPDT",7744,"SEC","^DIC",8994.5,8994.5,0,"DEL")="@"
^XTMP("XPDT",7744,"SEC","^DIC",8994.5,8994.5,0,"LAYGO")="@"
^XTMP("XPDT",7744,"SEC","^DIC",8994.5,8994.5,0,"RD")="@"
^XTMP("XPDT",7744,"SEC","^DIC",8994.5,8994.5,0,"WR")="@"
^XTMP("XPDT",7744,"VER")="8.0^22.0"
^XTMP("XPDT",7744,"^DD",3.081,3.081,18,0)="REMOTE APP^P8994.5'^XWB(8994.5,^0;18^Q"
^XTMP("XPDT",7744,"^DD",3.081,3.081,18,.1)="Remote App"
^XTMP("XPDT",7744,"^DD",3.081,3.081,18,21,0)="^^3^3^3091027^"
^XTMP("XPDT",7744,"^DD",3.081,3.081,18,21,1,0)="If the user came into the system by a remote application like CAPRI"
^XTMP("XPDT",7744,"^DD",3.081,3.081,18,21,2,0)="or VistAWeb then this will point to the entry in the remote application"
^XTMP("XPDT",7744,"^DD",3.081,3.081,18,21,3,0)="file they used."
^XTMP("XPDT",7744,"^DD",3.081,3.081,18,"DT")="3091027"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,0)="FIELD^^1^4"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,0,"DDA")="N"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,0,"DT")="3090409"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,0,"IX","ACODE",8994.5,.03)=""
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,0,"IX","B",8994.5,.01)=""
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,0,"NM","REMOTE APPLICATION")=""
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,0,"PT",3.081,18)=""
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,0,"VRPK")="XU"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.01,0)="NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.01,1,0)="^.1"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.01,1,1,0)="8994.5^B"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.01,1,1,1)="S ^XWB(8994.5,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.01,1,1,2)="K ^XWB(8994.5,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.01,3)="NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.01,21,0)="^.001^2^2^3060328^^"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.01,21,1,0)="This is the NAME of the REMOTE GUI APPLICATION for which the data in this "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.01,21,2,0)="entry pertains."
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.02,0)="CONTEXTOPTION^RP19'^DIC(19,^0;2^Q"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.02,3)="This is the option which should be given to the signed in visitor as the Context Option for this application."
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.02,21,0)="^^7^7^3060403^"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.02,21,1,0)="The name of the context (Client/Server or B-type) option that the "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.02,21,2,0)="application users will need that will be added as a secondary menu item."
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.02,21,3,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.02,21,4,0)="The user is signed on as a visitor and given the Context Option specified"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.02,21,5,0)="in this field as a secondary menu option.  The application still needs to"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.02,21,6,0)="set the Context Option using the CreateContext method, but the visitor has"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.02,21,7,0)="it as a valid option so that it can be used."
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.02,"DT")="3060403"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,0)="APPLICATIONCODE^RF^^0;3^K:$L(X)>60!($L(X)<3) X"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,1,0)="^.1"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,1,1,0)="8994.5^ACODE"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,1,1,1)="S ^XWB(8994.5,""ACODE"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,1,1,2)="K ^XWB(8994.5,""ACODE"",$E(X,1,30),DA)"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,1,1,3)="THIS CROSS-REFERENCE IS USED AS ENTRY BY THE APPLICATION CODE FOR THE APPLICATION."
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,1,1,"DT")="3060210"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,3)="This value is the HASHED value of the application's code phrase."
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,0)="^^51^51^3060403^"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,1,0)="This is the hashed value for a security phrase for the application and is "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,2,0)="described below."
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,3,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,4,0)="Security Phrase"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,5,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,6,0)="The security phrase is an application's entry into the REMOTE APPLICATION "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,7,0)="file (#8994.5) for accessing the information necessary to permit the "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,8,0)="application to enroll a remote user.   Create a security phrase, case "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,9,0)="sensitive, and at programmer mode use the command (assuming the security "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,10,0)="phrase is ""My Special Phrase"")"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,11,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,12,0)="   W $$EN^XUSHSH(""My Special Phrase"")"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,13,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,14,0)="The resulting value:"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,15,0)="   ""I&f).c`u:7@01#tL((x"" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,16,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,17,0)="This is the one-way hash value for the security phrase.  It is this "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,18,0)="hashed value that will be entered into the ApplicationCode field (#.03) "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,19,0)="in the REMOTE APPLICATION file (#8994.5) for the application."
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,20,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,21,0)="To make a remote connection, the application will have the user sign onto "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,22,0)="the application's authenticating server (the one entered as "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,23,0)="CallbackServer) and then obtain a Token for the user (similar to "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,24,0)="""XWBHDL977-124367_0"") using the ""XUS SET VISITOR"" RPC.  The application "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,25,0)="will then disconnect from the authenticating server and set the new "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,26,0)="SecurityPhrase property for the TRPCBroker component to the unhashed "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,27,0)="security phrase concatenated with a caret (""^"") and the token for the user"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,28,0)="(e.g.,  ""My Special Phrase^XWBHDL977-124367_0"")"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,29,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,30,0)="This property will be encoded and passed to the remote server for "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,31,0)="authentication; it will hash the security phrase and use the resulting "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,32,0)="value to identify the application's entry in the REMOTE APPLICATION file "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,33,0)="(#8994.5).  The mechanism(s) for contacting the authenticating server "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,34,0)="will be identified and the authentication server will be requested to "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,35,0)="provide the demographic information necessary to identify the user and "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,36,0)="create or match an entry in the NEW PERSON file (#200) based on the token "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,37,0)="provided.  With this information the user will be set up as a visitor "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,38,0)="entry and provided the context option specified.  The application will "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,39,0)="then be notified that the user is connected.  If there is no entry for "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,40,0)="the application, no match for the token, or the authenticating server can "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,41,0)="not be connected, the user will be prompted with a regular sign on screen "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,42,0)="(i.e., required to enter their Access and Verify codes)."
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,43,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,44,0)="Since the security phrase is the application's identifier, we recommend "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,45,0)="that the security phrase in RPCBroker Delphi-based programs be identified "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,46,0)="as a const value in an include file.  And that a substitute include file "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,47,0)="containing a phrase similar to that used above be included with release "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,48,0)="of the source code.  It must be realized that the security phrase "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,49,0)="identifies any application that uses it as your application, and it "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,50,0)="would, of course, be desirable that rogue applications not appear to be "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,21,51,0)="your application."
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,.03,"DT")="3060210"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,0)="CALLBACKTYPE^8994.51S^^1;0"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,21,0)="^^10^10^3060403^"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,21,1,0)="This is a multiple field.  It may contain multiple values describing "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,21,2,0)="mechanisms by which the remote site can contact the application's "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,21,3,0)="authenticating site to obtain the demographic information. "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,21,4,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,21,5,0)="It consists of the following subfields:"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,21,6,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,21,7,0)="   .01 CALLBACKTYPE"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,21,8,0)="   .02 CALLBACKPORT"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,21,9,0)="   .03 CALLBACKSERVER"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,21,10,0)="   .04 URLSTRING"
^XTMP("XPDT",7744,"^DD",8994.5,8994.5,1,"DT")="3060403"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,0)="CALLBACKTYPE SUB-FIELD^^.04^4"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,0,"DT")="3090409"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,0,"IX","B",8994.51,.01)=""
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,0,"NM","CALLBACKTYPE")=""
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,0,"UP")="8994.5"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.01,0)="CALLBACKTYPE^MRS^R:RPC-BROKER;M:M2M-BROKER;H:HTTP;S:STATION-NUMBER;^0;1^Q"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.01,1,0)="^.1"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.01,1,1,0)="8994.51^B"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.01,1,1,1)="S ^XWB(8994.5,DA(1),1,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.01,1,1,2)="K ^XWB(8994.5,DA(1),1,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.01,3)="Select one of the indicators for a Call back type for this Remote GUI Application"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.01,21,0)="^.001^3^3^3090409^^^^"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.01,21,1,0)="This field indicates the mechanism(s) by which the server should contact "
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.01,21,2,0)="the authenticating server to obtain information necessary to sign the "
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.01,21,3,0)="current user on to the current server."
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.01,"DT")="3090409"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.02,0)="CALLBACKPORT^RF^^0;2^K:$L(X)>5!($L(X)<2) X"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.02,3)="Answer must be 2-5 characters in length."
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.02,21,0)="^.001^2^2^3060403^^"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.02,21,1,0)="This is the port to be used for the callback to the authenticating server "
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.02,21,2,0)="for the CALLBACKTYPE specified."
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.02,"DT")="3060407"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.03,0)="CALLBACKSERVER^RF^^0;3^K:$L(X)>60!($L(X)<3) X"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.03,3)="This should be the server name to be used to contact the authenticating server for accessing the data to authenticate the user for this Remote GUI Application."
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.03,21,0)="^.001^2^2^3060403^^"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.03,21,1,0)="This is the server designation to be used for the callback to the "
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.03,21,2,0)="authenticating server for the CALLBACKTYPE specified."
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.03,"DT")="3060123"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,0)="URLSTRING^F^^0;4^K:$L(X)>60!($L(X)<1) X"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,3)="Answer must be 1-60 characters in length."
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,0)="^^14^14^3060403^"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,1,0)="This field holds the text that should follow the server address (field "
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,2,0)="#.03) for HTTP connections to obtain the information for the user token "
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,3,0)="passed in for a REMOTE APPLICATION connection."
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,4,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,5,0)="If the complete URL to be used for the callback is"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,6,0)="   http://myserver.med.va.gov/some/kind/of/location/somePage.aspx"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,7,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,8,0)="The CALLBACKSERVER (#.03) field could be"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,9,0)="   myserver.med.va.gov"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,10,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,11,0)="and the URLSTRING would be"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,12,0)="   some/kind/of/location/somePage.aspx"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,13,0)=" "
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,21,14,0)="This field is only used if the CALLBACKTYPE (#.01) value is H for HTTP"
^XTMP("XPDT",7744,"^DD",8994.5,8994.51,.04,"DT")="3060407"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,0)="REMOTE APPLICATION^8994.5"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,0,"GL")="^XWB(8994.5,"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",0)="^^20^20^3060328^"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",1,0)="The REMOTE APPLICATION file was introduced as part of the Broker Security "
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",2,0)="Enhancement to secure access via the remote user or visitor approach by "
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",3,0)="GUI applications (formerly known as the CAPRI approach for the first "
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",4,0)="application to use this access style).  The remote visitor access permits "
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",5,0)="applications where users need to access a large number of sites to do so "
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",6,0)="without requiring a separate access code and verify code at each site."
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",7,0)=" "
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",8,0)="Following the Broker Security Enhancement, applications will be able to "
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",9,0)="use the remote visitor access only if they have an entry in this file with"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",10,0)="a one-way hash of a secure phrase.  Identification of an entry in the file"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",11,0)="is based on the application passing in the original phrase which is then"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",12,0)="hashed and used for a cross-reference lookup. The application must have at"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",13,0)="least one entry in the CALLBACKTYPE sub-file indicating a connection type,"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",14,0)="a valid address for the authenticating server, and a connection port"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",15,0)="number.  This information is necessary for the remote server to directly"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",16,0)="connect the authenticating server to obtain the demographic information"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",17,0)="necessary to create or match the visitor entry in the NEW PERSON file"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",18,0)="(#200).  The application will also specify the desired context option for"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",19,0)="the user and this will be given to the remote visitor instead of the"
^XTMP("XPDT",7744,"^DIC",8994.5,8994.5,"%D",20,0)="application having to figure out how to set this value."
^XTMP("XPDT",7744,"^DIC",8994.5,"B","REMOTE APPLICATION",8994.5)=""
^XTMP("XPDT",7745)="1"
^XTMP("XPDT",7745,"BLD",1228,0)="XU*8.0*524^KERNEL^0^3100126^y"
^XTMP("XPDT",7745,"BLD",1228,1,0)="^^2^2^3090610^^"
^XTMP("XPDT",7745,"BLD",1228,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7745,"BLD",1228,1,2,0)="XU*8*524  SSH fix."
^XTMP("XPDT",7745,"BLD",1228,4,0)="^9.64PA^^"
^XTMP("XPDT",7745,"BLD",1228,6)="^434"
^XTMP("XPDT",7745,"BLD",1228,6.3)="12"
^XTMP("XPDT",7745,"BLD",1228,"INID")="^y"
^XTMP("XPDT",7745,"BLD",1228,"INIT")="POST^XU8P524"
^XTMP("XPDT",7745,"BLD",1228,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7745,"BLD",1228,"KRN",.4,0)=".4"
^XTMP("XPDT",7745,"BLD",1228,"KRN",.401,0)=".401"
^XTMP("XPDT",7745,"BLD",1228,"KRN",.402,0)=".402"
^XTMP("XPDT",7745,"BLD",1228,"KRN",.403,0)=".403"
^XTMP("XPDT",7745,"BLD",1228,"KRN",.5,0)=".5"
^XTMP("XPDT",7745,"BLD",1228,"KRN",.84,0)=".84"
^XTMP("XPDT",7745,"BLD",1228,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7745,"BLD",1228,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,"NM",0)="^9.68A^5^5"
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,"NM",1,0)="ZIS4ONT^^0^B29959546"
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,"NM",2,0)="ZIS^^0^B21144380"
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,"NM",3,0)="ZISHONT^^0^B59753873"
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,"NM",4,0)="ZISHGTM^^0^B32232259"
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,"NM",5,0)="ZISFONT^^0^B10288750"
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,"NM","B","ZIS",2)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,"NM","B","ZIS4ONT",1)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,"NM","B","ZISFONT",5)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,"NM","B","ZISHGTM",4)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN",9.8,"NM","B","ZISHONT",3)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN",19,0)="19"
^XTMP("XPDT",7745,"BLD",1228,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7745,"BLD",1228,"KRN",101,0)="101"
^XTMP("XPDT",7745,"BLD",1228,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7745,"BLD",1228,"KRN",771,0)="771"
^XTMP("XPDT",7745,"BLD",1228,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7745,"BLD",1228,"KRN",870,0)="870"
^XTMP("XPDT",7745,"BLD",1228,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7745,"BLD",1228,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7745,"BLD",1228,"KRN",8994,0)="8994"
^XTMP("XPDT",7745,"BLD",1228,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",.4,.4)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",.401,.401)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",.402,.402)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",.403,.403)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",.5,.5)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",.84,.84)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",19,19)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",101,101)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",771,771)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",870,870)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",8994,8994)=""
^XTMP("XPDT",7745,"BLD",1228,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7745,"BLD",1228,"QDEF")="^^^^YES"
^XTMP("XPDT",7745,"BLD",1228,"QUES",0)="^9.62^^"
^XTMP("XPDT",7745,"BLD",1228,"REQB",0)="^9.611^2^2"
^XTMP("XPDT",7745,"BLD",1228,"REQB",1,0)="XU*8.0*499^2"
^XTMP("XPDT",7745,"BLD",1228,"REQB",2,0)="XU*8.0*518^2"
^XTMP("XPDT",7745,"BLD",1228,"REQB","B","XU*8.0*499",1)=""
^XTMP("XPDT",7745,"BLD",1228,"REQB","B","XU*8.0*518",2)=""
^XTMP("XPDT",7745,"INIT")="POST^XU8P524"
^XTMP("XPDT",7745,"MBREQ")="0"
^XTMP("XPDT",7745,"PKG",3,-1)="1^1"
^XTMP("XPDT",7745,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7745,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7745,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7745,"PKG",3,22,1,0)="8.0^3090706^3090706^6"
^XTMP("XPDT",7745,"PKG",3,22,1,"PAH",1,0)="524^3100126^2"
^XTMP("XPDT",7745,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3100126"
^XTMP("XPDT",7745,"PKG",3,22,1,"PAH",1,1,1,0)="Please refer to the Description in the FORUM Patch Module for details."
^XTMP("XPDT",7745,"PKG",3,22,1,"PAH",1,1,2,0)="XU*8*524  SSH fix."
^XTMP("XPDT",7745,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7745,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7745,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7745,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7745,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7745,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7745,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7745,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7745,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7745,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7745,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7745,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7745,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7745,"QUES","XPI1","B")="YES"
^XTMP("XPDT",7745,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7745,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7745,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7745,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7745,"QUES","XPM1","B")=""
^XTMP("XPDT",7745,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7745,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7745,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7745,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7745,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7745,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7745,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7745,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7745,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7745,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7745,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7745,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7745,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7745,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7745,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7745,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7745,"RTN")="6"
^XTMP("XPDT",7745,"RTN","XU8P524")="0^^B31551^n/a"
^XTMP("XPDT",7745,"RTN","XU8P524",1,0)="XU8P524 ;ISF/RWF - Patch XU*8*524 ;06/10/09  15:57"
^XTMP("XPDT",7745,"RTN","XU8P524",2,0)=" ;;8.0;KERNEL;**524**;Jul 10, 1995;Build 12"
^XTMP("XPDT",7745,"RTN","XU8P524",3,0)=" Q"
^XTMP("XPDT",7745,"RTN","XU8P524",4,0)=" ;"
^XTMP("XPDT",7745,"RTN","XU8P524",5,0)="POST ;POST-INIT"
^XTMP("XPDT",7745,"RTN","XU8P524",6,0)=" D PATCH^ZTMGRSET(524)"
^XTMP("XPDT",7745,"RTN","XU8P524",7,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS")="0^2^B21144380^B20827574"
^XTMP("XPDT",7745,"RTN","ZIS",1,0)="%ZIS ;SFISC/AC,RWF -- DEVICE HANDLER ;01/25/10  17:19"
^XTMP("XPDT",7745,"RTN","ZIS",2,0)=" ;;8.0;KERNEL;**18,23,69,112,199,191,275,363,440,499,524**;JUL 10, 1995;Build 12"
^XTMP("XPDT",7745,"RTN","ZIS",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7745,"RTN","ZIS",4,0)=" N %ZISOS,%ZISV"
^XTMP("XPDT",7745,"RTN","ZIS",5,0)=" S U=""^"",%ZISOS=$G(^%ZOSF(""OS"")),%ZISV=$G(^%ZOSF(""VOL"")),POP=0 ;p524"
^XTMP("XPDT",7745,"RTN","ZIS",6,0)=" ;Check SPOOLER special case first"
^XTMP("XPDT",7745,"RTN","ZIS",7,0)="INIT ;I $D(ZTQUEUED),$G(IOT)=""SPL"",$D(IO)#2,$D(IO(0))#2,IO]"""",IO=IO(0),$D(IO(1,IO))#2,%ZISOS[""VAX DSM""!(%ZISOS[""M/VX""),$G(IOP)[ION!(IOP[IO) K %ZIS,%IS,IOP Q"
^XTMP("XPDT",7745,"RTN","ZIS",8,0)=" I $G(ZTQUEUED),$G(IOT)=""SPL"",$D(IOP),$L($G(IO)),IO=$G(IO(0)),$D(IO(1,IO))#2,(IOP[$G(ION)!(IOP[IO)) K %ZIS,%IS,IOP Q  ;p524"
^XTMP("XPDT",7745,"RTN","ZIS",9,0)=" ;p524 Line above for HD141181."
^XTMP("XPDT",7745,"RTN","ZIS",10,0)=" I '$D(%ZIS),$D(%IS) M %ZIS=%IS"
^XTMP("XPDT",7745,"RTN","ZIS",11,0)=" S:'($D(%ZIS)#2) %ZIS=""M"" M %IS=%ZIS ;update %IS for now"
^XTMP("XPDT",7745,"RTN","ZIS",12,0)=" I '$D(^XUTL(""XQ"",$J,""MIXED OS"")) S ^XUTL(""XQ"",$J,""MIXED OS"")=$$PRI^%ZOSV"
^XTMP("XPDT",7745,"RTN","ZIS",13,0)=" S %ZIS(""PRI"")=$G(^XUTL(""XQ"",$J,""MIXED OS""),1)"
^XTMP("XPDT",7745,"RTN","ZIS",14,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS",15,0)=" I $D(ZTQUEUED) D  I '$D(IOP) S POP=1 G EXIT^%ZIS1"
^XTMP("XPDT",7745,"RTN","ZIS",16,0)=" .I $D(ZTIO)#2,ZTIO="""" S:%IS'[0 %IS=%IS_""0"",%ZIS=%ZIS_""0"""
^XTMP("XPDT",7745,"RTN","ZIS",17,0)=" I '$D(ZTQUEUED),%IS[""T"",$P($G(IOP),"";"")=""Q"" S POP=1 G EXIT^%ZIS1"
^XTMP("XPDT",7745,"RTN","ZIS",18,0)=" N %,%A,%E,%H,%I,%X,%XX,%Y,%Z,%Z1,%Z2,%Z9,%Z90,%Z91,%Z95,%ZISB,%ZTIME,%ZTYPE"
^XTMP("XPDT",7745,"RTN","ZIS",19,0)=" N %ZHFN,%ZISOLD,%ZTOUT,%ZISDTIM,DTOUT,DUOUT"
^XTMP("XPDT",7745,"RTN","ZIS",20,0)=" S %ZISDTIM=$G(DTIME,300)"
^XTMP("XPDT",7745,"RTN","ZIS",21,0)=" ;Save symbols to restore if don't open a device"
^XTMP("XPDT",7745,"RTN","ZIS",22,0)=" D SYMBOL^%ZISUTL(0,$NA(%ZISOLD))"
^XTMP("XPDT",7745,"RTN","ZIS",23,0)="A D CLEAN ;(p363) K IO(""CLOSE""),IO(""HFSIO"")"
^XTMP("XPDT",7745,"RTN","ZIS",24,0)=" K IO(""P""),IO(""Q""),IO(""S""),IO(""T"")"
^XTMP("XPDT",7745,"RTN","ZIS",25,0)="K2 D K2^%ZIS1"
^XTMP("XPDT",7745,"RTN","ZIS",26,0)=" S %ZISB=%ZIS'[""N"",(%E,%H,POP)=0,%Y="""" S:'$D(IO(0)) IO(0)=$I"
^XTMP("XPDT",7745,"RTN","ZIS",27,0)=" ;I %ZISOS[""VAX DSM"",$I[""SYS$INPUT:.;"" S:%ZIS'[0 %IS=%IS_""0"",%ZIS=%ZIS_""0"""
^XTMP("XPDT",7745,"RTN","ZIS",28,0)=" ;I %IS[""T""&(%IS[""0"") S (%H,%E)=0 G ^%ZIS1"
^XTMP("XPDT",7745,"RTN","ZIS",29,0)=" I $D(IOP),IOP=$I!(IOP=""HOME"")!(0[IOP),$D(^XUTL(""XQ"",$J,""IO"")) D HOME K %IS,%Y,%ZIS,%ZISB,%ZISV,IOP Q"
^XTMP("XPDT",7745,"RTN","ZIS",30,0)=" ;Don't worry about HOME if %ZIS[0"
^XTMP("XPDT",7745,"RTN","ZIS",31,0)=" D:%ZIS'[0 GETHOME G EXIT^%ZIS1:POP,^%ZIS1 ;Jump to next part"
^XTMP("XPDT",7745,"RTN","ZIS",32,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS",33,0)="GETHOME I $D(IO(""HOME"")),$P(IO(""HOME""),""^"",2)=IO(0) S (%E,%H)=+IO(""HOME"") Q"
^XTMP("XPDT",7745,"RTN","ZIS",34,0)=" I $D(^XUTL(""XQ"",$J,""IOS"")),$D(^(""IO"")),IO(0)=^(""IO"") S (%E,%H)=^(""IOS"") Q"
^XTMP("XPDT",7745,"RTN","ZIS",35,0)=" ;CALL LINEPORT CODE HERE---"
^XTMP("XPDT",7745,"RTN","ZIS",36,0)=" S %=$$LINEPORT^%ZISUTL I % S (%E,%H)=% Q"
^XTMP("XPDT",7745,"RTN","ZIS",37,0)=" S %ZISVT=$I D VTLKUP I '%E S %ZISVT=$I D VIRTUAL"
^XTMP("XPDT",7745,"RTN","ZIS",38,0)=" I %ZISVT=""""!(%E'>0) I %IS'[0 O IO(0)::0 I $T U IO(0) W !,""HOME DEVICE (""_$I_"") DOES NOT EXIST IN THE DEVICE FILE"",!,""PLEASE CONTACT YOUR SYSTEM MANAGER!"",*7"
^XTMP("XPDT",7745,"RTN","ZIS",39,0)=" S %H=%E S:'%H&(%IS'[0) POP=1 S:(%H>0)&('$D(IO(""HOME""))) IO(""HOME"")=%H_""^""_$I"
^XTMP("XPDT",7745,"RTN","ZIS",40,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS",41,0)="VIRTUAL ;See if a Virtual Terminal (LAT, TELNET)"
^XTMP("XPDT",7745,"RTN","ZIS",42,0)=" ;Change the MSM check for telnet to work with v4.4"
^XTMP("XPDT",7745,"RTN","ZIS",43,0)=" I %ZISOS[""MSM"" X ""I $P($ZV,""""Version """",2)'<3 S %ZISVT=$ZDE(+%ZISVT) I %ZISVT?.E1""""~""""4.5N.E S %ZISVT=""""TELNET"""""""
^XTMP("XPDT",7745,"RTN","ZIS",44,0)=" F %ZISI=$L(%ZISVT):-1:0 D:$D(^%ZIS(1,""C"",%ZISVT))  Q:$S('%E:0,'$D(^%ZIS(1,%E,""TYPE"")):0,^(""TYPE"")=""VTRM"":1,1:0)  S %ZISVT=$E(%ZISVT,1,%ZISI)"
^XTMP("XPDT",7745,"RTN","ZIS",45,0)=" .D VTLKUP Q:$S('%E:0,'$D(^%ZIS(1,%E,""TYPE"")):0,^(""TYPE"")=""VTRM"":1,1:0)"
^XTMP("XPDT",7745,"RTN","ZIS",46,0)=" .S %X=0 F %ZISX=%ZISV,"""" Q:%X>0  S %X=0 F  S %E=+$O(^%ZIS(1,""CPU"",%ZISX_"".""_%ZISVT,%X)) S %X=%E Q:%E'>0  I $G(^%ZIS(1,+%E,""TYPE""))=""VTRM"" Q"
^XTMP("XPDT",7745,"RTN","ZIS",47,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS",48,0)="VTLKUP F %ZISX=%ZISV,"""" S %E=+$O(^%ZIS(1,""G"",""SYS.""_%ZISX_"".""_%ZISVT,0)) Q:%E  S %E=+$O(^%ZIS(1,""CPU"",%ZISX_"".""_%ZISVT,0)) Q:%E"
^XTMP("XPDT",7745,"RTN","ZIS",49,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS",50,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS",51,0)="CURRENT N POP,%ZIS,%IS,%E,%H"
^XTMP("XPDT",7745,"RTN","ZIS",52,0)=" S FF=""#"",SL=24,BS=""*8"",RM=80,(SUB,XY)="""",%IS=0,%ZISOS=$G(^%ZOSF(""OS"")),%ZISV=$G(^(""VOL"")),POP=0"
^XTMP("XPDT",7745,"RTN","ZIS",53,0)=" D GETHOME K %E,%IS,%ZISI,%ZISOS,%ZISV,%ZISVT,%ZISX Q:POP"
^XTMP("XPDT",7745,"RTN","ZIS",54,0)=" I $D(^%ZIS(1,%H,""SUBTYPE"")) S SUB=+^(""SUBTYPE"") K %H"
^XTMP("XPDT",7745,"RTN","ZIS",55,0)=" I $D(SUB),SUB,$D(^%ZIS(2,SUB,1)) S SUB=$S($D(^(0)):$P(^(0),""^""),1:""""),FF=$P(^(1),""^"",2),SL=$P(^(1),""^"",3),BS=$P(^(1),""^"",4),XY=$P(^(1),""^"",5),RM=+^(1)"
^XTMP("XPDT",7745,"RTN","ZIS",56,0)=" E  S SUB="""""
^XTMP("XPDT",7745,"RTN","ZIS",57,0)=" I $D(^%ZOSF(""RM"")) N X S X=RM X ^(""RM"") K %A"
^XTMP("XPDT",7745,"RTN","ZIS",58,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS",59,0)="HOME ;Entry point to establish IO* variables for home device."
^XTMP("XPDT",7745,"RTN","ZIS",60,0)=" D CLEAN ;(p363)"
^XTMP("XPDT",7745,"RTN","ZIS",61,0)=" N X I '$D(^XUTL(""XQ"",$J,""IO"")) S IOP=""HOME"" D ^%ZIS Q"
^XTMP("XPDT",7745,"RTN","ZIS",62,0)=" D RESETVAR"
^XTMP("XPDT",7745,"RTN","ZIS",63,0)=" I $L($G(IO)),$P($G(IO(""HOME"")),""^"",2)=IO,$D(IO(1,IO)) U IO ;p524"
^XTMP("XPDT",7745,"RTN","ZIS",64,0)=" I '$D(IO(""C"")),$G(IOM),IO=$I,$D(IO(1,IO)),$D(^%ZOSF(""RM"")) S X=+IOM X ^(""RM"")"
^XTMP("XPDT",7745,"RTN","ZIS",65,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS",66,0)=" ;IO(""Q"") is checked by many routines after a call to ^%ZISC, so only clean on call to %ZIS."
^XTMP("XPDT",7745,"RTN","ZIS",67,0)="CLEAN ;Cleanup env. Called from %ZISC also."
^XTMP("XPDT",7745,"RTN","ZIS",68,0)=" I $G(IOT)'=""SPL"" K IO(""DOC""),IO(""SPOOL"") ;(p440)"
^XTMP("XPDT",7745,"RTN","ZIS",69,0)=" I $G(IOT)'=""HFS"" K IO(""HFSIO"") ;p440"
^XTMP("XPDT",7745,"RTN","ZIS",70,0)=" S (IOPAR,IOUPAR)="""""
^XTMP("XPDT",7745,"RTN","ZIS",71,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS",72,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS",73,0)="RESETVAR ;Reset home IO* variables."
^XTMP("XPDT",7745,"RTN","ZIS",74,0)=" I '$D(^XUTL(""XQ"",$J,""IO"")) Q"
^XTMP("XPDT",7745,"RTN","ZIS",75,0)=" N %"
^XTMP("XPDT",7745,"RTN","ZIS",76,0)=" F %=""IO"",""IOBS"",""IOF"",""IOM"",""ION"",""IOS"",""IOSL"",""IOST"",""IOST(0)"",""IOT"",""IOXY"",""IOPAR"",""IOUPAR"" I $D(^XUTL(""XQ"",$J,%))#2 S @%=^(%)"
^XTMP("XPDT",7745,"RTN","ZIS",77,0)=" F %=""IO(""""IP"""")"",""IO(""""CLNM"""")"",""IO(""""DOC"""")"",""IO(""""HFSIO"""")"",""IO(""""SPOOL"""")"" I $D(^XUTL(""XQ"",$J,%))#2 S @%=^(%)"
^XTMP("XPDT",7745,"RTN","ZIS",78,0)=" S POP=0,IO(0)=IO"
^XTMP("XPDT",7745,"RTN","ZIS",79,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS",80,0)="SAVEVAR ;Save home IO* variables, called from XUS1,%ZTMS3"
^XTMP("XPDT",7745,"RTN","ZIS",81,0)=" N %"
^XTMP("XPDT",7745,"RTN","ZIS",82,0)=" F %=""IO"",""IOBS"",""IOF"",""IOM"",""ION"",""IOS"",""IOSL"",""IOST"",""IOST(0)"",""IOT"",""IOXY"",""IOPAR"",""IOUPAR"" I $D(@%) S ^XUTL(""XQ"",$J,%)=@%"
^XTMP("XPDT",7745,"RTN","ZIS",83,0)=" F %=""IO(""""IP"""")"",""IO(""""CLNM"""")"",""IO(""""DOC"""")"",""IO(""""HFSIO"""")"",""IO(""""SPOOL"""")"" I $D(@%) S ^XUTL(""XQ"",$J,%)=@%"
^XTMP("XPDT",7745,"RTN","ZIS",84,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS",85,0)="ZISLPC Q  ;No longer called in Kernel v8."
^XTMP("XPDT",7745,"RTN","ZIS",86,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS",87,0)="HLP1 G EN1^%ZIS7"
^XTMP("XPDT",7745,"RTN","ZIS",88,0)="HLP2 N %E,%H,%X,%ZISV,X,%ZISDTIM"
^XTMP("XPDT",7745,"RTN","ZIS",89,0)=" S %ZISDTIM=$G(DTIME,60),%ZISV=$S($D(^%ZOSF(""VOL"")):^(""VOL""),1:"""") G EN2^%ZIS7"
^XTMP("XPDT",7745,"RTN","ZIS",90,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS",91,0)="REWIND(IO2,IOT,IOPAR) ;Rewind Device"
^XTMP("XPDT",7745,"RTN","ZIS",92,0)=" N %,X,Y,$ES,$ET S $ET=""D REWERR^%ZIS Q 0"""
^XTMP("XPDT",7745,"RTN","ZIS",93,0)=" S %=$I"
^XTMP("XPDT",7745,"RTN","ZIS",94,0)=" I '($D(IO2)#2)!'$D(IOT)!'$D(IOPAR) Q 0"
^XTMP("XPDT",7745,"RTN","ZIS",95,0)=" I ""MT^SDP^HFS""'[IOT Q 0"
^XTMP("XPDT",7745,"RTN","ZIS",96,0)=" S @(""Y=$$REW""_IOT_""^%ZIS4(IO2,IOPAR)"")"
^XTMP("XPDT",7745,"RTN","ZIS",97,0)=" U %"
^XTMP("XPDT",7745,"RTN","ZIS",98,0)=" Q Y"
^XTMP("XPDT",7745,"RTN","ZIS",99,0)="REWERR ;Error encountered"
^XTMP("XPDT",7745,"RTN","ZIS",100,0)=" S IO(""ERROR"")=$EC"
^XTMP("XPDT",7745,"RTN","ZIS",101,0)=" S $EC="""",$ET=""Q:$ES>1  S $EC="""""""" Q 0"" S $EC="",U1,"""
^XTMP("XPDT",7745,"RTN","ZIS",102,0)=" Q 0"
^XTMP("XPDT",7745,"RTN","ZIS",103,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT")="0^1^B29959546^B29872561"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",1,0)="%ZIS4 ;SFISC/RWF,AC - DEVICE HANDLER SPOOL SPECIFIC CODE (Cache) ;04/06/09  13:28"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",2,0)=" ;;8.0;KERNEL;**34,59,69,191,278,293,440,499,524**;Jul 10, 1995;Build 12"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",4,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",5,0)="OPEN ;Called for TRM devices"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",6,0)=" G OPN2:$D(IO(1,IO))"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",7,0)=" S POP=0 D OP1 G NOPEN:'$D(IO(1,IO))"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",8,0)="OPN2 ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",9,0)=" I $D(%ZISHP),'$D(IOP) W !,$C(7)_"" Routing to device ""_$P(^%ZIS(1,%E,0),""^"",1)_$S($D(^(1)):"" ""_$P(^(1),""^"",1)_"" "",1:"""")"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",10,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",11,0)="NOPEN ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",12,0)=" I %IS'[""D"",$D(%ZISHP)!(%ZISHG]"""") S POP=1 Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",13,0)=" I '$D(IOP) W $C(7)_""  [BUSY]"" W ""  ...  RETRY"" S %=2,U=""^"" D YN^%ZIS1 G OPEN:%=1"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",14,0)=" S POP=1 Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",15,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",16,0)="OP1 N $ET S $ET=""G OPNERR^%ZIS4"""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",17,0)=" I $D(%ZISLOCK) L +@%ZISLOCK:5 E  S POP=1 Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",18,0)=" O IO::%ZISTO S:$T IO(1,IO)="""" S:'$T POP=1"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",19,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",20,0)="OPNERR S POP=1,IO(""LASTERR"")=$G(IO(""ERROR"")),IO(""ERROR"")=$ZE,$EC="""""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",21,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",22,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",23,0)="O ;Gets called for all devices"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",24,0)=" N X,%A1"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",25,0)=" D:%ZIS[""L"" ZIO"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",26,0)=" I $D(IO(""S"")),$D(^%ZIS(2,IO(""S""),10)),^(10)]"""" U IO(0) D X10^ZISX ;Open Printer port"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",27,0)="OPAR I $D(IOP),%ZTYPE=""HFS"",$D(%ZIS(""HFSIO"")),$D(%ZIS(""IOPAR"")),%ZIS(""HFSIO"")]"""" S IO=%ZIS(""HFSIO""),%ZISOPAR=%ZIS(""IOPAR"")"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",28,0)=" S %A=$S($L(%ZISOPAR):%ZISOPAR,%ZTYPE'[""TRM"":"""",$E(%ZISIOST,1)=""C"":""(""_+%Z91_"":""""C"""")"",$E(%ZISIOST,1,2)=""PK"":""(""_+%Z91_"":""""P"""")"",1:+%Z91)"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",29,0)=" S %A=%A_$S(%A[""):"":"""",%ZTYPE[""OTH""&($P(%ZTIME,""^"",3)=""n""):"""",1:"":""_%ZISTO),%A=""""""""_IO_""""""""_$E("":"",%A]"""")_%A"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",30,0)=" D O1 I POP W:'$D(IOP) !,?5,$C(7)_""[Device is BUSY]"" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",31,0)=" ;I %ZTYPE=""HFS"" U IO S X=IO,IO=IO_"";""_$P($ZIO,"";"",2),IO(1,IO)="""" K IO(1,X)"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",32,0)=" U IO S $X=0,$Y=0"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",33,0)=" I $L(%ZISUPAR) S %A1=""""""""_IO_"""""":""_%ZISUPAR U @%A1"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",34,0)=" ;U:%IS'[0 IO(0)"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",35,0)=" G OXECUTE^%ZIS6"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",36,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",37,0)="O1 N $ET S $ET=""G OPNERR^%ZIS4"""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",38,0)=" I $D(%ZISLOCK) L +@%ZISLOCK:5 E  S POP=1 Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",39,0)=" O @%A S:'$T&(%A?.E1"":"".N) POP=1 S:'POP IO(1,IO)="""""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",40,0)=" S IO(""ERROR"")="""""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",41,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",42,0)=" ;Version 3 used ip/port, Version 4 has ip:port|xx"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",43,0)="ZIO I $D(IO(""IP"")),$D(IO(""ZIO"")) Q  ;p499,p524"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",44,0)=" N %,%1 S %=$ZIO,%1=$$VERSION^%ZOSV"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",45,0)=" S IO(""ZIO"")=$S(%1<4:$I,1:$ZIO),%1=$S(%[""/"":""/"",1:"":"")"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",46,0)=" ;Drop prefix"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",47,0)=" S:%[""|TNT|"" %=$E(%,6,999) S:%[""|TNA|"" %=$E(%,6,999)"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",48,0)=" ;Get IP name or number"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",49,0)=" S:$P(%,%1)[""."" IO(""IP"")=$P(%,%1)"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",50,0)=" I $$OS^%ZOSV=""VMS"",$G(IO(""IP""))="""" S IO(""IP"")=$P($ZF(""TRNLNM"",""SYS$REM_NODE""),"":"") ;For SSH, p499"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",51,0)=" S:'$L(IO(""ZIO"")) IO(""ZIO"")=$G(IO(""IP""))"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",52,0)=" I $L($G(IO(""IP""))),IO(""IP"")'?1.3N1P1.3N1P1.3N1P1.3N S IO(""IP"")=$P($ZU(54,13,IO(""IP"")),"","") ;p499"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",53,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",54,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",55,0)="SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file Num/Name."
^XTMP("XPDT",7745,"RTN","ZIS4ONT",56,0)=" N %ZOS S %ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",57,0)=" I '$D(^XMB(3.51,0)) W:'$D(IOP) !?5,""The spooler files are not setup in this account."" G NO"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",58,0)=" I $D(ZISDA) W:'$D(IOP) !?5,$C(7)_""You may not Spool the printing of a Spool document"" G NO"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",59,0)=" I $D(DUZ)[0 W:'$D(IOP) !,""Must be a valid user."" G NO"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",60,0)=" ;Get entry in Spool Doc file"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",61,0)="R S %ZY=-1 D NEWDOC^ZISPL1:$D(DUZ)=11 G NO:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO(""DOC"")=$P(%ZY(0),U,1) G OK:$D(IO(""Q""))"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",62,0)=" G:'%ZISB OK I '$P(%ZY,""^"",3),%ZFN]"""" D SPL3 G NO:%ZFN<0,DOC"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",63,0)=" I %ZOS=""NT"" D  G:%ZFN>255 NO"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",64,0)=" . F %ZFN=1:1:260 I '$D(^XMB(3.51,""C"",%ZFN))!$D(^(%ZFN,%ZDA)) Q:%ZFN<256  W:'$D(IOP) $C(7)_""  DELETE SOME OTHER DOCUMENT!"" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",65,0)=" . Q:%ZFN>255  D SPL2 S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,""C"",%ZFN,%ZDA)="""""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",66,0)=" I %ZOS=""VMS"" D  G:%ZFN=-1 NO"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",67,0)=" . S %ZFN=IO_""SPOOL_no_""_%ZDA_"".TMP"" D SPL2 Q:%ZFN=-1  S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,""C"",%ZFN,%ZDA)="""",IO=%ZFN"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",68,0)="DOC S IO(""SPOOL"")=%ZDA,^XUTL(""XQ"",$J,""SPOOL"")=%ZDA"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",69,0)=" I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),""^"",8),$O(^(""SPL"",0)) S ^XUTL(""XQ"",$J,""ADSPL"")=%ZISIOS,ZISPLAD=%ZISIOS"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",70,0)="OK K %ZDA,%ZFN Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",71,0)="NO K %ZDA,%ZFN,IO(""DOC"") S POP=1 Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",72,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",73,0)="SPL2 I %ZOS=""NT"" O IO:(%ZFN:0) S IO(1,IO)="""",^SPOOL(0,IO(""DOC""),%ZFN)="""",^SPOOL(%ZFN,0)=IO(""DOC"")_""{""_$H Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",74,0)=" ;VMS"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",75,0)=" O %ZFN:(""WNS""):2 G:'$T SPL4 S IO(1,%ZFN)="""" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",76,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",77,0)="SPL3 I %ZOS=""NT"" G SPL4:'$D(^SPOOL(%ZFN,2147483647)) O IO:(%ZFN:$P(^(2147483647),""{"",3)):1 S:'$T ZISPLQ=1 K ^(2147483647) S IO(1,IO)="""" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",78,0)=" ;VMS"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",79,0)=" N $ETRAP S $ETRAP=""S $EC="""""""" G SPL4^%ZIS4"""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",80,0)=" O %ZFN:""RV"":1 S:'$T ZISPLQ=1 G:$ZA<0!('$T) SPL4 S IO(1,%ZFN)="""" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",81,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",82,0)="SPL4 W:'$D(IOP) !,""Spool file already open"" S %ZFN=-1 Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",83,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",84,0)="CLOSE N %ZOS,%Z1,%ZCR,%2,%3,%X,%Y,ZTSK,%ZFN S %ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",85,0)=" I %ZOS=""NT"",IO=2,$D(IO(1,IO)) K IO(1,IO) C IO"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",86,0)=" I %ZOS=""VMS"",IO]"""",$D(IO(1,IO)) U IO S %ZFN=$ZIO C IO K IO(1,IO)"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",87,0)=" ;See that ZTSK is set so we will move to the global now."
^XTMP("XPDT",7745,"RTN","ZIS4ONT",88,0)=" S ZTSK=$G(ZTSK,1) D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",89,0)=" G:%ZOS=""VMS"" CLVMS"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",90,0)=" S %ZFN=$P(%ZS,""^"",2),%ZCR=$C(13),%Y="""",%=0,%3=$P(^SPOOL(%ZFN,2147483647),""{"",3)"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",91,0)=" S %Z1=+$G(^XTV(8989.3,1,""SPL""))"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",92,0)=" F %2=1:1:%3 Q:'$D(^SPOOL(%ZFN,%2))  S %X=^SPOOL(%ZFN,%2) D"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",93,0)=" . I %Z1<% D LIMIT S %2=%3 Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",94,0)=" . I %X[$C(13,12) D:$L($P(%X,$C(13))) ADD($P(%X,$C(13))) D ADD(""|TOP|"") Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",95,0)=" . D ADD($P(%X,$C(13),1))"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",96,0)=" K ^SPOOL(%ZFN),^SPOOL(0,$P(%ZS,U,1)),%Y,%X,%1,%2,%3 D CLOSE^ZISPL1"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",97,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",98,0)="ADD(L) S %=%+1,^XMBS(3.519,XS,2,%,0)=L"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",99,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",100,0)="LIMIT D ADD(""*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***"") S $P(^XMB(3.51,%ZDA,0),""^"",11)=1"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",101,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",102,0)="CLVMS ;Close for Cache VMS"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",103,0)=" N $ES,$ET S $ET=""D:$EC'[""""ENDOF"""" ^%ZTER,UNWIND^%ZTER S $EC="""""""" D SPLEX^%ZIS4,UNWIND^%ZTER"""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",104,0)=" S %ZA=$ZU(68,40,1) ;Work like DSM"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",105,0)=" ;%ZFN Could be set at the top"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",106,0)=" S %ZFN=$S($G(%ZFN)]"""":%ZFN,1:$P(%ZS,""^"",2)) D SPL3 Q:%ZFN']""""  U %ZFN S %ZCR=$C(13),%Y="""""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",107,0)=" S %Z1=+$G(^XTV(8989.3,1,""SPL"")),%=0"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",108,0)=" F  R %X#255:5 Q:$ZEOF<0  D  G:%Z1<% SPLEX"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",109,0)=" . I %Z1<% D LIMIT Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",110,0)=" . I %X[$C(12) D  Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",111,0)=" . . S %Y=$P(%X,$C(12)) D:$L(%Y) ADD(%Y),ADD(""|TOP|"")"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",112,0)=" . . S %Y=$P(%X,$C(12),2) D:$L(%Y) ADD(%Y)"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",113,0)=" . . Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",114,0)=" . D ADD(%X)"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",115,0)=" . Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",116,0)="SPLEX C %ZFN:""D"" K:%ZFN]"""" IO(1,%ZFN) D CLOSE^ZISPL1 K %Y,%X,%1,%ZFN Q"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",117,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",118,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",119,0)="HFS G HFS^%ZISF"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",120,0)="REWMT(IO2,IOPAR) ;Rewind Magtape"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",121,0)=" N $ETRAP S $ET=""G REWERR^%ZIS4"""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",122,0)=" U IO2 W *5"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",123,0)=" Q 1"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",124,0)="REWSDP(IO2,IOPAR) ;Rewind SDP"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",125,0)=" G REW1"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",126,0)="REWHFS(IO2,IOPAR) ;Rewind Host File."
^XTMP("XPDT",7745,"RTN","ZIS4ONT",127,0)="REW1 ;ZIS set % to the current $I so need to update % if = IO"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",128,0)=" N NIO,OP,$ETRAP"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",129,0)=" S $ET=""G REWERR^%ZIS4"""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",130,0)=" C IO2 ;You do a rewind to read the file."
^XTMP("XPDT",7745,"RTN","ZIS4ONT",131,0)=" S OP=$S($ZV[""VMS"":""RV"",1:""RS"")"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",132,0)=" O IO2:(OP):1 S IO(1,IO2)="""""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",133,0)=" Q 1"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",134,0)="REWERR ;Error encountered"
^XTMP("XPDT",7745,"RTN","ZIS4ONT",135,0)=" S IO(""ERROR"")=$EC,$ECODE="""""
^XTMP("XPDT",7745,"RTN","ZIS4ONT",136,0)=" Q 0"
^XTMP("XPDT",7745,"RTN","ZISFONT")="0^5^B10288750^B9782391"
^XTMP("XPDT",7745,"RTN","ZISFONT",1,0)="%ZISF ;SFISC/AC - HOST FILES FOR Cache on NT & VMS ;01/25/10  16:33"
^XTMP("XPDT",7745,"RTN","ZISFONT",2,0)=" ;;8.0;KERNEL;**34,191,271,385,499,524**;Jul 10, 1995;Build 12"
^XTMP("XPDT",7745,"RTN","ZISFONT",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7745,"RTN","ZISFONT",4,0)="HFS ;Host File Server"
^XTMP("XPDT",7745,"RTN","ZISFONT",5,0)=" ;Calling parameters in %ZIS override Device file."
^XTMP("XPDT",7745,"RTN","ZISFONT",6,0)=" Q:$D(IOP)&$D(%ZIS(""HFSIO""))&$D(%ZIS(""IOPAR""))"
^XTMP("XPDT",7745,"RTN","ZISFONT",7,0)=" N %"
^XTMP("XPDT",7745,"RTN","ZISFONT",8,0)=" ;Get file name"
^XTMP("XPDT",7745,"RTN","ZISFONT",9,0)=" I $D(%ZIS(""HFSNAME"")) S IO=%ZIS(""HFSNAME""),%X=IO"
^XTMP("XPDT",7745,"RTN","ZISFONT",10,0)=" E  D ASKHFS ;Return name in %X"
^XTMP("XPDT",7745,"RTN","ZISFONT",11,0)=" ;Mode or actual parameters"
^XTMP("XPDT",7745,"RTN","ZISFONT",12,0)="H S:$D(%ZIS(""HFSMODE"")) %ZISOPAR=$$MODE(%ZIS(""HFSMODE""))"
^XTMP("XPDT",7745,"RTN","ZISFONT",13,0)="H1 I $D(IO(""Q""))!(%ZIS[""Z"") S IO(""HFSIO"")="""""
^XTMP("XPDT",7745,"RTN","ZISFONT",14,0)=" S:$L(%X) %ZIS(""afn"")=1"
^XTMP("XPDT",7745,"RTN","ZISFONT",15,0)=" S IO=$S($L(%X):%X,1:IO),IO=$$CHKNM(IO) ;See that we have a directory"
^XTMP("XPDT",7745,"RTN","ZISFONT",16,0)=" S:$D(IO(""HFSIO"")) IO(""HFSIO"")=IO"
^XTMP("XPDT",7745,"RTN","ZISFONT",17,0)=" I '$D(IOP)&$D(%ZIS(""HFSNAME"")) S %=""    HOST FILE USED:  ""_%ZIS(""HFSNAME"") W:$X+$L(%)>75 ! W %,!"
^XTMP("XPDT",7745,"RTN","ZISFONT",18,0)=" ;Check Ask Parameters"
^XTMP("XPDT",7745,"RTN","ZISFONT",19,0)=" D ASKPAR^%ZIS6,SETPAR^%ZIS3"
^XTMP("XPDT",7745,"RTN","ZISFONT",20,0)=" ;Check Ask IO Mode"
^XTMP("XPDT",7745,"RTN","ZISFONT",21,0)="HFSIOO I '$D(IOP),%ZTYPE=""HFS"",'$D(%ZIS(""HFSMODE"")),'$P(^%ZIS(1,%E,0),""^"",4),%ZISOPAR="""",$P($G(^%ZIS(1,%E,1)),""^"",6) D"
^XTMP("XPDT",7745,"RTN","ZISFONT",22,0)=" . W:$X>19 ! W ?20,""INPUT/OUTPUT OPERATION: R//"""
^XTMP("XPDT",7745,"RTN","ZISFONT",23,0)=" Q:'$T  D SBR^%ZIS1 I $D(DTOUT)!$D(DFOUT)!$D(DUOUT) S POP=1 Q"
^XTMP("XPDT",7745,"RTN","ZISFONT",24,0)=" S:%X="""" %X=""R"" S %X=$$UP^%ZIS1(%X)"
^XTMP("XPDT",7745,"RTN","ZISFONT",25,0)=" D HOPT:%X=""?""!'$$CHECK(%X),HOPT1:%X=""??"" G HFSIOO:%X=""?""!'$$CHECK(%X)"
^XTMP("XPDT",7745,"RTN","ZISFONT",26,0)=" S:%X]"""" %ZISOPAR=""(""_$$MODE(%X)_"")"""
^XTMP("XPDT",7745,"RTN","ZISFONT",27,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISFONT",28,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISFONT",29,0)="CHECK(X) ;Check that we have valid option"
^XTMP("XPDT",7745,"RTN","ZISFONT",30,0)=" N Y,%"
^XTMP("XPDT",7745,"RTN","ZISFONT",31,0)=" Q:(X[""R"")&(X[""W"") 0 ;Can't have both"
^XTMP("XPDT",7745,"RTN","ZISFONT",32,0)=" S Y=1 I $L($TR(X,""ANRW"")) S Y=0"
^XTMP("XPDT",7745,"RTN","ZISFONT",33,0)=" Q Y"
^XTMP("XPDT",7745,"RTN","ZISFONT",34,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISFONT",35,0)="ASKHFS ;---Ask host file name here---"
^XTMP("XPDT",7745,"RTN","ZISFONT",36,0)=" I $D(%ZIS(""B"",""HFS""))#2,%ZIS(""B"",""HFS"")]"""" D"
^XTMP("XPDT",7745,"RTN","ZISFONT",37,0)=" .S IO=%ZIS(""B"",""HFS"") ;Set default host file name"
^XTMP("XPDT",7745,"RTN","ZISFONT",38,0)=" S %X='$P($G(^%ZIS(1,%E,1)),""^"",5)"
^XTMP("XPDT",7745,"RTN","ZISFONT",39,0)=" S:'%X %X="""""
^XTMP("XPDT",7745,"RTN","ZISFONT",40,0)=" I $D(IOP)!%X!$D(%ZIS(""HFSNAME"")) S %X="""" Q"
^XTMP("XPDT",7745,"RTN","ZISFONT",41,0)="ASKAGN W !,""HOST FILE NAME: ""_IO_""//"" D SBR^%ZIS1"
^XTMP("XPDT",7745,"RTN","ZISFONT",42,0)=" I %X?1.""?"".E W !,""ENTER HOST FILE NAME"" G ASKAGN"
^XTMP("XPDT",7745,"RTN","ZISFONT",43,0)=" S:$D(DTOUT)!$D(DUOUT) POP=1"
^XTMP("XPDT",7745,"RTN","ZISFONT",44,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISFONT",45,0)="CHKNM(H)        ;Check the HFS name"
^XTMP("XPDT",7745,"RTN","ZISFONT",46,0)=" N N,P,F,%OS S N=H,%OS=$$OS^%ZOSV"
^XTMP("XPDT",7745,"RTN","ZISFONT",47,0)=" ;Find any path may have"
^XTMP("XPDT",7745,"RTN","ZISFONT",48,0)=" S P=$TR($RE(H),""\:[]"",""////""),F=$RE($P(P,""/"")),P=$P(H,F,1)"
^XTMP("XPDT",7745,"RTN","ZISFONT",49,0)=" I %OS[""VMS"",((P'["":"")&(P'[""[""))!(P[""\"") S N=$$DEFDIR^%ZISH("""")_F ;VMS - disk:[directory]file"
^XTMP("XPDT",7745,"RTN","ZISFONT",50,0)=" I %OS[""NT"",'(P?1A1"":\"".E)!($E(P)=""\"") S N=$$DEFDIR^%ZISH("""")_F ;NT - C:\DIR\FILE"
^XTMP("XPDT",7745,"RTN","ZISFONT",51,0)=" I %OS[""UNIX"",(P'[""/"") S N=$$DEFDIR^%ZISH("""")_F ;UNIX/Linux - ./file or /mnt/dir/file"
^XTMP("XPDT",7745,"RTN","ZISFONT",52,0)=" Q N"
^XTMP("XPDT",7745,"RTN","ZISFONT",53,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISFONT",54,0)="MODE(X) ;Return value for %ZISOPAR."
^XTMP("XPDT",7745,"RTN","ZISFONT",55,0)=" ;For VMS only, The H is for read SHARE. Going back to READ Stream mode."
^XTMP("XPDT",7745,"RTN","ZISFONT",56,0)=" N Y,Q S Q=$C(34)"
^XTMP("XPDT",7745,"RTN","ZISFONT",57,0)=" I $ZV[""VMS"" S Y=$S(X=""N"":""NWS"",X=""W"":""NWS"",X=""A"":""AWS"",1:""RHS"")"
^XTMP("XPDT",7745,"RTN","ZISFONT",58,0)=" E  S Y=$S(X=""N"":""NWS"",X=""W"":""NWS"",X=""A"":""AWS"",1:""RS"")"
^XTMP("XPDT",7745,"RTN","ZISFONT",59,0)=" Q $S($L(Y):Q_Y_Q,1:Y)"
^XTMP("XPDT",7745,"RTN","ZISFONT",60,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISFONT",61,0)="HOPT W !,""You may enter a code that represents one of"",!,""the following host file input/ouput operation:"""
^XTMP("XPDT",7745,"RTN","ZISFONT",62,0)=" W !?16,""R = READ ACCESS"",!?16,""W = WRITE ACCESS"",!?16,""N = NEWVERSION"",!?16,""A = APPEND"""
^XTMP("XPDT",7745,"RTN","ZISFONT",63,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISFONT",64,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISFONT",65,0)="HOPT1 S %ZISI=$O(^DIC(9.2,""B"",""XUHFSPARAM-MVX"",0)) Q:'%ZISI  Q:'$D(^DIC(9.2,+%ZISI,0))  Q:$P(^(0),""^"",1)'=""XUHFSPARAM-MVX"""
^XTMP("XPDT",7745,"RTN","ZISFONT",66,0)=" Q:$D(^DIC(9.2,+%ZISI,1))'>9  F %X=0:0 S %X=$O(^DIC(9.2,+%ZISI,1,%X)) Q:%X'>0  I $D(^(%X,0)) W !,^(0)"
^XTMP("XPDT",7745,"RTN","ZISFONT",67,0)=" W ! S %X=""??"""
^XTMP("XPDT",7745,"RTN","ZISFONT",68,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM")="0^4^B32232259^B32407982"
^XTMP("XPDT",7745,"RTN","ZISHGTM",1,0)="%ZISH ;ISF/AC,RWF - GT.M for VMS/Unix Host file Control ;12/07/09  15:53"
^XTMP("XPDT",7745,"RTN","ZISHGTM",2,0)=" ;;8.0;KERNEL;**275,306,385,524**;Jul 10, 1995;Build 12"
^XTMP("XPDT",7745,"RTN","ZISHGTM",3,0)=" ; for GT.M for Unix/VMS, version 4.3"
^XTMP("XPDT",7745,"RTN","ZISHGTM",4,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",5,0)="OPENERR ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",6,0)=" Q 0"
^XTMP("XPDT",7745,"RTN","ZISHGTM",7,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",8,0)="OPEN(X1,X2,X3,X4,X5,X6) ;SR. Open file"
^XTMP("XPDT",7745,"RTN","ZISHGTM",9,0)=" ;D OPEN^%ZISH([handlename],[directory],filename,[accessmode],[recsize])"
^XTMP("XPDT",7745,"RTN","ZISHGTM",10,0)=" ;X1=handle name"
^XTMP("XPDT",7745,"RTN","ZISHGTM",11,0)=" ;X2=directory, X3=filename, X4=access mode"
^XTMP("XPDT",7745,"RTN","ZISHGTM",12,0)=" ;X5=new file max record size, X6=Subtype"
^XTMP("XPDT",7745,"RTN","ZISHGTM",13,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",14,0)=" N %,%1,%2,%IO,%I2,%P,%T,X,Y,$ETRAP"
^XTMP("XPDT",7745,"RTN","ZISHGTM",15,0)=" S $ETRAP=""D OPNERR^%ZISH"""
^XTMP("XPDT",7745,"RTN","ZISHGTM",16,0)=" S U=""^"",X2=$$DEFDIR($G(X2)),X4=$$UP^XLFSTR(X4)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",17,0)=" S Y=$S(X4[""A"":""append"",X4[""R"":""readonly"",X4[""W"":""newversion"",1:""readonly"")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",18,0)=" S Y=Y_$S(X4[""B"":"":fixed:nowrap:recordsize=512"",$G(X5)&(X4[""W""):"":WIDTH=""_+X5,1:"""")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",19,0)=" S:$E(Y)="":"" Y=$E(Y,2,999) S %IO=X2_X3,%I2=""%IO:""_$S($L(Y):""(""_Y_"")"",1:"""")_"":3"""
^XTMP("XPDT",7745,"RTN","ZISHGTM",20,0)=" O @%I2 S %T=$T"
^XTMP("XPDT",7745,"RTN","ZISHGTM",21,0)=" I '%T S POP=1 Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",22,0)=" S IO=%IO,IO(1,IO)="""",IOT=""HFS"",IOM=80,IOSL=60,POP=0 D SUBTYPE^%ZIS3($G(X6))"
^XTMP("XPDT",7745,"RTN","ZISHGTM",23,0)=" I $G(X1)]"""" D SAVDEV^%ZISUTL(X1)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",24,0)=" ;U IO U $P ;Don't do a USE."
^XTMP("XPDT",7745,"RTN","ZISHGTM",25,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",26,0)="OPNERR ;error on open"
^XTMP("XPDT",7745,"RTN","ZISHGTM",27,0)=" S POP=1,$ECODE="""""
^XTMP("XPDT",7745,"RTN","ZISHGTM",28,0)=" ;U:$G(%P)]"""" %P"
^XTMP("XPDT",7745,"RTN","ZISHGTM",29,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",30,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",31,0)="CLOSE(X) ;SR. Close HFS device not opened by %ZIS."
^XTMP("XPDT",7745,"RTN","ZISHGTM",32,0)=" ;X1=Handle name, IO=device"
^XTMP("XPDT",7745,"RTN","ZISHGTM",33,0)=" I IO]"""" C IO K IO(1,IO)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",34,0)=" I $G(X)]"""" D RMDEV^%ZISUTL(X)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",35,0)=" I $D(IO(""HOME""))!$D(^XUTL(""XQ"",$J,""IOS"")) D HOME^%ZIS"
^XTMP("XPDT",7745,"RTN","ZISHGTM",36,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",37,0)="DEL(%ZX1,%ZX2) ;ef,SR. Del fl(s)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",38,0)=" ;S Y=$$DEL^%ZISH(""dir path"",$NA(array))"
^XTMP("XPDT",7745,"RTN","ZISHGTM",39,0)=" N %ZISH,%ZISHLGR,%ZX,X,%ZXDEL"
^XTMP("XPDT",7745,"RTN","ZISHGTM",40,0)=" S %ZX1=$$DEFDIR($G(%ZX1)),%ZXDEL=1,%ZISH="""""
^XTMP("XPDT",7745,"RTN","ZISHGTM",41,0)=" F  S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""""  D"
^XTMP("XPDT",7745,"RTN","ZISHGTM",42,0)=" . N $ETRAP,$ESTACK S $ETRAP=""D DELERR^%ZISH"""
^XTMP("XPDT",7745,"RTN","ZISHGTM",43,0)=" . I %ZISH[""*"" S %ZXDEL=0 Q  ; Wild card not allowed."
^XTMP("XPDT",7745,"RTN","ZISHGTM",44,0)=" . S %ZX=$ZSEARCH(%ZX1_%ZISH)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",45,0)=" . Q:%ZX']""""           ; File doesn't exist - not an error, just quit."
^XTMP("XPDT",7745,"RTN","ZISHGTM",46,0)=" . O %ZX:READONLY:0"
^XTMP("XPDT",7745,"RTN","ZISHGTM",47,0)=" . I '$T S %ZXDEL=0 Q  ; Can't open it."
^XTMP("XPDT",7745,"RTN","ZISHGTM",48,0)=" . C %ZX:DELETE"
^XTMP("XPDT",7745,"RTN","ZISHGTM",49,0)=" . I $ZSEARCH(%ZX)]"""" S %ZXDEL=0 ; Delete was not successful."
^XTMP("XPDT",7745,"RTN","ZISHGTM",50,0)=" Q %ZXDEL"
^XTMP("XPDT",7745,"RTN","ZISHGTM",51,0)="DELERR ;Trap any $ETRAP error, unwind and return."
^XTMP("XPDT",7745,"RTN","ZISHGTM",52,0)=" S $ETRAP=""D UNWIND^%ZTER"""
^XTMP("XPDT",7745,"RTN","ZISHGTM",53,0)=" S %ZXDEL=0"
^XTMP("XPDT",7745,"RTN","ZISHGTM",54,0)=" D UNWIND^%ZTER"
^XTMP("XPDT",7745,"RTN","ZISHGTM",55,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",56,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",57,0)="LIST(%ZX1,%ZX2,%ZX3) ;ef,SR. Set local array holding fl names"
^XTMP("XPDT",7745,"RTN","ZISHGTM",58,0)=" ;S Y=$$LIST^ZISH(""/dir/"",""list_root"",""return_root"")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",59,0)=" ;list_root can have XX(""A*""), XX(""test.com"")..."
^XTMP("XPDT",7745,"RTN","ZISHGTM",60,0)=" ;Both arrays passed as $NA values (closed roots)."
^XTMP("XPDT",7745,"RTN","ZISHGTM",61,0)=" N %ZISH,%ZIX,%ZIY,POP,X"
^XTMP("XPDT",7745,"RTN","ZISHGTM",62,0)=" N $ETRAP,$ESTACK S $ETRAP=""G LSTX^%ZISH"",%ZX1=$$DEFDIR($G(%ZX1))"
^XTMP("XPDT",7745,"RTN","ZISHGTM",63,0)=" ;Get fls, Build listing in %ZISHDL1 with ls"
^XTMP("XPDT",7745,"RTN","ZISHGTM",64,0)=" S %ZISH="""""
^XTMP("XPDT",7745,"RTN","ZISHGTM",65,0)=" F  S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""""  D"
^XTMP("XPDT",7745,"RTN","ZISHGTM",66,0)=" . S %ZIX=$ZPARSE(%ZX1_%ZISH) Q:%ZIX="""""
^XTMP("XPDT",7745,"RTN","ZISHGTM",67,0)=" . F  S %ZIY=$ZSEARCH(%ZIX) Q:%ZIY=""""  S %ZIY=$ZPARSE(%ZIY,""NAME"")_$ZPARSE(%ZIY,""TYPE""),@%ZX3@(%ZIY)="""""
^XTMP("XPDT",7745,"RTN","ZISHGTM",68,0)="LSTX ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",69,0)=" S $ECODE="""""
^XTMP("XPDT",7745,"RTN","ZISHGTM",70,0)=" Q ($Q(@%ZX3)]"""")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",71,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",72,0)="SPAWNERR ;TRAP ERROR OF SPAWN"
^XTMP("XPDT",7745,"RTN","ZISHGTM",73,0)=" O %ZISHDL1:READONLY:1 I $T C %ZISHDL1:DELETE"
^XTMP("XPDT",7745,"RTN","ZISHGTM",74,0)=" S $ECODE="""""
^XTMP("XPDT",7745,"RTN","ZISHGTM",75,0)=" Q 0"
^XTMP("XPDT",7745,"RTN","ZISHGTM",76,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",77,0)="MV(X1,X2,Y1,Y2) ;ef,SR. Rename a fl"
^XTMP("XPDT",7745,"RTN","ZISHGTM",78,0)=" ;S Y=$$MV^ZISH(""/dir/"",""fl"",""/dir/"",""fl"")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",79,0)=" N %Z,%C"
^XTMP("XPDT",7745,"RTN","ZISHGTM",80,0)=" S X1=$$DEFDIR($G(X1)),Y1=$$DEFDIR($G(Y1))"
^XTMP("XPDT",7745,"RTN","ZISHGTM",81,0)=" S %C=$S($ZV[""VMS"":""RENAME "",1:""mv "")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",82,0)=" ;Pbv or qit"
^XTMP("XPDT",7745,"RTN","ZISHGTM",83,0)=" I (X2="""")!(Y2="""") Q 0"
^XTMP("XPDT",7745,"RTN","ZISHGTM",84,0)=" ZSYSTEM %C_X1_X2_"" ""_Y1_Y2 ;Use system rename"
^XTMP("XPDT",7745,"RTN","ZISHGTM",85,0)=" S %Z=$ZSEARCH(Y1_Y2)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",86,0)=" Q $L(%Z)>0"
^XTMP("XPDT",7745,"RTN","ZISHGTM",87,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",88,0)="PWD() ;ef,SR. Print working directory"
^XTMP("XPDT",7745,"RTN","ZISHGTM",89,0)=" N Y"
^XTMP("XPDT",7745,"RTN","ZISHGTM",90,0)=" S Y=$$DEFDIR("""")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",91,0)=" S:Y="""" Y=$ZDIR"
^XTMP("XPDT",7745,"RTN","ZISHGTM",92,0)=" Q Y"
^XTMP("XPDT",7745,"RTN","ZISHGTM",93,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",94,0)="DEFDIR(DF) ;ef. Default Dir and frmt"
^XTMP("XPDT",7745,"RTN","ZISHGTM",95,0)=" S DF=$G(DF) Q:DF=""."" """" ;Special way to get current dir."
^XTMP("XPDT",7745,"RTN","ZISHGTM",96,0)=" S:DF="""" DF=$P($G(^XTV(8989.3,1,""DEV"")),""^"",1)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",97,0)=" ;Old code"
^XTMP("XPDT",7745,"RTN","ZISHGTM",98,0)=" ;Check syntax, VMS needs : or [ ]"
^XTMP("XPDT",7745,"RTN","ZISHGTM",99,0)=" I ^%ZOSF(""OS"")[""VMS"" D  Q DF ;***EXIT FOR VMS/GTM"
^XTMP("XPDT",7745,"RTN","ZISHGTM",100,0)=" . N P1,P2"
^XTMP("XPDT",7745,"RTN","ZISHGTM",101,0)=" . S DF=$ZPARSE(DF)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",102,0)=" . I DF["":"" S P1=$P(DF,"":"")_"":"",P2=$P(DF,"":"",2)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",103,0)=" . E  S P1="""",P2=DF"
^XTMP("XPDT",7745,"RTN","ZISHGTM",104,0)=" . I P1="""",P2[""$"" S DF=P2 Q  ;Assume a logical"
^XTMP("XPDT",7745,"RTN","ZISHGTM",105,0)=" . I $L(P2) S:P2'[""["" P2=""[""_P2 S:P2'[""]"" P2=P2_""]"""
^XTMP("XPDT",7745,"RTN","ZISHGTM",106,0)=" . S DF=P1_P2"
^XTMP("XPDT",7745,"RTN","ZISHGTM",107,0)=" . Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",108,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",109,0)=" ;Check syntax, Unix check leading & trailing ""/"""
^XTMP("XPDT",7745,"RTN","ZISHGTM",110,0)=" S DF=$ZPARSE(DF)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",111,0)=" I ""./""'[$E(DF) S DF=""/""_DF"
^XTMP("XPDT",7745,"RTN","ZISHGTM",112,0)=" I $E(DF,$L(DF))'=""/"" S DF=DF_""/"""
^XTMP("XPDT",7745,"RTN","ZISHGTM",113,0)=" Q DF"
^XTMP("XPDT",7745,"RTN","ZISHGTM",114,0)="STATUS() ;ef,SR. Return EOF status"
^XTMP("XPDT",7745,"RTN","ZISHGTM",115,0)=" U $I"
^XTMP("XPDT",7745,"RTN","ZISHGTM",116,0)=" Q $ZEOF"
^XTMP("XPDT",7745,"RTN","ZISHGTM",117,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",118,0)="EOF(X) ;Eof flag, Pass in $ZA"
^XTMP("XPDT",7745,"RTN","ZISHGTM",119,0)=" Q X"
^XTMP("XPDT",7745,"RTN","ZISHGTM",120,0)="QL(X) ;Qlfrs"
^XTMP("XPDT",7745,"RTN","ZISHGTM",121,0)=" Q:X="""""
^XTMP("XPDT",7745,"RTN","ZISHGTM",122,0)=" S:$E(X)'=""-"" X=""-""_X"
^XTMP("XPDT",7745,"RTN","ZISHGTM",123,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",124,0)="FL(X) ;Fl len"
^XTMP("XPDT",7745,"RTN","ZISHGTM",125,0)=" N ZOSHP1,ZOSHP2"
^XTMP("XPDT",7745,"RTN","ZISHGTM",126,0)=" S ZOSHP1=$P(X,"".""),ZOSHP2=$P(X,""."",2)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",127,0)=" I $L(ZOSHP1)>14 S X=4 Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",128,0)=" I $L(ZOSHP2)>8 S X=4 Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",129,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",130,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",131,0)="MAKEREF(HF,IX,OVF) ;Internal call to rebuild global ref."
^XTMP("XPDT",7745,"RTN","ZISHGTM",132,0)=" ;Return %ZISHF,%ZISHO,%ZISHI,%ZISUB"
^XTMP("XPDT",7745,"RTN","ZISHGTM",133,0)=" N I,F,MX"
^XTMP("XPDT",7745,"RTN","ZISHGTM",134,0)=" S OVF=$G(OVF,""%ZISHOF"")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",135,0)=" S %ZISHI=$$QS^DDBRAP(HF,IX),MX=$$QL^DDBRAP(HF) ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",136,0)=" S F=$NA(@HF,IX-1) ;Get first part"
^XTMP("XPDT",7745,"RTN","ZISHGTM",137,0)=" I IX=1 S %ZISHF=F_""(%ZISHI"" ;Build root, IX=1"
^XTMP("XPDT",7745,"RTN","ZISHGTM",138,0)=" I IX>1 S %ZISHF=$E(F,1,$L(F)-1)_"",%ZISHI"" ;Build root"
^XTMP("XPDT",7745,"RTN","ZISHGTM",139,0)=" S %ZISHO=%ZISHF_"",""_OVF_"",%OVFCNT)"" ;Make overflow"
^XTMP("XPDT",7745,"RTN","ZISHGTM",140,0)=" F I=IX+1:1:MX S %ZISHF=%ZISHF_"",%ZISUB(""_I_"")"",%ZISUB(I)=$$QS^DDBRAP(HF,I)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",141,0)=" S %ZISHF=%ZISHF_"")"""
^XTMP("XPDT",7745,"RTN","ZISHGTM",142,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",143,0)="FTG(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;ef,SR. Unload contents of host file into global"
^XTMP("XPDT",7745,"RTN","ZISHGTM",144,0)=" ;p1=host file directory"
^XTMP("XPDT",7745,"RTN","ZISHGTM",145,0)=" ;p2=host file name"
^XTMP("XPDT",7745,"RTN","ZISHGTM",146,0)=" ;p3= $NAME REFERENCE INCLUDING STARTING SUBSCRIPT"
^XTMP("XPDT",7745,"RTN","ZISHGTM",147,0)=" ;p4=INCREMENT SUBSCRIPT"
^XTMP("XPDT",7745,"RTN","ZISHGTM",148,0)=" ;p5=Overflow subscript, defaults to ""OVF"""
^XTMP("XPDT",7745,"RTN","ZISHGTM",149,0)=" N %ZA,%ZB,%ZC,%ZL,X,%OVFCNT,%CONT,%EXIT"
^XTMP("XPDT",7745,"RTN","ZISHGTM",150,0)=" N I,%ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHLGR,%ZISHOF,%ZISHOX,%ZISHS,%ZX,%ZISHY,POP,%ZISUB"
^XTMP("XPDT",7745,"RTN","ZISHGTM",151,0)=" S %ZX1=$$DEFDIR($G(%ZX1)),%ZISHOF=$G(%ZX5,""OVF"")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",152,0)=" D MAKEREF(%ZX3,%ZX4,""%ZISHOF"")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",153,0)=" D OPEN^%ZISH(,%ZX1,%ZX2,""R"")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",154,0)=" I POP Q 0"
^XTMP("XPDT",7745,"RTN","ZISHGTM",155,0)=" N $ETRAP S %EXIT=0,$ETRAP=""S %ZA=1,%EXIT=1,$ECODE="""""""" Q"""
^XTMP("XPDT",7745,"RTN","ZISHGTM",156,0)=" U IO F  K %XX D READNXT(.%XX) Q:$$EOF(%ZA)  D"
^XTMP("XPDT",7745,"RTN","ZISHGTM",157,0)=" . S @%ZISHF=%XX"
^XTMP("XPDT",7745,"RTN","ZISHGTM",158,0)=" . I $D(%XX)>2 F %OVFCNT=1:1 Q:'$D(%XX(%OVFCNT))  S @%ZISHO=%XX(%OVFCNT)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",159,0)=" . S %ZISHI=%ZISHI+1"
^XTMP("XPDT",7745,"RTN","ZISHGTM",160,0)=" . Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",161,0)=" D CLOSE() ;Normal exit"
^XTMP("XPDT",7745,"RTN","ZISHGTM",162,0)=" Q 1"
^XTMP("XPDT",7745,"RTN","ZISHGTM",163,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",164,0)="ERREOF D CLOSE() ;Got error Reading file"
^XTMP("XPDT",7745,"RTN","ZISHGTM",165,0)=" Q 0"
^XTMP("XPDT",7745,"RTN","ZISHGTM",166,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",167,0)="READNXT(REC) ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",168,0)=" N T,I,X,%"
^XTMP("XPDT",7745,"RTN","ZISHGTM",169,0)=" U IO R X:2 S %ZA=$ZEOF,REC=$E(X,1,255)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",170,0)=" Q:$L(X)<256"
^XTMP("XPDT",7745,"RTN","ZISHGTM",171,0)=" S %=256 F I=1:1 Q:$L(X)<%  S REC(I)=$E(X,%,%+254),%=%+255"
^XTMP("XPDT",7745,"RTN","ZISHGTM",172,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHGTM",173,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",174,0)="GTF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Load contents of global to host file."
^XTMP("XPDT",7745,"RTN","ZISHGTM",175,0)=" ;Previously name LOAD"
^XTMP("XPDT",7745,"RTN","ZISHGTM",176,0)=" ;p1=$NAME of global reference"
^XTMP("XPDT",7745,"RTN","ZISHGTM",177,0)=" ;p2=incrementing subscript"
^XTMP("XPDT",7745,"RTN","ZISHGTM",178,0)=" ;p3=host file directory"
^XTMP("XPDT",7745,"RTN","ZISHGTM",179,0)=" ;p4=host file name"
^XTMP("XPDT",7745,"RTN","ZISHGTM",180,0)=" N %ZISHY,%ZISHLGR,%ZISHOX"
^XTMP("XPDT",7745,"RTN","ZISHGTM",181,0)=" S %ZISHY=$$MGTF(%ZX1,%ZX2,$G(%ZX3),%ZX4,""W"")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",182,0)=" Q %ZISHY"
^XTMP("XPDT",7745,"RTN","ZISHGTM",183,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",184,0)="GATF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Append to host file."
^XTMP("XPDT",7745,"RTN","ZISHGTM",185,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",186,0)=" ;p1=$NAME of global reference"
^XTMP("XPDT",7745,"RTN","ZISHGTM",187,0)=" ;p2=incrementing subscript"
^XTMP("XPDT",7745,"RTN","ZISHGTM",188,0)=" ;p3=host file directory"
^XTMP("XPDT",7745,"RTN","ZISHGTM",189,0)=" ;p4=host file name"
^XTMP("XPDT",7745,"RTN","ZISHGTM",190,0)=" N %ZISHY"
^XTMP("XPDT",7745,"RTN","ZISHGTM",191,0)=" S %ZISHY=$$MGTF(%ZX1,%ZX2,$G(%ZX3),%ZX4,""A"")"
^XTMP("XPDT",7745,"RTN","ZISHGTM",192,0)=" Q %ZISHY"
^XTMP("XPDT",7745,"RTN","ZISHGTM",193,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",194,0)="MGTF(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;"
^XTMP("XPDT",7745,"RTN","ZISHGTM",195,0)=" ;p1=$NAME of global reference"
^XTMP("XPDT",7745,"RTN","ZISHGTM",196,0)=" ;p2=incrementing subscript"
^XTMP("XPDT",7745,"RTN","ZISHGTM",197,0)=" ;p3=host file directory"
^XTMP("XPDT",7745,"RTN","ZISHGTM",198,0)=" ;p4=host file name"
^XTMP("XPDT",7745,"RTN","ZISHGTM",199,0)=" N %ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHLGR,%ZISHS,%ZISHOX,IO,%ZX,Y"
^XTMP("XPDT",7745,"RTN","ZISHGTM",200,0)=" D MAKEREF(%ZX1,%ZX2)"
^XTMP("XPDT",7745,"RTN","ZISHGTM",201,0)=" D OPEN^%ZISH(,%ZX3,%ZX4,%ZX5) ;Default dir set in open"
^XTMP("XPDT",7745,"RTN","ZISHGTM",202,0)=" I POP Q 0"
^XTMP("XPDT",7745,"RTN","ZISHGTM",203,0)=" N X"
^XTMP("XPDT",7745,"RTN","ZISHGTM",204,0)=" N $ETRAP S $ETRAP=""S $EC="""""""" D CLOSE^%ZISH() Q 0"""
^XTMP("XPDT",7745,"RTN","ZISHGTM",205,0)=" F  Q:'($D(@%ZISHF)#2)  S %ZX=@%ZISHF,%ZISHI=%ZISHI+1 U IO W %ZX,!"
^XTMP("XPDT",7745,"RTN","ZISHGTM",206,0)=" D CLOSE() ;Normal Exit"
^XTMP("XPDT",7745,"RTN","ZISHGTM",207,0)=" Q 1"
^XTMP("XPDT",7745,"RTN","ZISHGTM",208,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT")="0^3^B59753873^B59942519"
^XTMP("XPDT",7745,"RTN","ZISHONT",1,0)="%ZISH ;IHS/PR,SFISC/AC - Host File Control for Cache for VMS/NT/UNIX ;12/07/09  15:44"
^XTMP("XPDT",7745,"RTN","ZISHONT",2,0)=" ;;8.0;KERNEL;**34,65,84,104,191,306,385,440,518,524**;JUL 10, 1995;Build 12"
^XTMP("XPDT",7745,"RTN","ZISHONT",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7745,"RTN","ZISHONT",4,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",5,0)="OPEN(X1,X2,X3,X4,X5,X6)    ;SR. Open Host File"
^XTMP("XPDT",7745,"RTN","ZISHONT",6,0)=" ;X1=handle name"
^XTMP("XPDT",7745,"RTN","ZISHONT",7,0)=" ;X2=directory name \dir\"
^XTMP("XPDT",7745,"RTN","ZISHONT",8,0)=" ;X3=file name"
^XTMP("XPDT",7745,"RTN","ZISHONT",9,0)=" ;X4=file access mode e.g.: W for write, R for read, A for append."
^XTMP("XPDT",7745,"RTN","ZISHONT",10,0)=" ;X5=Max record size for a new file, X6=Subtype"
^XTMP("XPDT",7745,"RTN","ZISHONT",11,0)=" N %,%1,%2,%I,%ZOS,%T,%ZA,%ZISHIO,$ET"
^XTMP("XPDT",7745,"RTN","ZISHONT",12,0)=" S $ET=""D OPNERR^%ZISH"""
^XTMP("XPDT",7745,"RTN","ZISHONT",13,0)=" S U=""^"",%I=$I,%T=0,POP=0,X2=$$DEFDIR($G(X2)),%ZOS=$$OS^%ZOSV M %ZISHIO=IO"
^XTMP("XPDT",7745,"RTN","ZISHONT",14,0)=" I %ZOS'=""VMS"" S %1=$S(X4[""A"":""AW"",X4[""W"":""WN"",1:""R"")_$S(X4[""B"":""U"",1:""S"") ;NT & Unix"
^XTMP("XPDT",7745,"RTN","ZISHONT",15,0)=" I %ZOS=""VMS"" S %1=$S(X4[""A"":""AW"",X4[""W"":""WN"",1:""RH"")_$S(X4[""B"":""U"",1:""S"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",16,0)=" ;The next line eliminates the <ENDOFFILE> error for sequential files for the current process."
^XTMP("XPDT",7745,"RTN","ZISHONT",17,0)=" S %ZA=$ZUTIL(68,40,1) ;Work like DSM"
^XTMP("XPDT",7745,"RTN","ZISHONT",18,0)=" S %=X2_X3 O %:(%1):2 I '$T S POP=1 Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",19,0)=" S IO=%,IO(1,IO)="""",IOT=""HFS"",IOM=80,IOSL=60,POP=0 D SUBTYPE^%ZIS3($G(X6,""P-OTHER""))"
^XTMP("XPDT",7745,"RTN","ZISHONT",20,0)=" I $G(X1)]"""" D SAVDEV^%ZISUTL(X1)"
^XTMP("XPDT",7745,"RTN","ZISHONT",21,0)=" ;I $L($G(%I)) U %I ;Would only needed if we had done a USE."
^XTMP("XPDT",7745,"RTN","ZISHONT",22,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",23,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",24,0)="OPNERR ;Handle open error"
^XTMP("XPDT",7745,"RTN","ZISHONT",25,0)=" S POP=1,$ECODE="""""
^XTMP("XPDT",7745,"RTN","ZISHONT",26,0)=" ;I $L($G(%I)) U %I"
^XTMP("XPDT",7745,"RTN","ZISHONT",27,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",28,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",29,0)="CLOSE(X) ;SR. Close HFS device not opened by %ZIS."
^XTMP("XPDT",7745,"RTN","ZISHONT",30,0)=" ;X=HANDLE NAME"
^XTMP("XPDT",7745,"RTN","ZISHONT",31,0)=" ;IO=Device"
^XTMP("XPDT",7745,"RTN","ZISHONT",32,0)=" N %"
^XTMP("XPDT",7745,"RTN","ZISHONT",33,0)=" I $L($G(IO)) C IO K IO(1,IO)"
^XTMP("XPDT",7745,"RTN","ZISHONT",34,0)=" I $L($G(X)) D RMDEV^%ZISUTL(X)"
^XTMP("XPDT",7745,"RTN","ZISHONT",35,0)=" ;Only reset home if one setup."
^XTMP("XPDT",7745,"RTN","ZISHONT",36,0)=" I $D(IO(""HOME""))!$D(^XUTL(""XQ"",$J,""IOS"")) D HOME^%ZIS"
^XTMP("XPDT",7745,"RTN","ZISHONT",37,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",38,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",39,0)="OPENERR ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",40,0)=" Q 0"
^XTMP("XPDT",7745,"RTN","ZISHONT",41,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",42,0)="DEL(%ZX1,%ZX2) ;ef,SR. Del files, return 1 if deleted all requested."
^XTMP("XPDT",7745,"RTN","ZISHONT",43,0)=" ;S Y=$$DEL^%ZISH(""dir path"",$NA(array))"
^XTMP("XPDT",7745,"RTN","ZISHONT",44,0)=" ; will invoke an OS command to delete file(s)"
^XTMP("XPDT",7745,"RTN","ZISHONT",45,0)=" ; UNIX: rm -f filespec[ ...]"
^XTMP("XPDT",7745,"RTN","ZISHONT",46,0)=" ; VMS: del filespec[,...]"
^XTMP("XPDT",7745,"RTN","ZISHONT",47,0)=" N %ZARG,%ZXDEL,%ZOS,%ZDELIM,%ZCOMND,%ZLIST"
^XTMP("XPDT",7745,"RTN","ZISHONT",48,0)=" S %ZARG="""",%ZXDEL=1"
^XTMP("XPDT",7745,"RTN","ZISHONT",49,0)=" S %ZX1=$$DEFDIR($G(%ZX1))"
^XTMP("XPDT",7745,"RTN","ZISHONT",50,0)=" S %ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7745,"RTN","ZISHONT",51,0)=" S %ZDELIM=$S(%ZOS=""UNIX"":"" "",1:"","")"
^XTMP("XPDT",7745,"RTN","ZISHONT",52,0)=" S %ZCOMND=$S(%ZOS=""UNIX"":""rm -f "",1:""del "")"
^XTMP("XPDT",7745,"RTN","ZISHONT",53,0)=" D"
^XTMP("XPDT",7745,"RTN","ZISHONT",54,0)=" . N $ETRAP,$ESTACK S $ETRAP=""D DELERR^%ZISH"""
^XTMP("XPDT",7745,"RTN","ZISHONT",55,0)=" . N %,%ZI,%ZISH,%ZX,%ZFOUND S %ZISH="""""
^XTMP("XPDT",7745,"RTN","ZISHONT",56,0)=" . F %ZI=1:1 S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""""  D"
^XTMP("XPDT",7745,"RTN","ZISHONT",57,0)=" . . N $ETRAP,$ESTACK S $ETRAP=""D DELERR^%ZISH"""
^XTMP("XPDT",7745,"RTN","ZISHONT",58,0)=" . . I %ZISH[""*"" S %ZXDEL=0 Q  ; Wild card not allowed."
^XTMP("XPDT",7745,"RTN","ZISHONT",59,0)=" . . S %ZX=$S(%ZISH[%ZX1:%ZISH,1:%ZX1_%ZISH) ; prepend directory path"
^XTMP("XPDT",7745,"RTN","ZISHONT",60,0)=" . . I %ZOS=""VMS"",%ZX'["";"" S %ZX=%ZX_"";*"""
^XTMP("XPDT",7745,"RTN","ZISHONT",61,0)=" . . S %ZFOUND=$ZSEARCH(%ZX)]""""  ; File exists"
^XTMP("XPDT",7745,"RTN","ZISHONT",62,0)=" . . S:%ZFOUND %ZARG=$S(%ZARG="""":%ZX,1:%ZARG_%ZDELIM_%ZX) ; join files"
^XTMP("XPDT",7745,"RTN","ZISHONT",63,0)=" . . I $L(%ZARG)>2000 S %=$ZF(-1,%ZCOMND_%ZARG),%ZARG="""" H 1 ; delete files at a time"
^XTMP("XPDT",7745,"RTN","ZISHONT",64,0)=" . ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",65,0)=" . I $L(%ZARG) S %=$ZF(-1,%ZCOMND_%ZARG) ; delete remaining files"
^XTMP("XPDT",7745,"RTN","ZISHONT",66,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",67,0)=" I %ZXDEL S %ZXDEL='$$LIST(%ZX1,%ZX2,""%ZLIST"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",68,0)=" Q %ZXDEL"
^XTMP("XPDT",7745,"RTN","ZISHONT",69,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",70,0)="DELERR ;Trap any $ETRAP error, unwind and return."
^XTMP("XPDT",7745,"RTN","ZISHONT",71,0)=" S $ETRAP=""D UNWIND^%ZTER"""
^XTMP("XPDT",7745,"RTN","ZISHONT",72,0)=" S %ZXDEL=0,%ZARG="""""
^XTMP("XPDT",7745,"RTN","ZISHONT",73,0)=" D UNWIND^%ZTER"
^XTMP("XPDT",7745,"RTN","ZISHONT",74,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",75,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",76,0)="DEL1(%ZX3) ;ef,SR. Delete one file"
^XTMP("XPDT",7745,"RTN","ZISHONT",77,0)=" N %ZI1,%ZI2"
^XTMP("XPDT",7745,"RTN","ZISHONT",78,0)=" D SPLIT(%ZX3,.%ZI1,.%ZI2) S %ZI2(%ZI2)="""""
^XTMP("XPDT",7745,"RTN","ZISHONT",79,0)=" Q $$DEL(%ZI1,$NA(%ZI2))"
^XTMP("XPDT",7745,"RTN","ZISHONT",80,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",81,0)="SPLIT(%I,%O1,%O2) ;Split to path,file"
^XTMP("XPDT",7745,"RTN","ZISHONT",82,0)=" N %ZOS,%D,D S %ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7745,"RTN","ZISHONT",83,0)=" I %ZOS[""VMS"" D  Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",84,0)=" . S D=$S(%I[""]"":""]"",1:"":"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",85,0)=" . S %O1=$P(%I,D,1)_D,%O2=$P(%I,D,2)"
^XTMP("XPDT",7745,"RTN","ZISHONT",86,0)=" . Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",87,0)=" S %D=$S(%ZOS=""UNIX"":""/"",%ZOS=""NT"":""\"",1:""""),%O1="""",%O2="""" Q:%D="""""
^XTMP("XPDT",7745,"RTN","ZISHONT",88,0)=" S D=$L(%I,%D),%O1=$P(%I,%D,1,D-1),%O2=$P(%I,%D,D)"
^XTMP("XPDT",7745,"RTN","ZISHONT",89,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",90,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",91,0)="FEXIST(%PATH,%FL) ;Check if files exsist."
^XTMP("XPDT",7745,"RTN","ZISHONT",92,0)=" ;S Y=$$DTEST(""/usr/var"",$NA(array))"
^XTMP("XPDT",7745,"RTN","ZISHONT",93,0)=" N %ZISH,%ZISHY"
^XTMP("XPDT",7745,"RTN","ZISHONT",94,0)=" S %ZISH=$$LIST(%PATH,%FL,""%ZISHY"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",95,0)=" Q %ZISH"
^XTMP("XPDT",7745,"RTN","ZISHONT",96,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",97,0)="LIST(%ZX1,%ZX2,%ZX3) ;ef,SR. Create a local array holding file names"
^XTMP("XPDT",7745,"RTN","ZISHONT",98,0)=" ;S Y=$$LIST^%ZISH(""\dir\"",$NA(array),$NA(return array)) Return 1 if found anything"
^XTMP("XPDT",7745,"RTN","ZISHONT",99,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",100,0)=" N %ZISH,%ZISHN,%ZX,%ZISHY,%ZY,%ZOS"
^XTMP("XPDT",7745,"RTN","ZISHONT",101,0)=" S %ZX1=$$DEFDIR($G(%ZX1)),%ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7745,"RTN","ZISHONT",102,0)=" ;S %ZX1=$$TRNLNM(%ZX1)"
^XTMP("XPDT",7745,"RTN","ZISHONT",103,0)=" ;Get fls to act on"
^XTMP("XPDT",7745,"RTN","ZISHONT",104,0)=" S %ZISH="""" F  S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""""  D"
^XTMP("XPDT",7745,"RTN","ZISHONT",105,0)=" . S %ZISHY=$P(%ZISH,""*"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",106,0)=" . I %ZOS=""VMS"",%ZISH'[""."" S %ZISH=%ZISH_"".*"" ;Allways upper"
^XTMP("XPDT",7745,"RTN","ZISHONT",107,0)=" . ;NT, display case, ignore for lookup"
^XTMP("XPDT",7745,"RTN","ZISHONT",108,0)=" . S %ZX=%ZX1_%ZISH"
^XTMP("XPDT",7745,"RTN","ZISHONT",109,0)=" . F %ZISHN=0:1 D  Q:(%ZX="""")"
^XTMP("XPDT",7745,"RTN","ZISHONT",110,0)=" . . S %ZX=$ZSEARCH($S(%ZISHN:"""",1:%ZX))"
^XTMP("XPDT",7745,"RTN","ZISHONT",111,0)=" . . ;Q:(%ZX="""")!($$UP^XLFSTR(%ZX)'[%ZISHY)!(%ZX?.E1.2""."")"
^XTMP("XPDT",7745,"RTN","ZISHONT",112,0)=" . . Q:(%ZX="""")!(%ZX?.E1.2""."")"
^XTMP("XPDT",7745,"RTN","ZISHONT",113,0)=" . . I %ZOS=""VMS"" S %ZX=$P(%ZX,""]"",2),@%ZX3@(%ZX)="""""
^XTMP("XPDT",7745,"RTN","ZISHONT",114,0)=" . . I %ZOS=""NT"" S %ZY=$P(%ZX,""\"",$L(%ZX,""\"")),@%ZX3@(%ZY)="""""
^XTMP("XPDT",7745,"RTN","ZISHONT",115,0)=" . . I %ZOS=""UNIX"" S %ZY=$P(%ZX,""/"",$L(%ZX,""/"")) Q:%ZX'[%ZISHY  S @%ZX3@(%ZY)="""""
^XTMP("XPDT",7745,"RTN","ZISHONT",116,0)=" . . Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",117,0)=" Q $O(@%ZX3@(""""))]"""""
^XTMP("XPDT",7745,"RTN","ZISHONT",118,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",119,0)="MV(X1,X2,Y1,Y2) ;ef,SR. Rename a fl"
^XTMP("XPDT",7745,"RTN","ZISHONT",120,0)=" ;S Y=$$MV^ZOSHDOS(""\dir\"",""fl"",""\dir\"",""fl"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",121,0)=" ;Unix use mv, NT/VMS use COPY and DEL"
^XTMP("XPDT",7745,"RTN","ZISHONT",122,0)=" N %,X,Y,%ZOS,%ZISHX S %ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7745,"RTN","ZISHONT",123,0)=" S X1=$$DEFDIR($G(X1)),Y1=$$DEFDIR($G(Y1))"
^XTMP("XPDT",7745,"RTN","ZISHONT",124,0)=" S X=$ZSEARCH(X1_X2),Y=Y1_Y2 ;move X to Y"
^XTMP("XPDT",7745,"RTN","ZISHONT",125,0)=" I X="""" Q 0"
^XTMP("XPDT",7745,"RTN","ZISHONT",126,0)=" ;Move to same place can delete file. Since at destination return 1"
^XTMP("XPDT",7745,"RTN","ZISHONT",127,0)=" I $P(X,"";"")=Y Q 1"
^XTMP("XPDT",7745,"RTN","ZISHONT",128,0)=" S %=$ZF(-1,$S(%ZOS=""UNIX"":""mv "",1:""copy "")_X_"" ""_Y) ;Use NT/VMS copy"
^XTMP("XPDT",7745,"RTN","ZISHONT",129,0)=" I %ZOS'=""UNIX"" D"
^XTMP("XPDT",7745,"RTN","ZISHONT",130,0)=" . S X2=$P(X,X1,2),%ZISHX(X2)="""""
^XTMP("XPDT",7745,"RTN","ZISHONT",131,0)=" . S Y=$$DEL^%ZISH(X1,$NA(%ZISHX))"
^XTMP("XPDT",7745,"RTN","ZISHONT",132,0)=" Q 1"
^XTMP("XPDT",7745,"RTN","ZISHONT",133,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",134,0)="PWD() ;ef,SR. Print working directory"
^XTMP("XPDT",7745,"RTN","ZISHONT",135,0)=" N Y,%ZOS"
^XTMP("XPDT",7745,"RTN","ZISHONT",136,0)=" S Y=$$DEFDIR(""""),%ZOS=$$OS^%ZOSV"
^XTMP("XPDT",7745,"RTN","ZISHONT",137,0)=" I Y="""" S Y=$ZSEARCH(""*"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",138,0)=" Q $S(%ZOS[""VMS"":Y,1:$P(Y,""."",1))"
^XTMP("XPDT",7745,"RTN","ZISHONT",139,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",140,0)="TRNLNM(PATH) ;ef. Expand logical path"
^XTMP("XPDT",7745,"RTN","ZISHONT",141,0)=" N %ZOS,P1,P2"
^XTMP("XPDT",7745,"RTN","ZISHONT",142,0)=" S %ZOS=$$OS^%ZOSV,PATH=$G(PATH)"
^XTMP("XPDT",7745,"RTN","ZISHONT",143,0)=" I %ZOS=""VMS"" D  Q PATH"
^XTMP("XPDT",7745,"RTN","ZISHONT",144,0)=" . S P1=PATH_$S(PATH["":"":""*.*"",1:"":*.*"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",145,0)=" . S P2=$ZSEARCH(P1)"
^XTMP("XPDT",7745,"RTN","ZISHONT",146,0)=" . S:$L(P2) PATH=$S(P2[""]"":$P(P2,""]"",1,$L(P2,""]"")-1)_""]"",1:$P(P2,"":"",1)_"":"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",147,0)=" . Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",148,0)=" I %ZOS=""NT"" D  Q PATH"
^XTMP("XPDT",7745,"RTN","ZISHONT",149,0)=" . S P1=PATH_$S($E(PATH,$L(PATH))'=""\"":""\*"",1:""*""),P2=$ZSEARCH(P1)"
^XTMP("XPDT",7745,"RTN","ZISHONT",150,0)=" . S:$L(P2) PATH=$P(P2,""\"",1,$L(P2,""\"")-1)_""\"""
^XTMP("XPDT",7745,"RTN","ZISHONT",151,0)=" . Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",152,0)=" ;Unix Cache $ZSEARCH uses % around an environment variable"
^XTMP("XPDT",7745,"RTN","ZISHONT",153,0)=" I %ZOS=""UNIX"" D  Q PATH"
^XTMP("XPDT",7745,"RTN","ZISHONT",154,0)=" . S P1=PATH_$S($E(PATH,$L(PATH))'=""/"":""/*"",1:""*""),P2=$ZSEARCH(P1)"
^XTMP("XPDT",7745,"RTN","ZISHONT",155,0)=" . S:$L(P2) PATH=$P(P2,""/"",1,$L(P2,""/"")-1)_""/"""
^XTMP("XPDT",7745,"RTN","ZISHONT",156,0)=" . Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",157,0)=" Q PATH"
^XTMP("XPDT",7745,"RTN","ZISHONT",158,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",159,0)="DEFDIR(DF) ;ef. Default Dir and frmt"
^XTMP("XPDT",7745,"RTN","ZISHONT",160,0)=" ;Need to handle NT, VMS and Linux"
^XTMP("XPDT",7745,"RTN","ZISHONT",161,0)=" N %ZOS,P1,P2 S %ZOS=$$OS^%ZOSV,DF=$G(DF)"
^XTMP("XPDT",7745,"RTN","ZISHONT",162,0)=" Q:DF=""."" """" ;Special way to get current dir."
^XTMP("XPDT",7745,"RTN","ZISHONT",163,0)=" S:DF="""" DF=$G(^XTV(8989.3,1,""DEV"")),DF=$P(DF,""^"",$S($$PRI^%ZOSV<2:1,1:2))"
^XTMP("XPDT",7745,"RTN","ZISHONT",164,0)=" Q:DF="""" """""
^XTMP("XPDT",7745,"RTN","ZISHONT",165,0)=" ;Check syntax, VMS needs disk:[dir] or logical:"
^XTMP("XPDT",7745,"RTN","ZISHONT",166,0)=" I %ZOS=""VMS"" D"
^XTMP("XPDT",7745,"RTN","ZISHONT",167,0)=" . I DF["":"" S P1=$P(DF,"":"")_"":"",P2=$P(DF,"":"",2)"
^XTMP("XPDT",7745,"RTN","ZISHONT",168,0)=" . E  S P1="""",P2=DF"
^XTMP("XPDT",7745,"RTN","ZISHONT",169,0)=" . I P1="""",P2[""$"" S P1=P2,P2=""""  ;Could be a logical"
^XTMP("XPDT",7745,"RTN","ZISHONT",170,0)=" . I $L(P2) S:P2'[""["" P2=""[""_P2 S:P2'[""]"" P2=P2_""]"""
^XTMP("XPDT",7745,"RTN","ZISHONT",171,0)=" . S DF=P1_P2 S:DF'["":"" DF=DF_"":"""
^XTMP("XPDT",7745,"RTN","ZISHONT",172,0)=" . Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",173,0)=" ;Check syntax, Unix needs /mnt/fl, ./fl, ~/fl %HOME%/fl"
^XTMP("XPDT",7745,"RTN","ZISHONT",174,0)=" I %ZOS=""UNIX"" D"
^XTMP("XPDT",7745,"RTN","ZISHONT",175,0)=" . S DF=$TR(DF,""\"",""/"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",176,0)=" . S:$E(DF,$L(DF))'=""/"" DF=DF_""/"""
^XTMP("XPDT",7745,"RTN","ZISHONT",177,0)=" . Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",178,0)=" ;Check syntax, NT needs c:\dir\"
^XTMP("XPDT",7745,"RTN","ZISHONT",179,0)=" I %ZOS=""NT"" D"
^XTMP("XPDT",7745,"RTN","ZISHONT",180,0)=" . N P1,P2"
^XTMP("XPDT",7745,"RTN","ZISHONT",181,0)=" . I DF["":"" S P1=$P(DF,"":"")_"":"",P2=$P(DF,"":"",2)"
^XTMP("XPDT",7745,"RTN","ZISHONT",182,0)=" . E  S P1="""",P2=DF"
^XTMP("XPDT",7745,"RTN","ZISHONT",183,0)=" . S P2=$TR(P2,""/"",""\"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",184,0)=" . I $L(P2) S:"".\""'[$E(P2,1) P2=""\""_P2 S:$E(P2,$L(P2))'=""\"" P2=P2_""\"""
^XTMP("XPDT",7745,"RTN","ZISHONT",185,0)=" . S DF=P1_P2"
^XTMP("XPDT",7745,"RTN","ZISHONT",186,0)=" . Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",187,0)=" S DF=$$TRNLNM(DF) ;Resolve logicals"
^XTMP("XPDT",7745,"RTN","ZISHONT",188,0)=" Q DF"
^XTMP("XPDT",7745,"RTN","ZISHONT",189,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",190,0)="FL(X) ;Fl len"
^XTMP("XPDT",7745,"RTN","ZISHONT",191,0)=" N ZOSHP1,ZOSHP2"
^XTMP("XPDT",7745,"RTN","ZISHONT",192,0)=" S ZOSHP1=$P(X,"".""),ZOSHP2=$P(X,""."",2)"
^XTMP("XPDT",7745,"RTN","ZISHONT",193,0)=" I $L(ZOSHP1)>8 S X=4 Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",194,0)=" I $L(ZOSHP2)>3 S X=4 Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",195,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",196,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",197,0)="STATUS() ;ef,SR. Return EOF status"
^XTMP("XPDT",7745,"RTN","ZISHONT",198,0)=" U $I"
^XTMP("XPDT",7745,"RTN","ZISHONT",199,0)=" Q $$EOF($ZEOF)"
^XTMP("XPDT",7745,"RTN","ZISHONT",200,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",201,0)="EOF(X) ;Eof flag, pass in $ZEOF"
^XTMP("XPDT",7745,"RTN","ZISHONT",202,0)=" Q (X=-1)"
^XTMP("XPDT",7745,"RTN","ZISHONT",203,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",204,0)="MAKEREF(HF,IX,OVF) ;Internal call to rebuild global ref."
^XTMP("XPDT",7745,"RTN","ZISHONT",205,0)=" ;Return %ZISHF,%ZISHO,%ZISHI,%ZISUB"
^XTMP("XPDT",7745,"RTN","ZISHONT",206,0)=" N I,F,MX"
^XTMP("XPDT",7745,"RTN","ZISHONT",207,0)=" S OVF=$G(OVF,""%ZISHOF"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",208,0)=" S %ZISHI=$QS(HF,IX),MX=$QL(HF) ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",209,0)=" S F=$NA(@HF,IX-1) ;Get first part"
^XTMP("XPDT",7745,"RTN","ZISHONT",210,0)=" I IX=1 S %ZISHF=F_""(%ZISHI"" ;Build root, IX=1"
^XTMP("XPDT",7745,"RTN","ZISHONT",211,0)=" I IX>1 S %ZISHF=$E(F,1,$L(F)-1)_"",%ZISHI"" ;Build root"
^XTMP("XPDT",7745,"RTN","ZISHONT",212,0)=" S %ZISHO=%ZISHF_"",""_OVF_"",%OVFCNT)"" ;Make overflow"
^XTMP("XPDT",7745,"RTN","ZISHONT",213,0)=" F I=IX+1:1:MX S %ZISHF=%ZISHF_"",%ZISUB(""_I_"")"",%ZISUB(I)=$QS(HF,I)"
^XTMP("XPDT",7745,"RTN","ZISHONT",214,0)=" S %ZISHF=%ZISHF_"")"""
^XTMP("XPDT",7745,"RTN","ZISHONT",215,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",216,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",217,0)="READNXT(REC) ;Read any sized record into array. %ZB has terminator"
^XTMP("XPDT",7745,"RTN","ZISHONT",218,0)=" N %,I,X,$ES,$ET S REC="""",$ET=""D READNX^%ZISH Q"""
^XTMP("XPDT",7745,"RTN","ZISHONT",219,0)=" U IO R X:5 S %ZB=$A($ZB),REC=$E(X,1,255)"
^XTMP("XPDT",7745,"RTN","ZISHONT",220,0)=" Q:$L(X)<256"
^XTMP("XPDT",7745,"RTN","ZISHONT",221,0)=" S %=256 F I=1:1 Q:$L(X)<%  S REC(I)=$E(X,%,%+254),%=%+255"
^XTMP("XPDT",7745,"RTN","ZISHONT",222,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",223,0)="READNX ;Check for EOF"
^XTMP("XPDT",7745,"RTN","ZISHONT",224,0)=" I $ZE[""ENDOFFILE"" S %ZA=-1"
^XTMP("XPDT",7745,"RTN","ZISHONT",225,0)=" S $EC="""""
^XTMP("XPDT",7745,"RTN","ZISHONT",226,0)=" Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",227,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",228,0)="FTG(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;ef,SR. Unload contents of host file into global"
^XTMP("XPDT",7745,"RTN","ZISHONT",229,0)=" ;p1=hostf file directory"
^XTMP("XPDT",7745,"RTN","ZISHONT",230,0)=" ;p2=host file name"
^XTMP("XPDT",7745,"RTN","ZISHONT",231,0)=" ;p3= $NAME REFERENCE INCLUDING STARTING SUBSCRIPT"
^XTMP("XPDT",7745,"RTN","ZISHONT",232,0)=" ;p4=INCREMENT SUBSCRIPT"
^XTMP("XPDT",7745,"RTN","ZISHONT",233,0)=" ;p5=Overflow subscript, defaults to ""OVF"""
^XTMP("XPDT",7745,"RTN","ZISHONT",234,0)=" N %ZA,%ZB,%ZC,%XX,%OVFCNT,%ZISHF,%ZISHO,POP,%ZISUB,$ES,$ET"
^XTMP("XPDT",7745,"RTN","ZISHONT",235,0)=" N I,%ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHOF,%ZISHOX,%ZISHS,%ZX,%ZISHY"
^XTMP("XPDT",7745,"RTN","ZISHONT",236,0)=" S %ZX1=$$DEFDIR($G(%ZX1)),%ZISHOF=$G(%ZX5,""OVF"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",237,0)=" D MAKEREF(%ZX3,%ZX4,""%ZISHOF"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",238,0)=" D OPEN^%ZISH(,%ZX1,%ZX2,""R"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",239,0)=" I POP Q 0"
^XTMP("XPDT",7745,"RTN","ZISHONT",240,0)=" S %ZC=1,%ZA=0,$ET=""S %ZC=0,%ZA=-1,$EC="""""""" Q"""
^XTMP("XPDT",7745,"RTN","ZISHONT",241,0)=" U IO F  K %XX D READNXT(.%XX) Q:$$EOF($ZEOF)!%ZA  D"
^XTMP("XPDT",7745,"RTN","ZISHONT",242,0)=" . S @%ZISHF=%XX"
^XTMP("XPDT",7745,"RTN","ZISHONT",243,0)=" . I $D(%XX)>2 F %OVFCNT=1:1 Q:'$D(%XX(%OVFCNT))  S @%ZISHO=%XX(%OVFCNT)"
^XTMP("XPDT",7745,"RTN","ZISHONT",244,0)=" . S %ZISHI=%ZISHI+1"
^XTMP("XPDT",7745,"RTN","ZISHONT",245,0)=" . Q"
^XTMP("XPDT",7745,"RTN","ZISHONT",246,0)=" D CLOSE() ;Normal exit"
^XTMP("XPDT",7745,"RTN","ZISHONT",247,0)=" Q %ZC"
^XTMP("XPDT",7745,"RTN","ZISHONT",248,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",249,0)="GTF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Load contents of global to host file."
^XTMP("XPDT",7745,"RTN","ZISHONT",250,0)=" ;p1=$NAME of global reference"
^XTMP("XPDT",7745,"RTN","ZISHONT",251,0)=" ;p2=incrementing subscript"
^XTMP("XPDT",7745,"RTN","ZISHONT",252,0)=" ;p3=host file directory"
^XTMP("XPDT",7745,"RTN","ZISHONT",253,0)=" ;p4=host file name"
^XTMP("XPDT",7745,"RTN","ZISHONT",254,0)=" N %ZISHY,%ZISHOX"
^XTMP("XPDT",7745,"RTN","ZISHONT",255,0)=" S %ZISHY=$$MGTF(%ZX1,%ZX2,%ZX3,%ZX4,""W"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",256,0)=" Q %ZISHY"
^XTMP("XPDT",7745,"RTN","ZISHONT",257,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",258,0)="GATF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Append to host file."
^XTMP("XPDT",7745,"RTN","ZISHONT",259,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",260,0)=" ;p1=$NAME of global reference"
^XTMP("XPDT",7745,"RTN","ZISHONT",261,0)=" ;p2=incrementing subscript"
^XTMP("XPDT",7745,"RTN","ZISHONT",262,0)=" ;p3=host file directory"
^XTMP("XPDT",7745,"RTN","ZISHONT",263,0)=" ;p4=host file name"
^XTMP("XPDT",7745,"RTN","ZISHONT",264,0)=" N %ZISHY"
^XTMP("XPDT",7745,"RTN","ZISHONT",265,0)=" S %ZISHY=$$MGTF(%ZX1,%ZX2,%ZX3,%ZX4,""A"")"
^XTMP("XPDT",7745,"RTN","ZISHONT",266,0)=" Q %ZISHY"
^XTMP("XPDT",7745,"RTN","ZISHONT",267,0)=" ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",268,0)="MGTF(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;"
^XTMP("XPDT",7745,"RTN","ZISHONT",269,0)=" ;p1=$NAME of global reference"
^XTMP("XPDT",7745,"RTN","ZISHONT",270,0)=" ;p2=incrementing subscript"
^XTMP("XPDT",7745,"RTN","ZISHONT",271,0)=" ;p3=host file directory"
^XTMP("XPDT",7745,"RTN","ZISHONT",272,0)=" ;p4=host file name"
^XTMP("XPDT",7745,"RTN","ZISHONT",273,0)=" N %ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHS,%ZISHOX,IO,%ZX,Y,%ZC"
^XTMP("XPDT",7745,"RTN","ZISHONT",274,0)=" D MAKEREF(%ZX1,%ZX2)"
^XTMP("XPDT",7745,"RTN","ZISHONT",275,0)=" D OPEN^%ZISH(,$G(%ZX3),%ZX4,%ZX5) ;Default dir set in open"
^XTMP("XPDT",7745,"RTN","ZISHONT",276,0)=" I POP Q 0"
^XTMP("XPDT",7745,"RTN","ZISHONT",277,0)=" N $ETRAP S $ETRAP=""S $EC="""""""" D CLOSE^%ZISH() Q 0"""
^XTMP("XPDT",7745,"RTN","ZISHONT",278,0)=" F  Q:'($D(@%ZISHF)#2)  S %ZX=@%ZISHF,%ZISHI=%ZISHI+1 U IO W %ZX,!"
^XTMP("XPDT",7745,"RTN","ZISHONT",279,0)=" D CLOSE()"
^XTMP("XPDT",7745,"RTN","ZISHONT",280,0)=" Q 1"
^XTMP("XPDT",7745,"RTN","ZISHONT",281,0)=" ;"
^XTMP("XPDT",7745,"VER")="8.0^22.0"
^XTMP("XPDT",7758)="1"
^XTMP("XPDT",7758,"BLD",1249,0)="XT*7.3*121^TOOLKIT^0^3091202^y"
^XTMP("XPDT",7758,"BLD",1249,1,0)="^^3^3^3090812^"
^XTMP("XPDT",7758,"BLD",1249,1,1,0)="Please see the patch description on FORUM, in the National"
^XTMP("XPDT",7758,"BLD",1249,1,2,0)=" Patch Module."
^XTMP("XPDT",7758,"BLD",1249,1,3,0)=""
^XTMP("XPDT",7758,"BLD",1249,4,0)="^9.64PA^^"
^XTMP("XPDT",7758,"BLD",1249,6)="^95"
^XTMP("XPDT",7758,"BLD",1249,6.3)="7"
^XTMP("XPDT",7758,"BLD",1249,"ABPKG")="n"
^XTMP("XPDT",7758,"BLD",1249,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7758,"BLD",1249,"KRN",.4,0)=".4"
^XTMP("XPDT",7758,"BLD",1249,"KRN",.401,0)=".401"
^XTMP("XPDT",7758,"BLD",1249,"KRN",.402,0)=".402"
^XTMP("XPDT",7758,"BLD",1249,"KRN",.403,0)=".403"
^XTMP("XPDT",7758,"BLD",1249,"KRN",.5,0)=".5"
^XTMP("XPDT",7758,"BLD",1249,"KRN",.84,0)=".84"
^XTMP("XPDT",7758,"BLD",1249,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7758,"BLD",1249,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM",0)="^9.68A^7^7"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM",1,0)="XINDEX^^0^B27883860"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM",2,0)="XINDX2^^0^B18776883"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM",3,0)="XINDX3^^0^B12135035"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM",4,0)="XINDX5^^0^B11265539"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM",5,0)="XINDX9^^0^B16811292"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM",6,0)="XINDX11^^0^B11119765"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM",7,0)="XINDX1^^0^B17282098"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM","B","XINDEX",1)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM","B","XINDX1",7)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM","B","XINDX11",6)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM","B","XINDX2",2)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM","B","XINDX3",3)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM","B","XINDX5",4)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN",9.8,"NM","B","XINDX9",5)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN",19,0)="19"
^XTMP("XPDT",7758,"BLD",1249,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7758,"BLD",1249,"KRN",101,0)="101"
^XTMP("XPDT",7758,"BLD",1249,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7758,"BLD",1249,"KRN",771,0)="771"
^XTMP("XPDT",7758,"BLD",1249,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7758,"BLD",1249,"KRN",870,0)="870"
^XTMP("XPDT",7758,"BLD",1249,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7758,"BLD",1249,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7758,"BLD",1249,"KRN",8994,0)="8994"
^XTMP("XPDT",7758,"BLD",1249,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",.4,.4)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",.401,.401)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",.402,.402)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",.403,.403)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",.5,.5)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",.84,.84)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",19,19)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",101,101)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",771,771)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",870,870)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",8994,8994)=""
^XTMP("XPDT",7758,"BLD",1249,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7758,"BLD",1249,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7758,"BLD",1249,"QUES",0)="^9.62^^"
^XTMP("XPDT",7758,"BLD",1249,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7758,"BLD",1249,"REQB",1,0)="XT*7.3*110^2"
^XTMP("XPDT",7758,"BLD",1249,"REQB","B","XT*7.3*110",1)=""
^XTMP("XPDT",7758,"MBREQ")="0"
^XTMP("XPDT",7758,"PKG",6,-1)="1^1"
^XTMP("XPDT",7758,"PKG",6,0)="TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP^"
^XTMP("XPDT",7758,"PKG",6,20,0)="^9.402P^^0"
^XTMP("XPDT",7758,"PKG",6,22,0)="^9.49I^1^1"
^XTMP("XPDT",7758,"PKG",6,22,1,0)="7.3^3040428^2970513^2"
^XTMP("XPDT",7758,"PKG",6,22,1,"PAH",1,0)="121^3091202"
^XTMP("XPDT",7758,"PKG",6,22,1,"PAH",1,1,0)="^^3^3^3091202"
^XTMP("XPDT",7758,"PKG",6,22,1,"PAH",1,1,1,0)="Please see the patch description on FORUM, in the National"
^XTMP("XPDT",7758,"PKG",6,22,1,"PAH",1,1,2,0)=" Patch Module."
^XTMP("XPDT",7758,"PKG",6,22,1,"PAH",1,1,3,0)=""
^XTMP("XPDT",7758,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7758,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7758,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7758,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7758,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7758,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7758,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7758,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7758,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7758,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7758,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7758,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7758,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7758,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7758,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7758,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7758,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7758,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7758,"QUES","XPM1","B")=""
^XTMP("XPDT",7758,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7758,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7758,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7758,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7758,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7758,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7758,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7758,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7758,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7758,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7758,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7758,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7758,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7758,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7758,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7758,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7758,"RTN")="7"
^XTMP("XPDT",7758,"RTN","XINDEX")="0^1^B27883860^B27047863"
^XTMP("XPDT",7758,"RTN","XINDEX",1,0)="XINDEX ;ISC/REL,GFT,GRK,RWF - INDEX & CROSS-REFERENCE ;08/04/08  13:19"
^XTMP("XPDT",7758,"RTN","XINDEX",2,0)=" ;;7.3;TOOLKIT;**20,27,48,61,66,68,110,121**;Apr 25, 1995;Build 7"
^XTMP("XPDT",7758,"RTN","XINDEX",3,0)=" ; Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7758,"RTN","XINDEX",4,0)=" G ^XINDX6"
^XTMP("XPDT",7758,"RTN","XINDEX",5,0)="SEP F I=1:1 S CH=$E(LIN,I) D QUOTE:CH=Q Q:"" ""[CH"
^XTMP("XPDT",7758,"RTN","XINDEX",6,0)=" S ARG=$E(LIN,1,I-1) S:CH="" "" I=I+1 S LIN=$E(LIN,I,999) Q"
^XTMP("XPDT",7758,"RTN","XINDEX",7,0)="QUOTE F I=I+1:1 S CH=$E(LIN,I) Q:CH=""""!(CH=Q)"
^XTMP("XPDT",7758,"RTN","XINDEX",8,0)=" Q:CH]""""  S ERR=6 G ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDEX",9,0)="ALIVE ;enter here from taskman"
^XTMP("XPDT",7758,"RTN","XINDEX",10,0)=" D SETUP^XINDX7 ;Get ready to process"
^XTMP("XPDT",7758,"RTN","XINDEX",11,0)="A2 S RTN=$O(^UTILITY($J,RTN)) G ^XINDX5:RTN="""""
^XTMP("XPDT",7758,"RTN","XINDEX",12,0)=" S INDLC=(RTN?1""|""1.4L.NP) D LOAD:'INDLC"
^XTMP("XPDT",7758,"RTN","XINDEX",13,0)=" I $D(ZTQUEUED),$$S^%ZTLOAD S RTN=""~"",IND(""QUIT"")=1,ZTSTOP=1 G A2"
^XTMP("XPDT",7758,"RTN","XINDEX",14,0)=" I 'INDDS,INDLC W !!?10,""Data Dictionaries"",! S INDDS=1"
^XTMP("XPDT",7758,"RTN","XINDEX",15,0)=" D BEG"
^XTMP("XPDT",7758,"RTN","XINDEX",16,0)=" G A2"
^XTMP("XPDT",7758,"RTN","XINDEX",17,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDEX",18,0)="LOAD S X=RTN,XCNP=0,DIF=""^UTILITY(""_$J_"",1,RTN,0,"" X ^%ZOSF(""TEST"") Q:'$T  X ^%ZOSF(""LOAD"") S ^UTILITY($J,1,RTN,0,0)=XCNP-1"
^XTMP("XPDT",7758,"RTN","XINDEX",19,0)=" I $D(^UTILITY($J,1,RTN,0,0)) S ^UTILITY($J,1,RTN,""RSUM"")=""B""_$$SUMB^XPDRSUM($NA(^UTILITY($J,1,RTN,0)))"
^XTMP("XPDT",7758,"RTN","XINDEX",20,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDEX",21,0)="BEG ;"
^XTMP("XPDT",7758,"RTN","XINDEX",22,0)=" S %=INDLC*5 W:$X+10+%>IOM ! W RTN,$J("""",10+%-$L(RTN))"
^XTMP("XPDT",7758,"RTN","XINDEX",23,0)=" S (IND(""DO""),IND(""SZT""),IND(""SZC""),LABO)=0,LC=$G(^UTILITY($J,1,RTN,0,0))"
^XTMP("XPDT",7758,"RTN","XINDEX",24,0)=" I LC="""" W !,"">>>Routine '"",RTN,""' not found <<<"",! Q"
^XTMP("XPDT",7758,"RTN","XINDEX",25,0)=" S TXT="""",LAB=$P(^UTILITY($J,1,RTN,0,1,0),"" "") I RTN'=$P(LAB,""("") D E^XINDX1(17)"
^XTMP("XPDT",7758,"RTN","XINDEX",26,0)=" I 'INDLC,LAB[""("" D E^XINDX1(55) S LAB=$P(LAB,""("")"
^XTMP("XPDT",7758,"RTN","XINDEX",27,0)=" I 'INDLC,LC>2 S LIN=$G(^UTILITY($J,1,RTN,0,2,0)),TXT=2 D"
^XTMP("XPDT",7758,"RTN","XINDEX",28,0)=" . N LABO S LABO=1"
^XTMP("XPDT",7758,"RTN","XINDEX",29,0)=" . I $P(LIN,"";"",3,99)'?1.2N1"".""1.2N.1(1""T"",1""V"").2N1"";"".E D E^XINDX1(44) ;patch 121"
^XTMP("XPDT",7758,"RTN","XINDEX",30,0)=" . I $L(INP(11)) X INP(11) ;Version number check"
^XTMP("XPDT",7758,"RTN","XINDEX",31,0)=" . I $L(INP(12)) X INP(12) ;Patch number check"
^XTMP("XPDT",7758,"RTN","XINDEX",32,0)="B5 F TXT=1:1:LC S LIN=^UTILITY($J,1,RTN,0,TXT,0),LN=$L(LIN),IND(""SZT"")=IND(""SZT"")+LN+2 D LN,ST ;Process Line"
^XTMP("XPDT",7758,"RTN","XINDEX",33,0)=" S LAB="""",LABO=0,TXT=0,^UTILITY($J,1,RTN,0)=IND(""SZT"")_""^""_LC_""^""_IND(""SZC"")"
^XTMP("XPDT",7758,"RTN","XINDEX",34,0)=" I IND(""SZT"")>INP(""MAX""),'INDLC S ERR=35,ERR(1)=IND(""SZT"") D ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDEX",35,0)=" I IND(""SZT"")-IND(""SZC"")>INP(""CMAX""),'INDLC S ERR=58,ERR(1)=IND(""SZT"")-IND(""SZC"") D ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDEX",36,0)=" D POSTRTN"
^XTMP("XPDT",7758,"RTN","XINDEX",37,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDEX",38,0)=" ;Proccess one line, LN = Length, LIN = Line."
^XTMP("XPDT",7758,"RTN","XINDEX",39,0)="LN K V S (ARG,GRB,IND(""COM""))="""",X=$P(LIN,"" "") I '$L(X) S LABO=LABO+1 G CD"
^XTMP("XPDT",7758,"RTN","XINDEX",40,0)=" S (IND(""COM""),LAB)=$P(X,""(""),ARG=$P($P(X,""("",2),"")""),LABO=0,IND(""PP"")=X?1.8E1""("".E1"")"""
^XTMP("XPDT",7758,"RTN","XINDEX",41,0)=" D:$L(ARG) NE^XINDX3 ;Process formal parameters as New list."
^XTMP("XPDT",7758,"RTN","XINDEX",42,0)=" I 'INDLC,'$$VT^XINDX2(LAB) D E^XINDX1($S(LAB=$$CASE^XINDX52(LAB):37,1:55)) ;Check for bad labels"
^XTMP("XPDT",7758,"RTN","XINDEX",43,0)=" I $D(^UTILITY($J,1,RTN,""T"",LAB)) D E^XINDX1(15) G CD ;DUP label"
^XTMP("XPDT",7758,"RTN","XINDEX",44,0)=" S ^UTILITY($J,1,RTN,""T"",LAB)="""""
^XTMP("XPDT",7758,"RTN","XINDEX",45,0)="CD I LN>245 D:'(LN=246&($E(RTN,1,3)=""|dd"")) E^XINDX1(19) ;patch 119"
^XTMP("XPDT",7758,"RTN","XINDEX",46,0)=" D:LIN'?1.ANP E^XINDX1(18)"
^XTMP("XPDT",7758,"RTN","XINDEX",47,0)=" S LIN=$P(LIN,"" "",2,999),IND(""LCC"")=1"
^XTMP("XPDT",7758,"RTN","XINDEX",48,0)=" I LIN="""" D E^XINDX1(42) Q  ;Blank line ;p110"
^XTMP("XPDT",7758,"RTN","XINDEX",49,0)=" S I=0 ;Watch the scope of I."
^XTMP("XPDT",7758,"RTN","XINDEX",50,0)=" I "" .""[$E(LIN) D  S X=$L($E(LIN,1,I),""."")-1,LIN=$E(LIN,I,999)"
^XTMP("XPDT",7758,"RTN","XINDEX",51,0)=" . F I=1:1:245 Q:"". ""'[$E(LIN,I)"
^XTMP("XPDT",7758,"RTN","XINDEX",52,0)=" . Q"
^XTMP("XPDT",7758,"RTN","XINDEX",53,0)=" D:'I&$G(IND(""DO1"")) E^XINDX1(51) S IND(""DO1"")=0 S:'I IND(""DO"")=0 I I D:X>IND(""DO"") E^XINDX1(51) S IND(""DO"")=X"
^XTMP("XPDT",7758,"RTN","XINDEX",54,0)=" ;Count Comment lines, skip ;; lines"
^XTMP("XPDT",7758,"RTN","XINDEX",55,0)=" I $E(LIN)="";"",$E(LIN,2)'="";"" S IND(""SZC"")=IND(""SZC"")+$L(LIN) ;p110"
^XTMP("XPDT",7758,"RTN","XINDEX",56,0)=" ;Process commands on line."
^XTMP("XPDT",7758,"RTN","XINDEX",57,0)="EE I LIN="""" D ^XINDX2 Q"
^XTMP("XPDT",7758,"RTN","XINDEX",58,0)=" S COM=$E(LIN),GK="""",ARG="""""
^XTMP("XPDT",7758,"RTN","XINDEX",59,0)=" I COM="";"" S LIN="""" G EE ;p110"
^XTMP("XPDT",7758,"RTN","XINDEX",60,0)=" I COM="" "" S ERR=$S(LIN?1."" "":13,1:0),LIN=$S(ERR:"""",1:$E(LIN,2,999)) D:ERR ^XINDX1 G EE"
^XTMP("XPDT",7758,"RTN","XINDEX",61,0)=" D SEP"
^XTMP("XPDT",7758,"RTN","XINDEX",62,0)=" S CM=$P(ARG,"":"",1),POST=$P(ARG,"":"",2,999),IND(""COM"")=IND(""COM"")_$C(9)_COM,ERR=48 D:ARG["":""&(POST']"""") ^XINDX1 S:POST]"""" GRB=GRB_$C(9)_POST,IND(""COM"")=IND(""COM"")_"":"""
^XTMP("XPDT",7758,"RTN","XINDEX",63,0)=" ;SAC now allows lowercase commands"
^XTMP("XPDT",7758,"RTN","XINDEX",64,0)=" I CM?.E1L.E S CM=$$CASE^XINDX52(CM),COM=$E(CM) ;I IND(""LCC"") S IND(""LCC"")=0 D E^XINDX1(47)"
^XTMP("XPDT",7758,"RTN","XINDEX",65,0)=" I CM="""" D E^XINDX1(21) G EE ;Missing command"
^XTMP("XPDT",7758,"RTN","XINDEX",66,0)=" S CX=$G(IND(""CMD"",CM)) I CX="""" D  G:CX="""" EE"
^XTMP("XPDT",7758,"RTN","XINDEX",67,0)=" . I $E(CM)=""Z"" S CX=""^Z"" Q  ;Proccess Z commands"
^XTMP("XPDT",7758,"RTN","XINDEX",68,0)=" . D E^XINDX1(1) S LIN="""" Q"
^XTMP("XPDT",7758,"RTN","XINDEX",69,0)=" S CX=$P(CX,""^"",2,9)"
^XTMP("XPDT",7758,"RTN","XINDEX",70,0)=" D SEP I '$L(LIN),CH="" "" D E^XINDX1(13) ;trailing space"
^XTMP("XPDT",7758,"RTN","XINDEX",71,0)=" I ARG="""",""CGJMORSUWX""[COM S ERR=49 G ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDEX",72,0)=" I CX>0 D E^XINDX1(CX) S CX="""""
^XTMP("XPDT",7758,"RTN","XINDEX",73,0)=" D:$L(CX) @CX S:ARG'="""" GRB=GRB_$C(9)_ARG G EE"
^XTMP("XPDT",7758,"RTN","XINDEX",74,0)="B S ERR=25 G ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDEX",75,0)="C S ERR=29 G ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDEX",76,0)="D G DG1^XINDX4"
^XTMP("XPDT",7758,"RTN","XINDEX",77,0)="E Q:ARG=""""  S ERR=7 G ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDEX",78,0)="F G:ARG]"""" FR^XINDX4 Q"
^XTMP("XPDT",7758,"RTN","XINDEX",79,0)="G G DG^XINDX4"
^XTMP("XPDT",7758,"RTN","XINDEX",80,0)="H Q:ARG'=""""  S ERR=32 G ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDEX",81,0)="J S ERR=36,ARG="""" G ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDEX",82,0)="K S ERR=$S(ARG?1""("".E:22,ARG?."" "":23,1:0) D:ERR ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDEX",83,0)=" G KL^XINDX3"
^XTMP("XPDT",7758,"RTN","XINDEX",84,0)="L G LO^XINDX4"
^XTMP("XPDT",7758,"RTN","XINDEX",85,0)="M G S^XINDX3"
^XTMP("XPDT",7758,"RTN","XINDEX",86,0)="N G NE^XINDX3"
^XTMP("XPDT",7758,"RTN","XINDEX",87,0)="O S ERR=34 D ^XINDX1,O^XINDX3 Q"
^XTMP("XPDT",7758,"RTN","XINDEX",88,0)="Q Q:ARG=""""  G Q^XINDX4"
^XTMP("XPDT",7758,"RTN","XINDEX",89,0)="R S RDTIME=0 G RD^XINDX3"
^XTMP("XPDT",7758,"RTN","XINDEX",90,0)="S G S^XINDX3"
^XTMP("XPDT",7758,"RTN","XINDEX",91,0)="TR Q  ;What to process. p110"
^XTMP("XPDT",7758,"RTN","XINDEX",92,0)="U S ARG=$P(ARG,"":"") Q"
^XTMP("XPDT",7758,"RTN","XINDEX",93,0)="V S ARG="""",ERR=20 G ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDEX",94,0)="W G WR^XINDX4"
^XTMP("XPDT",7758,"RTN","XINDEX",95,0)="X G XE^XINDX4"
^XTMP("XPDT",7758,"RTN","XINDEX",96,0)="Z S ERR=2 D ^XINDX1 G ZC^XINDX4"
^XTMP("XPDT",7758,"RTN","XINDEX",97,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDEX",98,0)=" ;Save off items from line."
^XTMP("XPDT",7758,"RTN","XINDEX",99,0)="ST S R=LAB_$S(LABO:""+""_LABO,1:"""")"
^XTMP("XPDT",7758,"RTN","XINDEX",100,0)=" ;Local variable, Global, Marked Items, Naked global, Internal ref, eXternal ref., Tag ref."
^XTMP("XPDT",7758,"RTN","XINDEX",101,0)=" S LOC="""" F  S LOC=$O(V(LOC)),S="""" Q:LOC=""""  F  S S=$O(V(LOC,S)) Q:S=""""  D SET"
^XTMP("XPDT",7758,"RTN","XINDEX",102,0)=" S ^UTILITY($J,1,RTN,""COM"",TXT)=IND(""COM"")"
^XTMP("XPDT",7758,"RTN","XINDEX",103,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDEX",104,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDEX",105,0)="SET I V(LOC,S)]"""" F %=""!"",""~"" I V(LOC,S)[%,$G(^UTILITY($J,1,RTN,LOC,S))'[% S ^(S)=$G(^(S))_%"
^XTMP("XPDT",7758,"RTN","XINDEX",106,0)=" S %=0"
^XTMP("XPDT",7758,"RTN","XINDEX",107,0)="SE2 S ARG=$G(^UTILITY($J,1,RTN,LOC,S,%)) I $L(ARG)>230 S %=%+1 G SE2"
^XTMP("XPDT",7758,"RTN","XINDEX",108,0)=" S ^UTILITY($J,1,RTN,LOC,S,%)=ARG_R_V(LOC,S)_"","""
^XTMP("XPDT",7758,"RTN","XINDEX",109,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDEX",110,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDEX",111,0)="POSTRTN ;Do more overall checking"
^XTMP("XPDT",7758,"RTN","XINDEX",112,0)=" N V,E,T,T1,T2"
^XTMP("XPDT",7758,"RTN","XINDEX",113,0)=" S T="""" ;Check for missing Labels"
^XTMP("XPDT",7758,"RTN","XINDEX",114,0)=" F  S T=$O(^UTILITY($J,1,RTN,""I"",T)),T2=T Q:T=""""  S T1=$G(^(T,0)) D"
^XTMP("XPDT",7758,"RTN","XINDEX",115,0)=" . Q:$E(T2,1,2)=""@("""
^XTMP("XPDT",7758,"RTN","XINDEX",116,0)=" . S:$E(T2,1,2)=""$$"" T2=$E(T2,3,99)"
^XTMP("XPDT",7758,"RTN","XINDEX",117,0)=" . I T2]"""",'$D(^UTILITY($J,1,RTN,""T"",$P(T2,""+"",1))) D"
^XTMP("XPDT",7758,"RTN","XINDEX",118,0)=" . . F I=1:1:$L(T1,"","")-1 S LAB=$P(T1,"","",I),LABO=+$P(LAB,""+"",2),LAB=$P(LAB,""+""),E=14,E(1)=T D E^XINDX1(.E)"
^XTMP("XPDT",7758,"RTN","XINDEX",119,0)=" . . Q"
^XTMP("XPDT",7758,"RTN","XINDEX",120,0)=" . Q"
^XTMP("XPDT",7758,"RTN","XINDEX",121,0)=" S LAB="""",LABO=0 ;Check for valid label names"
^XTMP("XPDT",7758,"RTN","XINDEX",122,0)=" I 'INDLC F  S LAB=$O(^UTILITY($J,1,RTN,""T"",LAB)) Q:LAB=""""  D"
^XTMP("XPDT",7758,"RTN","XINDEX",123,0)=" . I '$$VA^XINDX2(LAB) D E^XINDX1(55) Q"
^XTMP("XPDT",7758,"RTN","XINDEX",124,0)=" . D:'$$VT^XINDX2(LAB) E^XINDX1(37)"
^XTMP("XPDT",7758,"RTN","XINDEX",125,0)=" . Q"
^XTMP("XPDT",7758,"RTN","XINDEX",126,0)=" S LAB="""",LABO=0 ;Check for valid variable names."
^XTMP("XPDT",7758,"RTN","XINDEX",127,0)=" F  S LAB=$O(^UTILITY($J,1,RTN,""L"",LAB)) Q:LAB=""""  D"
^XTMP("XPDT",7758,"RTN","XINDEX",128,0)=" . D VLNF^XINDX3($P(LAB,""(""))"
^XTMP("XPDT",7758,"RTN","XINDEX",129,0)=" . Q"
^XTMP("XPDT",7758,"RTN","XINDEX",130,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDEX",131,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDEX",132,0)="QUICK ;Quick, Just get a routine an print the results"
^XTMP("XPDT",7758,"RTN","XINDEX",133,0)=" D QUICK^XINDX6()"
^XTMP("XPDT",7758,"RTN","XINDEX",134,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX1")="0^7^B17282098^B17410203"
^XTMP("XPDT",7758,"RTN","XINDX1",1,0)="XINDX1 ;ISC/REL,GRK,RWF - ERROR ROUTINE ;08/05/08  13:59"
^XTMP("XPDT",7758,"RTN","XINDX1",2,0)=" ;;7.3;TOOLKIT;**20,61,66,68,110,121**;Apr 25, 1995;Build 7"
^XTMP("XPDT",7758,"RTN","XINDX1",3,0)=" G A"
^XTMP("XPDT",7758,"RTN","XINDX1",4,0)="E(ERR) ;"
^XTMP("XPDT",7758,"RTN","XINDX1",5,0)="A N %,%1 ;TXT is the line of the error."
^XTMP("XPDT",7758,"RTN","XINDX1",6,0)=" S ERTX=LAB_$S(LABO:""+""_LABO,1:"""")_$C(9),%1=$T(ERROR+ERR),ERTX=ERTX_$S(ERR:$P(%1,"";"",4,9),1:ERR) ;p110"
^XTMP("XPDT",7758,"RTN","XINDX1",7,0)=" I ERTX[""|"" F %=1:1 S ERTX=$P(ERTX,""|"")_$S($D(ERR(%)):ERR(%),1:""??"")_$P(ERTX,""|"",%+1,99) Q:ERTX'[""|"""
^XTMP("XPDT",7758,"RTN","XINDX1",8,0)="B I $P(%1,"";"",3)]"""" D  Q:%1]""""  ;Don't flag kernel doing kernel."
^XTMP("XPDT",7758,"RTN","XINDX1",9,0)=" . S %1=$P(%1,"";"",3)"
^XTMP("XPDT",7758,"RTN","XINDX1",10,0)=" . F  Q:RTN[$P(%1,"","")  S %1=$P(%1,"","",2,99) ;quit if RTN[%1 or null."
^XTMP("XPDT",7758,"RTN","XINDX1",11,0)=" . Q"
^XTMP("XPDT",7758,"RTN","XINDX1",12,0)=" I ERR=17,$E(RTN)'=""%"",$E(LAB)=""%"" Q  ;Don't flag %RTN w/o %."
^XTMP("XPDT",7758,"RTN","XINDX1",13,0)=" ;Global is Error Line,tab,error tag,tab,error text"
^XTMP("XPDT",7758,"RTN","XINDX1",14,0)=" S %=$G(^UTILITY($J,1,RTN,""E"",0))+1,^(0)=%,^(%)=TXT_$C(9)_ERTX"
^XTMP("XPDT",7758,"RTN","XINDX1",15,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX1",16,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX1",17,0)=" ;F = Fatal, S = Standard, W = Warning, I = Info"
^XTMP("XPDT",7758,"RTN","XINDX1",18,0)="ERROR ;"
^XTMP("XPDT",7758,"RTN","XINDX1",19,0)="1 ;;;F - UNDEFINED COMMAND (rest of line not checked)."
^XTMP("XPDT",7758,"RTN","XINDX1",20,0)="2 ;;;F - Non-standard (Undefined) 'Z' command."
^XTMP("XPDT",7758,"RTN","XINDX1",21,0)="3 ;;XTRMON;F - Undefined Function."
^XTMP("XPDT",7758,"RTN","XINDX1",22,0)="4 ;;;F - Undefined Special Variable."
^XTMP("XPDT",7758,"RTN","XINDX1",23,0)="5 ;;;F - Unmatched Parenthesis."
^XTMP("XPDT",7758,"RTN","XINDX1",24,0)="6 ;;;F - Unmatched Quotation Marks."
^XTMP("XPDT",7758,"RTN","XINDX1",25,0)="7 ;;;F - ELSE Command followed by only one space."
^XTMP("XPDT",7758,"RTN","XINDX1",26,0)="8 ;;;F - FOR Command did not contain '='."
^XTMP("XPDT",7758,"RTN","XINDX1",27,0)="9 ;;;I - QUIT Command followed by only one space."
^XTMP("XPDT",7758,"RTN","XINDX1",28,0)="10 ;;;F - Unrecognized argument in SET command."
^XTMP("XPDT",7758,"RTN","XINDX1",29,0)="11 ;;;W - Invalid local variable name."
^XTMP("XPDT",7758,"RTN","XINDX1",30,0)="12 ;;;W - Invalid global variable name."
^XTMP("XPDT",7758,"RTN","XINDX1",31,0)="13 ;;;W - Blank(s) at end of line."
^XTMP("XPDT",7758,"RTN","XINDX1",32,0)="14 ;;;F - Call to missing label '|' in this routine."
^XTMP("XPDT",7758,"RTN","XINDX1",33,0)="15 ;;;W - Duplicate label. (M57)"
^XTMP("XPDT",7758,"RTN","XINDX1",34,0)="16 ;;;F - Error in pattern code."
^XTMP("XPDT",7758,"RTN","XINDX1",35,0)="17 ;;;W - First line label NOT routine name."
^XTMP("XPDT",7758,"RTN","XINDX1",36,0)="18 ;;;W - Line contains a CONTROL (non-graphic) character."
^XTMP("XPDT",7758,"RTN","XINDX1",37,0)="19 ;;;S - Line is longer than 245 bytes."
^XTMP("XPDT",7758,"RTN","XINDX1",38,0)="20 ;;;S - View command used."
^XTMP("XPDT",7758,"RTN","XINDX1",39,0)="21 ;;;F - General Syntax Error."
^XTMP("XPDT",7758,"RTN","XINDX1",40,0)="22 ;;;S - Exclusive Kill."
^XTMP("XPDT",7758,"RTN","XINDX1",41,0)="23 ;;;S - Unargumented Kill."
^XTMP("XPDT",7758,"RTN","XINDX1",42,0)="24 ;;;S - Kill of an unsubscripted global."
^XTMP("XPDT",7758,"RTN","XINDX1",43,0)="25 ;;;S - Break command used."
^XTMP("XPDT",7758,"RTN","XINDX1",44,0)="26 ;;;S - Exclusive or Unargumented NEW command."
^XTMP("XPDT",7758,"RTN","XINDX1",45,0)="27 ;;;S - $View function used."
^XTMP("XPDT",7758,"RTN","XINDX1",46,0)="28 ;;ZOSV,ZIS,ZT;S - Non-standard $Z special variable used."
^XTMP("XPDT",7758,"RTN","XINDX1",47,0)="29 ;;ZIS,ZTM;S - 'Close' command should be invoked through 'D ^%ZISC'."
^XTMP("XPDT",7758,"RTN","XINDX1",48,0)="30 ;;;S - LABEL+OFFSET syntax."
^XTMP("XPDT",7758,"RTN","XINDX1",49,0)="31 ;;ZOSV,ZIS,ZT;S - Non-standard $Z function used."
^XTMP("XPDT",7758,"RTN","XINDX1",50,0)="32 ;;;S - 'HALT' command should be invoked through 'G ^XUSCLEAN'."
^XTMP("XPDT",7758,"RTN","XINDX1",51,0)="33 ;;;S - Read command doesn't have a timeout."
^XTMP("XPDT",7758,"RTN","XINDX1",52,0)="34 ;;ZIS;S - 'OPEN' command should be invoked through ^%ZIS."
^XTMP("XPDT",7758,"RTN","XINDX1",53,0)="35 ;;;S - Routine exceeds SACC maximum size of 20000 (|)."
^XTMP("XPDT",7758,"RTN","XINDX1",54,0)="36 ;;ZTM;S - Should use 'TASKMAN' instead of 'JOB' command."
^XTMP("XPDT",7758,"RTN","XINDX1",55,0)="37 ;;;F - Label is not valid."
^XTMP("XPDT",7758,"RTN","XINDX1",56,0)="38 ;;;F - Call to this |"
^XTMP("XPDT",7758,"RTN","XINDX1",57,0)="39 ;;ZIS,XUS,XUP;S - Kill of a protected variable (|)."
^XTMP("XPDT",7758,"RTN","XINDX1",58,0)="40 ;;;S - Space where a command should be."
^XTMP("XPDT",7758,"RTN","XINDX1",59,0)="41 ;;;I - Star or pound READ used."
^XTMP("XPDT",7758,"RTN","XINDX1",60,0)="42 ;;;W - Null line (no commands or comment)."
^XTMP("XPDT",7758,"RTN","XINDX1",61,0)="43 ;;;F - Invalid or wrong number of arguments to a function."
^XTMP("XPDT",7758,"RTN","XINDX1",62,0)="44 ;;;S - 2nd line of routine violates the SAC."
^XTMP("XPDT",7758,"RTN","XINDX1",63,0)="45 ;;ZT,ZIS,XUTM,XTER;S - Set to a '%' global."
^XTMP("XPDT",7758,"RTN","XINDX1",64,0)="46 ;;;F - Quoted string not followed by a separator."
^XTMP("XPDT",7758,"RTN","XINDX1",65,0)="47 ;;;S - Lowercase command(s) used in line."
^XTMP("XPDT",7758,"RTN","XINDX1",66,0)="48 ;;;F - Missing argument to a command post-conditional."
^XTMP("XPDT",7758,"RTN","XINDX1",67,0)="49 ;;;F - Command missing an argument."
^XTMP("XPDT",7758,"RTN","XINDX1",68,0)="50 ;;ZTM;S - Extended reference."
^XTMP("XPDT",7758,"RTN","XINDX1",69,0)="51 ;;;F - Block structure mismatch."
^XTMP("XPDT",7758,"RTN","XINDX1",70,0)="52 ;;;F - Reference to routine '^|'. That isn't in this UCI."
^XTMP("XPDT",7758,"RTN","XINDX1",71,0)="53 ;;;F - Bad Number."
^XTMP("XPDT",7758,"RTN","XINDX1",72,0)="54 ;;XG;S - Access to SSVN's restricted to Kernel."
^XTMP("XPDT",7758,"RTN","XINDX1",73,0)="55 ;;;S - Violates VA programming standards."
^XTMP("XPDT",7758,"RTN","XINDX1",74,0)="56 ;;;S - Patch number '|' missing from second line."
^XTMP("XPDT",7758,"RTN","XINDX1",75,0)="57 ;;;S - Lower/Mixed case Variable name used."
^XTMP("XPDT",7758,"RTN","XINDX1",76,0)="58 ;;;S - Routine code exceeds SACC maximum size of 15000 (|)."
^XTMP("XPDT",7758,"RTN","XINDX1",77,0)="59 ;;;F - Bad WRITE syntax."
^XTMP("XPDT",7758,"RTN","XINDX1",78,0)="60 ;;;S - Lock missing Timeout."
^XTMP("XPDT",7758,"RTN","XINDX1",79,0)="61 ;;;S - Non-Incremental Lock."
^XTMP("XPDT",7758,"RTN","XINDX11")="0^6^B11119765^B10659627"
^XTMP("XPDT",7758,"RTN","XINDX11",1,0)="XINDX11 ;ISC/GRK - Create phantom routines for functions, options, etc. ;07/08/98  15:06"
^XTMP("XPDT",7758,"RTN","XINDX11",2,0)=" ;;7.3;TOOLKIT;**20,27,121**;Apr 25, 1995;Build 7"
^XTMP("XPDT",7758,"RTN","XINDX11",3,0)=" ; Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7758,"RTN","XINDX11",4,0)=" W !,""The option and function files are being processed."",!"
^XTMP("XPDT",7758,"RTN","XINDX11",5,0)=" I INP(10)=9.4 G PKG"
^XTMP("XPDT",7758,"RTN","XINDX11",6,0)=" N KRN,TYPE ;Build file"
^XTMP("XPDT",7758,"RTN","XINDX11",7,0)=" S INDFN=""^DD(""""FUNC"""","",INDRN=""|func"",INDD=""Function"",INDSB=""FUNC"",INDXN=""Build file"" D HDR"
^XTMP("XPDT",7758,"RTN","XINDX11",8,0)=" F KRN=0:0 S KRN=$O(^XPD(9.6,INDDA,""KRN"",.5,""NM"",KRN)) Q:KRN'>0  S INDXN=$P(^(KRN,0),U) D ENTRY"
^XTMP("XPDT",7758,"RTN","XINDX11",9,0)=" I INDLC=2 K ^UTILITY($J,INDRN),^UTILITY($J,1,INDRN) ;patch 121"
^XTMP("XPDT",7758,"RTN","XINDX11",10,0)=" S INDFN=""^DIC(19,"",INDRN=""|opt"",INDD=""Option"",INDSB=""OPT"",INDXN=""Build file"" D HDR"
^XTMP("XPDT",7758,"RTN","XINDX11",11,0)=" F KRN=0:0 S KRN=$O(^XPD(9.6,INDDA,""KRN"",19,""NM"",KRN)) Q:KRN'>0  S INDXN=$P(^(KRN,0),U) D ENTRY"
^XTMP("XPDT",7758,"RTN","XINDX11",12,0)=" I INDLC=2 K ^UTILITY($J,INDRN),^UTILITY($J,1,INDRN)"
^XTMP("XPDT",7758,"RTN","XINDX11",13,0)=" ;Routines"
^XTMP("XPDT",7758,"RTN","XINDX11",14,0)=" ;F KRN=0:0 S KRN=$O(^XPD(9.6,INDDA,""KRN"",9.8,""NM"",KRN)) Q:KRN'>0  S X=^(KRN,0) I '$P(X,U,3) S ^UTILITY($J,$P(X,U))="""""
^XTMP("XPDT",7758,"RTN","XINDX11",15,0)=" I $T(RTN^XTRUTL1)]"""" D RTN^XTRUTL1(INDDA)"
^XTMP("XPDT",7758,"RTN","XINDX11",16,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX11",17,0)="PKG D NAMSP ;Package file"
^XTMP("XPDT",7758,"RTN","XINDX11",18,0)=" S INDFN=""^DD(""""FUNC"""","",INDRN=""|func"",INDD=""Function"",INDSB=""FUNC"" D NAME"
^XTMP("XPDT",7758,"RTN","XINDX11",19,0)=" S INDFN=""^DIC(19,"",INDRN=""|opt"",INDD=""Option"",INDSB=""OPT"" D NAME"
^XTMP("XPDT",7758,"RTN","XINDX11",20,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX11",21,0)="NAME Q:'$D(@(INDFN_""""""B"""")""))"
^XTMP("XPDT",7758,"RTN","XINDX11",22,0)=" D HDR"
^XTMP("XPDT",7758,"RTN","XINDX11",23,0)=" S INDL=$E(INDXN,1,$L(INDXN)-1)_$C($A(INDXN,$L(INDXN))-1)_""z"""
^XTMP("XPDT",7758,"RTN","XINDX11",24,0)=" F A=0:0 S INDL=$O(@(INDFN_""""""B"""",INDL)"")) Q:$P(INDL,INDXN,1)]""""!(INDL="""")  F B=0:0 S B=$O(@(INDFN_""""""B"""",INDL,B)"")) Q:B=""""  X INDF D:C8 @INDSB"
^XTMP("XPDT",7758,"RTN","XINDX11",25,0)=" I INDLC=2 K ^UTILITY($J,INDRN),^UTILITY($J,1,INDRN) Q"
^XTMP("XPDT",7758,"RTN","XINDX11",26,0)=" S ^UTILITY($J,1,INDRN,0,0)=INDLC"
^XTMP("XPDT",7758,"RTN","XINDX11",27,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX11",28,0)="NAMSP S INDXN=$P(^DIC(9.4,DA,0),""^"",2),C9=0,INDXN(C9)="","" F A=0:0 S A=$O(^DIC(9.4,DA,""EX"",A)) Q:A'>0  I $D(^(A,0))#2 S C9=C9+1,INDXN(C9)=$P(^(0),""^"")"
^XTMP("XPDT",7758,"RTN","XINDX11",29,0)=" S INDF=""S C8=1 F H=1:1:C9 I $P(INDL,INDXN(H))="""""""" S C8=0 Q"" ; Checks excluded namespaces"
^XTMP("XPDT",7758,"RTN","XINDX11",30,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX11",31,0)="HDR S INDLC=0,INDC=INDRN_"" ; '""_INDXN_""' ""_INDD_""s."",INDX="";"" D ADD S ^UTILITY($J,INDRN)="""",^UTILITY($J,1,INDRN,0,0)=0"
^XTMP("XPDT",7758,"RTN","XINDX11",32,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX11",33,0)="ENTRY F B=0:0 S B=$O(@(INDFN_""""""B"""",INDXN,B)"")) Q:B=""""  D @INDSB"
^XTMP("XPDT",7758,"RTN","XINDX11",34,0)=" ;I INDLC=2 K ^UTILITY($J,INDRN),^UTILITY($J,1,INDRN) Q ;patch 121 moved to top of routine"
^XTMP("XPDT",7758,"RTN","XINDX11",35,0)=" S ^UTILITY($J,1,INDRN,0,0)=INDLC"
^XTMP("XPDT",7758,"RTN","XINDX11",36,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX11",37,0)="FUNC ;Process Function file entry"
^XTMP("XPDT",7758,"RTN","XINDX11",38,0)=" Q:'($D(^DD(""FUNC"",B,0))#2)  S INDC=B_"" ; ""_$P(^(0),""^"",1)_"" - ""_$S($D(^(9))#2:$E(^(9),1,190),1:""""),INDX=$S($D(^(1))#2:^(1),1:"";"") D ADD"
^XTMP("XPDT",7758,"RTN","XINDX11",39,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX11",40,0)="OPT ;Process option file entry for MUMPS code"
^XTMP("XPDT",7758,"RTN","XINDX11",41,0)=" Q:'$D(^DIC(19,B,0))  S T=$P(^(0),""^"",4),INDC=B_"" ; ""_$P(^(0),""^"",1)_"" - ""_$P(^(0),""^"",2)_"" (""_$P($P($P(^DD(19,4,0),""^"",3),T_"":"",2),"";"",1)_"")""_$S($P(^DIC(19,B,0),""^"",6)]"""":"" - Locked by ""_$P(^(0),""^"",6),1:""""),INDX="""" D ADD"
^XTMP("XPDT",7758,"RTN","XINDX11",42,0)=" S INDN=""15,20,26,""_$S(T=""E"":""34,35,54"",T=""I"":""34,35"",T=""P"":""69,69.1,69.2,69.3,71,72,73"",T=""R"":25,1:"""") D OPTC:INDN"
^XTMP("XPDT",7758,"RTN","XINDX11",43,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX11",44,0)="OPTC F J=1:1 S H=$P(INDN,"","",J) Q:H=""""  I $D(^DIC(19,B,H))#2 D"
^XTMP("XPDT",7758,"RTN","XINDX11",45,0)=" . S %=^(H),INDX=$S(H'=25:%,1:""D ""_$E(""^"",%'[""^"")_$P(%,""["")),INDC="" ; ""_$P(^DD(19,H,0),""^"",1) D ADD"
^XTMP("XPDT",7758,"RTN","XINDX11",46,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX11",47,0)="ADD ;Put code in UTILITY for processing"
^XTMP("XPDT",7758,"RTN","XINDX11",48,0)=" S INDLC=INDLC+1,^UTILITY($J,1,INDRN,0,INDLC,0)=INDC I INDX]"""" S INDLC=INDLC+1,^UTILITY($J,1,INDRN,0,INDLC,0)="" ""_INDX"
^XTMP("XPDT",7758,"RTN","XINDX11",49,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2")="0^2^B18776883^B17870564"
^XTMP("XPDT",7758,"RTN","XINDX2",1,0)="XINDX2 ;ISC/REL,GRK,RWF - PROCESS ""GRB"" ;4/2/08  16:35"
^XTMP("XPDT",7758,"RTN","XINDX2",2,0)=" ;;7.3;TOOLKIT;**20,27,48,110,121**;Apr 25, 1995;Build 7"
^XTMP("XPDT",7758,"RTN","XINDX2",3,0)=" ; Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7758,"RTN","XINDX2",4,0)="% S LINE=GRB,(CM,COM)="""" F I=0:0 S STR=$P(LINE,$C(9),1),LINE=$P(LINE,$C(9),2,999),NOA=0 D:STR]"""" ARGG Q:LINE']"""""
^XTMP("XPDT",7758,"RTN","XINDX2",5,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",6,0)=" ;Process argument"
^XTMP("XPDT",7758,"RTN","XINDX2",7,0)="ARGG D ^XINDX9 S I=0,AC=999 F %=0:0 S %=$O(LV(%)) Q:%'>0  S I(%)=0"
^XTMP("XPDT",7758,"RTN","XINDX2",8,0)="ARGS ;Proccess all agruments at this level"
^XTMP("XPDT",7758,"RTN","XINDX2",9,0)=" S AC=LI+AC F  Q:AC'>LI  D INC Q:S=""""  D ARG"
^XTMP("XPDT",7758,"RTN","XINDX2",10,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",11,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",12,0)="ARG ;Process one argument"
^XTMP("XPDT",7758,"RTN","XINDX2",13,0)=" I CH="","" D PEEK,E^XINDX1(21):("",""[Y)&($$FNC()'=""$$"") Q"
^XTMP("XPDT",7758,"RTN","XINDX2",14,0)=" Q:CH=Q"
^XTMP("XPDT",7758,"RTN","XINDX2",15,0)=" I (CH?1A)!(CH=""%"") D LOC Q"
^XTMP("XPDT",7758,"RTN","XINDX2",16,0)=" I CH=""^"" S LOC=""G"" G NAK:S=""^"",EXTGLO:S[""["",EXTGLO:S[""|"",GLO Q"
^XTMP("XPDT",7758,"RTN","XINDX2",17,0)=" I CH=""$"" D FUN Q"
^XTMP("XPDT",7758,"RTN","XINDX2",18,0)=" I CH=""?"" D PAT Q"
^XTMP("XPDT",7758,"RTN","XINDX2",19,0)=" I CH=""("" D INC S NOA=S D DN,INC Q"
^XTMP("XPDT",7758,"RTN","XINDX2",20,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",21,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",22,0)="NAK S LOC=""N"""
^XTMP("XPDT",7758,"RTN","XINDX2",23,0)=" G GLO"
^XTMP("XPDT",7758,"RTN","XINDX2",24,0)="EXTGLO D E^XINDX1(50),EG,INC S S=U_S"
^XTMP("XPDT",7758,"RTN","XINDX2",25,0)=" G GLO"
^XTMP("XPDT",7758,"RTN","XINDX2",26,0)="EG N GK,LOC S GK="""",LOC=""L"" ;HANDLE EXTENDED GLOBAL"
^XTMP("XPDT",7758,"RTN","XINDX2",27,0)=" F  D INC Q:""]""[CH  Q:""|""[CH  D ARG"
^XTMP("XPDT",7758,"RTN","XINDX2",28,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",29,0)="GLO S X=$E(S,2,99) I X]"""",S'[""^$"",X'?1(1U,1""%"").7UN D E^XINDX1(12)"
^XTMP("XPDT",7758,"RTN","XINDX2",30,0)=" I GK[""*"",$E(S,1,2)[""^%"" D E^XINDX1(45)"
^XTMP("XPDT",7758,"RTN","XINDX2",31,0)=" I S1=""("" S S=S_S1 D PEEKDN S:(Y?1N.NP)!($A(Y)=34)!(""^$J^$I^$H^""[(U_Y)) S=S_Y"
^XTMP("XPDT",7758,"RTN","XINDX2",32,0)=" D ST(LOC,S) I S1=""("" D INC2 S NOA=S D DN,INC"
^XTMP("XPDT",7758,"RTN","XINDX2",33,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",34,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",35,0)="LOC S LOC=""L"" ;Check variables at end. I S'?1.8UN,S'?1""%"".7UN,S'?1.8LN,S'?1""%"".7LN D E^XINDX1(11)"
^XTMP("XPDT",7758,"RTN","XINDX2",36,0)=" I S1=""("" S S=S_S1 D PEEKDN S:(Y?1.N)!($A(Y)=34) S=S_Y"
^XTMP("XPDT",7758,"RTN","XINDX2",37,0)=" D ST(LOC,S) I S1=""("" D INC2 S NOA=S D DN,INC"
^XTMP("XPDT",7758,"RTN","XINDX2",38,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",39,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",40,0)="PEEK S Y=$G(LV(LV,LI+1)) Q"
^XTMP("XPDT",7758,"RTN","XINDX2",41,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",42,0)="INC2 S LI=LI+1 ;Drop into INC"
^XTMP("XPDT",7758,"RTN","XINDX2",43,0)="INC S LI=LI+1,S=$G(LV(LV,LI)),S1=$G(LV(LV,LI+1)),CH=$E(S) G:$A(S)=10 ERR Q"
^XTMP("XPDT",7758,"RTN","XINDX2",44,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",45,0)="DN S LI(LV)=LI,LI(LV,1)=AC,LV=LV+1,LI=LI(LV),AC=NOA"
^XTMP("XPDT",7758,"RTN","XINDX2",46,0)=" D ARGS,UP Q"
^XTMP("XPDT",7758,"RTN","XINDX2",47,0)="UP ;Inc LI as we save to skip the $C(10)."
^XTMP("XPDT",7758,"RTN","XINDX2",48,0)=" D PEEK D:$A(Y)'=10 ERR S LI(LV)=LI+1,LV=LV-1,LI=LI(LV),AC=LI(LV,1) Q"
^XTMP("XPDT",7758,"RTN","XINDX2",49,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",50,0)="PEEKDN S Y=$G(LV(LV+1,LI(LV+1)+1)) Q"
^XTMP("XPDT",7758,"RTN","XINDX2",51,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",52,0)="ERR D E^XINDX1(43) S (S,S1,CH)="""" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",53,0)=" S Z=$P(LV(LV+1),$C(9),LI(LV+1),99),Z=$P(Z,$C(10)) W !,""COUNT="",$L(Z,"","")"
^XTMP("XPDT",7758,"RTN","XINDX2",54,0)=" ;functions"
^XTMP("XPDT",7758,"RTN","XINDX2",55,0)="FUN N FUN S FUN=S G EXT:S[""$$"",PKG:S[""$&"",SPV:S1'[""("" S NOA=$P(S,""^"",2)"
^XTMP("XPDT",7758,"RTN","XINDX2",56,0)=" D INC2 I S'>0 D E^XINDX1(43) ;Sit on NOA"
^XTMP("XPDT",7758,"RTN","XINDX2",57,0)=" G:FUN[""$TE"" TEXT"
^XTMP("XPDT",7758,"RTN","XINDX2",58,0)=" S Y=1 F Z1=LI(LV+1)+1:1 S X=$G(LV(LV+1,Z1)) Q:$A(X)=10!(X="""")  S:X="","" Y=Y+1"
^XTMP("XPDT",7758,"RTN","XINDX2",59,0)=" I NOA,Y<NOA!(Y>$P(NOA,"";"",2)) D E^XINDX1(43)"
^XTMP("XPDT",7758,"RTN","XINDX2",60,0)=" S NOA=S D DN,INC Q"
^XTMP("XPDT",7758,"RTN","XINDX2",61,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",62,0)="TEXT S Y=$$ASM^XINDX3(LV+1,LI(LV+1)+1,$C(10)) D ST(""MK"",""$T(""_$S($E(Y)'=""+"":Y,1:""""))"
^XTMP("XPDT",7758,"RTN","XINDX2",63,0)=" I $$VT(Y) D ST(""I"",Y)"
^XTMP("XPDT",7758,"RTN","XINDX2",64,0)=" I Y[""^"",$$VT($P(Y,""^"",2)) N X1,X2 S X1=$P(Y,""^""),X2=$P(Y,""^"",2) D ST(""X"",X2_$S($$VT(X1):"" ""_X1,1:""""))"
^XTMP("XPDT",7758,"RTN","XINDX2",65,0)=" D FLUSH(LV+1) Q"
^XTMP("XPDT",7758,"RTN","XINDX2",66,0)=" ;special variables"
^XTMP("XPDT",7758,"RTN","XINDX2",67,0)="SPV ;"
^XTMP("XPDT",7758,"RTN","XINDX2",68,0)=" I ""^$D^$EC^$ES^$ET^$I^$K^$P^$Q^$ST^$SY^""[(""^""_X_""^"") D ST(""MK"",X)"
^XTMP("XPDT",7758,"RTN","XINDX2",69,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",70,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",71,0)="EXT ;Extrinsic functions"
^XTMP("XPDT",7758,"RTN","XINDX2",72,0)=" I $E(S1)=""^"" S Y=$E(S1,2,99)_"" ""_S D INC S S=Y ;Build S and fall thru"
^XTMP("XPDT",7758,"RTN","XINDX2",73,0)=" D ST($S(S["" "":""X"",1:""I""),S) ;Internal, eXternal"
^XTMP("XPDT",7758,"RTN","XINDX2",74,0)=" I S1[""("" D INC2 S NOA=S D DN,INC ;Process param."
^XTMP("XPDT",7758,"RTN","XINDX2",75,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",76,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",77,0)="PKG ;External Package"
^XTMP("XPDT",7758,"RTN","XINDX2",78,0)=" D ST(""X"",S) ;Record External name"
^XTMP("XPDT",7758,"RTN","XINDX2",79,0)=" I S1[""("" D INC2 S NOA=S D DN,INC ;Process param."
^XTMP("XPDT",7758,"RTN","XINDX2",80,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",81,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",82,0)="PAT D INC I $E(S)=""@"" D INC,ARG Q"
^XTMP("XPDT",7758,"RTN","XINDX2",83,0)=" F  D REPCNT,PATCODE Q:$E(S)="""""
^XTMP("XPDT",7758,"RTN","XINDX2",84,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",85,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",86,0)="REPCNT F I=1:1 Q:(""0123456789.""'[$E(S,I))!($E(S,I)="""")"
^XTMP("XPDT",7758,"RTN","XINDX2",87,0)=" S X=$E(S,1,I-1),S=$E(S,I,999) I ('$L(X))!($L(X,""."")>2) S S="""" D E^XINDX1(16)"
^XTMP("XPDT",7758,"RTN","XINDX2",88,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",89,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",90,0)="PATCODE I $E(S)=Q S I=1 D PATQ S S=$E(S,I,999) S:$L(CH)&("",)""[CH) S=$E(S,2,999) Q"
^XTMP("XPDT",7758,"RTN","XINDX2",91,0)=" F I=1:1 Q:(""ACELNPUacelnpu()""'[$E(S,I))!($E(S,I)="""")"
^XTMP("XPDT",7758,"RTN","XINDX2",92,0)=" S X=$E(S,1,I-1),S=$E(S,I,999) I I=1 S S="""" D E^XINDX1(16)"
^XTMP("XPDT",7758,"RTN","XINDX2",93,0)=" I $E(S)="","" S S=$E(S,2,999) ;Pull ',' out of alternation"
^XTMP("XPDT",7758,"RTN","XINDX2",94,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",95,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",96,0)="PATQ F I=I+1:1 S CH=$E(S,I) Q:CH=""""!(CH=Q)"
^XTMP("XPDT",7758,"RTN","XINDX2",97,0)=" S I=I+1 D:CH="""" E^XINDX1(6) S CH=$E(S,I) G:CH=Q PATQ"
^XTMP("XPDT",7758,"RTN","XINDX2",98,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",99,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",100,0)="ST(LOC,S) S:'$D(V(LOC,S)) V(LOC,S)="""" I $D(GK),GK]"""",V(LOC,S)'[GK S V(LOC,S)=V(LOC,S)_GK"
^XTMP("XPDT",7758,"RTN","XINDX2",101,0)=" S GK="""""
^XTMP("XPDT",7758,"RTN","XINDX2",102,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX2",103,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",104,0)="VT(X) ;Check if a valid label"
^XTMP("XPDT",7758,"RTN","XINDX2",105,0)=" Q (X?1A.31AN)!(X?1""%"".31UN)!(X?1.31N)"
^XTMP("XPDT",7758,"RTN","XINDX2",106,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",107,0)="VA(X) ;Check if VA Standard label"
^XTMP("XPDT",7758,"RTN","XINDX2",108,0)=" Q (X?1U.7UN)!(X?1""%"".7UN)!(X?1.8N)"
^XTMP("XPDT",7758,"RTN","XINDX2",109,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",110,0)="FLUSH(L) ;Flush rest of list with this offset"
^XTMP("XPDT",7758,"RTN","XINDX2",111,0)=" N I,CH S I=LI(L)+1 F I=I:1 S CH=$G(LV(L,I)) Q:$C(10)[CH  D:CH=""("" FLUSH(L+1)"
^XTMP("XPDT",7758,"RTN","XINDX2",112,0)=" S LI(L)=I Q"
^XTMP("XPDT",7758,"RTN","XINDX2",113,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",114,0)="FNC(NEW) ;Sets or returns the current function"
^XTMP("XPDT",7758,"RTN","XINDX2",115,0)=" I $D(NEW) S LV(LV+1,""FNC"",LI)=NEW Q"
^XTMP("XPDT",7758,"RTN","XINDX2",116,0)=" N W"
^XTMP("XPDT",7758,"RTN","XINDX2",117,0)=" S W=+$S($D(LV(LV,""FNC"",LI)):LI,$O(LV(LV,""FNC"",LI),-1):$O(LV(LV,""FNC"",LI),-1),1:$O(LV(LV,""FNC"",LI))) ;patch 119,121"
^XTMP("XPDT",7758,"RTN","XINDX2",118,0)=" Q $G(LV(LV,""FNC"",W))"
^XTMP("XPDT",7758,"RTN","XINDX2",119,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX2",120,0)="OP(NEW) ;Sets or returns the current operator"
^XTMP("XPDT",7758,"RTN","XINDX2",121,0)=" I $D(NEW) S LV(LV,""OP"",LI)=NEW Q"
^XTMP("XPDT",7758,"RTN","XINDX2",122,0)=" N W S W=+$S($D(LV(LV,""OP"",LI)):LI,1:$O(LV(LV,""OP"",LI),-1))"
^XTMP("XPDT",7758,"RTN","XINDX2",123,0)=" Q $G(LV(LV,""OP"",W))"
^XTMP("XPDT",7758,"RTN","XINDX2",124,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX3")="0^3^B12135035^B11413243"
^XTMP("XPDT",7758,"RTN","XINDX3",1,0)="XINDX3 ;ISC/REL,GRK,RWF - PROCESS MERGE/SET/READ/KILL/NEW/OPEN COMMANDS ;06/24/08  15:44"
^XTMP("XPDT",7758,"RTN","XINDX3",2,0)=" ;;7.3;TOOLKIT;**20,27,61,68,110,121**;Apr 25, 1995;Build 7"
^XTMP("XPDT",7758,"RTN","XINDX3",3,0)=" ; Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7758,"RTN","XINDX3",4,0)="PEEK S Y=$G(LV(LV,LI+1)) Q"
^XTMP("XPDT",7758,"RTN","XINDX3",5,0)="PEEK2 S Y=$G(LV(LV,LI+2)) Q"
^XTMP("XPDT",7758,"RTN","XINDX3",6,0)="INC2 S LI=LI+1 ;Drop into INC"
^XTMP("XPDT",7758,"RTN","XINDX3",7,0)="INC S LI=LI+1,S=$G(LV(LV,LI)),S1=$G(LV(LV,LI+1)),CH=$E(S) G ERR:$A(S)=10 Q"
^XTMP("XPDT",7758,"RTN","XINDX3",8,0)="DN S LI(LV)=LI,LI(LV,1)=AC,LV=LV+1,LI=LI(LV),AC=NOA"
^XTMP("XPDT",7758,"RTN","XINDX3",9,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",10,0)="UP ;Inc LI as we save to skip the $C(10)."
^XTMP("XPDT",7758,"RTN","XINDX3",11,0)=" D PEEK S:$A(Y)=10 LI=LI+1 S LI(LV)=LI,LV=LV-1,LI=LI(LV),AC=LI(LV,1) Q"
^XTMP("XPDT",7758,"RTN","XINDX3",12,0)="PEEKDN S Y=$G(LV(LV+1,LI(LV+1)+1)) Q"
^XTMP("XPDT",7758,"RTN","XINDX3",13,0)="FIND F Y=LI:1:AC Q:L[$G(LV(LV,Y))"
^XTMP("XPDT",7758,"RTN","XINDX3",14,0)="ERR D E^XINDX1(43) S (S,S1,CH)="""" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",15,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",16,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",17,0)="S ;Set"
^XTMP("XPDT",7758,"RTN","XINDX3",18,0)=" S STR=ARG,ARG="""",RHS=0 D ^XINDX9"
^XTMP("XPDT",7758,"RTN","XINDX3",19,0)="S2 S GK="""" D INC I S="""" D:'RHS E^XINDX1(10) Q"
^XTMP("XPDT",7758,"RTN","XINDX3",20,0)=" I CH="","",""!""""#&)*+-,./:;<=?\]_~""[$E(S1),RHS=1 D E^XINDX1(10) G S2 ;patch 121"
^XTMP("XPDT",7758,"RTN","XINDX3",21,0)=" I CH="","" S RHS=0 G S2"
^XTMP("XPDT",7758,"RTN","XINDX3",22,0)=" I CH=""="" S RHS=1 D:""!#&)*,/:;<=?\]_~""[$E(S1) E^XINDX1(10) G S2 ;patch 119"
^XTMP("XPDT",7758,"RTN","XINDX3",23,0)=" I CH=""$"",'RHS D  D:% E^XINDX1(10) ;Can't be on RHS of set."
^XTMP("XPDT",7758,"RTN","XINDX3",24,0)=" . S %=1"
^XTMP("XPDT",7758,"RTN","XINDX3",25,0)=" . I ""$E$P$X$Y""[$E(S,1,2) S %=0 Q"
^XTMP("XPDT",7758,"RTN","XINDX3",26,0)=" . I ""$EC$ET$QS""[$E(S,1,3) S %=0 Q"
^XTMP("XPDT",7758,"RTN","XINDX3",27,0)=" . I ""$ZE$ZT""[$E(S,1,3) S %=0 Q  ;Pickup in XINDX9"
^XTMP("XPDT",7758,"RTN","XINDX3",28,0)=" . Q"
^XTMP("XPDT",7758,"RTN","XINDX3",29,0)=" I CH=""^"" D FL G S2"
^XTMP("XPDT",7758,"RTN","XINDX3",30,0)=" I CH=""@"" S Y=$$ASM(LV,LI,"","") S:Y'[""="" RHS=1 D INC,ARG^XINDX2 G S2"
^XTMP("XPDT",7758,"RTN","XINDX3",31,0)=" I CH=""("" D MULT G S2"
^XTMP("XPDT",7758,"RTN","XINDX3",32,0)=" D FL G S2"
^XTMP("XPDT",7758,"RTN","XINDX3",33,0)="MULT D INC S NOA=S I S'>0 S ERR=5 G ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDX3",34,0)=" D DN S AC=AC+LI F  Q:AC'>LI  S:'RHS GK=""*"" D INC,ARG^XINDX2"
^XTMP("XPDT",7758,"RTN","XINDX3",35,0)=" D UP Q"
^XTMP("XPDT",7758,"RTN","XINDX3",36,0)="FL ;"
^XTMP("XPDT",7758,"RTN","XINDX3",37,0)=" S:'RHS GK=""*"" D ARG^XINDX2"
^XTMP("XPDT",7758,"RTN","XINDX3",38,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",39,0)="VLNF(X) ;Drop into VLN"
^XTMP("XPDT",7758,"RTN","XINDX3",40,0)="VLN ;Valid Local Name > Variable"
^XTMP("XPDT",7758,"RTN","XINDX3",41,0)=" S ERR=0"
^XTMP("XPDT",7758,"RTN","XINDX3",42,0)=" Q:X?1(1U,1""%"").15UN"
^XTMP("XPDT",7758,"RTN","XINDX3",43,0)=" I X?1(1A,1""%"").15AN D E^XINDX1(57) Q  ;Lowercase"
^XTMP("XPDT",7758,"RTN","XINDX3",44,0)=" D E^XINDX1(11) ;Too long or other problem"
^XTMP("XPDT",7758,"RTN","XINDX3",45,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",46,0)="VGN ;Valid Global Name"
^XTMP("XPDT",7758,"RTN","XINDX3",47,0)=" S ERR=0 I X'?1(1U,1""%"").7UN D E^XINDX1(12)"
^XTMP("XPDT",7758,"RTN","XINDX3",48,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",49,0)="KL ;Process KILL"
^XTMP("XPDT",7758,"RTN","XINDX3",50,0)=" S STR=ARG,ARG(1)=ARG,ARG="""" D ^XINDX9"
^XTMP("XPDT",7758,"RTN","XINDX3",51,0)="A D INC Q:S=""""  G A:CH="","" S LOC=""L"" D @$S(CH=""@"":""KL1"",CH=""^"":""KL2"",CH=""("":""KL4"",1:""KL3"") G A"
^XTMP("XPDT",7758,"RTN","XINDX3",52,0)="KL1 D INC,ARG^XINDX2 Q"
^XTMP("XPDT",7758,"RTN","XINDX3",53,0)="KL2 S GK=""!"""
^XTMP("XPDT",7758,"RTN","XINDX3",54,0)=" I S1'=""("" S ERR=24 D ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDX3",55,0)=" G ARG^XINDX2"
^XTMP("XPDT",7758,"RTN","XINDX3",56,0)="KL3 I ""^DT^DTIME^DUZ^IOST^IOM^U^""[(""^""_S_""^"") S ERR=39,ERR(1)=S D ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDX3",57,0)=" I ""IO""=S D:S1=""("" PEEKDN S ERR=39,ERR(1)=S_$S(S1[""("":S1_Y_"")"",1:"""") D:S1'=""("" ^XINDX1 I S1=""("",(""QC""'[$E(Y,2)) D ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDX3",58,0)="KL5 S GK=""!"" D ARG^XINDX2 Q  ;KILL SUBS"
^XTMP("XPDT",7758,"RTN","XINDX3",59,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",60,0)="KL4 S NOA=S1 D DN,ARGS^XINDX2,UP,INC2 Q"
^XTMP("XPDT",7758,"RTN","XINDX3",61,0)="NE ;NEW"
^XTMP("XPDT",7758,"RTN","XINDX3",62,0)=" S ERR=$S(""(""[$E(ARG):26,1:0) I ERR G ^XINDX1 ;look for null or ("
^XTMP("XPDT",7758,"RTN","XINDX3",63,0)=" S STR=ARG D ^XINDX9"
^XTMP("XPDT",7758,"RTN","XINDX3",64,0)="N2 D INC Q:S=""""  G N2:CH="","" I CH?1P,(""%@()""'[CH)&(""$E""'[$E(S,1,2)) D E^XINDX1(11) G N2"
^XTMP("XPDT",7758,"RTN","XINDX3",65,0)=" S GK=""~"" D ARG^XINDX2 G N2"
^XTMP("XPDT",7758,"RTN","XINDX3",66,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX3",67,0)="RD S STR=ARG D ^XINDX9 S ARG="""""
^XTMP("XPDT",7758,"RTN","XINDX3",68,0)="RD1 D INC Q:S="""""
^XTMP("XPDT",7758,"RTN","XINDX3",69,0)=" ;I (CH=""!"")!(CH="","")!(CH=Q)!(CH=""#"") G RD1"
^XTMP("XPDT",7758,"RTN","XINDX3",70,0)=" ;I CH=""^"" S ERR=11 D ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDX3",71,0)=" I '((CH=""%"")!(CH?1A)!(CH=""*"")) D RD3 G RD1"
^XTMP("XPDT",7758,"RTN","XINDX3",72,0)=" S Y=$$ASM(LV,LI,"","") I Y'["":"" S ERR=33,RDTIME=1 D ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDX3",73,0)=" D RD2 G RD1"
^XTMP("XPDT",7758,"RTN","XINDX3",74,0)="RD2 Q:"",""[CH"
^XTMP("XPDT",7758,"RTN","XINDX3",75,0)=" I ""*#""[CH D E^XINDX1(41)"
^XTMP("XPDT",7758,"RTN","XINDX3",76,0)=" I ""#:""[CH D INC,ARG^XINDX2,INC G RD2"
^XTMP("XPDT",7758,"RTN","XINDX3",77,0)=" I (CH=""%"")!(CH?1A) S LOC=""L"",GK=""*"" D ARG^XINDX2,INC G RD2"
^XTMP("XPDT",7758,"RTN","XINDX3",78,0)=" D INC G RD2"
^XTMP("XPDT",7758,"RTN","XINDX3",79,0)="RD3 Q:"",""[CH  I ""!#?""[CH D INC G RD3"
^XTMP("XPDT",7758,"RTN","XINDX3",80,0)=" I (CH=""%"")!(CH?1A)!(CH=""@"") D ARG^XINDX2,INC G RD3"
^XTMP("XPDT",7758,"RTN","XINDX3",81,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",82,0)="O S STR=ARG,AC=99 D ^XINDX9,INC S ARG="""" I S[""@"" D ARGS^XINDX2 Q"
^XTMP("XPDT",7758,"RTN","XINDX3",83,0)=" D ARG^XINDX2,INC D  D INC,ARGS^XINDX2 Q"
^XTMP("XPDT",7758,"RTN","XINDX3",84,0)=" . F  D INC Q:"":""[S"
^XTMP("XPDT",7758,"RTN","XINDX3",85,0)=" . Q"
^XTMP("XPDT",7758,"RTN","XINDX3",86,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",87,0)="ERRCP S ERR=5 D ^XINDX1 Q"
^XTMP("XPDT",7758,"RTN","XINDX3",88,0)="ST ;"
^XTMP("XPDT",7758,"RTN","XINDX3",89,0)=" S:'$D(V(LOC,S)) V(LOC,S)="""" S:V(LOC,S)'[GK V(LOC,S)=V(LOC,S)_GK,GK="""" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",90,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX3",91,0)="ASM(WL,SI,L,SEP) ;"
^XTMP("XPDT",7758,"RTN","XINDX3",92,0)=" N %,CH,Y S SEP=$G(SEP),Y="""" F %=SI:1 S CH=$G(LV(WL,%)) Q:L[CH  S Y=Y_SEP_CH"
^XTMP("XPDT",7758,"RTN","XINDX3",93,0)=" Q Y"
^XTMP("XPDT",7758,"RTN","XINDX5")="0^4^B11265539^B10983849"
^XTMP("XPDT",7758,"RTN","XINDX5",1,0)="XINDX5 ;SF-ISC/RWF - CROSS REFERENCE ALL ROUTINES ;03/26/2002  09:57"
^XTMP("XPDT",7758,"RTN","XINDX5",2,0)=" ;;7.3;TOOLKIT;**20,27,61,121**;Apr 25, 1995;Build 7"
^XTMP("XPDT",7758,"RTN","XINDX5",3,0)=" ; Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7758,"RTN","XINDX5",4,0)=" G END:$D(IND(""QUIT"")) I INP(8) W !,""Called Routines"",! D ^XINDX52 ;Get called routines"
^XTMP("XPDT",7758,"RTN","XINDX5",5,0)=" K ARG,CCN,CH,COM,ERR,GK,GRB,I,INDDA,INDDS,L,LAB,LAB0,LC,LIN,LOC,PC,PRV,R,RTN,S,STR,TXT,V,X,Y"
^XTMP("XPDT",7758,"RTN","XINDX5",6,0)=" D ^XINDX53:INP(7) ;Load routine file"
^XTMP("XPDT",7758,"RTN","XINDX5",7,0)=" ;Check called tags and routines"
^XTMP("XPDT",7758,"RTN","XINDX5",8,0)=" S RN=""$"",TXT="""" W !!,""--- CROSS REFERENCING ---"",!"
^XTMP("XPDT",7758,"RTN","XINDX5",9,0)="A S RN=$O(^UTILITY($J,RN)),L="""",LABO=0 I RN="""" G B"
^XTMP("XPDT",7758,"RTN","XINDX5",10,0)=" F  S L=$O(^UTILITY($J,1,RN,""X"",L)) Q:L=""""  S XX2=^(L,0),XX1=$P(L,"" "",2),T=$P(XX1,""+"",1),P=$P(L,"" "",1) D AA"
^XTMP("XPDT",7758,"RTN","XINDX5",11,0)=" G A"
^XTMP("XPDT",7758,"RTN","XINDX5",12,0)="AA Q:P=""""  I '$D(^UTILITY($J,1,P)) D  Q  ;We can now check % routines"
^XTMP("XPDT",7758,"RTN","XINDX5",13,0)=" . I (P[""&"")!(P[""@"") Q  ;External subroutine"
^XTMP("XPDT",7758,"RTN","XINDX5",14,0)=" . S:T[""$"" T=$E(T,3,99) S:P[""("" P=$P(P,""("")"
^XTMP("XPDT",7758,"RTN","XINDX5",15,0)=" . I '$$VTAG(P) S ERR=52,ERR(1)=P D AAER(.ERR,RN,"""",0) Q"
^XTMP("XPDT",7758,"RTN","XINDX5",16,0)=" . S X=$T(^@P) I X="""" S ERR=52,ERR(1)=P D AAER(.ERR,RN,$P(XX2,"",""),0) Q"
^XTMP("XPDT",7758,"RTN","XINDX5",17,0)=" . Q:T="""""
^XTMP("XPDT",7758,"RTN","XINDX5",18,0)=" . I '$$VTAG(T) D AAER(37,RN,$P(XX2,"",""),0) Q"
^XTMP("XPDT",7758,"RTN","XINDX5",19,0)=" . I $$VTAG(T),$T(@T^@P)="""" S E=38,E(1)=""MISSING LABEL ""_XX1_""^""_P D AAER(.E,RN,"""",0)"
^XTMP("XPDT",7758,"RTN","XINDX5",20,0)=" . Q"
^XTMP("XPDT",7758,"RTN","XINDX5",21,0)=" I T]"""",$D(^UTILITY($J,1,P)) D"
^XTMP("XPDT",7758,"RTN","XINDX5",22,0)=" . S:T[""$$"" T=$E(T,3,99) S:T[""@"" T="""""
^XTMP("XPDT",7758,"RTN","XINDX5",23,0)=" . I T]"""",'$D(^UTILITY($J,1,P,""T"",T)) S E=38,E(1)=""MISSING LABEL (see INVOKED BY list)."" D AAER(.E,P,XX1,0)"
^XTMP("XPDT",7758,"RTN","XINDX5",24,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX5",25,0)="AAER(ERR,RTN,LAB,LABO) ;Report error. error code, routine, label, label offset"
^XTMP("XPDT",7758,"RTN","XINDX5",26,0)=" D ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDX5",27,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX5",28,0)="VTAG(K) ;Check for a valid tag. works for routine name."
^XTMP("XPDT",7758,"RTN","XINDX5",29,0)=" Q (K?1(1""%"",1A).7NA)!(K?1.8N)"
^XTMP("XPDT",7758,"RTN","XINDX5",30,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX5",31,0)="B D ^XINDX51"
^XTMP("XPDT",7758,"RTN","XINDX5",32,0)="END W:$D(IND(""QUIT"")) !!,""--- "",$S($D(ZTSTOP):""TASK "",1:""""),""STOPPED ---"" W !!,""--- END ---"""
^XTMP("XPDT",7758,"RTN","XINDX5",33,0)=" I IO'=IO(0) U IO(0) W !,""--- D O N E ---"" U IO"
^XTMP("XPDT",7758,"RTN","XINDX5",34,0)=" D ^%ZISC"
^XTMP("XPDT",7758,"RTN","XINDX5",35,0)=" S:$D(ZTQUEUED) ZTREQ=""@"""
^XTMP("XPDT",7758,"RTN","XINDX5",36,0)="CLEAN ;Come here from XINDX6 if queued output."
^XTMP("XPDT",7758,"RTN","XINDX5",37,0)=" K %,%1,%2,%I1,%IN1,%UCN,A,ARG,C,C9,CCN,CH,COM,DA,DIC,DUOUT,ERR,ERTX,F,F1,G,GK,GRB,H,HED,HS"
^XTMP("XPDT",7758,"RTN","XINDX5",38,0)=" K ^UTILITY($J),I,IND,INDB,INDC,INDDA,INDDS,INDF,INDFN,INDLC,INDPM,INDX,INDXDT,INDXJ,INP,IP,J,K,K1,K3,L,LAB,LABO,LBL,LC,LIN,LINE,LOC,NRO,OFF,P,PC,PGM,POP,POST,Q,R,RDTIME,RHS,ROU,RTN,S,S1,STR,SYM,TAB,TAG,TXT,TY,V,VZ,X,X1,X2,X3,Y"
^XTMP("XPDT",7758,"RTN","XINDX5",39,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX5",40,0)="CRX S RTN=""$"" F I=0:0 S RTN=$O(^UTILITY($J,RTN)) Q:RTN=""""  F LOC=""L"",""G"",""MK"",""N"",""X"" D CR0 ;patch 121"
^XTMP("XPDT",7758,"RTN","XINDX5",41,0)=" K VZ Q"
^XTMP("XPDT",7758,"RTN","XINDX5",42,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX5",43,0)="CR0 N VZ S S=-1 I LOC=""X"",'$D(^UTILITY($J,1,""***"",""X"",RTN_"" "")) S ^UTILITY($J,1,""***"",""X"",RTN_"" "")="""""
^XTMP("XPDT",7758,"RTN","XINDX5",44,0)="CR1 S S=$O(^UTILITY($J,1,RTN,LOC,S)) Q:S=""""  ;Loop"
^XTMP("XPDT",7758,"RTN","XINDX5",45,0)=" S X=$G(^UTILITY($J,1,RTN,LOC,S))"
^XTMP("XPDT",7758,"RTN","XINDX5",46,0)=" F J=1:1:$L(X) S:$G(^UTILITY($J,1,""***"",LOC,S))'[$E(X,J) ^(S)=$G(^(S))_$E(X,J) ;Pass on flags"
^XTMP("XPDT",7758,"RTN","XINDX5",47,0)=" F J=0:1 Q:'$D(^UTILITY($J,1,RTN,LOC,S,J))  D CR2"
^XTMP("XPDT",7758,"RTN","XINDX5",48,0)=" G CR1"
^XTMP("XPDT",7758,"RTN","XINDX5",49,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX5",50,0)="CR2 S PC="""" I LOC'=""X"" S:^UTILITY($J,1,RTN,LOC,S,J)[""*"" PC=PC_""*"" S:^(J)[""!"" PC=PC_""!"" S:^(J)[""~"" PC=PC_""~"" D CR3(RTN,S,LOC) Q"
^XTMP("XPDT",7758,"RTN","XINDX5",51,0)=" Q:$D(VZ(S))  S S1=$S($P(S,"" "",2)]"""":$P(S,"" "",2)_""^"",1:"""")_$P(S,"" "",1),VZ(S)="""""
^XTMP("XPDT",7758,"RTN","XINDX5",52,0)=" ;S X1=LOC,X2=S,X3=RTN,LOC=""Z"",S=RTN,RTN=S1 D CR3 S LOC=X1,S=X2,RTN=X3 K X1,X2,X3"
^XTMP("XPDT",7758,"RTN","XINDX5",53,0)=" D CR3(S1,RTN,""Z""),CR3(RTN,S,LOC)"
^XTMP("XPDT",7758,"RTN","XINDX5",54,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX5",55,0)="CR3(X1,X2,X3) ;(RTN,REF,LOC)"
^XTMP("XPDT",7758,"RTN","XINDX5",56,0)=" S K=0"
^XTMP("XPDT",7758,"RTN","XINDX5",57,0)="CR4 S ARG="""" I $D(^UTILITY($J,1,""***"",X3,X2,K)) S ARG=^(K) I $L(ARG)>230 S K=K+1 G CR4"
^XTMP("XPDT",7758,"RTN","XINDX5",58,0)=" S ^UTILITY($J,1,""***"",X3,X2,K)=ARG_X1_PC_"","" Q"
^XTMP("XPDT",7758,"RTN","XINDX9")="0^5^B16811292^B15969319"
^XTMP("XPDT",7758,"RTN","XINDX9",1,0)="XINDX9 ;SF/RWF - XINDEX SYNTAX CHECKER ;06/24/08  15:39"
^XTMP("XPDT",7758,"RTN","XINDX9",2,0)=" ;;7.3;TOOLKIT;**20,27,48,61,66,68,110,121**;Apr 25, 1995;Build 7"
^XTMP("XPDT",7758,"RTN","XINDX9",3,0)=" ; Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7758,"RTN","XINDX9",4,0)=" N CH1,EC,OP"
^XTMP("XPDT",7758,"RTN","XINDX9",5,0)=" D PARSE S LI=0,AC=255 F %=0:0 S %=$O(LV(%)) Q:%'>0  S LI(%)=0"
^XTMP("XPDT",7758,"RTN","XINDX9",6,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",7,0)=" ;LV is a set of Linked Values"
^XTMP("XPDT",7758,"RTN","XINDX9",8,0)="PARSE K LV,LI S (ERR,LI,I)=0,(LL,LV)=1,(OP,CH)="""",Q="""""""""
^XTMP("XPDT",7758,"RTN","XINDX9",9,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX9",10,0)="PA2 S I=I+1,CH=$E(STR,I),CH1=$E(STR,I+1) G:CH="""" PEND"
^XTMP("XPDT",7758,"RTN","XINDX9",11,0)=" G E:CH="";""!(CH'?1ANP) I """"""$()""[CH D QUOTE:CH=Q,FUNC:CH=""$"",DN:CH=""("",UP:CH="")"" G PA2"
^XTMP("XPDT",7758,"RTN","XINDX9",12,0)=" I CH=""^"",CH1=""$"" D SSVN G PA2"
^XTMP("XPDT",7758,"RTN","XINDX9",13,0)=" I CH=""^"",I=LL G PA2:CH1'=""["" S I=I+1,X=$E(STR,LL,I) D ADD S LL=I+1 G PA2"
^XTMP("XPDT",7758,"RTN","XINDX9",14,0)=" I CH?1A!(CH=""%"") D VAR G PA2"
^XTMP("XPDT",7758,"RTN","XINDX9",15,0)=" I CH?1N D NUM G PA2"
^XTMP("XPDT",7758,"RTN","XINDX9",16,0)=" S:""+-#'/*_&![]<>?""[CH OP=CH"
^XTMP("XPDT",7758,"RTN","XINDX9",17,0)=" I CH=""?"","",!#""'[$E(STR,I-1) D AR,PAT G PA2"
^XTMP("XPDT",7758,"RTN","XINDX9",18,0)=" I CH="","",CH1="":"" D E^XINDX1(21) ;P121"
^XTMP("XPDT",7758,"RTN","XINDX9",19,0)=" I CH?1P D  ;Check for dup operators"
^XTMP("XPDT",7758,"RTN","XINDX9",20,0)=" . D AR"
^XTMP("XPDT",7758,"RTN","XINDX9",21,0)=" . Q:(CH_CH1=""]]"")"
^XTMP("XPDT",7758,"RTN","XINDX9",22,0)=" . I ((CH=CH1)&("",_/\[]&|""[CH))&($$FNC()'=""$$"") D E^XINDX1(21) ;p110"
^XTMP("XPDT",7758,"RTN","XINDX9",23,0)=" G PA2"
^XTMP("XPDT",7758,"RTN","XINDX9",24,0)=" ;End of parse"
^XTMP("XPDT",7758,"RTN","XINDX9",25,0)="PEND D AR,E^XINDX1(5):LV>1,E^XINDX1(21):($G(LV(1,1))="","") ;LV>1 means mis-match ()"
^XTMP("XPDT",7758,"RTN","XINDX9",26,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",27,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX9",28,0)="DN D STR S X=CH D ADD,NEW S LI(LV)=LI,LV=LV+1 S:'$D(LI(LV)) LI(LV)=0 S LI=LI(LV),LI(LV-1,1)=LI"
^XTMP("XPDT",7758,"RTN","XINDX9",29,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",30,0)="UP I LV<2 D E^XINDX1(5) Q"
^XTMP("XPDT",7758,"RTN","XINDX9",31,0)=" D STR S EC=LI-LI(LV-1,1),X=$C(10) D ADD,NEW S LI(LV)=LI,LV=LV-1,LI=LI(LV)"
^XTMP("XPDT",7758,"RTN","XINDX9",32,0)=" S X=EC D ADD S X=CH D ADD I CH1]"""","",_=+-*/\#'):<>[]?&!@""'[CH1 D E^XINDX1(43)"
^XTMP("XPDT",7758,"RTN","XINDX9",33,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",34,0)="NEW S LL=I+1"
^XTMP("XPDT",7758,"RTN","XINDX9",35,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",36,0)="AR D STR S X=CH D ADD,NEW Q"
^XTMP("XPDT",7758,"RTN","XINDX9",37,0)="STR S X=$E(STR,LL,I-1) Q:'$L(X)  ;Drop into ADD"
^XTMP("XPDT",7758,"RTN","XINDX9",38,0)="ADD S LI=LI+1,LV(LV,LI)=X Q"
^XTMP("XPDT",7758,"RTN","XINDX9",39,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX9",40,0)="FNC(NEW) ;Sets or returns the current function"
^XTMP("XPDT",7758,"RTN","XINDX9",41,0)=" I $D(NEW) S LV(LV+1,""FNC"",$G(LI(LV))+1)=NEW Q"
^XTMP("XPDT",7758,"RTN","XINDX9",42,0)=" N W S W=+$S($D(LV(LV,""FNC"",LI)):LI,$O(LV(LV,""FNC"",LI)):$O(LV(LV,""FNC"",LI)),1:$O(LV(LV,""FNC"",LI),-1)) ;patch 119"
^XTMP("XPDT",7758,"RTN","XINDX9",43,0)=" Q $G(LV(LV,""FNC"",W))"
^XTMP("XPDT",7758,"RTN","XINDX9",44,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX9",45,0)="OP(NEW) ;Sets or returns the current operator"
^XTMP("XPDT",7758,"RTN","XINDX9",46,0)=" I $D(NEW) S LV(LV,""OP"",LI)=NEW Q"
^XTMP("XPDT",7758,"RTN","XINDX9",47,0)=" N W S W=+$S($D(LV(LV,""OP"",LI)):LI,1:$O(LV(LV,""OP"",LI),-1))"
^XTMP("XPDT",7758,"RTN","XINDX9",48,0)=" Q $G(LV(LV,""OP"",W))"
^XTMP("XPDT",7758,"RTN","XINDX9",49,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX9",50,0)="QUOTE F I=I+1:1 S CH=$E(STR,I) Q:CH=""""!(CH=Q)"
^XTMP("XPDT",7758,"RTN","XINDX9",51,0)=" I $E(STR,I+1)=Q S I=I+1 G QUOTE"
^XTMP("XPDT",7758,"RTN","XINDX9",52,0)=" I OP'=""?"",$E(STR,I+1)]"""",""[]()<>\/+-=&!_#*,:'|""'[$E(STR,I+1) D E^XINDX1(46) Q"
^XTMP("XPDT",7758,"RTN","XINDX9",53,0)=" Q:CH]""""  D E^XINDX1(6) Q"
^XTMP("XPDT",7758,"RTN","XINDX9",54,0)="GVAR() ;EF get var"
^XTMP("XPDT",7758,"RTN","XINDX9",55,0)=" N % D VAR S %=$E(STR,LL,I),LL=I+1"
^XTMP("XPDT",7758,"RTN","XINDX9",56,0)=" Q %"
^XTMP("XPDT",7758,"RTN","XINDX9",57,0)="VAR F J=I+1:1 S CH=$E(STR,J) Q:CH'?1AN"
^XTMP("XPDT",7758,"RTN","XINDX9",58,0)=" S I=J-1 D SUM(""V"")"
^XTMP("XPDT",7758,"RTN","XINDX9",59,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",60,0)="NUM F J=I+1:1 S CH=$E(STR,J) Q:""0123456789.""'[CH!(CH="""")"
^XTMP("XPDT",7758,"RTN","XINDX9",61,0)=" I CH=""E"" S CH=$E(STR,J+1) I CH?1N!(""+-""[CH) S I=J G NUM"
^XTMP("XPDT",7758,"RTN","XINDX9",62,0)=" I CH]"""",CH'?1P S ERR=53 D ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDX9",63,0)=" S I=J-1 D SUM(""N"")"
^XTMP("XPDT",7758,"RTN","XINDX9",64,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",65,0)="INC S I=I+1,CH=$E(STR,I)"
^XTMP("XPDT",7758,"RTN","XINDX9",66,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",67,0)="FUNC ;Functions and special var's."
^XTMP("XPDT",7758,"RTN","XINDX9",68,0)=" D INC S X=CH,S=$$GVAR() G EXT:S[""$$"",PKG:S[""$&"",SPV:CH'=""("""
^XTMP("XPDT",7758,"RTN","XINDX9",69,0)=" S S=$$CASE($E(S,2,11)),F1=$G(IND(""FNC"",S)) I '$L(F1) D E^XINDX1(3) S F1=S G FX"
^XTMP("XPDT",7758,"RTN","XINDX9",70,0)=" I ""ZV""[X S ERR=$S(""Z""[X:31,1:27) D ^XINDX1"
^XTMP("XPDT",7758,"RTN","XINDX9",71,0)="FX S X=""$""_F1,CH="""" D FNC(""$F""),ADD,SUM(""F"") Q"
^XTMP("XPDT",7758,"RTN","XINDX9",72,0)="SPV S X=S D FNC(""$V""),ADD,SUM(""V"") S X=$E(S,2,9),CH="""""
^XTMP("XPDT",7758,"RTN","XINDX9",73,0)=" I $E(S,2)=""Z"" D E^XINDX1(28) Q"
^XTMP("XPDT",7758,"RTN","XINDX9",74,0)=" I '$D(IND(""SVN"",X)) D E^XINDX1(4)"
^XTMP("XPDT",7758,"RTN","XINDX9",75,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",76,0)="EXT ;EXTRINSIC"
^XTMP("XPDT",7758,"RTN","XINDX9",77,0)=" S X=S,CH="""" D FNC(""$$""),ADD,SUM(""V"") Q"
^XTMP("XPDT",7758,"RTN","XINDX9",78,0)="SSVN ;Error 54 access for Kernel only"
^XTMP("XPDT",7758,"RTN","XINDX9",79,0)=" D INC S X=$$GVAR() I '$D(IND(""SSVN"",$E(X,3,99))) D E^XINDX1(4) Q  ;Need new #"
^XTMP("XPDT",7758,"RTN","XINDX9",80,0)=" D E^XINDX1(54),ADD,SUM(""V"") Q"
^XTMP("XPDT",7758,"RTN","XINDX9",81,0)="PKG ;External Function"
^XTMP("XPDT",7758,"RTN","XINDX9",82,0)=" S J=$F(STR,""("",I),I=J-2,X=S_$E(STR,LL,I),LL=J-1,CH="""""
^XTMP("XPDT",7758,"RTN","XINDX9",83,0)=" D ADD,E^XINDX1(55) ;Not standard VA"
^XTMP("XPDT",7758,"RTN","XINDX9",84,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",85,0)="E D E^XINDX1(11)"
^XTMP("XPDT",7758,"RTN","XINDX9",86,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",87,0)="PAT N PC S PC=0"
^XTMP("XPDT",7758,"RTN","XINDX9",88,0)=" F I=I+1:1 S CH=$E(STR,I) D PATQ:CH=Q,PATD:CH=""("",PATU:CH="")"",PATC:CH="","" I CH=""""!(CH'?1N&(""ACELNPUacelnpu.""'[CH)) Q"
^XTMP("XPDT",7758,"RTN","XINDX9",89,0)=" I PC D E^XINDX1(5)"
^XTMP("XPDT",7758,"RTN","XINDX9",90,0)=" S I=I-1 I "":),@+-_*/\!&'""'[CH D E^XINDX1(16),SEP Q"
^XTMP("XPDT",7758,"RTN","XINDX9",91,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",92,0)=" ;Quote in Pattern"
^XTMP("XPDT",7758,"RTN","XINDX9",93,0)="PATQ F I=I+1:1 S CH=$E(STR,I) Q:CH=""""!(CH=Q)"
^XTMP("XPDT",7758,"RTN","XINDX9",94,0)=" D:CH="""" E^XINDX1(6) S I=I+1,CH=$E(STR,I) G:CH=Q PATQ"
^XTMP("XPDT",7758,"RTN","XINDX9",95,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",96,0)="PATD S PC=PC+1,CH=""."" ;p110 Start Alt."
^XTMP("XPDT",7758,"RTN","XINDX9",97,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",98,0)="PATU I 'PC,LV>1 S CH="""" Q  ;End"
^XTMP("XPDT",7758,"RTN","XINDX9",99,0)=" S PC=PC-1,CH=""."" ;p110 End Alt."
^XTMP("XPDT",7758,"RTN","XINDX9",100,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",101,0)="PATC I PC<1 Q  ;"
^XTMP("XPDT",7758,"RTN","XINDX9",102,0)=" S CH=""."" ;p110 Comma in Alt."
^XTMP("XPDT",7758,"RTN","XINDX9",103,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",104,0)="PAREN F I=I+1:1 S CH=$E(STR,I) Q:CH=""""!(CH="")"")"
^XTMP("XPDT",7758,"RTN","XINDX9",105,0)=" D:CH="""" E^XINDX1(5) S CH=""."""
^XTMP("XPDT",7758,"RTN","XINDX9",106,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",107,0)="SEP ;Find sep"
^XTMP("XPDT",7758,"RTN","XINDX9",108,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",109,0)="SUM(P) ;Build summry line"
^XTMP("XPDT",7758,"RTN","XINDX9",110,0)=" S LV(LV,""S"")=$G(LV(LV,""S""))_P"
^XTMP("XPDT",7758,"RTN","XINDX9",111,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",112,0)="CASE(%) ;UpperCase"
^XTMP("XPDT",7758,"RTN","XINDX9",113,0)=" Q $TR(%,""abcdefghijklmnopqrstuvwxyz"",""ABCDEFGHIJKLMNOPQRSTUVWXYZ"")"
^XTMP("XPDT",7758,"RTN","XINDX9",114,0)=" ;"
^XTMP("XPDT",7758,"RTN","XINDX9",115,0)="TEST S STR=$E($T(TEST+2),4,999) D XINDX9"
^XTMP("XPDT",7758,"RTN","XINDX9",116,0)=" Q"
^XTMP("XPDT",7758,"RTN","XINDX9",117,0)=" ;;NUMVAL?.1(1""+"",1""-"")1(1.N.1""."".N,.N.1"".""1.N).1(1""E"".1(1""+"",1""-"")1.N)"
^XTMP("XPDT",7758,"VER")="8.0^22.0"
^XTMP("XPDT",7777)="1"
^XTMP("XPDT",7777,"BLD",1282,0)="XU*8.0*541^KERNEL^0^3100430^y"
^XTMP("XPDT",7777,"BLD",1282,1,0)="^^2^2^3100121^"
^XTMP("XPDT",7777,"BLD",1282,1,1,0)="Kernel patch XU*8.0*541; Update the Person Class file. Please refer to the"
^XTMP("XPDT",7777,"BLD",1282,1,2,0)="Description in Forum Patch Module for details."
^XTMP("XPDT",7777,"BLD",1282,4,0)="^9.64PA^^"
^XTMP("XPDT",7777,"BLD",1282,6)="^435"
^XTMP("XPDT",7777,"BLD",1282,6.3)="6"
^XTMP("XPDT",7777,"BLD",1282,"ABPKG")="n"
^XTMP("XPDT",7777,"BLD",1282,"INID")="^y"
^XTMP("XPDT",7777,"BLD",1282,"INIT")="POST^XU8P541"
^XTMP("XPDT",7777,"BLD",1282,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7777,"BLD",1282,"KRN",.4,0)=".4"
^XTMP("XPDT",7777,"BLD",1282,"KRN",.401,0)=".401"
^XTMP("XPDT",7777,"BLD",1282,"KRN",.402,0)=".402"
^XTMP("XPDT",7777,"BLD",1282,"KRN",.403,0)=".403"
^XTMP("XPDT",7777,"BLD",1282,"KRN",.5,0)=".5"
^XTMP("XPDT",7777,"BLD",1282,"KRN",.84,0)=".84"
^XTMP("XPDT",7777,"BLD",1282,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7777,"BLD",1282,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7777,"BLD",1282,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7777,"BLD",1282,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7777,"BLD",1282,"KRN",9.8,"NM",0)="^9.68A^3^3"
^XTMP("XPDT",7777,"BLD",1282,"KRN",9.8,"NM",1,0)="XUBA^^0^B8242595"
^XTMP("XPDT",7777,"BLD",1282,"KRN",9.8,"NM",2,0)="XU8P541A^^0^B83928330"
^XTMP("XPDT",7777,"BLD",1282,"KRN",9.8,"NM",3,0)="XUPCF^^0^B24166939"
^XTMP("XPDT",7777,"BLD",1282,"KRN",9.8,"NM","B","XU8P541A",2)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN",9.8,"NM","B","XUBA",1)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN",9.8,"NM","B","XUPCF",3)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN",19,0)="19"
^XTMP("XPDT",7777,"BLD",1282,"KRN",19,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7777,"BLD",1282,"KRN",19,"NM",1,0)="XU-INACTIVE PERSON CLASS USERS^^0"
^XTMP("XPDT",7777,"BLD",1282,"KRN",19,"NM","B","XU-INACTIVE PERSON CLASS USERS",1)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7777,"BLD",1282,"KRN",101,0)="101"
^XTMP("XPDT",7777,"BLD",1282,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7777,"BLD",1282,"KRN",771,0)="771"
^XTMP("XPDT",7777,"BLD",1282,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7777,"BLD",1282,"KRN",870,0)="870"
^XTMP("XPDT",7777,"BLD",1282,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7777,"BLD",1282,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7777,"BLD",1282,"KRN",8994,0)="8994"
^XTMP("XPDT",7777,"BLD",1282,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",.4,.4)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",.401,.401)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",.402,.402)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",.403,.403)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",.5,.5)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",.84,.84)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",19,19)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",101,101)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",771,771)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",870,870)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",8994,8994)=""
^XTMP("XPDT",7777,"BLD",1282,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7777,"BLD",1282,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7777,"BLD",1282,"QUES",0)="^9.62^^"
^XTMP("XPDT",7777,"BLD",1282,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7777,"BLD",1282,"REQB",1,0)="XU*8.0*536^2"
^XTMP("XPDT",7777,"BLD",1282,"REQB","B","XU*8.0*536",1)=""
^XTMP("XPDT",7777,"INIT")="POST^XU8P541"
^XTMP("XPDT",7777,"KRN",19,1511,-1)="0^1"
^XTMP("XPDT",7777,"KRN",19,1511,0)="XU-INACTIVE PERSON CLASS USERS^List Inactive Person Class Users^^R^^^^^^^^KERNEL"
^XTMP("XPDT",7777,"KRN",19,1511,1,0)="^19.06^2^2^3100114^^"
^XTMP("XPDT",7777,"KRN",19,1511,1,1,0)="This option lists users who currently have inactive Person "
^XTMP("XPDT",7777,"KRN",19,1511,1,2,0)="Classes and need to be assigned new Person Classes."
^XTMP("XPDT",7777,"KRN",19,1511,25)="PR^XUBA"
^XTMP("XPDT",7777,"KRN",19,1511,"U")="LIST INACTIVE PERSON CLASS USE"
^XTMP("XPDT",7777,"MBREQ")="0"
^XTMP("XPDT",7777,"ORD",18,19)="19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA"
^XTMP("XPDT",7777,"ORD",18,19,0)="OPTION"
^XTMP("XPDT",7777,"PKG",3,-1)="1^1"
^XTMP("XPDT",7777,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7777,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7777,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7777,"PKG",3,22,1,0)="8.0^3090706^3090706^6"
^XTMP("XPDT",7777,"PKG",3,22,1,"PAH",1,0)="541^3100430"
^XTMP("XPDT",7777,"PKG",3,22,1,"PAH",1,1,0)="^^2^2^3100430"
^XTMP("XPDT",7777,"PKG",3,22,1,"PAH",1,1,1,0)="Kernel patch XU*8.0*541; Update the Person Class file. Please refer to the"
^XTMP("XPDT",7777,"PKG",3,22,1,"PAH",1,1,2,0)="Description in Forum Patch Module for details."
^XTMP("XPDT",7777,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7777,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7777,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7777,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7777,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7777,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7777,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7777,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7777,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7777,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7777,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7777,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7777,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7777,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7777,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7777,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7777,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7777,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7777,"QUES","XPM1","B")=""
^XTMP("XPDT",7777,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7777,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7777,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7777,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7777,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7777,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7777,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7777,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7777,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7777,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7777,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7777,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7777,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7777,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7777,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7777,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7777,"RTN")="4"
^XTMP("XPDT",7777,"RTN","XU8P541")="0^^B4649919^n/a"
^XTMP("XPDT",7777,"RTN","XU8P541",1,0)="XU8P541 ; BA/BP - LIST USERS HAVE INACTIVE PERSON CLASSES; 4/28/10"
^XTMP("XPDT",7777,"RTN","XU8P541",2,0)=" ;;8.0;KERNEL;**541**; July 10, 1995;Build 6"
^XTMP("XPDT",7777,"RTN","XU8P541",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7777,"RTN","XU8P541",4,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541",5,0)=" ;"
^XTMP("XPDT",7777,"RTN","XU8P541",6,0)="POST ;"
^XTMP("XPDT",7777,"RTN","XU8P541",7,0)=" D ADDOP ;add a new option under the XUSER menu option"
^XTMP("XPDT",7777,"RTN","XU8P541",8,0)=" D UPDPSC ;update the Person Class file"
^XTMP("XPDT",7777,"RTN","XU8P541",9,0)=" D DELXU8P ;delete the routine XU8P541A"
^XTMP("XPDT",7777,"RTN","XU8P541",10,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541",11,0)=" ;"
^XTMP("XPDT",7777,"RTN","XU8P541",12,0)="ADDOP ; Add a new option under the XUSER menu option."
^XTMP("XPDT",7777,"RTN","XU8P541",13,0)=" N XUA,XUB,XUC"
^XTMP("XPDT",7777,"RTN","XU8P541",14,0)=" S XUA=""XUSER"""
^XTMP("XPDT",7777,"RTN","XU8P541",15,0)=" S XUB=""XU-INACTIVE PERSON CLASS USERS"""
^XTMP("XPDT",7777,"RTN","XU8P541",16,0)=" IF $$FIND1^DIC(19,,""X"",XUA,,,),$$FIND1^DIC(19,,""X"",XUB,,,) S XUC=$$ADD^XPDMENU(XUA,XUB,,)"
^XTMP("XPDT",7777,"RTN","XU8P541",17,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541",18,0)=" ;"
^XTMP("XPDT",7777,"RTN","XU8P541",19,0)="UPDPSC ;"
^XTMP("XPDT",7777,"RTN","XU8P541",20,0)=" D DEL ;clean entry 1161 if existed"
^XTMP("XPDT",7777,"RTN","XU8P541",21,0)=" D ADD ;add entry 1161 in the file"
^XTMP("XPDT",7777,"RTN","XU8P541",22,0)=" D DEF^XU8P541A ;update definition for entries"
^XTMP("XPDT",7777,"RTN","XU8P541",23,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541",24,0)=" ;"
^XTMP("XPDT",7777,"RTN","XU8P541",25,0)="DELXU8P ;Delete the routine XU8P541A"
^XTMP("XPDT",7777,"RTN","XU8P541",26,0)=" N X S X=""XU8P541A"" X ^%ZOSF(""DEL"")"
^XTMP("XPDT",7777,"RTN","XU8P541",27,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541",28,0)=" ;"
^XTMP("XPDT",7777,"RTN","XU8P541",29,0)="ADD ;add the entry 1161 and 1162"
^XTMP("XPDT",7777,"RTN","XU8P541",30,0)=" N XUDATA S XUDATA=""1161^Transportation Services^Air Carrier^^^344800000X^^N"""
^XTMP("XPDT",7777,"RTN","XU8P541",31,0)=" D ADD1(XUDATA)"
^XTMP("XPDT",7777,"RTN","XU8P541",32,0)=" N XUDATA S XUDATA=""1162^Technologists, Technicians & Other Technical Service^Perfusionist^^V151002^242T00000X^^I"""
^XTMP("XPDT",7777,"RTN","XU8P541",33,0)=" D ADD1(XUDATA)"
^XTMP("XPDT",7777,"RTN","XU8P541",34,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541",35,0)=" ;"
^XTMP("XPDT",7777,"RTN","XU8P541",36,0)="ADD1(XUDATA) ; add single entry"
^XTMP("XPDT",7777,"RTN","XU8P541",37,0)=" N FDA,FDAIEN,XUD"
^XTMP("XPDT",7777,"RTN","XU8P541",38,0)=" S XUD=$G(XUDATA)"
^XTMP("XPDT",7777,"RTN","XU8P541",39,0)=" S FDAIEN(1)=$P(XUD,""^"")"
^XTMP("XPDT",7777,"RTN","XU8P541",40,0)=" S FDA(8932.1,""+1,"",.01)=$P(XUD,""^"",2)"
^XTMP("XPDT",7777,"RTN","XU8P541",41,0)=" S FDA(8932.1,""+1,"",1)=$P(XUD,""^"",3)"
^XTMP("XPDT",7777,"RTN","XU8P541",42,0)=" S FDA(8932.1,""+1,"",2)=$P(XUD,""^"",4)"
^XTMP("XPDT",7777,"RTN","XU8P541",43,0)=" S FDA(8932.1,""+1,"",3)=""a"""
^XTMP("XPDT",7777,"RTN","XU8P541",44,0)=" S FDA(8932.1,""+1,"",5)=$P(XUD,""^"",5)"
^XTMP("XPDT",7777,"RTN","XU8P541",45,0)=" S FDA(8932.1,""+1,"",6)=$P(XUD,""^"",6)"
^XTMP("XPDT",7777,"RTN","XU8P541",46,0)=" S FDA(8932.1,""+1,"",8)=$P(XUD,""^"",7)"
^XTMP("XPDT",7777,"RTN","XU8P541",47,0)=" S FDA(8932.1,""+1,"",90002)=$P(XUD,""^"",8)"
^XTMP("XPDT",7777,"RTN","XU8P541",48,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7777,"RTN","XU8P541",49,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541",50,0)=" ;"
^XTMP("XPDT",7777,"RTN","XU8P541",51,0)="DEL ; Delete entry"
^XTMP("XPDT",7777,"RTN","XU8P541",52,0)=" N DIK,DA S DIK=""^USC(8932.1,"",DA=1161 D ^DIK"
^XTMP("XPDT",7777,"RTN","XU8P541",53,0)=" N DIK,DA S DIK=""^USC(8932.1,"",DA=1162 D ^DIK"
^XTMP("XPDT",7777,"RTN","XU8P541",54,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541",55,0)=" ;"
^XTMP("XPDT",7777,"RTN","XU8P541A")="0^2^B83928330^n/a"
^XTMP("XPDT",7777,"RTN","XU8P541A",1,0)="XU8P541A ; BP/BDT - POST ROUTINE; 4/28/10"
^XTMP("XPDT",7777,"RTN","XU8P541A",2,0)=" ;;8.0;KERNEL;**541**;Jul 10, 1995;Build 6"
^XTMP("XPDT",7777,"RTN","XU8P541A",3,0)=" ;;""Per VHA Directive 2004-038, this routine should not be modified""."
^XTMP("XPDT",7777,"RTN","XU8P541A",4,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541A",5,0)="DEF ; Update definitions 751,761,768,784,802,803,804,822,824,826,832,843,847,870,872,886,902,1161,1162"
^XTMP("XPDT",7777,"RTN","XU8P541A",6,0)=" N XUI"
^XTMP("XPDT",7777,"RTN","XU8P541A",7,0)=" F XUI=751,761,768,784,802,803,804,822,824,826,832,843,847,870,872,886,902,1161,1162 D"
^XTMP("XPDT",7777,"RTN","XU8P541A",8,0)=" . D DEF1(XUI)"
^XTMP("XPDT",7777,"RTN","XU8P541A",9,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541A",10,0)=" ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",11,0)="DEF1(XUI) ; Update definition for single entry XUI"
^XTMP("XPDT",7777,"RTN","XU8P541A",12,0)=" N XUI1,XUDATA,XUY"
^XTMP("XPDT",7777,"RTN","XU8P541A",13,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7777,"RTN","XU8P541A",14,0)=" F XUY=1:1:100 S XUDATA=$T(@XUI+XUY) Q:XUDATA="" ;;END""  D "
^XTMP("XPDT",7777,"RTN","XU8P541A",15,0)=" . S ^TMP($J,""XUBA"",XUI,XUY,0)=$P(XUDATA,"";;"",2)"
^XTMP("XPDT",7777,"RTN","XU8P541A",16,0)=" S XUI1=XUI_"","""
^XTMP("XPDT",7777,"RTN","XU8P541A",17,0)=" D WP^DIE(8932.1,XUI1,11,""K"",""^TMP($J,""""XUBA"""",XUI)"")"
^XTMP("XPDT",7777,"RTN","XU8P541A",18,0)=" K ^TMP($J,""XUBA"")"
^XTMP("XPDT",7777,"RTN","XU8P541A",19,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541A",20,0)=" ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",21,0)="GETDATA ; get definition"
^XTMP("XPDT",7777,"RTN","XU8P541A",22,0)=" N XUI,XUY"
^XTMP("XPDT",7777,"RTN","XU8P541A",23,0)=" F XUI=751,761,768,784,802,803,804,822,824,826,832,843,847,870,872,886,902,1161,1162 D"
^XTMP("XPDT",7777,"RTN","XU8P541A",24,0)=" . S XUY=$G(^USC(8932.1,XUI,11,0)),XUY=$P(XUY,""^"",3)"
^XTMP("XPDT",7777,"RTN","XU8P541A",25,0)=" . I XUY>0 D GETDES(XUI,XUY)"
^XTMP("XPDT",7777,"RTN","XU8P541A",26,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541A",27,0)="GETDES(XUI,XUY) ; get definition"
^XTMP("XPDT",7777,"RTN","XU8P541A",28,0)=" N XUA,XUB"
^XTMP("XPDT",7777,"RTN","XU8P541A",29,0)=" W !,XUI,"" ;"""
^XTMP("XPDT",7777,"RTN","XU8P541A",30,0)=" F XUA=1:1:XUY W !,"" ;;"",$G(^USC(8932.1,XUI,11,XUA,0))"
^XTMP("XPDT",7777,"RTN","XU8P541A",31,0)=" W !,"" ;;END"""
^XTMP("XPDT",7777,"RTN","XU8P541A",32,0)=" Q"
^XTMP("XPDT",7777,"RTN","XU8P541A",33,0)=" ; information of definitions"
^XTMP("XPDT",7777,"RTN","XU8P541A",34,0)="751 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",35,0)=" ;;An anesthesiologist who specializes in the diagnosis and treatment of "
^XTMP("XPDT",7777,"RTN","XU8P541A",36,0)=" ;;addictions. "
^XTMP("XPDT",7777,"RTN","XU8P541A",37,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",38,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",39,0)=" ;;Additional Resources: A Certification of Added Qualifications (CAQ) was, "
^XTMP("XPDT",7777,"RTN","XU8P541A",40,0)=" ;;but is no longer issued by the American Osteopathic Board of "
^XTMP("XPDT",7777,"RTN","XU8P541A",41,0)=" ;;Anesthesiology."
^XTMP("XPDT",7777,"RTN","XU8P541A",42,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",43,0)="761 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",44,0)=" ;;An emergency medicine physician who specializes in non-hospital based "
^XTMP("XPDT",7777,"RTN","XU8P541A",45,0)=" ;;emergency medical services (e.g., disaster site, accident scene, "
^XTMP("XPDT",7777,"RTN","XU8P541A",46,0)=" ;;transport vehicle, etc.) to provide pre-hospital assessment, treatment, "
^XTMP("XPDT",7777,"RTN","XU8P541A",47,0)=" ;;and transport patients."
^XTMP("XPDT",7777,"RTN","XU8P541A",48,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",49,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",50,0)=" ;;Additional Resources: A Certification of Added Qualifications (CAQ) is "
^XTMP("XPDT",7777,"RTN","XU8P541A",51,0)=" ;;issued by the American Osteopathic Board of Emergency Medicine."
^XTMP("XPDT",7777,"RTN","XU8P541A",52,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",53,0)="768 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",54,0)=" ;;A family medicine physician who specializes in the diagnosis and "
^XTMP("XPDT",7777,"RTN","XU8P541A",55,0)=" ;;treatment of addictions. "
^XTMP("XPDT",7777,"RTN","XU8P541A",56,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",57,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",58,0)=" ;;Additional Resources: A Certification of Added Qualifications (CAQ) was, "
^XTMP("XPDT",7777,"RTN","XU8P541A",59,0)=" ;;but is no longer issued by the American Osteopathic Board of Family "
^XTMP("XPDT",7777,"RTN","XU8P541A",60,0)=" ;;Physicians."
^XTMP("XPDT",7777,"RTN","XU8P541A",61,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",62,0)="784 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",63,0)=" ;;An internal medicine physician who specializes in clinical and laboratory "
^XTMP("XPDT",7777,"RTN","XU8P541A",64,0)=" ;;immunology disease management."
^XTMP("XPDT",7777,"RTN","XU8P541A",65,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",66,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",67,0)=" ;;Additional Resources: A certification was, but is no longer issued by the "
^XTMP("XPDT",7777,"RTN","XU8P541A",68,0)=" ;;American Board of Internal Medicine."
^XTMP("XPDT",7777,"RTN","XU8P541A",69,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",70,0)="802 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",71,0)=" ;;A nuclear medicine physician who specializes in nuclear cardiology."
^XTMP("XPDT",7777,"RTN","XU8P541A",72,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",73,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",74,0)=" ;;A Certification of Added Qualifications (CAQ) was, but is no longer "
^XTMP("XPDT",7777,"RTN","XU8P541A",75,0)=" ;;issued by the American Osteopathic Board of Nuclear Medicine."
^XTMP("XPDT",7777,"RTN","XU8P541A",76,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",77,0)="803 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",78,0)=" ;;A nuclear medicine physician who specializes in nuclear imaging and "
^XTMP("XPDT",7777,"RTN","XU8P541A",79,0)=" ;;therapy."
^XTMP("XPDT",7777,"RTN","XU8P541A",80,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",81,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",82,0)=" ;;A Certification of Added Qualifications (CAQ) was, but is no longer "
^XTMP("XPDT",7777,"RTN","XU8P541A",83,0)=" ;;issued by the American Osteopathic Board of Nuclear Medicine."
^XTMP("XPDT",7777,"RTN","XU8P541A",84,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",85,0)="804 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",86,0)=" ;;A nuclear medicine physician who specializes in vivo and in vitro "
^XTMP("XPDT",7777,"RTN","XU8P541A",87,0)=" ;;nuclear medicine."
^XTMP("XPDT",7777,"RTN","XU8P541A",88,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",89,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",90,0)=" ;;A Certification of Added Qualifications (CAQ) was, but is no longer "
^XTMP("XPDT",7777,"RTN","XU8P541A",91,0)=" ;;issued by the American Osteopathic Board of Nuclear Medicine."
^XTMP("XPDT",7777,"RTN","XU8P541A",92,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",93,0)="822 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",94,0)=" ;;An otolaryngologist who specializes in facial plastic surgery. "
^XTMP("XPDT",7777,"RTN","XU8P541A",95,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",96,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",97,0)=" ;;A General Certificate was, but is no longer issued by the American "
^XTMP("XPDT",7777,"RTN","XU8P541A",98,0)=" ;;Osteopathic Board of Ophthalmology and Otolaryngology."
^XTMP("XPDT",7777,"RTN","XU8P541A",99,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",100,0)="824 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",101,0)=" ;;An otolaryngologist who specializes in the diagnosis and treatment of "
^XTMP("XPDT",7777,"RTN","XU8P541A",102,0)=" ;;otolaryngic allergies and other allergic diseases."
^XTMP("XPDT",7777,"RTN","XU8P541A",103,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",104,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",105,0)=" ;;A Certification of Added Qualifications (CAQ) is issued by the American "
^XTMP("XPDT",7777,"RTN","XU8P541A",106,0)=" ;;Osteopathic Board of Ophthalmology and Otolaryngology."
^XTMP("XPDT",7777,"RTN","XU8P541A",107,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",108,0)="826 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",109,0)=" ;;An otolaryngologist who specializes in the diagnosis and surgical "
^XTMP("XPDT",7777,"RTN","XU8P541A",110,0)=" ;;treatment of head and neck conditions."
^XTMP("XPDT",7777,"RTN","XU8P541A",111,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",112,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",113,0)=" ;;A General Certificate is issued by the American Osteopathic Board of "
^XTMP("XPDT",7777,"RTN","XU8P541A",114,0)=" ;;Ophthalmology and Otolaryngology."
^XTMP("XPDT",7777,"RTN","XU8P541A",115,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",116,0)="832 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",117,0)=" ;;A pathologist who specializes in the diagnosis of immunologic diseases."
^XTMP("XPDT",7777,"RTN","XU8P541A",118,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",119,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",120,0)=" ;;A Certification of Added Qualifications (CAQ) was, but is no longer "
^XTMP("XPDT",7777,"RTN","XU8P541A",121,0)=" ;;issued by the American Osteopathic Board of Pathology."
^XTMP("XPDT",7777,"RTN","XU8P541A",122,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",123,0)="843 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",124,0)=" ;;A pediatrician who specializes in clinical and laboratory immunology "
^XTMP("XPDT",7777,"RTN","XU8P541A",125,0)=" ;;disease management. "
^XTMP("XPDT",7777,"RTN","XU8P541A",126,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",127,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",128,0)=" ;;A certification was, but is no longer issued by the American Board of "
^XTMP("XPDT",7777,"RTN","XU8P541A",129,0)=" ;;Pediatrics."
^XTMP("XPDT",7777,"RTN","XU8P541A",130,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",131,0)="847 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",132,0)=" ;;A pediatrician who specializes in the diagnosis and treatment of "
^XTMP("XPDT",7777,"RTN","XU8P541A",133,0)=" ;;allergies, allergic reactions, and immunologic diseases in children. "
^XTMP("XPDT",7777,"RTN","XU8P541A",134,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",135,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",136,0)=" ;;A Certification of Special Qualifications (CSQ) is issued by the American "
^XTMP("XPDT",7777,"RTN","XU8P541A",137,0)=" ;;Osteopathic Board of Pediatrics."
^XTMP("XPDT",7777,"RTN","XU8P541A",138,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",139,0)="870 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",140,0)=" ;;A preventive medicine physician who specializes in preventive "
^XTMP("XPDT",7777,"RTN","XU8P541A",141,0)=" ;;medicine/occupational-environmental medicine, which is focused on "
^XTMP("XPDT",7777,"RTN","XU8P541A",142,0)=" ;;protecting the population from occupational and environmental conditions."
^XTMP("XPDT",7777,"RTN","XU8P541A",143,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",144,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",145,0)=" ;;A General Certificate is issued by the American Osteopathic Board of "
^XTMP("XPDT",7777,"RTN","XU8P541A",146,0)=" ;;Preventive Medicine."
^XTMP("XPDT",7777,"RTN","XU8P541A",147,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",148,0)="872 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",149,0)=" ;;A preventive medicine physician who specializes in the diagnosis and "
^XTMP("XPDT",7777,"RTN","XU8P541A",150,0)=" ;;treatment of sports related conditions and injuries. "
^XTMP("XPDT",7777,"RTN","XU8P541A",151,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",152,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",153,0)=" ;;A Certification of Added Qualifications (CAQ) is issued by the American "
^XTMP("XPDT",7777,"RTN","XU8P541A",154,0)=" ;;Osteopathic Board of Preventive Medicine."
^XTMP("XPDT",7777,"RTN","XU8P541A",155,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",156,0)="886 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",157,0)=" ;;A psychiatrist or neurologist who specializes in the diagnosis and "
^XTMP("XPDT",7777,"RTN","XU8P541A",158,0)=" ;;treatment of sports related conditions and injuries."
^XTMP("XPDT",7777,"RTN","XU8P541A",159,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",160,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",161,0)=" ;;A Certification of Added Qualifications (CAQ) was, but is no longer "
^XTMP("XPDT",7777,"RTN","XU8P541A",162,0)=" ;;issued by the American Osteopathic Board of Neurology and Psychiatry."
^XTMP("XPDT",7777,"RTN","XU8P541A",163,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",164,0)="902 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",165,0)=" ;;A surgeon who specializes in plastic and reconstructive surgery."
^XTMP("XPDT",7777,"RTN","XU8P541A",166,0)=" ;;Source: National Uniform Claim Committee, 2009"
^XTMP("XPDT",7777,"RTN","XU8P541A",167,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",168,0)=" ;;A General Certificate is issued by the American Osteopathic Board of "
^XTMP("XPDT",7777,"RTN","XU8P541A",169,0)=" ;;Surgery."
^XTMP("XPDT",7777,"RTN","XU8P541A",170,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",171,0)="1161 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",172,0)=" ;;An air company that the Federal Aviation Administration, the "
^XTMP("XPDT",7777,"RTN","XU8P541A",173,0)=" ;;certificate-holding district office (CHDO), regional Flight Standards "
^XTMP("XPDT",7777,"RTN","XU8P541A",174,0)=" ;;Division (RFSD) offices, and AFS-900 has verified that the company is "
^XTMP("XPDT",7777,"RTN","XU8P541A",175,0)=" ;;capable of operating safely and that it complies with the regulations and "
^XTMP("XPDT",7777,"RTN","XU8P541A",176,0)=" ;;standards prescribed by the Administrator."
^XTMP("XPDT",7777,"RTN","XU8P541A",177,0)=" ;;Source: Federal Aviation Administration"
^XTMP("XPDT",7777,"RTN","XU8P541A",178,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",179,0)=" ;;Additional Resources:"
^XTMP("XPDT",7777,"RTN","XU8P541A",180,0)=" ;;www.faa.gov/about/initiatives/atos/air_carrier/intro_to_part121_cert/"
^XTMP("XPDT",7777,"RTN","XU8P541A",181,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XU8P541A",182,0)="1162 ;"
^XTMP("XPDT",7777,"RTN","XU8P541A",183,0)=" ;;A perfusionist operates extracorporeal circulation and autotransfusion "
^XTMP("XPDT",7777,"RTN","XU8P541A",184,0)=" ;;equipment during any medical situation where it is necessary to support "
^XTMP("XPDT",7777,"RTN","XU8P541A",185,0)=" ;;or temporarily replace the patient's circulatory or respiratory function. "
^XTMP("XPDT",7777,"RTN","XU8P541A",186,0)=" ;;The perfusionist is knowledgeable concerning the variety of equipment "
^XTMP("XPDT",7777,"RTN","XU8P541A",187,0)=" ;;available to perform extracorporeal circulation functions and is "
^XTMP("XPDT",7777,"RTN","XU8P541A",188,0)=" ;;responsible, in consultation with the physician, for selecting the "
^XTMP("XPDT",7777,"RTN","XU8P541A",189,0)=" ;;appropriate equipment and techniques to be used."
^XTMP("XPDT",7777,"RTN","XU8P541A",190,0)=" ;; "
^XTMP("XPDT",7777,"RTN","XU8P541A",191,0)=" ;;Source: Health Professions Career and Education Directory, American "
^XTMP("XPDT",7777,"RTN","XU8P541A",192,0)=" ;;Medical Association [1/1/2007: new]"
^XTMP("XPDT",7777,"RTN","XU8P541A",193,0)=" ;;END"
^XTMP("XPDT",7777,"RTN","XUBA")="0^1^B8242595^n/a"
^XTMP("XPDT",7777,"RTN","XUBA",1,0)="XUBA ; BT/BP - LIST USERS HAVE INACTIVE PERSON CLASSES; 4/27/2010"
^XTMP("XPDT",7777,"RTN","XUBA",2,0)=" ;;8.0;KERNEL;**541**; July 10, 1995;Build 6"
^XTMP("XPDT",7777,"RTN","XUBA",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7777,"RTN","XUBA",4,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUBA",5,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUBA",6,0)="PR ; entry point of the option LIST USERS NEED TO BE ASSIGNED NEW PERSON CLASSES"
^XTMP("XPDT",7777,"RTN","XUBA",7,0)=" N DIR,XUA541,Y S DIR(""A"")=""Do you want to list active users only"",DIR(0)=""Y"",DIR(""B"")=""NO"" D ^DIR"
^XTMP("XPDT",7777,"RTN","XUBA",8,0)=" S XUA541=$G(Y) I XUA541=""^"" Q"
^XTMP("XPDT",7777,"RTN","XUBA",9,0)=" W @IOF,! S %ZIS=""MQ"" D ^%ZIS G:POP EXIT"
^XTMP("XPDT",7777,"RTN","XUBA",10,0)=" I $D(IO(""Q"")) S ZTIO=ION,ZTRTN=""PRNT^XUBA"",ZTSAVE(""XUA541"")="""",ZTDESC=""LIST USERS NEED PERSON CLASSES"" D ^%ZTLOAD D HOME^%ZIS"
^XTMP("XPDT",7777,"RTN","XUBA",11,0)=" I $D(ZTSK) W !,""Queued as task# "",ZTSK,!! D PAUSE G EXIT"
^XTMP("XPDT",7777,"RTN","XUBA",12,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUBA",13,0)="PRNT ; print the report"
^XTMP("XPDT",7777,"RTN","XUBA",14,0)=" U IO D INPSC,LIST(XUA541)"
^XTMP("XPDT",7777,"RTN","XUBA",15,0)=" N XUI,XUC,XUPG,XUB S XUC=0,XUPG=1,XUB=0"
^XTMP("XPDT",7777,"RTN","XUBA",16,0)=" N XUPSUP D PGBK ;set value of the page break for devices"
^XTMP("XPDT",7777,"RTN","XUBA",17,0)=" D HDR  ;Header"
^XTMP("XPDT",7777,"RTN","XUBA",18,0)=" S XUI="""" F  S XUI=$O(^TMP(""XUINPSCN"",$J,XUI)) Q:XUI=""""  D"
^XTMP("XPDT",7777,"RTN","XUBA",19,0)=" . W !,$G(XUI),?20,$G(^TMP(""XUINPSCN"",$J,XUI))"
^XTMP("XPDT",7777,"RTN","XUBA",20,0)=" . S XUC=XUC+1"
^XTMP("XPDT",7777,"RTN","XUBA",21,0)=" . X XUPSUP ;page set up and break"
^XTMP("XPDT",7777,"RTN","XUBA",22,0)=" I XUB=1 Q"
^XTMP("XPDT",7777,"RTN","XUBA",23,0)=" W !!!,""Number of users: "",XUC"
^XTMP("XPDT",7777,"RTN","XUBA",24,0)=" I $E(IOST,1,2)=""C-"" W !! D PAUSE"
^XTMP("XPDT",7777,"RTN","XUBA",25,0)=" D EXIT"
^XTMP("XPDT",7777,"RTN","XUBA",26,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUBA",27,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUBA",28,0)="INPSC ;get all inactive Person Class from the PERSON CLASS FILE."
^XTMP("XPDT",7777,"RTN","XUBA",29,0)=" N XUI,XUY,COUNT"
^XTMP("XPDT",7777,"RTN","XUBA",30,0)=" K ^TMP(""XUINPSC"",$J)"
^XTMP("XPDT",7777,"RTN","XUBA",31,0)=" S COUNT=$P($G(^USC(8932.1,0)),""^"",4)"
^XTMP("XPDT",7777,"RTN","XUBA",32,0)=" F XUI=1:1:COUNT D"
^XTMP("XPDT",7777,"RTN","XUBA",33,0)=" . I $$GET3^XUPCF(XUI)=""Inactive"" S ^TMP(""XUINPSC"",$J,XUI)=$$GET5^XUPCF(XUI)"
^XTMP("XPDT",7777,"RTN","XUBA",34,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUBA",35,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUBA",36,0)="LIST(XUA541) ; get all users who need to be assigned a new Person Class."
^XTMP("XPDT",7777,"RTN","XUBA",37,0)=" N XUI,XUY,XUV,XUIEN,%"
^XTMP("XPDT",7777,"RTN","XUBA",38,0)=" K ^TMP(""XUINPSCN"",$J)"
^XTMP("XPDT",7777,"RTN","XUBA",39,0)=" S XUIEN=0 F  S XUIEN=$O(^VA(200,XUIEN)) Q:XUIEN'>0  D"
^XTMP("XPDT",7777,"RTN","XUBA",40,0)=" . I XUA541=1,'(+$$ACTIVE^XUSER(XUIEN)) Q"
^XTMP("XPDT",7777,"RTN","XUBA",41,0)=" . S XUY=+$$GET^XUA4A72(XUIEN) Q:XUY'>0"
^XTMP("XPDT",7777,"RTN","XUBA",42,0)=" . I $D(^TMP(""XUINPSC"",$J,XUY)) D"
^XTMP("XPDT",7777,"RTN","XUBA",43,0)=" . . N XUNAME S XUNAME=$E($P($G(^VA(200,XUIEN,0)),""^""),1,18)"
^XTMP("XPDT",7777,"RTN","XUBA",44,0)=" . . I XUNAME'="""" S ^TMP(""XUINPSCN"",$J,XUNAME)=$E($P($$GET^XUA4A72(XUIEN),""^"",1,2),1,60)"
^XTMP("XPDT",7777,"RTN","XUBA",45,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUBA",46,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUBA",47,0)="CLEAN ;clean the global"
^XTMP("XPDT",7777,"RTN","XUBA",48,0)=" K ^TMP(""XUINPSC"",$J)"
^XTMP("XPDT",7777,"RTN","XUBA",49,0)=" K ^TMP(""XUINPSCN"",$J)"
^XTMP("XPDT",7777,"RTN","XUBA",50,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUBA",51,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUBA",52,0)="PGBK ;page break"
^XTMP("XPDT",7777,"RTN","XUBA",53,0)=" S XUPSUP=""I $Y>(IOSL-3) S XUPG=XUPG+1 W @IOF D HDR"""
^XTMP("XPDT",7777,"RTN","XUBA",54,0)=" I $E(IOST,1,2)=""C-"" S XUPSUP=""I $Y>(IOSL-3) S XUPG=XUPG+1 D PAUSE I XUB'=1 W @IOF D HDR"""
^XTMP("XPDT",7777,"RTN","XUBA",55,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUBA",56,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUBA",57,0)="HDR ;"
^XTMP("XPDT",7777,"RTN","XUBA",58,0)=" W ?IOM-40,""Report on "",$$FMTE^XLFDT($$DT^XLFDT),""    Page "",$G(XUPG),!"
^XTMP("XPDT",7777,"RTN","XUBA",59,0)=" W !,""User name:"",?20,""Currently has the inactive Person Class IEN^NAME:"""
^XTMP("XPDT",7777,"RTN","XUBA",60,0)=" W !,""----------"",?20,""-------------------------------------------------"""
^XTMP("XPDT",7777,"RTN","XUBA",61,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUBA",62,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUBA",63,0)="PAUSE ;"
^XTMP("XPDT",7777,"RTN","XUBA",64,0)=" W !,""Press RETURN to continue or '^' to exit: "" R XUB:DTIME"
^XTMP("XPDT",7777,"RTN","XUBA",65,0)=" I '$T S XUI=""zzzzzzzzz"""
^XTMP("XPDT",7777,"RTN","XUBA",66,0)=" I XUB[""^"" S XUI=""zzzzzzzzz"",XUB=1"
^XTMP("XPDT",7777,"RTN","XUBA",67,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUBA",68,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUBA",69,0)="EXIT ;"
^XTMP("XPDT",7777,"RTN","XUBA",70,0)=" D CLEAN"
^XTMP("XPDT",7777,"RTN","XUBA",71,0)=" D ^%ZISC"
^XTMP("XPDT",7777,"RTN","XUBA",72,0)=" K %ZIS,ZTDESC,ZTSK,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7777,"RTN","XUBA",73,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUPCF")="0^3^B24166939^n/a"
^XTMP("XPDT",7777,"RTN","XUPCF",1,0)="XUPCF ;BT/BP-OAK Person Class File APIs; 2/4/2010"
^XTMP("XPDT",7777,"RTN","XUPCF",2,0)=" ;;8.0;KERNEL;**541**; July 10, 1995;Build 6"
^XTMP("XPDT",7777,"RTN","XUPCF",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7777,"RTN","XUPCF",4,0)=" ;;these APIs are for updating Person Class File and for Kernal Team only."
^XTMP("XPDT",7777,"RTN","XUPCF",5,0)=" ;;"
^XTMP("XPDT",7777,"RTN","XUPCF",6,0)=" ;;REFERENCED BY: PROVIDER TYPE(B), PROVIDER TYPE(C), CLASSIFICATION(D), "
^XTMP("XPDT",7777,"RTN","XUPCF",7,0)=" ;;              AREA OF SPECIALIZATION(E), VA CODE(F), X12 CODE(G)"
^XTMP("XPDT",7777,"RTN","XUPCF",8,0)=" ;;^USC(8932.1,D0,0)= (#.01) PROVIDER TYPE [1F] ^ (#1) CLASSIFICATION [2F] ^ "
^XTMP("XPDT",7777,"RTN","XUPCF",9,0)=" ;;               ==>(#2) AREA OF SPECIALIZATION [3F] ^ (#3) STATUS [4S] ^ (#4) "
^XTMP("XPDT",7777,"RTN","XUPCF",10,0)=" ;;               ==>DATE INACTIVATED [5D] ^ (#5) VA CODE [6F] ^ (#6) X12 CODE "
^XTMP("XPDT",7777,"RTN","XUPCF",11,0)=" ;;               ==>[7F] ^ (#7) reserved [8F] ^ (#8) SPECIALTY CODE [9F] ^ "
^XTMP("XPDT",7777,"RTN","XUPCF",12,0)=" ;;^USC(8932.1,D0,11,0)=^8932.111^^  (#11) DEFINITION"
^XTMP("XPDT",7777,"RTN","XUPCF",13,0)=" ;;^USC(8932.1,D0,11,D1,0)= (#.01) DEFINITION [1W] ^ "
^XTMP("XPDT",7777,"RTN","XUPCF",14,0)=" ;;^USC(8932.1,D0,90002)=  ^ (#90002) INDIVIDUAL/NON [2S] ^"
^XTMP("XPDT",7777,"RTN","XUPCF",15,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUPCF",16,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",17,0)="GET(XUIEN) ;"
^XTMP("XPDT",7777,"RTN","XUPCF",18,0)=" I $G(XUIEN)'=+$G(XUIEN) W !,""Invalid IEN"" Q"
^XTMP("XPDT",7777,"RTN","XUPCF",19,0)=" W !,""PROVIDER TYPE"",?24,"": "",$$GET01(XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",20,0)=" W !,""CLASSIFICATION"",?24,"": "",$$GET1(XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",21,0)=" W !,""AREA OF SPECIALIZATION"",?24,"": "",$$GET2(XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",22,0)=" W !,""STATUS"",?24,"": "",$$GET3(XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",23,0)=" W !,""DATE INACTIVATED"",?24,"": "",$$GET4(XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",24,0)=" W !,""VA CODE"",?24,"": "",$$GET5(XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",25,0)=" W !,""X12 CODE"",?24,"": "",$$GET6(XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",26,0)=" W !,""SPECIALTY CODE"",?24,"": "",$$GET8(XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",27,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUPCF",28,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",29,0)="SET(XUIEN,XUDATA) ;"
^XTMP("XPDT",7777,"RTN","XUPCF",30,0)=" I $G(XUIEN)'=+$G(XUIEN) W !,""Invalid IEN"" Q"
^XTMP("XPDT",7777,"RTN","XUPCF",31,0)=" I $G(XUDATA)="""" W !,""Invalid data"" Q"
^XTMP("XPDT",7777,"RTN","XUPCF",32,0)=" N XUDA01 S XUDA01=$P(XUDATA,""^"",1),XUDA01=$$SET01(XUDA01,XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",33,0)=" N XUDA1 S XUDA1=$P(XUDATA,""^"",2),XUDA1=$$SET1(XUDA01,XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",34,0)=" N XUDA2 S XUDA2=$P(XUDATA,""^"",3),XUDA2=$$SET2(XUDA2,XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",35,0)=" N XUDA3 S XUDA3=$P(XUDATA,""^"",4),XUDA3=$$SET3(XUDA3,XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",36,0)=" N XUDA4 S XUDA4=$P(XUDATA,""^"",5),XUDA4=$$SET4(XUDA4,XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",37,0)=" N XUDA5 S XUDA5=$P(XUDATA,""^"",6),XUDA5=$$SET5(XUDA5,XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",38,0)=" N XUDA6 S XUDA6=$P(XUDATA,""^"",7),XUDA6=$$SET6(XUDA6,XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",39,0)=" N XUDA8 S XUDA8=$P(XUDATA,""^"",8),XUDA8=$$SET8(XUDA8,XUIEN)"
^XTMP("XPDT",7777,"RTN","XUPCF",40,0)=" Q"
^XTMP("XPDT",7777,"RTN","XUPCF",41,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",42,0)="GET01(XUIEN) ;get PROVIDER TYPE by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",43,0)=" N XUNAME"
^XTMP("XPDT",7777,"RTN","XUPCF",44,0)=" I $G(XUIEN)'=+$G(XUIEN) Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",45,0)=" S XUNAME=$G(^USC(8932.1,XUIEN,0)) I XUNAME="""" Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",46,0)=" Q $P(XUNAME,""^"",1)"
^XTMP("XPDT",7777,"RTN","XUPCF",47,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",48,0)="SET01(XUPRO,XUIEN) ;set/add a new PROVIDER TYPE by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",49,0)=" I $G(XUPRO)="""" Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",50,0)=" I $G(XUIEN)'=+$G(XUIEN) Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",51,0)=" N FDA,FDAIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",52,0)=" S FDAIEN(1)=XUIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",53,0)=" S FDA(8932.1,""+1,"",.01)=XUPRO"
^XTMP("XPDT",7777,"RTN","XUPCF",54,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7777,"RTN","XUPCF",55,0)=" Q 1"
^XTMP("XPDT",7777,"RTN","XUPCF",56,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",57,0)="GET1(XUIEN) ;get CLASSIFICATION by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",58,0)=" N XUNAME"
^XTMP("XPDT",7777,"RTN","XUPCF",59,0)=" I $G(XUIEN)'=+$G(XUIEN) Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",60,0)=" S XUNAME=$G(^USC(8932.1,XUIEN,0)) I XUNAME="""" Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",61,0)=" Q $P(XUNAME,""^"",2)"
^XTMP("XPDT",7777,"RTN","XUPCF",62,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",63,0)="SET1(XUPRO,XUIEN) ;set/add CLASSIFICATION by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",64,0)=" I $G(XUPRO)="""" Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",65,0)=" I $G(XUIEN)'=+$G(XUIEN) Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",66,0)=" N FDA,FDAIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",67,0)=" S FDAIEN(1)=XUIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",68,0)=" S FDA(8932.1,""+1,"",1)=XUPRO"
^XTMP("XPDT",7777,"RTN","XUPCF",69,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7777,"RTN","XUPCF",70,0)=" Q 1"
^XTMP("XPDT",7777,"RTN","XUPCF",71,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",72,0)="GET2(XUIEN) ;get AREA OF SPECIALIZATION by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",73,0)=" N XUNAME"
^XTMP("XPDT",7777,"RTN","XUPCF",74,0)=" I $G(XUIEN)'=+$G(XUIEN) Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",75,0)=" S XUNAME=$G(^USC(8932.1,XUIEN,0)) I XUNAME="""" Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",76,0)=" Q $P(XUNAME,""^"",3)"
^XTMP("XPDT",7777,"RTN","XUPCF",77,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",78,0)="SET2(XUPRO,XUIEN) ;set/add AREA OF SPECIALIZATION by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",79,0)=" I $G(XUPRO)="""" Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",80,0)=" I $G(XUIEN)'=+$G(XUIEN) Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",81,0)=" N FDA,FDAIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",82,0)=" S FDAIEN(1)=XUIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",83,0)=" S FDA(8932.1,""+1,"",2)=XUPRO"
^XTMP("XPDT",7777,"RTN","XUPCF",84,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7777,"RTN","XUPCF",85,0)=" Q 1"
^XTMP("XPDT",7777,"RTN","XUPCF",86,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",87,0)="GET3(XUIEN) ;get STATUS by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",88,0)=" N XUNAME"
^XTMP("XPDT",7777,"RTN","XUPCF",89,0)=" I $G(XUIEN)'=+$G(XUIEN) Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",90,0)=" S XUNAME=$G(^USC(8932.1,XUIEN,0)) I XUNAME="""" Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",91,0)=" I $P(XUNAME,""^"",4)=""a"" Q ""Active"""
^XTMP("XPDT",7777,"RTN","XUPCF",92,0)=" Q ""Inactive"""
^XTMP("XPDT",7777,"RTN","XUPCF",93,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",94,0)="SET3(XUPRO,XUIEN) ;set/add STATUS by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",95,0)=" I $G(XUPRO)="""" Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",96,0)=" I $G(XUIEN)'=+$G(XUIEN) Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",97,0)=" N FDA,FDAIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",98,0)=" S FDAIEN(1)=XUIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",99,0)=" S FDA(8932.1,""+1,"",3)=XUPRO"
^XTMP("XPDT",7777,"RTN","XUPCF",100,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7777,"RTN","XUPCF",101,0)=" Q 1"
^XTMP("XPDT",7777,"RTN","XUPCF",102,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",103,0)="GET4(XUIEN) ;get DATE INACTIVATED by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",104,0)=" N XUNAME,XUDATE"
^XTMP("XPDT",7777,"RTN","XUPCF",105,0)=" I $G(XUIEN)'=+$G(XUIEN) Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",106,0)=" S XUNAME=$G(^USC(8932.1,XUIEN,0)) I XUNAME="""" Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",107,0)=" S XUDATE=$P(XUNAME,""^"",5)"
^XTMP("XPDT",7777,"RTN","XUPCF",108,0)=" Q $$FMTE^XLFDT(XUDATE)"
^XTMP("XPDT",7777,"RTN","XUPCF",109,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",110,0)="SET4(XUPRO,XUIEN) ;set/add DATE INACTIVATED by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",111,0)=" I $G(XUPRO)="""" Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",112,0)=" I $G(XUIEN)'=+$G(XUIEN) Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",113,0)=" N FDA,FDAIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",114,0)=" S FDAIEN(1)=XUIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",115,0)=" S FDA(8932.1,""+1,"",4)=XUPRO"
^XTMP("XPDT",7777,"RTN","XUPCF",116,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7777,"RTN","XUPCF",117,0)=" Q 1"
^XTMP("XPDT",7777,"RTN","XUPCF",118,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",119,0)="GET5(XUIEN) ;get VA CODE by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",120,0)=" N XUNAME"
^XTMP("XPDT",7777,"RTN","XUPCF",121,0)=" I $G(XUIEN)'=+$G(XUIEN) Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",122,0)=" S XUNAME=$G(^USC(8932.1,XUIEN,0)) I XUNAME="""" Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",123,0)=" Q $P(XUNAME,""^"",6)"
^XTMP("XPDT",7777,"RTN","XUPCF",124,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",125,0)="SET5(XUPRO,XUIEN) ;set/add VA CODE by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",126,0)=" I $G(XUPRO)="""" Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",127,0)=" I $G(XUIEN)'=+$G(XUIEN) Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",128,0)=" N FDA,FDAIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",129,0)=" S FDAIEN(1)=XUIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",130,0)=" S FDA(8932.1,""+1,"",5)=XUPRO"
^XTMP("XPDT",7777,"RTN","XUPCF",131,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7777,"RTN","XUPCF",132,0)=" Q 1"
^XTMP("XPDT",7777,"RTN","XUPCF",133,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",134,0)="GET6(XUIEN) ;get X12 CODE by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",135,0)=" N XUNAME"
^XTMP("XPDT",7777,"RTN","XUPCF",136,0)=" I $G(XUIEN)'=+$G(XUIEN) Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",137,0)=" S XUNAME=$G(^USC(8932.1,XUIEN,0)) I XUNAME="""" Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",138,0)=" Q $P(XUNAME,""^"",7)"
^XTMP("XPDT",7777,"RTN","XUPCF",139,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",140,0)="SET6(XUPRO,XUIEN) ;set/add X12 CODE by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",141,0)=" I $G(XUPRO)="""" Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",142,0)=" I $G(XUIEN)'=+$G(XUIEN) Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",143,0)=" N FDA,FDAIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",144,0)=" S FDAIEN(1)=XUIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",145,0)=" S FDA(8932.1,""+1,"",6)=XUPRO"
^XTMP("XPDT",7777,"RTN","XUPCF",146,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7777,"RTN","XUPCF",147,0)=" Q 1"
^XTMP("XPDT",7777,"RTN","XUPCF",148,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",149,0)="GET8(XUIEN) ;get SPECIALTY CODE by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",150,0)=" N XUNAME"
^XTMP("XPDT",7777,"RTN","XUPCF",151,0)=" I $G(XUIEN)'=+$G(XUIEN) Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",152,0)=" S XUNAME=$G(^USC(8932.1,XUIEN,0)) I XUNAME="""" Q ""Invalid IEN"""
^XTMP("XPDT",7777,"RTN","XUPCF",153,0)=" Q $P(XUNAME,""^"",9)"
^XTMP("XPDT",7777,"RTN","XUPCF",154,0)=" ;"
^XTMP("XPDT",7777,"RTN","XUPCF",155,0)="SET8(XUPRO,XUIEN) ;set/addSPECIALTY CODE by IEN"
^XTMP("XPDT",7777,"RTN","XUPCF",156,0)=" I $G(XUPRO)="""" Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",157,0)=" I $G(XUIEN)'=+$G(XUIEN) Q 0"
^XTMP("XPDT",7777,"RTN","XUPCF",158,0)=" N FDA,FDAIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",159,0)=" S FDAIEN(1)=XUIEN"
^XTMP("XPDT",7777,"RTN","XUPCF",160,0)=" S FDA(8932.1,""+1,"",8)=XUPRO"
^XTMP("XPDT",7777,"RTN","XUPCF",161,0)=" D UPDATE^DIE("""",""FDA"",""FDAIEN"",""ERR"")"
^XTMP("XPDT",7777,"RTN","XUPCF",162,0)=" Q 1"
^XTMP("XPDT",7777,"VER")="8.0^22.0"
^XTMP("XPDT",7799)="1"
^XTMP("XPDT",7799,"BLD",8373,0)="GMRC*3.0*64^CONSULT/REQUEST TRACKING^0^3100204^y"
^XTMP("XPDT",7799,"BLD",8373,1,0)="^^7^7^3100204^^"
^XTMP("XPDT",7799,"BLD",8373,1,1,0)="This patch stores and provides an audit of the PREVIOUS ATTENTION TO "
^XTMP("XPDT",7799,"BLD",8373,1,2,0)="field.  The value is displayed in the Details section of the Consult"
^XTMP("XPDT",7799,"BLD",8373,1,3,0)="order.  In Vista, the patch prompts the user with the current ATTENTION "
^XTMP("XPDT",7799,"BLD",8373,1,4,0)="value which they are then allowed to change, if needed.  This patch also"
^XTMP("XPDT",7799,"BLD",8373,1,5,0)="prevents consults in a status of ""PR"" and consults with unsigned or"
^XTMP("XPDT",7799,"BLD",8373,1,6,0)="uncosigned notes from being forwarded to a new service.  The patch also "
^XTMP("XPDT",7799,"BLD",8373,1,7,0)="corrects the lock in GMRCGUIA which was missing a time out value."
^XTMP("XPDT",7799,"BLD",8373,4,0)="^9.64PA^123^1"
^XTMP("XPDT",7799,"BLD",8373,4,123,0)="123"
^XTMP("XPDT",7799,"BLD",8373,4,123,2,0)="^9.641^123.02^1"
^XTMP("XPDT",7799,"BLD",8373,4,123,2,123.02,0)="REQUEST PROCESSING ACTIVITY  (sub-file)"
^XTMP("XPDT",7799,"BLD",8373,4,123,2,123.02,1,0)="^9.6411^7^1"
^XTMP("XPDT",7799,"BLD",8373,4,123,2,123.02,1,7,0)="PREVIOUSLY ASSIGNED TO"
^XTMP("XPDT",7799,"BLD",8373,4,123,222)="y^y^p^^^^n^^n"
^XTMP("XPDT",7799,"BLD",8373,4,123,224)=""
^XTMP("XPDT",7799,"BLD",8373,4,"APDD",123,123.02)=""
^XTMP("XPDT",7799,"BLD",8373,4,"APDD",123,123.02,7)=""
^XTMP("XPDT",7799,"BLD",8373,4,"B",123,123)=""
^XTMP("XPDT",7799,"BLD",8373,6)="4^"
^XTMP("XPDT",7799,"BLD",8373,6.3)="9"
^XTMP("XPDT",7799,"BLD",8373,"KRN",0)="^9.67PA^8989.52^19"
^XTMP("XPDT",7799,"BLD",8373,"KRN",.4,0)=".4"
^XTMP("XPDT",7799,"BLD",8373,"KRN",.401,0)=".401"
^XTMP("XPDT",7799,"BLD",8373,"KRN",.402,0)=".402"
^XTMP("XPDT",7799,"BLD",8373,"KRN",.403,0)=".403"
^XTMP("XPDT",7799,"BLD",8373,"KRN",.5,0)=".5"
^XTMP("XPDT",7799,"BLD",8373,"KRN",.84,0)=".84"
^XTMP("XPDT",7799,"BLD",8373,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7799,"BLD",8373,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7799,"BLD",8373,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7799,"BLD",8373,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7799,"BLD",8373,"KRN",9.8,"NM",0)="^9.68A^4^4"
^XTMP("XPDT",7799,"BLD",8373,"KRN",9.8,"NM",1,0)="GMRCAFRD^^0^B53980720"
^XTMP("XPDT",7799,"BLD",8373,"KRN",9.8,"NM",2,0)="GMRCGUIB^^0^B44471877"
^XTMP("XPDT",7799,"BLD",8373,"KRN",9.8,"NM",3,0)="GMRCGUIA^^0^B63812781"
^XTMP("XPDT",7799,"BLD",8373,"KRN",9.8,"NM",4,0)="GMRCSLM4^^0^B39443452"
^XTMP("XPDT",7799,"BLD",8373,"KRN",9.8,"NM","B","GMRCAFRD",1)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN",9.8,"NM","B","GMRCGUIA",3)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN",9.8,"NM","B","GMRCGUIB",2)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN",9.8,"NM","B","GMRCSLM4",4)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN",19,0)="19"
^XTMP("XPDT",7799,"BLD",8373,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7799,"BLD",8373,"KRN",101,0)="101"
^XTMP("XPDT",7799,"BLD",8373,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7799,"BLD",8373,"KRN",771,0)="771"
^XTMP("XPDT",7799,"BLD",8373,"KRN",870,0)="870"
^XTMP("XPDT",7799,"BLD",8373,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7799,"BLD",8373,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7799,"BLD",8373,"KRN",8994,0)="8994"
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",.4,.4)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",.401,.401)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",.402,.402)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",.403,.403)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",.5,.5)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",.84,.84)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",19,19)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",101,101)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",771,771)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",870,870)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7799,"BLD",8373,"KRN","B",8994,8994)=""
^XTMP("XPDT",7799,"BLD",8373,"QUES",0)="^9.62^^"
^XTMP("XPDT",7799,"BLD",8373,"REQB",0)="^9.611^3^3"
^XTMP("XPDT",7799,"BLD",8373,"REQB",1,0)="GMRC*3.0*39^2"
^XTMP("XPDT",7799,"BLD",8373,"REQB",2,0)="GMRC*3.0*50^2"
^XTMP("XPDT",7799,"BLD",8373,"REQB",3,0)="GMRC*3.0*55^2"
^XTMP("XPDT",7799,"BLD",8373,"REQB","B","GMRC*3.0*39",1)=""
^XTMP("XPDT",7799,"BLD",8373,"REQB","B","GMRC*3.0*50",2)=""
^XTMP("XPDT",7799,"BLD",8373,"REQB","B","GMRC*3.0*55",3)=""
^XTMP("XPDT",7799,"FIA",123)="REQUEST/CONSULTATION"
^XTMP("XPDT",7799,"FIA",123,0)="^GMR(123,"
^XTMP("XPDT",7799,"FIA",123,0,0)="123DI"
^XTMP("XPDT",7799,"FIA",123,0,1)="y^y^p^^^^n^^n"
^XTMP("XPDT",7799,"FIA",123,0,10)=""
^XTMP("XPDT",7799,"FIA",123,0,11)=""
^XTMP("XPDT",7799,"FIA",123,0,"RLRO")=""
^XTMP("XPDT",7799,"FIA",123,0,"VR")="3.0^GMRC"
^XTMP("XPDT",7799,"FIA",123,123)="1"
^XTMP("XPDT",7799,"FIA",123,123.02)="1"
^XTMP("XPDT",7799,"FIA",123,123.02,7)=""
^XTMP("XPDT",7799,"MBREQ")="0"
^XTMP("XPDT",7799,"PKG",300,-1)="1^1"
^XTMP("XPDT",7799,"PKG",300,0)="CONSULT/REQUEST TRACKING^GMRC^CONSULTS/REQUESTS"
^XTMP("XPDT",7799,"PKG",300,22,0)="^9.49I^1^1"
^XTMP("XPDT",7799,"PKG",300,22,1,0)="3.0^2980101^2980417^1271"
^XTMP("XPDT",7799,"PKG",300,22,1,"PAH",1,0)="64^3100204^33257"
^XTMP("XPDT",7799,"PKG",300,22,1,"PAH",1,1,0)="^^7^7^3100204"
^XTMP("XPDT",7799,"PKG",300,22,1,"PAH",1,1,1,0)="This patch stores and provides an audit of the PREVIOUS ATTENTION TO "
^XTMP("XPDT",7799,"PKG",300,22,1,"PAH",1,1,2,0)="field.  The value is displayed in the Details section of the Consult"
^XTMP("XPDT",7799,"PKG",300,22,1,"PAH",1,1,3,0)="order.  In Vista, the patch prompts the user with the current ATTENTION "
^XTMP("XPDT",7799,"PKG",300,22,1,"PAH",1,1,4,0)="value which they are then allowed to change, if needed.  This patch also"
^XTMP("XPDT",7799,"PKG",300,22,1,"PAH",1,1,5,0)="prevents consults in a status of ""PR"" and consults with unsigned or"
^XTMP("XPDT",7799,"PKG",300,22,1,"PAH",1,1,6,0)="uncosigned notes from being forwarded to a new service.  The patch also "
^XTMP("XPDT",7799,"PKG",300,22,1,"PAH",1,1,7,0)="corrects the lock in GMRCGUIA which was missing a time out value."
^XTMP("XPDT",7799,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7799,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7799,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7799,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7799,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7799,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7799,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7799,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7799,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7799,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7799,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7799,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7799,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7799,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7799,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7799,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7799,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7799,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7799,"QUES","XPM1","B")=""
^XTMP("XPDT",7799,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7799,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7799,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7799,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7799,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7799,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7799,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7799,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7799,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7799,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7799,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7799,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7799,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7799,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7799,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7799,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7799,"RTN")="4"
^XTMP("XPDT",7799,"RTN","GMRCAFRD")="0^1^B53980720^B39413623"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",1,0)="GMRCAFRD ;SLC/DLT,DCM,JFR - LM FORWARD ACTION ;7/11/03 14:02"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",2,0)=" ;;3.0;CONSULT/REQUEST TRACKING;**1,4,10,12,15,22,35,39,64**;DEC 27, 1997;Build 9"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",3,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",4,0)=" ; This routine invokes IA #2395"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",5,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",6,0)="FR(GMRCO) ;Forward Request to a new service"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",7,0)=" N ORVP,GMRCLCK,DFN,GMRCACT,GMRCSEQ,GMRCDOC"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",8,0)=" W !!,""Forward Request To Another Service For Action."""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",9,0)=" W !,""Select the service to send the consult to."",!"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",10,0)=" S:$D(GMRCSS) GMRCSSS=GMRCSS"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",11,0)=" N GMRCPL,GMRCPR,GMRCURG,GMRCDG,GMRCFF,GMRCORNP,GMRCAD,GMRCTO,GMRCADUZ,GMRCATTN,NEWATTN,GMRCPA"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",12,0)=" K GMRCQUT,GMRCSEL,GMRCSSS"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",13,0)=" I '$L($G(GMRCO)) D SELECT^GMRCA2(.GMRCO) I $D(GMRCQUT) D END Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",14,0)=" I '+$G(GMRCO) D END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",15,0)=" I $P($G(^GMR(123,GMRCO,12)),U,5)=""P"" D  Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",16,0)=" . N DIR"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",17,0)=" . W !,""The requesting facility may not take this action on an """
^XTMP("XPDT",7799,"RTN","GMRCAFRD",18,0)=" . W ""inter-facility consult."""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",19,0)=" . S DIR(0)=""E"" D ^DIR"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",20,0)=" . D END"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",21,0)=" . S GMRCQUT=1"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",22,0)=" I '$$LOCK^GMRCA1(GMRCO) D END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",23,0)=" S GMRCLCK=1"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",24,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",25,0)=" I $P(^GMR(123,GMRCO,0),""^"",12)<3 S GMRCMSG=""NO ACTION POSSIBLE. This Consult Has Already Been Completed Or Discontinued."" D EXAC^GMRCADC(GMRCMSG),END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",26,0)=" I $P(^GMR(123,GMRCO,0),""^"",12)=13 S GMRCMSG=""NO ACTION POSSIBLE. This Consult Has Already Been Cancelled."" D EXAC^GMRCADC(GMRCMSG),END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",27,0)=" I $P(^GMR(123,GMRCO,0),""^"",12)=9 D  Q:+$G(GMRCQUT)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",28,0)=" .S GMRCMSG=""Invalid action. This consult has partial results."""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",29,0)=" .S GMRCMSG(1)=""Remove the associated results before forwarding."""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",30,0)=" .D EXAC^GMRCADC(.GMRCMSG),END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",31,0)=" S GMRCSEQ=0,GMRCDOC="""" F  S GMRCSEQ=$O(^GMR(123,+GMRCO,50,GMRCSEQ)) Q:GMRCSEQ=""""  D  Q:+$G(GMRCQUT)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",32,0)=" . I $P($G(^GMR(123,+GMRCO,50,GMRCSEQ,0)),"";"",2)=""TIU(8925,"" S GMRCDOC=$P(^GMR(123,+GMRCO,50,GMRCSEQ,0),"";"",1)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",33,0)=" . I $G(GMRCDOC)="""" Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",34,0)=" . I $P($G(^TIU(8925,GMRCDOC,0)),U,5)=5 D"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",35,0)=" . . S GMRCMSG=""Invalid Action. This consult has an unsigned note."""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",36,0)=" . . D EXAC^GMRCADC(.GMRCMSG),END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",37,0)=" . I $P($G(^TIU(8925,GMRCDOC,0)),U,5)=6 D"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",38,0)=" . . S GMRCMSG=""Invalid Action. This consult has an uncosigned note."""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",39,0)=" . . D EXAC^GMRCADC(.GMRCMSG),END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",40,0)=" Q:+$G(GMRCQUT)  S GMRCSEQ=0,GMRCDOC="""" F  S GMRCSEQ=$O(^GMR(123,+GMRCO,40,GMRCSEQ)) Q:GMRCSEQ=""""  D  Q:+$G(GMRCQUT)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",41,0)=" . I $P($P($G(^GMR(123,+GMRCO,40,GMRCSEQ,0)),U,9),"";"",2)=""TIU(8925,"" S GMRCDOC=$P($P($G(^GMR(123,+GMRCO,40,GMRCSEQ,0)),U,9),"";"",1)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",42,0)=" . I $G(GMRCDOC)="""" Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",43,0)=" . I $P($G(^TIU(8925,GMRCDOC,0)),U,5)=5 D"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",44,0)=" . . S GMRCMSG=""Invalid Action. This consult has an unsigned note."""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",45,0)=" . . D EXAC^GMRCADC(.GMRCMSG),END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",46,0)=" . I $P($G(^TIU(8925,GMRCDOC,0)),U,5)=6 D"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",47,0)=" . . S GMRCMSG=""Invalid Action. This consult has an uncosigned note."""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",48,0)=" . . D EXAC^GMRCADC(.GMRCMSG),END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",49,0)=" Q:+$G(GMRCQUT)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",50,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",51,0)=" I $D(IOBM),$D(IOTM),$D(IOSTBM) D FULL^VALM1"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",52,0)=" I $P(^GMR(123,GMRCO,0),""^"",16) W !!,""This is a SERVICE ENTERED order stub.  Please send the written consult to the"",!,""Service, in addition to the automated forwarding!"""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",53,0)=" S DFN=+$P(^GMR(123,GMRCO,0),""^"",2)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",54,0)=" S GMRCTO=1,GMRCASV=""Forward Consult To Which Service/Specialty: """
^XTMP("XPDT",7799,"RTN","GMRCAFRD",55,0)=" D ASRV^GMRCASV K GMRCASV I $S($D(DTOUT):1,$D(DIROUT):1,$D(GMRCQUT):1,1:0) D END Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",56,0)=" I 'GMRCDG S GMRCMSG=""No Service Was Selected. Consult Was Not Forwarded To Any Service!"" D EXAC^GMRCADC(GMRCMSG),END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",57,0)=" S GMRCFF=$P(^GMR(123,GMRCO,0),""^"",5) I GMRCFF=+GMRCDG S GMRCMSG=""The Forwarding Service Cannot Forward A Consult To Itself!"" D EXAC^GMRCADC(GMRCMSG),END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",58,0)=" S GMRCATTN=$P($G(^GMR(123,GMRCO,0)),""^"",11)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",59,0)=" N DIE,DR"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",60,0)=" S DIE=""^GMR(123,"",DA=GMRCO,DR=""7//""_$S($G(GMRCATTN)'="""":GMRCATTN,1:"""")"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",61,0)=" D ^DIE"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",62,0)=" S NEWATTN=$P($G(^GMR(123,+GMRCO,0)),""^"",11)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",63,0)=" I NEWATTN'=GMRCATTN S GMRCPA=$G(GMRCATTN)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",64,0)=" S GETPROV=""Who is responsible for Forwarding the Consult?"""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",65,0)="FRGTPRV D GETPROV^GMRCAU I '$D(GMRCORNP) D END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",66,0)=" S GMRCACT=$$PROVIDER^XUSER(GMRCORNP) I $P(GMRCACT,U)'=1 D  G FRGTPRV"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",67,0)=" .W !!,""***User account is TERMINATED please choose another responsible user.***"""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",68,0)=" S GMRCAD=$$GETDT^GMRCUTL1 I GMRCAD=""^"" D END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",69,0)=" I '$G(GMRCAD) S GMRCAD=$$NOW^XLFDT"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",70,0)=" N GMRCSS,GMRCSSNM,GMRCA,GMRCMSG,GMRCIROL,GMRCINM,GMRCIROU,ORSTS"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",71,0)=" D DEFAULT"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",72,0)=" S GMRCSS=+GMRCDG"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",73,0)=" I +GMRCSS,'$D(^GMR(123.5,+GMRCSS,0)) S GMRCMSG=""Error in Service Chosen - SERVICE Does Not Exist!"" D EXAC^GMRCADC(GMRCMSG),END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",74,0)=" S GMRCSSNM=$S($L($G(^GMR(123.5,+GMRCSS,.1))):^(.1),1:$P($G(^GMR(123.5,+GMRCSS,0)),U,1))"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",75,0)=" D URG I $D(GMRCEND),GMRCEND D END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",76,0)=" S GMRCA=17,DR="""""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",77,0)=" I $D(^GMR(123.5,+GMRCSS,""IFC"")) D  ; if fwd to IFC serv, get extra flds"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",78,0)=" . S GMRCIROU=$P(^GMR(123.5,+GMRCSS,""IFC""),U) Q:GMRCIROU=""""  ;no rout fac"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",79,0)=" . S GMRCINM=$P(^GMR(123.5,+GMRCSS,""IFC""),U,2) Q:GMRCINM=""""  ;no serv nm"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",80,0)=" . S GMRCA=25,GMRCIROL=""P"""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",81,0)=" . S DR="".07////^S X=GMRCIROU;.125////^S X=GMRCIROL;.131///^S X=GMRCINM;"""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",82,0)=" S DIE=""^GMR(123,"",DA=GMRCO,ORSTS=5"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",83,0)=" S DR=DR_""1////^S X=GMRCSS;5////^S X=GMRCURGI;8////^S X=ORSTS;9////^S X=GMRCA;.1///@"""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",84,0)=" L +^GMR(123,GMRCO):2 I '$T K DIE,DA,DR S GMRCMSG=""Another User Is Accessing This Record. UPDATE WAS UNSUCCESSFUL."",GMRCMSG(1)=""Try Again Later."" D EXAC^GMRCADC(.GMRCMSG),END S GMRCQUT=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",85,0)=" D ^DIE L -^GMR(123,GMRCO) K DIE,DA,DR"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",86,0)=" S GMRCOM=1 D AUDIT^GMRCP ;GMRCORNP is the responsible provider here"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",87,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",88,0)=" I $G(GMRCLCK) D UNLOCK^GMRCA1(GMRCO) ;unlk before FWD changes order #"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",89,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",90,0)="FRMSG ; Common logic used by GUI and List Manager to process the HL7 message"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",91,0)=" ; to update the order in OE/RR and then forward an alert to recipients"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",92,0)=" ; is passed in as the DUZ instead of the responsible provider"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",93,0)=" D EN^GMRCHL7(DFN,GMRCO,$G(GMRCTYPE),$G(GMRCRB),""XX^FORWARD"",$G(DUZ),$G(VISIT),.GMRCOM,,$G(GMRCAD))"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",94,0)=" S GMRCADUZ="""""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",95,0)=" S GMRCORNP=$P(^GMR(123,GMRCO,0),""^"",14) ;This is the original provider that ordered the consult"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",96,0)=" I +$G(GMRCORNP) S GMRCADUZ(+GMRCORNP)="""" ;alert original provider of forward"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",97,0)=" S GMRCORTX=""Forwarded consult ""_$$ORTX^GMRCAU(+GMRCO)_"" (""_GMRCURG_"")"""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",98,0)=" D MSG^GMRCP(DFN,GMRCORTX,+GMRCO,27,.GMRCADUZ,1) ;GMRCO=IEN of consult from file 123; 27 is notification entry from file ORD(100.9"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",99,0)=" K GMRCOM"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",100,0)=" S GMRCDEV=$P($G(^GMR(123.5,GMRCSS,123)),""^"",9)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",101,0)=" I GMRCDEV D PRNT^GMRCUTL1(GMRCSS,+GMRCO)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",102,0)=" D END"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",103,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",104,0)="URG ;Get the default urgency"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",105,0)=" N X,Y,XQORM,DIROUT,DTOUT,DIRUT,DUOUT"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",106,0)=" I $P(^GMR(123,+GMRCO,0),""^"",18)[""I"" D"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",107,0)=" .I GMRCTYPE=""GMRCOR CONSULT"" S X=""GMRCURGENCYM CSLT - INPATIENT"""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",108,0)=" .S X=""GMRCURGENCYM REQ - INPATIENT"""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",109,0)=" E  S X=""GMRCURGENCYM - OUTPATIENT"""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",110,0)=" I '$D(GMRCURG) S GMRCURGI=$O(^ORD(101,""B"",""GMRCURGENCY - ROUTINE"","""")) S:+GMRCURGI GMRCURG=$P($G(^ORD(101,+GMRCURGI,0)),""^"",2)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",111,0)=" S Y=$O(^ORD(101,""B"",X,""""))"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",112,0)=" S XQORM=+Y_"";ORD(101,"",XQORM(0)=""1A\"",XQORM(""A"")=""Urgency: "",XQORM(""NO^^"")="""""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",113,0)=" S:$L(GMRCURG) XQORM(""B"")=GMRCURG D EN^XQORM I X=""^""!($D(DIROUT)) K XQORM S GMRCEND=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",114,0)=" K XQORM(0),XQORM(""A""),XQORM(""B""),XQORM(""NO^^"") S XQORM="""""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",115,0)=" I '$D(Y) S GMRCEND=1 Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",116,0)=" I $D(Y(1)) S GMRCURG=$P(Y(1),""^"",3),GMRCURGI=$P(Y(1),""^"",2)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",117,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",118,0)="DEFAULT ;Set up defaults for editing to be equal to the existing data."
^XTMP("XPDT",7799,"RTN","GMRCAFRD",119,0)=" D DEM^GMRCU"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",120,0)=" N GMRC,GMRCDIC,GMRCPLI,GMRCPRI"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",121,0)=" Q:'$D(GMRCO)  S (GMRCSS,GMRCSSNM,GMRCPL,GMRCPR,GMRCPRI,GMRCURG)="""""
^XTMP("XPDT",7799,"RTN","GMRCAFRD",122,0)=" S GMRCOM=0,GMRC(0)=$S($D(^GMR(123,+GMRCO,0)):^(0),1:"""")"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",123,0)=" S GMRCSS=$P(GMRC(0),""^"",5) I +GMRCSS,$D(^GMR(123.5,+GMRCSS,0)) S GMRCSSNM=$S($L($P($G(^GMR(123.5,+GMRCSS,0)),U,1)):$P(^(0),U,1),1:"""")"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",124,0)=" S GMRCPLI=$P(GMRC(0),""^"",10) I GMRCPLI S GMRCPL=$P($G(^ORD(101,GMRCPLI,0)),""^"",2)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",125,0)=" S GMRCURGI=$P(GMRC(0),""^"",9) I GMRCURGI S GMRCURG=$P($G(^ORD(101,GMRCURGI,0)),""^"",2)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",126,0)=" S GMRCPRI=$P(GMRC(0),""^"",8) I GMRCPRI[""ORD(101"" D"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",127,0)=" . S GMRCPR=$$GET1^DIQ(101,+GMRCPRI,1)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",128,0)=" I $L(GMRCPRI),GMRCPRI'[""ORD(101"" D  ;ZPROC"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",129,0)=" . S GMRCPR=$$GET1^DIQ(123.3,+GMRCPRI,.01)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",130,0)="TYPE ;This entry point is used when the only default needed is the GMRCTYPE"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",131,0)=" ;Called by GMRCGUIA to get variables ready for FRMSG call."
^XTMP("XPDT",7799,"RTN","GMRCAFRD",132,0)=" S GMRCTYPE=$$GET1^DIQ(123,+GMRCO,13,""I"") ;ZPROC (P or C)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",133,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",134,0)="END ;Kill off variables and exit"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",135,0)=" I $G(GMRCLCK) D UNLOCK^GMRCA1(GMRCO)"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",136,0)=" K GETPROV,GMRCDG,GMRCDEV,GMRCEND,GMRCFF,GMRCOM,GMRCIFN,GMRCO,GMRCORNP"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",137,0)=" K GMRCTYPE,GMRCORTX,GMRCPL,GMRCPR,GMRCSEL,GMRCURG,GMRCADUZ,Y"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",138,0)=" K DTOUT,DIROUT,DUOUT,GMRCURGI"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",139,0)=" S:$D(^TMP(""GMRC"",$J,""CURRENT"",""MENU"")) XQORM(""HIJACK"")=^(""MENU"")"
^XTMP("XPDT",7799,"RTN","GMRCAFRD",140,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIA")="0^3^B63812781^B46080556"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",1,0)="GMRCGUIA ;SLC/DCM,JFR - File Consult actions from GUI ;7/8/03 07:36"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",2,0)=" ;;3.0;CONSULT/REQUEST TRACKING;**1,4,12,15,22,35,64**;DEC 27, 1997;Build 9"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",3,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",4,0)=" ; This routine invokes IA #2638,#2926"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",5,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",6,0)="NEW(DFN,GMRCDA,GMRCLOC,GMRCTYPE,GMRCSVC,GMRCPROV,GMRCURG,GMRCPLI,GMRCNP,GMRCATN,GMRCINOT,GMRCDIAG,GMRCRFQ) ;Add a new consult for a patient."
^XTMP("XPDT",7799,"RTN","GMRCGUIA",7,0)=" ;DFN=Patient ^DPT( file number"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",8,0)=" ;GMRCRFQ=Reason For Request, why the consult is being ordered. Passed in as"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",9,0)=" ;    an array"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",10,0)=" ;GMRCDIAG=Povisional diagnosis; what is suspected to be the problem"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",11,0)=" ;GMRCTYPE=Request type -Consult or Procedure"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",12,0)=" ;GMRCLOC=Patient location."
^XTMP("XPDT",7799,"RTN","GMRCGUIA",13,0)=" ;GMRCDA=Date Time of Request"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",14,0)=" ;GMRCSVC=To Service; consulting service"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",15,0)=" ;GMRCLOC=Hospital Location ordering consult"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",16,0)=" ;GMRCPR=If a procedure, the procedure ordered (pointer to file 101)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",17,0)=" ;GMRCURG=Urgency of request (stat, routine, etc) from file 101"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",18,0)=" ;GMRCPLI=Place of consultation (bedside, consultants choice, etc.) from file 101"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",19,0)=" ;GMRCPROV=Sending Provider"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",20,0)=" ;GMRCATN=if consult is to go to a specific provider, this provider is identified here."
^XTMP("XPDT",7799,"RTN","GMRCGUIA",21,0)=" ;GMRCINOT=Service provided as Inpatient or Outpatient"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",22,0)=" N DIC,DLAYGO,Y,DIE,GMRCADUZ,X,GMRCO,DR"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",23,0)=" S DIC=""^GMR(123,"",DIC(0)=""L"",X=""""""N"""""",DLAYGO=123 D ^DIC K DLAYGO"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",24,0)=" S (DA,GMRCO)=+Y,GMRCSTS=5,GMRCA=1,DIE=DIC"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",25,0)=" L +^GMR(123,GMRCO):$S($G(DILOCKTM)>0:DILOCKTM,1:5)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",26,0)=" S DR="".02////^S X=DFN;.04////^S X=GMRCLOC;1////^S X=GMRCSVC;3////^S X=GMRCDA;4////^S X=GMRCPR;5////^S X=GMRCURG;6////^S X=GMRCPLI""_$S(GMRCATN]"""":""7////^S X=GMRCATN"",1:"""")"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",27,0)=" D ^DIE"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",28,0)=" S DR=""8////^S X=GMRCSTS;9////^S X=GMRCA;10////^S X=GMRCPROV;11////^S X=GMRCATN;13////^S X=GMRCTYPE;14////^S X=GMRCINOT""_$S($D(GMRCDIAG):""30:////^S X=GMRCDIAG"",1:"""")"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",29,0)=" D ^DIE L -^GMR(123,GMRCO)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",30,0)=" I $O(GMRCRFQ(0)) D REASON^GMRCGUIB(GMRCO,GMRCRFQ,GMRCDA)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",31,0)=" D EN^GMRCHL7(DFN,GMRCDA,GMRCTYPE,$G(GMRCRB),""NW"",DUZ,$G(VISIT),"""")"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",32,0)=" D EXIT"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",33,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",34,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",35,0)="RC(GMRCO,GMRCORNP,GMRCAD,GMRCMT,GMRCDUZ) ;Receive consult into service"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",36,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",37,0)=" ;Input variables:"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",38,0)=" ;GMRCO - The internal file number of the consult from File 123"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",39,0)=" ;GMRCORNP - Name of the person who actually 'Received'the consult "
^XTMP("XPDT",7799,"RTN","GMRCGUIA",40,0)=" ;GMRCDUZ - DUZ of person entering the consult as being 'RECEIVED'."
^XTMP("XPDT",7799,"RTN","GMRCGUIA",41,0)=" ;GMRCAD - Actual date time that consult was received into the service."
^XTMP("XPDT",7799,"RTN","GMRCGUIA",42,0)=" ;GMRCMT - array of comments if entered (by reference)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",43,0)=" ;   ARRAY(1)=""FIRST LINE OF COMMENT"""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",44,0)=" ;   ARRAY(2)=""SECOND LINE OF COMMENT"""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",45,0)=" ;GMRCDUZ - DUZ of person entering the consult as being 'RECEIVED'"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",46,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",47,0)=" ;Output:"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",48,0)=" ;GMRCERR - Error Condition Code: 0 = NO error, 1=error"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",49,0)=" ;GMRCERMS - Error message or null"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",50,0)=" ;  returned as GMRCERR^GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",51,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",52,0)=" N DFN,GMRCSTS,GMRCNOW,GMRCERR,GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",53,0)=" S GMRCERR=0,GMRCERMS="""",GMRCNOW=$$NOW^XLFDT"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",54,0)=" S:$G(GMRCAD)="""" GMRCAD=GMRCNOW"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",55,0)=" S:'$G(GMRCDUZ) GMRCDUZ=DUZ"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",56,0)=" S DFN=$P($G(^GMR(123,GMRCO,0)),""^"",2) I DFN="""" S GMRCERR=""1"",GMRCERMS=""Not A Valid Consult - File Not Found."" D EXIT Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",57,0)=" S GMRCSTS=6,GMRCA=21"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",58,0)=" D STATUS^GMRCP I $D(GMRCQUT) D EXIT Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",59,0)=" I '$O(GMRCMT(0)) D AUDIT^GMRCP"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",60,0)=" I $O(GMRCMT(0)) D"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",61,0)=" . S DA=$$SETDA^GMRCGUIB"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",62,0)=" . D SETCOM^GMRCGUIB(.GMRCMT,GMRCDUZ)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",63,0)=" D EN^GMRCHL7(DFN,GMRCO,"""","""",""SC"",GMRCORNP,"""","""")"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",64,0)=" D EXIT"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",65,0)=" Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",66,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",67,0)="DC(GMRCO,GMRCORNP,GMRCAD,GMRCACTM,GMRCOM) ;Discontinue or Deny a consult"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",68,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",69,0)=" ;Input variables:"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",70,0)=" ;GMRCO - Internal file number of consult from File 123"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",71,0)=" ;GMRCORNP - Provider who Discontinued or Denied consult"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",72,0)=" ;GMRCAD - FM date/time of actual activity."
^XTMP("XPDT",7799,"RTN","GMRCGUIA",73,0)=" ;GMRCACTM - set to ""DY"" if 'CANCELLED'(old DENY)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",74,0)=" ;           set to ""DC"" if consult is Discontinued "
^XTMP("XPDT",7799,"RTN","GMRCGUIA",75,0)=" ;GMRCOM - Comment array containing explanation of action"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",76,0)=" ;    Passed by reference in the following form :"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",77,0)=" ;     ARRAY(1)=""xxx xxx xxx"""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",78,0)=" ;     ARRAY(2)=""XXX XXX"""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",79,0)=" ;     ARRAY(3)=""XXX XXX xx"", etc."
^XTMP("XPDT",7799,"RTN","GMRCGUIA",80,0)=" ;  Comment is a required field when consult is denied or discontinued."
^XTMP("XPDT",7799,"RTN","GMRCGUIA",81,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",82,0)=" ;Output:"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",83,0)=" ;GMRCERR=Error Flag: 0 if no error, 1 if error occurred "
^XTMP("XPDT",7799,"RTN","GMRCGUIA",84,0)=" ;GMRCERMS - Error message or null"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",85,0)=" ; returned as GMRCERR^GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",86,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",87,0)=" N GMRCDUZ,DFN,GMRCNOW,GMRCSTS,GMRCERR,GMRCERMS,GMRCADUZ,GMRCTRLC"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",88,0)=" S GMRCERR=0,GMRCERMS="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",89,0)=" S GMRCDUZ=DUZ,GMRCERR=0,GMRCERMS="""",GMRCNOW=$$NOW^XLFDT"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",90,0)=" K GMRCQUT"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",91,0)=" S:$G(GMRCAD)="""" GMRCAD=GMRCNOW"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",92,0)=" S DFN=$P($G(^GMR(123,GMRCO,0)),""^"",2) I DFN="""" S GMRCERR=""1"",GMRCERMS=""Not A Valid Consult - File Not Found."" D EXIT Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",93,0)=" I '$D(GMRCOM) S GMRCERR=1,GMRCERMS=""Comments are required for this action."" D EXIT Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",94,0)=" S GMRCSTS=$P(^ORD(100.01,$P(^GMR(123,GMRCO,0),""^"",12),0),U,2)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",95,0)=" I GMRCSTS=""dc"" S GMRCERR=1,GMRCERMS=""Order Has Already Been Discontinued."" D EXIT Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",96,0)=" I GMRCSTS=""ca"" S GMRCERR=1,GMRCERMS=""Order Has Already Been Cancelled."" D EXIT Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",97,0)=" I GMRCSTS=""comp"" S GMRCERR=1,GMRCERMS=""Order Has Already Been Completed."" D EXIT Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",98,0)=" S GMRCA=$S(GMRCACTM=""DC"":6,1:19),GMRCSTS=$S(GMRCA=6:1,1:13)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",99,0)=" D STATUS^GMRCP I $D(GMRCQUT) D EXIT Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",100,0)=" I GMRCACTM=""DC"",$$DCPRNT^GMRCUTL1(GMRCO,DUZ) D PRNT^GMRCUTL1("""",GMRCO)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",101,0)=" S DA=$$SETDA^GMRCGUIB D SETCOM^GMRCGUIB(.GMRCOM)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",102,0)=" S GMRCOM(0)=DA"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",103,0)=" S GMRCTRLC=$S(GMRCACTM=""DC"":""OD"",1:""OC"")"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",104,0)=" D EN^GMRCHL7(DFN,GMRCO,$G(GMRCTYPE),$G(GMRCRB),GMRCTRLC,GMRCORNP,$G(GMRCVSIT),.GMRCOM,,GMRCAD)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",105,0)=" S GMRCORTX=$S(GMRCACTM=""DY"":""Cancelled"",1:""Discontinued"")_"" consult """
^XTMP("XPDT",7799,"RTN","GMRCGUIA",106,0)=" S GMRCORTX=GMRCORTX_$$ORTX^GMRCAU(+GMRCO)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",107,0)=" S GMRCADUZ="""",GMRCFL=0"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",108,0)=" I GMRCACTM=""DC"" D"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",109,0)=" . S GMRCFL=$$DCNOTE^GMRCADC(GMRCO,DUZ) ;NOTIFY SERVICE ON DC ?"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",110,0)=" I +$P($G(^GMR(123,+GMRCO,0)),""^"",14),$P(^(0),""^"",14)'=DUZ D"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",111,0)=" . S GMRCADUZ($P(^(0),""^"",14))="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",112,0)=" ;send notification"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",113,0)=" N NOTYPE S NOTYPE=$S(GMRCA=6:23,1:30)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",114,0)=" D MSG^GMRCP(DFN,GMRCORTX,+GMRCO,NOTYPE,.GMRCADUZ,GMRCFL)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",115,0)=" D EXIT"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",116,0)=" Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",117,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",118,0)="FR(GMRCO,GMRCSS,GMRCORNP,GMRCATTN,GMRCURGI,GMRCOM,GMRCAD) ;FWD consult"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",119,0)=" ;to another service"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",120,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",121,0)=" ;Input variables:"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",122,0)=" ;GMRCO=File 123 IEN of the consult record"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",123,0)=" ;GMRCSS=service being forwarded to; ptr to REQUEST SERVICES (#123.5)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",124,0)=" ;GMRCORNP=Provider Responsible for action"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",125,0)=" ;GMRCATTN=NEW PERSON to whose attention action should be directed"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",126,0)=" ;GMRCURGI=urgency from PROTOCOL(#101) file"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",127,0)=" ;GMRCOM=Comment array containing explanation of action"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",128,0)=" ;    Passed by reference in the following form :"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",129,0)=" ;     ARRAY(1)=""xxx xxx xxx"""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",130,0)=" ;     ARRAY(2)=""XXX XXX"""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",131,0)=" ;     ARRAY(3)=""XXX XXX xx"", etc."
^XTMP("XPDT",7799,"RTN","GMRCGUIA",132,0)=" ;GMRCAD=FM date/time of actual activity"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",133,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",134,0)=" ;Output:"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",135,0)=" ;  GMRCERR=Error Flag: 0 if no error, 1 if error occurred "
^XTMP("XPDT",7799,"RTN","GMRCGUIA",136,0)=" ;  GMRCERMS - Error message or null"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",137,0)=" ;     returned as GMRCERR^GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",138,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",139,0)=" N DR,GMRCDUZ,GMRCNOW,GMRCFF,GMRCFR,GMRCADUZ,GMRCURG,GMRCPA,GMRCSEQ,GMRCDOC"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",140,0)=" N GMRCERR,GMRCERMS,GMRCIROL,GMRCINM,GMRCIROU"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",141,0)=" S GMRCERR=0,GMRCERMS="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",142,0)=" I $P(^GMR(123,+GMRCO,0),U,12)=9 S GMRCERR=1,GMRCERMS=""Invalid action. This consult has partial results."""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",143,0)=" S GMRCSEQ=0,GMRCDOC="""" F  S GMRCSEQ=$O(^GMR(123,+GMRCO,50,GMRCSEQ)) Q:GMRCSEQ=""""  D  Q:+$G(GMRCERR)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",144,0)=" . I $P($G(^GMR(123,+GMRCO,50,GMRCSEQ,0)),"";"",2)=""TIU(8925,"" S GMRCDOC=$P(^GMR(123,+GMRCO,50,GMRCSEQ,0),"";"",1)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",145,0)=" . I $G(GMRCDOC)="""" Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",146,0)=" . I $P($G(^TIU(8925,GMRCDOC,0)),U,5)=5 D"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",147,0)=" . . S GMRCERMS=""Invalid Action. This consult has an unsigned note."",GMRCERR=1"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",148,0)=" . I $P($G(^TIU(8925,GMRCDOC,0)),U,5)=6 D"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",149,0)=" . . S GMRCERMS=""Invalid Action. This consult has an uncosigned note."",GMRCERR=1"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",150,0)=" S GMRCSEQ=0,GMRCDOC="""" F  S GMRCSEQ=$O(^GMR(123,+GMRCO,40,GMRCSEQ)) Q:GMRCSEQ=""""  D  Q:+$G(GMRCERR)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",151,0)=" . I $P($P($G(^GMR(123,+GMRCO,40,GMRCSEQ,0)),U,9),"";"",2)=""TIU(8925,"" S GMRCDOC=$P($P($G(^GMR(123,+GMRCO,40,GMRCSEQ,0)),U,9),"";"",1)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",152,0)=" . I $G(GMRCDOC)="""" Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",153,0)=" . I $P($G(^TIU(8925,GMRCDOC,0)),U,5)=5 D"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",154,0)=" . . S GMRCERMS=""Invalid Action. This consult has an unsigned note."",GMRCERR=1"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",155,0)=" . I $P($G(^TIU(8925,GMRCDOC,0)),U,5)=6 D"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",156,0)=" . . S GMRCERMS=""Invalid Action. This consult has an uncosigned note."",GMRCERR=1"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",157,0)=" I GMRCERR=1 D EXIT Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",158,0)=" S DFN=$P(^GMR(123,+GMRCO,0),U,2)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",159,0)=" S GMRCDUZ=DUZ,GMRCNOW=$$NOW^XLFDT"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",160,0)=" S:'$G(GMRCAD) GMRCAD=GMRCNOW  ;Actual FM date/time consult was FWD'd "
^XTMP("XPDT",7799,"RTN","GMRCGUIA",161,0)=" S:'$G(GMRCURGI) GMRCURGI=$P(^GMR(123,GMRCO,0),U,9)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",162,0)=" S GMRCA=17,GMRCSTS=5"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",163,0)=" S GMRCFF=$P($G(^GMR(123.5,+GMRCSS,123)),U,9) ;printed to new serv"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",164,0)=" S GMRCFR=$P($G(^GMR(123,+GMRCO,0)),""^"",5) ;Get current service"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",165,0)=" S GMRCPA=$P($G(^GMR(123,+GMRCO,0)),""^"",11) ;get current attention "
^XTMP("XPDT",7799,"RTN","GMRCGUIA",166,0)=" S DIE=""^GMR(123,"",DA=GMRCO,DR="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",167,0)=" I $D(^GMR(123.5,+GMRCSS,""IFC"")) D  ; if fwd to IFC serv, get extra flds"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",168,0)=" . S GMRCIROU=$P(^GMR(123.5,+GMRCSS,""IFC""),U) Q:GMRCIROU=""""  ;no rout fac"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",169,0)=" . S GMRCINM=$P(^GMR(123.5,+GMRCSS,""IFC""),U,2) Q:GMRCINM=""""  ;no serv nm"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",170,0)=" . S GMRCA=25,GMRCIROL=""P"""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",171,0)=" . S DR="".07////^S X=GMRCIROU;.125////^S X=GMRCIROL;.131///^S X=GMRCINM;"""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",172,0)=" S DR=DR_""1////^S X=$G(GMRCSS);5////^S X=$G(GMRCURGI);8////^S X=$G(GMRCSTS);9////^S X=$G(GMRCA);.1///@""_$S($L($G(GMRCATTN)):"";7////^S X=GMRCATTN"",1:"";7///@"")"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",173,0)=" L +^GMR(123,GMRCO):3 I '$T K DIE,DA,DR S GMRCERR=1,GMRCERMS=""Data Not Filed - File In Use By Another User."" D EXIT Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",174,0)=" D ^DIE L -^GMR(123,GMRCO) K DIE,DA,DR"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",175,0)=" S DA=$$SETDA^GMRCGUIB D SETCOM^GMRCGUIB(.GMRCOM)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",176,0)=" S GMRCURG=$P($G(^ORD(101,+GMRCURGI,0)),""^"",2)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",177,0)=" D DEM^GMRCU ;sets GMRCRB and other variables"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",178,0)=" D TYPE^GMRCAFRD ;sets GMRCTYPE"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",179,0)=" D FRMSG^GMRCAFRD ;create XX HL7 message for OE/RR and send alert "
^XTMP("XPDT",7799,"RTN","GMRCGUIA",180,0)=" D EXIT"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",181,0)=" Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",182,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",183,0)="RT(GMRCO,TMPGLOB) ;Set ^TMP(""GMRCR"",$J,""DT"", with results from med and TIU"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",184,0)=" ;GMRCO=IEN of consult from file 123"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",185,0)=" ;Set TMPGLOB to a ^TMP global other than ^TMP(""GMRCR"",$J,""MCAR"", or ^TMP(""GMRCR"",$J,""RES"", i.e., S TMPGLOB=""^TMP(""""GMRCR"""",$J,""""RT"""")""'"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",186,0)=" Q:'$G(GMRCO)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",187,0)=" K @TMPGLOB"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",188,0)=" S GMRCDVL="""",$P(GMRCDVL,""-"",41)="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIA",189,0)=" S GMRCSR=$P(^GMR(123,+GMRCO,0),""^"",15),GMRCTUFN=$P(^(0),""^"",20)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",190,0)=" S GMRCRTFL=$S('+GMRCSR&('GMRCTUFN):1,1:0)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",191,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",192,0)=" D GETRSLT^GMRCART(TMPGLOB)"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",193,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",194,0)=" D EXIT"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",195,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",196,0)="EXIT ;kill off variables for exit from actions"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",197,0)=" K GMRCA,GMRCDVL,GMRCSR,GMRCRTFL,GMRCFL,GMRCORNP,GMRCQUT,GMRCSTS,GMRCTUFN"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",198,0)=" K GMRCRTFL,GMRCADUZ,GMRCORTX"
^XTMP("XPDT",7799,"RTN","GMRCGUIA",199,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB")="0^2^B44471877^B43683798"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",1,0)="GMRCGUIB ;SLC/DCM,JFR,MA - GUI actions for consults ;8/19/03 07:31"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",2,0)=" ;;3.0;CONSULT/REQUEST TRACKING;**4,12,18,20,17,22,29,30,35,45,53,55,64**;DEC 27, 1997;Build 9"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",3,0)=" ; This routine invokes IA #2980"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",4,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",5,0)="SETDA() ;set DA of where audit actions are to be filed"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",6,0)=" S:'$D(^GMR(123,+GMRCO,40,0)) ^GMR(123,GMRCO,40,0)=""^123.02DA^^"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",7,0)=" S DA=$S($P(^GMR(123,+GMRCO,40,0),""^"",3):$P(^(0),""^"",3)+1,1:1)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",8,0)=" S $P(^GMR(123,+GMRCO,40,0),""^"",3,4)=DA_""^""_DA"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",9,0)=" Q DA"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",10,0)="REASON(GMRCFN,GMRCRQ,GMRCDT) ;Load the reason for the request into ^GMR(123,GMRCO,20"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",11,0)=" ;GMRCFN=File 123 IFN; GMRCRQ=Array containing Reason For Request"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",12,0)=" ;GMRCDT=Date time of entry"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",13,0)=" S ^GMR(123,GMRCFN,20,0)=""^^^""_GMRCDT_""^"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",14,0)=" S L=0,LN=1 F  S L=$O(GMRCRQ(L)) Q:L=""""  S ^GMR(123,GMRCFN,20,LN,0)=GMRCRQ(L),LN=LN+1"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",15,0)=" S LN=LN-1,$P(^GMR(123,GMRCFN,20,0),""^"",3)=LN"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",16,0)=" K LN,L"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",17,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",18,0)="SETCOM(COMMENT,WHO) ;Set comment array into tracking actions"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",19,0)=" N GMRCNOW,DR,DIE"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",20,0)=" S GMRCNOW=$$NOW^XLFDT"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",21,0)=" I $P($G(^GMR(123,+GMRCO,0)),""^"",11)=$G(GMRCPA) S GMRCPA="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",22,0)=" S DIE=""^GMR(123,GMRCO,40,"",DA(1)=GMRCO,DR="".01////^S X=GMRCNOW;1////^S X=GMRCA;2////^S X=GMRCAD;3////^S X=$G(GMRCORNP);4////^S X=$S($G(WHO):WHO,1:DUZ);6////^S X=$G(GMRCFR);8////^S X=$G(GMRCFF);7////^S X=$G(GMRCPA)"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",23,0)=" D ^DIE"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",24,0)=" S ^GMR(123,GMRCO,40,DA,1,0)=""^^^^""_GMRCAD_""^"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",25,0)=" S (GMRCND,GMRCND1)=0 F  S GMRCND1=$O(COMMENT(GMRCND1)) Q:GMRCND1=""""  S GMRCND=GMRCND+1,^GMR(123,GMRCO,40,DA,1,GMRCND,0)=COMMENT(GMRCND)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",26,0)=" S $P(^GMR(123,GMRCO,40,DA,1,0),""^"",3)=GMRCND,$P(^(0),""^"",4)=GMRCND,^GMR(123,GMRCO,40,""B"",GMRCNOW,DA)="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",27,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",28,0)=" ; if an IFC, call event handler to generate a msg to remote site"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",29,0)=" I $D(^GMR(123,+GMRCO,12)),$D(^(40,DA)) D TRIGR^GMRCIEVT(GMRCO,DA)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",30,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",31,0)=" K GMRCND,GMRCND1"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",32,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",33,0)="CMT(GMRCO,GMRCOM,GMRCADUZ,GMRCWHN,GMRCWHO) ;add comment to consult "
^XTMP("XPDT",7799,"RTN","GMRCGUIB",34,0)=" ; GMRCO = IEN from file 123"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",35,0)=" ; GMRCOM = array of comments in format GMRCOM(1)=""xxxx"", GMRCOM(2)=""xxx"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",36,0)=" ; GMRCADUZ = array of alert recipients as GMRCADUZ(DUZ)="""" (optional)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",37,0)=" ; GMRCWHO = IEN from file 200 who's responsible activity (optional)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",38,0)=" ; GMRCWHN = date time of activity in FM format"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",39,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",40,0)=" N DA,GMRCA,GMRCAD,GMRCORTX,GMRCDFN,GMRCTM,GMRCRP,GMRCUPD"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",41,0)=" S DA=$$SETDA ; get next activity tracking entry"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",42,0)=" S GMRCA=20,GMRCAD=GMRCWHN S:$G(GMRCWHO) GMRCORNP=GMRCWHO"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",43,0)=" D SETCOM(.GMRCOM,$G(GMRCWHO))"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",44,0)=" D  ;update LAST ACTION field even though no status change"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",45,0)=" . N GMRCDR,GMRCSTS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",46,0)=" . S GMRCSTS="""",GMRCDR=""9////20"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",47,0)=" . D STATUS^GMRCP"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",48,0)=" S GMRCDFN=$P(^GMR(123,+GMRCO,0),""^"",2)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",49,0)=" S GMRCORTX=""Comment Added to Consult """
^XTMP("XPDT",7799,"RTN","GMRCGUIB",50,0)=" I $P($G(^GMR(123,GMRCO,12)),U,5)=""P"" D"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",51,0)=" . S GMRCORTX=""Comment Added to remote consult """
^XTMP("XPDT",7799,"RTN","GMRCGUIB",52,0)=" S GMRCORTX=GMRCORTX_$$ORTX^GMRCAU(+GMRCO)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",53,0)=" S GMRCRP=+$P(^GMR(123,GMRCO,0),U,14)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",54,0)=" S GMRCUPD=$$VALID^GMRCAU($P(^GMR(123,+GMRCO,0),U,5),GMRCO,DUZ)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",55,0)=" I GMRCRP=DUZ D  ;alert team if ord. prov. takes the action"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",56,0)=" . S GMRCTM=1"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",57,0)=" I GMRCUPD>1,GMRCRP'=DUZ D  ; alert ord. prov if update users takes action"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",58,0)=" . S GMRCADUZ(GMRCRP)="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",59,0)=" I '$G(GMRCTM),GMRCUPD<2 D  ;alert both if not ord. prov or update user"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",60,0)=" . S GMRCTM=1,GMRCADUZ(GMRCRP)="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",61,0)=" D MSG^GMRCP(GMRCDFN,GMRCORTX,+GMRCO,63,.GMRCADUZ,$G(GMRCTM))"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",62,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",63,0)="SFILE(GMRCO,GMRCA,GMRCSF,GMRCORNP,GMRCDUZ,GMRCOM,GMRCALF,GMRCATO,GMRCAD) ;Process various file update functions from the GUI for a consult"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",64,0)=" ; ADMIN COMPLETE or SIGNIFICANT FINDINGS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",65,0)=" ;Input variables:"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",66,0)=" ;GMRCO=File 123 IEN of the consult record"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",67,0)=" ;GMRCA=pointer to REQUEST ACTION TYPES (#123.1) 10=complete, 4=Sig find."
^XTMP("XPDT",7799,"RTN","GMRCGUIB",68,0)=" ;GMRCSF=Significant Findings flag: 'Y'= significant finding"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",69,0)=" ;                                : 'N'= no significant finding"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",70,0)=" ;                                : 'U'=unknown significant finding"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",71,0)=" ;GMRCORNP=Provider Responsible for action"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",72,0)=" ;GMRCDUZ=Person actually doing the action"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",73,0)=" ;GMRCOM=An array of comments by reference ARRAY(1)=""xxx"",ARRAY(2)=""xxx"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",74,0)=" ;GMRCALF=Flag to signal that alerts are to be sent; 'N'=NO, 'Y'=YES"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",75,0)=" ;GMRCATO=Who alerts are to be sent to; a comma delimited string of DUZ's"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",76,0)=" ;GMRCAD =FM date/time of activity"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",77,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",78,0)=" ;Output:"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",79,0)=" ; GMRCERR=Error Flag: 0 if no error, 1 if error occurred"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",80,0)=" ; GMRCERMS - Error message or null"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",81,0)=" ;    returned as GMRCERR^GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",82,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",83,0)=" N GMRCERR,GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",84,0)=" L +^GMR(123,GMRCO):5 I '$T S GMRCERR=1,GMRCERMS=""Record Locked. File Update Not Accomplished."" Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",85,0)=" S GMRCERR=0,GMRCERMS="""",DR="""",GMRCORTX="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",86,0)=" N GMRCADUZ S GMRCADUZ="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",87,0)=" S GMRCNOW=$$NOW^XLFDT,GMRCSTS=$P(^GMR(123,+GMRCO,0),""^"",12),GMRCDFN=$P(^(0),""^"",2)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",88,0)=" I '$G(GMRCDUZ) S GMRCDUZ=DUZ"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",89,0)=" I '$G(GMRCAD) S GMRCAD=GMRCNOW"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",90,0)=" ;Insure comment array contains text for Complete action."
^XTMP("XPDT",7799,"RTN","GMRCGUIB",91,0)=" I GMRCA=10 D  I GMRCERR=1 S GMRCERMS=""Comment field must contain a text value!"" Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",92,0)=" . S GMRCERR=1"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",93,0)=" . I '$D(GMRCOM) Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",94,0)=" . N GMRCOM1 S GMRCOM1="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",95,0)=" . F  S GMRCOM1=$O(GMRCOM(GMRCOM1)) Q:(GMRCOM1=""""!(GMRCERR=0))  D"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",96,0)=" .. I $TR($G(GMRCOM(GMRCOM1)),"" "","""")'="""" S GMRCERR=0 Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",97,0)=" I +$G(GMRCA),GMRCA=10 D"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",98,0)=" .S GMRCSF=$G(GMRCSF,"""")"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",99,0)=" .S GMRCSTS=2"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",100,0)=" .S DR=""8////^S X=GMRCSTS;9////^S X=GMRCA;15////^S X=GMRCSF"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",101,0)=" .S GMRCORTX=""Completed Consult ""_$$ORTX^GMRCAU(+GMRCO)_$S(GMRCSF=""Y"":"" with Sig Findings"",GMRCSF=""N"":"" with no Sig Findings"",1:"""")"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",102,0)=" .I $P($G(^GMR(123,+GMRCO,0)),U,14) S GMRCADUZ($P($G(^(0)),U,14))="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",103,0)=" .Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",104,0)=" I $G(GMRCALF)=1 D"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",105,0)=" .N I"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",106,0)=" .F I=1:1  S X=$P(GMRCATO,"";"",I) Q:X=""""  S GMRCADUZ(X)="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",107,0)=" .Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",108,0)=" I $L(GMRCA),GMRCA=4 S DR=DR_$S($L(DR):"";"",1:"""")_""9////^S X=GMRCA;15////^S X=GMRCSF"" D"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",109,0)=" .S GMRCORTX=$S(GMRCSF=""Y"":""Sig Findings "",GMRCSF=""N"":""No Sig Findings "",1:""Unknown Sig Findings "")_""for consult ""_$$ORTX^GMRCAU(GMRCO)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",110,0)=" .I $P($G(^GMR(123,+GMRCO,0)),U,14) S GMRCADUZ($P($G(^(0)),U,14))="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",111,0)=" .Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",112,0)=" I $L(DR) S DIE=""^GMR(123,"",DA=GMRCO D ^DIE K DIE,DR"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",113,0)=" I '$O(GMRCOM(0)) D AUDIT^GMRCP"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",114,0)=" I $D(GMRCOM),$O(GMRCOM(0)) D"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",115,0)=" .N DA"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",116,0)=" .S DA=$$SETDA()"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",117,0)=" .D SETCOM(.GMRCOM,GMRCDUZ)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",118,0)=" .Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",119,0)=" L -^GMR(123,GMRCO)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",120,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",121,0)=" D MSG^GMRCP(GMRCDFN,GMRCORTX,+GMRCO,$S(GMRCA=20:63,1:23),.GMRCADUZ,0)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",122,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",123,0)=" I $S(GMRCA=10:1,(GMRCA=4&($P(^GMR(123,GMRCO,0),U,12)=2)):1,1:0) D"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",124,0)=" . D EN^GMRCHL7($P(^GMR(123,GMRCO,0),""^"",2),GMRCO,$G(GMRCTYPE),$G(GMRCRB),""RE"",GMRCORNP,$G(GMRCVSIT),.GMRCOM,,GMRCAD)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",125,0)=" K DIE,DR,DA,GMRCDT,GMRCNOW,GMRCAD,GMRCORNP,GMRCDUZ,GMRCRSLT,GMRCSTS,GMRCADUZ,GMRCORTX,GMRCDFN"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",126,0)=" Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",127,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",128,0)="SCH(GMRCO,GMRCORNP,GMRCAD,GMRCADUZ,GMRCMT) ;schedule a consult API"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",129,0)=" ; Input variables:"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",130,0)=" ;GMRCO - The internal file number of the consult from File 123"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",131,0)=" ;GMRCORNP - Name of the person who actually 'Received' the consult "
^XTMP("XPDT",7799,"RTN","GMRCGUIB",132,0)=" ;GMRCAD - Actual date time that consult was received into the service."
^XTMP("XPDT",7799,"RTN","GMRCGUIB",133,0)=" ;GMRCADUZ - array of alert recipients as chosen by user (by reference)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",134,0)=" ;   ARRAY(DUZ)="""" "
^XTMP("XPDT",7799,"RTN","GMRCGUIB",135,0)=" ;GMRCMT - array of comments if entered (by reference)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",136,0)=" ;   ARRAY(1)=""FIRST LINE OF COMMENT"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",137,0)=" ;   ARRAY(2)=""SECOND LINE OF COMMENT"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",138,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",139,0)=" ;Output:"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",140,0)=" ;GMRCERR - Error Condition Code: 0 = NO error, 1=error"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",141,0)=" ;GMRCERMS - Error message or null"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",142,0)=" ;  returned as GMRCERR^GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",143,0)="        ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",144,0)=" N DFN,GMRCSTS,GMRCNOW,GMRCERR,GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",145,0)=" S GMRCERR=0,GMRCERMS="""",GMRCNOW=$$NOW^XLFDT"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",146,0)=" S:$G(GMRCAD)="""" GMRCAD=GMRCNOW"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",147,0)=" S:'$G(GMRCDUZ) GMRCDUZ=DUZ"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",148,0)=" S DFN=$P($G(^GMR(123,GMRCO,0)),""^"",2) I DFN="""" D  Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",149,0)=" . S GMRCERR=""1"",GMRCERMS=""Not A Valid Consult - File Not Found."""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",150,0)=" . D EXIT^GMRCGUIA"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",151,0)=" S GMRCSTS=8,GMRCA=8"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",152,0)=" D STATUS^GMRCP I $D(GMRCQUT) D EXIT^GMRCGUIA Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",153,0)=" I '$O(GMRCMT(0)) D AUDIT^GMRCP"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",154,0)=" I $O(GMRCMT(0)) D"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",155,0)=" . S DA=$$SETDA"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",156,0)=" . D SETCOM(.GMRCMT,GMRCDUZ)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",157,0)=" D EN^GMRCHL7(DFN,GMRCO,"""","""",""SC"",GMRCORNP,"""","""","""",GMRCAD)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",158,0)=" D  ;send alerts"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",159,0)=" . N TXT"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",160,0)=" . S TXT=""Scheduled Consult: ""_$$ORTX^GMRCAU(GMRCO)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",161,0)=" . I $P(^GMR(123,+GMRCO,0),U,14) S GMRCADUZ($P(^(0),U,14))="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",162,0)=" . D MSG^GMRCP(DFN,TXT,GMRCO,63,.GMRCADUZ,0)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",163,0)=" D EXIT^GMRCGUIA"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",164,0)=" Q GMRCERR_""^""_GMRCERMS"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",165,0)="DOCLIST(GMRCAR,GMRCDA,GMRCMED)  ;return list of linked results"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",166,0)=" ; Input:"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",167,0)=" ;  GMRCAR - array to return list, passed by reference"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",168,0)=" ;  GMRCDA - ien from file 123"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",169,0)=" ;  GMRCMED- 1 = include med results; 0 = only TIU docs"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",170,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",171,0)=" ; Output:"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",172,0)=" ;  GMRCAR - array in format"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",173,0)=" ;       GMRCAR(0)=zero node of record"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",174,0)=" ;       GMRCAR(50,1)=""ien;global ref,"" e.g. 5;TIU(8925, or 3;MCAR(691,"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",175,0)=" ;       GMRCAR(50,2)=""ien;global ref,"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",176,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",177,0)=" I '$D(^GMR(123,GMRCDA,0)) Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",178,0)=" S GMRCAR(0)=^GMR(123,GMRCDA,0),$P(GMRCAR(0),U,20)="""""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",179,0)=" N RES,CNT S RES="""",CNT=1"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",180,0)=" F  S RES=$O(^GMR(123,GMRCDA,50,""B"",RES)) Q:RES=""""  D"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",181,0)=" . I '$G(GMRCMED) Q:RES'[""TIU(8925"""
^XTMP("XPDT",7799,"RTN","GMRCGUIB",182,0)=" . S GMRCAR(50,CNT)=RES"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",183,0)=" . I RES[""MCAR"" D"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",184,0)=" .. N ARR,STR"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",185,0)=" .. D MEDLKUP^MCARUTL3(.ARR,+$P(RES,""MCAR("",2),+RES)"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",186,0)=" .. I '+ARR K GMRCAR(50,CNT) Q"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",187,0)=" .. S STR=$P(ARR,U,9)_U_$P(ARR,U,6)_$S($P(ARR,U,10):""^^^^^^^^1"",1:"""")"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",188,0)=" .. S GMRCAR(50,CNT)=GMRCAR(50,CNT)_U_STR"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",189,0)=" . S CNT=CNT+1"
^XTMP("XPDT",7799,"RTN","GMRCGUIB",190,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4")="0^4^B39443452^B36237040"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",1,0)="GMRCSLM4 ;SLC/DCM - List Manager routine - Activity Log Detailed Display ;1/28/99 10:30"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",2,0)=" ;;3.0;CONSULT/REQUEST TRACKING;**4,12,15,22,50,64**;DEC 27,1997;Build 9"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",3,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",4,0)=" ; This routine invokes IA #3138"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",5,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",6,0)="ACTLOG(GMRCO) ;Print activity log"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",7,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)="""",GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",8,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=""Facility"",GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",9,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)="" Activity""_$E(TAB,1,16)_""Date/Time/Zone""_$E(TAB,1,6)_""Responsible Person""_$E(TAB,1,2)_""Entered By"",GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",10,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=$$REPEAT^XLFSTR(""-"",79),GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",11,0)=" N GMRCD,GMRCDA"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",12,0)=" S GMRCD=0 F  S GMRCD=$O(^GMR(123,+GMRCO,40,""B"",GMRCD)) Q:'GMRCD  S GMRCDA="""" F  S GMRCDA=$O(^GMR(123,+GMRCO,40,""B"",GMRCD,GMRCDA)) Q:'GMRCDA  D BLDALN(GMRCO,GMRCDA)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",13,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)="""",GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",14,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=""Note: TIME ZONE is local if not indicated"",GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",15,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)="""",GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",16,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",17,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",18,0)="BLDALN(GMRCO,GMRCDA) ;Build Activity Log Lines for an activity"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",19,0)=" ; GMRCO=  consult internal entry number"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",20,0)=" ; GMRCDA= activity internal entry number"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",21,0)=" N GMRCACT,GMRCSLN,XDT1,XDT2,FLG,LN,LINE,DASH,X,GMRCX,GMRCDEV,GMRCISIT,GMRC3LN"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",22,0)=" S GMRCDA(0)=^GMR(123,+GMRCO,40,GMRCDA,0)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",23,0)=" S GMRCACT=$P(GMRCDA(0),""^"",2)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",24,0)=" S GMRCDA(2)=$G(^GMR(123,+GMRCO,40,GMRCDA,2))"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",25,0)=" S GMRCDA(3)=$G(^GMR(123,+GMRCO,40,GMRCDA,3))"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",26,0)=" I $D(^GMR(123,GMRCO,40,GMRCDA,2)) D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",27,0)=" . S GMRCISIT=$P(^GMR(123,GMRCO,0),U,23) Q:'GMRCISIT"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",28,0)=" . S GMRCISIT=$$GET1^DIQ(4,GMRCISIT,.01)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",29,0)=" D BLDLN1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",30,0)=" D BLDLN2"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",31,0)=" D BLDCMTS"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",32,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",33,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",34,0)="BLDLN1 ;Build the first line for the activity"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",35,0)=" ;GMRCX is scratch pad variable"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",36,0)=" I $L($G(GMRCISIT)) D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",37,0)=" . S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=GMRCISIT"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",38,0)=" . S GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",39,0)=" S GMRCX=$P($G(^GMR(123.1,+GMRCACT,0)),""^"",1)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",40,0)=" S:'$L(GMRCX) GMRCX=GMRCACT_"" action?"""
^XTMP("XPDT",7799,"RTN","GMRCSLM4",41,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)="" ""_GMRCX"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",42,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",43,0)=" ;Add to line for Printed to (action 22) when device name <13 characters"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",44,0)=" I GMRCACT=22 D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",45,0)=" . S GMRCDEV=$$GET1^DIQ(3.5,+$P(GMRCDA(0),""^"",8),.01)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",46,0)=" . I '$L(GMRCDEV) S GMRCDEV=$P(GMRCDA(0),""^"",8)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",47,0)=" . I $L(GMRCDEV)<13 S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)_"" ""_GMRCDEV K GMRCDEV"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",48,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",49,0)=" ;Add on generic fields that apply to every activity"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",50,0)=" ;Date/time of Actual Activity, Who's Responsible for Activity,"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",51,0)=" ;and Who entered activity"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",52,0)=" S X=$P(GMRCDA(0),""^"",3) D REGDTM^GMRCU S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=$S($D(^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)):^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)_$E(TAB,1,25-$L(^(0)))_X,1:X)_$E(TAB)_$S($P(GMRCDA(2),""^"",3)]"""":$P(GMRCDA(2),""^"",3),1:$E(TAB,1,3))"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",53,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)_$E(TAB,1,45-$L(^(0)))_$S($P(GMRCDA(2),""^"",2)]"""":$E($P(GMRCDA(2),""^"",2),1,17),$P(GMRCDA(0),""^"",4):$E($P($G(^VA(200,$P(GMRCDA(0),""^"",4),0)),""^""),1,17),1:$E(TAB,1,18))"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",54,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)_$E(TAB,1,65-$L(^(0)))_$S($P(GMRCDA(2),""^"")]"""":$E($P(GMRCDA(2),""^""),1,17),$P(GMRCDA(0),""^"",5):$E($P($G(^VA(200,$P(GMRCDA(0),""^"",5),0)),""^""),1,17),1:$E(TAB,1,17))"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",55,0)=" S GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",56,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",57,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",58,0)="BLDLN2 ;SECOND line for activity"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",59,0)=" N GMRCSLN S GMRCSLN="""" ;saved SECOND line"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",60,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",61,0)=" ; Check if the entry date and specified actual date are different"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",62,0)=" S XDT1=$P(GMRCDA(0),""^"",1),XDT2=$P(GMRCDA(0),""^"",3),GMRCX=0"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",63,0)=" S:XDT2>XDT1 X=XDT1,XDT1=XDT2,XDT2=X"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",64,0)=" S GMRCDIF=$$FMDIFF^XLFDT(XDT1,XDT2,3)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",65,0)=" I $L(GMRCDIF) D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",66,0)=" . I +$P(GMRCDIF,"" "",1)>0 S GMRCX=1 Q  ;Check Days"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",67,0)=" . S GMRCDIF=$P(GMRCDIF,"" "",2)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",68,0)=" . I +$P(GMRCDIF,"":"",1)>0 S GMRCX=1 Q  ;Check Hours"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",69,0)=" . I +$P(GMRCDIF,"":"",2)>1 S GMRCX=1 Q  ;Check Minutes"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",70,0)=" . Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",71,0)=" I GMRCX D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",72,0)=" . S X=$P(GMRCDA(0),""^"",1) D REGDTM^GMRCU"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",73,0)=" . ;S GMRCSLN=$E(GMRCSLN_TAB,1,15)_""(entered) ""_X_$E(TAB)_$S($P(GMRCDA(2),""^"",3)]"""":$P(GMRCDA(2),""^"",3),1:$E(TAB,1,3))"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",74,0)=" . S GMRCSLN=$E(GMRCSLN_TAB,1,15)_""(entered) ""_X_$E(TAB,1,4)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",75,0)=" . Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",76,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",77,0)=" I $G(GMRCSLN) D  S GMRCSLN="""""
^XTMP("XPDT",7799,"RTN","GMRCSLM4",78,0)=" . S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=GMRCSLN"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",79,0)=" . S GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",80,0)=" . Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",81,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",82,0)=" ;Get local Incomplete Report and Complete result # for second line of action"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",83,0)=" I +$P(GMRCDA(0),""^"",9) D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",84,0)=" . I $P($P(GMRCDA(0),""^"",9),"";"",2)[""TIU"" D  Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",85,0)=" .. S GMRCSLN=$E(TAB,1,5)_""Note# ""_+$P(GMRCDA(0),""^"",9)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",86,0)=" . I $P($P(GMRCDA(0),""^"",9),"";"",2)[""MCAR"" D  Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",87,0)=" .. N MCFILE S MCFILE=+$P($P(GMRCDA(0),""^"",9),""MCAR("",2) Q:'MCFILE"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",88,0)=" .. N MCPRDT S MCPRDT=$$GET1^DIQ(MCFILE,+$P(GMRCDA(0),""^"",9),.01)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",89,0)=" .. Q:'$L(MCPRDT)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",90,0)=" .. S GMRCSLN=$E(TAB,1,5)_""Medicine Procedure performed: ""_MCPRDT"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",91,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",92,0)=" ;Get remote Incomplete Report and Complete result # for second line of action"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",93,0)=" I +$P(GMRCDA(2),""^"",4) D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",94,0)=" . N GMRCRR S GMRCRR=$P(GMRCDA(2),""^"",4)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",95,0)=" . S GMRCSLN=$E(TAB,1,5)_""Remote ""_$P(GMRCRR,"";"",3)_"" #""_+$P(GMRCRR,"";"")_"" from ""_$P($G(^DIC(4,+$P(GMRCRR,"";"",4),0)),""^"")"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",96,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",97,0)=" ;If GMRCDEV is defined, then print the device name on the second line"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",98,0)=" I GMRCACT=22,$D(GMRCDEV) D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",99,0)=" . S GMRCSLN=$E(TAB,1,5)_$E(GMRCDEV,1,17) K GMRCDEV"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",100,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",101,0)=" ;Build line for forwarded to (action 17)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",102,0)=" I GMRCACT=17 D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",103,0)=" . S GMRCX=$S(+$P(GMRCDA(0),""^"",6):$P($G(^GMR(123.5,+$P(GMRCDA(0),""^"",6),0)),""^""),$P(GMRCDA(3),""^"")]"""":$P(GMRCDA(3),""^""),1:"" ??"")"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",104,0)=" . S GMRCSLN=$E(TAB,1,5)_GMRCX"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",105,0)=" . I $P(GMRCDA(0),""^"",7)'="""" S GMRC3LN=""Previous Attention:  ""_$P($G(^VA(200,$P(GMRCDA(0),""^"",7),0)),""^"")"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",106,0)=" I GMRCACT=25 D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",107,0)=" . S GMRCX="""""
^XTMP("XPDT",7799,"RTN","GMRCSLM4",108,0)=" . I $P(^GMR(123,+GMRCO,12),U,5)=""F"" D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",109,0)=" .. S GMRCX=""Previous remote service name: """
^XTMP("XPDT",7799,"RTN","GMRCSLM4",110,0)=" . S GMRCX=GMRCX_$S(+$P(GMRCDA(0),""^"",6):$P($G(^GMR(123.5,+$P(GMRCDA(0),""^"",6),0)),""^""),$P(GMRCDA(3),""^"")]"""":$P(GMRCDA(3),""^""),1:"" ??"")"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",111,0)=" . S GMRCSLN=$E(TAB,1,5)_GMRCX"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",112,0)=" . I $P(GMRCDA(0),""^"",7)'="""" S GMRC3LN=""Previous Attention:  ""_$P($G(^VA(200,$P(GMRCDA(0),""^"",7),0)),""^"")"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",113,0)=" I $G(GMRCSLN) D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",114,0)=" . S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=GMRCSLN"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",115,0)=" . S GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",116,0)=" . Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",117,0)=" I $D(GMRC3LN) D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",118,0)=" . S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=GMRC3LN"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",119,0)=" . S GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",120,0)=" . Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",121,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",122,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",123,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",124,0)="BLDCMTS ;Build lines for Comment activity."
^XTMP("XPDT",7799,"RTN","GMRCSLM4",125,0)=" I GMRCACT=11 D BLDCMT Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",126,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",127,0)=" ;Build lines for general comments on any activity"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",128,0)=" I $D(^GMR(123,+GMRCO,40,+GMRCDA,1)) D  Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",129,0)=" . S LN=$O(^GMR(123,+GMRCO,40,+GMRCDA,1,0)) Q:'+LN"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",130,0)=" . ;Check for edited fields generated text with lines <75 characters"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",131,0)=" . I $G(^GMR(123,+GMRCO,40,+GMRCDA,1,LN,0))[""EDITED FIELDS"" D BLDCMT Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",132,0)=" . D BLDCMT"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",133,0)=" . Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",134,0)=" . I $L($G(^GMR(123,+GMRCO,40,+GMRCDA,1,LN,0)))'>75 D BLDCMT Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",135,0)=" . ;Use utilities for long line formating"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",136,0)=" . S FLG=1,LINE=""     """
^XTMP("XPDT",7799,"RTN","GMRCSLM4",137,0)=" . D WPSET^GMRCUTIL(""^GMR(123,+GMRCO,40,GMRCDA,1)"",""^TMP(""""GMRCR"""",$J,""""DT"""")"",LINE,.GMRCCT,TAB,FLG)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",138,0)=" . D BLDASH"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",139,0)=" . Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",140,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",141,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",142,0)="BLDCMT ;Build comment lines"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",143,0)=" ;DASH is 1 or """" for print dash line after comment"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",144,0)=" S LN=0"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",145,0)=" F  S LN=$O(^GMR(123,+GMRCO,40,+GMRCDA,1,LN)) Q:'+LN  D"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",146,0)=" . S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)=^GMR(123,+GMRCO,40,GMRCDA,1,LN,0) ;$P(^GMR(123,+GMRCO,40,GMRCDA,1,LN,0),""^"",1)"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",147,0)=" . S GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",148,0)=" . Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",149,0)=" ;D BLDASH"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",150,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)="""",GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",151,0)=" Q"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",152,0)=" ;"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",153,0)="BLDASH ;Build separater line with dashes"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",154,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)="""",$P(^(0),""-"",80)="""",GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",155,0)=" S ^TMP(""GMRCR"",$J,""DT"",GMRCCT,0)="""",GMRCCT=GMRCCT+1"
^XTMP("XPDT",7799,"RTN","GMRCSLM4",156,0)=" Q"
^XTMP("XPDT",7799,"UP",123,123.02,-1)="123^40"
^XTMP("XPDT",7799,"UP",123,123.02,0)="123.02"
^XTMP("XPDT",7799,"VER")="8.0^22.0"
^XTMP("XPDT",7799,"^DD",123,123.02,7,0)="PREVIOUSLY ASSIGNED TO^P200'^VA(200,^0;7^Q"
^XTMP("XPDT",7799,"^DD",123,123.02,7,3)="Enter the name of the provider who was the previous attention value assigned on this consult."
^XTMP("XPDT",7799,"^DD",123,123.02,7,"DT")="3090611"
^XTMP("XPDT",7800)="1"
^XTMP("XPDT",7800,"BLD",7373,0)="GMTS*2.7*90^HEALTH SUMMARY^0^3090602^y"
^XTMP("XPDT",7800,"BLD",7373,4,0)="^9.64PA^^"
^XTMP("XPDT",7800,"BLD",7373,6)="2^"
^XTMP("XPDT",7800,"BLD",7373,6.3)="2"
^XTMP("XPDT",7800,"BLD",7373,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7800,"BLD",7373,"KRN",.4,0)=".4"
^XTMP("XPDT",7800,"BLD",7373,"KRN",.401,0)=".401"
^XTMP("XPDT",7800,"BLD",7373,"KRN",.402,0)=".402"
^XTMP("XPDT",7800,"BLD",7373,"KRN",.403,0)=".403"
^XTMP("XPDT",7800,"BLD",7373,"KRN",.5,0)=".5"
^XTMP("XPDT",7800,"BLD",7373,"KRN",.84,0)=".84"
^XTMP("XPDT",7800,"BLD",7373,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7800,"BLD",7373,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7800,"BLD",7373,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7800,"BLD",7373,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7800,"BLD",7373,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7800,"BLD",7373,"KRN",9.8,"NM",1,0)="GMTSCNB^^0^B49040445"
^XTMP("XPDT",7800,"BLD",7373,"KRN",9.8,"NM","B","GMTSCNB",1)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN",19,0)="19"
^XTMP("XPDT",7800,"BLD",7373,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7800,"BLD",7373,"KRN",101,0)="101"
^XTMP("XPDT",7800,"BLD",7373,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7800,"BLD",7373,"KRN",771,0)="771"
^XTMP("XPDT",7800,"BLD",7373,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7800,"BLD",7373,"KRN",870,0)="870"
^XTMP("XPDT",7800,"BLD",7373,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7800,"BLD",7373,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7800,"BLD",7373,"KRN",8994,0)="8994"
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",.4,.4)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",.401,.401)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",.402,.402)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",.403,.403)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",.5,.5)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",.84,.84)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",19,19)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",101,101)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",771,771)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",870,870)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7800,"BLD",7373,"KRN","B",8994,8994)=""
^XTMP("XPDT",7800,"BLD",7373,"QUES",0)="^9.62^^"
^XTMP("XPDT",7800,"BLD",7373,"REQB",0)="^9.611^^"
^XTMP("XPDT",7800,"MBREQ")="0"
^XTMP("XPDT",7800,"PKG",160,-1)="1^1"
^XTMP("XPDT",7800,"PKG",160,0)="HEALTH SUMMARY^GMTS^Integrated Health Summary Tools"
^XTMP("XPDT",7800,"PKG",160,20,0)="^9.402P^^"
^XTMP("XPDT",7800,"PKG",160,22,0)="^9.49I^1^1"
^XTMP("XPDT",7800,"PKG",160,22,1,0)="2.7^2951020^2951219"
^XTMP("XPDT",7800,"PKG",160,22,1,"PAH",1,0)="90^3090602"
^XTMP("XPDT",7800,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7800,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7800,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7800,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7800,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7800,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7800,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7800,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7800,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7800,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7800,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7800,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7800,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7800,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7800,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7800,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7800,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7800,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7800,"QUES","XPM1","B")=""
^XTMP("XPDT",7800,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7800,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7800,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7800,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7800,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7800,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7800,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7800,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7800,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7800,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7800,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7800,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7800,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7800,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7800,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7800,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7800,"RTN")="1"
^XTMP("XPDT",7800,"RTN","GMTSCNB")="0^1^B49040445^B46561093"
^XTMP("XPDT",7800,"RTN","GMTSCNB",1,0)="GMTSCNB ; SLC/KER - Consults Components Brief          ;05/14/09  17:36"
^XTMP("XPDT",7800,"RTN","GMTSCNB",2,0)=" ;;2.7;Health Summary;**46,47,58,90**;Oct 20, 1995;Build 2"
^XTMP("XPDT",7800,"RTN","GMTSCNB",3,0)=" ;"
^XTMP("XPDT",7800,"RTN","GMTSCNB",4,0)=" ; External References"
^XTMP("XPDT",7800,"RTN","GMTSCNB",5,0)=" ;   DBIA  3358  ^GMR(123,"
^XTMP("XPDT",7800,"RTN","GMTSCNB",6,0)=" ;   DBIA 10040  ^SC("
^XTMP("XPDT",7800,"RTN","GMTSCNB",7,0)=" ;   DBIA 10104  $$UP^XLFSTR"
^XTMP("XPDT",7800,"RTN","GMTSCNB",8,0)=" ;   DBIA  2056  $$GET1^DIQ     (file 123.1, 44)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",9,0)=" ;   DBIA  2056  GETS^DIQ       (file 123)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",10,0)=" ;   DBIA  2051  LIST^DIC       (file 123.02)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",11,0)=" ;"
^XTMP("XPDT",7800,"RTN","GMTSCNB",12,0)=" ; Delete this line: test of perforce/eclipse"
^XTMP("XPDT",7800,"RTN","GMTSCNB",13,0)=" ;"
^XTMP("XPDT",7800,"RTN","GMTSCNB",14,0)=" Q"
^XTMP("XPDT",7800,"RTN","GMTSCNB",15,0)="MAIN ; Consults - Brief"
^XTMP("XPDT",7800,"RTN","GMTSCNB",16,0)=" K ^TMP(""GMTSCN"")"
^XTMP("XPDT",7800,"RTN","GMTSCNB",17,0)=" N GMTSMAX,GMTSNMC,GMTSI,GMTSDFN S GMTSDFN=+($G(DFN))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",18,0)=" S:'$L($G(GMTS1)) GMTS1=6666666 S:'$L($G(GMTS2)) GMTS2=9999999"
^XTMP("XPDT",7800,"RTN","GMTSCNB",19,0)=" S GMTS1=+($G(GMTS1)),GMTS2=+($G(GMTS2)),GMTSMAX=+($G(GMTSNDM)) S:GMTSMAX'>0 GMTSMAX=999999999"
^XTMP("XPDT",7800,"RTN","GMTSCNB",20,0)=" S GMTSDFN=+($G(GMTSDFN)) Q:GMTSDFN=0  Q:'$D(^GMR(123,""AD"",GMTSDFN))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",21,0)=" S:GMTS2>GMTS1 GMTSI=GMTS1,GMTS1=GMTS2,GMTS2=GMTSI S GMTSI=GMTS2-.00000001"
^XTMP("XPDT",7800,"RTN","GMTSCNB",22,0)=" F  S GMTSI=$O(^GMR(123,""AD"",GMTSDFN,GMTSI)) Q:+GMTSI=0!(GMTSI>GMTS1)  D  Q:$D(GMTSQIT)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",23,0)=" . S GMTSIEN=0 F  S GMTSIEN=$O(^GMR(123,""AD"",GMTSDFN,GMTSI,GMTSIEN)) Q:+GMTSIEN=0  D  Q:$D(GMTSQIT)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",24,0)=" . . Q:+($G(GMTSNMC))>+($G(GMTSMAX))  K ^TMP(""GMTSCN"",$J)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",25,0)=" . . D EXT(GMTSIEN,GMTSI) Q:$D(GMTSQIT)  D BCD Q:$D(GMTSQIT)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",26,0)=" Q"
^XTMP("XPDT",7800,"RTN","GMTSCNB",27,0)="BCD ;   Brief Consults Display"
^XTMP("XPDT",7800,"RTN","GMTSCNB",28,0)=" Q:'$D(^TMP(""GMTSCN"",$J))  S GMTSNMC=+($G(GMTSNMC))+1"
^XTMP("XPDT",7800,"RTN","GMTSCNB",29,0)=" D:GMTSNMC=1 BHDR Q:$D(GMTSQIT)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",30,0)=" N GMTSID,GMTSFI,GMTSIE S GMTSID=0"
^XTMP("XPDT",7800,"RTN","GMTSCNB",31,0)=" F  S GMTSID=$O(^TMP(""GMTSCN"",$J,GMTSID)) Q:+GMTSID=0  D  Q:$D(GMTSQIT)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",32,0)=" . S GMTSFI=123,GMTSIE="""" F  S GMTSIE=$O(^TMP(""GMTSCN"",$J,GMTSID,GMTSFI,GMTSIE)) Q:GMTSIE=""""  D  Q:$D(GMTSQIT)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",33,0)=" . . N GMTSNB,GMTSRD,GMTSTO,GMTSVC,GMTSFM,GMTSLA,GMTSAD,GMTSED"
^XTMP("XPDT",7800,"RTN","GMTSCNB",34,0)=" . . S GMTSNB=+($G(GMTSIE)) S:+GMTSNB=0 GMTSNB=""?"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",35,0)=" . . S GMTSRD=$G(^TMP(""GMTSCN"",$J,GMTSID,GMTSFI,GMTSIE,3,""I""))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",36,0)=" . . S GMTSRD=$$UP^XLFSTR($S(+GMTSRD>0:$$ED^GMTSU(+GMTSRD),1:""UNKNOWN""))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",37,0)=" . . S GMTSFM=$$UP^XLFSTR($G(^TMP(""GMTSCN"",$J,GMTSID,GMTSFI,GMTSIE,2,""E"")))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",38,0)=" . . S GMTSED=$G(^TMP(""GMTSCN"",$J,GMTSID,GMTSFI,GMTSIE,17,""I""))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",39,0)="    . . S GMTSED=$$UP^XLFSTR($S(+GMTSED>0:$$ED^GMTSU(+GMTSED),1:""UNKNOWN""))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",40,0)=" . . S GMTSTO=$$UP^XLFSTR($G(^TMP(""GMTSCN"",$J,GMTSID,GMTSFI,GMTSIE,1,""E"")))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",41,0)=" . . S GMTSLA=$$UP^XLFSTR($G(^TMP(""GMTSCN"",$J,GMTSID,GMTSFI,GMTSIE,40,1,1,""E"")))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",42,0)=" . . S GMTSLD=$G(^TMP(""GMTSCN"",$J,GMTSID,GMTSFI,GMTSIE,40,1,2,""I""))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",43,0)=" . . S GMTSLD=$$UP^XLFSTR($S(+GMTSLD>0:$$ED^GMTSU(+GMTSLD),1:""UNKNOWN""))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",44,0)=" . . D WRT"
^XTMP("XPDT",7800,"RTN","GMTSCNB",45,0)=" Q"
^XTMP("XPDT",7800,"RTN","GMTSCNB",46,0)="BHDR ;   Brief Header"
^XTMP("XPDT",7800,"RTN","GMTSCNB",47,0)=" N GMTSL S $P(GMTSL,""-"",79)="""""
^XTMP("XPDT",7800,"RTN","GMTSCNB",48,0)=" D CKP^GMTSUP Q:$D(GMTSQIT)  W !,""Request Date/"",?15,""Request From"",?52,""Earliest Date"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",49,0)=" D CKP^GMTSUP Q:$D(GMTSQIT)  W !,""Number"",?15,""Request To"",?52,""Last Action"",?67,""Action Date"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",50,0)=" D CKP^GMTSUP Q:$D(GMTSQIT)  W !,GMTSL"
^XTMP("XPDT",7800,"RTN","GMTSCNB",51,0)=" Q"
^XTMP("XPDT",7800,"RTN","GMTSCNB",52,0)="WRT ;   Write Brief Consult"
^XTMP("XPDT",7800,"RTN","GMTSCNB",53,0)=" D CKP^GMTSUP Q:$D(GMTSQIT)  W !,$E(GMTSRD,1,10),?15,GMTSFM,?52,$E(GMTSED,1,10)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",54,0)=" D CKP^GMTSUP Q:$D(GMTSQIT)  W !,GMTSNB,?15,GMTSTO,?52,GMTSLA,?67,GMTSLD"
^XTMP("XPDT",7800,"RTN","GMTSCNB",55,0)=" D CKP^GMTSUP Q:$D(GMTSQIT)  W !"
^XTMP("XPDT",7800,"RTN","GMTSCNB",56,0)=" Q"
^XTMP("XPDT",7800,"RTN","GMTSCNB",57,0)="EXT(X,Y) ; Extract Consults"
^XTMP("XPDT",7800,"RTN","GMTSCNB",58,0)=" K ^TMP(""GMTSCN"",$J),^UTILITY(""DIQ1"",$J) N DIC,DIQ,DR,GMTSFM,GMTSI"
^XTMP("XPDT",7800,"RTN","GMTSCNB",59,0)=" N GMTSIEN,GMTSIENS,GMTSLA,GMTSRT,GMTSTY,GMTSVC"
^XTMP("XPDT",7800,"RTN","GMTSCNB",60,0)=" S GMTSIEN=+($G(X)) Q:GMTSIEN=0  S GMTSI=+($G(Y))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",61,0)=" S DIC=123,GMTSIENS=+($G(GMTSIEN))_"","""
^XTMP("XPDT",7800,"RTN","GMTSCNB",62,0)=" S GMTSRT=""^TMP(""""GMTSCN"""",""_$J_"",""_GMTSI_"")"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",63,0)=" S DIQ(0)=""IE"",DR="".01;1;2;3;9;17"" D GETS^DIQ(123,GMTSIENS,DR,""EI"",GMTSRT,""MSG"")"
^XTMP("XPDT",7800,"RTN","GMTSCNB",64,0)=" S GMTSFM=+($G(^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,2,""I""))) S:+GMTSFM=0 GMTSFM="""""
^XTMP("XPDT",7800,"RTN","GMTSCNB",65,0)=" S GMTSVC="""" S:+GMTSFM>0 GMTSVC=$$GET1^DIQ(44,GMTSFM,9,""E"") S:$G(GMTSVC)=""NONE"" GMTSVC="""""
^XTMP("XPDT",7800,"RTN","GMTSCNB",66,0)=" S:$L(GMTSVC) ^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,2,""SVC"")=GMTSVC"
^XTMP("XPDT",7800,"RTN","GMTSCNB",67,0)=" S GMTSTY="""" S:+GMTSFM>0 GMTSTY=$$GET1^DIQ(44,GMTSFM,2,""E"")"
^XTMP("XPDT",7800,"RTN","GMTSCNB",68,0)=" S GMTSFM=$$FM(($G(^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,2,""E""))_""^""_GMTSTY_""^""_GMTSVC))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",69,0)=" S ^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,2,""E"")=GMTSFM"
^XTMP("XPDT",7800,"RTN","GMTSCNB",70,0)=" S GMTSLA=+($G(^TMP(""GMTSCN"",$J,GMTSI,DIC,GMTSIENS,9,""I"")))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",71,0)=" S:+GMTSLA'>9 ^TMP(""GMTSCN"",$J,GMTSI,DIC,GMTSIENS,9,""E"")="""""
^XTMP("XPDT",7800,"RTN","GMTSCNB",72,0)=" I +GMTSLA>0 D"
^XTMP("XPDT",7800,"RTN","GMTSCNB",73,0)=" . S GMTSLA=$$GET1^DIQ(123.1,GMTSLA,7,""E"")"
^XTMP("XPDT",7800,"RTN","GMTSCNB",74,0)=" . S ^TMP(""GMTSCN"",$J,GMTSI,DIC,GMTSIENS,9,""E"")=GMTSLA"
^XTMP("XPDT",7800,"RTN","GMTSCNB",75,0)=" S ^TMP(""GMTSCN"",$J,GMTSI,DIC,GMTSIENS,0)=(9999999-GMTSI)_""^""_$S(GMTSI>0:$$EDT^GMTSU((9999999-GMTSI)),1:"""")"
^XTMP("XPDT",7800,"RTN","GMTSCNB",76,0)=" D ACT"
^XTMP("XPDT",7800,"RTN","GMTSCNB",77,0)=" Q"
^XTMP("XPDT",7800,"RTN","GMTSCNB",78,0)="FM(X) ; From Service/Ward"
^XTMP("XPDT",7800,"RTN","GMTSCNB",79,0)=" S X=$G(X) N GMTSTY,GMTSV S GMTSTY=$P(X,""^"",2),GMTSV=$P(X,""^"",3),X=$P(X,""^"",1)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",80,0)=" I $L(X) S:+X>0&(GMTSTY=""WARD"")&(X'[""WARD"") X=""WARD ""_X S:+X'>0&(GMTSTY=""WARD"")&(X'[""WARD"") X=X_"" WARD"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",81,0)=" S:($L(X)+$L(GMTSV)+3)'>30&($L(GMTSV))&(X'[GMTSV) X=X_"" (""_GMTSV_"")"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",82,0)=" S X=$$UP^XLFSTR(X)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",83,0)=" Q X"
^XTMP("XPDT",7800,"RTN","GMTSCNB",84,0)="ACT ; Activity"
^XTMP("XPDT",7800,"RTN","GMTSCNB",85,0)=" N GMTSL,GMTSFL,GMTSFLA,GMTSFLD,GMTSLA,GMTSLD,GMTSLR,GMTSAM,GMTSLM,GMTSC,GMTSDI,Y,DR,GMTSIENL,GMTSIENS,GMTSMSG K ^TMP(""DILIST"",$J)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",86,0)=" S GMTSIENS=+GMTSIEN_"","",GMTSIENL="",""_GMTSIENS,DR=""1I;2I;9;10"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",87,0)=" D LIST^DIC(123.02,GMTSIENL,DR,,""*"",,,,,,.GMTSDI,""GMTSMSG"")"
^XTMP("XPDT",7800,"RTN","GMTSCNB",88,0)=" K:+($G(^TMP(""DILIST"",$J,0)))=0 ^TMP(""DILIST"",$J) Q:+($G(^TMP(""DILIST"",$J,0)))=0"
^XTMP("XPDT",7800,"RTN","GMTSCNB",89,0)=" S GMTSLA="""",GMTSLD=0,GMTSLR="""",GMTSAM="""",GMTSC=0"
^XTMP("XPDT",7800,"RTN","GMTSCNB",90,0)=" S GMTSL=0"
^XTMP("XPDT",7800,"RTN","GMTSCNB",91,0)=" F  S GMTSL=$O(^TMP(""DILIST"",$J,""ID"",GMTSL)) Q:+GMTSL=0  D"
^XTMP("XPDT",7800,"RTN","GMTSCNB",92,0)=" . I +($G(^TMP(""DILIST"",$J,""ID"",GMTSL,2)))'<GMTSLD,+($G(^TMP(""DILIST"",$J,""ID"",GMTSL,2)))>0 D"
^XTMP("XPDT",7800,"RTN","GMTSCNB",93,0)=" . . S GMTSLA=+($G(^TMP(""DILIST"",$J,""ID"",GMTSL,1)))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",94,0)=" . . S GMTSLD=+($G(^TMP(""DILIST"",$J,""ID"",GMTSL,2)))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",95,0)=" . . S GMTSLR=$G(^TMP(""DILIST"",$J,""ID"",GMTSL,9))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",96,0)=" . . S GMTSLM=$G(^TMP(""DILIST"",$J,""ID"",GMTSL,10))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",97,0)=" I +($G(GMTSFLA))>0,+($G(GMTSFLD))>0,+($G(GMTSFL))>0,+($G(GMTSR))'>0 S GMTSC=0,GMTSLA=GMTSFLA,GMTSLD=GMTSFLA D AAC"
^XTMP("XPDT",7800,"RTN","GMTSCNB",98,0)=" I GMTSLA>0,GMTSLD>0 S GMTSC=1 D AAC"
^XTMP("XPDT",7800,"RTN","GMTSCNB",99,0)=" K ^TMP(""DILIST"",$J)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",100,0)=" Q"
^XTMP("XPDT",7800,"RTN","GMTSCNB",101,0)="AAC ;   Add Activity"
^XTMP("XPDT",7800,"RTN","GMTSCNB",102,0)=" N GMTSEA,GMTSEP,GMTSEL,GMTSOR,GMTSW,I S GMTSC=+($G(GMTSC))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",103,0)=" S GMTSOR=$$UP^XLFSTR($$GET1^DIQ(123.1,GMTSLA,1,""I""))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",104,0)=" S GMTSEP=$$UP^XLFSTR($$GET1^DIQ(123.1,GMTSLA,7,""E""))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",105,0)=" S GMTSEA=$$UP^XLFSTR($$GET1^DIQ(123.1,GMTSLA,.01,""E""))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",106,0)=" S GMTSEL=$$AL(GMTSEA,GMTSEP) Q:'$L(GMTSEL)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",107,0)=" S GMTSEA=$$AN(GMTSEA,GMTSEP) Q:'$L(GMTSEA)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",108,0)=" I GMTSC>0 D"
^XTMP("XPDT",7800,"RTN","GMTSCNB",109,0)=" . S ^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,40,GMTSC,1,""I"")=GMTSLA,^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,40,GMTSC,1,""E"")=GMTSEA,^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,40,GMTSC,1,""L"")=GMTSEL"
^XTMP("XPDT",7800,"RTN","GMTSCNB",110,0)=" . S ^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,40,GMTSC,2,""I"")=GMTSLD,^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,40,GMTSC,2,""E"")=$$EDT^GMTSU(GMTSLD)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",111,0)=" I GMTSC'>0 D"
^XTMP("XPDT",7800,"RTN","GMTSCNB",112,0)=" . S ^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,40,""LA"",""I"")=GMTSLA,^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,40,""LA"",""E"")=GMTSEA,^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,40,""LA"",""L"")=GMTSEL"
^XTMP("XPDT",7800,"RTN","GMTSCNB",113,0)=" . S ^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,40,""LD"",""I"")=GMTSLD,^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,40,""LD"",""E"")=$$EDT^GMTSU(GMTSLD)"
^XTMP("XPDT",7800,"RTN","GMTSCNB",114,0)=" . S ^TMP(""GMTSCN"",$J,GMTSI,123,GMTSIENS,40,""WR"",""E"")=$G(^TMP(""DILIST"",$J,""ID"",GMTSFL,3))"
^XTMP("XPDT",7800,"RTN","GMTSCNB",115,0)=" Q"
^XTMP("XPDT",7800,"RTN","GMTSCNB",116,0)="AN(X,Y) ;   Activity Name"
^XTMP("XPDT",7800,"RTN","GMTSCNB",117,0)=" N GMTSW,GMTSP,GMTSA S GMTSA=$G(X),GMTSP=$G(Y) S X=$$SN((GMTSA_"" ""_GMTSP)) S X=$E(X,1,11) Q X"
^XTMP("XPDT",7800,"RTN","GMTSCNB",118,0)="AL(X,Y) ;   Activity Name"
^XTMP("XPDT",7800,"RTN","GMTSCNB",119,0)=" N GMTSP,GMTSA S GMTSA=$G(X),GMTSP=$G(Y) S:GMTSA[""RECEIVE"" (GMTSA,GMTSP)=""RECEIVED"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",120,0)=" S:GMTSA=""ENTERED IN CPRS""!(GMTSA[""CPRS RELEASED"") (GMTSA,GMTSP)=""DATA ENTRY"" S:GMTSA=""EDIT BEFORE RELEASE"" (GMTSA,GMTSP)=""EDITED"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",121,0)=" S X="""" S:$L(GMTSA)&($L(GMTSP)) X=$S($L(GMTSP)>$L(GMTSA):GMTSP,1:GMTSA) S:'$L(GMTSA)!('$L(GMTSP)) X=$S('$L(GMTSP)&($L(GMTSA)):GMTSA,$L(GMTSP)&('$L(GMTSA)):GMTSP,1:"""")"
^XTMP("XPDT",7800,"RTN","GMTSCNB",122,0)=" Q X"
^XTMP("XPDT",7800,"RTN","GMTSCNB",123,0)="SN(X) ;"
^XTMP("XPDT",7800,"RTN","GMTSCNB",124,0)=" S X=$G(X) Q:X="""" ""UNKNOWN"" Q:X[""ENTERED""!(X[""RELEASED"") ""ENTERED"" Q:X[""STATUS"" ""STAT CHG"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",125,0)=" Q:X[""SIGNIF"" ""SIG FIND"" Q:X[""DISCONT"" ""DISCONT'D"" Q:X[""SCHEDUL"" ""SCHEDULED"" Q:X[""INCOMPL"" ""INCOMPLETE"" Q:X[""COMPLET"" ""COMPLETE"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",126,0)=" Q:X[""EDIT"" ""EDITED"" Q:X[""DISASSO"" ""DISASSOC'D"" Q:X[""ADDENDUM"" ""ADDENDUM"" Q:X[""NEW NOTE"" ""NEW NOTE"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",127,0)=" Q:X[""SERVICE"" ""SVC ENTER"" Q:X[""FORWARD"" ""FORWARDED"" Q:X[""CANCELLED"" ""CANCELLED"" Q:X[""COMMENT"" ""COMMENT"" Q:X[""RECEIVED"" ""RECEIVED"" Q:X[""PRINTED"" ""PRINTED"""
^XTMP("XPDT",7800,"RTN","GMTSCNB",128,0)=" Q ""UNKNOWN"""
^XTMP("XPDT",7800,"VER")="8.0^22.0"
^XTMP("XPDT",7801)="1"
^XTMP("XPDT",7801,"BLD",7729,0)="GMRA*4.0*45^ADVERSE REACTION TRACKING^0^3100316^y"
^XTMP("XPDT",7801,"BLD",7729,4,0)="^9.64PA^^"
^XTMP("XPDT",7801,"BLD",7729,6)="1^"
^XTMP("XPDT",7801,"BLD",7729,6.3)="1"
^XTMP("XPDT",7801,"BLD",7729,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7801,"BLD",7729,"KRN",.4,0)=".4"
^XTMP("XPDT",7801,"BLD",7729,"KRN",.401,0)=".401"
^XTMP("XPDT",7801,"BLD",7729,"KRN",.402,0)=".402"
^XTMP("XPDT",7801,"BLD",7729,"KRN",.403,0)=".403"
^XTMP("XPDT",7801,"BLD",7729,"KRN",.5,0)=".5"
^XTMP("XPDT",7801,"BLD",7729,"KRN",.84,0)=".84"
^XTMP("XPDT",7801,"BLD",7729,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7801,"BLD",7729,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7801,"BLD",7729,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7801,"BLD",7729,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7801,"BLD",7729,"KRN",9.8,"NM",0)="^9.68A^2^2"
^XTMP("XPDT",7801,"BLD",7729,"KRN",9.8,"NM",1,0)="GMRAUTL2^^0^B88391433"
^XTMP("XPDT",7801,"BLD",7729,"KRN",9.8,"NM",2,0)="GMRAFX3^^0^B69479598"
^XTMP("XPDT",7801,"BLD",7729,"KRN",9.8,"NM","B","GMRAFX3",2)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN",9.8,"NM","B","GMRAUTL2",1)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN",19,0)="19"
^XTMP("XPDT",7801,"BLD",7729,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7801,"BLD",7729,"KRN",101,0)="101"
^XTMP("XPDT",7801,"BLD",7729,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7801,"BLD",7729,"KRN",771,0)="771"
^XTMP("XPDT",7801,"BLD",7729,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7801,"BLD",7729,"KRN",870,0)="870"
^XTMP("XPDT",7801,"BLD",7729,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7801,"BLD",7729,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7801,"BLD",7729,"KRN",8994,0)="8994"
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",.4,.4)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",.401,.401)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",.402,.402)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",.403,.403)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",.5,.5)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",.84,.84)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",19,19)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",101,101)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",771,771)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",870,870)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7801,"BLD",7729,"KRN","B",8994,8994)=""
^XTMP("XPDT",7801,"BLD",7729,"QUES",0)="^9.62^^"
^XTMP("XPDT",7801,"BLD",7729,"REQB",0)="^9.611^2^2"
^XTMP("XPDT",7801,"BLD",7729,"REQB",1,0)="GMRA*4.0*20^2"
^XTMP("XPDT",7801,"BLD",7729,"REQB",2,0)="GMRA*4.0*41^2"
^XTMP("XPDT",7801,"BLD",7729,"REQB","B","GMRA*4.0*20",1)=""
^XTMP("XPDT",7801,"BLD",7729,"REQB","B","GMRA*4.0*41",2)=""
^XTMP("XPDT",7801,"MBREQ")="0"
^XTMP("XPDT",7801,"PKG",247,-1)="1^1"
^XTMP("XPDT",7801,"PKG",247,0)="ADVERSE REACTION TRACKING^GMRA^Adverse Reaction Tracking package"
^XTMP("XPDT",7801,"PKG",247,22,0)="^9.49I^1^1"
^XTMP("XPDT",7801,"PKG",247,22,1,0)="4.0^2960328^2960718^11595"
^XTMP("XPDT",7801,"PKG",247,22,1,"PAH",1,0)="45^3100316"
^XTMP("XPDT",7801,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7801,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7801,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7801,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7801,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7801,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7801,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7801,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7801,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7801,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7801,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7801,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7801,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7801,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7801,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7801,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7801,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7801,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7801,"QUES","XPM1","B")=""
^XTMP("XPDT",7801,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7801,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7801,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7801,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7801,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7801,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7801,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7801,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7801,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7801,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7801,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7801,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7801,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7801,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7801,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7801,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7801,"RTN")="2"
^XTMP("XPDT",7801,"RTN","GMRAFX3")="0^2^B69479598^B68434515"
^XTMP("XPDT",7801,"RTN","GMRAFX3",1,0)="GMRAFX3 ;SLC/DAN Update existing entries to new reactant ;03/16/10  08:35"
^XTMP("XPDT",7801,"RTN","GMRAFX3",2,0)=" ;;4.0;Adverse Reaction Tracking;**17,19,23,20,45**;Mar 29, 1996;Build 1"
^XTMP("XPDT",7801,"RTN","GMRAFX3",3,0)=" ;DBIA SECTION"
^XTMP("XPDT",7801,"RTN","GMRAFX3",4,0)=" ;10018 - DIE"
^XTMP("XPDT",7801,"RTN","GMRAFX3",5,0)=" ;2056  - DIQ"
^XTMP("XPDT",7801,"RTN","GMRAFX3",6,0)=" ;3154  - ORQ1"
^XTMP("XPDT",7801,"RTN","GMRAFX3",7,0)=" ;4134  - ORCHECK"
^XTMP("XPDT",7801,"RTN","GMRAFX3",8,0)=" ;4135  - ORKCHK"
^XTMP("XPDT",7801,"RTN","GMRAFX3",9,0)=" ;10026 - DIR"
^XTMP("XPDT",7801,"RTN","GMRAFX3",10,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",11,0)="UIE ;Update individual entries"
^XTMP("XPDT",7801,"RTN","GMRAFX3",12,0)=" N DFN,GMRAOUT,GMRAING,GMRADRCL,DIE,DA,DR,AIFN,SIGN,TIME,SUB,ORX,GMRAORX,GMRAOC,GI,FND,COM,SIEN,DIR,Y"
^XTMP("XPDT",7801,"RTN","GMRAFX3",13,0)=" S GMRADONE=0 ;Flag to keep track of updated entries"
^XTMP("XPDT",7801,"RTN","GMRAFX3",14,0)=" S DFN=$P($G(^GMR(120.8,GMRAPA,0)),U) Q:'+DFN"
^XTMP("XPDT",7801,"RTN","GMRAFX3",15,0)=" W !!,""For patient "",$$GET1^DIQ(2,DFN_"","",.01),!"
^XTMP("XPDT",7801,"RTN","GMRAFX3",16,0)=" I $D(GMRAAR) D"
^XTMP("XPDT",7801,"RTN","GMRAFX3",17,0)=" .S DIR(0)=""Y"",DIR(""A"")=""Use reactant ""_GMRAAR(0),DIR(""B"")=""Y"" D ^DIR"
^XTMP("XPDT",7801,"RTN","GMRAFX3",18,0)=" .K:'Y GMRAAR"
^XTMP("XPDT",7801,"RTN","GMRAFX3",19,0)=" .Q"
^XTMP("XPDT",7801,"RTN","GMRAFX3",20,0)=" I '$D(GMRAAR) D ^GMRAFX2 I $D(GMRAAR) D RUSURE(.GMRASURE) ;20 Get new reactant"
^XTMP("XPDT",7801,"RTN","GMRAFX3",21,0)=" I '$D(GMRAAR)!('$G(GMRASURE)) K GMRAAR Q  ;20 stop if no reactant selected or if user doesn't want to use selected reactant"
^XTMP("XPDT",7801,"RTN","GMRAFX3",22,0)=" S GMRAOUT=0"
^XTMP("XPDT",7801,"RTN","GMRAFX3",23,0)=" I $$DUP W !,""Patient already has an active allergy for this reactant."",!,""Duplicate not allowed."",! D WAIT Q"
^XTMP("XPDT",7801,"RTN","GMRAFX3",24,0)=" I $$DUPCHK^GMRAPES0(GMRAAR(0),DFN,GMRAPA) Q  ;Checks to see if reactant previously entered in error."
^XTMP("XPDT",7801,"RTN","GMRAFX3",25,0)=" ;Update reactant, allergy and signed off fields"
^XTMP("XPDT",7801,"RTN","GMRAFX3",26,0)=" S DIE=""^GMR(120.8,"",DA=GMRAPA,DR="".02////""_GMRAAR(0)_"";1////^S X=GMRAAR""_"";3.1////""_GMRAAR(""O"")_"";15///1"" D ^DIE"
^XTMP("XPDT",7801,"RTN","GMRAFX3",27,0)=" I $D(^GMR(120.85,""C"",GMRAPA)) D  ;Observed reaction, need to update data"
^XTMP("XPDT",7801,"RTN","GMRAFX3",28,0)=" .S AIFN=0"
^XTMP("XPDT",7801,"RTN","GMRAFX3",29,0)=" .F  S AIFN=$O(^GMR(120.85,""C"",GMRAPA,AIFN)) Q:'+AIFN  D"
^XTMP("XPDT",7801,"RTN","GMRAFX3",30,0)=" ..S SIEN=$O(^GMR(120.85,AIFN,3,""B"",$P(^XTMP(""GMRAFX"",LTYPE,""IDX"",+NMBR),""^""),0)) Q:'+SIEN  ;Was previous reactant stored as ""suspected agent"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",31,0)=" ..S DA(1)=AIFN,DA=SIEN"
^XTMP("XPDT",7801,"RTN","GMRAFX3",32,0)=" ..S DIE=""^GMR(120.85,DA(1),3,"",DR="".01////^S X=GMRAAR(0)"" D ^DIE ;Update suspected agent to new value"
^XTMP("XPDT",7801,"RTN","GMRAFX3",33,0)=" D DELMUL(2),DELMUL(3) ;Delete drug ingredient/drug classes multiples"
^XTMP("XPDT",7801,"RTN","GMRAFX3",34,0)=" I GMRAAR(""O"")[""D"" D UPDATE^GMRAPES1 ;If reactant type is Drug then add appropriate ingredients and classes"
^XTMP("XPDT",7801,"RTN","GMRAFX3",35,0)=" S GMRADONE=1 ;Update complete"
^XTMP("XPDT",7801,"RTN","GMRAFX3",36,0)=" S COM=""Updated using clean up process.  Changed reactant from ""_$P(^XTMP(""GMRAFX"",LTYPE,""IDX"",+NMBR),""^"",2)_$S(LTYPE=""FREE"":"" (free text) "",LTYPE=""ING"":"" (ingredient) "",1:"" (drug class) "")_""to ""_GMRAAR(0)_""(file - ""_$P(GMRAAR,"";"",2)_"")"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",37,0)=" D ADCOM^GMRAFX(GMRAPA,""O"",COM) ;Add a comment for this update"
^XTMP("XPDT",7801,"RTN","GMRAFX3",38,0)=" ;Do order checking here - compare existing orders against new allergy information."
^XTMP("XPDT",7801,"RTN","GMRAFX3",39,0)=" W !,""Performing order checking..."""
^XTMP("XPDT",7801,"RTN","GMRAFX3",40,0)=" K ^TMP(""ORR"",$J),GMRAOC,ORX"
^XTMP("XPDT",7801,"RTN","GMRAFX3",41,0)=" D EN^ORQ1(DFN_"";DPT("") ;Retrieve active orders"
^XTMP("XPDT",7801,"RTN","GMRAFX3",42,0)=" S TIME=$O(^TMP(""ORR"",$J,0))"
^XTMP("XPDT",7801,"RTN","GMRAFX3",43,0)=" I '^TMP(""ORR"",$J,TIME,""TOT"") W ""patient has no active orders."" Q  ;20 No orders found"
^XTMP("XPDT",7801,"RTN","GMRAFX3",44,0)=" S SUB=0 F  S SUB=$O(^TMP(""ORR"",$J,TIME,SUB)) Q:'+SUB  D"
^XTMP("XPDT",7801,"RTN","GMRAFX3",45,0)=" .D BLD^ORCHECK(+^TMP(""ORR"",$J,TIME,SUB)) ;Get ""order"" information in order checking format"
^XTMP("XPDT",7801,"RTN","GMRAFX3",46,0)=" M GMRAORX=ORX K ORX ;19"
^XTMP("XPDT",7801,"RTN","GMRAFX3",47,0)=" D EN^ORKCHK(.GMRAOC,DFN,.GMRAORX,""ACCEPT"")"
^XTMP("XPDT",7801,"RTN","GMRAFX3",48,0)=" S GI=0,FND=0 F  S GI=$O(GMRAOC(GI)) Q:'+GI  D"
^XTMP("XPDT",7801,"RTN","GMRAFX3",49,0)=" .Q:$P(GMRAOC(GI),U,2)'=3  ;Quit if not allergy related"
^XTMP("XPDT",7801,"RTN","GMRAFX3",50,0)=" .;Q:$D(^OR(100,$P(GMRAOC(GI),U),9,""B"",3))  ;23 If order check exists can't be for this data"
^XTMP("XPDT",7801,"RTN","GMRAFX3",51,0)=" .Q:$$ANYARTOC^GMRAUTL2($P(GMRAOC(GI),U))  ;23 If order check exists can't be for this data"
^XTMP("XPDT",7801,"RTN","GMRAFX3",52,0)=" .W !,""Patient has a(n) "",$P($$STATUS^ORQOR2($P(GMRAOC(GI),U)),U,2),"" order for"",$P($P(GMRAOC(GI),U,4),"":"",2),"", order #"",$P(GMRAOC(GI),U)"
^XTMP("XPDT",7801,"RTN","GMRAFX3",53,0)=" .S FND=1"
^XTMP("XPDT",7801,"RTN","GMRAFX3",54,0)=" W:'FND ""No problems found"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",55,0)=" D WAIT"
^XTMP("XPDT",7801,"RTN","GMRAFX3",56,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAFX3",57,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",58,0)="DELMUL(FIELD) ;Delete multiple FIELD from GMR ALLERGY file"
^XTMP("XPDT",7801,"RTN","GMRAFX3",59,0)=" N MIEN,DA,DIE,DR"
^XTMP("XPDT",7801,"RTN","GMRAFX3",60,0)=" S MIEN=0 F  S MIEN=$O(^GMR(120.8,GMRAPA,FIELD,MIEN)) Q:'+MIEN  D"
^XTMP("XPDT",7801,"RTN","GMRAFX3",61,0)=" .S DA(1)=GMRAPA,DA=MIEN"
^XTMP("XPDT",7801,"RTN","GMRAFX3",62,0)=" .S DIE=""^GMR(120.8,DA(1),FIELD,"",DR="".01///@"" D ^DIE ;Delete entry"
^XTMP("XPDT",7801,"RTN","GMRAFX3",63,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAFX3",64,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",65,0)="DUP() ;Function returns true (1) if selected reactant is a duplicate"
^XTMP("XPDT",7801,"RTN","GMRAFX3",66,0)=" N LOOP,FND"
^XTMP("XPDT",7801,"RTN","GMRAFX3",67,0)=" S LOOP=0,FND=0"
^XTMP("XPDT",7801,"RTN","GMRAFX3",68,0)=" F  S LOOP=$O(^GMR(120.8,""B"",DFN,LOOP)) Q:'+LOOP!(FND)  D"
^XTMP("XPDT",7801,"RTN","GMRAFX3",69,0)=" .I $P(^GMR(120.8,LOOP,0),U,3)=GMRAAR&('$D(^GMR(120.8,LOOP,""ER""))) S FND=1"
^XTMP("XPDT",7801,"RTN","GMRAFX3",70,0)=" Q FND"
^XTMP("XPDT",7801,"RTN","GMRAFX3",71,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",72,0)="WAIT ;Issues press enter to return prompt"
^XTMP("XPDT",7801,"RTN","GMRAFX3",73,0)=" N DIR"
^XTMP("XPDT",7801,"RTN","GMRAFX3",74,0)=" S DIR(0)=""E"",DIR(""A"")=""Press enter to continue"" D ^DIR"
^XTMP("XPDT",7801,"RTN","GMRAFX3",75,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAFX3",76,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",77,0)="GETNUM(ACTION) ; -- Return numbers to act on, if action chosen first"
^XTMP("XPDT",7801,"RTN","GMRAFX3",78,0)=" N X,Y,DIR,MAX"
^XTMP("XPDT",7801,"RTN","GMRAFX3",79,0)=" S MAX=$S($D(^TMP($J,LTYPE,""IDX2"")):$G(^TMP($J,LTYPE,""IDX2"",0)),1:$G(VALMCNT)) Q:MAX'>0 """""
^XTMP("XPDT",7801,"RTN","GMRAFX3",80,0)=" I ACTION=""DET"" W !!,""Please choose only one entry for the detailed display."""
^XTMP("XPDT",7801,"RTN","GMRAFX3",81,0)=" S DIR(0)=""LAO^1:""_MAX,DIR(""A"")=""Select Entries from list: """
^XTMP("XPDT",7801,"RTN","GMRAFX3",82,0)=" S DIR(""?"")=""Enter the items you wish to act on, as a range or list of numbers."""
^XTMP("XPDT",7801,"RTN","GMRAFX3",83,0)=" D ^DIR S:$D(DTOUT) Y=""^"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",84,0)=" I $D(Y(1)) W !,"">>>Too many entries selected, try using smaller ranges"" H 2 S Y=""^"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",85,0)=" I $L($G(Y),"","")>2,ACTION=""DET"" W !,"">>You may only choose ONE group for detailed display."" H 2 S Y=""^"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",86,0)=" Q Y"
^XTMP("XPDT",7801,"RTN","GMRAFX3",87,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",88,0)="UPDATE ;Update display to account for changes to the list"
^XTMP("XPDT",7801,"RTN","GMRAFX3",89,0)=" N CNT,SP1,SP2,SP3"
^XTMP("XPDT",7801,"RTN","GMRAFX3",90,0)=" I VALMAR[""GMRADET"" N VALMAR S VALMAR=""^XTMP(""""GMRAFX"""",LTYPE)"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",91,0)=" S CNT=^XTMP(""GMRAFX"",LTYPE,""GMRAR"",$P(ENTRY,U),$P(ENTRY,U,2))-1"
^XTMP("XPDT",7801,"RTN","GMRAFX3",92,0)=" S ^XTMP(""GMRAFX"",LTYPE,""GMRAR"",$P(ENTRY,U),$P(ENTRY,U,2))=CNT K ^($P(ENTRY,U,2),GMRAJ)"
^XTMP("XPDT",7801,"RTN","GMRAFX3",93,0)=" S SP1=4-$L(+NUM),SP2=40-$L($P(ENTRY,U)),SP3=$S(CNT:16-$L(CNT)\2,1:2)"
^XTMP("XPDT",7801,"RTN","GMRAFX3",94,0)=" D SET^VALM10(+NUM,+NUM_$$REPEAT^XLFSTR("" "",SP1)_$P(ENTRY,U,2)_$$REPEAT^XLFSTR("" "",(SP2+SP3))_$S(CNT:CNT,1:""** FIXED **""))"
^XTMP("XPDT",7801,"RTN","GMRAFX3",95,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAFX3",96,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",97,0)="LOCK(ENTRY) ;Lock entry in 120.8"
^XTMP("XPDT",7801,"RTN","GMRAFX3",98,0)=" N LOCK"
^XTMP("XPDT",7801,"RTN","GMRAFX3",99,0)=" S LOCK=1"
^XTMP("XPDT",7801,"RTN","GMRAFX3",100,0)=" L +^XTMP(""GMRAFX"",LTYPE,""IDX"",ENTRY):1"
^XTMP("XPDT",7801,"RTN","GMRAFX3",101,0)=" I '$T D FULL^VALM1 S VALMBCK=""R"" W !,""The "",$P(^XTMP(""GMRAFX"",LTYPE,""IDX"",ENTRY),U),"" group is being edited by another user"" D WAIT S LOCK=0"
^XTMP("XPDT",7801,"RTN","GMRAFX3",102,0)=" Q LOCK"
^XTMP("XPDT",7801,"RTN","GMRAFX3",103,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",104,0)="AR ;Add/edit patient reactions"
^XTMP("XPDT",7801,"RTN","GMRAFX3",105,0)=" N LCV,DFN,SUB"
^XTMP("XPDT",7801,"RTN","GMRAFX3",106,0)=" S VALMBCK=""R"" D FULL^VALM1"
^XTMP("XPDT",7801,"RTN","GMRAFX3",107,0)=" W !!,""You should use this option to add NEW reactions only.  If you mark"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",108,0)=" W !,""existing entries as entered in error from within this option it will"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",109,0)=" W !,""not update the utility's display until the list is rebuilt upon re-entry"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",110,0)=" W !,""of this option.  This could cause confusion as the list will no longer"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",111,0)=" W !,""be accurate."",!"
^XTMP("XPDT",7801,"RTN","GMRAFX3",112,0)=" I '$G(NMBR2) D WAIT,EN1^GMRAPEM0 Q"
^XTMP("XPDT",7801,"RTN","GMRAFX3",113,0)=" F LCV=1:1:$L(NMBR2,"","")-1 S SUB=$P(NMBR2,"","",LCV) S DFN=+$P($G(^GMR(120.8,+$P($G(^TMP($J,LTYPE,""IDX2"",SUB)),U,2),0)),U) I DFN W !!,""Now working with patient "",$$GET1^DIQ(2,DFN,.01),! D WAIT D EN2^GMRAPEM0"
^XTMP("XPDT",7801,"RTN","GMRAFX3",114,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAFX3",115,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",116,0)="DSPREACT ;Display detailed information about the reactant"
^XTMP("XPDT",7801,"RTN","GMRAFX3",117,0)=" N DIC,DA,GMRAI,STOP,NUM2,DIR,Y"
^XTMP("XPDT",7801,"RTN","GMRAFX3",118,0)=" S VALMBCK=""R"" D FULL^VALM1"
^XTMP("XPDT",7801,"RTN","GMRAFX3",119,0)=" I '$G(NMBR2) S NMBR2=$$GETNUM("""") Q:'+NMBR2"
^XTMP("XPDT",7801,"RTN","GMRAFX3",120,0)=" F GMRAI=1:1:($L(NMBR2,"","")-1) D  Q:$G(STOP)"
^XTMP("XPDT",7801,"RTN","GMRAFX3",121,0)=" .S NUM2=$P(NMBR2,"","",GMRAI)"
^XTMP("XPDT",7801,"RTN","GMRAFX3",122,0)=" .S DA=$P(^TMP($J,LTYPE,""IDX2"",NUM2),U,2) Q:'DA"
^XTMP("XPDT",7801,"RTN","GMRAFX3",123,0)=" .S DIC=""^GMR(120.8,"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",124,0)=" .W ! D EN^DIQ"
^XTMP("XPDT",7801,"RTN","GMRAFX3",125,0)=" .S DIR(0)=""E"",DIR(""A"")=""Press return to continue or '^' to stop"" D ^DIR"
^XTMP("XPDT",7801,"RTN","GMRAFX3",126,0)=" .S:$D(DIRUT) STOP=1"
^XTMP("XPDT",7801,"RTN","GMRAFX3",127,0)=" .Q"
^XTMP("XPDT",7801,"RTN","GMRAFX3",128,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAFX3",129,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",130,0)="GETTYPE(LTYPE) ;Function determines which list to work with"
^XTMP("XPDT",7801,"RTN","GMRAFX3",131,0)=" N DIR,X,Y"
^XTMP("XPDT",7801,"RTN","GMRAFX3",132,0)=" S DIR(0)=""SO^1:Free Text;2:Ingredient;3:Drug Class"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",133,0)=" S DIR(""A"")=""Select the list you wish to work with"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",134,0)=" D ^DIR K DIR"
^XTMP("XPDT",7801,"RTN","GMRAFX3",135,0)=" S LTYPE=$S(Y=1:""FREE"",Y=2:""ING"",Y=3:""DRUG"",1:0)"
^XTMP("XPDT",7801,"RTN","GMRAFX3",136,0)=" Q LTYPE"
^XTMP("XPDT",7801,"RTN","GMRAFX3",137,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",138,0)="EIE ;Mark individual entry as entered in error"
^XTMP("XPDT",7801,"RTN","GMRAFX3",139,0)=" N DIE,DA,DR,Y,DIK,DFN,OROLD,VAIN,X,GMRAOUT"
^XTMP("XPDT",7801,"RTN","GMRAFX3",140,0)=" S DIE=""^GMR(120.8,"",DA=GMRAPA,DR=""15///1;22///1;23///NOW;24////""_$G(DUZ,.5) ;20"
^XTMP("XPDT",7801,"RTN","GMRAFX3",141,0)=" D ^DIE ;Entered in error on date/time by user"
^XTMP("XPDT",7801,"RTN","GMRAFX3",142,0)=" D ADCOM^GMRAFX(GMRAPA,""E"",""Marked Entered in Error during clean up process"")"
^XTMP("XPDT",7801,"RTN","GMRAFX3",143,0)=" I $$NKASCR^GMRANKA($P(^GMR(120.8,GMRAPA,0),U)) D"
^XTMP("XPDT",7801,"RTN","GMRAFX3",144,0)=" .S DIK=""^GMR(120.86,"",DA=$P(^GMR(120.8,GMRAPA,0),U)"
^XTMP("XPDT",7801,"RTN","GMRAFX3",145,0)=" .D ^DIK ;If patient's last allergy marked as entered in error then delete assessment"
^XTMP("XPDT",7801,"RTN","GMRAFX3",146,0)=" .W !!,""**NOTE: By marking this reaction as entered in error, "",$$GET1^DIQ(2,DA,.01,""E""),!,""no longer has an assessment on file.  You may reassess this patient"",!"
^XTMP("XPDT",7801,"RTN","GMRAFX3",147,0)=" .W ""now by answering the following prompt or hit return to do it later."",!"
^XTMP("XPDT",7801,"RTN","GMRAFX3",148,0)=" .D NKAASK^GMRANKA(DA)"
^XTMP("XPDT",7801,"RTN","GMRAFX3",149,0)=" S GMRAPA(0)=$G(^GMR(120.8,GMRAPA,0)) Q:GMRAPA(0)="""""
^XTMP("XPDT",7801,"RTN","GMRAFX3",150,0)=" S GMRAOUT=0"
^XTMP("XPDT",7801,"RTN","GMRAFX3",151,0)=" D EN1^GMRAEAB ;Sends entered in error bulletin to appropriate mail groups"
^XTMP("XPDT",7801,"RTN","GMRAFX3",152,0)=" S DFN=$P(GMRAPA(0),U)"
^XTMP("XPDT",7801,"RTN","GMRAFX3",153,0)=" D INP^VADPT S X=$$FIND1^DIC(101,,""BX"",""GMRA ENTERED IN ERROR"")_"";ORD(101,"" ;19"
^XTMP("XPDT",7801,"RTN","GMRAFX3",154,0)=" D:X EN^XQOR ;Process protocols hanging off of ""entered in error"" protocol"
^XTMP("XPDT",7801,"RTN","GMRAFX3",155,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAFX3",156,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAFX3",157,0)="RUSURE(GMRASURE) ;20 Make sure selection from ingredient or drug class file is ok"
^XTMP("XPDT",7801,"RTN","GMRAFX3",158,0)=" ;entire section added in patch 20"
^XTMP("XPDT",7801,"RTN","GMRAFX3",159,0)=" N DIR,Y,X"
^XTMP("XPDT",7801,"RTN","GMRAFX3",160,0)=" S GMRASURE=1"
^XTMP("XPDT",7801,"RTN","GMRAFX3",161,0)=" I $G(GMRAAR)[""50.416""!($G(GMRAAR)[""50.605"") D"
^XTMP("XPDT",7801,"RTN","GMRAFX3",162,0)=" .S DIR(""A"")=""Are you sure you want to use this reactant"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",163,0)=" .S DIR(""A"",1)=""You are about to update the entry with a selection from"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",164,0)=" .S DIR(""A"",2)=""the ""_$S($G(GMRAAR)[""50.416"":""INGREDIENT"",1:""VA DRUG CLASS"")_"" file.  By doing that you are"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",165,0)=" .S DIR(""A"",3)=""limiting the information available for order checking."""
^XTMP("XPDT",7801,"RTN","GMRAFX3",166,0)=" .S DIR(""A"",4)="""""
^XTMP("XPDT",7801,"RTN","GMRAFX3",167,0)=" .S DIR(""A"",5)=""In general, it is better to choose from one of the drug related files"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",168,0)=" .S DIR(""A"",6)=""as that ensures that drug class and ingredient information are part"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",169,0)=" .S DIR(""A"",7)=""of the patient's allergy definition and will provide better allergy"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",170,0)=" .S DIR(""A"",8)=""order checking."""
^XTMP("XPDT",7801,"RTN","GMRAFX3",171,0)=" .S DIR(""A"",9)="""""
^XTMP("XPDT",7801,"RTN","GMRAFX3",172,0)=" .S DIR(0)=""Y"",DIR(""B"")=""NO"""
^XTMP("XPDT",7801,"RTN","GMRAFX3",173,0)=" .D ^DIR S GMRASURE=+Y"
^XTMP("XPDT",7801,"RTN","GMRAFX3",174,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2")="0^1^B88391433^B81816140"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",1,0)="GMRAUTL2 ;SLC/DAN - New style index utilities, update utility for 120.8 ;03/16/10  08:34"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",2,0)=" ;;4.0;Adverse Reaction Tracking;**23,36,41,45**;Mar 29, 1996;Build 1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",3,0)=" ;DBIA Section"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",4,0)=" ;%ZTLOAD    - 10063"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",5,0)=" ;DIE        - 10018"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",6,0)=" ;FILE^DIE   - 2053"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",7,0)=" ;UPDATE^DIE - 2053"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",8,0)=" ;DIQ        - 2056"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",9,0)=" ;ORCHECK    - 4859"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",10,0)=" ;ORKCHK     - 4135"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",11,0)=" ;ORQOR2     - 3458"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",12,0)=" ;ORX8       - 2467"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",13,0)=" ;PSN50P41   - 4531"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",14,0)=" ;PSN50P65   - 4543"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",15,0)=" ;XLFDT      - 10103"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",16,0)=" ;XTID       - 4631"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",17,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",18,0)=" N GMRAI,GMRAC,ENTRY,UPDATED"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",19,0)=" Q:$G(X1(1))=$G(X2(1))  ;Entry unchanged"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",20,0)=" S ENTRY=DA(1)_"";GMRD(120.82,""_""^""_$P(^GMRD(120.82,DA(1),0),""^"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",21,0)=" I $G(X1(1))>0,$G(X2(1))>0 S:$G(GMRAT)=""ING"" GMRAI(""D"",X1(1))="""",GMRAI(""A"",X2(1))="""" S:$G(GMRAT)=""CLASS"" GMRAC(""D"",X1(1))="""",GMRAC(""A"",X2(1))="""" ;Edited existing entry"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",22,0)=" I $G(X1(1))>0,$G(X2(1))="""" S:$G(GMRAT)=""ING"" GMRAI(""D"",X1(1))="""" S:$G(GMRAT)=""CLASS"" GMRAC(""D"",X1(1))="""" ;Entry deleted"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",23,0)=" I $G(X1(1))="""",$G(X2(1))>0 S:$G(GMRAT)=""ING"" GMRAI(""A"",X2(1))="""" S:$G(GMRAT)=""CLASS"" GMRAC(""A"",X2(1))="""" ;New entry"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",24,0)=" D QUP ;Queue updating of existing entries and order checking"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",25,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",26,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",27,0)="QUP ;Queue the update"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",28,0)=" S ZTRTN=""UPDATE^GMRAUTL2(ENTRY,.GMRAI,.GMRAC)"",ZTIO=""GMRA UPDATE RESOURCE"",ZTDTH=$H,ZTDESC=""Update existing allergies"",ZTSAVE(""*"")="""" D ^%ZTLOAD Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",29,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",30,0)="UPDATE(ENTRY,ING,CLASS) ;Update existing entries in 120.8 with new information."
^XTMP("XPDT",7801,"RTN","GMRAUTL2",31,0)=" ;Entry is IEN;File reference^Text of file entry - 6;GMRD(120.82,^STRAWBERRIES"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",32,0)=" ;ING - Array of ingredients - ""A"",IEN for those to be added and ""D"",IEN for those to be deleted"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",33,0)=" ;CLASS - Array of drug classes - ""A"",IEN for those to be added and ""D"",IEN for those to be deleted"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",34,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",35,0)=" N ALLERGY,POINTER,ACTION,SUB,SUBI,SUBC,DFN,GMRAS,GMRACOM"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",36,0)=" S ALLERGY=$P(ENTRY,""^"",2) Q:ALLERGY="""""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",37,0)=" S POINTER=$P(ENTRY,""^"") Q:POINTER="""""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",38,0)=" S SUB=0 F  S SUB=$O(^GMR(120.8,""C"",ALLERGY,SUB)) Q:'+SUB  D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",39,0)=" .S DFN=$P(^GMR(120.8,SUB,0),U)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",40,0)=" .Q:$$DECEASED^GMRAFX(DFN)  ;Don't update if patient is deceased"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",41,0)=" .Q:$P(^GMR(120.8,SUB,0),""^"",3)'=POINTER  ;Same text name but not the same entry"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",42,0)=" .Q:$G(^GMR(120.8,SUB,""ER""))>0  ;Entered in error"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",43,0)=" .S GMRACOM=0"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",44,0)=" .F ACTION=""A"",""D"" D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",45,0)=" ..S SUBI=0 F  S SUBI=$O(ING(ACTION,SUBI)) Q:'+SUBI  D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",46,0)=" ...I ACTION=""A"" D ADD(""I"",SUB,SUBI,.GMRAS) I $G(GMRAS) S ING(ACTION,SUBI)=1,GMRACOM=1,UPDATED(DFN)="""""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",47,0)=" ...I ACTION=""D"" D DEL(""I"",SUB,SUBI,.GMRAS) I $G(GMRAS) S ING(ACTION,SUBI)=1,GMRACOM=1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",48,0)=" ..S SUBC=0 F  S SUBC=$O(CLASS(ACTION,SUBC)) Q:'+SUBC  D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",49,0)=" ...I ACTION=""A"" D ADD(""C"",SUB,SUBC,.GMRAS) I $G(GMRAS) S CLASS(ACTION,SUBC)=1,UPDATED(DFN)="""",GMRACOM=1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",50,0)=" ...I ACTION=""D"" D DEL(""C"",SUB,SUBC,.GMRAS) I $G(GMRAS) S GMRACOM=1,CLASS(ACTION,SUBC)=1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",51,0)=" .I $G(GMRACOM) D ADDCOM"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",52,0)=" I $D(UPDATED) D CHKORD ;New order checks now?"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",53,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",54,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",55,0)="ADD(TYPE,ALENT,SUBENT,GMRAS) ;Adds entry to appropriate multiple"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",56,0)=" N FILE,FDA,EM"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",57,0)=" S GMRAS=1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",58,0)=" I $D(^GMR(120.8,ALENT,$S(TYPE=""I"":2,1:3),""B"",SUBENT)) S GMRAS=0 Q  ;Entry already exists"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",59,0)=" L +^GMR(120.8,ALENT)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",60,0)=" S FILE=$S(TYPE=""I"":120.802,1:120.803)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",61,0)=" S FDA(FILE,""+1,""_ALENT_"","",.01)=SUBENT"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",62,0)=" D UPDATE^DIE("""",""FDA"",,""EM"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",63,0)=" L -^GMR(120.8,ALENT)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",64,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",65,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",66,0)="DEL(TYPE,ALENT,SUBENT,GMRAS) ;Delete entry from multiple"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",67,0)=" N FILE,FDA,EM,ENTRY"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",68,0)=" S GMRAS=1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",69,0)=" I '$D(^GMR(120.8,ALENT,$S(TYPE=""I"":2,1:3),""B"",SUBENT)) S GMRAS=0 Q  ;No entry to delete"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",70,0)=" L +^GMR(120.8,ALENT)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",71,0)=" S ENTRY=$O(^GMR(120.8,ALENT,$S(TYPE=""I"":2,1:3),""B"",SUBENT,0)) Q:'+ENTRY"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",72,0)=" S FILE=$S(TYPE=""I"":120.802,1:120.803)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",73,0)=" S FDA(FILE,ENTRY_"",""_ALENT_"","",.01)=""@"""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",74,0)=" D FILE^DIE("""",""FDA"",""EM"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",75,0)=" L -^GMR(120.8,ALENT)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",76,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",77,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",78,0)="CHKORD ;Check for orders that are now in conflict with existing allergy data"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",79,0)=" N TIME,GMRAOC,ORX,SUB,GMRAORX,GI,CNT,DFN"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",80,0)=" Q:'+$G(DUZ)  ;Don't check if no valid user to send data to"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",81,0)=" K ^TMP(""ORR"",$J),^TMP($J,""ERR"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",82,0)=" S DFN=0 F  S DFN=$O(UPDATED(DFN)) Q:'+DFN  D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",83,0)=" .D EN^ORQ1(DFN_"";DPT("") ;Retrieve active orders"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",84,0)=" .S TIME=$O(^TMP(""ORR"",$J,0))"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",85,0)=" .Q:'^TMP(""ORR"",$J,TIME,""TOT"")  ;No orders found"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",86,0)=" .S SUB=0 F  S SUB=$O(^TMP(""ORR"",$J,TIME,SUB)) Q:'+SUB  D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",87,0)=" ..D BLD^ORCHECK(+^TMP(""ORR"",$J,TIME,SUB)) ;Get ""order"" information in order checking format"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",88,0)=" .M GMRAORX=ORX K ORX,GMRAOC"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",89,0)=" .D EN^ORKCHK(.GMRAOC,DFN,.GMRAORX,""ACCEPT"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",90,0)=" .S GI=0,CNT=0 F  S GI=$O(GMRAOC(GI)) Q:'+GI  D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",91,0)=" ..Q:$P(GMRAOC(GI),U,2)'=3  ;Quit if not allergy related"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",92,0)=" ..;Q:$D(^OR(100,$P(GMRAOC(GI),U),9,""B"",3))  ;Quit if existing allergy order check, can't be for this new information"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",93,0)=" ..Q:$$ANYARTOC^GMRAUTL2($P(GMRAOC(GI),U))  ;Quit if existing allergy order check, can't be for this new information"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",94,0)=" ..S CNT=CNT+1,^TMP($J,""ERR"",DFN,CNT)=$P($$STATUS^ORQOR2($P(GMRAOC(GI),U)),U,2)_"" order for ""_$P($$OI^ORX8($P(GMRAOC(GI),U)),U,2)_"",order #""_$P(GMRAOC(GI),U)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",95,0)=" .K GMRAORX ;Remove previous list of orders"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",96,0)=" D MAIL K ^TMP(""ORR"",$J),^TMP($J,""ERR"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",97,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",98,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",99,0)="ANYARTOC(GMRAIFN) ;check order to see if there are any allergy order checks"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",100,0)=" N GMRARET,GMRAI"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",101,0)=" S GMRARET=0"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",102,0)=" K ^TMP($J,""GMRAOC"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",103,0)=" D OCAPI^ORCHECK(+GMRAIFN,""GMRAOC"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",104,0)=" S GMRAI=0 F  S GMRAI=$O(^TMP($J,""GMRAOC"",GMRAI)) Q:'GMRAI  I $G(^TMP($J,""GMRAOC"",GMRAI,""OC NUMBER""))=3 S GMRARET=1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",105,0)=" K ^TMP($J,""GMRAOC"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",106,0)=" Q GMRARET"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",107,0)="ADDCOM ;Add comment to updated allergy indicating changes"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",108,0)=" D ADDCOM^GMRAUTL3 ;41 Moved section due to space considerations"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",109,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",110,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",111,0)="MAIL ;Send message containing potential order checks to user."
^XTMP("XPDT",7801,"RTN","GMRAUTL2",112,0)=" N XMSUB,XMTEXT,XMDUZ,XMY,XMZ,CNT,SUB,ERR,TYPE,NUM"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",113,0)=" Q:'$D(^TMP($J,""ERR""))  ;Nothing to report"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",114,0)=" K ^TMP($J,""TEXT""),^TMP($J,""GMRAINFO"") ;41 Clear out storage area"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",115,0)=" S XMDUZ=""Allergy auto-update program"""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",116,0)=" S XMY($G(DUZ,.5))="""" ;Send to user who initiated change or postmaster"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",117,0)=" S XMY(""G.GMRA REQUEST NEW REACTANT"")="""" ;Include mail group to be sure someone gets this message"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",118,0)=" S CNT=1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",119,0)=" S ^TMP($J,""TEXT"",CNT)=""The ""_$P(ENTRY,U,2)_"" reactant was updated."",CNT=CNT+1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",120,0)=" S ^TMP($J,""TEXT"",CNT)=""The following drug classes and/or drug ingredients were added:"",CNT=CNT+1,^TMP($J,""TEXT"",CNT)="""",CNT=CNT+1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",121,0)=" F TYPE=""GMRAI"",""GMRAC"" D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",122,0)=" .I $D(@(TYPE)) D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",123,0)=" ..S ^TMP($J,""TEXT"",CNT)=$S(TYPE=""GMRAI"":""Ingredients"",1:""Classes"")_"": "",CNT=CNT+1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",124,0)=" ..S NUM=0 F  S NUM=$O(@TYPE@(""A"",NUM)) Q:'+NUM  S ^TMP($J,""TEXT"",CNT)=$G(^TMP($J,""TEXT"",CNT))_$S($L($G(^TMP($J,""TEXT"",CNT))):"","",1:"""") D  ;41 added call for data in structure below"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",125,0)=" ...I TYPE=""GMRAI"" D ZERO^PSN50P41(NUM,,$$DT^XLFDT,""GMRAINFO"") ;41 ingredient call"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",126,0)=" ...I TYPE=""GMRAC"" D C^PSN50P65(NUM,,""GMRAINFO"") ;41 drug class call"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",127,0)=" ...S ^TMP($J,""TEXT"",CNT)=^TMP($J,""TEXT"",CNT)_$G(^TMP($J,""GMRAINFO"",NUM,.01)) ;41 add data"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",128,0)=" ..S CNT=CNT+1,^TMP($J,""TEXT"",CNT)="""",CNT=CNT+1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",129,0)=" S ^TMP($J,""TEXT"",CNT)=""As a result of the update the following patients have drug-allergy"",CNT=CNT+1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",130,0)=" S ^TMP($J,""TEXT"",CNT)=""interactions that need to be reviewed to ensure the patient's safety."",CNT=CNT+1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",131,0)=" S SUB=0 F  S SUB=$O(^TMP($J,""ERR"",SUB)) Q:'+SUB  D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",132,0)=" .S ^TMP($J,""TEXT"",CNT)="""",CNT=CNT+1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",133,0)=" .S ^TMP($J,""TEXT"",CNT)=$$GET1^DIQ(2,SUB_"","",.01),CNT=CNT+1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",134,0)=" .S ERR=0 F  S ERR=$O(^TMP($J,""ERR"",SUB,ERR)) Q:'+ERR  S ^TMP($J,""TEXT"",CNT)=""   ""_^TMP($J,""ERR"",SUB,ERR),CNT=CNT+1"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",135,0)=" S XMTEXT=""^TMP($J,""""TEXT"""","",XMSUB=""Potential order checks from allergy update"""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",136,0)=" D ^XMD"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",137,0)=" K ^TMP($J,""TEXT"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",138,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",139,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",140,0)="TOP10 ;Check top 10 reactions after push of file 120.83"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",141,0)=" N SUB,REAC,REACNO,ARRAY,SUBNM,REACNM,GMRATXT,XMSUB,XMTEXT,XMDUZ,XMY,DIFROM,CNT"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",142,0)=" I '$L($T(SCREEN^XTID)) Q  ;No screening code so quit"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",143,0)=" S SUB=0 F  S SUB=$O(^GMRD(120.84,SUB)) Q:'+SUB  I $D(^GMRD(120.84,SUB,1)) D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",144,0)=" .S REAC=0 F  S REAC=$O(^GMRD(120.84,SUB,1,REAC)) Q:'+REAC  D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",145,0)=" ..S REACNO=$P(^GMRD(120.84,SUB,1,REAC,0),U) Q:'+REACNO"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",146,0)=" ..I $$SCREEN^XTID(120.83,.01,REACNO_"","") D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",147,0)=" ...S SUBNM=$P(^GMRD(120.84,SUB,0),U),REACNM=$P(^GMRD(120.83,REACNO,0),U)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",148,0)=" ...S ARRAY(SUBNM,REACNM)="""""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",149,0)=" I $D(ARRAY) D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",150,0)=" .S XMDUZ=""Data Standardization update of file 120.83"",XMY(""G.GMRA REQUEST NEW REACTANT"")="""""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",151,0)=" .S GMRATXT(1)=""The signs/symptoms file has been automatically updated.  You're receiving"""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",152,0)=" .S GMRATXT(2)=""this message because one or more signs/symptoms was inactivated during this"""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",153,0)=" .S GMRATXT(3)=""update and the term(s) appear in your top ten list and must be replaced."""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",154,0)=" .S GMRATXT(4)=""Below you will find the name of the site parameter and the terms that are now"""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",155,0)=" .S GMRATXT(5)=""inactive for that entry.  Use the Enter/Edit Site Parameters [GMRA SITE FILE]"""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",156,0)=" .S GMRATXT(6)=""option to find and replace these terms."""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",157,0)=" .S GMRATXT(7)="""""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",158,0)=" .S CNT=7"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",159,0)=" .S SUB="""" F  S SUB=$O(ARRAY(SUB)) Q:SUB=""""  S CNT=CNT+1,GMRATXT(CNT)=""Site parameter: ""_SUB D  S CNT=CNT+1,GMRATXT(CNT)="""""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",160,0)=" ..S REAC="""" F  S REAC=$O(ARRAY(SUB,REAC)) Q:REAC=""""  S CNT=CNT+1,GMRATXT(CNT)=""Term: ""_REAC"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",161,0)=" .S XMTEXT=""GMRATXT("",XMSUB=""Signs/symptoms require updating"""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",162,0)=" .D ^XMD"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",163,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",164,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",165,0)="QREACT ;Queue name update, called from ""AC"" xref in file 120.82.  Entire section added in patch 23"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",166,0)=" N OTERM,NTERM,ZTRTN,ZTDTH,ZTIO,ZTDESC"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",167,0)=" Q:X1(1)=""""!(X2(1)="""")  ;Entry is new or has been deleted, no updating required"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",168,0)=" Q:X1(1)=X2(1)  ;Entry has been updated to same value, no updating required"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",169,0)=" S OTERM=X1(1),NTERM=X2(1)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",170,0)=" S ZTRTN=""REACT^GMRAUTL2"",ZTIO=""GMRA UPDATE RESOURCE"",ZTDTH=$H,ZTDESC=""UPDATE REACTANT FIELD IN 120.8"",ZTSAVE(""*"")="""" D ^%ZTLOAD"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",171,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",172,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",173,0)="REACT ;Update REACTANT field with name from 120.82.  Section added with patch 23"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",174,0)=" N IEN,FDA,EM,DFN"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",175,0)=" S IEN=0 F  S IEN=$O(^GMR(120.8,""C"",OTERM,IEN)) Q:'+IEN  D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",176,0)=" .S DFN=$P(^GMR(120.8,IEN,0),U)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",177,0)=" .Q:$$DECEASED^GMRAFX(DFN)  ;Don't update if patient is deceased"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",178,0)=" .Q:+$G(^GMR(120.8,IEN,""ER""))  ;Don't update if entered in error"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",179,0)=" .L +^GMR(120.8,IEN)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",180,0)=" .S FDA(120.8,IEN_"","",.02)=NTERM"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",181,0)=" .D FILE^DIE("""",""FDA"",""EM"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",182,0)=" .L -^GMR(120.8,IEN)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",183,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",184,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",185,0)="QTYPE ;Queue allergy type updates, section added in 36"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",186,0)=" N ENTRY"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",187,0)=" S ENTRY=DA_"";GMRD(120.82,""_""^""_$P(^GMRD(120.82,DA,0),""^"")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",188,0)=" Q:X1(1)=""""!(X2(1)="""")"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",189,0)=" Q:X1(1)=X2(1)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",190,0)=" S ZTRTN=""TYPE^GMRAUTL2"",ZTIO="""",ZTDTH=$H,ZTDESC=""Allergy type updates"",ZTSAVE(""*"")="""" D ^%ZTLOAD"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",191,0)=" Q"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",192,0)=" ;"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",193,0)="TYPE ;Find related entries in 120.8 and update, section added in 36"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",194,0)=" N ALLERGY,POINTER,DFN,SUB"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",195,0)=" S ALLERGY=$P(ENTRY,""^"",2) Q:ALLERGY="""""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",196,0)=" S POINTER=$P(ENTRY,""^"") Q:POINTER="""""
^XTMP("XPDT",7801,"RTN","GMRAUTL2",197,0)=" S SUB=0 F  S SUB=$O(^GMR(120.8,""C"",ALLERGY,SUB)) Q:'+SUB  D"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",198,0)=" .Q:$P(^GMR(120.8,SUB,0),""^"",3)'=POINTER  ;Same text name but not the same entry"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",199,0)=" .S DFN=$P(^GMR(120.8,SUB,0),U)"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",200,0)=" .Q:$$DECEASED^GMRAFX(DFN)  ;Don't update if patient is deceased"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",201,0)=" .Q:$G(^GMR(120.8,SUB,""ER""))>0  ;Entered in error"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",202,0)=" .S DR=""3.1///""_X2(1),DIE=120.8,DA=SUB D ^DIE ;Update allergy type"
^XTMP("XPDT",7801,"RTN","GMRAUTL2",203,0)=" Q"
^XTMP("XPDT",7801,"VER")="8.0^22.0"
^XTMP("XPDT",7807)="1"
^XTMP("XPDT",7807,"BLD",7400,0)="PSJ*5.0*179^INPATIENT MEDICATIONS^0^3100420^y"
^XTMP("XPDT",7807,"BLD",7400,1,0)="^^35^35^3100420^"
^XTMP("XPDT",7807,"BLD",7400,1,1,0)="Patch PSJ*5*179 Will correct the following issues."
^XTMP("XPDT",7807,"BLD",7400,1,2,0)=" "
^XTMP("XPDT",7807,"BLD",7400,1,3,0)="1.  HD0000000099382 - PSI-05-053 Drug dose can be administered twice."
^XTMP("XPDT",7807,"BLD",7400,1,4,0)="When a dose is given in Bar Code Medication Administration for an"
^XTMP("XPDT",7807,"BLD",7400,1,5,0)="Inpatient Order, the order is marked in BCMA as GIVEN.  If a Pharmacist"
^XTMP("XPDT",7807,"BLD",7400,1,6,0)="edit's a field with a star (*), the new order may overwrite the"
^XTMP("XPDT",7807,"BLD",7400,1,7,0)="administration that was given in BCMA.  The possibility of giving the"
^XTMP("XPDT",7807,"BLD",7400,1,8,0)="patient a ""double"" dose exists."
^XTMP("XPDT",7807,"BLD",7400,1,9,0)=" "
^XTMP("XPDT",7807,"BLD",7400,1,10,0)="2. HD0000000195783 - IMO Location not getting default stop date."
^XTMP("XPDT",7807,"BLD",7400,1,11,0)="When using inpatient medications for Outpatient Orders, the "
^XTMP("XPDT",7807,"BLD",7400,1,12,0)="correct stop date is not displayed on the patient profile of the"
^XTMP("XPDT",7807,"BLD",7400,1,13,0)="Backdoor Pharmacy Order Entry screen.  If there is a value defined in"
^XTMP("XPDT",7807,"BLD",7400,1,14,0)="Clinic Definition File for the ""NUMBER OF DAYS UNTIL STOP field, the"
^XTMP("XPDT",7807,"BLD",7400,1,15,0)="order should use the default stop date. Currently this default stop date"
^XTMP("XPDT",7807,"BLD",7400,1,16,0)="is not used when the order is finished as a unit dose."
^XTMP("XPDT",7807,"BLD",7400,1,17,0)=" "
^XTMP("XPDT",7807,"BLD",7400,1,18,0)="3. HD0000000210901 - PSI-07-172 Reads of File 51.1 not checking Package"
^XTMP("XPDT",7807,"BLD",7400,1,19,0)="                     Prefix."
^XTMP("XPDT",7807,"BLD",7400,1,20,0)="When calculating the default Stop Date/Time for a Unit Dose order, "
^XTMP("XPDT",7807,"BLD",7400,1,21,0)="Inpatient Medications uses the schedule type field from the Administration"
^XTMP("XPDT",7807,"BLD",7400,1,22,0)="Schedule File (#51.1) to determine which Inpatient Ward Parameter"
^XTMP("XPDT",7807,"BLD",7400,1,23,0)="should be used.  The Days Until Stop Date/Time or Days Until Stop for "
^XTMP("XPDT",7807,"BLD",7400,1,24,0)="One-time will be used.  "
^XTMP("XPDT",7807,"BLD",7400,1,25,0)="However, the package prefix is not used when retrieving the schedule"
^XTMP("XPDT",7807,"BLD",7400,1,26,0)="type from the Schedule File and as result, the wrong schedule and"
^XTMP("XPDT",7807,"BLD",7400,1,27,0)="schedule type could be used.  This will result in an incorrect default"
^XTMP("XPDT",7807,"BLD",7400,1,28,0)="Stop Date/Time being calculated. "
^XTMP("XPDT",7807,"BLD",7400,1,29,0)="be calculated."
^XTMP("XPDT",7807,"BLD",7400,1,30,0)=" "
^XTMP("XPDT",7807,"BLD",7400,1,31,0)="4.  HD0000000237637 - Editing Admit time, then comments renders no change."
^XTMP("XPDT",7807,"BLD",7400,1,32,0)="Updates to the admin time field are not accepted when editing the admin"
^XTMP("XPDT",7807,"BLD",7400,1,33,0)="time on an existing Unit Dose order, then editing the comment field. "
^XTMP("XPDT",7807,"BLD",7400,1,34,0)="The original admin time will remain.  "
^XTMP("XPDT",7807,"BLD",7400,1,35,0)="This also happens when the user edits the comment field first."
^XTMP("XPDT",7807,"BLD",7400,4,0)="^9.64PA^^"
^XTMP("XPDT",7807,"BLD",7400,6)="27^"
^XTMP("XPDT",7807,"BLD",7400,6.3)="28"
^XTMP("XPDT",7807,"BLD",7400,"ABPKG")="n"
^XTMP("XPDT",7807,"BLD",7400,"KRN",0)="^9.67PA^8989.52^19"
^XTMP("XPDT",7807,"BLD",7400,"KRN",.4,0)=".4"
^XTMP("XPDT",7807,"BLD",7400,"KRN",.401,0)=".401"
^XTMP("XPDT",7807,"BLD",7400,"KRN",.402,0)=".402"
^XTMP("XPDT",7807,"BLD",7400,"KRN",.403,0)=".403"
^XTMP("XPDT",7807,"BLD",7400,"KRN",.5,0)=".5"
^XTMP("XPDT",7807,"BLD",7400,"KRN",.84,0)=".84"
^XTMP("XPDT",7807,"BLD",7400,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7807,"BLD",7400,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM",0)="^9.68A^8^8"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM",1,0)="PSGNE3^^0^B83686662"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM",2,0)="PSGOEE^^0^B63125131"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM",3,0)="PSGOE91^^0^B41627571"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM",4,0)="PSIVCAL^^0^B66722231"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM",5,0)="PSJUTL^^0^B65890056"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM",6,0)="PSIVOPT1^^0^B41157707"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM",7,0)="PSGOE6^^0^B24406814"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM",8,0)="PSGOEE0^^0^B27327541"
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM","B","PSGNE3",1)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM","B","PSGOE6",7)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM","B","PSGOE91",3)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM","B","PSGOEE",2)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM","B","PSGOEE0",8)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM","B","PSIVCAL",4)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM","B","PSIVOPT1",6)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN",9.8,"NM","B","PSJUTL",5)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN",19,0)="19"
^XTMP("XPDT",7807,"BLD",7400,"KRN",19,"NM",0)="^9.68A^^"
^XTMP("XPDT",7807,"BLD",7400,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7807,"BLD",7400,"KRN",101,0)="101"
^XTMP("XPDT",7807,"BLD",7400,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7807,"BLD",7400,"KRN",771,0)="771"
^XTMP("XPDT",7807,"BLD",7400,"KRN",870,0)="870"
^XTMP("XPDT",7807,"BLD",7400,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7807,"BLD",7400,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7807,"BLD",7400,"KRN",8994,0)="8994"
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",.4,.4)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",.401,.401)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",.402,.402)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",.403,.403)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",.5,.5)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",.84,.84)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",19,19)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",101,101)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",771,771)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",870,870)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7807,"BLD",7400,"KRN","B",8994,8994)=""
^XTMP("XPDT",7807,"BLD",7400,"QUES",0)="^9.62^^"
^XTMP("XPDT",7807,"BLD",7400,"REQB",0)="^9.611^11^6"
^XTMP("XPDT",7807,"BLD",7400,"REQB",1,0)="PSJ*5.0*134^2"
^XTMP("XPDT",7807,"BLD",7400,"REQB",3,0)="PSJ*5.0*142^2"
^XTMP("XPDT",7807,"BLD",7400,"REQB",8,0)="PSJ*5.0*95^2"
^XTMP("XPDT",7807,"BLD",7400,"REQB",9,0)="PSJ*5.0*127^2"
^XTMP("XPDT",7807,"BLD",7400,"REQB",10,0)="PSJ*5.0*193^2"
^XTMP("XPDT",7807,"BLD",7400,"REQB",11,0)="PSJ*5.0*113^2"
^XTMP("XPDT",7807,"BLD",7400,"REQB","B","PSJ*5.0*113",11)=""
^XTMP("XPDT",7807,"BLD",7400,"REQB","B","PSJ*5.0*127",9)=""
^XTMP("XPDT",7807,"BLD",7400,"REQB","B","PSJ*5.0*134",1)=""
^XTMP("XPDT",7807,"BLD",7400,"REQB","B","PSJ*5.0*142",3)=""
^XTMP("XPDT",7807,"BLD",7400,"REQB","B","PSJ*5.0*193",10)=""
^XTMP("XPDT",7807,"BLD",7400,"REQB","B","PSJ*5.0*95",8)=""
^XTMP("XPDT",7807,"MBREQ")="0"
^XTMP("XPDT",7807,"PKG",203,-1)="1^1"
^XTMP("XPDT",7807,"PKG",203,0)="INPATIENT MEDICATIONS^PSJ^UNIT DOSE AND IVS"
^XTMP("XPDT",7807,"PKG",203,20,0)="^9.402P^^"
^XTMP("XPDT",7807,"PKG",203,22,0)="^9.49I^1^1"
^XTMP("XPDT",7807,"PKG",203,22,1,0)="5.0^2971215^2980417^1271"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,0)="179^3100420^33288"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,0)="^^35^35^3100420"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,1,0)="Patch PSJ*5*179 Will correct the following issues."
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,2,0)=" "
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,3,0)="1.  HD0000000099382 - PSI-05-053 Drug dose can be administered twice."
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,4,0)="When a dose is given in Bar Code Medication Administration for an"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,5,0)="Inpatient Order, the order is marked in BCMA as GIVEN.  If a Pharmacist"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,6,0)="edit's a field with a star (*), the new order may overwrite the"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,7,0)="administration that was given in BCMA.  The possibility of giving the"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,8,0)="patient a ""double"" dose exists."
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,9,0)=" "
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,10,0)="2. HD0000000195783 - IMO Location not getting default stop date."
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,11,0)="When using inpatient medications for Outpatient Orders, the "
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,12,0)="correct stop date is not displayed on the patient profile of the"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,13,0)="Backdoor Pharmacy Order Entry screen.  If there is a value defined in"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,14,0)="Clinic Definition File for the ""NUMBER OF DAYS UNTIL STOP field, the"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,15,0)="order should use the default stop date. Currently this default stop date"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,16,0)="is not used when the order is finished as a unit dose."
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,17,0)=" "
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,18,0)="3. HD0000000210901 - PSI-07-172 Reads of File 51.1 not checking Package"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,19,0)="                     Prefix."
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,20,0)="When calculating the default Stop Date/Time for a Unit Dose order, "
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,21,0)="Inpatient Medications uses the schedule type field from the Administration"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,22,0)="Schedule File (#51.1) to determine which Inpatient Ward Parameter"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,23,0)="should be used.  The Days Until Stop Date/Time or Days Until Stop for "
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,24,0)="One-time will be used.  "
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,25,0)="However, the package prefix is not used when retrieving the schedule"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,26,0)="type from the Schedule File and as result, the wrong schedule and"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,27,0)="schedule type could be used.  This will result in an incorrect default"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,28,0)="Stop Date/Time being calculated. "
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,29,0)="be calculated."
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,30,0)=" "
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,31,0)="4.  HD0000000237637 - Editing Admit time, then comments renders no change."
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,32,0)="Updates to the admin time field are not accepted when editing the admin"
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,33,0)="time on an existing Unit Dose order, then editing the comment field. "
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,34,0)="The original admin time will remain.  "
^XTMP("XPDT",7807,"PKG",203,22,1,"PAH",1,1,35,0)="This also happens when the user edits the comment field first."
^XTMP("XPDT",7807,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7807,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7807,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7807,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7807,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7807,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7807,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7807,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7807,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7807,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7807,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7807,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7807,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7807,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7807,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7807,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7807,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7807,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7807,"QUES","XPM1","B")=""
^XTMP("XPDT",7807,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7807,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7807,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7807,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7807,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7807,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7807,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7807,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7807,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7807,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7807,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7807,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7807,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7807,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7807,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7807,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7807,"RTN")="8"
^XTMP("XPDT",7807,"RTN","PSGNE3")="0^1^B83686662^B30964253"
^XTMP("XPDT",7807,"RTN","PSGNE3",1,0)="PSGNE3 ;BIR/CML3,MLM-DETERMINE DEFAULT FOR START & STOP TIMES ; 3/1/10 7:28am"
^XTMP("XPDT",7807,"RTN","PSGNE3",2,0)=" ;;5.0; INPATIENT MEDICATIONS ;**4,26,47,50,63,69,105,80,111,183,193,179**;16 DEC 97;Build 28"
^XTMP("XPDT",7807,"RTN","PSGNE3",3,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",4,0)=" ; Reference to ^PS(51.1 is supported by DBIA 2177"
^XTMP("XPDT",7807,"RTN","PSGNE3",5,0)=" ; Reference to ^PS(55 is supported by DBIA 2191"
^XTMP("XPDT",7807,"RTN","PSGNE3",6,0)=" ; Reference to PSBAPIPM is supported by DBIA 3564"
^XTMP("XPDT",7807,"RTN","PSGNE3",7,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",8,0)=" N X1,X2,Y"
^XTMP("XPDT",7807,"RTN","PSGNE3",9,0)="NOW ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",10,0)=" S:'$D(PSGST) PSGST="""""
^XTMP("XPDT",7807,"RTN","PSGNE3",11,0)=" S PSGDT=$$DATE^PSJUTL2(),PSGNESD=$$ENSD($S(PSGST[""P"":""PRN"",1:PSGSCH),PSGS0Y,PSGDT,PSGDT)"
^XTMP("XPDT",7807,"RTN","PSGNE3",12,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",13,0)="STOP ; exit when start date found"
^XTMP("XPDT",7807,"RTN","PSGNE3",14,0)=" K ET,F,FT,LT,NT,PSGNE3,TT G:$D(PSGOES)!$D(PSGODF) SF S PSGNESDO=$$ENDD^PSGMI(PSGNESD)"
^XTMP("XPDT",7807,"RTN","PSGNE3",15,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",16,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",17,0)="ENFD(PSGDT) ; find default stop date"
^XTMP("XPDT",7807,"RTN","PSGNE3",18,0)=" N X1,X2,X3DMIN,Y"
^XTMP("XPDT",7807,"RTN","PSGNE3",19,0)="SF I '$O(^PS(55,PSGP,5,""AUS"",PSGDT)),'$D(^PS(53.1,""AC"",PSGP)),+$G(^PS(55,PSGP,5.1)) S $P(^PS(55,PSGP,5.1),U)="""""
^XTMP("XPDT",7807,"RTN","PSGNE3",20,0)=" I $G(PSGOEA)=""R"",$P(PSJSYSW0,""^"",4) D ENWALL(%,0,PSGP)"
^XTMP("XPDT",7807,"RTN","PSGNE3",21,0)=" S PSGNEFD="""",PSGNEW=$S('$P(PSJSYSW0,U,4):0,+$G(^PS(55,PSGP,5.1))'>PSGDT:0,1:+$G(^PS(55,PSGP,5.1))) S:PSGNEW<PSGNESD PSGNEW=0"
^XTMP("XPDT",7807,"RTN","PSGNE3",22,0)=" I PSGNEW,($G(PSGOEA)=""R"") S X1=$P(%,"".""),X2=3 D C^%DTC S PSGNEW=$S($P(X,""."")_(PSGNESD#1)'>PSGNEW:PSGNEW,1:0)"
^XTMP("XPDT",7807,"RTN","PSGNE3",23,0)=" I PSGST=""O"" S PSGNEFD=$$ENOSD^PSJDCU(PSJSYSW0,PSGNESD,PSGP) I PSGNEFD]"""" G OUT"
^XTMP("XPDT",7807,"RTN","PSGNE3",24,0)=" ;PSJ*179;x-ref to ""APPSJ"""
^XTMP("XPDT",7807,"RTN","PSGNE3",25,0)=" I PSGST'=""O"",PSGSCH]"""",$S(PSGSCH=""ONCE"":1,PSGSCH=""STAT"":1,PSGSCH=""ONE TIME"":1,1:0)!($P($G(^PS(51.1,+$O(^PS(51.1,""AC"",""PSJ"",PSGSCH,0)),0)),""^"",5)=""O"") S PSGNEFD=$$ENOSD^PSJDCU(PSJSYSW0,PSGNESD,PSGP) I PSGNEFD]"""" G OUT"
^XTMP("XPDT",7807,"RTN","PSGNE3",26,0)=" S X1=$P(PSGNESD,"".""),X2=$S($P(PSJSYSW0,""^"",3):+$P(PSJSYSW0,""^"",3),1:14)"
^XTMP("XPDT",7807,"RTN","PSGNE3",27,0)=" D"
^XTMP("XPDT",7807,"RTN","PSGNE3",28,0)=" . ; *** psi 06 082 - RDC 08/2006;ADDED VAR AA TO CHK FOR APPT and CLINIC ***"
^XTMP("XPDT",7807,"RTN","PSGNE3",29,0)=" . N A,AA,B"
^XTMP("XPDT",7807,"RTN","PSGNE3",30,0)=" . Q:'$D(PSGORD)  S A="""""
^XTMP("XPDT",7807,"RTN","PSGNE3",31,0)=" . I PSGORD[""P"" S A=$G(^PS(53.1,+PSGORD,""DSS""))"
^XTMP("XPDT",7807,"RTN","PSGNE3",32,0)=" . I PSGORD[""U"" S A=$G(^PS(55,PSGP,5,+PSGORD,8))"
^XTMP("XPDT",7807,"RTN","PSGNE3",33,0)=" . I PSGORD[""I"" S A=$G(^PS(55,PSGP,""IV"",+PSGORD,""DSS""))"
^XTMP("XPDT",7807,"RTN","PSGNE3",34,0)=" . ;PSJ*5*179;Clin Def Stop"
^XTMP("XPDT",7807,"RTN","PSGNE3",35,0)=" . S AA=$P(A,""^"",2),A=$P(A,""^"") I A,AA S X2=14 I $D(^PS(53.46,""B"",A)) S B=$O(^PS(53.46,""B"",A,"""")),X2=$P(^PS(53.46,B,0),""^"",2) I X2="""" S X2=14"
^XTMP("XPDT",7807,"RTN","PSGNE3",36,0)=" D C^%DTC"
^XTMP("XPDT",7807,"RTN","PSGNE3",37,0)=" I $G(PSGNEDFD) I $S($P(PSGNEDFD,""^"")[""L"":PSGS0XT!PSGS0Y,1:1) D DFD"
^XTMP("XPDT",7807,"RTN","PSGNE3",38,0)=" I $G(PSGORD),$G(PSGFD) S X3DMIN=$$GETDUR^PSJLIVMD(PSGP,+$G(PSGORD),$S($G(PSGORD)[""P"":""P"",$G(PSGORD)[""V"":""IV"",1:5),1) I X3DMIN]"""" D  I PSGNEFD]"""" G OUT"
^XTMP("XPDT",7807,"RTN","PSGNE3",39,0)=" . S X3DMIN=$$DURMIN^PSJLIVMD(X3DMIN) I $G(X3DMIN) S PSGNEFD=$$FMADD^XLFDT(PSGNESD,,,X3DMIN)"
^XTMP("XPDT",7807,"RTN","PSGNE3",40,0)=" S X=+(X_$S($P(PSJSYSW0,""^"",7):"".""_$P(PSJSYSW0,""^"",7),1:(PSGNESD#1)))"
^XTMP("XPDT",7807,"RTN","PSGNE3",41,0)=" S PSGNEFD=$S('PSGNEFD:X,X<PSGNEFD:X,1:PSGNEFD) I PSGNEW,(PSGNEW<PSGNEFD),$P(PSJSYSW0,U,4) D"
^XTMP("XPDT",7807,"RTN","PSGNE3",42,0)=" . I $G(PSGORD),$G(PSGRDTX) I PSGORD=$P(PSGRDTX,U,4),PSGNEW<PSGRDTX Q   ; Requested Start is after Stop"
^XTMP("XPDT",7807,"RTN","PSGNE3",43,0)=" . S PSGNEFD=PSGNEW"
^XTMP("XPDT",7807,"RTN","PSGNE3",44,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",45,0)="OUT ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",46,0)=" S:$G(PSGSDX) PSGNESD=PSGSDX S:$G(PSGFDX) PSGNEFD=PSGFDX"
^XTMP("XPDT",7807,"RTN","PSGNE3",47,0)=" I '$D(PSGODF),'$D(PSGOES) S PSGNEFDO=$$ENDD^PSGMI(PSGNEFD)"
^XTMP("XPDT",7807,"RTN","PSGNE3",48,0)=" K PSGDL,PSGNEW Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",49,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",50,0)="DFD ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",51,0)=" I $P(PSGNEDFD,""^"")[""D"" S X1=$P(PSGNESD,"".""),X2=+PSGNEDFD D C^%DTC S X=+(X_"".""_$S($P(PSJSYSW0,""^"",7):$P(PSJSYSW0,""^"",7),1:$P(PSGNESD,""."",2)))"
^XTMP("XPDT",7807,"RTN","PSGNE3",52,0)=" I $P(PSGNEDFD,""^"")[""L"" S PSGDL=+PSGNEDFD D EN1^PSGDL"
^XTMP("XPDT",7807,"RTN","PSGNE3",53,0)=" S PSGNEFD=$S(PSGNEW<X&PSGNEW:PSGNEW,1:X) Q:$P(PSGNEDFD,""^"")'[""D""!'$P(PSJSYSW0,""^"",4)!PSGNEW"
^XTMP("XPDT",7807,"RTN","PSGNE3",54,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",55,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",56,0)="ENOR ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",57,0)=" K PSGOES,PSGODF S X=$P($G(^PS(53.1,DA,2)),""^"")"
^XTMP("XPDT",7807,"RTN","PSGNE3",58,0)=" S $P(^PS(53.1,DA,0),""^"",7)=$S(X=""PRN"":""P"",X=""ONCE"":""O"",X=""STAT"":""O"",X=""ONE TIME"":""O"",X=""ON CALL"":""OC"",$P(PSGNEDFD,""^"",3)]"""":$P(PSGNEDFD,""^"",3),1:""C"") D PSGNE3 S X=PSGNESD"
^XTMP("XPDT",7807,"RTN","PSGNE3",59,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",60,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",61,0)="ENSET0(DFN) ; Set ""0"" node and build xrefs for entries found without one."
^XTMP("XPDT",7807,"RTN","PSGNE3",62,0)=" N DA,DIK S ^PS(55,DFN,0)=DFN,DIK=""^PS(55,"",DIK(1)=.01,DA=DFN D EN^DIK"
^XTMP("XPDT",7807,"RTN","PSGNE3",63,0)=" S $P(^PS(55,DFN,5.1),""^"",11)=2 ; Mark as converted for POE"
^XTMP("XPDT",7807,"RTN","PSGNE3",64,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",65,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",66,0)="ENWALL(SD,FD,DFN) ; Update default stop date if appropriate."
^XTMP("XPDT",7807,"RTN","PSGNE3",67,0)=" N WALL,NWALL,X1,X2,X3"
^XTMP("XPDT",7807,"RTN","PSGNE3",68,0)=" D NOW^%DTC S X3=%"
^XTMP("XPDT",7807,"RTN","PSGNE3",69,0)=" S WALL=+$G(^PS(55,DFN,5.1)),X1=$P(SD,"".""),X2=3 D C^%DTC I +(X_"".""_$P(SD,""."",2))'>+WALL Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",70,0)=" S X1=$P(X3,"".""),X2=$S($P(PSJSYSW0,U,3):+$P(PSJSYSW0,U,3),1:14) D C^%DTC"
^XTMP("XPDT",7807,"RTN","PSGNE3",71,0)=" S NWALL=X_$S($P(PSJSYSW0,U,7):"".""_$P(PSJSYSW0,U,7),1:SD#1)"
^XTMP("XPDT",7807,"RTN","PSGNE3",72,0)=" S $P(^PS(55,DFN,5.1),U)=+$S(FD>NWALL:FD,1:NWALL)"
^XTMP("XPDT",7807,"RTN","PSGNE3",73,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",74,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGNE3",75,0)="ENSD(SCH,AT,LI,OSD) ;Find start dt/tm"
^XTMP("XPDT",7807,"RTN","PSGNE3",76,0)=" ;SCH=schedule,AT=admin times,LI=login date/time,OSD=Renewed orders start"
^XTMP("XPDT",7807,"RTN","PSGNE3",77,0)=" I $G(APPT),$G(PSGORD)[""P"" S XD=$$DATE2^PSJUTL2(APPT) Q XD"
^XTMP("XPDT",7807,"RTN","PSGNE3",78,0)=" N X,OSDLI D"
^XTMP("XPDT",7807,"RTN","PSGNE3",79,0)=" .I $L(LI)<13 S X=LI Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",80,0)=" .I $L(LI)=14 S X=$E(LI,13,14) S:X>29 X=$E(LI,1,12)_5 S:X'>29 X=$E(LI,1,12)_1 Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",81,0)=" .I $L(LI)=13 S X=$E(LI,13)_0 S:X>29 X=$E(LI,1,12)_5 S:X'>29 X=$E(LI,1,12)_1 Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",82,0)=" I $G(LI) S:(LI=$G(OSD)) OSDLI=1"
^XTMP("XPDT",7807,"RTN","PSGNE3",83,0)=" S LI=+$FN(X,"""",4) I '$P(LI,""."",2) S LI=$$FMADD^XLFDT(LI,-1,0,0,0)_.24"
^XTMP("XPDT",7807,"RTN","PSGNE3",84,0)=" I $G(OSDLI) S OSD=LI K OSDLI"
^XTMP("XPDT",7807,"RTN","PSGNE3",85,0)=" ;BHW;PSJ*5*179;Re-calc Start date"
^XTMP("XPDT",7807,"RTN","PSGNE3",86,0)=" N PSGBCADM,PSGBCLDT,PSGBCLA,PSGBCFR,PSGBTT,PSGBST,PSGBCSHH,PSGBCLHH,PSGBSAT,PSGBSATN,PSGBNAT,PSGBCLIT,PSGBCTDY"
^XTMP("XPDT",7807,"RTN","PSGNE3",87,0)=" N PSGBCTDD,PSGBCTDA,PSGDAYC,PSGBDNXT,PSGBCSCD,PSGBCLID"
^XTMP("XPDT",7807,"RTN","PSGNE3",88,0)=" S (PSGBST,PSGBCFR,PSGBCADM)="""""
^XTMP("XPDT",7807,"RTN","PSGNE3",89,0)=" S PSGBCORD=$S($G(PSGORD):PSGORD,$G(PSJORD):PSJORD,1:$G(PSGORD))"
^XTMP("XPDT",7807,"RTN","PSGNE3",90,0)=" I PSGBCORD S:'$P($G(^PS(55,DFN,$S($G(PSGBCORD)[""V"":""IV"",1:5),+PSGBCORD,0)),""^"",2) PSGBCORD="""""
^XTMP("XPDT",7807,"RTN","PSGNE3",91,0)=" I PSGBCORD[""U"" S PSGBCOT=5,PSGBCND=0,PSGBCPO=25"
^XTMP("XPDT",7807,"RTN","PSGNE3",92,0)=" I PSGBCORD[""V"" S PSGBCOT=""IV"",PSGBCND=2,PSGBCPO=5"
^XTMP("XPDT",7807,"RTN","PSGNE3",93,0)=" I (PSGBCORD'[""U"")&(PSGBCORD'[""V"") S PSGBCORD="""""
^XTMP("XPDT",7807,"RTN","PSGNE3",94,0)=" I +$G(DFN)&(+PSGBCORD) S PSGBCPRV=PSGBCORD D"
^XTMP("XPDT",7807,"RTN","PSGNE3",95,0)=" .F  S PSGBCADM=$$EN^PSBAPIPM(DFN,PSGBCPRV) Q:PSGBCADM'=""""  S PSGBCPRV=$P(^PS(55,DFN,PSGBCOT,+PSGBCPRV,PSGBCND),U,PSGBCPO) Q:(PSGBCPRV="""")!(PSGBCPRV[""P"")"
^XTMP("XPDT",7807,"RTN","PSGNE3",96,0)=" .Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",97,0)=" I $L(PSGBCADM) D  I PSGBST Q +PSGBST"
^XTMP("XPDT",7807,"RTN","PSGNE3",98,0)=" .S PSGBCLID=$P(LI,""."",1),PSGBCLIT=$E($P(LI,""."",2),1,2) I $L(PSGBCLIT)=1 S PSGBCLIT=PSGBCLIT*10"
^XTMP("XPDT",7807,"RTN","PSGNE3",99,0)=" .S PSGBCSCH=$P(PSGBCADM,U,1),PSGBCSCD=$P(PSGBCSCH,""."",1),PSGBCLDT=$P(PSGBCADM,U,2),PSGBCLA=$P(PSGBCADM,U,3)"
^XTMP("XPDT",7807,"RTN","PSGNE3",100,0)=" .I ""GR""'[PSGBCLA Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",101,0)=" .S PSGBCFR="""""
^XTMP("XPDT",7807,"RTN","PSGNE3",102,0)=" .I PSGBCORD[""U"" S PSGBCFR=$P(^PS(55,DFN,5,+PSGBCORD,2),U,6)"
^XTMP("XPDT",7807,"RTN","PSGNE3",103,0)=" .I PSGBCORD[""V"" S PSGBCFR=$P(^PS(55,DFN,""IV"",+PSGBCORD,0),U,15)"
^XTMP("XPDT",7807,"RTN","PSGNE3",104,0)=" .;Convert"
^XTMP("XPDT",7807,"RTN","PSGNE3",105,0)=" .S PSGBCFR=$S(PSGBCFR=""D"":1440,PSGBCFR=""O"":0,1:PSGBCFR)*60"
^XTMP("XPDT",7807,"RTN","PSGNE3",106,0)=" .I 'PSGBCFR,'AT Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",107,0)=" .S X=PSGBCSCH D H^%DTC S PSGBCSCH=%H*86400+%T,PSGBCSHH=%H_"",""_%T"
^XTMP("XPDT",7807,"RTN","PSGNE3",108,0)=" .S X=PSGBCLDT D H^%DTC S PSGBCLDT=%H*86400+%T,PSGBCLHH=%H_"",""_%T"
^XTMP("XPDT",7807,"RTN","PSGNE3",109,0)=" .;Sched Admin Time"
^XTMP("XPDT",7807,"RTN","PSGNE3",110,0)=" .I PSGBCSCH D"
^XTMP("XPDT",7807,"RTN","PSGNE3",111,0)=" ..;Check admin times/freq"
^XTMP("XPDT",7807,"RTN","PSGNE3",112,0)=" ..I AT D  Q:PSGBST"
^XTMP("XPDT",7807,"RTN","PSGNE3",113,0)=" ...S PSGBSAT=$P($P(PSGBCADM,""^"",1),""."",2) Q:'PSGBSAT"
^XTMP("XPDT",7807,"RTN","PSGNE3",114,0)=" ...I $L(PSGBSAT)=1 S PSGBSAT=PSGBSAT*10"
^XTMP("XPDT",7807,"RTN","PSGNE3",115,0)=" ...I ((PSGBSAT<PSGBCLIT)!(PSGBCSCD<PSGBCLID))&(PSGBCSCD'>PSGBCLID) S PSGBSAT=PSGBCLIT  ;&(PSGBCFR<86400)"
^XTMP("XPDT",7807,"RTN","PSGNE3",116,0)=" ...S PSGBNAT="""""
^XTMP("XPDT",7807,"RTN","PSGNE3",117,0)=" ...I ($L($P(AT,""-"",1))=4)&($L(PSGBSAT)'=4) S PSGBSAT=PSGBSAT_""00"""
^XTMP("XPDT",7807,"RTN","PSGNE3",118,0)=" ...F PSGBSATN=1:1 S PSGBNAT=$P(AT,""-"",PSGBSATN) Q:PSGBNAT=""""  I PSGBNAT>PSGBSAT Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",119,0)=" ...;If DOW"
^XTMP("XPDT",7807,"RTN","PSGNE3",120,0)=" ...I (""SU-MO-TU-WE-TH-FR-SA""[$P(SCH,""-"",1)) D  Q:PSGBST"
^XTMP("XPDT",7807,"RTN","PSGNE3",121,0)=" ....;Get TODAY"
^XTMP("XPDT",7807,"RTN","PSGNE3",122,0)=" ....D NOW^%DTC I '$L(PSGBNAT),PSGBCSCD'<X S X1=X,X2=1 D C^%DTC"
^XTMP("XPDT",7807,"RTN","PSGNE3",123,0)=" ....S PSGBCTDD=X D DW^%DTC S PSGBCTDY=$E(X,1,2)"
^XTMP("XPDT",7807,"RTN","PSGNE3",124,0)=" ....K PSGBCTMP F PSGBCTMP=""SU:1"",""MO:2"",""TU:3"",""WE:4"",""TH:5"",""FR:6"",""SA:7"" S PSGBCTMP($P(PSGBCTMP,"":"",1))=$P(PSGBCTMP,"":"",2),PSGBCTMP($P(PSGBCTMP,"":"",2))=$P(PSGBCTMP,"":"",1)"
^XTMP("XPDT",7807,"RTN","PSGNE3",125,0)=" ....;DAY of Last Admin"
^XTMP("XPDT",7807,"RTN","PSGNE3",126,0)=" ....S X=PSGBCSCD D DW^%DTC S PSGBCTDA=$E(X,1,2) I PSGBCSCD<PSGBCTDD S PSGBCTDA=PSGBCTDY"
^XTMP("XPDT",7807,"RTN","PSGNE3",127,0)=" ....;Get Next Day in Sched"
^XTMP("XPDT",7807,"RTN","PSGNE3",128,0)=" ....S PSGDAYC=PSGBCTMP(PSGBCTDA),(PSGBDNXT,X)="""""
^XTMP("XPDT",7807,"RTN","PSGNE3",129,0)=" ....F X=PSGDAYC:1:7 I SCH[$G(PSGBCTMP(X)) S PSGBDNXT=PSGBCTMP(X) Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",130,0)=" ....I '$L(PSGBDNXT) S PSGBDNXT=$P(SCH,""-"",1)"
^XTMP("XPDT",7807,"RTN","PSGNE3",131,0)=" ....;Set new Start Day"
^XTMP("XPDT",7807,"RTN","PSGNE3",132,0)=" ....S PSGBCTDY=PSGBCTMP(PSGBCTDY)"
^XTMP("XPDT",7807,"RTN","PSGNE3",133,0)=" ....S PSGBDNXT=PSGBCTMP(PSGBDNXT)"
^XTMP("XPDT",7807,"RTN","PSGNE3",134,0)=" ....S X2=PSGBDNXT-PSGBCTDY I X2<0 S X2=(7-PSGBCTDY)+PSGBDNXT"
^XTMP("XPDT",7807,"RTN","PSGNE3",135,0)=" ....S X1=PSGBCTDD D C^%DTC  ;Add # of days"
^XTMP("XPDT",7807,"RTN","PSGNE3",136,0)=" ....I +X S PSGBST=X_"".""_($S('$L(PSGBNAT)!(PSGBCLID'=X):$P(AT,""-"",1),1:PSGBNAT))"
^XTMP("XPDT",7807,"RTN","PSGNE3",137,0)=" ....Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",138,0)=" ...;IF no Next Admin"
^XTMP("XPDT",7807,"RTN","PSGNE3",139,0)=" ...I (('PSGBNAT)&(PSGBCFR))!((PSGBCFR>86399)&(PSGBCSCD<PSGBCLID)) S X1=$S(PSGBCFR<86400:PSGBCLID,1:PSGBCSCD),X2=$S(PSGBCFR<86400:1,1:PSGBCFR/60/60/24) D C^%DTC S PSGBST=+X_"".""_($S(PSGBNAT:PSGBNAT,1:$P(AT,""-"",1))) Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",140,0)=" ...S PSGBST=PSGBCSCD_"".""_PSGBNAT"
^XTMP("XPDT",7807,"RTN","PSGNE3",141,0)=" ...Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",142,0)=" ..I 'PSGBCFR Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",143,0)=" ..;Add Freq"
^XTMP("XPDT",7807,"RTN","PSGNE3",144,0)=" ..S PSGBST=PSGBCSCH+PSGBCFR,PSGBST=(PSGBST\86400)_"",""_(PSGBST#86400)"
^XTMP("XPDT",7807,"RTN","PSGNE3",145,0)=" ..I $P(PSGBST,"","",2)<3600 S $P(PSGBST,"","",2)=3600"
^XTMP("XPDT",7807,"RTN","PSGNE3",146,0)=" ..;If next day"
^XTMP("XPDT",7807,"RTN","PSGNE3",147,0)=" ..I $P(PSGBST,"","",2)<3600 S %H=$S(+PSGBST=+PSGBCSHH:+PSGBST,1:PSGBST-1)_"",86400"""
^XTMP("XPDT",7807,"RTN","PSGNE3",148,0)=" ..S %H=PSGBST D YMD^%DTC S PSGBST=X_(+$E(%,1,5))"
^XTMP("XPDT",7807,"RTN","PSGNE3",149,0)=" ..I PSGBST<LI S PSGBST="""" Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",150,0)=" ..;If the date/time is > than the First admin"
^XTMP("XPDT",7807,"RTN","PSGNE3",151,0)=" ..I AT,($P(PSGBST,""."",1)>PSGBCLID) D"
^XTMP("XPDT",7807,"RTN","PSGNE3",152,0)=" ...S PSGBSAT=$P(PSGBST,""."",2) I $L(PSGBSAT)=1 S PSGBSAT=PSGBSAT*10"
^XTMP("XPDT",7807,"RTN","PSGNE3",153,0)=" ...S PSGBSATN=$P(AT,""-"",1)  ;First admin TIME"
^XTMP("XPDT",7807,"RTN","PSGNE3",154,0)=" ...I PSGBSAT>PSGBSATN S PSGBST=$P(PSGBST,""."",1)_"".""_PSGBSATN"
^XTMP("XPDT",7807,"RTN","PSGNE3",155,0)=" ...Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",156,0)=" ..Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",157,0)=" .;Future Date?"
^XTMP("XPDT",7807,"RTN","PSGNE3",158,0)=" .I (PSGBST)&((PSGBST<LI)!(($P(PSGBCADM,""^"",1)+.0001)>PSGBST)) D"
^XTMP("XPDT",7807,"RTN","PSGNE3",159,0)=" ..S INFO=($S(($P(PSGBCADM,""^"",1)+.0001>PSGBST):$P(PSGBCADM,""^"",1)+.0001,1:$G(LI)))_U_($G(PSGFD))_U_($G(PSGSCH))_U_($G(PSGST))_U_($G(PSGPDRG))_U_($G(PSGS0Y))"
^XTMP("XPDT",7807,"RTN","PSGNE3",160,0)=" ..S PSGBST=$$ENQ^PSJORP2(PSGP,INFO)"
^XTMP("XPDT",7807,"RTN","PSGNE3",161,0)=" ..I PSGBST<LI S PSGBST="""" Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",162,0)=" ..Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",163,0)=" .;No Sched time"
^XTMP("XPDT",7807,"RTN","PSGNE3",164,0)=" .I PSGBCLDT,PSGBCFR,'PSGBCSCH D  Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",165,0)=" ..;Add Freq"
^XTMP("XPDT",7807,"RTN","PSGNE3",166,0)=" ..S PSGBST=PSGBCLDT+PSGBCFR,PSGBST=(PSGBST\86400)_"",""_(PSGBST#86400)"
^XTMP("XPDT",7807,"RTN","PSGNE3",167,0)=" ..I $P(PSGBST,"","",2)<3600 S $P(PSGBST,"","",2)=3600"
^XTMP("XPDT",7807,"RTN","PSGNE3",168,0)=" ..I $P(PSGBST,"","",2)#3600 S PSGBTT=$P(($P(PSGBST,"","",2)/3600)+1,""."",1)*3600,$P(PSGBST,"","",2)=PSGBTT"
^XTMP("XPDT",7807,"RTN","PSGNE3",169,0)=" ..;If next day"
^XTMP("XPDT",7807,"RTN","PSGNE3",170,0)=" ..I $P(PSGBST,"","",2)<3600 S %H=$S(+PSGBST=+PSGBCLHH:+PSGBST,1:PSGBST-1)_"",86400"""
^XTMP("XPDT",7807,"RTN","PSGNE3",171,0)=" ..S %H=PSGBST D YMD^%DTC S PSGBST=X_(+$E(%,1,3))"
^XTMP("XPDT",7807,"RTN","PSGNE3",172,0)=" ..I PSGBST<LI S PSGBST="""" Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",173,0)=" ..Q"
^XTMP("XPDT",7807,"RTN","PSGNE3",174,0)="  ;BHW;PSJ*5*179;END"
^XTMP("XPDT",7807,"RTN","PSGNE3",175,0)=" I $G(PSJSYSW0)=""""!($P(PSJSYSW0,U,5)=2) Q LI"
^XTMP("XPDT",7807,"RTN","PSGNE3",176,0)=" S:SCH[""PRN"" AT="""""
^XTMP("XPDT",7807,"RTN","PSGNE3",177,0)=" N INT,PSG S:(SCH'[""PRN""&(SCH'?1""Q"".N1""H"")&(LI'=OSD)&('AT)&($G(PSGST)'=""O"")) AT=$E(OSD,9,10) S OSD=$E(OSD,1,10)"
^XTMP("XPDT",7807,"RTN","PSGNE3",178,0)=" S INT=$S(SCH=""QD"":24,SCH=""QOD"":48,SCH=""QH"":1,SCH?1""Q"".N1""D"":(+$P(SCH,""Q"",2)*24),SCH?1""Q"".N1""H"":+$P(SCH,""Q"",2),LI=OSD:24,1:24)"
^XTMP("XPDT",7807,"RTN","PSGNE3",179,0)=" S:INT=24 OSD=$$FMADD^XLFDT(LI,0,-INT,0,0)"
^XTMP("XPDT",7807,"RTN","PSGNE3",180,0)=" I 'AT,INT>23 S:$P(PSJSYSW0,U,5)!($E(LI,11,12)>30) AT=$E($$FMADD^XLFDT(LI,0,1,0,0),9,10) S:AT=""00"" AT=24 S:'AT AT=$E(LI,9,10)"
^XTMP("XPDT",7807,"RTN","PSGNE3",181,0)=" I SCH?1""Q"".N1""H"",'AT S ND=OSD,PSG(+ND)="""" S:(INT>24)&('$G(PSJREN)) INT=24 S DAYS=INT\24,HRS=(-INT\24*24+INT) F  S ND=$$FMADD^XLFDT(ND,DAYS,HRS),PSG(+ND)="""" Q:ND>LI"
^XTMP("XPDT",7807,"RTN","PSGNE3",182,0)=" Q:INT=24&'$L(AT,""-"") $E(LI,1,8)_AT"
^XTMP("XPDT",7807,"RTN","PSGNE3",183,0)=" I '$O(PSG(LI)) S X=$S(OSD>1:OSD,LI>1:LI,1:$$DATE^PSJUTL2) D"
^XTMP("XPDT",7807,"RTN","PSGNE3",184,0)=" .F  S ND=X D  Q:ND>LI  S:(INT>24)&('$G(PSJREN)) INT=24 S DAYS=INT\24,HRS=(-INT\24*24+INT) S X=$$FMADD^XLFDT($S($P(ND,""."",2)=24:$P(ND,""."")_"".23"",1:ND),DAYS,HRS) S:$P(X,""."")'>$P(ND,""."") X=$$FMADD^XLFDT(X,1,0,0,0)"
^XTMP("XPDT",7807,"RTN","PSGNE3",185,0)=" ..F Y=1:1 S AT1=$P(AT,""-"",Y) Q:'AT1  S ND=ND\1_"".""_AT1,PSG(+ND)="""""
^XTMP("XPDT",7807,"RTN","PSGNE3",186,0)=" Q:$P(PSJSYSW0,U,5) $O(PSG(LI))"
^XTMP("XPDT",7807,"RTN","PSGNE3",187,0)=" S INT="""" F ND=0:0 S ND=$O(PSG(ND)) S X=$$FMDIFF^XLFDT(LI,ND,2) S:X<0 X=-X Q:INT&(X'<INT)  S INT=+X,OND=ND Q:INT=0"
^XTMP("XPDT",7807,"RTN","PSGNE3",188,0)=" Q $S($G(OND):OND,1:LI)  ;Use login time if OND is null PSJ*5*193"
^XTMP("XPDT",7807,"RTN","PSGOE6")="0^7^B24406814^B24315055"
^XTMP("XPDT",7807,"RTN","PSGOE6",1,0)="PSGOE6 ;BIR/CML3-ORDER ENTRY THROUGH OE/RR ; 10/7/08 1:15pm"
^XTMP("XPDT",7807,"RTN","PSGOE6",2,0)=" ;;5.0; INPATIENT MEDICATIONS ;**3,7,39,45,65,58,81,156,134,179**;16 DEC 97;Build 28"
^XTMP("XPDT",7807,"RTN","PSGOE6",3,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",4,0)=" ; Reference to ^PS(50.7 supported by DBIA #2180."
^XTMP("XPDT",7807,"RTN","PSGOE6",5,0)=" ; Reference to ^PS(51.1 is supported by DBIA #2177."
^XTMP("XPDT",7807,"RTN","PSGOE6",6,0)=" ; Reference to ^PS(51.2 is supported by DBIA #2178."
^XTMP("XPDT",7807,"RTN","PSGOE6",7,0)=" ; Reference to ^PS(55 is supported by DBIA #2191."
^XTMP("XPDT",7807,"RTN","PSGOE6",8,0)=" ; Reference to ^DD(53.1 is supported by DBIA #2256."
^XTMP("XPDT",7807,"RTN","PSGOE6",9,0)=" ; Reference to ^VA(200 is supported by DBIA #10060."
^XTMP("XPDT",7807,"RTN","PSGOE6",10,0)=" ; Reference to ^DICN is supported by DBIA #10009."
^XTMP("XPDT",7807,"RTN","PSGOE6",11,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",12,0)=" K PSGFOK S F1=53.1,PSGPR=$S($D(PSGOERR):PSJORPV,1:PSGOEPR),PSGMR=$S($P(PSGNEDFD,""^"",2):$P(PSGNEDFD,""^"",2),1:PSGOEDMR),PSGSCH=$P(PSGNEDFD,""^"",4),(PSGOROE1,PSGSI,SDT,PSGMRN,PSGSM,PSGHSM,PSGUD,PSGSD,PSGFD,PSGSI,PSGNEFD,PSGNESD)="""""
^XTMP("XPDT",7807,"RTN","PSGOE6",13,0)=" S:PSGMR PSGMRN=$S('$P(PSGNEDFD,""^"",2):""ORAL"",'$D(^PS(51.2,PSGMR,0)):PSGMR,$P(^(0),""^"")]"""":$P(^(0),""^""),1:PSGMR) I PSGPR S PSGPRN=$P($G(^VA(200,PSGPR,0)),""^"") S:PSGPRN="""" PSGPRN=PSGPR"
^XTMP("XPDT",7807,"RTN","PSGOE6",14,0)=" S PSGST=$S($P(PSGNEDFD,""^"",3)]"""":$P(PSGNEDFD,""^"",3),1:""C"")"
^XTMP("XPDT",7807,"RTN","PSGOE6",15,0)=" ; Naked references in line below refer to ^PS(53.45,PSJSYSP"
^XTMP("XPDT",7807,"RTN","PSGOE6",16,0)=" K ^PS(53.45,PSJSYSP,1),^(2) I PSGDRG S ^(2,0)=""^53.4502P^""_PSGDRG_""^1"",^(1,0)=PSGDRG,^PS(53.45,PSJSYSP,2,""B"",PSGDRG,1)="""""
^XTMP("XPDT",7807,"RTN","PSGOE6",17,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",18,0)="109 ; dosage ordered"
^XTMP("XPDT",7807,"RTN","PSGOE6",19,0)=" W !,""DOSAGE ORDERED: "",$S(PSGDO]"""":PSGDO_""// "",1:"""") R X:DTIME I X=""^""!'$T W:'$T $C(7) S PSGOROE1=1 G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE6",20,0)=" I X="""" S X=PSGDO I X="""" W $C(7),""  (Required)"" G 109"
^XTMP("XPDT",7807,"RTN","PSGOE6",21,0)=" S PSGF2=109 I X=""@"" W $C(7),""  (Required)"" G 109"
^XTMP("XPDT",7807,"RTN","PSGOE6",22,0)=" I X?1.""?"" S F1=53.1 D ENHLP^PSGOEM(53.1,109) G 109"
^XTMP("XPDT",7807,"RTN","PSGOE6",23,0)=" I $E(X)=""^"" D FF G:Y>0 @Y G 109"
^XTMP("XPDT",7807,"RTN","PSGOE6",24,0)=" I $E(X,$L(X))="" "" F  S X=$E(X,1,$L(X)-1) Q:$E(X,$L(X))'="" """
^XTMP("XPDT",7807,"RTN","PSGOE6",25,0)=" I $S(X?.E1C.E:1,$L(X)>20:1,X="""":1,X[""^"":1,X?1.P:1,1:X=+X) W $C(7),""  "",$S(X?1.P!(X=""""):""(Required)"",1:""??"") S X=""?"" D ENHLP^PSGOEM(53.1,109) G 109"
^XTMP("XPDT",7807,"RTN","PSGOE6",26,0)=" S PSGDO=X,PSGFOK(109)="""""
^XTMP("XPDT",7807,"RTN","PSGOE6",27,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",28,0)="3 ; med route"
^XTMP("XPDT",7807,"RTN","PSGOE6",29,0)=" W !,""MED ROUTE: "",$S(PSGMR:PSGMRN_""// "",1:"""") R X:DTIME I X=""^""!'$T W:'$T $C(7) S PSGOROE1=1 G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE6",30,0)=" I X="""",PSGMR S X=PSGMRN I PSGMR'=PSGMRN,$D(^PS(51.2,PSGMR,0)) W ""  ""_$P(^(0),""^"",3) S PSGFOK(3)="""" G 26"
^XTMP("XPDT",7807,"RTN","PSGOE6",31,0)=" S PSGF2=3 I $S(X=""@"":1,X]"""":0,1:'PSGMR) W $C(7),""  (Required)"" S X=""?"" D ENHLP^PSGOEM(53.1,3) G 3"
^XTMP("XPDT",7807,"RTN","PSGOE6",32,0)=" I X?1.""?"" D ENHLP^PSGOEM(53.1,3)"
^XTMP("XPDT",7807,"RTN","PSGOE6",33,0)=" I $E(X)=""^"" D FF G:Y>0 @Y G 3"
^XTMP("XPDT",7807,"RTN","PSGOE6",34,0)=" K DIC S DIC=""^PS(51.2,"",DIC(0)=""EMQZ"",DIC(""S"")=""I $P(^(0),""""^"""",4)"" D ^DIC K DIC I Y'>0 G 3"
^XTMP("XPDT",7807,"RTN","PSGOE6",35,0)=" S PSGMR=+Y,PSGMRN=Y(0,0),PSGFOK(3)="""""
^XTMP("XPDT",7807,"RTN","PSGOE6",36,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",37,0)="26 ; schedule"
^XTMP("XPDT",7807,"RTN","PSGOE6",38,0)=" W !,""SCHEDULE: "",$S(PSGSCH]"""":PSGSCH_""// "",1:"""") R X:DTIME I X=""^""!'$T W:'$T $C(7) S PSGOROE1=1 G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE6",39,0)=" S:X="""" X=PSGSCH S PSGF2=26 ; I ""@""[X W $C(7),""  (Required)"" S X=""?"" D ENHLP^PSGOEM(53.1,26) G 26"
^XTMP("XPDT",7807,"RTN","PSGOE6",40,0)=" I X?1.""?"" D ENHLP^PSGOEM(53.1,26) G 26"
^XTMP("XPDT",7807,"RTN","PSGOE6",41,0)=" I $E(X)=""^"" D FF G:Y>0 @Y G 26"
^XTMP("XPDT",7807,"RTN","PSGOE6",42,0)=" I X="""" S (PSGS0XT,PSGS0Y,PSGST)="""""
^XTMP("XPDT",7807,"RTN","PSGOE6",43,0)=" E  D EN^PSGS0 I '$D(X) W $C(7),""  ??"" S X=""?"" D ENHLP^PSGOEM(53.1,26) G 26"
^XTMP("XPDT",7807,"RTN","PSGOE6",44,0)=" S PSGSCH=X,(PSGFOK(26),PSGST)="""",PSGOES=1 S:PSGS0XT=""O"" $P(PSGNEDFD,""^"",3)=""O"",PSGST=""O"" D ^PSGNE3 K PSGOES"
^XTMP("XPDT",7807,"RTN","PSGOE6",45,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",46,0)="66 ; provider's comments"
^XTMP("XPDT",7807,"RTN","PSGOE6",47,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",48,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",49,0)="DONE ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",50,0)=" I PSGOROE1 K Y W $C(7),""  ...order not entered..."""
^XTMP("XPDT",7807,"RTN","PSGOE6",51,0)=" K F,F0,F1,PSGF2,F3,PSGFOK,SDT Q"
^XTMP("XPDT",7807,"RTN","PSGOE6",52,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",53,0)="FF ; up-arrow to another field"
^XTMP("XPDT",7807,"RTN","PSGOE6",54,0)=" S Y=-1 I '$D(PSGFOK) W $C(7),""  ??"" Q"
^XTMP("XPDT",7807,"RTN","PSGOE6",55,0)=" S X=$E(X,2,99) I X=+X S Y=$S($D(PSGFOK(X)):X,1:-1) W ""  "" W:Y>0 $$CODES2^PSIVUTL(53.1,X) W:Y'>0 $C(7),""??"" Q"
^XTMP("XPDT",7807,"RTN","PSGOE6",56,0)=" K DIC S DIC=""^DD(53.1,"",DIC(0)=""QEM"",DIC(""S"")=""I $D(PSGFOK(+Y))"" D ^DIC K DIC S Y=+Y"
^XTMP("XPDT",7807,"RTN","PSGOE6",57,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOE6",58,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",59,0)="DEL ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",60,0)=" W !?3,""SURE YOU WANT TO DELETE"" S %=0 D YN^DICN I %'=1 W ""  <NOTHING DELETED>"""
^XTMP("XPDT",7807,"RTN","PSGOE6",61,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOE6",62,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE6",63,0)="GTST(ON) ; Find schedule type for pending order."
^XTMP("XPDT",7807,"RTN","PSGOE6",64,0)=" N PD,PDAP,ST,X,ST1 S ST="""""
^XTMP("XPDT",7807,"RTN","PSGOE6",65,0)=" S ST=$P($G(^PS(53.1,+ON,0)),""^"",7)"
^XTMP("XPDT",7807,"RTN","PSGOE6",66,0)=" I $P($G(^PS(53.1,+ON,0)),U,24)=""R"" D"
^XTMP("XPDT",7807,"RTN","PSGOE6",67,0)=" .; naked ref below is from line above, ^PS(53.1,ON,0)"
^XTMP("XPDT",7807,"RTN","PSGOE6",68,0)=" .S X=$P(^(0),U,25) S ST=$S(X[""N""!(X[""P""):$P($G(^PS(53.1,+X,0)),U,7),X[""V"":""C"",1:$P($G(^PS(55,PSGP,5,+X,0)),U,7))"
^XTMP("XPDT",7807,"RTN","PSGOE6",69,0)=" .I ST]"""" S (PSGOST,PSGST)=ST,PSGSTN=$$ENSTN^PSGMI(ST) Q"
^XTMP("XPDT",7807,"RTN","PSGOE6",70,0)=" I ST'="""" D"
^XTMP("XPDT",7807,"RTN","PSGOE6",71,0)=" . S ST1="""""
^XTMP("XPDT",7807,"RTN","PSGOE6",72,0)=" . S PD=+$G(^PS(53.1,+ON,.2)) S X=$G(^PS(50.7,PD,0)),ST1=$P(X,U,7)"
^XTMP("XPDT",7807,"RTN","PSGOE6",73,0)=" . I $G(ST1)=""R"" S ST=""R"""
^XTMP("XPDT",7807,"RTN","PSGOE6",74,0)=" . K ST1"
^XTMP("XPDT",7807,"RTN","PSGOE6",75,0)=" I ST="""" D"
^XTMP("XPDT",7807,"RTN","PSGOE6",76,0)=" . ;PSJ*5*156 - Don't allow backdoor to override intended schedule type from CPRS unless the default"
^XTMP("XPDT",7807,"RTN","PSGOE6",77,0)=" . ;            schedule type (if any) is ""Fill on Request""."
^XTMP("XPDT",7807,"RTN","PSGOE6",78,0)=" . S PD=+$G(^PS(53.1,+ON,.2)) S X=$G(^PS(50.7,PD,0)),ST=$P(X,U,7)  ;see if there is a default schedule type."
^XTMP("XPDT",7807,"RTN","PSGOE6",79,0)=" . I ST=""R"" Q  ;Fill on Request default schedule type will override incoming schedule type from CPRS"
^XTMP("XPDT",7807,"RTN","PSGOE6",80,0)=" . S ST=""""  ;Reset to null in case default schedule type other than Fill on Request is defined."
^XTMP("XPDT",7807,"RTN","PSGOE6",81,0)=" . D OTS I ST=""O"" Q"
^XTMP("XPDT",7807,"RTN","PSGOE6",82,0)=" . I PSGSCH=""ON CALL""!(PSGSCH=""ONCALL"")!(PSGSCH=""ON-CALL"") S ST=""OC"" Q"
^XTMP("XPDT",7807,"RTN","PSGOE6",83,0)=" . I PSGSCH[""PRN"" S ST=""P"" Q"
^XTMP("XPDT",7807,"RTN","PSGOE6",84,0)=" . S ST=""C"""
^XTMP("XPDT",7807,"RTN","PSGOE6",85,0)=" S (PSGOST,PSGST)=ST,PSGSTN=$$ENSTN^PSGMI(ST)"
^XTMP("XPDT",7807,"RTN","PSGOE6",86,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOE6",87,0)=" ;PSJ*5*179;x-ref to ""AC"",""PSJ"""
^XTMP("XPDT",7807,"RTN","PSGOE6",88,0)="OTS I PSGSCH]"""" S X=+$O(^PS(51.1,""AC"",""PSJ"",PSGSCH,0)) I $P($G(^PS(51.1,X,0)),""^"",5)=""O"" S ST=""O"" Q"
^XTMP("XPDT",7807,"RTN","PSGOE6",89,0)=" I PSGSCH=""TODAY""!(PSGSCH=""NOW"")!(PSGSCH=""STAT"")!(PSGSCH=""ONCE"")!(PSGSCH=""ONE TIME"")!(PSGSCH=""ONE-TIME"")!(PSGSCH=""ONETIME"")!(PSGSCH=""1TIME"")!(PSGSCH=""1 TIME"")!(PSGSCH=""1-TIME"") S ST=""O"""
^XTMP("XPDT",7807,"RTN","PSGOE6",90,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOE91")="0^3^B41627571^B24153403"
^XTMP("XPDT",7807,"RTN","PSGOE91",1,0)="PSGOE91 ;BIR/CML3-ACTIVE ORDER EDIT (CONT.) ; 3/22/10 7:11am"
^XTMP("XPDT",7807,"RTN","PSGOE91",2,0)=" ;;5.0; INPATIENT MEDICATIONS ;**50,64,58,110,111,136,113,179**;16 DEC 97;Build 28"
^XTMP("XPDT",7807,"RTN","PSGOE91",3,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",4,0)=" ;Reference to ^PS(55 is supported by DBIA #2191."
^XTMP("XPDT",7807,"RTN","PSGOE91",5,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",6,0)="41 ; admin times"
^XTMP("XPDT",7807,"RTN","PSGOE91",7,0)=" S MSG=0,PSGF2=41,ORIG=$G(PSGAT) S:PSGOEEF(PSGF2) BACK=""41^PSGOE91"""
^XTMP("XPDT",7807,"RTN","PSGOE91",8,0)=" I $$ODD^PSGS0(PSGS0XT)!(PSGST=""P"")!$$PRNOK^PSGS0($G(PSGSCH)) G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",9,0)="A41 I $G(PSJORD),$G(PSGP) I $$COMPLEX^PSJOE(PSGP,PSJORD) S PSGOEE=0 D  G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",10,0)=" . W !!?5,""ADMIN TIMES may not be edited for active complex orders."" D PAUSE^VALM1"
^XTMP("XPDT",7807,"RTN","PSGOE91",11,0)=" W !,""ADMIN TIMES: ""_$S(PSGAT:PSGAT_""// "",1:"""") R X:DTIME I X=""^""!('$T) W:'$T $C(7) S PSGOEE=0 S:X=""^"" (X,PSGAT)=ORIG G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",12,0)=" I X="""" S:$G(PSGAT) X=PSGAT"
^XTMP("XPDT",7807,"RTN","PSGOE91",13,0)=" I $E(X)=""^"" D ENFF^PSGOE92 G:Y>0 @Y G A41"
^XTMP("XPDT",7807,"RTN","PSGOE91",14,0)=" I X=""@"" I (PSGS0XT=""D"")!(PSGSCH[""@"") I (("",P,R,OC,O,"")'[("",""_$G(PSGST)_"","")) D  G A41"
^XTMP("XPDT",7807,"RTN","PSGOE91",15,0)=" .W $C(7),""  ??"" S X=""?"" W:PSGS0XT=""D""!(PSGSCH[""@"") !,""This is a 'DAY OF THE WEEK' schedule and MUST have admin times."" D ENHLP^PSGOEM(55.06,41)"
^XTMP("XPDT",7807,"RTN","PSGOE91",16,0)=" I X=""@"" D DEL G:%'=1 A41 S PSGAT="""",X="""""
^XTMP("XPDT",7807,"RTN","PSGOE91",17,0)=" I (PSGST=""O"")!($G(PSGST)=""OC"")!($G(PSGST)=""P"")!$$ODD^PSGS0($P(ZZND,""^"",3))!($P(ZZND,""^"",5)=""O"") I X="""" S (PSGS0Y,PSGAT)=X G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",18,0)=" I $G(PSGS0XT) I '$$ODD^PSGS0(PSGS0XT),$G(PSGST)'=""P"",$G(PSGST)'=""OC"",'$$PRNOK^PSGS0(PSGSCH) I ($G(PSGST)'=""O"") D TIMES I '$D(X) G A41"
^XTMP("XPDT",7807,"RTN","PSGOE91",19,0)=" I X?1.""?"" D ENHLP^PSGOEM(55.06,41) G A41"
^XTMP("XPDT",7807,"RTN","PSGOE91",20,0)=" D ENCHK^PSGS0 I '$D(X) W $C(7),""  ??"" S X=""?"" D ENHLP^PSGOEM(55.06,41) G A41"
^XTMP("XPDT",7807,"RTN","PSGOE91",21,0)=" S PSGOAT=PSGAT"
^XTMP("XPDT",7807,"RTN","PSGOE91",22,0)=" S (PSGS0Y,PSGAT)=X G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",23,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",24,0)="8 ; special instructions"
^XTMP("XPDT",7807,"RTN","PSGOE91",25,0)=" S MSG=0,PSGF2=8 S:PSGOEEF(PSGF2) BACK=""8^PSGOE91"""
^XTMP("XPDT",7807,"RTN","PSGOE91",26,0)="A8 I $G(PSGP),$G(PSGORD) I $$COMPLEX^PSJOE(PSGP,PSGORD) D"
^XTMP("XPDT",7807,"RTN","PSGOE91",27,0)=" . N X,Y,PARENT,P2ND S P2ND=$S(PSGORD[""U"":$G(^PS(55,PSGP,5,+PSGORD,.2)),1:$G(^PS(53.1,+PSGORD,.2))),PARENT=$P(P2ND,""^"",8)"
^XTMP("XPDT",7807,"RTN","PSGOE91",28,0)=" . I PARENT D FULL^VALM1 W !!?5,""This order is part of a complex order. Please review the following "",!?5,""associated orders before changing this order."" D CMPLX^PSJCOM1(PSGP,PARENT,PSGORD)"
^XTMP("XPDT",7807,"RTN","PSGOE91",29,0)=" N DIR S DIR(0)=""FO^1:180^D ^PSGSICHK"",DIR(""A"")=""SPECIAL INSTRUCTIONS"",DIR(""??"")=""^D ENHLP^PSGOEM(55.06,8)"" S:$G(PSGSI)]"""" DIR(""B"")=$P(PSGSI,""^"") D ^DIR I $D(DUOUT)!$D(DTOUT) S PSGOEE=0 G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",30,0)=" I $E(X)=U D ENFF^PSGOE92 G:Y>0 @Y G A8"
^XTMP("XPDT",7807,"RTN","PSGOE91",31,0)=" I X=""@"",PSGSI="""" W $C(7),""  ??"" S X=""?"" D ENHLP^PSGOEM(55.06,8) G A8"
^XTMP("XPDT",7807,"RTN","PSGOE91",32,0)=" I X=""@"" D DEL G:%'=1 A8 S PSGSI="""" G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",33,0)=" I Y="""",PSGSI="""" G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",34,0)=" S PSGSI=$S(Y]"""":Y,1:PSGSI),PSGSI=$$ENBCMA^PSJUTL(""U"") G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",35,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOE91",36,0)=" W !,""SPECIAL INSTRUCTIONS: ""_$S(PSGSI]"""":PSGSI_""// "",1:"""") R X:DTIME I X=""^""!'$T W:'$T $C(7) S PSGOEE=0 G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",37,0)=" I X="""" S X=PSGSI I X="""" G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",38,0)=" I $E(X)=""^"" D ENFF^PSGOE92 G:Y>0 @Y G A8"
^XTMP("XPDT",7807,"RTN","PSGOE91",39,0)=" I X=""@"",PSGSI="""" W $C(7),""  ??"" S X=""?"" D ENHLP^PSGOEM(55.06,8) G A8"
^XTMP("XPDT",7807,"RTN","PSGOE91",40,0)=" I X=""@"" D DEL G:%'=1 A8 S PSGSI="""" G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",41,0)=" I X?1.""?"" D ENHLP^PSGOEM(55.06,8) G A8"
^XTMP("XPDT",7807,"RTN","PSGOE91",42,0)=" D ^PSGSICHK I '$D(X) W $C(7),"" ??"" S X=""?"" D ENHLP^PSGOEM(55.06,8) G A8"
^XTMP("XPDT",7807,"RTN","PSGOE91",43,0)=" S PSGSI=X G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",44,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",45,0)="10 ; start date/time"
^XTMP("XPDT",7807,"RTN","PSGOE91",46,0)=" S MSG=0,PSGF2=10 S:PSGOEEF(PSGF2) BACK=""10^PSGOE91"""
^XTMP("XPDT",7807,"RTN","PSGOE91",47,0)="A10 ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",48,0)=" I $G(PSJORD),$G(PSGP) I $$COMPLEX^PSJOE(PSGP,PSJORD) S PSGOEE=0 D  G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",49,0)=" . W !!?5,""Start Date/Time may not be edited for active complex orders."" D PAUSE^VALM1"
^XTMP("XPDT",7807,"RTN","PSGOE91",50,0)=" K PSGSDX"
^XTMP("XPDT",7807,"RTN","PSGOE91",51,0)=" W !,""START DATE/TIME: ""_$S($P(PSGSDN,""^"")]"""":$P(PSGSDN,""^"")_""// "",1:"""") R X:DTIME I X=""^""!'$T W:'$T $C(7) S PSGOEE=0 G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",52,0)=" I X="""",PSGSD W ""  ""_PSGSDN G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",53,0)=" I X=""P"" D ENPREV^PSGDL W:'$D(X) $C(7) G:'$D(X) A10 S PSGSD=+X,PSGSDN=$$ENDD^PSGMI(PSGSD)_""^""_$$ENDTC^PSGMI(PSGSD) W ""  "",$P(PSGSDN,""^"") G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",54,0)=" I X=""@""!(X?1.""?"") W:X=""@"" $C(7),""  (Required)"" S:X=""@"" X=""?"" D ENHLP^PSGOEM(55.06,10)"
^XTMP("XPDT",7807,"RTN","PSGOE91",55,0)=" I $E(X)=""^"" D ENFF^PSGOE92 G:Y>0 @Y G A10"
^XTMP("XPDT",7807,"RTN","PSGOE91",56,0)=" NEW TMPX S TMPX=X,X1=PSGDT,X2=-7 D C^%DTC K %DT S %DT=""ERTX"",%DT(0)=X,X=TMPX D ^%DT K %DT I Y'>0 D ENHLP^PSGOEM(55.06,10) G A10"
^XTMP("XPDT",7807,"RTN","PSGOE91",57,0)=" I PSGFD<Y W $C(7),!?5,""*** THE START DATE CANNOT BE AFTER THE STOP DATE! ***"",! S MSG=1 G A10"
^XTMP("XPDT",7807,"RTN","PSGOE91",58,0)=" S (PSGSDX,PSGSD)=+Y,PSGSDN=$$ENDD^PSGMI(PSGSD)_""^""_$$ENDTC^PSGMI(PSGSD) G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",59,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",60,0)="34 ; stop date"
^XTMP("XPDT",7807,"RTN","PSGOE91",61,0)=" S MSG=0,PSGF2=34 S:PSGOEEF(PSGF2) BACK=""34^PSGOE91"""
^XTMP("XPDT",7807,"RTN","PSGOE91",62,0)="A34 ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",63,0)=" K PSGFDX"
^XTMP("XPDT",7807,"RTN","PSGOE91",64,0)=" I $G(PSJORD),$G(PSGP) I $$COMPLEX^PSJOE(PSGP,PSJORD) S PSGOEE=0 D  G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",65,0)=" . W !!?5,""Stop Date/Time may not be edited for active complex orders."" D PAUSE^VALM1"
^XTMP("XPDT",7807,"RTN","PSGOE91",66,0)=" W !,""STOP DATE/TIME: ""_$S($P(PSGFDN,""^"")]"""":$P(PSGFDN,""^"")_""// "",1:"""") R X:DTIME I '$T W $C(7) S PSGOEE=0 G DONE"
^XTMP("XPDT",7807,"RTN","PSGOE91",67,0)=" I X="""",PSGFD W ""   ""_$P(PSGFDN,""^"") G W34"
^XTMP("XPDT",7807,"RTN","PSGOE91",68,0)=" I $E(X)=""^"" D ENFF^PSGOE92 G:Y>0 @Y G A34"
^XTMP("XPDT",7807,"RTN","PSGOE91",69,0)=" I X=""@""!(X?1.""?"") W:X=""@"" $C(7),""  (Required)"" S:X=""@"" X=""?"" D ENHLP^PSGOEM(55.06,34)"
^XTMP("XPDT",7807,"RTN","PSGOE91",70,0)=" I X=+X,(X>0),(X'>2000000) G A34:'$$ENDL^PSGDL(PSGSCH,X) K PSGDLS S PSGDL=X W "" ...dose limit..."" D ENE^PSGDL"
^XTMP("XPDT",7807,"RTN","PSGOE91",71,0)=" K %DT S %DT=""ERTX"",%DT(0)=PSGSD D ^%DT K %DT G:Y'>0 A34 S (PSGFDX,PSGFD)=+Y,PSGFDN=$$ENDD^PSGMI(PSGFD)_""^""_$$ENDTC^PSGMI(PSGFD)"
^XTMP("XPDT",7807,"RTN","PSGOE91",72,0)="W34 ;Compare to Start Date"
^XTMP("XPDT",7807,"RTN","PSGOE91",73,0)=" N Z,MSG"
^XTMP("XPDT",7807,"RTN","PSGOE91",74,0)=" D DOSE I $G(Z)]"""",Z>$S($G(PSGFD):PSGFD,1:$G(PSGNEFD)) D  G A34"
^XTMP("XPDT",7807,"RTN","PSGOE91",75,0)=" . S MSG(1)=""There is no administration time that falls between the Start Date/Time"""
^XTMP("XPDT",7807,"RTN","PSGOE91",76,0)=" . S MSG(2)=""and the Stop Date/Time."""
^XTMP("XPDT",7807,"RTN","PSGOE91",77,0)=" . D EN^DDIOL(.MSG)"
^XTMP("XPDT",7807,"RTN","PSGOE91",78,0)=" I PSGFD<PSGDT W $C(7),!!?13,""*** WARNING! THE STOP DATE ENTERED IS IN THE PAST! ***"",! S MSG=1"
^XTMP("XPDT",7807,"RTN","PSGOE91",79,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",80,0)="DONE ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",81,0)=" ;Display Expected First Dose;BHW;PSJ*5*136"
^XTMP("XPDT",7807,"RTN","PSGOE91",82,0)=" ;BHW;PSJ*5*179; - Remove EFD call.  Added to PSGOEE."
^XTMP("XPDT",7807,"RTN","PSGOE91",83,0)=" ;D EFDACT^PSJUTL"
^XTMP("XPDT",7807,"RTN","PSGOE91",84,0)=" I PSGOEE G:'PSGOEEF(PSGF2) @BACK S PSGOEE=PSGOEEF(PSGF2)"
^XTMP("XPDT",7807,"RTN","PSGOE91",85,0)=" K F,F0,F1,PSGF2,F3,PSG,SDT,ORIG Q"
^XTMP("XPDT",7807,"RTN","PSGOE91",86,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",87,0)="FF ; up-arrow to another field"
^XTMP("XPDT",7807,"RTN","PSGOE91",88,0)=" D ENFF^PSGOEM I Y>0,Y'=41,Y'=8,Y'=10,Y'=34 S Y=Y_""^PSGOE9""_$S(""^109^13^3^7^26^""[(""^""_Y_""^""):"""",1:2) S:Y=2 FB=PSGF2_""^PSGOE91"""
^XTMP("XPDT",7807,"RTN","PSGOE91",89,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOE91",90,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",91,0)="DEL ; delete entry"
^XTMP("XPDT",7807,"RTN","PSGOE91",92,0)=" W !?3,""SURE YOU WANT TO DELETE"" S %=0 D YN^DICN I %'=1 W $C(7),""  <NOTHING DELETED>"""
^XTMP("XPDT",7807,"RTN","PSGOE91",93,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOE91",94,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",95,0)="TIMES ;At least one admin time, not more than interval allows."
^XTMP("XPDT",7807,"RTN","PSGOE91",96,0)=" I $G(PSGST)'=""O"",($G(PSGST)'=""OC""),($G(PSGST)'=""R"") I X="""" D EN^DDIOL(""This order requires at least one administration time."") K X Q  ;No times"
^XTMP("XPDT",7807,"RTN","PSGOE91",97,0)=" N H,I,MAX"
^XTMP("XPDT",7807,"RTN","PSGOE91",98,0)=" I PSGSCH]"""" I $D(^PS(51.1,""AC"",""PSJ"",PSGSCH)) S H=+$O(^PS(51.1,""AC"",""PSJ"",PSGSCH,0)) S I=$P($G(^PS(51.1,H,0)),""^"",3)"
^XTMP("XPDT",7807,"RTN","PSGOE91",99,0)=" I $G(PSGST)=""O"",$L(X,""-"")>1 D EN^DDIOL(""This is a One Time Order. Only one administration time is permitted."") K X Q"
^XTMP("XPDT",7807,"RTN","PSGOE91",100,0)=" I $G(PSGST)=""O"" Q  ;Done validating One Time"
^XTMP("XPDT",7807,"RTN","PSGOE91",101,0)=" I +$G(I)=0 Q  ;No frequency - can not check frequency related items"
^XTMP("XPDT",7807,"RTN","PSGOE91",102,0)=" S MAX=1440/I"
^XTMP("XPDT",7807,"RTN","PSGOE91",103,0)=" I MAX<1,$L(X,""-"")>1 D EN^DDIOL(""This order requires one administration time."") K X Q"
^XTMP("XPDT",7807,"RTN","PSGOE91",104,0)=" I MAX'<1,$L(X,""-"")>MAX D EN^DDIOL(""The number of admin times entered is greater than indicated by the schedule."") K X Q  ;Too many times"
^XTMP("XPDT",7807,"RTN","PSGOE91",105,0)=" I MAX'<1,$L(X,""-"")<MAX D EN^DDIOL(""The number of admin times entered is fewer than indicated by the schedule."")  ;Too few times"
^XTMP("XPDT",7807,"RTN","PSGOE91",106,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOE91",107,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOE91",108,0)="DOSE ;Make certain at least one dose is given."
^XTMP("XPDT",7807,"RTN","PSGOE91",109,0)=" N INFO,X"
^XTMP("XPDT",7807,"RTN","PSGOE91",110,0)=" S Z="""",INFO=($S($G(PSGSD):PSGSD,1:$G(PSGNESD)))_U_($S($G(PSGFD):PSGFD,1:$G(PSGNEFD)))_U_($G(PSGSCH))_U_($G(PSGST))_U_($G(PSGDRG))_U_($G(PSGS0Y))"
^XTMP("XPDT",7807,"RTN","PSGOE91",111,0)=" Q:$G(PSGST)=""OC""!($G(PSGST)=""P"")"
^XTMP("XPDT",7807,"RTN","PSGOE91",112,0)=" I '$L($G(PSGP)) N PSGP S PSGP="""""
^XTMP("XPDT",7807,"RTN","PSGOE91",113,0)=" S Z=$$ENQ^PSJORP2(PSGP,INFO)  ;Expected first dose."
^XTMP("XPDT",7807,"RTN","PSGOE91",114,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE")="0^2^B63125131^B61292541"
^XTMP("XPDT",7807,"RTN","PSGOEE",1,0)="PSGOEE ;BIR/CML3-EDIT ACTIVE OR NON-VERIFIED ORDERS ; 1/21/10 11:34am"
^XTMP("XPDT",7807,"RTN","PSGOEE",2,0)=" ;;5.0; INPATIENT MEDICATIONS ;**4,7,29,47,64,58,82,91,110,111,112,142,179**;16 DEC 97;Build 28"
^XTMP("XPDT",7807,"RTN","PSGOEE",3,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",4,0)=" ; Reference to ^PS(55 is supported by DBIA# 2191."
^XTMP("XPDT",7807,"RTN","PSGOEE",5,0)=" ; Reference to ^PSSLOCK is supported by DBIA# 2789."
^XTMP("XPDT",7807,"RTN","PSGOEE",6,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",7,0)=" D NOW^%DTC S PSGDT=% K PSGEFN,PSGOEEF S PSGOEEF=0 I PSGORD[""A""!(PSGORD[""O"") G ACT"
^XTMP("XPDT",7807,"RTN","PSGOEE",8,0)="531 ; edit orders in 53.1"
^XTMP("XPDT",7807,"RTN","PSGOEE",9,0)="ENF ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",10,0)=" D EN2^PSGOEEW"
^XTMP("XPDT",7807,"RTN","PSGOEE",11,0)=" K PSJACEPT D EDLOOP G:'$G(PSJACEPT) OUT"
^XTMP("XPDT",7807,"RTN","PSGOEE",12,0)=" I $G(PSGOEENO) D"
^XTMP("XPDT",7807,"RTN","PSGOEE",13,0)=" . N PSGOEENO S PSGOEENO=1 D NEW"
^XTMP("XPDT",7807,"RTN","PSGOEE",14,0)=" E  D"
^XTMP("XPDT",7807,"RTN","PSGOEE",15,0)=" . N PSGOEENO S PSGOEENO=0 D UPD"
^XTMP("XPDT",7807,"RTN","PSGOEE",16,0)=" I $G(PSGOEAV) D ACT1 Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",17,0)=" D DONE1"
^XTMP("XPDT",7807,"RTN","PSGOEE",18,0)=" S PSGOEEF=0,PSJORD=PSGORD D GETUD^PSJLMGUD(PSGP,PSGORD),ENSFE^PSGOEE0(PSGP,PSGORD)"
^XTMP("XPDT",7807,"RTN","PSGOEE",19,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",20,0)="ACT ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",21,0)=" D EN2^PSGOEEW,EDLOOP G:'$G(PSJACEPT) OUT"
^XTMP("XPDT",7807,"RTN","PSGOEE",22,0)=" I $G(PSGOEENO) D"
^XTMP("XPDT",7807,"RTN","PSGOEE",23,0)=" . N PSGOEENO S PSGOEENO=1 D NEW"
^XTMP("XPDT",7807,"RTN","PSGOEE",24,0)=" E  D"
^XTMP("XPDT",7807,"RTN","PSGOEE",25,0)=" . N PSGOEENO S PSGOEENO=0 D UPD"
^XTMP("XPDT",7807,"RTN","PSGOEE",26,0)=" S:$D(PSGOEF)!$G(PSGOEENO) PSGCANFL=-1"
^XTMP("XPDT",7807,"RTN","PSGOEE",27,0)="ACT1 ;I 'PSGOEAV,PSJSYSL>1 S $P(@($S(PSGORD[""U"":""^PS(55,""_PSGP_"",5,"",1:""^PS(53.1,"")_+PSGORD_"",7)""),""^"",1,2)=PSGDT_""^""_$E(""D"",PSGOEENO)_""E"",PSGTOL=2,PSGUOW=DUZ,PSGTOO=PSGORD'[""U""+1,DA=+PSGORD D ENL^PSGVDS"
^XTMP("XPDT",7807,"RTN","PSGOEE",28,0)=" D DONE1"
^XTMP("XPDT",7807,"RTN","PSGOEE",29,0)=" S PSGOEEF=0 D GETUD^PSJLMGUD(PSGP,PSGORD),ENSFE^PSGOEE0(PSGP,PSGORD) D:PSGOEAV UNL^PSSLOCK(PSGP,PSGORD)"
^XTMP("XPDT",7807,"RTN","PSGOEE",30,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",31,0)="EDIT ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",32,0)=" D FULL^VALM1"
^XTMP("XPDT",7807,"RTN","PSGOEE",33,0)=" W ! S PSGOEER="""" F Q=1:1 S Q1=$P(Y,"","",Q) Q:'Q1  S X=$P($T(@(PSGOEEG_Q1)),"";"",3),PSGOEER=PSGOEER_X_"";"",PSGOEEF(+X)=Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",34,0)=" S LIMIT=$L(PSGOEER,"";"")-1,(PSGDEF,PSGOEE)=0 F  S PSGOEE=PSGOEE+1 Q:PSGOEE>LIMIT  I +$P(PSGOEER,"";"",PSGOEE)=101 S PSGDEF=1"
^XTMP("XPDT",7807,"RTN","PSGOEE",35,0)=" S PSGOEER=$E(PSGOEER,1,$L(PSGOEER)-1),(MSG,PSGOEE)=0 F  S PSGOEE=PSGOEE+1 Q:PSGOEE>$L(PSGOEER,"";"")  S F1=$S(PSGOEEG=3:53.1,1:55.06) I 'PSGDEF!((PSGDEF)&(+$P(PSGOEER,"";"",PSGOEE)'=2)) D @$P(PSGOEER,"";"",PSGOEE) Q:'PSGOEE"
^XTMP("XPDT",7807,"RTN","PSGOEE",36,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",37,0)="EDLOOP ; Continue prompting for fields to edit."
^XTMP("XPDT",7807,"RTN","PSGOEE",38,0)=" D:$G(Y) EDIT"
^XTMP("XPDT",7807,"RTN","PSGOEE",39,0)=" D ENNOU^PSGOEE0 I '$G(PSGOEENO),DR="""" S VALMBCK=""R"" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",40,0)=" K VALMSG"
^XTMP("XPDT",7807,"RTN","PSGOEE",41,0)=" I '$G(PSGOEENO),$G(PSGPDNX) D CKDT"
^XTMP("XPDT",7807,"RTN","PSGOEE",42,0)=" I $G(PSGOEENO) D"
^XTMP("XPDT",7807,"RTN","PSGOEE",43,0)=" .S VALMSG=""This change will cause a new order to be created."" D GTSTATUS,CHKDD,CKDT"
^XTMP("XPDT",7807,"RTN","PSGOEE",44,0)=" .S PSGEBN=$$ENNPN^PSGMI(DUZ),PSGLIN=$$ENDD^PSGMI(PSGDT)_U_$$ENDTC^PSGMI(PSGDT)"
^XTMP("XPDT",7807,"RTN","PSGOEE",45,0)=" D CHK^PSGOEV(""^^""_PSGMR_""^^^^""_PSGST,PSGPDRG_U_PSGDO,PSGSCH_U_PSGSD_""^^""_PSGFD)"
^XTMP("XPDT",7807,"RTN","PSGOEE",46,0)=" K VALMBCK,PSJACEPT,PSGPDNX D EN^VALM(""PSJU LM ACCEPT"") Q:'$G(PSJACEPT)"
^XTMP("XPDT",7807,"RTN","PSGOEE",47,0)=" I $G(PSGS0XT)=""D"",'$G(PSGS0Y) I (("",P,R,"")'[("",""_$G(PSGST)_"","")) D  Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",48,0)=" .S PSJACEPT=0 W !!,""This is a 'DAY OF THE WEEK' schedule and MUST have admin times."" D PAUSE^VALM1"
^XTMP("XPDT",7807,"RTN","PSGOEE",49,0)=" I $G(PSGOEENO) S PSJNOO=$$ENNOO^PSJUTL5(""E"")"
^XTMP("XPDT",7807,"RTN","PSGOEE",50,0)=" D K1 S PSJACEPT=$S($G(PSJNOO)<0:0,1:1)"
^XTMP("XPDT",7807,"RTN","PSGOEE",51,0)=" S VALMBCK=$S('PSJACEPT:""R"",'PSGOEAV:""R"",1:""Q"")"
^XTMP("XPDT",7807,"RTN","PSGOEE",52,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",53,0)="CHKDD ;*** Check inactive Dispense drug within the order."
^XTMP("XPDT",7807,"RTN","PSGOEE",54,0)=" D CHKDRG^PSGOE2"
^XTMP("XPDT",7807,"RTN","PSGOEE",55,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",56,0)="CKDT ; Check if new start/stop dates should be calculated."
^XTMP("XPDT",7807,"RTN","PSGOEE",57,0)=" S PSGS0Y=$S($D(PSGS0Y):PSGS0Y,1:$G(PSGAT))"
^XTMP("XPDT",7807,"RTN","PSGOEE",58,0)=" ;bhw;PSJ*5*179;Changed line below to recalculate start date on Stop Date (PSGFD & PSGOFD) edit."
^XTMP("XPDT",7807,"RTN","PSGOEE",59,0)=" ;I ('$G(PSGNEWDT)&(PSGSD=$G(PSGOSD))&(PSGFD=$G(PSGOFD)))!($G(PSGOST)'=PSGST)!(PSGSCH'=$G(PSGOSCH))!($G(PSGPDNX)) D"
^XTMP("XPDT",7807,"RTN","PSGOEE",60,0)=" I ('$G(PSGNEWDT)&(PSGSD=$G(PSGOSD)))!($G(PSGOST)'=PSGST)!(PSGSCH'=$G(PSGOSCH))!($G(PSGPDNX)) D"
^XTMP("XPDT",7807,"RTN","PSGOEE",61,0)=" .N PSGOES S PSGOES=1,PSGOFD=PSGFD D ^PSGNE3 S PSGSD=PSGNESD,PSGSDN=$$ENDD^PSGMI(PSGNESD)_U_$$ENDTC^PSGMI(PSGNESD),PSGFD=PSGNEFD,PSGFDN=$$ENDD^PSGMI(PSGNEFD)_U_$$ENDTC^PSGMI(PSGNEFD),PSGNEWDT=1"
^XTMP("XPDT",7807,"RTN","PSGOEE",62,0)=" .I $D(PSGOFD),PSGOFD]"""",PSGFD'=PSGOFD S PSGOEEF(25)=1"
^XTMP("XPDT",7807,"RTN","PSGOEE",63,0)=" .I $D(PSGOSD),PSGOSD]"""",PSGSD'=PSGOSD S PSGOEEF(10)=1"
^XTMP("XPDT",7807,"RTN","PSGOEE",64,0)=" ;BHW;PSJ*5*179;Add EFD call here, removed from PSGOE91"
^XTMP("XPDT",7807,"RTN","PSGOEE",65,0)=" D EFDACT^PSJUTL"
^XTMP("XPDT",7807,"RTN","PSGOEE",66,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",67,0)="NEW3 ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",68,0)=" ;S:PSGOEAV PSGOEAV=""0^1"""
^XTMP("XPDT",7807,"RTN","PSGOEE",69,0)="NEW ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",70,0)=" W !,""...discontinuing original order..."""
^XTMP("XPDT",7807,"RTN","PSGOEE",71,0)=" I PSGORD[""P"" S PSJCOM=+$P($G(^PS(53.1,+PSGORD,.2)),""^"",8) I PSJCOM D NEW^PSJCOM1 Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",72,0)=" ;DC and Unlock order."
^XTMP("XPDT",7807,"RTN","PSGOEE",73,0)=" S PSGEDIT=""DE"" D ENOR^PSGOECS,UNL^PSSLOCK(PSGP,PSGORD) K PSGEDIT"
^XTMP("XPDT",7807,"RTN","PSGOEE",74,0)=" W !!,"" ...creating new order..."" W:'PSGOEAV ""(you will now work on this new order)"""
^XTMP("XPDT",7807,"RTN","PSGOEE",75,0)=" S PSGS0Y=PSGAT,PSGNESD=PSGSD,PSGNEFD=PSGFD,PSGOEPR=PSGPR,PSGPDRG=PSGPD,PSGPDRGN=PSGPDN,PSGOEE=""E"""
^XTMP("XPDT",7807,"RTN","PSGOEE",76,0)=" S PSGOORD=PSGORD D ^PSGOETO K PSGOEOS"
^XTMP("XPDT",7807,"RTN","PSGOEE",77,0)=" I PSGOORD[""U"" S $P(^PS(55,PSGP,5,+PSGOORD,0),""^"",26,27)=PSGORD_""^E"""
^XTMP("XPDT",7807,"RTN","PSGOEE",78,0)=" E  S $P(^PS(53.1,+PSGOORD,0),""^"",26,27)=PSGORD_""^E"""
^XTMP("XPDT",7807,"RTN","PSGOEE",79,0)=" I 'PSGOEAV,($G(PSGORD)[""P""),'$G(^PS(53.1,+PSGORD,2.5)),$G(^PS(53.1,+PSGORD,0)) D"
^XTMP("XPDT",7807,"RTN","PSGOEE",80,0)=" . N DUR S DUR=$$GETDUR^PSJLIVMD(PSGP,PSGORD,$S(PSGORD[""P"":""P"",1:5),1) I DUR]"""" K DA,DR,DIE S DIE=""^PS(53.1,"",DA=+PSGORD,DR=""116////""_DUR D ^DIE"
^XTMP("XPDT",7807,"RTN","PSGOEE",81,0)=" I PSGOEAV,+PSJSYSU=3,'$D(PSGOES) D EN^PSGPEN(PSGORD),UNL^PSSLOCK(PSGP,PSGORD) Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",82,0)=" S PSJORD=PSGORD,PSGACT=$$ENACTION^PSGOE1(PSGP,PSGORD)"
^XTMP("XPDT",7807,"RTN","PSGOEE",83,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",84,0)="UPD ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",85,0)=" K DA W !!,""...updating order..."""
^XTMP("XPDT",7807,"RTN","PSGOEE",86,0)=" I PSGORD[""P"" S PSJCOM=+$P($G(^PS(53.1,+PSGORD,.2)),""^"",8) I PSJCOM D UPD^PSJCOM Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",87,0)=" ; Set trigger for FIELD (12) Dispense Drug to print a updated pick list."
^XTMP("XPDT",7807,"RTN","PSGOEE",88,0)=" I PSGORD[""U"",$D(^PS(53.45,PSJSYSP,2,1,0)),$D(^PS(55,PSGP,5,+PSGORD,1,1,0)) D"
^XTMP("XPDT",7807,"RTN","PSGOEE",89,0)=" .N PSJX12,PSJF12 S PSJF12=0"
^XTMP("XPDT",7807,"RTN","PSGOEE",90,0)=" .F PSJX12=0:1 S PSJX12=$O(^PS(53.45,PSJSYSP,2,PSJX12)) Q:+PSJX12=0  S:$G(^PS(53.45,PSJSYSP,2,PSJX12,0))'=$G(^PS(55,PSGP,5,+PSGORD,1,PSJX12,0)) PSJF12=1"
^XTMP("XPDT",7807,"RTN","PSGOEE",91,0)=" .S:PSJF12 ^PS(55,""AUE"",PSGP,+PSGORD)="""""
^XTMP("XPDT",7807,"RTN","PSGOEE",92,0)=" N TMP,PSGSIF S TMP=PSGOEENO N PSGOEENO S PSGOEENO=TMP"
^XTMP("XPDT",7807,"RTN","PSGOEE",93,0)=" N II F II=1:1:$L($G(DR),"";"") I $E($P($G(DR),"";"",II),1,7)=""122////"" S PSGSIF=$P(PSGSI,""^"",2),PSGSI=$P(PSGSI,""^"") Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",94,0)=" I $G(PSJCOM),$G(PSJCOMSI) K PSJCOMSI N PSJCHILD,PSJOEORD S PSJOEORD=0 F  S PSJOEORD=$O(^PS(55,""ACX"",PSJCOM,PSJOEORD)) Q:'PSJOEORD  D"
^XTMP("XPDT",7807,"RTN","PSGOEE",95,0)=" . S PSJCHILD=0 F  S PSJCHILD=$O(^PS(55,""ACX"",PSJCOM,PSJOEORD,PSJCHILD)) Q:'PSJCHILD  D"
^XTMP("XPDT",7807,"RTN","PSGOEE",96,0)=" .. Q:PSJCHILD=PSGORD  N DR,DA,DIE,ORD S DR=$S(PSJCHILD[""V"":""31////""_$G(P(""OPI"")),1:""8////""_$G(PSGSI)) S DR=DR_"";""_$S(PSJCHILD[""V"":146,1:122)_""////""_+$G(PSGSIF)"
^XTMP("XPDT",7807,"RTN","PSGOEE",97,0)=" .. ;PSJ*5*179 Comment edits"
^XTMP("XPDT",7807,"RTN","PSGOEE",98,0)=" .. S DR=$TR(DR,""*"") I DR'="""" S DA=+PSJCHILD,DIE=$S(PSJCHILD[""U"":""^PS(55,""_PSGP_"",5,"",1:""^PS(53.1,"") S:DIE[""^PS(55,"" DA(1)=PSGP D ^DIE W ""."" D EN1^PSJHL2(PSGP,""XX"",+PSJCHILD_""U"")"
^XTMP("XPDT",7807,"RTN","PSGOEE",99,0)=" S DR=$TR(DR,""*"") I DR'="""" S DA=+PSGORD,DIE=$S(PSGORD[""U"":""^PS(55,""_PSGP_"",5,"",1:""^PS(53.1,"") S:DIE[""^PS(55,"" DA(1)=PSGP D ^DIE W ""."""
^XTMP("XPDT",7807,"RTN","PSGOEE",100,0)=" F Q=1,3 K @(PSGOEEWF_Q_"")"") S %X=""^PS(53.45,""_PSJSYSP_"",""_$S(Q=1:2,1:1)_"","",%Y=PSGOEEWF_Q_"","" K @(PSGOEEWF_Q_"")"") D %XY^%RCR W ""."""
^XTMP("XPDT",7807,"RTN","PSGOEE",101,0)=" S $P(@(PSGOEEWF_""1,0)""),""^"",2)=$S(PSGORD[""U"":55.07,1:53.11)_""P"""
^XTMP("XPDT",7807,"RTN","PSGOEE",102,0)=" ; Naked reference on the line below refers to full reference using indirection to either ^PS(55 or ^PS(53.1,"
^XTMP("XPDT",7807,"RTN","PSGOEE",103,0)=" S ND=$G(@($S(PSGORD[""U"":""^PS(55,""_PSGP_"",5,"",1:""^PS(53.1,"")_+PSGORD_"",0)"")) I $P(ND,""^"",21) S ORIFN=$P(ND,""^"",21),ND1=$G(^(.2)),ND2=$G(^(2)) W !,""...updating OE/RR..."" D EN1^PSJHL2(PSGP,""XX"",PSGORD)"
^XTMP("XPDT",7807,"RTN","PSGOEE",104,0)=" I $$ENACTION^PSGOE1(PSGP,PSGORD)[""V"" S VALMBCK=""R"""
^XTMP("XPDT",7807,"RTN","PSGOEE",105,0)=" I PSJSYSL,PSJSYSL<3 S $P(@($S(PSGORD[""U"":""^PS(55,""_PSGP_"",5,"",1:""^PS(53.1,"")_+PSGORD_"",7)""),""^"",1,2)=PSGDT_""^""_$E(""D"",PSGOEENO)_""E"",PSGTOL=2,PSGUOW=DUZ,PSGTOO=PSGORD'[""U""+1,DA=+PSGORD D ENL^PSGVDS"
^XTMP("XPDT",7807,"RTN","PSGOEE",106,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",107,0)="OUT ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",108,0)=" D ABORT K PSGNEWDT S PSGCANFL=1 D GETUD^PSJLMGUD(PSGP,PSGORD),ENSFE^PSGOEE0(PSGP,PSGORD),INIT^PSJLMUDE(PSGP,PSGORD)"
^XTMP("XPDT",7807,"RTN","PSGOEE",109,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",110,0)="DONE ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",111,0)=" I PSGORD[""P"",'$D(PSGOEF),PSGSCH]"""",$O(^PS(53.1,+PSGORD,1,0)) D ENF^PSGOEE0"
^XTMP("XPDT",7807,"RTN","PSGOEE",112,0)="DONE1 ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",113,0)=" I PSGORD[""U"" S X=+PSGORD L -^PS(55,PSGP,5,X)"
^XTMP("XPDT",7807,"RTN","PSGOEE",114,0)=" E  L -^PS(53.1,+PSGORD)"
^XTMP("XPDT",7807,"RTN","PSGOEE",115,0)=" K ^PS(53.45,+PSJSYSP,1),^(2)"
^XTMP("XPDT",7807,"RTN","PSGOEE",116,0)=" I '$D(PSGOEF) K PSGSD,PSGSCH,PSGST,PSGFD"
^XTMP("XPDT",7807,"RTN","PSGOEE",117,0)=" K DA,DIE,DIR,DP,DR,DRG,ND,ND0,ND1,ND2,ORIFN,PSGAL,PSGALEF,PSGAT,PSGOEE,PSGOEEF,PSGOEEG,PSGOEEWF,PSGEFN,PSGTOL,PSGTOO,PSGUOW,XREF,PSGEFN,PSGMR,PSGMRN,PSGOROE1,PSGPD,PSGPDN,PSGSI,PSGPR,PSGSM,PSGHSM,PSGSTN,PSGSDN,PSGFDN,PSGPRN"
^XTMP("XPDT",7807,"RTN","PSGOEE",118,0)=" K PSGDO,PSGOEENO Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",119,0)="K1 ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",120,0)=" K BACK,F1,F2,PSGF2,MSG,PSGEFN,PSGNEWDT,PSGOEEND,PSGOPD,PSGOPDN,PSGOMR,PSGOMRN,PSGOSCH,PSGOSI,PSGOPR,PSGOSM,PSGOHSM,PSGOSD,PSGOFD,PSGOST,PSGOPRN,PSGOSTN,PSGOSDN,PSGOFDN,PSGODO,PSGPDRG,PSGPDRGN,PSGOEER"
^XTMP("XPDT",7807,"RTN","PSGOEE",121,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",122,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",123,0)="ABORT ; Display no change message and pause."
^XTMP("XPDT",7807,"RTN","PSGOEE",124,0)=" S (PSGDI,PSGDFLG)='$$DDOK^PSGOE2(PSGOEEWF_""1,"",+$G(@(PSGOEEWF_"".2)"")))"
^XTMP("XPDT",7807,"RTN","PSGOEE",125,0)=" S PSGPFLG='$$OIOK^PSGOE2(+$G(@(PSGOEEWF_"".2)"")))"
^XTMP("XPDT",7807,"RTN","PSGOEE",126,0)=" W !!,$C(7),""No changes made to this order."" D PAUSE^VALM1 K PSGOEEF S PSGOEEF=0"
^XTMP("XPDT",7807,"RTN","PSGOEE",127,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",128,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",129,0)="GTSTATUS ; Determine status of new order and set LM title."
^XTMP("XPDT",7807,"RTN","PSGOEE",130,0)=" S PSGSTAT=$S($P($G(PSJSYSP0),U,9):""ACTIVE"",1:""NON-VERIFIED"")"
^XTMP("XPDT",7807,"RTN","PSGOEE",131,0)=" S VALM(""TITLE"")=PSGSTAT_"" UNIT DOSE ""_$S(PSGSTAT=""PENDING"":""(""_PSGPRIO_"")"",1:"""")"
^XTMP("XPDT",7807,"RTN","PSGOEE",132,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE",133,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",134,0)="FIELDS ;"
^XTMP("XPDT",7807,"RTN","PSGOEE",135,0)="31 ;;101^PSGOE8;PSGOPD;PSGPD;101;1"
^XTMP("XPDT",7807,"RTN","PSGOEE",136,0)="32 ;;109^PSGOE8;PSGODO;PSGDO;109;PSGODO]"""""
^XTMP("XPDT",7807,"RTN","PSGOEE",137,0)="33 ;;10^PSGOE81;PSGOSD;PSGSD;10;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",138,0)="34 ;;3^PSGOE8;PSGOMR;PSGMR;3;1"
^XTMP("XPDT",7807,"RTN","PSGOEE",139,0)="35 ;;25^PSGOE81;PSGOFD;PSGFD;25;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",140,0)="36 ;;7^PSGOE8;PSGOST;PSGST;7;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",141,0)="37 ;;5^PSGOE82;PSGOSM;PSGSM;5;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",142,0)="38 ;;26^PSGOE8;PSGOSCH;PSGSCH;26;1"
^XTMP("XPDT",7807,"RTN","PSGOEE",143,0)="39 ;;39^PSGOE81;PSGOAT;PSGAT;39;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",144,0)="310 ;;1^PSGOE82;PSGOPR;PSGPR;1;1"
^XTMP("XPDT",7807,"RTN","PSGOEE",145,0)="311 ;;8^PSGOE81;PSGOSI;PSGSI;8;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",146,0)="312 ;;2^PSGOE82;;;2;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",147,0)="313 ;;40^PSGOE82;;;40;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",148,0)="51 ;;101^PSGOE9;PSGOPD;PSGPD;101;1"
^XTMP("XPDT",7807,"RTN","PSGOEE",149,0)="52 ;;109^PSGOE9;PSGODO;PSGDO;109;PSGODO]"""""
^XTMP("XPDT",7807,"RTN","PSGOEE",150,0)="53 ;;10^PSGOE91;PSGOSD;PSGSD;10;1"
^XTMP("XPDT",7807,"RTN","PSGOEE",151,0)="54 ;;3^PSGOE9;PSGOMR;PSGMR;3;1"
^XTMP("XPDT",7807,"RTN","PSGOEE",152,0)="55 ;;34^PSGOE91;PSGOFD;PSGFD;34;1 "
^XTMP("XPDT",7807,"RTN","PSGOEE",153,0)="56 ;;7^PSGOE9;PSGOST;PSGST;7;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",154,0)="57 ;;5^PSGOE92;PSGOSM;PSGSM;5;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",155,0)="58 ;;26^PSGOE9;PSGOSCH;PSGSCH;26;1"
^XTMP("XPDT",7807,"RTN","PSGOEE",156,0)="59 ;;41^PSGOE91;PSGOAT;PSGAT;41;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",157,0)="510 ;;1^PSGOE92;PSGOPR;PSGPR;1;1"
^XTMP("XPDT",7807,"RTN","PSGOEE",158,0)="511 ;;8^PSGOE91;PSGOSI;PSGSI;8;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",159,0)="512 ;;2^PSGOE92;;;2;0"
^XTMP("XPDT",7807,"RTN","PSGOEE",160,0)="513 ;;15^PSGOE92;;;15;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0")="0^8^B27327541^B26990604"
^XTMP("XPDT",7807,"RTN","PSGOEE0",1,0)="PSGOEE0 ;BIR/CML3-ORDER EDIT UTILITIES ; 10/7/08 11:08am"
^XTMP("XPDT",7807,"RTN","PSGOEE0",2,0)=" ;;5.0; INPATIENT MEDICATIONS ;**58,95,179**;16 DEC 97;Build 28"
^XTMP("XPDT",7807,"RTN","PSGOEE0",3,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE0",4,0)=" ; Reference to ^DICN is supported by DBIA 10009."
^XTMP("XPDT",7807,"RTN","PSGOEE0",5,0)=" ; Reference to ^DIR is supported by DBIA 10026."
^XTMP("XPDT",7807,"RTN","PSGOEE0",6,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE0",7,0)="ENSFE(PSGP,PSGORD) ; Determine editable fields, and fields that cause new order."
^XTMP("XPDT",7807,"RTN","PSGOEE0",8,0)=" D @$S(PSGORD[""P"":""ENSFE3^PSGOEE0"",1:""ENSFE5^PSGOEE0"")"
^XTMP("XPDT",7807,"RTN","PSGOEE0",9,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE0",10,0)="ENSFE3 ; set-up fields to edit for 53.1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",11,0)=" I PSGSTAT=""PENDING"" S PSGEFN=""1:13"" F X=1:1:13 S PSGEFN(+X)=$P($T(@(3_X)),"";"",7),PSGOEEF(+$P($T(@(3_X)),"";"",3))="""",PSGOEEF=PSGOEEF+1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",12,0)=" E  S PSGEFN=""1:13"" F X=1,2,3,4,5,6,7,8,9,10,11,12 S Y=$T(@(3_X)),@(""PSGEFN(""_+X_"")=""_$S($D(PSGOETOF):0,1:$P(Y,"";"",7))),PSGOEEF(+$P(Y,"";"",3))="""",PSGOEEF=PSGOEEF+1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",13,0)=" E  S:$P(PSJSYSU,"";"",3)>1 PSGEFN(9)=0,PSGOEEF(+$P($T(39),"";"",3))="""",PSGOEEF=PSGOEEF+1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",14,0)=" E  I PSGEB'=PSGOPR F X=10,13 S Y=$T(@(3_X)),@(""PSGEFN(""_X_"")=""_$S($D(PSGOETOF):0,1:$P(Y,"";"",7))),PSGOEEF(+$P(Y,"";"",3))="""",PSGOEEF=PSGOEEF+1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",15,0)=" K PSGOEEND S PSGOEEG=3,PSGPDRG=PSGOPD,PSGPDRGN=PSGOPDN Q"
^XTMP("XPDT",7807,"RTN","PSGOEE0",16,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE0",17,0)="ENSFE5 ; set-up fields to edit for 55"
^XTMP("XPDT",7807,"RTN","PSGOEE0",18,0)=" S PSGEFN=""1:13"""
^XTMP("XPDT",7807,"RTN","PSGOEE0",19,0)=" F X=1:1:13 S Y=$T(@(5_X)),@(""PSGEFN(""_+X_"")=""_$S($D(PSGOETO):0,1:$P(Y,"";"",7))),PSGOEEF(+$P(Y,"";"",3))="""",PSGOEEF=PSGOEEF+1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",20,0)=" I $P(PSJSYSU,"";"",3)>1 S PSGEFN(9)=0,PSGOEEF(+$P($T(59),"";"",3))="""",PSGOEEF=PSGOEEF+1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",21,0)=" S PSGPDRG=PSGPD,PSGPDRGN=PSGPDN,PSGOEEND=1,PSGOEEG=5"
^XTMP("XPDT",7807,"RTN","PSGOEE0",22,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE0",23,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE0",24,0)="ENOK ;"
^XTMP("XPDT",7807,"RTN","PSGOEE0",25,0)=" I $P($G(PSJSYSP0),U,2),'$O(^PS(53.45,+PSJSYSP,2,0)) D"
^XTMP("XPDT",7807,"RTN","PSGOEE0",26,0)=" .W !!,""No dispense drugs found for this order."" D ENDRG^PSGOEF1(PSGPD,0) I '$O(^PS(53.45,+PSJSYSP,2,0)) S PSGOEENO=0,DR="""""
^XTMP("XPDT",7807,"RTN","PSGOEE0",27,0)=" W ! I DR="""",'PSGOEENO D ABORT^PSGOEE S %=1 Q"
^XTMP("XPDT",7807,"RTN","PSGOEE0",28,0)=" W:PSGOEENO !,""(Accepting these changes will cause a new order to be created.)"""
^XTMP("XPDT",7807,"RTN","PSGOEE0",29,0)=" F  W !!,""ACCEPT THESE CHANGES"" S %=1 D YN^DICN Q:%  D  ;"
^XTMP("XPDT",7807,"RTN","PSGOEE0",30,0)=" .W !!?2,""Answer 'YES' (or press RETURN) if you have completed editing this order."" W:PSGOEENO !,""Accepting this changes will cause a new order to be created, and this order"",!,""will be discontinued."""
^XTMP("XPDT",7807,"RTN","PSGOEE0",31,0)=" .W:$D(PSGOEF) !,""Accepting these changes will convert this order to a non-verifed, Unit Dose"",!,""order."""
^XTMP("XPDT",7807,"RTN","PSGOEE0",32,0)=" .W !!,""Answer 'NO' to re-edit this order.  Enter an '^' to abort this edit."""
^XTMP("XPDT",7807,"RTN","PSGOEE0",33,0)=" ;I %=1,PSGOEENO,'$D(PSJOERR),PSGOEORF S PSJNOO=$S(PSGPR=DUZ:""E"",1:""W""),PSJNOON=$S(PSJNOO=""E"":""PROVIDER ENTERED"",1:""WRITTEN"") I PSGPR'=DUZ S F1=53.1,PSGF2=106 K PSGFOK D A106^PSGOER0 S %='$D(PSGFOK)+1 K PSGFOK"
^XTMP("XPDT",7807,"RTN","PSGOEE0",34,0)=" ;S:%<0 PSGOEENO=0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",35,0)=" S PSJNOO=$$ENNOO^PSJUTL5(""E"")"
^XTMP("XPDT",7807,"RTN","PSGOEE0",36,0)=" K F,F0,F1,F3,PSGDL,PSGDLS,PSGF2,PSGFOK,ND2,PSGOROE1,PSGRO,SDT"
^XTMP("XPDT",7807,"RTN","PSGOEE0",37,0)=" S:PSJNOO<0 (PSGOROE1,PSGOEENO)=0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",38,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE0",39,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE0",40,0)="ENNOU ; create new order or update old order"
^XTMP("XPDT",7807,"RTN","PSGOEE0",41,0)=" I $G(MSG) K DIR S DIR(0)=""E"" W !! D ^DIR"
^XTMP("XPDT",7807,"RTN","PSGOEE0",42,0)=" K DR S DR="""",(PSGOEENO,Q)=0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",43,0)=" F  S Q=$O(PSGEFN(Q)) Q:'Q  S Y=$T(@(PSGOEEG_Q)) I $P(Y,"";"",4)]"""",@$P(Y,"";"",4)'=@$P(Y,"";"",5) S:PSGEFN(Q) PSGOEENO=1 Q:PSGOEENO  S DR=DR_$P(Y,"";"",6)_$S(@$P(Y,"";"",5)]"""":""////^S X=""_$P(Y,"";"",5),1:""////@"")_"";W """"."""";"""
^XTMP("XPDT",7807,"RTN","PSGOEE0",44,0)=" I PSGSI="""",PSGOSI]"""" S DR=DR_""122////@;W """"."""";"""
^XTMP("XPDT",7807,"RTN","PSGOEE0",45,0)=" I '$P(PSGSI,""^"",2),$P(PSGOSI,""^"",2)=1 S DR=DR_""122////@;W """"."""";"""
^XTMP("XPDT",7807,"RTN","PSGOEE0",46,0)=" ; PSJ*5*95 quick fix to prevent long string error; true fix in PSJ*5*91 (upd^psgoee)"
^XTMP("XPDT",7807,"RTN","PSGOEE0",47,0)=" I PSGSI]"""" S DR=DR_122_""////^S X=""_+$P(PSGSI,""^"",2)_"";"" I '$G(PSJLMFIN),'$G(PSGOEENO),$L($G(PSGOSI),""^"")>20 S PSGSI=$P(PSGSI,""^"")"
^XTMP("XPDT",7807,"RTN","PSGOEE0",48,0)=" I PSGSM,PSGOHSM'=PSGHSM S DR=DR_""6////""_PSGHSM_"";W """"."""";"""
^XTMP("XPDT",7807,"RTN","PSGOEE0",49,0)=" ;PSJ*5.0*179"
^XTMP("XPDT",7807,"RTN","PSGOEE0",50,0)=" N P I 'PSGOEENO F P=""1^3^10"" I $D(PSGEFN($P(P,U,3))) S (Q,QQ)=0 F  S Q=$O(@(""^PS(53.45,""_PSJSYSP_"",""_+P_"",""_Q_"")"")) Q:'Q  S QQ=Q,X=$G(^(Q,0)),Y=$G(@(PSGOEEWF_$P(P,U,2)_"",""_Q_"",0)"")) I X'=Y S:+P=1 DR=DR_""*"" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE0",51,0)=" I 'PSGOEENO F P=""1^3^10"" I $D(PSGEFN($P(P,U,3))) S (Q,QQ)=0 F  S Q=$O(@(PSGOEEWF_$P(P,U,2)_"",""_Q_"")"")) Q:'Q  S QQ=Q,X=$G(^(Q,0)),Y=$G(^PS(53.45,PSJSYSP,+P,Q,0)) I X'=Y S:+P=1 DR=DR_""*"" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE0",52,0)=" Q:$S(DR]"""":1,1:PSGOEENO)  S (Q,QQ)=0 F  S Q=$O(^PS(53.45,PSJSYSP,2,Q)) Q:'Q  S QQ=Q,X=$G(^(Q,0)),Y=$G(@(PSGOEEWF_""1,""_Q_"",0)"")) I X'=Y S DR=DR_""*"" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE0",53,0)=" Q:$S(DR]"""":1,1:PSGOEENO)  S (Q,QQ)=0 F  S Q=$O(@(PSGOEEWF_""1,""_Q_"")"")) Q:'Q  S QQ=Q,X=$G(^(Q,0)),Y=$G(^PS(53.45,PSJSYSP,2,Q,0)) I X'=Y S DR=DR_""*"" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE0",54,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE0",55,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE0",56,0)="ENF ; finish order from edit"
^XTMP("XPDT",7807,"RTN","PSGOEE0",57,0)=" F  S %=1 W !!,""Finish this order now"" D YN^DICN Q:%  D  ;"
^XTMP("XPDT",7807,"RTN","PSGOEE0",58,0)=" .W !!,""Answer 'YES' to finish this order now.  Finishing the order converts it to a"",!,""non-verified Unit Dose order.  Enter 'NO' (or an '^') if you do not want to"",!,""finish this order now."""
^XTMP("XPDT",7807,"RTN","PSGOEE0",59,0)=" I %=1 S PSGOEFF=0 D UPD^PSGOEF1 K PSGOEFF,PSGND,PSGSD"
^XTMP("XPDT",7807,"RTN","PSGOEE0",60,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSGOEE0",61,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSGOEE0",62,0)="FIELDS ;"
^XTMP("XPDT",7807,"RTN","PSGOEE0",63,0)="31 ;;108^PSGOE8;PSGOPD;PSGPD;108;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",64,0)="32 ;;109^PSGOE8;PSGODO;PSGDO;109;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",65,0)="33 ;;10^PSGOE81;PSGOSD;PSGSD;10;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",66,0)="34 ;;3^PSGOE8;PSGOMR;PSGMR;3;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",67,0)="35 ;;25^PSGOE81;PSGOFD;PSGFD;25;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",68,0)="36 ;;7^PSGOE8;PSGOST;PSGST;7;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",69,0)="37 ;;5^PSGOE82;PSGOSM;PSGSM;5;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",70,0)="38 ;;26^PSGOE8;PSGOSCH;PSGSCH;26;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",71,0)="39 ;;39^PSGOE81;PSGOAT;PSGAT;39;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",72,0)="310 ;;1^PSGOE82;PSGOPR;PSGPR;1;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",73,0)="311 ;;8^PSGOE81;PSGOSI;PSGSI;8;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",74,0)="312 ;;2^PSGOE82;;;2;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",75,0)="313 ;;66^PSGOE82;;;66;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",76,0)="314 ;;40^PSGOE82;;;40;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",77,0)="51 ;;108^PSGOE9;PSGOPD;PSGPD;108;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",78,0)="52 ;;109^PSGOE9;PSGODO;PSGDO;109;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",79,0)="53 ;;10^PSGOE91;PSGOSD;PSGSD;10;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",80,0)="54 ;;3^PSGOE9;PSGOMR;PSGMR;3;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",81,0)="55 ;;34^PSGOE91;PSGOFD;PSGFD;34;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",82,0)="56 ;;7^PSGOE9;PSGOST;PSGST;7;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",83,0)="57 ;;5^PSGOE82;PSGOSM;PSGSM;5;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",84,0)="58 ;;26^PSGOE9;PSGOSCH;PSGSCH;26;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",85,0)="59 ;;41^PSGOE91;PSGOAT;PSGAT;41;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",86,0)="510 ;;1^PSGOE92;PSGOPR;PSGPR;1;1"
^XTMP("XPDT",7807,"RTN","PSGOEE0",87,0)="511 ;;8^PSGOE92;PSGOSI;PSGSI;8;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",88,0)="512 ;;2^PSGOE92;;;2;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",89,0)="513 ;;15^PSGOE92;;;15;0"
^XTMP("XPDT",7807,"RTN","PSGOEE0",90,0)="514 ;;72^PSGOE92;;;72;1"
^XTMP("XPDT",7807,"RTN","PSIVCAL")="0^4^B66722231^B65800854"
^XTMP("XPDT",7807,"RTN","PSIVCAL",1,0)="PSIVCAL ;BIR/RGY,PR-CALCULATES START AND STOP DATES ; 9/17/09 5:00am"
^XTMP("XPDT",7807,"RTN","PSIVCAL",2,0)=" ;;5.0; INPATIENT MEDICATIONS ;**4,26,41,47,63,67,69,58,94,80,110,111,177,120,134,179**;16 DEC 97;Build 28"
^XTMP("XPDT",7807,"RTN","PSIVCAL",3,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",4,0)=" ; Reference to ^PS(50.7 is supported by DBIA #2180."
^XTMP("XPDT",7807,"RTN","PSIVCAL",5,0)=" ; Reference to ^PS(52.6 is supported by DBIA #1231."
^XTMP("XPDT",7807,"RTN","PSIVCAL",6,0)=" ; Reference to ^PS(55 is supported by DBIA #2191."
^XTMP("XPDT",7807,"RTN","PSIVCAL",7,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",8,0)="ENT ;NEEDS PSIVTYPE (P(4))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",9,0)=" I $G(PSJREN) D  Q:P(2)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",10,0)=" . I $G(P(""OLDON"")) N P2 S P2=$G(@(""^PS(55,""_DFN_"",""""IV"""",""_+P(""OLDON"")_"",0)"")),P2=$P(P2,""^"",2) I P2 S P(2)=P2"
^XTMP("XPDT",7807,"RTN","PSIVCAL",11,0)=" I $G(PSJORD)[""P"",$G(P(""APPT""))?7N1"".""1.N S START=$$DATE2^PSJUTL2(P(""APPT"")) G Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",12,0)=" I $G(PSJSYSW0)=""""!($P(PSJSYSW0,U,5)=2) S START=+$E(P(""LOG""),1,12) G Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",13,0)=" S PSIVSN=+P(""IVRM""),START="""",PSIVTYPE=$G(P(4)) Q:PSIVTYPE="""""
^XTMP("XPDT",7807,"RTN","PSIVCAL",14,0)=" N PSIV X $S($E(PSIVAC)=""C"":""S X=+$E(P(""""LOG""""),1,12) D H^%DTC S PSIV=%T"",1:""S PSIV=$P($H,"""","""",2)"") G T2:PSIVTYPE'[""P""&('P(5))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",15,0)=" I P(11)']"""" X $S($E(PSIVAC)=""C"":""S Y=+$E(P(""""LOG""""),1,12)"",1:""D NOW^%DTC S Y=%"") S Y=Y+.007\.01/100 S:'$P(Y,""."",2) Y=$$MDNGHT(Y) X ^DD(""DD"") S START=Y G Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",16,0)=" S X=P(11) D CHK S PX=Y,X1=PSIV\3600,X2=PSIV#3600\60,X=$E("".0"",1,$L(X1)#2+1)_X1_$E(""0"",X2<10)_X2,START=$S($E(PSIVAC)=""C"":$P(P(""LOG""),"".""),1:""T"")"
^XTMP("XPDT",7807,"RTN","PSIVCAL",17,0)=" S X1=$P(PX,""-""),X1=$E("".0"",1,$L(X1)#2+1)_X1,X2=$P(PX,""-"",PSGCNT),X2=$E("".0"",1,$L(X2)#2+1)_X2"
^XTMP("XPDT",7807,"RTN","PSIVCAL",18,0)=" S NAT=+$P($G(^PS(59.6,+$O(^PS(59.6,""B"",+VAIN(4),0)),0)),U,5)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",19,0)=" I '$D(PSGDT) S PSGDT=$$DATE^PSJUTL2()"
^XTMP("XPDT",7807,"RTN","PSIVCAL",20,0)=" ;BHW;PSJ*5*179;Removed commented lines (X<X1, X>X2) and replaced with single line below"
^XTMP("XPDT",7807,"RTN","PSIVCAL",21,0)=" S START=$$ENSD^PSGNE3(P(9),P(11),+$E(P(""LOG""),1,12),PSGDT) I $L(START) G Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",22,0)=" ;I X<X1,'NAT S START=$$ENSD^PSGNE3(P(9),P(11),+$E(P(""LOG""),1,12),PSGDT) G Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",23,0)=" ;I X>X2 S START=$$ENSD^PSGNE3(P(9),P(11),+$E(P(""LOG""),1,12),PSGDT) G Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",24,0)="T6 F I=2:1:PSGCNT S X1="".""_$P(PX,""-"",I-1),X2="".""_$P(PX,""-"",I) Q:+X1<X&(+X2>X)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",25,0)=" S X1=X-X1,X2=$S(NAT:0,1:X2-X),START=$S(X1<X2:$P(PX,""-"",I-1),1:$P(PX,""-"",I)) S:START="""" START=$P(PX,""-"") X $S($E(PSIVAC)=""C"":""S Y=$P(P(""""LOG""""),""""."""") X ^DD(""""DD"""") S PSIV=Y"",1:""S PSIV=""""TODAY"""""") S START=PSIV_""@""_$E(""0"",$L(START)=3)_START G Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",26,0)="T2 S X=+("".""_$E(10000+(PSIV\3600*100)+(PSIV#3600\60),2,5)),START=$O(^PS(59.5,PSIVSN,3,""AT"",X)) S:'START START=$O(^(0)),PSIVTOM=1 I 'START S START=X K PSIVTOM"
^XTMP("XPDT",7807,"RTN","PSIVCAL",27,0)=" S START=$S($E(PSIVAC)=""C"":$P(P(""LOG""),"".""),1:DT)_START I $D(PSIVTOM) S X1=$S($E(PSIVAC)=""C"":$P(P(""LOG""),"".""),1:DT),X2=1 D C^%DTC S Y=$P(X,""."")_START K PSIVTOM"
^XTMP("XPDT",7807,"RTN","PSIVCAL",28,0)=" S X=START,%DT=""XRTX"" D ^%DT"
^XTMP("XPDT",7807,"RTN","PSIVCAL",29,0)="Q ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",30,0)=" I START[""@"" S X=START,%DT=""RTX"" D ^%DT S START=+Y"
^XTMP("XPDT",7807,"RTN","PSIVCAL",31,0)=" S P(2)=START"
^XTMP("XPDT",7807,"RTN","PSIVCAL",32,0)=" I $G(PSJORD)[""P"" D:'$G(PSGRDTX(+PSJORD,""PSGSD"")) REQDT^PSJLIVMD(PSJORD) S START=$G(PSGRDTX(+PSJORD,""PSGSD"")) S P(2)=$S(START:START,1:P(2))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",33,0)=" K NAT,START,PSIVTYPE,PSIVSTRT,PSGCNT,X1,X2,PX"
^XTMP("XPDT",7807,"RTN","PSIVCAL",34,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",35,0)="CHK F Y=1:1 Q:$L(X)>240!($P(X,""-"",Y)="""")  S $P(X,""-"",Y)=$P(X,""-"",Y)_$E(""0000"",1,4-$L($P(X,""-"",Y)))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",36,0)=" S Y=X,PSGCNT=$L(X,""-"") S:X]""""&(PSGCNT<1) PSGCNT=1 Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",37,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",38,0)="ENSTOP ; WILL CALCULATE STOP DATE FOR ORDER"
^XTMP("XPDT",7807,"RTN","PSIVCAL",39,0)=" ;NEEDS (DFN) & ON"
^XTMP("XPDT",7807,"RTN","PSIVCAL",40,0)=" N WALL,P3,ADX,DDLX,OIX,DRGT,PSIDAY,PSIMIN,LIMDAY S (WALL,P3,PSIDAY,PSIMIN)=0"
^XTMP("XPDT",7807,"RTN","PSIVCAL",41,0)=" D:'$G(PSIVSITE) ^PSIVSET  Q:'P(2)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",42,0)=" I P(23)'="""" S PSIVTYPE=""C"""
^XTMP("XPDT",7807,"RTN","PSIVCAL",43,0)=" S STOP="""",X="""",PSIVSTRT=P(2),PSIVTYPE=$G(P(4)) I $G(PSJREN) D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",44,0)=" . N RDT I $G(ON)[""P"" S RDT=+$$LASTREN^PSJLMPRI(DFN,ON)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",45,0)=" . S PSIVSTRT=$$DATE2^PSJUTL2($S($G(RDT):RDT,1:$G(PSGDT)))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",46,0)=" ;BHW - PSJ*5*177 - Begin Modifications - Reset Start date to Last Renewed date for active orders that have been renewed"
^XTMP("XPDT",7807,"RTN","PSIVCAL",47,0)=" I ('$G(PSJREN))&($G(P(4))=""A"")&($G(ON)[""V"") D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",48,0)=" . N RDT S RDT=+$$LASTREN^PSJLMPRI(DFN,ON)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",49,0)=" . I +RDT S PSIVSTRT=RDT"
^XTMP("XPDT",7807,"RTN","PSIVCAL",50,0)=" . Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",51,0)=" ;BHW - PSJ*5*177 - End Modifications - Resetting PSIVSTRT will recalculate the stop date based on the Last renewed date."
^XTMP("XPDT",7807,"RTN","PSIVCAL",52,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",53,0)=" I $S(""^NOW^STAT^ONCE^ONE-TIME^ONE TIME^ONETIME^1TIME^1-TIME^1 TIME^""[(U_P(9)_U):1,1:0),PSIVTYPE=""P""!P(5)!(P(23)=""P"") S X=$$ENOSD^PSJDCU(PSJSYSW0,PSIVSTRT,DFN) I X]"""" S:P(11)=""""&($G(ON)[""P"") PSIVCAL=1 G END"
^XTMP("XPDT",7807,"RTN","PSIVCAL",54,0)=" I '$G(P(""OVRIDE"")),$G(ON) N DUR,DURMIN,PSJPROV,PSJDNM,A,PSJDAY I $G(ON)[""V""!(($G(ON)[""P"")&($P($G(^PS(53.1,+ON,0)),""^"",4)=""F"")) D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",55,0)=" . S DUR=$$GETDUR^PSJLIVMD(DFN,+ON,""IV"",1) I DUR]"""" S DURMIN=$$DURMIN^PSJLIVMD(DUR) I DURMIN S PSIMIN=DURMIN"
^XTMP("XPDT",7807,"RTN","PSIVCAL",56,0)=" I $P(PSIVSITE,""^"",5) D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",57,0)=" . N Z S Y=0"
^XTMP("XPDT",7807,"RTN","PSIVCAL",58,0)=" . F  S Y=$O(^PS(55,DFN,""IV"",Y)) Q:'Y  S Z=^(Y,0) D  Q:X]"""""
^XTMP("XPDT",7807,"RTN","PSIVCAL",59,0)=" .. I $P(Z,""^"",17)=""A"",$$ONE^PSJBCMA(DFN,Y_""V"",$P(Z,""^"",9))'=""O"" S X=$P(Z,""^"",3) Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",60,0)=" S:$G(X) WALL=X"
^XTMP("XPDT",7807,"RTN","PSIVCAL",61,0)=" S PSIDAY=$S(PSIVTYPE=""A"":$P(PSIVSITE,""^"",4),PSIVTYPE=""H"":$P(PSIVSITE,""^"",17),PSIVTYPE=""P"":$P(PSIVSITE,""^"",18),PSIVTYPE=""S"":$P(PSIVSITE,""^"",20),1:$P(PSIVSITE,""^"",21))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",62,0)=" I $G(ON)[""P""!($G(ON)[""V"") I '$G(P(""OVRIDE"")) N MINS,LIM S PSIVLIM=$$GETLIM(DFN,ON) I $G(PSIVLIM)]"""" S MINS=$$GETMIN(PSIVLIM,DFN,ON,.LIMDAY) D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",63,0)=" .I (MINS&(MINS<PSIMIN))!'PSIMIN S PSIMIN=MINS"
^XTMP("XPDT",7807,"RTN","PSIVCAL",64,0)=" S PSJDAY="""" D  I PSJDAY]"""",PSJDAY<PSIDAY S PSIDAY=PSJDAY"
^XTMP("XPDT",7807,"RTN","PSIVCAL",65,0)=" . N A,B,PSJCLIN"
^XTMP("XPDT",7807,"RTN","PSIVCAL",66,0)=" . Q:'$D(PSJORD)  S A="""""
^XTMP("XPDT",7807,"RTN","PSIVCAL",67,0)=" . I PSJORD[""P"" S A=$G(^PS(53.1,+PSJORD,""DSS""))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",68,0)=" . I PSJORD[""U"" S A=$G(^PS(55,PSGP,5,+PSJORD,8))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",69,0)=" . I PSJORD[""V"" S A=$G(^PS(55,PSGP,""IV"",+PSJORD,""DSS""))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",70,0)=" . S (PSJCLIN,A)=$P(A,""^"") Q:A=""""  S PSJCLIN=$P(^SC(PSJCLIN,0),""^"") I $D(^PS(53.46,""B"",A)) S B=$O(^PS(53.46,""B"",A,"""")),PSJDAY=$P(^PS(53.46,B,0),""^"",2)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",71,0)=" F X=0:0 S X=$O(DRG(""AD"",X)) Q:'X  I $P(^PS(52.6,+$P(DRG(""AD"",+X),U),0),""^"",4),($P(^(0),""^"",4))<+PSIDAY S PSIDAY=$P(^(0),""^"",4)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",72,0)=" I WALL,($$FMADD^XLFDT(PSIVSTRT,PSIDAY,""D""))>WALL S PSIDAY=$$FMDIFF^XLFDT(WALL,PSIVSTRT,1) S:PSIDAY<1 PSIDAY="""""
^XTMP("XPDT",7807,"RTN","PSIVCAL",73,0)=" S DRGT=$S($D(DRG(""AD"")):""AD"",1:""SOL"") F ADX=0:0 S ADX=$O(DRG(DRGT,ADX)) Q:'ADX!($G(DRGTMP)&($G(DRGTN)[""AD"")&(DRGT=""SOL""))  D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",74,0)=" . S OIX=+$P(DRG(DRGT,ADX),""^"",6),DDLX=$P(^PS(50.7,OIX,0),""^"",5) Q:'DDLX  D DDLIM(.PSIDAY,.P3)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",75,0)=" I '$G(DRG(""AD"",0)),$G(DRGTMP),($G(DRGTN)[""SOL"") S OIX=$P($G(DRGTMP),""^"",6) I OIX S DDLX=$P(^PS(50.7,OIX,0),""^"",5) I DDLX  D DDLIM(.PSIDAY,.P3)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",76,0)=" I $G(PSIVLIM)[""a"",'$G(P(""OVRIDE"")) S DDLX=$P(PSIVLIM,""a"",2)_""L"" I $G(DDLX) D DDLIM(.PSIDAY,.P3)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",77,0)=" I $G(P(2)) I P3>P(2) S X=P3"
^XTMP("XPDT",7807,"RTN","PSIVCAL",78,0)=" S:('PSIDAY&'PSIMIN) PSIDAY=1"
^XTMP("XPDT",7807,"RTN","PSIVCAL",79,0)="TIME S X2=PSIDAY,X1=PSIVSTRT D C^%DTC S X=$P(X,"".""),X=X_$S($P(PSIVSITE,""^"",14)="""":.2359,1:"".""_$P(PSIVSITE,""^"",14))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",80,0)=" I PSIMIN D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",81,0)=" . I $G(PSIDAY),((PSIDAY*1440)<PSIMIN) K PSIVLIM,P(""LIMIT"") S P(""OVRIDE"")=1 Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",82,0)=" . I (PSIMIN<(PSIDAY*1440)!'$G(PSIDAY)) S X=$$FMADD^XLFDT(PSIVSTRT,,,PSIMIN) D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",83,0)=" . . I '(PSIMIN#1440) S X=$P(X,"".""),X=X_$S($P(PSIVSITE,""^"",14)="""":.2359,1:"".""_$P(PSIVSITE,""^"",14))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",84,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",85,0)="END ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",86,0)=" S P(3)=+X"
^XTMP("XPDT",7807,"RTN","PSIVCAL",87,0)=" I $G(PSJORD)[""P"" D:'$G(PSGRDTX(+PSJORD,""PSGFD"")) REQDT^PSJLIVMD(PSJORD) S P(3)=$S($G(PSGRDTX(+PSJORD,""PSGFD"")):PSGRDTX(+PSJORD,""PSGFD""),1:P(3))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",88,0)=" S P(3)=$$DATE2^PSJUTL2(P(3)),P(2)=$$DATE2^PSJUTL2(P(2))"
^XTMP("XPDT",7807,"RTN","PSIVCAL",89,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",90,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",91,0)="ENAD ;Will get last admin. time for order (needs dfn and on)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",92,0)=" N P4,PSIVX,PSIVY"
^XTMP("XPDT",7807,"RTN","PSIVCAL",93,0)=" I $P(PSJSYSW0,U,5)=2 S PSIVADM=$$DATE^PSJUTL2() Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",94,0)=" I $S($G(PSIVAC)[""R"":1,P(9)=""QOD"":1,1:P(9)?1""Q"".N1""D"") S PSIVADM=$$ENSD^PSGNE3(P(9),P(11),+$E(P(""LOG""),1,12),+$P($G(^PS(55,DFN,""IV"",+P(""OLDON""),0)),U,2)) Q:PSIVADM"
^XTMP("XPDT",7807,"RTN","PSIVCAL",95,0)=" S PSIVX=X,PSIVY=Y,P4=P(4) S:P(4)=""C"" P4=P(23) S:P4=""S"" P4=$S(P(5):""P"",1:""A"") D NOW^%DTC S Y=%,PSIVNOW=Y I (P4=""P""&(P(11)="""")&'P(15))!(""HA""[P4&'P(15)) S Y=Y+.007\.01/100 G QAD"
^XTMP("XPDT",7807,"RTN","PSIVCAL",96,0)=" D P:P4=""P""&('P(15)),AH:P(15)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",97,0)="QAD ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",98,0)=" S:'$D(PSGSA) PSGSA="""""
^XTMP("XPDT",7807,"RTN","PSIVCAL",99,0)=" S PSIVSD=Y I Y S OD=$L(PSGSA,"" "") I OD>2 S X=+PSGSA\1 F OD1=2:1:OD-1 I $P(PSGSA,"" "",OD1)'>$S(OD1>2:$P(PSGSA,"" "",OD1-1),1:PSGSA#1) S X1=X,X2=1 D C^%DTC"
^XTMP("XPDT",7807,"RTN","PSIVCAL",100,0)=" I PSIVSD,OD>2 S Y=X_PSIVSD"
^XTMP("XPDT",7807,"RTN","PSIVCAL",101,0)=" S PSIVADM=+Y,X=PSIVX,Y=PSIVY K PSGSA,PSIVSD,OD,OD1,PSIVMI,PSIVNOW S:PSIVADM<P(2) PSIVADM=P(2) Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",102,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",103,0)="P S CD=PSIVNOW,PSGSA="""",(PSIVSD,OD)=DT_.0001,X=P(11) D CHK S P(11)=X D ENP4^PSIVWL"
^XTMP("XPDT",7807,"RTN","PSIVCAL",104,0)=" I PSGSA="""" S PSIVSD=DT_.0001,PSIVMIN=-1440 D ENT^PSIVWL S $P(Y,""."",2)=$P(P(11),""-"",$L(P(11),""-"")) Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",105,0)=" S Y=$P(PSGSA,"" "",$L(PSGSA,"" "")-1) Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",106,0)="AH F PSIVADM=0:-1 S CD=PSIVNOW,(X,X1)=DT,X2=PSIVADM D:X2 C^%DTC S X=$P(X,""."") S (OD1,PSIVSD,OD)=X_.0001,PSIVMIN=P(15) D ENP3^PSIVWL Q:PSIVADM<-4!(PSGSA]"""")"
^XTMP("XPDT",7807,"RTN","PSIVCAL",107,0)=" S Y=$P(PSGSA,"" "",$L(PSGSA,"" "")-1) Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",108,0)="MDNGHT(Y)          ;Sets Start Date/Time on orders placed between midnight and 12:30"
^XTMP("XPDT",7807,"RTN","PSIVCAL",109,0)=" S Y=$$FMADD^XLFDT(Y,-1,0,0,0),Y=$P(Y,""."")_"".24"" Q Y"
^XTMP("XPDT",7807,"RTN","PSIVCAL",110,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",111,0)="DDLIM(PSIVDUR,STPDT) ;  Day Dose Limit"
^XTMP("XPDT",7807,"RTN","PSIVCAL",112,0)=" N P3,NEWDAYS,NEWDUR"
^XTMP("XPDT",7807,"RTN","PSIVCAL",113,0)=" I DDLX[""D"" D  Q:(STPDT=0)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",114,0)=" .I +DDLX'<+PSIVDUR S STPDT=0 Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",115,0)=" .S PSIVDUR=+DDLX,X2=PSIVDUR,X1=PSIVSTRT D C^%DTC S X=$P(X,"".""),X=X_$S($P(PSIVSITE,""^"",14)="""":.2359,1:"".""_$P(PSIVSITE,""^"",14)) I X>P(2) S P(3)=X"
^XTMP("XPDT",7807,"RTN","PSIVCAL",116,0)=" I DDLX[""L"",($G(P(9))]""""),(""AH""'[$G(PSIVTYPE)) S LASTD=$$DOSES(DDLX,.P) I LASTD D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",117,0)=" .S NEWDUR=$$FMDIFF^XLFDT(LASTD,P(2),2) I NEWDUR>0 S NEWDAYS=(NEWDUR/86400)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",118,0)=" .I $G(NEWDAYS) I NEWDAYS<PSIVDUR S PSIVDUR=NEWDAYS S P(3)=$$DATE2^PSJUTL2(LASTD)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",119,0)=" S P(3)=$$DATE2^PSJUTL2(P(3)),P(2)=$$DATE2^PSJUTL2(P(2)) S STPDT=P(3)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",120,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",121,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",122,0)="GETLIM(DFN,PSJORD) ; Convert IV Limits to minutes (only if in 'time' form)."
^XTMP("XPDT",7807,"RTN","PSIVCAL",123,0)=" N ND2P5,F"
^XTMP("XPDT",7807,"RTN","PSIVCAL",124,0)=" S F=$S(PSJORD[""P"":""^PS(53.1,+PSJORD,"",PSJORD[""V"":""^PS(55,DFN,""""IV"""",+PSJORD,"",1:"""")"
^XTMP("XPDT",7807,"RTN","PSIVCAL",125,0)=" S ND2P5=$G(@(F_""2.5)"")) S LIM=$P(ND2P5,""^"",4) Q:LIM="""" 0"
^XTMP("XPDT",7807,"RTN","PSIVCAL",126,0)=" S ND0=$G(@(F_""0)"")) I PSJORD[""P"",$P(ND0,""^"",4)=""U"" Q 0"
^XTMP("XPDT",7807,"RTN","PSIVCAL",127,0)=" N MULT S MULT=$S($E(LIM)=""h"":60,$E(LIM)=""d"":1440,$E(LIM)=""m"":LIM,$E(LIM)=""l"":LIM,$E(LIM)=""a"":LIM,1:0) I MULT S LIM=MULT*$E(LIM,2,99)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",128,0)=" Q LIM"
^XTMP("XPDT",7807,"RTN","PSIVCAL",129,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVCAL",130,0)="GETMIN(LIM,DFN,PSJORD,DAYS) ; Return the duration of the IV Limit in minutes (includes IV Limits in volume and doses format) "
^XTMP("XPDT",7807,"RTN","PSIVCAL",131,0)=" S LIM=$$GETMIN^PSIVUTL1(LIM,DFN,PSJORD,.DAYS)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",132,0)=" Q LIM"
^XTMP("XPDT",7807,"RTN","PSIVCAL",133,0)="DOSES(DDLX,PRAY) ; Find stop date when 'doses' are sent as an IV Limit"
^XTMP("XPDT",7807,"RTN","PSIVCAL",134,0)=" Q:$G(DDLX)'[""L"" """""
^XTMP("XPDT",7807,"RTN","PSIVCAL",135,0)=" I $P(DDLX,""L"")[""."" S DDLX=($P(DDLX,""."")+1)_""L"""
^XTMP("XPDT",7807,"RTN","PSIVCAL",136,0)=" I '$G(PRAY(15)),$G(PRAY(11)) S PRAY(15)=1440/$L(PRAY(11),""-"")"
^XTMP("XPDT",7807,"RTN","PSIVCAL",137,0)=" Q:'$G(PRAY(2))!'$G(OIX) """""
^XTMP("XPDT",7807,"RTN","PSIVCAL",138,0)=" N FIRST,DOSAR,LAST,TMP9 S LAST="""",TMP9=PRAY(9)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",139,0)=" S STRING=PRAY(2)_""^""_$S($G(STPDT):STPDT,1:$$FMADD^XLFDT(PSGDT,30))_""^""_PRAY(9)_""^C^""_OIX S FIRST=$$ENQ^PSJORP2(DFN,STRING)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",140,0)=" S P(9)=TMP9"
^XTMP("XPDT",7807,"RTN","PSIVCAL",141,0)=" S FIRST=$S($G(FIRST):FIRST,1:PRAY(2)) Q:'FIRST  S DSTMP=FIRST,DOSAR(1)=DSTMP D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",142,0)=" .I '$G(PRAY(11)) F I=2:1:DDLX+1 S DOSAR(I)=$$FMADD^XLFDT(DSTMP,,,PRAY(15)),DSTMP=DOSAR(I) Q"
^XTMP("XPDT",7807,"RTN","PSIVCAL",143,0)=" .I $G(PRAY(11)) N ADMS,NXT,LAST,DAY S LAST=$P(DSTMP,""."",2),DAY=$P(DSTMP,""."") D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",144,0)=" ..F II=1:1:$L(PRAY(11),""-"") S ADMS(+$P(PRAY(11),""-"",II))=$P(PRAY(11),""-"",II)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",145,0)=" ..F IJ=2:1:DDLX+1 S NXT=$O(ADMS(+LAST)),LAST=NXT D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",146,0)=" ...I NXT="""" S NXT=$O(ADMS(NXT)),LAST=NXT,DAY=$$FMADD^XLFDT(DAY,1)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",147,0)=" ...S DOSAR(IJ)=DAY_"".""_ADMS(NXT),DSTMP=DOSAR(IJ)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",148,0)=" ..I +DDLX=1 S NXT=$O(ADMS(LAST)),LAST=NXT D"
^XTMP("XPDT",7807,"RTN","PSIVCAL",149,0)=" ...I NXT="""" S NXT=$O(ADMS(NXT)),LAST=NXT"
^XTMP("XPDT",7807,"RTN","PSIVCAL",150,0)=" I $D(DOSAR) S LAST=$O(DOSAR(""""),-1) I LAST S LAST=DOSAR(LAST)"
^XTMP("XPDT",7807,"RTN","PSIVCAL",151,0)=" Q LAST"
^XTMP("XPDT",7807,"RTN","PSIVOPT1")="0^6^B41157707^B39564315"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",1,0)="PSIVOPT1 ;BIR/MLM-EDIT/DC ORDER (BACKDOOR) ;22 OCT 97 / 3:14 PM"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",2,0)=" ;;5.0; INPATIENT MEDICATIONS ;**29,58,101,110,127,179**;16 DEC 97;Build 28"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",3,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",4,0)=" ; Reference to ^PS(55 is supported by DBIA 2191"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",5,0)=" ; Reference to ^PSSLOCK is supported by DBIA #2789"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",6,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",7,0)="E ; Edit order through Pharmacy."
^XTMP("XPDT",7807,"RTN","PSIVOPT1",8,0)=" NEW PSJEDFLG"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",9,0)=" D GSTRING^PSIVORE1,GTFLDS^PSIVORFE"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",10,0)=" I '$G(PSIVENO) S PSIVENO=1 D EN^VALM(""PSJ LM IV AC/EDIT"") S VALMBCK=""Q"""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",11,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",12,0)="ACCEPT ; To be called by ACCEPT^PSJLIACT"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",13,0)=" I $G(PSJEDFLG) S VALMBCK="""" Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",14,0)=" I '$G(PSJEDIT1) D CKNEW I PSIVCHG D"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",15,0)=" .S P(""OLDON"")=ON55,Y=$G(^PS(55,DFN,""IV"",+ON55,0)) D NOW^%DTC S P(""LOG"")=$E(%,1,12)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",16,0)=" .S P(""CLRK"")=DUZ_U_$P($G(^VA(200,DUZ,0)),U)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",17,0)=" .;BHW;PSJ*5*179;Removed check ""!$G(PSGFDX)"" (Stop date edited) "
^XTMP("XPDT",7807,"RTN","PSIVOPT1",18,0)=" .I $G(PSGSDX) Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",19,0)=" .;BHW;PSJ*5*179;Removed check "",$P(Y,U,3)=P(3)"" So PSIVCAL is called when Stop Date is edited and Start Date has not been."
^XTMP("XPDT",7807,"RTN","PSIVOPT1",20,0)=" .I $P(Y,U,2)=P(2) D ENT^PSIVCAL S X=P(2),%DT=""T"" D ^%DT S P(2)=$E(Y,1,12),PSJEDIT1=1 D ENSTOP^PSIVCAL"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",21,0)=" K PSJEDFLG"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",22,0)=" D OK^PSIVOPT2"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",23,0)=" I X[""N"" S VALMBCK=""R"" Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",24,0)=" I X[""^"" D GT55^PSIVORFB W !,""Order unchanged."" Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",25,0)=" ;;I $G(P(21))]"""" D CKNEW,@$S(PSIVCHG:""NEWORD"",1:""UPDATE"") Q:$D(X)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",26,0)=" I $G(P(""21FLG""))]"""" D CKNEW,@$S(PSIVCHG:""NEWORD"",1:""UPDATE"") Q:$D(X)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",27,0)=" ;;S PSJORL=$$ENORL^PSJUTL($G(VAIN(4))) S ON=ON55,OD=P(2) D EN^PSIVORE,^PSIVORE1"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",28,0)=" S PSJORL=$$ENORL^PSJUTL($G(VAIN(4))) S ON=ON55,OD=P(2)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",29,0)=" ;D:ON[""V"" EN^PSIVORE,^PSIVORE1"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",30,0)=" D:ON[""V"" EN^PSIVORE"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",31,0)=" ;;I $G(PSJIVORF),PSIVCHG D EN1^PSJHL2(DFN,""SN"",+ON55_""V"",""NEW ORDER"") NEW PSIVXX S PSIVXX=$$LS^PSSLOCK(DFN,+ON55_""V"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",32,0)=" I $G(PSJIVORF),PSIVCHG D EN1^PSJHL2(DFN,""SN"",ON55,""NEW ORDER"") NEW PSIVXX S PSIVXX=$$LS^PSSLOCK(DFN,ON55)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",33,0)=" S PSIVACEP=1"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",34,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",35,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",36,0)="CKNEW ; Check if new order is to be created."
^XTMP("XPDT",7807,"RTN","PSIVOPT1",37,0)=" N DNE,ND,TDRG S (DRG(""DRGC""),DNE,PSIVCHG)=0"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",38,0)=" Q:PSIVCHG  F DRGT=""AD"",""SOL"" F DRGI=0:0 S DRGI=$O(DRG(DRGT,DRGI)) Q:'DRGI  S TDRG(DRGT,+$P(DRG(DRGT,DRGI),U),DRGI)=$P(DRG(DRGT,DRGI),U,3) I $P(P(""OT""),U)=""F"",'$P(DRG(DRGT,DRGI),U,5) S P(""OT"")=""I"""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",39,0)=" F DRGT=""AD"",""SOL"" Q:DRGT=""SOL""&(P(""DTYP"")=1)  F DRGI=0:0 S DRGI=$O(^PS(55,DFN,""IV"",+ON55,DRGT,DRGI)) Q:'DRGI!DNE  D"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",40,0)=" .S X=$G(^PS(55,DFN,""IV"",+ON55,DRGT,DRGI,0)),DRG(""DRGC"")=$G(DRG(""DRGC""))+1"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",41,0)=" .I $D(TDRG(DRGT,+$P(X,U),DRGI)),$P(X,U,2)=$P(TDRG(DRGT,+$P(X,U),DRGI),U) Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",42,0)=" .S (PSIVCHG,DNE)=1"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",43,0)=" Q:PSIVCHG"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",44,0)=" I $G(DRG(""AD"",0))+$S(P(""DTYP"")=1:0,1:+$G(DRG(""SOL"",0)))'=DRG(""DRGC"") S PSIVCHG=1 Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",45,0)=" S ND(0)=$G(^PS(55,DFN,""IV"",+ON55,0)),ND(""PD"")=$G(^PS(55,DFN,""IV"",+ON55,.2))"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",46,0)=" N X S X=$S($P(ND(0),U,8)[""@"":$P($P(ND(0),U,8),""@""),1:$P(ND(0),U,8))"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",47,0)=" S ND=$S($E(P(""OT""))=""I"":$P(ND(""PD""),U,1,2)_U,1:"""")_$P(ND(""PD""),U,3)_U_$S($E(P(""OT""))'=""I"":X_U,1:"""")_+$P(ND(0),U,6)_U_$P(ND(0),U,2)_U_$P(ND(0),U,3)_U_$P(ND(0),U,9)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",48,0)=" S:ND'=($S($E(P(""OT""))=""I"":+P(""PD"")_U_$G(P(""DO""))_U,1:"""")_+P(""MR"")_U_$S($E(P(""OT""))'=""I"":$S(P(8)[""@"":$P(P(8),""@""),1:P(8))_U,1:"""")_+P(6)_U_P(2)_U_P(3)_U_P(9)) PSIVCHG=1"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",49,0)=" ;* S ND=$S($E(P(""OT""))=""I"":$P(ND(""PD""),U,1,2)_U,1:"""")_$P(ND(""PD""),U,3)_U_$S($E(P(""OT""))'=""I"":$P(ND(0),U,8)_U,1:"""")_+$P(ND(0),U,6)_U_$P(ND(0),U,2)_U_$P(ND(0),U,3)_U_$P(ND(0),U,9)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",50,0)=" ;* S:ND'=($S($E(P(""OT""))=""I"":+P(""PD"")_U_$G(P(""DO""))_U,1:"""")_+P(""MR"")_U_$S($E(P(""OT""))'=""I"":P(8)_U,1:"""")_+P(6)_U_P(2)_U_P(3)_U_P(9)) PSIVCHG=1"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",51,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",52,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",53,0)="UPDATE ; Update original order."
^XTMP("XPDT",7807,"RTN","PSIVOPT1",54,0)=" S PSIVALT=1,PSIVALCK=""EN"",PSIVREA=""E"",ON=ON55 K P(""OLDON"") D LOG^PSIVORAL"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",55,0)=" D SET55^PSIVORFB,ENLBL^PSIVOPT(2,DUZ,DFN,3,+ON55,""E"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",56,0)=" D:'$D(PSJIVORF) ORPARM^PSIVOREN K X Q:'PSJIVORF"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",57,0)=" S PSJORIFN=$P($G(^PS(55,DFN,""IV"",+ON55,0)),U,21) Q:'PSJORIFN"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",58,0)=" S P(""NAT"")="""""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",59,0)=" D EN1^PSJHL2(DFN,""XX"",+ON55_""V"",""UPDATED ORDER"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",60,0)=" K X"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",61,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",62,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",63,0)="NEWORD ; DC orig. order, get new order no."
^XTMP("XPDT",7807,"RTN","PSIVOPT1",64,0)=" D:'$D(PSJIVORF) ORPARM^PSIVOREN I PSJIVORF D NATURE^PSIVOREN I '$D(P(""NAT"")) S X=1 W !,""Order unchanged."" Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",65,0)=" ;;S P(""RES"")=""E"",P(""OLDON"")=ON55,P(16)="""" K ON55 D NEW55^PSIVORFB S (P(""PON""),P(""NEWON""),ON)=ON55,ON55=P(""OLDON"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",66,0)=" S P(""RES"")=""E"",P(""OLDON"")=ON55,P(16)="""""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",67,0)=" Q:$$NONVF()"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",68,0)=" I '($G(PSIVCOPY)=2) K ON55 D NEW55^PSIVORFB"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",69,0)=" S (P(""PON""),P(""NEWON""),ON)=ON55,ON55=P(""OLDON"") S:($G(PSIVCOPY)=2) P(""OLDON"")="""""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",70,0)=" I $P($G(^PS(55,DFN,""IV"",+P(""OLDON""),0)),U,17)=""A"" D D1^PSIVOPT2 D"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",71,0)=" . I PSJIVORF,$P($G(^PS(55,DFN,""IV"",+ON55,0)),U,21) D EN1^PSJHL2(DFN,""OD"",+ON55_""V"",""ORDER DISCONTINUED"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",72,0)=" . ;;S P(21)="""" W !!,""Original order discontinued..."",!!"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",73,0)=" . S P(""21FLG"")="""" W !!,""Original order discontinued..."",!!"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",74,0)=" . D UNL^PSSLOCK(DFN,+ON55_""V"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",75,0)=" F ON55=P(""NEWON""),P(""OLDON"") K DA,DIE,DR D"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",76,0)=" .S DA(1)=DFN,DA=+ON55,DIE=""^PS(55,""_DFN_"",""""IV"""","",DR=$S((ON55=P(""NEWON"")&(+ON55'=+P(""OLDON""))):""113////""_P(""OLDON"")_"";122////E"",1:""114////""_P(""NEWON"")_"";123////E"") D ^DIE"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",77,0)=" .I ON55=P(""NEWON"") N CLINAPPT S CLINAPPT=$G(^PS(55,DFN,""IV"",+P(""OLDON""),""DSS"")) D"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",78,0)=" ..S:CLINAPPT DR=DR_"";136////""_+CLINAPPT S:$P(CLINAPPT,""^"",2) DR=DR_"";139////""_$P(CLINAPPT,""^"",2)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",79,0)=" .D ^DIE"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",80,0)=" .Q:ON55=P(""OLDON"")&($P($G(^PS(55,DFN,""IV"",+P(""OLDON""),0)),U,17)'=""D"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",81,0)=" .D:ON55=P(""NEWON"") SET55^PSIVORFB"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",82,0)=" .D:ON55=P(""NEWON"") VF1^PSJLIACT("""","""",0)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",83,0)=" .D ENLBL^PSIVOPT(2,DUZ,DFN,3,+ON55,$S(ON55=P(""NEWON""):""N"",1:""DE""))"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",84,0)=" .S PSIVREA=""E"",PSIVAL=""Order ""_$S(ON55=P(""OLDON""):""discontinued"",1:""created"")_"" due to edit"" S:ON55=P(""OLDON"") PSIVALCK=""STOP"" D LOG^PSIVORAL"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",85,0)=" L -^PS(55,DFN,""IV"",+P(""OLDON"")) ;D NEWENT^PSIVORFE"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",86,0)=" K X S ON55=P(""NEWON""),P(17)=""A"" Q:'PSJIVORF  D SET^PSIVORFE"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",87,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",88,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",89,0)="NEWSTOP ; Set stop date for DC and renewals."
^XTMP("XPDT",7807,"RTN","PSIVOPT1",90,0)=" S ND=$G(^PS(55,DFN,""IV"",+ON55,0)),Y=+$P(ND,U,3),$P(^PS(55,DFN,""IV"",+P(""OLDON""),2),U,7)=Y,NSTOP=$S(NSTOP>Y:Y,1:NSTOP),$P(^PS(55,DFN,""IV"",+ON55,0),U,3)=NSTOP"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",91,0)=" K DA,DIK S DIK=""^PS(55,""_DFN_"",""""IV"""","",DA(1)=DFN,DA=+P(""OLDON"") D IX^DIK K DA,DIK"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",92,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",93,0)="NONVF()   ;"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",94,0)=" NEW PSGOEAV S PSGOEAV=+$P(PSJSYSP0,U,9)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",95,0)=" I +PSJSYSU=3,PSGOEAV Q 0"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",96,0)=" I +PSJSYSU=1,PSGOEAV Q 0"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",97,0)=" K DA D ENGNN^PSGOETO S (ON,P(""NEWON""))=DA_""P"",P(17)=""N"""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",98,0)=" S (P(""DO""),P(""PD""))="""""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",99,0)=" D GTPD^PSIVORE2,PUT531^PSIVORFA"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",100,0)=" I $P($G(^PS(55,DFN,""IV"",+P(""OLDON""),0)),U,17)=""A"" D D1^PSIVOPT2 D"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",101,0)=" . I PSJIVORF,$P($G(^PS(55,DFN,""IV"",+P(""OLDON""),0)),U,21) D EN1^PSJHL2(DFN,""OD"",+ON55_""V"",""ORDER DISCONTINUED"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",102,0)=" . S P(""21FLG"")="""" W !!,""Original order discontinued..."",!!"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",103,0)=" . D UNL^PSSLOCK(DFN,+P(""OLDON"")_""V"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",104,0)=" F ON55=P(""NEWON""),P(""OLDON"") K DA,DIE,DR D"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",105,0)=" . S DA=+ON55"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",106,0)=" . S:ON55=P(""NEWON"") DIE=""^PS(53.1,"",DR=""104////""_P(""OLDON"")_"";103////E"""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",107,0)=" . S:ON55=P(""OLDON"") DA(1)=DFN,DIE=""^PS(55,""_DFN_"",""""IV"""","",DR=""114////""_P(""NEWON"")_"";123////E"""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",108,0)=" . D ^DIE"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",109,0)=" . Q:ON55=P(""OLDON"")&($P($G(^PS(55,DFN,""IV"",+P(""OLDON""),0)),U,17)'=""D"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",110,0)=" . I ON55=P(""OLDON"") D"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",111,0)=" .. D ENLBL^PSIVOPT(2,DUZ,DFN,3,+ON55,$S(ON55=P(""NEWON""):""N"",1:""DE""))"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",112,0)=" .. S PSIVALT="""",PSIVREA=""E"",PSIVAL=""Order discontinued due to edit"" S PSIVALCK=""STOP"" D LOG^PSIVORAL"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",113,0)=" . D:ON55=P(""NEWON"") NEWNVAL^PSGAL5(ON55,4100,"""","""")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",114,0)=" L -^PS(55,DFN,""IV"",+P(""OLDON""))"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",115,0)=" K X S (ON,ON55)=P(""NEWON"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",116,0)=" D EN1^PSJHL2(DFN,""SN"",ON,""ORDER CREATED"")"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",117,0)=" S X=$$LS^PSSLOCK(DFN,ON)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",118,0)=" D GT531^PSIVORFA(DFN,ON)"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",119,0)=" I ON[""P"" N CLINAPPT S CLINAPPT=$G(^PS(55,DFN,""IV"",+ON,""DSS"")) I CLINAPPT D  K DIE,DA,DR"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",120,0)=" . S:CLINAPPT DR=""136////""_+CLINAPPT_"";"" S:$P(CLINAPPT,""^"",2) DR=DR_""139////""_$P(CLINAPPT,""^"",2)_"";"" D ^DIE"
^XTMP("XPDT",7807,"RTN","PSIVOPT1",121,0)=" S VALMBCK=""Q"""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",122,0)=" S PSGACT=""EL"""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",123,0)=" I P(17)=""N"",(P(""OLDON"")=""""),(P(""CLRK"")=DUZ) S PSGACT=""ELD"""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",124,0)=" I +PSJSYSU=3!(+PSJSYSU=1) S PSGACT=""DELV"""
^XTMP("XPDT",7807,"RTN","PSIVOPT1",125,0)=" Q 1"
^XTMP("XPDT",7807,"RTN","PSJUTL")="0^5^B65890056^B65061820"
^XTMP("XPDT",7807,"RTN","PSJUTL",1,0)="PSJUTL ;BIR/MLM-MISC. INPATIENT UTILITIES ; 10/7/08 1:22pm"
^XTMP("XPDT",7807,"RTN","PSJUTL",2,0)=" ;;5.0; INPATIENT MEDICATIONS ;**9,47,58,80,110,136,157,177,134,179**;16 DEC 97;Build 28"
^XTMP("XPDT",7807,"RTN","PSJUTL",3,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",4,0)=" ; Reference to ^DIC(42 is supported by DBIA 10039."
^XTMP("XPDT",7807,"RTN","PSJUTL",5,0)=" ; Reference to ^PS(50.7 is supported by DBIA 2180."
^XTMP("XPDT",7807,"RTN","PSJUTL",6,0)=" ; Reference to ^PSDRUG( is supported by DBIA 2192."
^XTMP("XPDT",7807,"RTN","PSJUTL",7,0)=" ; Reference to ^DIC is supported by DBIA 10006."
^XTMP("XPDT",7807,"RTN","PSJUTL",8,0)=" ; Reference to ^DIC1 is supported by DBIA 10007."
^XTMP("XPDT",7807,"RTN","PSJUTL",9,0)=" ; Reference to ^DIR is supported by DBIA 10026."
^XTMP("XPDT",7807,"RTN","PSJUTL",10,0)=" ; Reference to ^VALM1 is supported by DBIA 10116."
^XTMP("XPDT",7807,"RTN","PSJUTL",11,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",12,0)="ENDL ; device look-up"
^XTMP("XPDT",7807,"RTN","PSJUTL",13,0)=" N DA,DIC,DIE,DIX,DO,DR"
^XTMP("XPDT",7807,"RTN","PSJUTL",14,0)=" S DIC=""^%ZIS(1,"",DIC(0)=""EIMZ"" D DO^DIC1,^DIC I Y'>0 K X Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",15,0)=" S X=Y(0,0)"
^XTMP("XPDT",7807,"RTN","PSJUTL",16,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",17,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",18,0)="ENDH(X) ; device help"
^XTMP("XPDT",7807,"RTN","PSJUTL",19,0)=" N D,XQH,DA,DIC,DIE,DO,DR,DZ"
^XTMP("XPDT",7807,"RTN","PSJUTL",20,0)=" S DIC=""^%ZIS(1,"",DIC(0)=""EIM"" D DO^DIC1,^DIC"
^XTMP("XPDT",7807,"RTN","PSJUTL",21,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",22,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",23,0)="READ ; hold screen"
^XTMP("XPDT",7807,"RTN","PSJUTL",24,0)=" I $D(IOST) Q:$E(IOST)'=""C"""
^XTMP("XPDT",7807,"RTN","PSJUTL",25,0)=" W ! I $D(IOSL),$Y<(IOSL-4) G READ"
^XTMP("XPDT",7807,"RTN","PSJUTL",26,0)=" W !?5,""Press return to continue  "" R X:$S($D(DTIME):DTIME,1:300)"
^XTMP("XPDT",7807,"RTN","PSJUTL",27,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",28,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",29,0)="ENOISC(PSJOI,USAGE)          ;Set DIC(""S"") so that only Orderable Items with at "
^XTMP("XPDT",7807,"RTN","PSJUTL",30,0)=" ;least 1 active dispense drug for the specified usage."
^XTMP("XPDT",7807,"RTN","PSJUTL",31,0)=" ;Input:  PSJOI IEN of Orderable Item selected"
^XTMP("XPDT",7807,"RTN","PSJUTL",32,0)=" ;        USAGE - Type of drugs (UD,IV,etc) to be selected"
^XTMP("XPDT",7807,"RTN","PSJUTL",33,0)=" ;Output: 1-At least one dispense drug found"
^XTMP("XPDT",7807,"RTN","PSJUTL",34,0)=" ;        0-None found"
^XTMP("XPDT",7807,"RTN","PSJUTL",35,0)=" N FOUND,PSJ"
^XTMP("XPDT",7807,"RTN","PSJUTL",36,0)=" S PSJ=$P($G(^PS(50.7,+PSJOI,0)),U,4),FOUND=$S('PSJ:1,PSJ>DT:1,1:0)"
^XTMP("XPDT",7807,"RTN","PSJUTL",37,0)=" I FOUND S FOUND=0 F PSJ=0:0 S PSJ=$O(^PSDRUG(""ASP"",PSJOI,PSJ)) Q:FOUND!'PSJ  I $P($G(^PSDRUG(PSJ,2)),U,3)[USAGE,'$G(^(""I""))!($G(^(""I""))'<DT) S FOUND=1"
^XTMP("XPDT",7807,"RTN","PSJUTL",38,0)=" Q FOUND"
^XTMP("XPDT",7807,"RTN","PSJUTL",39,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",40,0)="AADR ; display allergies and adverse reactions"
^XTMP("XPDT",7807,"RTN","PSJUTL",41,0)=" D ATS^PSJMUTL(60,50,1) N A,B"
^XTMP("XPDT",7807,"RTN","PSJUTL",42,0)=" I (PSGALG=0)&(PSGADR=0) W !!,""No allergies or ADRs on file."""
^XTMP("XPDT",7807,"RTN","PSJUTL",43,0)=" I PSGALG'=0 W !!,""Allergies: "" S B=""PSGALG"" F  S A=$Q(@B) Q:A=""""  W ?12,$G(@A),! S B=A"
^XTMP("XPDT",7807,"RTN","PSJUTL",44,0)=" I PSGADR'=0 W !,""      ADR: "" S B=""PSGADR"" F  S A=$Q(@B) Q:A=""""  W ?12,$G(@A),! S B=A"
^XTMP("XPDT",7807,"RTN","PSJUTL",45,0)=" D READ K PSGALG,PSGADR Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",46,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",47,0)="ENALU ; application look-up"
^XTMP("XPDT",7807,"RTN","PSJUTL",48,0)=" N PSJ S PSJ=DA(1) N DA,DIC,DIE,DIX,DO,DR S DIC=""^PS(50.35,"",DIC(0)=""EIMZ"" D DO^DIC1,^DIC I Y'>0 K X Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",49,0)=" S X=$P(Y(0),""^"",2) K:$S(X="""":1,1:$D(^PS(50.3,PSJ,1,""B"",X))) X"
^XTMP("XPDT",7807,"RTN","PSJUTL",50,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",51,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",52,0)="ENAQ ; application query"
^XTMP("XPDT",7807,"RTN","PSJUTL",53,0)=" S X=DZ N D,DA,DIC,DIE,DO,DR,DZ,XQH S DIC=""^PS(50.35,"",DIC(0)=""EIMQ"" D DO^DIC1,^DIC"
^XTMP("XPDT",7807,"RTN","PSJUTL",54,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",55,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",56,0)="ENPC(PSJTYP,PSJSYSP,LEN,TEXT) ; Copy Provider Comments -> Special Instructions."
^XTMP("XPDT",7807,"RTN","PSJUTL",57,0)=" Q:'$D(^PS(53.1,+$G(PSJORD),12,1,0)) """""
^XTMP("XPDT",7807,"RTN","PSJUTL",58,0)=" N DIR,PSGSI,PSGOEE,X,Y"
^XTMP("XPDT",7807,"RTN","PSJUTL",59,0)=" S Y="""" F X=0:0 S X=$O(^PS(53.1,+$G(PSJORD),12,X)) Q:'X  S Y=Y_^(X,0)_"" "" Q:$L(Y)>LEN"
^XTMP("XPDT",7807,"RTN","PSJUTL",60,0)=" S:$G(PSJTYP)'=""V"" Y=$$ENSET^PSGSICHK(Y) S:$G(PSJTYP)=""V"" Y=$E(Y,1,$L(Y)-1)"
^XTMP("XPDT",7807,"RTN","PSJUTL",61,0)=" I $L(Y)'<LEN S PSGOEE=0 D REDISP Q PSGSI"
^XTMP("XPDT",7807,"RTN","PSJUTL",62,0)=" ;Display Provider Comments Prior to Asking the Copy Provider Comments Question;BHW;PSJ*5*136"
^XTMP("XPDT",7807,"RTN","PSJUTL",63,0)=" N PSJTMP S PSJTMP=0"
^XTMP("XPDT",7807,"RTN","PSJUTL",64,0)=" W !,""PROVIDER COMMENTS:"""
^XTMP("XPDT",7807,"RTN","PSJUTL",65,0)=" F  S PSJTMP=$O(^PS(53.1,+$G(PSJORD),12,PSJTMP)) Q:'PSJTMP  W !,^PS(53.1,+$G(PSJORD),12,PSJTMP,0)"
^XTMP("XPDT",7807,"RTN","PSJUTL",66,0)=" S PSGSI=Y W ! S DIR(0)=""S^Y:Yes;N:No;!:Copy and flag for display in a BCMA Message Box"",DIR(""A"")=""Copy the Provider Comments into ""_$$ENFIELD(PSJTYP)_"" (Yes/No/!)"",DIR(""??"")=""^D ENPCHLP1^PSJUTL(PSJTYP)"" D ^DIR"
^XTMP("XPDT",7807,"RTN","PSJUTL",67,0)=" Q:Y=""Y"" PSGSI"
^XTMP("XPDT",7807,"RTN","PSJUTL",68,0)=" Q:Y=""!"" PSGSI_""^1"""
^XTMP("XPDT",7807,"RTN","PSJUTL",69,0)=" Q """""
^XTMP("XPDT",7807,"RTN","PSJUTL",70,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",71,0)="REDISP ; Redisplay Provider Comments and allow entry of Spec. Instructions."
^XTMP("XPDT",7807,"RTN","PSJUTL",72,0)=" D CLEAR^VALM1 F X=0:0 S X=$O(^PS(53.1,+$G(PSJORD),12,X)) Q:'X  W ^(X,0),!"
^XTMP("XPDT",7807,"RTN","PSJUTL",73,0)=" W !! S PSGSI="""""
^XTMP("XPDT",7807,"RTN","PSJUTL",74,0)=" D:PSJTYP'=""V"" 8^PSGOE81"
^XTMP("XPDT",7807,"RTN","PSJUTL",75,0)=" I PSJTYP=""V"" D 64^PSIVEDT1 S PSGSI=P(""OPI"")"
^XTMP("XPDT",7807,"RTN","PSJUTL",76,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",77,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",78,0)="ENPCHLP1(Y) ; Display help messages for Provider Comment copy."
^XTMP("XPDT",7807,"RTN","PSJUTL",79,0)=" W !,""Enter """"YES"""" to copy Provider Comments into the "",$$ENFIELD(Y),"" field"",!,""or """"NO"""" to bypass"",!,""or """"!"""" to copy the Provider Comments into the "",$$ENFIELD(PSJTYP),"" field"",!,""and flag them for display in a BCMA Message Box"",!!"
^XTMP("XPDT",7807,"RTN","PSJUTL",80,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",81,0)="ENPCHLP2(Y,X) ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",82,0)=" W !,""The Provider Comments entered for this order are longer than the space available"",!,""in the "",$$ENFIELD(Y),"" field."",!!,""Enter """"YES"""" to copy the first "",X-3,"" characters into the "",$$ENFIELD(Y),!,""field, or """"NO"""" to continue."",!!"
^XTMP("XPDT",7807,"RTN","PSJUTL",83,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",84,0)="ENBCMA(PSJTYP)  ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",85,0)=" N DIR,X,Y"
^XTMP("XPDT",7807,"RTN","PSJUTL",86,0)=" W !!,""Would you like to flag the "",$$ENFIELD(PSJTYP),"" field for display in a BCMA"",!,""Message box?"""
^XTMP("XPDT",7807,"RTN","PSJUTL",87,0)=" W ! S DIR(0)=""S^Y:Yes;N:No"",DIR(""A"")=""Flag the ""_$$ENFIELD(PSJTYP)_"" (Yes/No)"" D ^DIR"
^XTMP("XPDT",7807,"RTN","PSJUTL",88,0)=" K PSJCOMSI I $G(PSJCOM),$G(PSJORD)'[""P"" N TEXT S TEXT=$S(PSJTYP=""U"":$G(PSGSI),1:$G(P(""OPI""))) S PSJCOMSI=$$COMSI(PSJCOM,TEXT)"
^XTMP("XPDT",7807,"RTN","PSJUTL",89,0)=" Q:Y=""Y"" $S($G(PSJTYP)=""U"":$P(PSGSI,""^"")_""^1"",1:$P(P(""OPI""),""^"")_""^1"")"
^XTMP("XPDT",7807,"RTN","PSJUTL",90,0)=" Q $S(PSJTYP=""U"":$P(PSGSI,""^""),1:$P($G(P(""OPI"")),""^""))"
^XTMP("XPDT",7807,"RTN","PSJUTL",91,0)="ENFIELD(Y) ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",92,0)=" Q $S(Y=""V"":""Other Print Info"",1:""Special Instructions"")"
^XTMP("XPDT",7807,"RTN","PSJUTL",93,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",94,0)="COMSI(PARENT,INSTR) ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",95,0)=" N DIR,X,Y"
^XTMP("XPDT",7807,"RTN","PSJUTL",96,0)=" W !!!!?15,""** WARNING **"",!?5,""This order is part of a complex order."""
^XTMP("XPDT",7807,"RTN","PSJUTL",97,0)=" W !!,""Would you like to copy the "",$$ENFIELD(PSJTYP)"
^XTMP("XPDT",7807,"RTN","PSJUTL",98,0)=" W !,""to the other orders in the complex order?"""
^XTMP("XPDT",7807,"RTN","PSJUTL",99,0)=" S DIR(0)=""S^Y:Yes;N:No"",DIR(""A"")=""     Copy the ""_$$ENFIELD(PSJTYP)_"" (Yes/No)"" D ^DIR"
^XTMP("XPDT",7807,"RTN","PSJUTL",100,0)=" Q:Y=""Y"" 1"
^XTMP("XPDT",7807,"RTN","PSJUTL",101,0)=" Q 0"
^XTMP("XPDT",7807,"RTN","PSJUTL",102,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",103,0)="ENORL(X) ; Return patient's location as variable ptr."
^XTMP("XPDT",7807,"RTN","PSJUTL",104,0)=" Q $S(+$G(^DIC(42,+X,44)):+$G(^(44))_"";SC("",$D(^DIC(42,+X,0)):+X_"";DIC(42,"",1:"""")"
^XTMP("XPDT",7807,"RTN","PSJUTL",105,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",106,0)="ENMARD() ; validate MAR SELECTION DEFAULT string in WARD PARMS file."
^XTMP("XPDT",7807,"RTN","PSJUTL",107,0)=" N PSJANS,PSJX1,PSJX2,RANGE,Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",108,0)=" S RANGE=""1:6"" F PSJX1=1:1:6 S RANGE(PSJX1)="""""
^XTMP("XPDT",7807,"RTN","PSJUTL",109,0)=" S:$E(X)=""-"" X=+RANGE_X S:$E($L(X))=""-"" X=X_$P(RANGE,"":"",2)"
^XTMP("XPDT",7807,"RTN","PSJUTL",110,0)=" S PSJANS="""" F Q=1:1:$L(X,"","") S PSJX1=$P(X,"","",Q) D FS Q:'$D(PSJANS)"
^XTMP("XPDT",7807,"RTN","PSJUTL",111,0)=" Q:'$G(PSJANS) 0"
^XTMP("XPDT",7807,"RTN","PSJUTL",112,0)=" S PSJANS=$E(PSJANS,1,$L(PSJANS)-1) F Q=1:1:$L(PSJANS,"","") D  Q:'$D(PSJANS)"
^XTMP("XPDT",7807,"RTN","PSJUTL",113,0)=" .I $P(PSJANS,"","",Q)=1,$L(PSJANS,"","")>1 W !!,""All Medications (1) may not be selected in combination with other types."" K PSJANS Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",114,0)=" .W ?47,$P(PSJANS,"","",Q),"" - "",$P($T(@$P(PSJANS,"","",Q)),"";;"",2),!"
^XTMP("XPDT",7807,"RTN","PSJUTL",115,0)=" S:$G(PSJANS) X=PSJANS Q $G(PSJANS)"
^XTMP("XPDT",7807,"RTN","PSJUTL",116,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",117,0)="FS ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",118,0)=" I $S(PSJX1?1.N1""-""1.N:0,PSJX1'?1.N:1,'$D(RANGE(PSJX1)):1,1:"",""_PSJANS[PSJX1) K PSJANS Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",119,0)=" I PSJX1'[""-"" S PSJANS=PSJANS_PSJX1_"","" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",120,0)=" S PSJX2=+PSJX1,PSJANS=PSJANS_PSJX2_"","""
^XTMP("XPDT",7807,"RTN","PSJUTL",121,0)=" F  S PSJX2=$O(RANGE(PSJX2)) K:$S(X="""":1,"",""_PSJANS[PSJX2:1,1:PSJX2>$P(PSJX1,""-"",2)) PSJANS Q:'$D(PSJANS)  S PSJANS=PSJANS_PSJX2_"","" Q:PSJX2=$P(PSJX1,""-"",2)"
^XTMP("XPDT",7807,"RTN","PSJUTL",122,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",123,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",124,0)="ENMARDH ;Help text for MAR default answer."
^XTMP("XPDT",7807,"RTN","PSJUTL",125,0)=" W !!?2,""Enter the number corresponding to the type of orders to be included on MARs"",!,""printed for this ward. Multiple types (except 1) may be selected using """"-"""""",!,""or """","""" as delimiters."",!!,""Choose from: "",!"
^XTMP("XPDT",7807,"RTN","PSJUTL",126,0)=" N X F X=1:1:6 W !?13,X,"" - "",$P($T(@X),"";;"",2)"
^XTMP("XPDT",7807,"RTN","PSJUTL",127,0)=" W !"
^XTMP("XPDT",7807,"RTN","PSJUTL",128,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",129,0)="1 ;;All Medications"
^XTMP("XPDT",7807,"RTN","PSJUTL",130,0)="2 ;;Non-IV Medications only"
^XTMP("XPDT",7807,"RTN","PSJUTL",131,0)="3 ;;IV Piggybacks"
^XTMP("XPDT",7807,"RTN","PSJUTL",132,0)="4 ;;LVPs"
^XTMP("XPDT",7807,"RTN","PSJUTL",133,0)="5 ;;TPNs"
^XTMP("XPDT",7807,"RTN","PSJUTL",134,0)="6 ;;Chemotherapy Medications (IV)"
^XTMP("XPDT",7807,"RTN","PSJUTL",135,0)=" ;"
^XTMP("XPDT",7807,"RTN","PSJUTL",136,0)="EFD ;The following EFD Tags are used to Calculate the Expected First Dose for backdoor"
^XTMP("XPDT",7807,"RTN","PSJUTL",137,0)=" ;orders.  The call to $$ENQ^PSJORP2 is used to actually perform the calculation."
^XTMP("XPDT",7807,"RTN","PSJUTL",138,0)=" ;The program $$ENQ^PSJORP2 requires the variable INFO to equal the following:"
^XTMP("XPDT",7807,"RTN","PSJUTL",139,0)=" ;BHW;PSJ*5*136"
^XTMP("XPDT",7807,"RTN","PSJUTL",140,0)=" ; INFO (piece 1) = START DATE/TIME      ;PSGNESD (NEW ORDER)"
^XTMP("XPDT",7807,"RTN","PSJUTL",141,0)=" ; INFO (piece 2) = STOP DATE/TIME       ;PSGNEFD (NEW ORDER)"
^XTMP("XPDT",7807,"RTN","PSJUTL",142,0)=" ; INFO (piece 3) = SCHEDULE             ;PSGSCH  (NEW ORDER)"
^XTMP("XPDT",7807,"RTN","PSJUTL",143,0)=" ; INFO (piece 4) = SCHEDULE TYPE        ;PSGST   (NEW ORDER)"
^XTMP("XPDT",7807,"RTN","PSJUTL",144,0)=" ; INFO (piece 5) = ORDERABLE ITEM       ;PSGDRG  (NEW ORDER)"
^XTMP("XPDT",7807,"RTN","PSJUTL",145,0)=" ; INFO (piece 6) = ADMIN TIMES          ;PSGS0Y  (NEW ORDER)"
^XTMP("XPDT",7807,"RTN","PSJUTL",146,0)=" ; "
^XTMP("XPDT",7807,"RTN","PSJUTL",147,0)="EFDNEW ;Call Here if NEW or RENEWED Order"
^XTMP("XPDT",7807,"RTN","PSJUTL",148,0)=" N INFO"
^XTMP("XPDT",7807,"RTN","PSJUTL",149,0)=" S INFO=($G(PSGNESD))_U_($G(PSGNEFD))_U_($G(PSGSCH))_U_($G(PSGST))_U_($G(PSGDRG))_U_($G(PSGS0Y))"
^XTMP("XPDT",7807,"RTN","PSJUTL",150,0)=" D EFDDISP"
^XTMP("XPDT",7807,"RTN","PSJUTL",151,0)=" QUIT"
^XTMP("XPDT",7807,"RTN","PSJUTL",152,0)="EFDACT ;Call here if Editing Fields for an ACTIVE order"
^XTMP("XPDT",7807,"RTN","PSJUTL",153,0)=" ; Field 10 = Start Date"
^XTMP("XPDT",7807,"RTN","PSJUTL",154,0)=" ; Field 34 = Stop Date"
^XTMP("XPDT",7807,"RTN","PSJUTL",155,0)=" ; Field 41 = Admin Times"
^XTMP("XPDT",7807,"RTN","PSJUTL",156,0)=" N INFO,KEY,ORDER,LAST"
^XTMP("XPDT",7807,"RTN","PSJUTL",157,0)=" ;Loop Fields to be edited, in order, and determine when to Display expected first dose message"
^XTMP("XPDT",7807,"RTN","PSJUTL",158,0)=" F KEY=1:1 S ORDER=$P(PSGOEER,"";"",KEY) Q:'$L(ORDER)  I ""10^34^41""[$P(ORDER,U,1) S ORDER(KEY)=$P(ORDER,U,1)"
^XTMP("XPDT",7807,"RTN","PSJUTL",159,0)=" ;If there are no entries in ORDER, then were Not Editing Start/Stop or Admin Times"
^XTMP("XPDT",7807,"RTN","PSJUTL",160,0)=" S LAST=$O(ORDER(99),-1) Q:'LAST"
^XTMP("XPDT",7807,"RTN","PSJUTL",161,0)=" ;BHW;PSJ*5*179;Remove ""Display Once"" logic."
^XTMP("XPDT",7807,"RTN","PSJUTL",162,0)=" ;S LAST=ORDER(LAST)"
^XTMP("XPDT",7807,"RTN","PSJUTL",163,0)=" ;I LAST'=PSGF2 Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",164,0)=" S INFO=($G(PSGSD))_U_($G(PSGFD))_U_($G(PSGSCH))_U_($G(PSGST))_U_($G(PSGPDRG))_U_($G(PSGS0Y))"
^XTMP("XPDT",7807,"RTN","PSJUTL",165,0)=" S PSGEFDMG=""Next Dose Due"""
^XTMP("XPDT",7807,"RTN","PSJUTL",166,0)=" D EFDDISP"
^XTMP("XPDT",7807,"RTN","PSJUTL",167,0)=" QUIT"
^XTMP("XPDT",7807,"RTN","PSJUTL",168,0)="EFDNV ;Call here if Editing Fields for a NON-VERIFIED order"
^XTMP("XPDT",7807,"RTN","PSJUTL",169,0)=" ; Field 10 = Start Date"
^XTMP("XPDT",7807,"RTN","PSJUTL",170,0)=" ; Field 25 = Stop Date"
^XTMP("XPDT",7807,"RTN","PSJUTL",171,0)=" ; Field 39 = Admin Times"
^XTMP("XPDT",7807,"RTN","PSJUTL",172,0)=" N INFO,KEY,ORDER,LAST"
^XTMP("XPDT",7807,"RTN","PSJUTL",173,0)=" ;Check if called during finish process"
^XTMP("XPDT",7807,"RTN","PSJUTL",174,0)=" I '$D(PSGOEER) D  D EFDDISP Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",175,0)=" . S INFO=($G(PSGNESD))_U_($G(PSGNEFD))_U_($G(PSGSCH))_U_($G(PSGST))_U_($G(PSGPDRG))_U_($G(PSGS0Y))"
^XTMP("XPDT",7807,"RTN","PSJUTL",176,0)=" . Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",177,0)=" ;Loop Fields to be edited, in order, and determine when to Display expected first dose message"
^XTMP("XPDT",7807,"RTN","PSJUTL",178,0)=" F KEY=1:1 S ORDER=$P(PSGOEER,"";"",KEY) Q:'$L(ORDER)  I ""10^25^39""[$P(ORDER,U,1) S ORDER(KEY)=$P(ORDER,U,1)"
^XTMP("XPDT",7807,"RTN","PSJUTL",179,0)=" ;If there are no entries in ORDER, then were Not Editing Start/Stop or Admin Times"
^XTMP("XPDT",7807,"RTN","PSJUTL",180,0)=" S LAST=$O(ORDER(99),-1) Q:'LAST"
^XTMP("XPDT",7807,"RTN","PSJUTL",181,0)=" ;Only display EFD once, so Quit if this call is not for the Last field in the Edit"
^XTMP("XPDT",7807,"RTN","PSJUTL",182,0)=" S LAST=ORDER(LAST)"
^XTMP("XPDT",7807,"RTN","PSJUTL",183,0)=" I LAST'=PSGF2 Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",184,0)=" S INFO=($G(PSGSD))_U_($G(PSGFD))_U_($G(PSGSCH))_U_($G(PSGST))_U_($G(PSGPDRG))_U_($G(PSGS0Y))"
^XTMP("XPDT",7807,"RTN","PSJUTL",185,0)=" D EFDDISP"
^XTMP("XPDT",7807,"RTN","PSJUTL",186,0)=" QUIT"
^XTMP("XPDT",7807,"RTN","PSJUTL",187,0)="EFDIV(PSGZZND) ;Set variables for EFD on IV orders."
^XTMP("XPDT",7807,"RTN","PSJUTL",188,0)=" I $G(PSGZZND)="""" D"
^XTMP("XPDT",7807,"RTN","PSJUTL",189,0)=" .N X,ZZND,LYN,PSGS0XT,PSGS0Y,PSGOES S PSGOES=1 S X=P(9) D EN^PSGS0 S:$G(ZZND)'="""" PSGZZND=ZZND"
^XTMP("XPDT",7807,"RTN","PSJUTL",190,0)=" S PSGNESD=P(2),PSGNEFD=P(3),PSGSCH=P(9),PSGST=$P($G(PSGZZND),""^"",5),PSGDRG=$P($G(P(""PD"")),""^""),PSGS0Y=P(11)"
^XTMP("XPDT",7807,"RTN","PSJUTL",191,0)=" ;BHW - PSJ*5*177 Add call to check stop date.  If it's in the past, Display Message"
^XTMP("XPDT",7807,"RTN","PSJUTL",192,0)=" D CHKSTOP"
^XTMP("XPDT",7807,"RTN","PSJUTL",193,0)=" D EFDNEW"
^XTMP("XPDT",7807,"RTN","PSJUTL",194,0)=" W !"
^XTMP("XPDT",7807,"RTN","PSJUTL",195,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",196,0)="EFDDISP ;Display Expected First Dose"
^XTMP("XPDT",7807,"RTN","PSJUTL",197,0)=" N Y,Z"
^XTMP("XPDT",7807,"RTN","PSJUTL",198,0)=" Q:$G(PSGST)=""OC""!($G(PSGST)=""P"")!($G(PSGST)=""O"")"
^XTMP("XPDT",7807,"RTN","PSJUTL",199,0)=" Q:$G(PSGSCH)[""ON CALL""!($G(PSGSCH)[""ON-CALL"")!($G(PSGSCH)[""ONCALL"")"
^XTMP("XPDT",7807,"RTN","PSJUTL",200,0)=" Q:$G(PSGSCH)[""PRN"""
^XTMP("XPDT",7807,"RTN","PSJUTL",201,0)=" I '$L($G(PSGP)) N PSGP S PSGP="""""
^XTMP("XPDT",7807,"RTN","PSJUTL",202,0)=" S Y=$$ENQ^PSJORP2(PSGP,INFO)"
^XTMP("XPDT",7807,"RTN","PSJUTL",203,0)=" I 'Y S Y=""Unable to Calculate"""
^XTMP("XPDT",7807,"RTN","PSJUTL",204,0)=" X ^DD(""DD"")"
^XTMP("XPDT",7807,"RTN","PSJUTL",205,0)=" ;BHW;PSJ*5*179;Add Variable Message. ""Next Dose Due"".  Default to ""Expected First Dose"""
^XTMP("XPDT",7807,"RTN","PSJUTL",206,0)=" I '$D(PSGEFDMG) S PSGEFDMG=""Expected First Dose"""
^XTMP("XPDT",7807,"RTN","PSJUTL",207,0)=" W !,PSGEFDMG,"": "",Y H 3"
^XTMP("XPDT",7807,"RTN","PSJUTL",208,0)=" K PSGEFDMG"
^XTMP("XPDT",7807,"RTN","PSJUTL",209,0)=" Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",210,0)="CHKSTOP ;BHW - PSJ*5*177 Warn user if the Stop Date is < now."
^XTMP("XPDT",7807,"RTN","PSJUTL",211,0)=" I '+$G(P(3)) Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",212,0)=" N PSNOW,%,%H,%I,X D NOW^%DTC S PSNOW=%"
^XTMP("XPDT",7807,"RTN","PSJUTL",213,0)=" I +P(3)<PSNOW D  Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",214,0)=" . W !,$C(7),""The Stop Date/Time is in the Past!!!  This order will"",!,""automatically EXPIRE upon Verification!!"",!"
^XTMP("XPDT",7807,"RTN","PSJUTL",215,0)=" . Q"
^XTMP("XPDT",7807,"RTN","PSJUTL",216,0)=" Q"
^XTMP("XPDT",7807,"VER")="8.0^22.0"
^XTMP("XPDT",7809)="1"
^XTMP("XPDT",7809,"BLD",1271,0)="XU*8.0*538^KERNEL^0^3100111^y"
^XTMP("XPDT",7809,"BLD",1271,1,0)="^^3^3^3091209^"
^XTMP("XPDT",7809,"BLD",1271,1,1,0)="Kernel patch XU*8.0*538; Clean up Delegated Options that have been "
^XTMP("XPDT",7809,"BLD",1271,1,2,0)="deleted.  Please refer to the Description in Forum Patch Module for "
^XTMP("XPDT",7809,"BLD",1271,1,3,0)="details."
^XTMP("XPDT",7809,"BLD",1271,4,0)="^9.64PA^^"
^XTMP("XPDT",7809,"BLD",1271,6)="^436"
^XTMP("XPDT",7809,"BLD",1271,6.3)="1"
^XTMP("XPDT",7809,"BLD",1271,"ABPKG")="n"
^XTMP("XPDT",7809,"BLD",1271,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7809,"BLD",1271,"KRN",.4,0)=".4"
^XTMP("XPDT",7809,"BLD",1271,"KRN",.401,0)=".401"
^XTMP("XPDT",7809,"BLD",1271,"KRN",.402,0)=".402"
^XTMP("XPDT",7809,"BLD",1271,"KRN",.403,0)=".403"
^XTMP("XPDT",7809,"BLD",1271,"KRN",.5,0)=".5"
^XTMP("XPDT",7809,"BLD",1271,"KRN",.84,0)=".84"
^XTMP("XPDT",7809,"BLD",1271,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7809,"BLD",1271,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7809,"BLD",1271,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7809,"BLD",1271,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7809,"BLD",1271,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7809,"BLD",1271,"KRN",9.8,"NM",1,0)="XQ3^^0^B26421453"
^XTMP("XPDT",7809,"BLD",1271,"KRN",9.8,"NM","B","XQ3",1)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN",19,0)="19"
^XTMP("XPDT",7809,"BLD",1271,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7809,"BLD",1271,"KRN",101,0)="101"
^XTMP("XPDT",7809,"BLD",1271,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7809,"BLD",1271,"KRN",771,0)="771"
^XTMP("XPDT",7809,"BLD",1271,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7809,"BLD",1271,"KRN",870,0)="870"
^XTMP("XPDT",7809,"BLD",1271,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7809,"BLD",1271,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7809,"BLD",1271,"KRN",8994,0)="8994"
^XTMP("XPDT",7809,"BLD",1271,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",.4,.4)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",.401,.401)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",.402,.402)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",.403,.403)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",.5,.5)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",.84,.84)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",19,19)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",101,101)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",771,771)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",870,870)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",8994,8994)=""
^XTMP("XPDT",7809,"BLD",1271,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7809,"BLD",1271,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7809,"BLD",1271,"QUES",0)="^9.62^^"
^XTMP("XPDT",7809,"BLD",1271,"REQB",0)="^9.611^1^1"
^XTMP("XPDT",7809,"BLD",1271,"REQB",1,0)="XU*8.0*501^1"
^XTMP("XPDT",7809,"BLD",1271,"REQB","B","XU*8.0*501",1)=""
^XTMP("XPDT",7809,"MBREQ")="0"
^XTMP("XPDT",7809,"PKG",3,-1)="1^1"
^XTMP("XPDT",7809,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7809,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7809,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7809,"PKG",3,22,1,0)="8.0^3090706^3090706^6"
^XTMP("XPDT",7809,"PKG",3,22,1,"PAH",1,0)="538^3100111"
^XTMP("XPDT",7809,"PKG",3,22,1,"PAH",1,1,0)="^^3^3^3100111"
^XTMP("XPDT",7809,"PKG",3,22,1,"PAH",1,1,1,0)="Kernel patch XU*8.0*538; Clean up Delegated Options that have been "
^XTMP("XPDT",7809,"PKG",3,22,1,"PAH",1,1,2,0)="deleted.  Please refer to the Description in Forum Patch Module for "
^XTMP("XPDT",7809,"PKG",3,22,1,"PAH",1,1,3,0)="details."
^XTMP("XPDT",7809,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7809,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7809,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7809,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7809,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7809,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7809,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7809,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7809,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7809,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7809,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7809,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7809,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7809,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7809,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7809,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7809,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7809,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7809,"QUES","XPM1","B")=""
^XTMP("XPDT",7809,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7809,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7809,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7809,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7809,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7809,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7809,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7809,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7809,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7809,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7809,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7809,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7809,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7809,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7809,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7809,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7809,"RTN")="1"
^XTMP("XPDT",7809,"RTN","XQ3")="0^1^B26421453^B23354453"
^XTMP("XPDT",7809,"RTN","XQ3",1,0)="XQ3 ;LL/THM,SF/GJL,SEA/JLI - CLEANUP DANGLING POINTERS IN OPTION OR HELP FRAME FILES ;12/08/09"
^XTMP("XPDT",7809,"RTN","XQ3",2,0)=" ;;8.0;KERNEL;**80,501,538**;Jul 10, 1995;Build 1"
^XTMP("XPDT",7809,"RTN","XQ3",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7809,"RTN","XQ3",4,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",5,0)="ENASK ;Ask to fix up dirty OPTION/HELP FRAME File"
^XTMP("XPDT",7809,"RTN","XQ3",6,0)=" N IX,XUT,J,K,XQFL,X"
^XTMP("XPDT",7809,"RTN","XQ3",7,0)=" I '$D(%) W !,$C(7),""ENTRY MUST BE WITH THE VARIABLE '%' SET TO INDICATE DESIRED FILE."",$C(7),! Q"
^XTMP("XPDT",7809,"RTN","XQ3",8,0)=" S XQFL=$S(%=1:""OPTION"",%=2:""PROTOCOL"",1:""HELP FRAME"")"
^XTMP("XPDT",7809,"RTN","XQ3",9,0)=" W !,""Do you want to remove any 'Dangling Pointers' from your "",XQFL,"" File?  Y// "" R X:$S($D(DTIME):DTIME,1:300) I '$T Q"
^XTMP("XPDT",7809,"RTN","XQ3",10,0)=" W ! I X="""" S X=""Y"""
^XTMP("XPDT",7809,"RTN","XQ3",11,0)=" I X[""?"" G SYNTAX"
^XTMP("XPDT",7809,"RTN","XQ3",12,0)=" I X[""^"" S X=""^"" Q"
^XTMP("XPDT",7809,"RTN","XQ3",13,0)="STRIP I X'="""",X'?1A.E S X=$E(X,2,256) G STRIP"
^XTMP("XPDT",7809,"RTN","XQ3",14,0)=" S X=$E(X,1) I X="""" G SYNTAX"
^XTMP("XPDT",7809,"RTN","XQ3",15,0)=" I ""Nn""[X S X=""N"" Q"
^XTMP("XPDT",7809,"RTN","XQ3",16,0)=" I ""Yy""[X W !,""PLEASE WAIT while I check this out . . . "" G REMOVE"
^XTMP("XPDT",7809,"RTN","XQ3",17,0)="SYNTAX W ! I X'[""?"" W ?11,""I'm sorry, but I don't understand your answer. Please"""
^XTMP("XPDT",7809,"RTN","XQ3",18,0)=" W !,""Enter: YES (or press the RETURN key) if you want me to remove from"""
^XTMP("XPDT",7809,"RTN","XQ3",19,0)=" W !,?11,""your "",XQFL,"" File any pointers left over from incompletely"""
^XTMP("XPDT",7809,"RTN","XQ3",20,0)=" W !,?11,""deleted "",XQFL,"". If such pointers do exist and are not"""
^XTMP("XPDT",7809,"RTN","XQ3",21,0)=" W !,?11,""removed, the "",XQFL,"" File (i.e. the menus) could become"""
^XTMP("XPDT",7809,"RTN","XQ3",22,0)=" W !,?11,""messed up by an INIT."""
^XTMP("XPDT",7809,"RTN","XQ3",23,0)=" W !!,""Enter:  NO or ^ to continue on without effecting the "",XQFL,"" File."""
^XTMP("XPDT",7809,"RTN","XQ3",24,0)=" W ! G ENASK"
^XTMP("XPDT",7809,"RTN","XQ3",25,0)="REMOVE D:%=1 OPFIX D:%=2 PFIX D:'% HFFIX W !,""Your "",XQFL,"" File is OK "" I 'XUT W ""(no bad pointers)."""
^XTMP("XPDT",7809,"RTN","XQ3",26,0)=" E  W ""now ("",XUT,"" pointer"" W:XUT>1 ""s"" W "" fixed)."""
^XTMP("XPDT",7809,"RTN","XQ3",27,0)=" W ! S X=""Y"""
^XTMP("XPDT",7809,"RTN","XQ3",28,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",29,0)="OPFIX ;Kill any dangling pointers in the OPTION File (#19)"
^XTMP("XPDT",7809,"RTN","XQ3",30,0)=" N %,IX,J,XQ3"
^XTMP("XPDT",7809,"RTN","XQ3",31,0)=" S (IX,XUT)=0 ;XUT=Total Deletions"
^XTMP("XPDT",7809,"RTN","XQ3",32,0)=" F  S IX=$O(^DIC(19,IX)) Q:'IX  W:'(IX#100) "". "" S (XQ3,J)=0 D L2 ;Loop through Options"
^XTMP("XPDT",7809,"RTN","XQ3",33,0)=" D NPF"
^XTMP("XPDT",7809,"RTN","XQ3",34,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",35,0)="L2 ;One Option"
^XTMP("XPDT",7809,"RTN","XQ3",36,0)=" I '$D(^DIC(19,IX,10,0)) Q  ;Not a Menu"
^XTMP("XPDT",7809,"RTN","XQ3",37,0)=" K ^DIC(19,IX,10,""B"") ;Rebuild ""B"" X-ref"
^XTMP("XPDT",7809,"RTN","XQ3",38,0)=" F  S J=$O(^DIC(19,IX,10,J)) Q:'J  D ITEM ;Loop through menu items"
^XTMP("XPDT",7809,"RTN","XQ3",39,0)=" S (K,J)=0 F  S J=$O(^DIC(19,IX,10,J)) Q:J'>0  S K=J ;K=Last item"
^XTMP("XPDT",7809,"RTN","XQ3",40,0)=" S J=^DIC(19,IX,10,0),^(0)=$P(J,""^"",1,2)_""^""_K_""^""_XQ3 ;fix counters"
^XTMP("XPDT",7809,"RTN","XQ3",41,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",42,0)=" ;"
^XTMP("XPDT",7809,"RTN","XQ3",43,0)="ITEM ;One Menu item"
^XTMP("XPDT",7809,"RTN","XQ3",44,0)=" N DA,DIK"
^XTMP("XPDT",7809,"RTN","XQ3",45,0)=" S K=+^DIC(19,IX,10,J,0)"
^XTMP("XPDT",7809,"RTN","XQ3",46,0)=" I $D(^DIC(19,K,0)) S XQ3=XQ3+1,^DIC(19,IX,10,""B"",K,J)="""" Q  ;Y=No. of items"
^XTMP("XPDT",7809,"RTN","XQ3",47,0)=" W !,""Option "",$P(^DIC(19,IX,0),U,1),"" points to missing option "",K"
^XTMP("XPDT",7809,"RTN","XQ3",48,0)=" ;S XUT=XUT+1 K ^DIC(19,IX,10,J) ;Kill invalid menu item"
^XTMP("XPDT",7809,"RTN","XQ3",49,0)=" S XUT=XUT+1,DIK=""^DIC(19,DA(1),10,"",DA=J,DA(1)=IX D ^DIK ;Trigger Menu-rebuild"
^XTMP("XPDT",7809,"RTN","XQ3",50,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",51,0)=" ;"
^XTMP("XPDT",7809,"RTN","XQ3",52,0)="NPF ;Fix the New Person File Option Pointers"
^XTMP("XPDT",7809,"RTN","XQ3",53,0)=" N IX,I2,J,P,DIK,DIE,DR,DA,XUT"
^XTMP("XPDT",7809,"RTN","XQ3",54,0)=" S (XUT,IX)=0"
^XTMP("XPDT",7809,"RTN","XQ3",55,0)=" F  S IX=$O(^VA(200,IX)) Q:'IX  D"
^XTMP("XPDT",7809,"RTN","XQ3",56,0)=" . S P=+$G(^VA(200,IX,201))"
^XTMP("XPDT",7809,"RTN","XQ3",57,0)=" . I P,'$D(^DIC(19,P,0)) D"
^XTMP("XPDT",7809,"RTN","XQ3",58,0)=" . . W !,""User: "",$P(^VA(200,IX,0),U),"", Primary Menu points to missing option "",P"
^XTMP("XPDT",7809,"RTN","XQ3",59,0)=" . . S XUT=XUT+1,DIE=""^VA(200,"",DA=IX,DR=""201///@"" D ^DIE"
^XTMP("XPDT",7809,"RTN","XQ3",60,0)=" . . Q"
^XTMP("XPDT",7809,"RTN","XQ3",61,0)=" . S I2=0"
^XTMP("XPDT",7809,"RTN","XQ3",62,0)=" . F  S I2=$O(^VA(200,IX,203,I2)) Q:'I2  D"
^XTMP("XPDT",7809,"RTN","XQ3",63,0)=" . . S P=+$G(^VA(200,IX,203,I2,0))"
^XTMP("XPDT",7809,"RTN","XQ3",64,0)=" . . I P,'$D(^DIC(19,P,0)) D"
^XTMP("XPDT",7809,"RTN","XQ3",65,0)=" . . . W !,""User: "",$P(^VA(200,IX,0),U),"", Secondary Menu points to missing option "",P"
^XTMP("XPDT",7809,"RTN","XQ3",66,0)=" . . . S XUT=XUT+1,DIK=""^VA(200,DA(1),203,"",DA=I2,DA(1)=IX D ^DIK"
^XTMP("XPDT",7809,"RTN","XQ3",67,0)=" . . . Q"
^XTMP("XPDT",7809,"RTN","XQ3",68,0)=" . . Q"
^XTMP("XPDT",7809,"RTN","XQ3",69,0)=" . S I2=0"
^XTMP("XPDT",7809,"RTN","XQ3",70,0)=" . F  S I2=$O(^VA(200,IX,19.5,I2)) Q:'I2  D"
^XTMP("XPDT",7809,"RTN","XQ3",71,0)=" . . S P=+$G(^VA(200,IX,19.5,I2,0))"
^XTMP("XPDT",7809,"RTN","XQ3",72,0)=" . . I P,'$D(^DIC(19,P,0)) D"
^XTMP("XPDT",7809,"RTN","XQ3",73,0)=" . . . W !,""User: "",$P(^VA(200,IX,0),U),"", Delegated option points to missing option "",P"
^XTMP("XPDT",7809,"RTN","XQ3",74,0)=" . . . S XUT=XUT+1,DIK=""^VA(200,DA(1),19.5,"",DA=I2,DA(1)=IX D ^DIK"
^XTMP("XPDT",7809,"RTN","XQ3",75,0)=" . . . Q"
^XTMP("XPDT",7809,"RTN","XQ3",76,0)=" . . Q"
^XTMP("XPDT",7809,"RTN","XQ3",77,0)=" . Q"
^XTMP("XPDT",7809,"RTN","XQ3",78,0)=" I XUT W !,""Menu pointers fixed."""
^XTMP("XPDT",7809,"RTN","XQ3",79,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",80,0)="HFFIX ; Fix dangling pointers on help frame file"
^XTMP("XPDT",7809,"RTN","XQ3",81,0)=" N %"
^XTMP("XPDT",7809,"RTN","XQ3",82,0)=" S (XUT,IX)=0 F  S IX=$O(^DIC(9.2,IX)) Q:IX'>0  I $D(^(IX,2)) D HF1,HF2,HF3"
^XTMP("XPDT",7809,"RTN","XQ3",83,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",84,0)="HF1 S (Y,J)=0 F  S J=$O(^DIC(9.2,IX,2,J)) Q:J'>0  I $D(^(J,0)) S K=$P(^(0),U,2),Y=Y+1 I $L(K),'$D(^DIC(9.2,K)) S Y=Y-1,XUT=XUT+1 K ^DIC(9.2,IX,2,J,0)"
^XTMP("XPDT",7809,"RTN","XQ3",85,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",86,0)="HF2 S (K,J)=0 F  S J=$O(^DIC(9.2,IX,2,J)) Q:J'>0  S K=J"
^XTMP("XPDT",7809,"RTN","XQ3",87,0)=" S J=^DIC(9.2,IX,2,0),^(0)=$P(J,U,1,2)_U_K_U_Y"
^XTMP("XPDT",7809,"RTN","XQ3",88,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",89,0)="HF3 S K="":"" F  S K=$O(^DIC(9.2,IX,2,K)) Q:K=""""  S J=-1 F  S J=$O(^DIC(9.2,IX,2,K,J)) Q:J=""""  D HF4"
^XTMP("XPDT",7809,"RTN","XQ3",90,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",91,0)="HF4 S JJ=0 F  S JJ=$O(^DIC(9.2,IX,2,K,J,JJ)) Q:JJ'>0  I '$D(^DIC(9.2,IX,2,JJ,0)) K ^DIC(9.2,IX,2,K,J,JJ)"
^XTMP("XPDT",7809,"RTN","XQ3",92,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",93,0)="PFIX ;Kill any dangling pointers in the PROTOCOL File (#101)"
^XTMP("XPDT",7809,"RTN","XQ3",94,0)=" N %"
^XTMP("XPDT",7809,"RTN","XQ3",95,0)=" S (IX,XUT)=0 ;XUT=Total Deletions"
^XTMP("XPDT",7809,"RTN","XQ3",96,0)="P1 S IX=$O(^ORD(101,IX)) I IX>0 S (Y,J)=0 G P2 ;Loop through protocols"
^XTMP("XPDT",7809,"RTN","XQ3",97,0)=" Q"
^XTMP("XPDT",7809,"RTN","XQ3",98,0)="P2 S J=$O(^ORD(101,IX,10,J)) I J>0 G PITEM ;Loop through items"
^XTMP("XPDT",7809,"RTN","XQ3",99,0)=" I '$D(^ORD(101,IX,10,0)) G P1"
^XTMP("XPDT",7809,"RTN","XQ3",100,0)=" S (K,J)=0 F L=1:1 S J=$O(^ORD(101,IX,10,J)) Q:J'>0  S K=J ;K=Last item"
^XTMP("XPDT",7809,"RTN","XQ3",101,0)=" S J=^ORD(101,IX,10,0),^(0)=$P(J,""^"",1,2)_""^""_K_""^""_Y ;fix counters"
^XTMP("XPDT",7809,"RTN","XQ3",102,0)=" G PXREFS"
^XTMP("XPDT",7809,"RTN","XQ3",103,0)="PITEM S K=+^ORD(101,IX,10,J,0) I $D(^ORD(101,K,0)) S Y=Y+1 G P2 ;Y=No. of items"
^XTMP("XPDT",7809,"RTN","XQ3",104,0)=" W !,""Protocol "",$P(^ORD(101,IX,0),U,1),"" points to missing protocol "",K"
^XTMP("XPDT",7809,"RTN","XQ3",105,0)=" ;S XUT=XUT+1 K ^ORD(101,IX,10,J) ;Kill invalid menu item"
^XTMP("XPDT",7809,"RTN","XQ3",106,0)=" S XUT=XUT+1,DIK=""^ORD(101,IX,10,"",DA=J,DA(1)=IX D ^DIK ;Delete invalid menu item"
^XTMP("XPDT",7809,"RTN","XQ3",107,0)=" G P2"
^XTMP("XPDT",7809,"RTN","XQ3",108,0)="PXREFS S K="":"""
^XTMP("XPDT",7809,"RTN","XQ3",109,0)="P3 S K=$O(^ORD(101,IX,10,K)) I K="""" G P1 ;Loop through cross references"
^XTMP("XPDT",7809,"RTN","XQ3",110,0)=" S L=-1"
^XTMP("XPDT",7809,"RTN","XQ3",111,0)="P4 S L=$O(^ORD(101,IX,10,K,L)) I L="""" G P3"
^XTMP("XPDT",7809,"RTN","XQ3",112,0)=" S J=0"
^XTMP("XPDT",7809,"RTN","XQ3",113,0)="P5 S J=$O(^ORD(101,IX,10,K,L,J)) I J'>0 G P4"
^XTMP("XPDT",7809,"RTN","XQ3",114,0)=" I '$D(^ORD(101,IX,10,J,0)) G PKILLXR ;kill xref to invalid item"
^XTMP("XPDT",7809,"RTN","XQ3",115,0)="P6 S M=^ORD(101,IX,10,J,0) I (M=L)!(M[L_""^"") G P5"
^XTMP("XPDT",7809,"RTN","XQ3",116,0)="PKILLXR K ^ORD(101,IX,10,K,L,J) I $O(^ORD(101,IX,10,K,L,-1))="""" K ^ORD(101,IX,10,K,L)"
^XTMP("XPDT",7809,"RTN","XQ3",117,0)=" G P5"
^XTMP("XPDT",7809,"VER")="8.0^22.0"
^XTMP("XPDT",7811)="1"
^XTMP("XPDT",7811,"BLD",7369,0)="OR*3.0*316^ORDER ENTRY/RESULTS REPORTING^0^3100505^y"
^XTMP("XPDT",7811,"BLD",7369,1,0)="^^8^8^3100115^"
^XTMP("XPDT",7811,"BLD",7369,1,1,0)="This patch will correct the following problems."
^XTMP("XPDT",7811,"BLD",7369,1,2,0)=" "
^XTMP("XPDT",7811,"BLD",7369,1,3,0)="HD0000000339814 - Glucophage Contrast Media Order Check not triggered."
^XTMP("XPDT",7811,"BLD",7369,1,4,0)=" "
^XTMP("XPDT",7811,"BLD",7369,1,5,0)="   Glucophage Contrast Media and Glucophage Lab Results Order Checks are "
^XTMP("XPDT",7811,"BLD",7369,1,6,0)="   not triggered for a metformin order with lower case letters in the drug"
^XTMP("XPDT",7811,"BLD",7369,1,7,0)="   name.  For instance, a site using TALLman lettering for a metformin"
^XTMP("XPDT",7811,"BLD",7369,1,8,0)="   order (metFORMIN) did not fire checks."
^XTMP("XPDT",7811,"BLD",7369,4,0)="^9.64PA^^0"
^XTMP("XPDT",7811,"BLD",7369,6)="6^"
^XTMP("XPDT",7811,"BLD",7369,6.3)="17"
^XTMP("XPDT",7811,"BLD",7369,"ABPKG")="n"
^XTMP("XPDT",7811,"BLD",7369,"INID")="^"
^XTMP("XPDT",7811,"BLD",7369,"INIT")="S^ORY316ES"
^XTMP("XPDT",7811,"BLD",7369,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7811,"BLD",7369,"KRN",.4,0)=".4"
^XTMP("XPDT",7811,"BLD",7369,"KRN",.401,0)=".401"
^XTMP("XPDT",7811,"BLD",7369,"KRN",.402,0)=".402"
^XTMP("XPDT",7811,"BLD",7369,"KRN",.403,0)=".403"
^XTMP("XPDT",7811,"BLD",7369,"KRN",.5,0)=".5"
^XTMP("XPDT",7811,"BLD",7369,"KRN",.84,0)=".84"
^XTMP("XPDT",7811,"BLD",7369,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7811,"BLD",7369,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",0)="^9.68A^17^15"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",3,0)="ORKPS^^0^B48296673"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",4,0)="OCXF22^^0^B6960650"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",5,0)="ORY3160^^0^B15754136"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",6,0)="ORY31601^^0^B71971238"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",7,0)="ORY31602^^0^B77554157"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",8,0)="ORY31603^^0^B87967694"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",9,0)="ORY31604^^0^B58391811"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",10,0)="ORY31605^^0^B67826607"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",11,0)="ORY31606^^0^B65941029"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",12,0)="ORY31607^^0^B782472"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",13,0)="ORY3161^^0^B40697465"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",14,0)="ORY3162^^0^B26766920"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",15,0)="ORY3163^^0^B12996914"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",16,0)="ORY3164^^0^B13526847"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM",17,0)="ORY316ES^^0^B12681869"
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","OCXF22",4)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORKPS",3)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY3160",5)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY31601",6)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY31602",7)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY31603",8)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY31604",9)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY31605",10)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY31606",11)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY31607",12)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY3161",13)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY3162",14)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY3163",15)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY3164",16)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",9.8,"NM","B","ORY316ES",17)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN",19,0)="19"
^XTMP("XPDT",7811,"BLD",7369,"KRN",19,"NM",0)="^9.68A^^"
^XTMP("XPDT",7811,"BLD",7369,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7811,"BLD",7369,"KRN",101,0)="101"
^XTMP("XPDT",7811,"BLD",7369,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7811,"BLD",7369,"KRN",771,0)="771"
^XTMP("XPDT",7811,"BLD",7369,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7811,"BLD",7369,"KRN",870,0)="870"
^XTMP("XPDT",7811,"BLD",7369,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7811,"BLD",7369,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7811,"BLD",7369,"KRN",8994,0)="8994"
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",.4,.4)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",.401,.401)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",.402,.402)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",.403,.403)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",.5,.5)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",.84,.84)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",19,19)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",101,101)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",771,771)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",870,870)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7811,"BLD",7369,"KRN","B",8994,8994)=""
^XTMP("XPDT",7811,"BLD",7369,"QUES",0)="^9.62^^"
^XTMP("XPDT",7811,"BLD",7369,"REQB",0)="^9.611^2^1"
^XTMP("XPDT",7811,"BLD",7369,"REQB",2,0)="OR*3.0*232^1"
^XTMP("XPDT",7811,"BLD",7369,"REQB","B","OR*3.0*232",2)=""
^XTMP("XPDT",7811,"INIT")="S^ORY316ES"
^XTMP("XPDT",7811,"MBREQ")="0"
^XTMP("XPDT",7811,"PKG",170,-1)="1^1"
^XTMP("XPDT",7811,"PKG",170,0)="ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting"
^XTMP("XPDT",7811,"PKG",170,20,0)="^9.402P^^"
^XTMP("XPDT",7811,"PKG",170,22,0)="^9.49I^1^1"
^XTMP("XPDT",7811,"PKG",170,22,1,0)="3.0^2971217^2980917^11712"
^XTMP("XPDT",7811,"PKG",170,22,1,"PAH",1,0)="316^3100505"
^XTMP("XPDT",7811,"PKG",170,22,1,"PAH",1,1,0)="^^8^8^3100505"
^XTMP("XPDT",7811,"PKG",170,22,1,"PAH",1,1,1,0)="This patch will correct the following problems."
^XTMP("XPDT",7811,"PKG",170,22,1,"PAH",1,1,2,0)=" "
^XTMP("XPDT",7811,"PKG",170,22,1,"PAH",1,1,3,0)="HD0000000339814 - Glucophage Contrast Media Order Check not triggered."
^XTMP("XPDT",7811,"PKG",170,22,1,"PAH",1,1,4,0)=" "
^XTMP("XPDT",7811,"PKG",170,22,1,"PAH",1,1,5,0)="   Glucophage Contrast Media and Glucophage Lab Results Order Checks are "
^XTMP("XPDT",7811,"PKG",170,22,1,"PAH",1,1,6,0)="   not triggered for a metformin order with lower case letters in the drug"
^XTMP("XPDT",7811,"PKG",170,22,1,"PAH",1,1,7,0)="   name.  For instance, a site using TALLman lettering for a metformin"
^XTMP("XPDT",7811,"PKG",170,22,1,"PAH",1,1,8,0)="   order (metFORMIN) did not fire checks."
^XTMP("XPDT",7811,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7811,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7811,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7811,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7811,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7811,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7811,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7811,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7811,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7811,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7811,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7811,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7811,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7811,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7811,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7811,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7811,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7811,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7811,"QUES","XPM1","B")=""
^XTMP("XPDT",7811,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7811,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7811,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7811,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7811,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7811,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7811,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7811,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7811,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7811,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7811,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7811,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7811,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7811,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7811,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7811,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7811,"RTN")="15"
^XTMP("XPDT",7811,"RTN","OCXF22")="0^4^B6960650^B6379243"
^XTMP("XPDT",7811,"RTN","OCXF22",1,0)="OCXF22 ;SLC/RJS,CLA - GENERATES CODE FOR 'Free Text (String)' OPERATORS ;10/29/98  12:37"
^XTMP("XPDT",7811,"RTN","OCXF22",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**32,316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","OCXF22",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","OCXF22",4,0)=" Q"
^XTMP("XPDT",7811,"RTN","OCXF22",5,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",6,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",7,0)="LEN(X) ;"
^XTMP("XPDT",7811,"RTN","OCXF22",8,0)=" I ($E(X,1)="""""""") Q ($L(X)-2)"
^XTMP("XPDT",7811,"RTN","OCXF22",9,0)=" Q ""$L(""_X_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",10,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",11,0)="START(DATA,CVAL) ; DATA STARTS WITH VALUE"
^XTMP("XPDT",7811,"RTN","OCXF22",12,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",13,0)=" Q:'$L($G(DATA)) """" Q:'$L($G(CVAL)) """" Q ""($E(""_DATA_"",1,""_$$LEN(CVAL)_"")=""_CVAL_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",14,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",15,0)="END(DATA,CVAL) ; DATA ENDS WITH VALUE"
^XTMP("XPDT",7811,"RTN","OCXF22",16,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",17,0)=" Q:'$L($G(DATA)) """" Q:'$L($G(CVAL)) """" Q ""($E(""_DATA_"",($L(""_DATA_"")-(""_$$LEN(CVAL)_""-1)),$L(""_DATA_""))=""_CVAL_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",18,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",19,0)="PAT(DATA,CVAL) ; MUMPS PATTERN MATCH"
^XTMP("XPDT",7811,"RTN","OCXF22",20,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",21,0)=" Q:'$L($G(DATA)) """" Q:'$L($G(CVAL)) """" Q ""(""_DATA_""?""_CVAL_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",22,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",23,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",24,0)="CONT(DATA,CVAL) ; DATA CONTAINS VALUE"
^XTMP("XPDT",7811,"RTN","OCXF22",25,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",26,0)=" Q:'$L($G(DATA)) """" Q:'$L($G(CVAL)) """" Q ""(""_DATA_""[""_CVAL_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",27,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",28,0)="PREC(DATA,CVAL) ; DATA PRECEDES VALUE ALPHABETICALLY"
^XTMP("XPDT",7811,"RTN","OCXF22",29,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",30,0)=" Q:'$L($G(DATA)) """" Q:'$L($G(CVAL)) """" Q ""(""_CVAL_""]""_DATA_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",31,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",32,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",33,0)="FOLLOW(DATA,CVAL) ; DATA FOLLOWS VALUE ALPHABETICALLY"
^XTMP("XPDT",7811,"RTN","OCXF22",34,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",35,0)=" Q:'$L($G(DATA)) """" Q:'$L($G(CVAL)) """" Q ""(""_DATA_""]""_CVAL_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",36,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",37,0)="AEQ(DATA,CVAL) ; DATA EQUALS VALUE ALPHABETICALLY"
^XTMP("XPDT",7811,"RTN","OCXF22",38,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",39,0)=" Q:'$L($G(DATA)) """" Q:'$L($G(CVAL)) """" Q ""(""_DATA_""=""_CVAL_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",40,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",41,0)="AEQT(DATA,CVAL) ; DATA EQUALS STANDARD TERM ALPHABETICALLY"
^XTMP("XPDT",7811,"RTN","OCXF22",42,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",43,0)=" Q:'$L($G(DATA)) """" Q:'$L($G(CVAL)) """" Q ""$$EQTERM(""_DATA_"",""_CVAL_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",44,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",45,0)="NAEQ(DATA,CVAL) ; DATA DOES NOT EQUAL VALUE ALPHABETICALLY"
^XTMP("XPDT",7811,"RTN","OCXF22",46,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",47,0)=" Q:'$L($G(DATA)) """" Q:'$L($G(CVAL)) """" Q ""'(""_DATA_""=""_CVAL_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",48,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",49,0)="AINCL(DATA,CVAL1,CVAL2) ; ALPHA INCLUSIVE BETWEEN"
^XTMP("XPDT",7811,"RTN","OCXF22",50,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",51,0)=" Q:'$L($G(DATA)) """" Q:'$L($G(CVAL1)) """" Q:'$L($G(CVAL2)) """""
^XTMP("XPDT",7811,"RTN","OCXF22",52,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",53,0)=" Q ""'(""_$$PREC(DATA,CVAL1)_""!""_$$FOLLOW(DATA,CVAL2)_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",54,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",55,0)="AEXCL(DATA,CVAL1,CVAL2) ; ALPHA EXCLUSIVE BETWEEN"
^XTMP("XPDT",7811,"RTN","OCXF22",56,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",57,0)=" Q:'$L($G(DATA)) """" Q:'$L($G(CVAL1)) """" Q:'$L($G(CVAL2)) """""
^XTMP("XPDT",7811,"RTN","OCXF22",58,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",59,0)=" Q ""(""_$$FOLLOW(DATA,CVAL1)_""&""_$$PREC(DATA,CVAL2)_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",60,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",61,0)=" ; *****  STRING LENGTH OPERATORS  *****"
^XTMP("XPDT",7811,"RTN","OCXF22",62,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",63,0)="LGRT(DATA,CVAL) ; GREATER THAN SPECIFIED STRING LENGTH"
^XTMP("XPDT",7811,"RTN","OCXF22",64,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",65,0)=" Q $$GRT^OCXF20(""$L(""_DATA_"")"",CVAL)"
^XTMP("XPDT",7811,"RTN","OCXF22",66,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",67,0)="LESS(DATA,CVAL) ; LESS THAN SPECIFIED STRING LENGTH"
^XTMP("XPDT",7811,"RTN","OCXF22",68,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",69,0)=" Q $$LESS^OCXF20(""$L(""_DATA_"")"",CVAL)"
^XTMP("XPDT",7811,"RTN","OCXF22",70,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",71,0)="LEQ(DATA,CVAL) ; EQUALS SPECIFIED STRING LENGTH"
^XTMP("XPDT",7811,"RTN","OCXF22",72,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",73,0)=" Q $$EQ^OCXF20(""$L(""_DATA_"")"",CVAL)"
^XTMP("XPDT",7811,"RTN","OCXF22",74,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",75,0)="LINCL(DATA,CVAL1,CVAL2) ; STRING LENGTH INCLUSIVE BETWEEN"
^XTMP("XPDT",7811,"RTN","OCXF22",76,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",77,0)=" Q $$INCL^OCXF20(""$L(""_DATA_"")"",CVAL1,CVAL2)"
^XTMP("XPDT",7811,"RTN","OCXF22",78,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",79,0)="LEXCL(DATA,CVAL1,CVAL2) ; STRING LENGTH EXCLUSIVE BETWEEN"
^XTMP("XPDT",7811,"RTN","OCXF22",80,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",81,0)=" Q $$EXCL^OCXF20(""$L(""_DATA_"")"",CVAL1,CVAL2)"
^XTMP("XPDT",7811,"RTN","OCXF22",82,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",83,0)="EQSET(DATA,CVAL) ; STRING IS EQUAL TO ONE OF A LIST OF VALUES"
^XTMP("XPDT",7811,"RTN","OCXF22",84,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",85,0)=" Q ""$$LIST(""_DATA_"",""_CVAL_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",86,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",87,0)="CONSET(DATA,CVAL) ; STRING CONTAINS ONE OF A LIST OF VALUES"
^XTMP("XPDT",7811,"RTN","OCXF22",88,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",89,0)=" Q ""$$CLIST(""_DATA_"",""_CVAL_"")"""
^XTMP("XPDT",7811,"RTN","OCXF22",90,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",91,0)="CONNCSET(DATA,CVAL) ; CASE-INSENSITIVE STRING CONTAINS ONE OF A LIST OF VALUES ;DJE/VM *316 "
^XTMP("XPDT",7811,"RTN","OCXF22",92,0)=" ;"
^XTMP("XPDT",7811,"RTN","OCXF22",93,0)=" Q ""$$CLIST($$UP^XLFSTR(""_DATA_""),$$UP^XLFSTR(""_CVAL_""))"""
^XTMP("XPDT",7811,"RTN","OCXF22",94,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORKPS")="0^3^B48296673^B47529958"
^XTMP("XPDT",7811,"RTN","ORKPS",1,0)="ORKPS ; slc/CLA - Order checking support procedures for medications ;12/15/97 [8/10/05 3:20pm]"
^XTMP("XPDT",7811,"RTN","ORKPS",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,74,94,123,141,190,232,316**;Dec 17, 1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORKPS",3,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORKPS",4,0)="CHECK(YY,DFN,MED,OI,ORKDG) ; return drug order checks"
^XTMP("XPDT",7811,"RTN","ORKPS",5,0)=" ;YY:    returned array of data"
^XTMP("XPDT",7811,"RTN","ORKPS",6,0)=" ;DFN:   patient id"
^XTMP("XPDT",7811,"RTN","ORKPS",7,0)=" ;MED:   drug ien [file #50]"
^XTMP("XPDT",7811,"RTN","ORKPS",8,0)=" ;OI:    orderable item ien [file #101.43"
^XTMP("XPDT",7811,"RTN","ORKPS",9,0)=" ;ORKDG: display group (should be PSI, PSIV, PSO or PSH)"
^XTMP("XPDT",7811,"RTN","ORKPS",10,0)=" ; returned info: varies for ^TMP($J x-ref - refer to listings below"
^XTMP("XPDT",7811,"RTN","ORKPS",11,0)=" K ^TMP($J,""DI""),^TMP($J,""DD""),^TMP($J,""DC"")"
^XTMP("XPDT",7811,"RTN","ORKPS",12,0)=" N ORDFN S ORDFN=DFN"
^XTMP("XPDT",7811,"RTN","ORKPS",13,0)=" D EN^PSOORDRG(DFN,MED)"
^XTMP("XPDT",7811,"RTN","ORKPS",14,0)=" D PROCESS^ORKPS1(OI,ORDFN,ORKDG)"
^XTMP("XPDT",7811,"RTN","ORKPS",15,0)=" K ^TMP($J,""DI""),^TMP($J,""DD""),^TMP($J,""DC"")"
^XTMP("XPDT",7811,"RTN","ORKPS",16,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORKPS",17,0)="CHKSESS(YY,DFN,MED,OI,ORKPDATA,ORKDG) ; return drug order checks for session"
^XTMP("XPDT",7811,"RTN","ORKPS",18,0)=" N ORKDGI,ORKDRUG,ORKDRUGA,ORKORN,HOR,SEQ,CNT,CNTX,ORKOI"
^XTMP("XPDT",7811,"RTN","ORKPS",19,0)=" N ORKFLG,ORSESS,ORPSPKG,ORPSA,ORKDD,ORSNUM,ORNUM,DUPX,DUPORN"
^XTMP("XPDT",7811,"RTN","ORKPS",20,0)=" N ORDFN S ORDFN=DFN"
^XTMP("XPDT",7811,"RTN","ORKPS",21,0)=" S ORKFLG=0"
^XTMP("XPDT",7811,"RTN","ORKPS",22,0)=" S ORNUM=$P(ORKA,""|"",5)"
^XTMP("XPDT",7811,"RTN","ORKPS",23,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORKPS",24,0)=" ;get other session med orders:"
^XTMP("XPDT",7811,"RTN","ORKPS",25,0)=" I $D(^TMP(""ORKA"",$J)) D"
^XTMP("XPDT",7811,"RTN","ORKPS",26,0)=" .S CNT=^TMP(""ORKA"",$J) F CNTX=1:1:CNT D"
^XTMP("XPDT",7811,"RTN","ORKPS",27,0)=" ..S ORSESS=$G(^TMP(""ORKA"",$J,CNTX))"
^XTMP("XPDT",7811,"RTN","ORKPS",28,0)=" ..Q:'$L(ORSESS)"
^XTMP("XPDT",7811,"RTN","ORKPS",29,0)=" ..S ORPSPKG=$P(ORSESS,""|"",2)"
^XTMP("XPDT",7811,"RTN","ORKPS",30,0)=" ..Q:'$L(ORPSPKG)"
^XTMP("XPDT",7811,"RTN","ORKPS",31,0)=" ..Q:$E(ORPSPKG,1,2)'=""PS"""
^XTMP("XPDT",7811,"RTN","ORKPS",32,0)=" ..S ORSNUM=$P(ORSESS,""|"",5)"
^XTMP("XPDT",7811,"RTN","ORKPS",33,0)=" ..S ORKOI=$P(ORSESS,""|"")"
^XTMP("XPDT",7811,"RTN","ORKPS",34,0)=" ..;quit if same order/oi:"
^XTMP("XPDT",7811,"RTN","ORKPS",35,0)=" ..Q:((+$G(ORNUM)=+$G(ORSNUM))&(+$G(OI)=+$G(ORKOI)))"
^XTMP("XPDT",7811,"RTN","ORKPS",36,0)=" ..S:ORPSPKG=""PSJ"" ORPSPKG=""PSI"""
^XTMP("XPDT",7811,"RTN","ORKPS",37,0)=" ..S ORKDRUG=$P($P(ORSESS,""|"",3),U,4)"
^XTMP("XPDT",7811,"RTN","ORKPS",38,0)=" ..;"
^XTMP("XPDT",7811,"RTN","ORKPS",39,0)=" ..;if no disp drug selected get disp drug(s) from OI:"
^XTMP("XPDT",7811,"RTN","ORKPS",40,0)=" ..I +$G(ORKDRUG)<1,$L(ORKOI) D"
^XTMP("XPDT",7811,"RTN","ORKPS",41,0)=" ...I ""IOH""[$E(ORPSPKG,3) D OI2DD(.ORPSA,ORKOI,$E(ORPSPKG,3)) D"
^XTMP("XPDT",7811,"RTN","ORKPS",42,0)=" ....S ORKDD=0 F  S ORKDD=$O(ORPSA(ORKDD)) Q:'ORKDD  D"
^XTMP("XPDT",7811,"RTN","ORKPS",43,0)=" .....S ORKDRUG=+ORKDD"
^XTMP("XPDT",7811,"RTN","ORKPS",44,0)=" .....S:+$G(ORKDRUG)>0 ORKDRUGA(ORKDRUG_"";""_ORPSPKG_"";""_ORSNUM)=ORSNUM"
^XTMP("XPDT",7811,"RTN","ORKPS",45,0)=" ...K ORPSA  ;need to clean out between calls to OI2DD"
^XTMP("XPDT",7811,"RTN","ORKPS",46,0)=" ..;"
^XTMP("XPDT",7811,"RTN","ORKPS",47,0)=" ..Q:+$G(ORKDRUG)<1"
^XTMP("XPDT",7811,"RTN","ORKPS",48,0)=" ..;if dispense drug selected add to array:"
^XTMP("XPDT",7811,"RTN","ORKPS",49,0)=" ..S ORKDRUGA(ORKDRUG_"";""_ORPSPKG_"";""_ORSNUM)=ORSNUM"
^XTMP("XPDT",7811,"RTN","ORKPS",50,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORKPS",51,0)=" ;get unsigned medication orders:"
^XTMP("XPDT",7811,"RTN","ORKPS",52,0)=" S HOR=0,SEQ=0"
^XTMP("XPDT",7811,"RTN","ORKPS",53,0)=" S HOR=$O(^TMP(""ORR"",$J,HOR)) I +$G(HOR)>0 D"
^XTMP("XPDT",7811,"RTN","ORKPS",54,0)=" .F  S SEQ=$O(^TMP(""ORR"",$J,HOR,SEQ)) Q:+SEQ<1  D"
^XTMP("XPDT",7811,"RTN","ORKPS",55,0)=" ..S ORKORN=+$P(^TMP(""ORR"",$J,HOR,SEQ),U),DUPORN=0"
^XTMP("XPDT",7811,"RTN","ORKPS",56,0)=" ..Q:+$G(ORKORN)<1"
^XTMP("XPDT",7811,"RTN","ORKPS",57,0)=" ..Q:+ORKORN=+ORNUM"
^XTMP("XPDT",7811,"RTN","ORKPS",58,0)=" ..Q:$P(^OR(100,+ORKORN,8,$P(^OR(100,+ORKORN,8,0),U,3),0),U,2)=""DC"""
^XTMP("XPDT",7811,"RTN","ORKPS",59,0)=" ..Q:$P(^ORD(100.01,$P(^OR(100,+ORKORN,3),U,3),0),U)=""DISCONTINUED"""
^XTMP("XPDT",7811,"RTN","ORKPS",60,0)=" ..S ORKDRUG=$$VALUE^ORCSAVE2(+ORKORN,""DRUG"") ;get disp drug for order"
^XTMP("XPDT",7811,"RTN","ORKPS",61,0)=" ..;only process vs. unsigned med order if disp drug is assoc w/order:"
^XTMP("XPDT",7811,"RTN","ORKPS",62,0)=" ..Q:+$G(ORKDRUG)<1"
^XTMP("XPDT",7811,"RTN","ORKPS",63,0)=" ..S ORPSPKG=$$DGRX^ORQOR2(+ORKORN)"
^XTMP("XPDT",7811,"RTN","ORKPS",64,0)=" ..S ORPSPKG=$S(ORPSPKG=""UNIT DOSE MEDICATIONS"":""PSI"",ORPSPKG=""OUTPATIENT MEDICATIONS"":""PSO"",ORPSPKG=""IV MEDICATIONS"":""PSIV"",ORPSPKG=""NON-VA MEDICATIONS"":""PSH"",1:"""")"
^XTMP("XPDT",7811,"RTN","ORKPS",65,0)=" ..S DUPX="""" F  S DUPX=$O(ORKDRUGA(DUPX)) Q:'DUPX!(DUPORN=1)  D"
^XTMP("XPDT",7811,"RTN","ORKPS",66,0)=" ...S:ORKORN=ORKDRUGA(DUPX) DUPORN=1"
^XTMP("XPDT",7811,"RTN","ORKPS",67,0)=" ..Q:DUPORN=1  ;quit if already processed drug order"
^XTMP("XPDT",7811,"RTN","ORKPS",68,0)=" ..S ORKDRUGA(+ORKDRUG_"";""_ORPSPKG_"";""_ORKORN)=ORKORN"
^XTMP("XPDT",7811,"RTN","ORKPS",69,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORKPS",70,0)=" K ^TMP($J,""DI""),^TMP($J,""DD""),^TMP($J,""DC"")"
^XTMP("XPDT",7811,"RTN","ORKPS",71,0)=" I $D(ORKDRUGA) D DRGCHK^PSOORDRG(DFN,MED,.ORKDRUGA)"
^XTMP("XPDT",7811,"RTN","ORKPS",72,0)=" ;I '$D(ORKDRUGA) D EN^PSOORDRG(DFN,MED)"
^XTMP("XPDT",7811,"RTN","ORKPS",73,0)=" D PROCESS^ORKPS1(OI,ORDFN,ORKDG)"
^XTMP("XPDT",7811,"RTN","ORKPS",74,0)=" K ^TMP($J,""DI""),^TMP($J,""DD""),^TMP($J,""DC"")"
^XTMP("XPDT",7811,"RTN","ORKPS",75,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORKPS",76,0)="TAKEMED(ORKDFN,ORKMED) ;extrinsic function returns med orderable item if any"
^XTMP("XPDT",7811,"RTN","ORKPS",77,0)=" ;active med patient is taking contains any piece of ORKMED"
^XTMP("XPDT",7811,"RTN","ORKPS",78,0)=" ;ORKDFN   patient DFN"
^XTMP("XPDT",7811,"RTN","ORKPS",79,0)=" ;ORKMED   meds to check vs. active med list in format MED1^MED2^MED3..."
^XTMP("XPDT",7811,"RTN","ORKPS",80,0)=" Q:'$L($G(ORKDFN)) ""0^Patient not identified."""
^XTMP("XPDT",7811,"RTN","ORKPS",81,0)=" Q:'$L($G(ORKMED)) ""0^Medication not identified."""
^XTMP("XPDT",7811,"RTN","ORKPS",82,0)=" N ORKARX,ORKY,ORI,ORJ,ORCNT,ORKMEDP,ORKRSLT"
^XTMP("XPDT",7811,"RTN","ORKPS",83,0)=" D LIST^ORQQPS(.ORKY,ORKDFN,"""","""")"
^XTMP("XPDT",7811,"RTN","ORKPS",84,0)=" Q:$P(ORKY(1),U)="""" ""0^No active meds found."""
^XTMP("XPDT",7811,"RTN","ORKPS",85,0)=" S ORKRSLT=""0^No matching meds found."""
^XTMP("XPDT",7811,"RTN","ORKPS",86,0)=" S ORCNT=$L(ORKMED,U)"
^XTMP("XPDT",7811,"RTN","ORKPS",87,0)=" S ORI=0 F  S ORI=$O(ORKY(ORI)) Q:ORI<1  D"
^XTMP("XPDT",7811,"RTN","ORKPS",88,0)=" .S ORKARX=$P(ORKY(ORI),U,2)"
^XTMP("XPDT",7811,"RTN","ORKPS",89,0)=" .F ORJ=1:1:ORCNT S ORKMEDP=$P(ORKMED,U,ORJ) D"
^XTMP("XPDT",7811,"RTN","ORKPS",90,0)=" ..I $L(ORKMEDP),($$UP^XLFSTR(ORKARX)[ORKMEDP) S ORKRSLT=""1^""_ORKARX ;DJE/VM *316 use uppercase in comparison"
^XTMP("XPDT",7811,"RTN","ORKPS",91,0)=" Q ORKRSLT"
^XTMP("XPDT",7811,"RTN","ORKPS",92,0)="SOLUT(OI) ;extrinsic function returns 1 (true) if the orderable item is"
^XTMP("XPDT",7811,"RTN","ORKPS",93,0)=" ; a solution (IV Base)"
^XTMP("XPDT",7811,"RTN","ORKPS",94,0)=" Q:+$G(OI)<1 """""
^XTMP("XPDT",7811,"RTN","ORKPS",95,0)=" N OITEXT"
^XTMP("XPDT",7811,"RTN","ORKPS",96,0)=" S OITEXT=$G(^ORD(101.43,OI,0))"
^XTMP("XPDT",7811,"RTN","ORKPS",97,0)=" Q:'$L(OITEXT) """""
^XTMP("XPDT",7811,"RTN","ORKPS",98,0)=" S OITEXT=$P(OITEXT,U)"
^XTMP("XPDT",7811,"RTN","ORKPS",99,0)=" Q:$D(^ORD(101.43,""S.IVB RX"",OITEXT)) 1"
^XTMP("XPDT",7811,"RTN","ORKPS",100,0)=" Q """""
^XTMP("XPDT",7811,"RTN","ORKPS",101,0)="POLYRX(DFN) ;extrins funct rtns 1 if patient exceeds polypharmacy, 0 if not"
^XTMP("XPDT",7811,"RTN","ORKPS",102,0)=" N ORSLT,ORENT,ORLOC,ORPAR,ORMEDS"
^XTMP("XPDT",7811,"RTN","ORKPS",103,0)=" S ORSLT=0"
^XTMP("XPDT",7811,"RTN","ORKPS",104,0)=" Q:'$L(DFN) ORSLT"
^XTMP("XPDT",7811,"RTN","ORKPS",105,0)=" S VA200="""" D OERR^VADPT"
^XTMP("XPDT",7811,"RTN","ORKPS",106,0)=" S ORLOC=+$G(^DIC(42,+VAIN(4),44))"
^XTMP("XPDT",7811,"RTN","ORKPS",107,0)=" K VA200,VAIN"
^XTMP("XPDT",7811,"RTN","ORKPS",108,0)=" S ORENT=+$G(ORLOC)_"";SC(^DIV^SYS^PKG"""
^XTMP("XPDT",7811,"RTN","ORKPS",109,0)=" S ORPAR=$$GET^XPAR(ORENT,""ORK POLYPHARMACY"",1,""I"")"
^XTMP("XPDT",7811,"RTN","ORKPS",110,0)=" S ORMEDS=$$NUMRX(DFN)"
^XTMP("XPDT",7811,"RTN","ORKPS",111,0)=" I $G(ORMEDS)>$G(ORPAR) S ORSLT=1"
^XTMP("XPDT",7811,"RTN","ORKPS",112,0)=" Q ORSLT"
^XTMP("XPDT",7811,"RTN","ORKPS",113,0)="GLCREAT(DFN) ;extrinsic function returns patient's (DFN) most recent serum"
^XTMP("XPDT",7811,"RTN","ORKPS",114,0)=" ; creatinine within # of days from parameter ORK GLUCOPHAGE CREATININE"
^XTMP("XPDT",7811,"RTN","ORKPS",115,0)=" ; results format: test id^result units flag ref range collect d/t^result"
^XTMP("XPDT",7811,"RTN","ORKPS",116,0)=" ; used by order check GLUCOPHAGE-LAB RESULTS"
^XTMP("XPDT",7811,"RTN","ORKPS",117,0)=" N ORLOC,ORPAR,ORDAYS"
^XTMP("XPDT",7811,"RTN","ORKPS",118,0)=" N BDT,CDT,ORY,ORX,ORZ,TEST,ORI,ORJ,CREARSLT,LABFILE,SPECFILE,SPECIMEN"
^XTMP("XPDT",7811,"RTN","ORKPS",119,0)=" Q:'$L(DFN) ""0^"""
^XTMP("XPDT",7811,"RTN","ORKPS",120,0)=" S ORDAYS=$$GCDAYS(DFN)"
^XTMP("XPDT",7811,"RTN","ORKPS",121,0)=" Q:'$L(ORDAYS) ""0^"""
^XTMP("XPDT",7811,"RTN","ORKPS",122,0)=" D NOW^%DTC"
^XTMP("XPDT",7811,"RTN","ORKPS",123,0)=" S BDT=$$FMADD^XLFDT(%,""-""_ORDAYS,"""","""","""")"
^XTMP("XPDT",7811,"RTN","ORKPS",124,0)=" K %"
^XTMP("XPDT",7811,"RTN","ORKPS",125,0)=" Q:'$L($G(BDT)) ""0^"""
^XTMP("XPDT",7811,"RTN","ORKPS",126,0)=" S LABFILE=$$TERMLKUP^ORB31(.ORY,""SERUM CREATININE"")"
^XTMP("XPDT",7811,"RTN","ORKPS",127,0)=" Q:'$D(ORY) ""0^"" ;no link between SERUM CREATININE and local lab test"
^XTMP("XPDT",7811,"RTN","ORKPS",128,0)=" Q:$G(LABFILE)'=60 ""0^"""
^XTMP("XPDT",7811,"RTN","ORKPS",129,0)=" S SPECFILE=$$TERMLKUP^ORB31(.ORX,""SERUM SPECIMEN"")"
^XTMP("XPDT",7811,"RTN","ORKPS",130,0)=" Q:'$D(ORX) ""0^"" ;no link between SERUM SPECIMEN and local specimen"
^XTMP("XPDT",7811,"RTN","ORKPS",131,0)=" Q:$G(SPECFILE)'=61 ""0^"""
^XTMP("XPDT",7811,"RTN","ORKPS",132,0)=" F ORI=1:1:ORY I +$G(CREARSLT)<1 D"
^XTMP("XPDT",7811,"RTN","ORKPS",133,0)=" .S TEST=$P(ORY(ORI),U)"
^XTMP("XPDT",7811,"RTN","ORKPS",134,0)=" .Q:+$G(TEST)<1"
^XTMP("XPDT",7811,"RTN","ORKPS",135,0)=" .F ORJ=1:1:ORX I +$G(CREARSLT)<1 D"
^XTMP("XPDT",7811,"RTN","ORKPS",136,0)=" ..S SPECIMEN=$P(ORX(ORJ),U)"
^XTMP("XPDT",7811,"RTN","ORKPS",137,0)=" ..Q:+$G(SPECIMEN)<1"
^XTMP("XPDT",7811,"RTN","ORKPS",138,0)=" ..S ORZ=$$LOCL^ORQQLR1(DFN,TEST,SPECIMEN)"
^XTMP("XPDT",7811,"RTN","ORKPS",139,0)=" ..Q:'$L($G(ORZ))"
^XTMP("XPDT",7811,"RTN","ORKPS",140,0)=" ..S CDT=$P(ORZ,U,7)"
^XTMP("XPDT",7811,"RTN","ORKPS",141,0)=" ..I CDT'<BDT S CREARSLT=1"
^XTMP("XPDT",7811,"RTN","ORKPS",142,0)=" Q:+$G(CREARSLT)<1 ""0^"""
^XTMP("XPDT",7811,"RTN","ORKPS",143,0)=" Q $P(ORZ,U)_U_$P(ORZ,U,3)_"" ""_$P(ORZ,U,4)_"" ""_$P(ORZ,U,5)_"" (""_$P(ORZ,U,6)_"")  ""_$$FMTE^XLFDT(CDT,""2P"")_U_$P(ORZ,U,3)"
^XTMP("XPDT",7811,"RTN","ORKPS",144,0)="GCDAYS(DFN) ;extrinsic function to return number of days to look for "
^XTMP("XPDT",7811,"RTN","ORKPS",145,0)=" ; glucophage serum creatinine result"
^XTMP("XPDT",7811,"RTN","ORKPS",146,0)=" Q:'$L(DFN) """""
^XTMP("XPDT",7811,"RTN","ORKPS",147,0)=" N ORLOC,ORENT,ORDAYS"
^XTMP("XPDT",7811,"RTN","ORKPS",148,0)=" ;get patient's location flag (INPATIENT ONLY - outpt locations cannot be"
^XTMP("XPDT",7811,"RTN","ORKPS",149,0)=" ;reliably determined, and many simultaneous outpt locations can occur):"
^XTMP("XPDT",7811,"RTN","ORKPS",150,0)=" S VA200="""" D OERR^VADPT"
^XTMP("XPDT",7811,"RTN","ORKPS",151,0)=" S ORLOC=+$G(^DIC(42,+VAIN(4),44))"
^XTMP("XPDT",7811,"RTN","ORKPS",152,0)=" K VA200,VAIN"
^XTMP("XPDT",7811,"RTN","ORKPS",153,0)=" S ORENT=+$G(ORLOC)_"";SC(^DIV^SYS^PKG"""
^XTMP("XPDT",7811,"RTN","ORKPS",154,0)=" S ORDAYS=$$GET^XPAR(ORENT,""ORK GLUCOPHAGE CREATININE"",1,""I"")"
^XTMP("XPDT",7811,"RTN","ORKPS",155,0)=" Q:$L(ORDAYS) ORDAYS"
^XTMP("XPDT",7811,"RTN","ORKPS",156,0)=" Q """""
^XTMP("XPDT",7811,"RTN","ORKPS",157,0)="SUPPLY(OI) ;extrinsic function returns 1 (true) if the orderable item is"
^XTMP("XPDT",7811,"RTN","ORKPS",158,0)=" ; a supply"
^XTMP("XPDT",7811,"RTN","ORKPS",159,0)=" Q:+$G(OI)<1 """""
^XTMP("XPDT",7811,"RTN","ORKPS",160,0)=" N OITEXT"
^XTMP("XPDT",7811,"RTN","ORKPS",161,0)=" S OITEXT=$G(^ORD(101.43,OI,0))"
^XTMP("XPDT",7811,"RTN","ORKPS",162,0)=" Q:'$L(OITEXT) """""
^XTMP("XPDT",7811,"RTN","ORKPS",163,0)=" S OITEXT=$P(OITEXT,U)"
^XTMP("XPDT",7811,"RTN","ORKPS",164,0)=" Q:$D(^ORD(101.43,""S.SPLY"",OITEXT)) 1"
^XTMP("XPDT",7811,"RTN","ORKPS",165,0)=" Q """""
^XTMP("XPDT",7811,"RTN","ORKPS",166,0)="NUMRX(DFN) ;extrinsic funct returns number of active meds patient is taking"
^XTMP("XPDT",7811,"RTN","ORKPS",167,0)=" N NUMRX,ORPTYPE,ORX,ORY,ORS,ORNUM,ORPRENEW"
^XTMP("XPDT",7811,"RTN","ORKPS",168,0)=" S NUMRX=0"
^XTMP("XPDT",7811,"RTN","ORKPS",169,0)=" Q:+$G(DFN)<1 NUMRX"
^XTMP("XPDT",7811,"RTN","ORKPS",170,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORKPS",171,0)=" ;check to determine if inpatient or outpatient:"
^XTMP("XPDT",7811,"RTN","ORKPS",172,0)=" D ADM^VADPT2"
^XTMP("XPDT",7811,"RTN","ORKPS",173,0)=" S ORPTYPE=$S(+$G(VADMVT)>0:""I"",1:""O"")"
^XTMP("XPDT",7811,"RTN","ORKPS",174,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORKPS",175,0)=" K ^TMP(""PS"",$J)"
^XTMP("XPDT",7811,"RTN","ORKPS",176,0)=" D OCL^PSOORRL(DFN,"""","""")  ;if no date range, returns active meds for pt"
^XTMP("XPDT",7811,"RTN","ORKPS",177,0)=" N X"
^XTMP("XPDT",7811,"RTN","ORKPS",178,0)=" S X=0"
^XTMP("XPDT",7811,"RTN","ORKPS",179,0)=" F  S X=$O(^TMP(""PS"",$J,X)) Q:X<1  D"
^XTMP("XPDT",7811,"RTN","ORKPS",180,0)=" .S ORX=$G(^TMP(""PS"",$J,X,0))"
^XTMP("XPDT",7811,"RTN","ORKPS",181,0)=" .S ORY=$P(ORX,U)"
^XTMP("XPDT",7811,"RTN","ORKPS",182,0)=" .S ORNUM=$P(ORX,U,8) ;order entry order number"
^XTMP("XPDT",7811,"RTN","ORKPS",183,0)=" .S ORS=$P(ORX,U,9) ;medication status from pharmacy"
^XTMP("XPDT",7811,"RTN","ORKPS",184,0)=" .S ORPRENEW=$P(ORX,U,14)  ;pending renewal flag (1: pending renewal)"
^XTMP("XPDT",7811,"RTN","ORKPS",185,0)=" .Q:+ORX<1"
^XTMP("XPDT",7811,"RTN","ORKPS",186,0)=" .Q:$P(ORY,"";"",2)'=ORPTYPE  ;quit if med is not pt type (inpt/outpt)"
^XTMP("XPDT",7811,"RTN","ORKPS",187,0)=" .;quit if status is a non-active type:"
^XTMP("XPDT",7811,"RTN","ORKPS",188,0)=" .Q:$G(ORS)=""EXPIRED"""
^XTMP("XPDT",7811,"RTN","ORKPS",189,0)=" .Q:$G(ORS)[""DISCONTINUE"""
^XTMP("XPDT",7811,"RTN","ORKPS",190,0)=" .Q:$G(ORS)=""DELETED"""
^XTMP("XPDT",7811,"RTN","ORKPS",191,0)=" .Q:+$G(ORPRENEW)>0"
^XTMP("XPDT",7811,"RTN","ORKPS",192,0)=" .Q:$$SUPPLY($$OI^ORQOR2(ORNUM))=1  ;quit if a supply"
^XTMP("XPDT",7811,"RTN","ORKPS",193,0)=" .S NUMRX=NUMRX+1"
^XTMP("XPDT",7811,"RTN","ORKPS",194,0)=" K ^TMP(""PS"",$J)"
^XTMP("XPDT",7811,"RTN","ORKPS",195,0)=" Q NUMRX"
^XTMP("XPDT",7811,"RTN","ORKPS",196,0)="OI2DD(ORPSA,OROI,ORPSPKG)       ;rtn dispense drugs for a PS OI"
^XTMP("XPDT",7811,"RTN","ORKPS",197,0)=" N PSOI"
^XTMP("XPDT",7811,"RTN","ORKPS",198,0)=" Q:'$D(^ORD(101.43,OROI,0))"
^XTMP("XPDT",7811,"RTN","ORKPS",199,0)=" S PSOI=$P($P(^ORD(101.43,OROI,0),U,2),"";"")"
^XTMP("XPDT",7811,"RTN","ORKPS",200,0)=" Q:+$G(PSOI)<1"
^XTMP("XPDT",7811,"RTN","ORKPS",201,0)=" S:ORPSPKG=""H"" ORPSPKG=""X""  ;if non-va med need to pass api ""X"""
^XTMP("XPDT",7811,"RTN","ORKPS",202,0)=" D DRG^PSSUTIL1(.ORPSA,PSOI,ORPSPKG)"
^XTMP("XPDT",7811,"RTN","ORKPS",203,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3160")="0^5^B15754136^n/a"
^XTMP("XPDT",7811,"RTN","ORY3160",1,0)="ORY3160 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY3160",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY3160",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY3160",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY3160",6,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",7,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3160",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",9,0)="WARN(RTN,MSG,LINES) ;"
^XTMP("XPDT",7811,"RTN","ORY3160",10,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",11,0)=" Q:$G(OCXAUTO)"
^XTMP("XPDT",7811,"RTN","ORY3160",12,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",13,0)=" N DASH,LINE,NLINE,PLINE"
^XTMP("XPDT",7811,"RTN","ORY3160",14,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",15,0)=" S DASH="""",$P(DASH,""-"",(55-$L(MSG)-2))=""-"""
^XTMP("XPDT",7811,"RTN","ORY3160",16,0)=" W !!,""--------------"",MSG,DASH"
^XTMP("XPDT",7811,"RTN","ORY3160",17,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",18,0)=" W !,RTN,?10,""[VMPDEV20.FO-BAYPINES.MED.VA.GOV] -> ["",$$NETNAME^OCXSEND,""] Line"""
^XTMP("XPDT",7811,"RTN","ORY3160",19,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",20,0)=" I $O(LINES($O(LINES(0)))) W ""s: """
^XTMP("XPDT",7811,"RTN","ORY3160",21,0)=" E  W "": """
^XTMP("XPDT",7811,"RTN","ORY3160",22,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",23,0)=" S LINE=0 F  S LINE=$O(LINES(LINE)) Q:'LINE  D"
^XTMP("XPDT",7811,"RTN","ORY3160",24,0)=" .W:($X>60) !,?40"
^XTMP("XPDT",7811,"RTN","ORY3160",25,0)=" .S NLINE=LINE F  S PLINE=NLINE,NLINE=$O(LINES(NLINE)) Q:(NLINE-PLINE-1)"
^XTMP("XPDT",7811,"RTN","ORY3160",26,0)=" .I (PLINE=LINE) W "" "",LINE"
^XTMP("XPDT",7811,"RTN","ORY3160",27,0)=" .E  W "" "",LINE,""-"",PLINE S LINE=PLINE"
^XTMP("XPDT",7811,"RTN","ORY3160",28,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",29,0)=" W ! Q"
^XTMP("XPDT",7811,"RTN","ORY3160",30,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",31,0)="TEXT(RTN,LINE) ;"
^XTMP("XPDT",7811,"RTN","ORY3160",32,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",33,0)=" N TEXT X ""S TEXT=$T(+""_(+LINE)_""^""_RTN_"")"" Q TEXT"
^XTMP("XPDT",7811,"RTN","ORY3160",34,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",35,0)="HEADER ;"
^XTMP("XPDT",7811,"RTN","ORY3160",36,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",37,0)=" W !,"" Created: NOV 17,2009 at 13:36  at  VMPDEV20.FO-BAYPINES.MED.VA.GOV"""
^XTMP("XPDT",7811,"RTN","ORY3160",38,0)=" W !,"" Current Date: "",$$NOW,""  at  "",$$NETNAME^OCXSEND,!!"
^XTMP("XPDT",7811,"RTN","ORY3160",39,0)=" S LASTFILE=0 K ^TMP(""OCXRULE"",$J)"
^XTMP("XPDT",7811,"RTN","ORY3160",40,0)=" S ^TMP(""OCXRULE"",$J)=($P($H,"","",2)+($H*86400)+(1*60*60))_"" <- ^TMP ENTRY EXPIRATION DATE FOR ^OCXOPURG"""
^XTMP("XPDT",7811,"RTN","ORY3160",41,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3160",42,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",43,0)="GETFILE(FILE,RECNAME,ARRAY) ;"
^XTMP("XPDT",7811,"RTN","ORY3160",44,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",45,0)=" N CHECK,GLNEXT,GLREF,LINES,REC,DD,FLD"
^XTMP("XPDT",7811,"RTN","ORY3160",46,0)=" S REC=$$LOOKUP(FILE,RECNAME)"
^XTMP("XPDT",7811,"RTN","ORY3160",47,0)=" I 'REC W !!,$$FILENAME^OCXSENDD(FILE),"": "",RECNAME Q 0"
^XTMP("XPDT",7811,"RTN","ORY3160",48,0)=" I (REC=-1) W !!,$$FILENAME^OCXSENDD(FILE),"": "",RECNAME,""  duplicate local entries."",! Q 0"
^XTMP("XPDT",7811,"RTN","ORY3160",49,0)=" I (REC=-2) W !!,$$FILENAME^OCXSENDD(FILE),"" ("",FILE,"") local file not found."" W ! Q:$$PAUSE -10 Q REC"
^XTMP("XPDT",7811,"RTN","ORY3160",50,0)=" I (REC<0) W !!,$$FILENAME^OCXSENDD(FILE),"": "",RECNAME,""  unknown lookup error."" W ! Q:$$PAUSE -10 Q REC"
^XTMP("XPDT",7811,"RTN","ORY3160",51,0)=" I (REC>0) D"
^XTMP("XPDT",7811,"RTN","ORY3160",52,0)=" .S CHECK=0,LINES=0"
^XTMP("XPDT",7811,"RTN","ORY3160",53,0)=" .D GETREC($$FILE^OCXSENDD(FILE,""GLOBAL NAME""),""ARRAY("",REC,.ARRAY)"
^XTMP("XPDT",7811,"RTN","ORY3160",54,0)=" .S GLREF=""ARRAY"" F  S GLREF=$Q(@GLREF) Q:'$L(GLREF)  Q:'($E(GLREF,1,6)=""ARRAY("")  K:'$L(@GLREF) @GLREF"
^XTMP("XPDT",7811,"RTN","ORY3160",55,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",56,0)=" Q REC"
^XTMP("XPDT",7811,"RTN","ORY3160",57,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",58,0)="LKUPARRY(DD,KEY,ARRAY) ;"
^XTMP("XPDT",7811,"RTN","ORY3160",59,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",60,0)=" N D0 S D0=0 F  S D0=$O(ARRAY(DD,D0)) Q:'D0  Q:($G(ARRAY(DD,D0,.01,""E""))=KEY)"
^XTMP("XPDT",7811,"RTN","ORY3160",61,0)=" Q D0"
^XTMP("XPDT",7811,"RTN","ORY3160",62,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",63,0)="LOOKUP(FILE,KEY) ;"
^XTMP("XPDT",7811,"RTN","ORY3160",64,0)=" I $O(^TMP(""OCXRULE"",$J,""B"",FILE,KEY,0)) Q 0"
^XTMP("XPDT",7811,"RTN","ORY3160",65,0)=" N RECNAM,REC,D0,CNT,SHORT S (REC,CNT)=0"
^XTMP("XPDT",7811,"RTN","ORY3160",66,0)=" S GL=$$FILE^OCXSENDD(FILE,""GLOBAL NAME"") Q:'$L(GL) -2 S GL=$E(GL,1,$L(GL)-1)_"")"""
^XTMP("XPDT",7811,"RTN","ORY3160",67,0)=" S SHORT=$E(KEY,1,30),RECNAM=SHORT D  F  S RECNAM=$O(@GL@(""B"",RECNAM)) Q:'$L(RECNAM)  Q:'($E(RECNAM,1,$L(SHORT))=SHORT)  D"
^XTMP("XPDT",7811,"RTN","ORY3160",68,0)=" .S D0=0 F  S D0=$O(@GL@(""B"",RECNAM,D0)) Q:'D0  I ($P($G(@GL@(D0,0)),U,1)=KEY) S CNT=CNT+1,REC=D0_U_RECNAME"
^XTMP("XPDT",7811,"RTN","ORY3160",69,0)=" Q:(CNT>1) -1"
^XTMP("XPDT",7811,"RTN","ORY3160",70,0)=" S:$L($P(REC,U,2)) ^TMP(""OCXRULE"",$J,""A"",FILE,$P(REC,U,2))="""""
^XTMP("XPDT",7811,"RTN","ORY3160",71,0)=" Q +REC"
^XTMP("XPDT",7811,"RTN","ORY3160",72,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",73,0)="GETREC(GL,PATH,D0,REM) ;"
^XTMP("XPDT",7811,"RTN","ORY3160",74,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",75,0)=" Q:'($P($G(@(GL_""0)"")),U,2))"
^XTMP("XPDT",7811,"RTN","ORY3160",76,0)=" N S1,DATA,DD"
^XTMP("XPDT",7811,"RTN","ORY3160",77,0)=" S DATA="""" D DIQ(GL,D0,.DATA)"
^XTMP("XPDT",7811,"RTN","ORY3160",78,0)=" S DD=$O(DATA(0)) Q:'DD"
^XTMP("XPDT",7811,"RTN","ORY3160",79,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",80,0)=" I $L($$FILE^OCXSENDD(DD,""NAME"")) S PATH=PATH_""""""""_DD_"":""_D0_"""""""""
^XTMP("XPDT",7811,"RTN","ORY3160",81,0)=" I '$L($$FILE^OCXSENDD(DD,""NAME"")) S PATH=PATH_"",""""""_DD_"":""_D0_"""""""""
^XTMP("XPDT",7811,"RTN","ORY3160",82,0)=" M @(PATH_"")"")=DATA(DD,D0)"
^XTMP("XPDT",7811,"RTN","ORY3160",83,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",84,0)=" S S1="""" F  S S1=$O(@(GL_D0_"",""_$$SUB(S1)_"")"")) Q:'$L(S1)  I ($D(@(GL_D0_"",""_$$SUB(S1)_"")""))>3) D"
^XTMP("XPDT",7811,"RTN","ORY3160",85,0)=" .N D1,GLREF S GLREF=GL_D0_"",""_$$SUB(S1)_"","""
^XTMP("XPDT",7811,"RTN","ORY3160",86,0)=" .S D1=0 F  S D1=$O(@(GLREF_D1_"")"")) Q:'D1  D GETREC(GLREF,PATH,D1,.REM)"
^XTMP("XPDT",7811,"RTN","ORY3160",87,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",88,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3160",89,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",90,0)="SUB(X) Q:'(X=+X) """"""""_X_"""""""" Q X"
^XTMP("XPDT",7811,"RTN","ORY3160",91,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",92,0)="DIQ(DIC,DA,OCXARY) ;"
^XTMP("XPDT",7811,"RTN","ORY3160",93,0)=" N DR,DIQ S DR="".01:99999"",DIQ=""OCXARY("",DIQ(0)=""EN"" D EN^DIQ1"
^XTMP("XPDT",7811,"RTN","ORY3160",94,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3160",95,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",96,0)="PAUSE() W ""  Press Enter "" R X:DTIME W ! Q (X[U)"
^XTMP("XPDT",7811,"RTN","ORY3160",97,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3160",98,0)="NOW() N X,Y,%DT S X=""N"",%DT=""T"" D ^%DT S Y=$$DATE^OCXSENDD(Y) S:(Y[""@"") Y=$P(Y,""@"",1)_"" at ""_$P(Y,""@"",2) Q Y"
^XTMP("XPDT",7811,"RTN","ORY3160",99,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31601")="0^6^B71971238^n/a"
^XTMP("XPDT",7811,"RTN","ORY31601",1,0)="ORY31601 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY31601",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY31601",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY31601",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31601",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY31601",6,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31601",7,0)=" D DOT^ORY316ES"
^XTMP("XPDT",7811,"RTN","ORY31601",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31601",9,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31601",10,0)=" K REMOTE,LOCAL,OPCODE,REF"
^XTMP("XPDT",7811,"RTN","ORY31601",11,0)=" F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),"";"",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY31601",12,0)=" .S ^TMP(""OCXRULE"",$J,$O(^TMP(""OCXRULE"",$J,""A""),-1)+1)=TEXT"
^XTMP("XPDT",7811,"RTN","ORY31601",13,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31601",14,0)=" G ^ORY31602"
^XTMP("XPDT",7811,"RTN","ORY31601",15,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31601",16,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY31601",17,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31601",18,0)="DATA ;"
^XTMP("XPDT",7811,"RTN","ORY31601",19,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31601",20,0)=" ;;ROOT^OCXS(860.2,0)^ORDER CHECK RULE^860.2I"
^XTMP("XPDT",7811,"RTN","ORY31601",21,0)=" ;;ROOT^OCXS(860.3,0)^ORDER CHECK ELEMENT^860.3"
^XTMP("XPDT",7811,"RTN","ORY31601",22,0)=" ;;ROOT^OCXS(860.4,0)^ORDER CHECK DATA FIELD^860.4I"
^XTMP("XPDT",7811,"RTN","ORY31601",23,0)=" ;;ROOT^OCXS(860.5,0)^ORDER CHECK DATA SOURCE^860.5"
^XTMP("XPDT",7811,"RTN","ORY31601",24,0)=" ;;ROOT^OCXS(860.6,0)^ORDER CHECK DATA CONTEXT^860.6"
^XTMP("XPDT",7811,"RTN","ORY31601",25,0)=" ;;ROOT^OCXS(860.8,0)^ORDER CHECK COMPILER FUNCTIONS^860.8"
^XTMP("XPDT",7811,"RTN","ORY31601",26,0)=" ;;ROOT^OCXS(860.9,0)^ORDER CHECK NATIONAL TERM^860.9"
^XTMP("XPDT",7811,"RTN","ORY31601",27,0)=" ;;ROOT^OCXS(863,0)^OCX MDD CLASS^863"
^XTMP("XPDT",7811,"RTN","ORY31601",28,0)=" ;;ROOT^OCXS(863.1,0)^OCX MDD APPLICATION^863.1"
^XTMP("XPDT",7811,"RTN","ORY31601",29,0)=" ;;ROOT^OCXS(863.2,0)^OCX MDD SUBJECT^863.2"
^XTMP("XPDT",7811,"RTN","ORY31601",30,0)=" ;;ROOT^OCXS(863.3,0)^OCX MDD LINK^863.3I"
^XTMP("XPDT",7811,"RTN","ORY31601",31,0)=" ;;ROOT^OCXS(863.4,0)^OCX MDD ATTRIBUTE^863.4"
^XTMP("XPDT",7811,"RTN","ORY31601",32,0)=" ;;ROOT^OCXS(863.5,0)^OCX MDD VALUES^863.5"
^XTMP("XPDT",7811,"RTN","ORY31601",33,0)=" ;;ROOT^OCXS(863.6,0)^OCX MDD METHOD^863.6"
^XTMP("XPDT",7811,"RTN","ORY31601",34,0)=" ;;ROOT^OCXS(863.7,0)^OCX MDD PUBLIC FUNCTION^863.7"
^XTMP("XPDT",7811,"RTN","ORY31601",35,0)=" ;;ROOT^OCXS(863.8,0)^OCX MDD PARAMETER^863.8"
^XTMP("XPDT",7811,"RTN","ORY31601",36,0)=" ;;ROOT^OCXS(863.9,0)^OCX MDD CONDITION/FUNCTION^863.9I"
^XTMP("XPDT",7811,"RTN","ORY31601",37,0)=" ;;ROOT^OCXS(864,0)^OCX MDD SITE PREFERENCES^864P"
^XTMP("XPDT",7811,"RTN","ORY31601",38,0)=" ;;ROOT^OCXS(864.1,0)^OCX MDD DATATYPE^864.1"
^XTMP("XPDT",7811,"RTN","ORY31601",39,0)=" ;;ROOT^OCXD(860.1,0)^ORDER CHECK PATIENT ACTIVE DATA^860.1P"
^XTMP("XPDT",7811,"RTN","ORY31601",40,0)=" ;;ROOT^OCXD(860.7,0)^ORDER CHECK PATIENT RULE EVENT^860.7P"
^XTMP("XPDT",7811,"RTN","ORY31601",41,0)=" ;;ROOT^OCXD(861,0)^ORDER CHECK RAW DATA LOG^861"
^XTMP("XPDT",7811,"RTN","ORY31601",42,0)=" ;;SOF^863.8  OCX MDD PARAMETER"
^XTMP("XPDT",7811,"RTN","ORY31601",43,0)=" ;;KEY^863.8:^COMPARISON VALUE"
^XTMP("XPDT",7811,"RTN","ORY31601",44,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",45,0)=" ;;D^COMPARISON VALUE"
^XTMP("XPDT",7811,"RTN","ORY31601",46,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",47,0)=" ;;D^CVAL"
^XTMP("XPDT",7811,"RTN","ORY31601",48,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31601",49,0)=" ;;D^ "
^XTMP("XPDT",7811,"RTN","ORY31601",50,0)=" ;;R^""863.8:"",1,2"
^XTMP("XPDT",7811,"RTN","ORY31601",51,0)=" ;;D^   This is a value to be compared with PRIMARY DATA FIELD"
^XTMP("XPDT",7811,"RTN","ORY31601",52,0)=" ;;R^""863.8:"",1,3"
^XTMP("XPDT",7811,"RTN","ORY31601",53,0)=" ;;D^ in a truth conditional."
^XTMP("XPDT",7811,"RTN","ORY31601",54,0)=" ;;R^""863.8:"",1,4"
^XTMP("XPDT",7811,"RTN","ORY31601",55,0)=" ;;D^ "
^XTMP("XPDT",7811,"RTN","ORY31601",56,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",57,0)=" ;;KEY^863.8:^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",58,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",59,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",60,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",61,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",62,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31601",63,0)=" ;;D^An MDD data type; i.e., an entry in the OCX MDD DATA TYPE file."
^XTMP("XPDT",7811,"RTN","ORY31601",64,0)=" ;;R^""863.8:"",""863.84:6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",65,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",66,0)=" ;;R^""863.8:"",""863.84:6"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",67,0)=" ;;D^Enter the datatype"
^XTMP("XPDT",7811,"RTN","ORY31601",68,0)=" ;;R^""863.8:"",""863.84:7"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",69,0)=" ;;D^DIC"
^XTMP("XPDT",7811,"RTN","ORY31601",70,0)=" ;;R^""863.8:"",""863.84:7"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",71,0)=" ;;D^864.1"
^XTMP("XPDT",7811,"RTN","ORY31601",72,0)=" ;;R^""863.8:"",""863.84:8"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",73,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",74,0)=" ;;R^""863.8:"",""863.84:8"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",75,0)=" ;;D^POINTER TO A FILEMAN FILE"
^XTMP("XPDT",7811,"RTN","ORY31601",76,0)=" ;;R^""863.8:"",""863.84:9"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",77,0)=" ;;D^DIC LOOKUP INDEX STRING"
^XTMP("XPDT",7811,"RTN","ORY31601",78,0)=" ;;R^""863.8:"",""863.84:9"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",79,0)=" ;;D^B^C"
^XTMP("XPDT",7811,"RTN","ORY31601",80,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",81,0)=" ;;KEY^863.8:^DIC"
^XTMP("XPDT",7811,"RTN","ORY31601",82,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",83,0)=" ;;D^DIC"
^XTMP("XPDT",7811,"RTN","ORY31601",84,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",85,0)=" ;;D^DIC"
^XTMP("XPDT",7811,"RTN","ORY31601",86,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31601",87,0)=" ;;D^An open reference used to specify the file in a DIC lookup"
^XTMP("XPDT",7811,"RTN","ORY31601",88,0)=" ;;R^""863.8:"",""863.84:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",89,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",90,0)=" ;;R^""863.8:"",""863.84:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",91,0)=" ;;D^POINTER TO A FILEMAN FILE"
^XTMP("XPDT",7811,"RTN","ORY31601",92,0)=" ;;R^""863.8:"",""863.84:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",93,0)=" ;;D^DIC"
^XTMP("XPDT",7811,"RTN","ORY31601",94,0)=" ;;R^""863.8:"",""863.84:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",95,0)=" ;;D^1"
^XTMP("XPDT",7811,"RTN","ORY31601",96,0)=" ;;R^""863.8:"",""863.84:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",97,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",98,0)=" ;;R^""863.8:"",""863.84:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",99,0)=" ;;D^Enter the name of the file you are pointing to"
^XTMP("XPDT",7811,"RTN","ORY31601",100,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",101,0)=" ;;KEY^863.8:^DIC LOOKUP INDEX STRING"
^XTMP("XPDT",7811,"RTN","ORY31601",102,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",103,0)=" ;;D^DIC LOOKUP INDEX STRING"
^XTMP("XPDT",7811,"RTN","ORY31601",104,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",105,0)=" ;;D^DICIX"
^XTMP("XPDT",7811,"RTN","ORY31601",106,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31601",107,0)=" ;;D^Contains the names of indices to be used in a DIC lookup in a comma"
^XTMP("XPDT",7811,"RTN","ORY31601",108,0)=" ;;R^""863.8:"",1,2"
^XTMP("XPDT",7811,"RTN","ORY31601",109,0)=" ;;D^delimited string."
^XTMP("XPDT",7811,"RTN","ORY31601",110,0)=" ;;R^""863.8:"",""863.84:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",111,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",112,0)=" ;;R^""863.8:"",""863.84:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",113,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31601",114,0)=" ;;R^""863.8:"",""863.84:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",115,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",116,0)=" ;;R^""863.8:"",""863.84:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",117,0)=" ;;D^Enter a DIC lookup index string"
^XTMP("XPDT",7811,"RTN","ORY31601",118,0)=" ;;R^""863.8:"",""863.84:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",119,0)=" ;;D^HELP MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31601",120,0)=" ;;R^""863.8:"",""863.84:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",121,0)=" ;;D^This is an '^' delimited string which contains the names of indices which are to be used in a DIC lookup; e.g., B^C^DOB."
^XTMP("XPDT",7811,"RTN","ORY31601",122,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",123,0)=" ;;KEY^863.8:^FILE"
^XTMP("XPDT",7811,"RTN","ORY31601",124,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",125,0)=" ;;D^FILE"
^XTMP("XPDT",7811,"RTN","ORY31601",126,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",127,0)=" ;;D^FILE"
^XTMP("XPDT",7811,"RTN","ORY31601",128,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31601",129,0)=" ;;D^The internal entry number of a file."
^XTMP("XPDT",7811,"RTN","ORY31601",130,0)=" ;;R^""863.8:"",""863.84:6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",131,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",132,0)=" ;;R^""863.8:"",""863.84:6"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",133,0)=" ;;D^File"
^XTMP("XPDT",7811,"RTN","ORY31601",134,0)=" ;;R^""863.8:"",""863.84:7"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",135,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",136,0)=" ;;R^""863.8:"",""863.84:7"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",137,0)=" ;;D^POINTER TO A FILEMAN FILE"
^XTMP("XPDT",7811,"RTN","ORY31601",138,0)=" ;;R^""863.8:"",""863.84:8"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",139,0)=" ;;D^DIC"
^XTMP("XPDT",7811,"RTN","ORY31601",140,0)=" ;;R^""863.8:"",""863.84:8"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",141,0)=" ;;D^1"
^XTMP("XPDT",7811,"RTN","ORY31601",142,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",143,0)=" ;;KEY^863.8:^FM MASK"
^XTMP("XPDT",7811,"RTN","ORY31601",144,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",145,0)=" ;;D^FM MASK"
^XTMP("XPDT",7811,"RTN","ORY31601",146,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",147,0)=" ;;D^FM MASK"
^XTMP("XPDT",7811,"RTN","ORY31601",148,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31601",149,0)=" ;;D^Tag^routine where code is located to parse the FM DD and override the parameter value"
^XTMP("XPDT",7811,"RTN","ORY31601",150,0)=" ;;R^""863.8:"",""863.84:4"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",151,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",152,0)=" ;;R^""863.8:"",""863.84:4"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",153,0)=" ;;D^Enter tag^routine where the FM MASK parser is located"
^XTMP("XPDT",7811,"RTN","ORY31601",154,0)=" ;;R^""863.8:"",""863.84:5"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",155,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",156,0)=" ;;R^""863.8:"",""863.84:5"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",157,0)=" ;;D^LINE TAG"
^XTMP("XPDT",7811,"RTN","ORY31601",158,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",159,0)=" ;;KEY^863.8:^FREE TEXT MAXIMUM LENGTH"
^XTMP("XPDT",7811,"RTN","ORY31601",160,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",161,0)=" ;;D^FREE TEXT MAXIMUM LENGTH"
^XTMP("XPDT",7811,"RTN","ORY31601",162,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",163,0)=" ;;D^FMAX"
^XTMP("XPDT",7811,"RTN","ORY31601",164,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31601",165,0)=" ;;D^Maximum string length allowed"
^XTMP("XPDT",7811,"RTN","ORY31601",166,0)=" ;;R^""863.8:"",2,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",167,0)=" ;;D^245"
^XTMP("XPDT",7811,"RTN","ORY31601",168,0)=" ;;R^""863.8:"",""863.84:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",169,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",170,0)=" ;;R^""863.8:"",""863.84:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",171,0)=" ;;D^Maximum text string length allowed"
^XTMP("XPDT",7811,"RTN","ORY31601",172,0)=" ;;R^""863.8:"",""863.84:4"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",173,0)=" ;;D^FM MASK"
^XTMP("XPDT",7811,"RTN","ORY31601",174,0)=" ;;R^""863.8:"",""863.84:4"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",175,0)=" ;;D^FMAX^OCXF6"
^XTMP("XPDT",7811,"RTN","ORY31601",176,0)=" ;;R^""863.8:"",""863.84:5"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",177,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",178,0)=" ;;R^""863.8:"",""863.84:5"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",179,0)=" ;;D^POSITIVE INTEGER"
^XTMP("XPDT",7811,"RTN","ORY31601",180,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",181,0)=" ;;KEY^863.8:^HELP MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31601",182,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",183,0)=" ;;D^HELP MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31601",184,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",185,0)=" ;;D^HELP"
^XTMP("XPDT",7811,"RTN","ORY31601",186,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31601",187,0)=" ;;D^A text string 1-250 characters long which overrides the Fileman help"
^XTMP("XPDT",7811,"RTN","ORY31601",188,0)=" ;;R^""863.8:"",1,2"
^XTMP("XPDT",7811,"RTN","ORY31601",189,0)=" ;;D^message."
^XTMP("XPDT",7811,"RTN","ORY31601",190,0)=" ;;R^""863.8:"",""863.84:10"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",191,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",192,0)=" ;;R^""863.8:"",""863.84:10"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",193,0)=" ;;D^Enter a brief help message"
^XTMP("XPDT",7811,"RTN","ORY31601",194,0)=" ;;R^""863.8:"",""863.84:8"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",195,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",196,0)=" ;;R^""863.8:"",""863.84:8"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",197,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31601",198,0)=" ;;R^""863.8:"",""863.84:9"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",199,0)=" ;;D^FM MASK"
^XTMP("XPDT",7811,"RTN","ORY31601",200,0)=" ;;R^""863.8:"",""863.84:9"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",201,0)=" ;;D^HELP^OCXF6"
^XTMP("XPDT",7811,"RTN","ORY31601",202,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",203,0)=" ;;KEY^863.8:^LOOP QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",204,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",205,0)=" ;;D^LOOP QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",206,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",207,0)=" ;;D^LOOP QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",208,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31601",209,0)=" ;;D^Alternate query used when repeated answers are required"
^XTMP("XPDT",7811,"RTN","ORY31601",210,0)=" ;;R^""863.8:"",""863.84:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",211,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",212,0)=" ;;R^""863.8:"",""863.84:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",213,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31601",214,0)=" ;;R^""863.8:"",""863.84:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",215,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",216,0)=" ;;R^""863.8:"",""863.84:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",217,0)=" ;;D^Enter loop query text"
^XTMP("XPDT",7811,"RTN","ORY31601",218,0)=" ;;R^""863.8:"",""863.84:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",219,0)=" ;;D^HELP MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31601",220,0)=" ;;R^""863.8:"",""863.84:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",221,0)=" ;;D^This is the query text for all entries after the first one"
^XTMP("XPDT",7811,"RTN","ORY31601",222,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",223,0)=" ;;KEY^863.8:^MANDATORY MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31601",224,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",225,0)=" ;;D^MANDATORY MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31601",226,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",227,0)=" ;;D^MAND MSG"
^XTMP("XPDT",7811,"RTN","ORY31601",228,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31601",229,0)=" ;;D^Message sent to user telling him that his entry is mandatory"
^XTMP("XPDT",7811,"RTN","ORY31601",230,0)=" ;;R^""863.8:"",2,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",231,0)=" ;;D^Mandatory answer.  You must enter a value or '^' to exit."
^XTMP("XPDT",7811,"RTN","ORY31601",232,0)=" ;;R^""863.8:"",""863.84:4"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",233,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31601",234,0)=" ;;R^""863.8:"",""863.84:4"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",235,0)=" ;;D^Enter message"
^XTMP("XPDT",7811,"RTN","ORY31601",236,0)=" ;;R^""863.8:"",""863.84:5"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",237,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31601",238,0)=" ;;R^""863.8:"",""863.84:5"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",239,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31601",240,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",241,0)=" ;;KEY^863.8:^OCXO DATA DRIVE SOURCE"
^XTMP("XPDT",7811,"RTN","ORY31601",242,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",243,0)=" ;;D^OCXO DATA DRIVE SOURCE"
^XTMP("XPDT",7811,"RTN","ORY31601",244,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",245,0)=" ;;KEY^863.8:^OCXO FILE POINTER"
^XTMP("XPDT",7811,"RTN","ORY31601",246,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",247,0)=" ;;D^OCXO FILE POINTER"
^XTMP("XPDT",7811,"RTN","ORY31601",248,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",249,0)=" ;;KEY^863.8:^OCXO GENERATE CODE FUNCTION"
^XTMP("XPDT",7811,"RTN","ORY31601",250,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",251,0)=" ;;D^OCXO GENERATE CODE FUNCTION"
^XTMP("XPDT",7811,"RTN","ORY31601",252,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",253,0)=" ;;D^GEN"
^XTMP("XPDT",7811,"RTN","ORY31601",254,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",255,0)=" ;;KEY^863.8:^OCXO HL7 SEGMENT ID"
^XTMP("XPDT",7811,"RTN","ORY31601",256,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",257,0)=" ;;D^OCXO HL7 SEGMENT ID"
^XTMP("XPDT",7811,"RTN","ORY31601",258,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",259,0)=" ;;D^HL7SEGID"
^XTMP("XPDT",7811,"RTN","ORY31601",260,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",261,0)=" ;;KEY^863.8:^OCXO UP-ARROW PIECE NUMBER"
^XTMP("XPDT",7811,"RTN","ORY31601",262,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",263,0)=" ;;D^OCXO UP-ARROW PIECE NUMBER"
^XTMP("XPDT",7811,"RTN","ORY31601",264,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",265,0)=" ;;KEY^863.8:^OCXO VARIABLE NAME"
^XTMP("XPDT",7811,"RTN","ORY31601",266,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",267,0)=" ;;D^OCXO VARIABLE NAME"
^XTMP("XPDT",7811,"RTN","ORY31601",268,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",269,0)=" ;;KEY^863.8:^OCXO VT-BAR PIECE NUMBER"
^XTMP("XPDT",7811,"RTN","ORY31601",270,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",271,0)=" ;;D^OCXO VT-BAR PIECE NUMBER"
^XTMP("XPDT",7811,"RTN","ORY31601",272,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31601",273,0)=" ;;KEY^863.8:^PRIMARY DATA FIELD"
^XTMP("XPDT",7811,"RTN","ORY31601",274,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",275,0)=" ;;D^PRIMARY DATA FIELD"
^XTMP("XPDT",7811,"RTN","ORY31601",276,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31601",277,0)=" ;;D^PDFLD"
^XTMP("XPDT",7811,"RTN","ORY31601",278,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31601",279,0)=" ;;D^ "
^XTMP("XPDT",7811,"RTN","ORY31601",280,0)=" ;;R^""863.8:"",1,2"
^XTMP("XPDT",7811,"RTN","ORY31601",281,0)=" ;;D^  Primary data field in a comparison expression that"
^XTMP("XPDT",7811,"RTN","ORY31601",282,0)=" ;;R^""863.8:"",1,3"
^XTMP("XPDT",7811,"RTN","ORY31601",283,0)=" ;;D^ is to be tested."
^XTMP("XPDT",7811,"RTN","ORY31601",284,0)=" ;1;"
^XTMP("XPDT",7811,"RTN","ORY31601",285,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31602")="0^7^B77554157^n/a"
^XTMP("XPDT",7811,"RTN","ORY31602",1,0)="ORY31602 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY31602",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY31602",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY31602",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31602",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY31602",6,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31602",7,0)=" D DOT^ORY316ES"
^XTMP("XPDT",7811,"RTN","ORY31602",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31602",9,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31602",10,0)=" K REMOTE,LOCAL,OPCODE,REF"
^XTMP("XPDT",7811,"RTN","ORY31602",11,0)=" F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),"";"",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY31602",12,0)=" .S ^TMP(""OCXRULE"",$J,$O(^TMP(""OCXRULE"",$J,""A""),-1)+1)=TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",13,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31602",14,0)=" G ^ORY31603"
^XTMP("XPDT",7811,"RTN","ORY31602",15,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31602",16,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY31602",17,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31602",18,0)="DATA ;"
^XTMP("XPDT",7811,"RTN","ORY31602",19,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31602",20,0)=" ;;R^""863.8:"",1,4"
^XTMP("XPDT",7811,"RTN","ORY31602",21,0)=" ;;D^ "
^XTMP("XPDT",7811,"RTN","ORY31602",22,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",23,0)=" ;;KEY^863.8:^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",24,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",25,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",26,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",27,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",28,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31602",29,0)=" ;;D^Used with methods that manage interactive dialogues.  Equivalent to DIC(""A"")"
^XTMP("XPDT",7811,"RTN","ORY31602",30,0)=" ;;R^""863.8:"",""863.84:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",31,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31602",32,0)=" ;;R^""863.8:"",""863.84:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",33,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",34,0)=" ;;R^""863.8:"",""863.84:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",35,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",36,0)=" ;;R^""863.8:"",""863.84:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",37,0)=" ;;D^Enter the query (free text string)"
^XTMP("XPDT",7811,"RTN","ORY31602",38,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",39,0)=" ;;KEY^863.8:^REPEAT THE QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",40,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",41,0)=" ;;D^REPEAT THE QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",42,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",43,0)=" ;;D^LOOP"
^XTMP("XPDT",7811,"RTN","ORY31602",44,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31602",45,0)=" ;;D^Set this = 1 to repetitively ask the user to enter a value"
^XTMP("XPDT",7811,"RTN","ORY31602",46,0)=" ;;R^""863.8:"",""863.84:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",47,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31602",48,0)=" ;;R^""863.8:"",""863.84:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",49,0)=" ;;D^YES NO"
^XTMP("XPDT",7811,"RTN","ORY31602",50,0)=" ;;R^""863.8:"",""863.84:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",51,0)=" ;;D^HELP MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31602",52,0)=" ;;R^""863.8:"",""863.84:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",53,0)=" ;;D^Answer 'YES' if you want the user to repetitively enter a value."
^XTMP("XPDT",7811,"RTN","ORY31602",54,0)=" ;;R^""863.8:"",""863.84:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",55,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",56,0)=" ;;R^""863.8:"",""863.84:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",57,0)=" ;;D^Is the query repetitive"
^XTMP("XPDT",7811,"RTN","ORY31602",58,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",59,0)=" ;;KEY^863.8:^TERMINATOR"
^XTMP("XPDT",7811,"RTN","ORY31602",60,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",61,0)=" ;;D^TERMINATOR"
^XTMP("XPDT",7811,"RTN","ORY31602",62,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",63,0)=" ;;D^TERMINATOR"
^XTMP("XPDT",7811,"RTN","ORY31602",64,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31602",65,0)=" ;;D^A text string terminator; e.g., '?', ': ', '=>'"
^XTMP("XPDT",7811,"RTN","ORY31602",66,0)=" ;;R^""863.8:"",2,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",67,0)=" ;;D^:"
^XTMP("XPDT",7811,"RTN","ORY31602",68,0)=" ;;R^""863.8:"",""863.84:4"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",69,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",70,0)=" ;;R^""863.8:"",""863.84:4"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",71,0)=" ;;D^Enter text string terminator"
^XTMP("XPDT",7811,"RTN","ORY31602",72,0)=" ;;R^""863.8:"",""863.84:5"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",73,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31602",74,0)=" ;;R^""863.8:"",""863.84:5"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",75,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",76,0)=" ;;R^""863.8:"",""863.84:6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",77,0)=" ;;D^FREE TEXT MAXIMUM LENGTH"
^XTMP("XPDT",7811,"RTN","ORY31602",78,0)=" ;;R^""863.8:"",""863.84:6"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",79,0)=" ;;D^9"
^XTMP("XPDT",7811,"RTN","ORY31602",80,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",81,0)=" ;;KEY^863.8:^VALUE CALL"
^XTMP("XPDT",7811,"RTN","ORY31602",82,0)=" ;;R^""863.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",83,0)=" ;;D^VALUE CALL"
^XTMP("XPDT",7811,"RTN","ORY31602",84,0)=" ;;R^""863.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",85,0)=" ;;D^VAL CALL"
^XTMP("XPDT",7811,"RTN","ORY31602",86,0)=" ;;R^""863.8:"",.03,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",87,0)=" ;;D^NO"
^XTMP("XPDT",7811,"RTN","ORY31602",88,0)=" ;;R^""863.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31602",89,0)=" ;;D^tag^routine which manages the dialogue for collecting and validating a value"
^XTMP("XPDT",7811,"RTN","ORY31602",90,0)=" ;;R^""863.8:"",""863.84:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",91,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",92,0)=" ;;R^""863.8:"",""863.84:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",93,0)=" ;;D^Enter tag^routine"
^XTMP("XPDT",7811,"RTN","ORY31602",94,0)=" ;;R^""863.8:"",""863.84:4"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",95,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31602",96,0)=" ;;R^""863.8:"",""863.84:4"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",97,0)=" ;;D^LINE TAG"
^XTMP("XPDT",7811,"RTN","ORY31602",98,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",99,0)=" ;;EOF^OCXS(863.8)^1"
^XTMP("XPDT",7811,"RTN","ORY31602",100,0)=" ;;SOF^864.1  OCX MDD DATATYPE"
^XTMP("XPDT",7811,"RTN","ORY31602",101,0)=" ;;KEY^864.1:^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",102,0)=" ;;R^""864.1:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",103,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",104,0)=" ;;R^""864.1:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",105,0)=" ;;D^FT"
^XTMP("XPDT",7811,"RTN","ORY31602",106,0)=" ;;R^""864.1:"",2,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",107,0)=" ;;D^GENERIC"
^XTMP("XPDT",7811,"RTN","ORY31602",108,0)=" ;;R^""864.1:"",""864.11:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",109,0)=" ;;D^VALUE CALL"
^XTMP("XPDT",7811,"RTN","ORY31602",110,0)=" ;;R^""864.1:"",""864.11:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",111,0)=" ;;D^FT^OCXFDFT"
^XTMP("XPDT",7811,"RTN","ORY31602",112,0)=" ;;R^""864.1:"",""864.11:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",113,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",114,0)=" ;;R^""864.1:"",""864.11:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",115,0)=" ;;D^Enter a free text string"
^XTMP("XPDT",7811,"RTN","ORY31602",116,0)=" ;;R^""864.1:"",""864.11:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",117,0)=" ;;D^FREE TEXT MAXIMUM LENGTH"
^XTMP("XPDT",7811,"RTN","ORY31602",118,0)=" ;;R^""864.1:"",""864.11:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",119,0)=" ;;D^240"
^XTMP("XPDT",7811,"RTN","ORY31602",120,0)=" ;;R^""864.1:"",""864.11:4"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",121,0)=" ;;D^HELP MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31602",122,0)=" ;;R^""864.1:"",""864.11:4"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",123,0)=" ;;D^Enter a free text string.  Do not use control characters.  |FTMM HELP|"
^XTMP("XPDT",7811,"RTN","ORY31602",124,0)=" ;;R^""864.1:"",""864.11:5"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",125,0)=" ;;D^LOOP QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",126,0)=" ;;R^""864.1:"",""864.11:5"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",127,0)=" ;;D^Enter another free text string"
^XTMP("XPDT",7811,"RTN","ORY31602",128,0)=" ;;R^""864.1:"",""864.11:6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",129,0)=" ;;D^REPEAT THE QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",130,0)=" ;;R^""864.1:"",""864.11:6"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",131,0)=" ;;D^0"
^XTMP("XPDT",7811,"RTN","ORY31602",132,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",133,0)=" ;;KEY^864.1:^GENERIC"
^XTMP("XPDT",7811,"RTN","ORY31602",134,0)=" ;;R^""864.1:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",135,0)=" ;;D^GENERIC"
^XTMP("XPDT",7811,"RTN","ORY31602",136,0)=" ;;R^""864.1:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",137,0)=" ;;D^GENERIC"
^XTMP("XPDT",7811,"RTN","ORY31602",138,0)=" ;;R^""864.1:"",""864.11:11"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",139,0)=" ;;D^MANDATORY MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31602",140,0)=" ;;R^""864.1:"",""864.11:11"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",141,0)=" ;;D^This answer is mandatory.  Enter a response or press '^' to exit."
^XTMP("XPDT",7811,"RTN","ORY31602",142,0)=" ;;R^""864.1:"",""864.11:12"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",143,0)=" ;;D^TERMINATOR"
^XTMP("XPDT",7811,"RTN","ORY31602",144,0)=" ;;R^""864.1:"",""864.11:12"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",145,0)=" ;;D^:"
^XTMP("XPDT",7811,"RTN","ORY31602",146,0)=" ;;R^""864.1:"",""864.11:13"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",147,0)=" ;;D^LOOP QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",148,0)=" ;;R^""864.1:"",""864.11:13"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",149,0)=" ;;D^Enter another value"
^XTMP("XPDT",7811,"RTN","ORY31602",150,0)=" ;;R^""864.1:"",""864.11:7"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",151,0)=" ;;D^VALUE CALL"
^XTMP("XPDT",7811,"RTN","ORY31602",152,0)=" ;;R^""864.1:"",""864.11:7"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",153,0)=" ;;D^GEN^OCXFDMOM"
^XTMP("XPDT",7811,"RTN","ORY31602",154,0)=" ;;R^""864.1:"",""864.11:8"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",155,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",156,0)=" ;;R^""864.1:"",""864.11:8"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",157,0)=" ;;D^Enter a value"
^XTMP("XPDT",7811,"RTN","ORY31602",158,0)=" ;;R^""864.1:"",""864.11:9"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",159,0)=" ;;D^HELP MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31602",160,0)=" ;;R^""864.1:"",""864.11:9"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",161,0)=" ;;D^ "
^XTMP("XPDT",7811,"RTN","ORY31602",162,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",163,0)=" ;;KEY^864.1:^NUMERIC"
^XTMP("XPDT",7811,"RTN","ORY31602",164,0)=" ;;R^""864.1:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",165,0)=" ;;D^NUMERIC"
^XTMP("XPDT",7811,"RTN","ORY31602",166,0)=" ;;R^""864.1:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",167,0)=" ;;D^NUMERIC"
^XTMP("XPDT",7811,"RTN","ORY31602",168,0)=" ;;R^""864.1:"",2,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",169,0)=" ;;D^GENERIC"
^XTMP("XPDT",7811,"RTN","ORY31602",170,0)=" ;;R^""864.1:"",""864.11:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",171,0)=" ;;D^VALUE CALL"
^XTMP("XPDT",7811,"RTN","ORY31602",172,0)=" ;;R^""864.1:"",""864.11:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",173,0)=" ;;D^NU^OCXFDNU"
^XTMP("XPDT",7811,"RTN","ORY31602",174,0)=" ;;R^""864.1:"",""864.11:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",175,0)=" ;;D^QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",176,0)=" ;;R^""864.1:"",""864.11:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",177,0)=" ;;D^Enter a number"
^XTMP("XPDT",7811,"RTN","ORY31602",178,0)=" ;;R^""864.1:"",""864.11:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",179,0)=" ;;D^LOOP QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",180,0)=" ;;R^""864.1:"",""864.11:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",181,0)=" ;;D^Enter another number"
^XTMP("XPDT",7811,"RTN","ORY31602",182,0)=" ;;R^""864.1:"",""864.11:4"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",183,0)=" ;;D^REPEAT THE QUERY"
^XTMP("XPDT",7811,"RTN","ORY31602",184,0)=" ;;R^""864.1:"",""864.11:4"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",185,0)=" ;;D^0"
^XTMP("XPDT",7811,"RTN","ORY31602",186,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",187,0)=" ;;EOF^OCXS(864.1)^1"
^XTMP("XPDT",7811,"RTN","ORY31602",188,0)=" ;;SOF^863.7  OCX MDD PUBLIC FUNCTION"
^XTMP("XPDT",7811,"RTN","ORY31602",189,0)=" ;;KEY^863.7:^GCC FREE TEXT CONTAINS NC ELEMENT IN SET"
^XTMP("XPDT",7811,"RTN","ORY31602",190,0)=" ;;R^""863.7:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",191,0)=" ;;D^GCC FREE TEXT CONTAINS NC ELEMENT IN SET"
^XTMP("XPDT",7811,"RTN","ORY31602",192,0)=" ;;R^""863.7:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",193,0)=" ;;D^EXTRINSIC FUNCTION"
^XTMP("XPDT",7811,"RTN","ORY31602",194,0)=" ;;R^""863.7:"",3,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",195,0)=" ;;D^CONNCSET^OCXF22"
^XTMP("XPDT",7811,"RTN","ORY31602",196,0)=" ;;R^""863.7:"",""863.74:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",197,0)=" ;;D^PRIMARY DATA FIELD"
^XTMP("XPDT",7811,"RTN","ORY31602",198,0)=" ;;R^""863.7:"",""863.74:1"",1.1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",199,0)=" ;;D^1"
^XTMP("XPDT",7811,"RTN","ORY31602",200,0)=" ;;R^""863.7:"",""863.74:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",201,0)=" ;;D^COMPARISON VALUE"
^XTMP("XPDT",7811,"RTN","ORY31602",202,0)=" ;;R^""863.7:"",""863.74:2"",1.1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",203,0)=" ;;D^2"
^XTMP("XPDT",7811,"RTN","ORY31602",204,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",205,0)=" ;;KEY^863.7:^GCC FREE TEXT EQUALS"
^XTMP("XPDT",7811,"RTN","ORY31602",206,0)=" ;;R^""863.7:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",207,0)=" ;;D^GCC FREE TEXT EQUALS"
^XTMP("XPDT",7811,"RTN","ORY31602",208,0)=" ;;R^""863.7:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",209,0)=" ;;D^EXTRINSIC FUNCTION"
^XTMP("XPDT",7811,"RTN","ORY31602",210,0)=" ;;R^""863.7:"",3,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",211,0)=" ;;D^AEQ^OCXF22"
^XTMP("XPDT",7811,"RTN","ORY31602",212,0)=" ;;R^""863.7:"",""863.74:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",213,0)=" ;;D^PRIMARY DATA FIELD"
^XTMP("XPDT",7811,"RTN","ORY31602",214,0)=" ;;R^""863.7:"",""863.74:1"",1.1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",215,0)=" ;;D^1"
^XTMP("XPDT",7811,"RTN","ORY31602",216,0)=" ;;R^""863.7:"",""863.74:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",217,0)=" ;;D^COMPARISON VALUE"
^XTMP("XPDT",7811,"RTN","ORY31602",218,0)=" ;;R^""863.7:"",""863.74:2"",1.1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",219,0)=" ;;D^2"
^XTMP("XPDT",7811,"RTN","ORY31602",220,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",221,0)=" ;;KEY^863.7:^GCC FREE TEXT STARTS WITH"
^XTMP("XPDT",7811,"RTN","ORY31602",222,0)=" ;;R^""863.7:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",223,0)=" ;;D^GCC FREE TEXT STARTS WITH"
^XTMP("XPDT",7811,"RTN","ORY31602",224,0)=" ;;R^""863.7:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",225,0)=" ;;D^EXTRINSIC FUNCTION"
^XTMP("XPDT",7811,"RTN","ORY31602",226,0)=" ;;R^""863.7:"",3,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",227,0)=" ;;D^START^OCXF22"
^XTMP("XPDT",7811,"RTN","ORY31602",228,0)=" ;;R^""863.7:"",""863.74:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",229,0)=" ;;D^PRIMARY DATA FIELD"
^XTMP("XPDT",7811,"RTN","ORY31602",230,0)=" ;;R^""863.7:"",""863.74:1"",1.1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",231,0)=" ;;D^1"
^XTMP("XPDT",7811,"RTN","ORY31602",232,0)=" ;;R^""863.7:"",""863.74:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",233,0)=" ;;D^COMPARISON VALUE"
^XTMP("XPDT",7811,"RTN","ORY31602",234,0)=" ;;R^""863.7:"",""863.74:2"",1.1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",235,0)=" ;;D^2"
^XTMP("XPDT",7811,"RTN","ORY31602",236,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",237,0)=" ;;EOF^OCXS(863.7)^1"
^XTMP("XPDT",7811,"RTN","ORY31602",238,0)=" ;;SOF^863.9  OCX MDD CONDITION/FUNCTION"
^XTMP("XPDT",7811,"RTN","ORY31602",239,0)=" ;;KEY^863.9:^CONTAINS NOCASE ELEMENT IN SET"
^XTMP("XPDT",7811,"RTN","ORY31602",240,0)=" ;;R^""863.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",241,0)=" ;;D^CONTAINS NOCASE ELEMENT IN SET"
^XTMP("XPDT",7811,"RTN","ORY31602",242,0)=" ;;R^""863.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",243,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",244,0)=" ;;R^""863.9:"",.03,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",245,0)=" ;;D^GCC FREE TEXT CONTAINS NC ELEMENT IN SET"
^XTMP("XPDT",7811,"RTN","ORY31602",246,0)=" ;;R^""863.9:"",.04,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",247,0)=" ;;D^CONTAINS AN ELEMENT IN THE SET"
^XTMP("XPDT",7811,"RTN","ORY31602",248,0)=" ;;R^""863.9:"",""863.91:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",249,0)=" ;;D^OCXO GENERATE CODE FUNCTION"
^XTMP("XPDT",7811,"RTN","ORY31602",250,0)=" ;;R^""863.9:"",""863.91:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",251,0)=" ;;D^GCC FREE TEXT CONTAINS NC ELEMENT IN SET"
^XTMP("XPDT",7811,"RTN","ORY31602",252,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",253,0)=" ;;KEY^863.9:^EQ FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",254,0)=" ;;R^""863.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",255,0)=" ;;D^EQ FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",256,0)=" ;;R^""863.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",257,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",258,0)=" ;;R^""863.9:"",.04,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",259,0)=" ;;D^IS EQUAL TO"
^XTMP("XPDT",7811,"RTN","ORY31602",260,0)=" ;;R^""863.9:"",""863.91:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",261,0)=" ;;D^OCXO GENERATE CODE FUNCTION"
^XTMP("XPDT",7811,"RTN","ORY31602",262,0)=" ;;R^""863.9:"",""863.91:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",263,0)=" ;;D^GCC FREE TEXT EQUALS"
^XTMP("XPDT",7811,"RTN","ORY31602",264,0)=" ;;R^""863.9:"",""863.92:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",265,0)=" ;;D^EQUALS"
^XTMP("XPDT",7811,"RTN","ORY31602",266,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",267,0)=" ;;KEY^863.9:^STARTS WITH"
^XTMP("XPDT",7811,"RTN","ORY31602",268,0)=" ;;R^""863.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",269,0)=" ;;D^STARTS WITH"
^XTMP("XPDT",7811,"RTN","ORY31602",270,0)=" ;;R^""863.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",271,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",272,0)=" ;;R^""863.9:"",.04,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",273,0)=" ;;D^STARTS WITH"
^XTMP("XPDT",7811,"RTN","ORY31602",274,0)=" ;;R^""863.9:"",""863.91:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",275,0)=" ;;D^OCXO GENERATE CODE FUNCTION"
^XTMP("XPDT",7811,"RTN","ORY31602",276,0)=" ;;R^""863.9:"",""863.91:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",277,0)=" ;;D^GCC FREE TEXT STARTS WITH"
^XTMP("XPDT",7811,"RTN","ORY31602",278,0)=" ;;R^""863.9:"",""863.92:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",279,0)=" ;;D^BEGINS WITH"
^XTMP("XPDT",7811,"RTN","ORY31602",280,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",281,0)=" ;;EOF^OCXS(863.9)^1"
^XTMP("XPDT",7811,"RTN","ORY31602",282,0)=" ;;SOF^863.4  OCX MDD ATTRIBUTE"
^XTMP("XPDT",7811,"RTN","ORY31602",283,0)=" ;;KEY^863.4:^FILLER"
^XTMP("XPDT",7811,"RTN","ORY31602",284,0)=" ;;R^""863.4:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",285,0)=" ;;D^FILLER"
^XTMP("XPDT",7811,"RTN","ORY31602",286,0)=" ;;R^""863.4:"",""863.41:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",287,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31602",288,0)=" ;;R^""863.4:"",""863.41:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",289,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",290,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",291,0)=" ;;KEY^863.4:^HL7 FILLER"
^XTMP("XPDT",7811,"RTN","ORY31602",292,0)=" ;;R^""863.4:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",293,0)=" ;;D^HL7 FILLER"
^XTMP("XPDT",7811,"RTN","ORY31602",294,0)=" ;;R^""863.4:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",295,0)=" ;;D^HL7FILLR"
^XTMP("XPDT",7811,"RTN","ORY31602",296,0)=" ;;R^""863.4:"",""863.41:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",297,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31602",298,0)=" ;;R^""863.4:"",""863.41:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",299,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",300,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",301,0)=" ;;KEY^863.4:^IEN"
^XTMP("XPDT",7811,"RTN","ORY31602",302,0)=" ;;R^""863.4:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",303,0)=" ;;D^IEN"
^XTMP("XPDT",7811,"RTN","ORY31602",304,0)=" ;;R^""863.4:"",""863.41:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",305,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31602",306,0)=" ;;R^""863.4:"",""863.41:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",307,0)=" ;;D^NUMERIC"
^XTMP("XPDT",7811,"RTN","ORY31602",308,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",309,0)=" ;;KEY^863.4:^LOCAL TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",310,0)=" ;;R^""863.4:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",311,0)=" ;;D^LOCAL TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",312,0)=" ;;R^""863.4:"",""863.41:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",313,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31602",314,0)=" ;;R^""863.4:"",""863.41:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",315,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31602",316,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31602",317,0)=" ;;KEY^863.4:^ORDER MODE"
^XTMP("XPDT",7811,"RTN","ORY31602",318,0)=" ;;R^""863.4:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",319,0)=" ;;D^ORDER MODE"
^XTMP("XPDT",7811,"RTN","ORY31602",320,0)=" ;;R^""863.4:"",""863.41:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",321,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31602",322,0)=" ;;R^""863.4:"",""863.41:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31602",323,0)=" ;1;"
^XTMP("XPDT",7811,"RTN","ORY31602",324,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31603")="0^8^B87967694^n/a"
^XTMP("XPDT",7811,"RTN","ORY31603",1,0)="ORY31603 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY31603",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY31603",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY31603",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31603",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY31603",6,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31603",7,0)=" D DOT^ORY316ES"
^XTMP("XPDT",7811,"RTN","ORY31603",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31603",9,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31603",10,0)=" K REMOTE,LOCAL,OPCODE,REF"
^XTMP("XPDT",7811,"RTN","ORY31603",11,0)=" F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),"";"",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY31603",12,0)=" .S ^TMP(""OCXRULE"",$J,$O(^TMP(""OCXRULE"",$J,""A""),-1)+1)=TEXT"
^XTMP("XPDT",7811,"RTN","ORY31603",13,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31603",14,0)=" G ^ORY31604"
^XTMP("XPDT",7811,"RTN","ORY31603",15,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31603",16,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY31603",17,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31603",18,0)="DATA ;"
^XTMP("XPDT",7811,"RTN","ORY31603",19,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31603",20,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31603",21,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",22,0)=" ;;KEY^863.4:^ORDER PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",23,0)=" ;;R^""863.4:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",24,0)=" ;;D^ORDER PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",25,0)=" ;;R^""863.4:"",""863.41:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",26,0)=" ;;D^DATA TYPE"
^XTMP("XPDT",7811,"RTN","ORY31603",27,0)=" ;;R^""863.4:"",""863.41:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",28,0)=" ;;D^NUMERIC"
^XTMP("XPDT",7811,"RTN","ORY31603",29,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",30,0)=" ;;EOF^OCXS(863.4)^1"
^XTMP("XPDT",7811,"RTN","ORY31603",31,0)=" ;;SOF^863.2  OCX MDD SUBJECT"
^XTMP("XPDT",7811,"RTN","ORY31603",32,0)=" ;;KEY^863.2:^PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",33,0)=" ;;R^""863.2:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",34,0)=" ;;D^PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",35,0)=" ;;R^""863.2:"",""863.21:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",36,0)=" ;;D^FILE"
^XTMP("XPDT",7811,"RTN","ORY31603",37,0)=" ;;R^""863.2:"",""863.21:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",38,0)=" ;;D^2"
^XTMP("XPDT",7811,"RTN","ORY31603",39,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",40,0)=" ;;EOF^OCXS(863.2)^1"
^XTMP("XPDT",7811,"RTN","ORY31603",41,0)=" ;;SOF^863.3  OCX MDD LINK"
^XTMP("XPDT",7811,"RTN","ORY31603",42,0)=" ;;KEY^863.3:^PATIENT.HL7_FILLER"
^XTMP("XPDT",7811,"RTN","ORY31603",43,0)=" ;;R^""863.3:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",44,0)=" ;;D^PATIENT.HL7_FILLER"
^XTMP("XPDT",7811,"RTN","ORY31603",45,0)=" ;;R^""863.3:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",46,0)=" ;;D^PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",47,0)=" ;;R^""863.3:"",.04,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",48,0)=" ;;D^HL7"
^XTMP("XPDT",7811,"RTN","ORY31603",49,0)=" ;;R^""863.3:"",.05,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",50,0)=" ;;D^HL7 FILLER"
^XTMP("XPDT",7811,"RTN","ORY31603",51,0)=" ;;R^""863.3:"",""863.32:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",52,0)=" ;;D^OCXO VT-BAR PIECE NUMBER"
^XTMP("XPDT",7811,"RTN","ORY31603",53,0)=" ;;R^""863.3:"",""863.32:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",54,0)=" ;;D^OCXO UP-ARROW PIECE NUMBER"
^XTMP("XPDT",7811,"RTN","ORY31603",55,0)=" ;;R^""863.3:"",""863.32:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",56,0)=" ;;D^2"
^XTMP("XPDT",7811,"RTN","ORY31603",57,0)=" ;;R^""863.3:"",""863.32:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",58,0)=" ;;D^OCXO VARIABLE NAME"
^XTMP("XPDT",7811,"RTN","ORY31603",59,0)=" ;;R^""863.3:"",""863.32:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",60,0)=" ;;D^OCXODATA(""ORC"",3)"
^XTMP("XPDT",7811,"RTN","ORY31603",61,0)=" ;;R^""863.3:"",""863.32:4"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",62,0)=" ;;D^OCXO HL7 SEGMENT ID"
^XTMP("XPDT",7811,"RTN","ORY31603",63,0)=" ;;R^""863.3:"",""863.32:5"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",64,0)=" ;;D^OCXO DATA DRIVE SOURCE"
^XTMP("XPDT",7811,"RTN","ORY31603",65,0)=" ;;R^""863.3:"",""863.32:5"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",66,0)=" ;;D^HL7"
^XTMP("XPDT",7811,"RTN","ORY31603",67,0)=" ;;R^""863.3:"",""863.32:6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",68,0)=" ;;D^OCXO FILE POINTER"
^XTMP("XPDT",7811,"RTN","ORY31603",69,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",70,0)=" ;;KEY^863.3:^PATIENT.HL7_PATIENT_ID"
^XTMP("XPDT",7811,"RTN","ORY31603",71,0)=" ;;R^""863.3:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",72,0)=" ;;D^PATIENT.HL7_PATIENT_ID"
^XTMP("XPDT",7811,"RTN","ORY31603",73,0)=" ;;R^""863.3:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",74,0)=" ;;D^PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",75,0)=" ;;R^""863.3:"",.04,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",76,0)=" ;;D^HL7"
^XTMP("XPDT",7811,"RTN","ORY31603",77,0)=" ;;R^""863.3:"",.05,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",78,0)=" ;;D^IEN"
^XTMP("XPDT",7811,"RTN","ORY31603",79,0)=" ;;R^""863.3:"",.06,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",80,0)=" ;;D^99"
^XTMP("XPDT",7811,"RTN","ORY31603",81,0)=" ;;R^""863.3:"",""863.32:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",82,0)=" ;;D^OCXO HL7 SEGMENT ID"
^XTMP("XPDT",7811,"RTN","ORY31603",83,0)=" ;;R^""863.3:"",""863.32:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",84,0)=" ;;D^OCXO VT-BAR PIECE NUMBER"
^XTMP("XPDT",7811,"RTN","ORY31603",85,0)=" ;;R^""863.3:"",""863.32:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",86,0)=" ;;D^OCXO VARIABLE NAME"
^XTMP("XPDT",7811,"RTN","ORY31603",87,0)=" ;;R^""863.3:"",""863.32:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",88,0)=" ;;D^OCXODATA(""PID"",3)"
^XTMP("XPDT",7811,"RTN","ORY31603",89,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",90,0)=" ;;KEY^863.3:^PATIENT.IEN"
^XTMP("XPDT",7811,"RTN","ORY31603",91,0)=" ;;R^""863.3:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",92,0)=" ;;D^PATIENT.IEN"
^XTMP("XPDT",7811,"RTN","ORY31603",93,0)=" ;;R^""863.3:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",94,0)=" ;;D^PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",95,0)=" ;;R^""863.3:"",.05,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",96,0)=" ;;D^IEN"
^XTMP("XPDT",7811,"RTN","ORY31603",97,0)=" ;;R^""863.3:"",.06,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",98,0)=" ;;D^99"
^XTMP("XPDT",7811,"RTN","ORY31603",99,0)=" ;;R^""863.3:"",""863.32:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",100,0)=" ;;D^OCXO VARIABLE NAME"
^XTMP("XPDT",7811,"RTN","ORY31603",101,0)=" ;;R^""863.3:"",""863.32:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",102,0)=" ;;D^DFN"
^XTMP("XPDT",7811,"RTN","ORY31603",103,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",104,0)=" ;;KEY^863.3:^PATIENT.OERR_ORDER_PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",105,0)=" ;;R^""863.3:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",106,0)=" ;;D^PATIENT.OERR_ORDER_PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",107,0)=" ;;R^""863.3:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",108,0)=" ;;D^PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",109,0)=" ;;R^""863.3:"",.05,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",110,0)=" ;;D^ORDER PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",111,0)=" ;;R^""863.3:"",.06,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",112,0)=" ;;D^5567"
^XTMP("XPDT",7811,"RTN","ORY31603",113,0)=" ;;R^""863.3:"",""863.32:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",114,0)=" ;;D^OCXO VARIABLE NAME"
^XTMP("XPDT",7811,"RTN","ORY31603",115,0)=" ;;R^""863.3:"",""863.32:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",116,0)=" ;;D^OCXORD"
^XTMP("XPDT",7811,"RTN","ORY31603",117,0)=" ;;R^""863.3:"",""863.32:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",118,0)=" ;;D^OCXO UP-ARROW PIECE NUMBER"
^XTMP("XPDT",7811,"RTN","ORY31603",119,0)=" ;;R^""863.3:"",""863.32:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",120,0)=" ;;D^1"
^XTMP("XPDT",7811,"RTN","ORY31603",121,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",122,0)=" ;;KEY^863.3:^PATIENT.OPS_FILLER"
^XTMP("XPDT",7811,"RTN","ORY31603",123,0)=" ;;R^""863.3:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",124,0)=" ;;D^PATIENT.OPS_FILLER"
^XTMP("XPDT",7811,"RTN","ORY31603",125,0)=" ;;R^""863.3:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",126,0)=" ;;D^PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",127,0)=" ;;R^""863.3:"",.04,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",128,0)=" ;;D^OPS"
^XTMP("XPDT",7811,"RTN","ORY31603",129,0)=" ;;R^""863.3:"",.05,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",130,0)=" ;;D^FILLER"
^XTMP("XPDT",7811,"RTN","ORY31603",131,0)=" ;;R^""863.3:"",.06,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",132,0)=" ;;D^99"
^XTMP("XPDT",7811,"RTN","ORY31603",133,0)=" ;;R^""863.3:"",""863.32:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",134,0)=" ;;D^OCXO VARIABLE NAME"
^XTMP("XPDT",7811,"RTN","ORY31603",135,0)=" ;;R^""863.3:"",""863.32:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",136,0)=" ;;D^OCXPSD"
^XTMP("XPDT",7811,"RTN","ORY31603",137,0)=" ;;R^""863.3:"",""863.32:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",138,0)=" ;;D^OCXO VT-BAR PIECE NUMBER"
^XTMP("XPDT",7811,"RTN","ORY31603",139,0)=" ;;R^""863.3:"",""863.32:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",140,0)=" ;;D^1"
^XTMP("XPDT",7811,"RTN","ORY31603",141,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",142,0)=" ;;KEY^863.3:^PATIENT.OPS_LOCAL_TEXT"
^XTMP("XPDT",7811,"RTN","ORY31603",143,0)=" ;;R^""863.3:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",144,0)=" ;;D^PATIENT.OPS_LOCAL_TEXT"
^XTMP("XPDT",7811,"RTN","ORY31603",145,0)=" ;;R^""863.3:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",146,0)=" ;;D^PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",147,0)=" ;;R^""863.3:"",.04,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",148,0)=" ;;D^OPS"
^XTMP("XPDT",7811,"RTN","ORY31603",149,0)=" ;;R^""863.3:"",.05,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",150,0)=" ;;D^LOCAL TEXT"
^XTMP("XPDT",7811,"RTN","ORY31603",151,0)=" ;;R^""863.3:"",.06,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",152,0)=" ;;D^99"
^XTMP("XPDT",7811,"RTN","ORY31603",153,0)=" ;;R^""863.3:"",""863.32:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",154,0)=" ;;D^OCXO UP-ARROW PIECE NUMBER"
^XTMP("XPDT",7811,"RTN","ORY31603",155,0)=" ;;R^""863.3:"",""863.32:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",156,0)=" ;;D^5"
^XTMP("XPDT",7811,"RTN","ORY31603",157,0)=" ;;R^""863.3:"",""863.32:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",158,0)=" ;;D^OCXO VT-BAR PIECE NUMBER"
^XTMP("XPDT",7811,"RTN","ORY31603",159,0)=" ;;R^""863.3:"",""863.32:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",160,0)=" ;;D^2"
^XTMP("XPDT",7811,"RTN","ORY31603",161,0)=" ;;R^""863.3:"",""863.32:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",162,0)=" ;;D^OCXO VARIABLE NAME"
^XTMP("XPDT",7811,"RTN","ORY31603",163,0)=" ;;R^""863.3:"",""863.32:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",164,0)=" ;;D^OCXPSD"
^XTMP("XPDT",7811,"RTN","ORY31603",165,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",166,0)=" ;;KEY^863.3:^PATIENT.OPS_ORD_MODE"
^XTMP("XPDT",7811,"RTN","ORY31603",167,0)=" ;;R^""863.3:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",168,0)=" ;;D^PATIENT.OPS_ORD_MODE"
^XTMP("XPDT",7811,"RTN","ORY31603",169,0)=" ;;R^""863.3:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",170,0)=" ;;D^PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31603",171,0)=" ;;R^""863.3:"",.04,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",172,0)=" ;;D^OPS"
^XTMP("XPDT",7811,"RTN","ORY31603",173,0)=" ;;R^""863.3:"",.05,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",174,0)=" ;;D^ORDER MODE"
^XTMP("XPDT",7811,"RTN","ORY31603",175,0)=" ;;R^""863.3:"",.06,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",176,0)=" ;;D^99"
^XTMP("XPDT",7811,"RTN","ORY31603",177,0)=" ;;R^""863.3:"",""863.32:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",178,0)=" ;;D^OCXO VARIABLE NAME"
^XTMP("XPDT",7811,"RTN","ORY31603",179,0)=" ;;R^""863.3:"",""863.32:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",180,0)=" ;;D^OCXPSM"
^XTMP("XPDT",7811,"RTN","ORY31603",181,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",182,0)=" ;;EOF^OCXS(863.3)^1"
^XTMP("XPDT",7811,"RTN","ORY31603",183,0)=" ;;SOF^860.9  ORDER CHECK NATIONAL TERM"
^XTMP("XPDT",7811,"RTN","ORY31603",184,0)=" ;;KEY^860.9:^ANGIOGRAM (PERIPHERAL)"
^XTMP("XPDT",7811,"RTN","ORY31603",185,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",186,0)=" ;;D^ANGIOGRAM (PERIPHERAL)"
^XTMP("XPDT",7811,"RTN","ORY31603",187,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",188,0)=" ;;D^101.43"
^XTMP("XPDT",7811,"RTN","ORY31603",189,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",190,0)=" ;;KEY^860.9:^BLOOD SPECIMEN"
^XTMP("XPDT",7811,"RTN","ORY31603",191,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",192,0)=" ;;D^BLOOD SPECIMEN"
^XTMP("XPDT",7811,"RTN","ORY31603",193,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",194,0)=" ;;D^61"
^XTMP("XPDT",7811,"RTN","ORY31603",195,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",196,0)=" ;;KEY^860.9:^DANGEROUS MEDS FOR PTS > 64"
^XTMP("XPDT",7811,"RTN","ORY31603",197,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",198,0)=" ;;D^DANGEROUS MEDS FOR PTS > 64"
^XTMP("XPDT",7811,"RTN","ORY31603",199,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",200,0)=" ;;D^101.43"
^XTMP("XPDT",7811,"RTN","ORY31603",201,0)=" ;;R^""860.9:"",2,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",202,0)=" ;;D^I $P($G(^ORD(100.98,$P($G(^ORD(101.43,+Y,0)),U,5),0)),U)=""PHARMACY"""
^XTMP("XPDT",7811,"RTN","ORY31603",203,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",204,0)=" ;;KEY^860.9:^DNR"
^XTMP("XPDT",7811,"RTN","ORY31603",205,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",206,0)=" ;;D^DNR"
^XTMP("XPDT",7811,"RTN","ORY31603",207,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",208,0)=" ;;D^101.43"
^XTMP("XPDT",7811,"RTN","ORY31603",209,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",210,0)=" ;;KEY^860.9:^EGFR"
^XTMP("XPDT",7811,"RTN","ORY31603",211,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",212,0)=" ;;D^EGFR"
^XTMP("XPDT",7811,"RTN","ORY31603",213,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",214,0)=" ;;D^60"
^XTMP("XPDT",7811,"RTN","ORY31603",215,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",216,0)=" ;;KEY^860.9:^FOOD-DRUG INTERACTION MED"
^XTMP("XPDT",7811,"RTN","ORY31603",217,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",218,0)=" ;;D^FOOD-DRUG INTERACTION MED"
^XTMP("XPDT",7811,"RTN","ORY31603",219,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",220,0)=" ;;D^101.43"
^XTMP("XPDT",7811,"RTN","ORY31603",221,0)=" ;;R^""860.9:"",2,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",222,0)=" ;;D^I $P($G(^ORD(100.98,$P($G(^ORD(101.43,+Y,0)),U,5),0)),U)=""PHARMACY"""
^XTMP("XPDT",7811,"RTN","ORY31603",223,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",224,0)=" ;;KEY^860.9:^NPO"
^XTMP("XPDT",7811,"RTN","ORY31603",225,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",226,0)=" ;;D^NPO"
^XTMP("XPDT",7811,"RTN","ORY31603",227,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",228,0)=" ;;D^101.43"
^XTMP("XPDT",7811,"RTN","ORY31603",229,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",230,0)=" ;;KEY^860.9:^ONE TIME MED"
^XTMP("XPDT",7811,"RTN","ORY31603",231,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",232,0)=" ;;D^ONE TIME MED"
^XTMP("XPDT",7811,"RTN","ORY31603",233,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",234,0)=" ;;D^51.1"
^XTMP("XPDT",7811,"RTN","ORY31603",235,0)=" ;;R^""860.9:"",2,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",236,0)=" ;;D^I $E($P(^(0),U,4),1,2)=""PS"""
^XTMP("XPDT",7811,"RTN","ORY31603",237,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",238,0)=" ;;KEY^860.9:^PARTIAL THROMBOPLASTIN TIME"
^XTMP("XPDT",7811,"RTN","ORY31603",239,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",240,0)=" ;;D^PARTIAL THROMBOPLASTIN TIME"
^XTMP("XPDT",7811,"RTN","ORY31603",241,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",242,0)=" ;;D^101.43"
^XTMP("XPDT",7811,"RTN","ORY31603",243,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",244,0)=" ;;KEY^860.9:^PROTHROMBIN TIME"
^XTMP("XPDT",7811,"RTN","ORY31603",245,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",246,0)=" ;;D^PROTHROMBIN TIME"
^XTMP("XPDT",7811,"RTN","ORY31603",247,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",248,0)=" ;;D^101.43"
^XTMP("XPDT",7811,"RTN","ORY31603",249,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",250,0)=" ;;KEY^860.9:^SERUM CREATININE"
^XTMP("XPDT",7811,"RTN","ORY31603",251,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",252,0)=" ;;D^SERUM CREATININE"
^XTMP("XPDT",7811,"RTN","ORY31603",253,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",254,0)=" ;;D^60"
^XTMP("XPDT",7811,"RTN","ORY31603",255,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",256,0)=" ;;KEY^860.9:^SERUM SPECIMEN"
^XTMP("XPDT",7811,"RTN","ORY31603",257,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",258,0)=" ;;D^SERUM SPECIMEN"
^XTMP("XPDT",7811,"RTN","ORY31603",259,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",260,0)=" ;;D^61"
^XTMP("XPDT",7811,"RTN","ORY31603",261,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",262,0)=" ;;KEY^860.9:^SERUM UREA NITROGEN"
^XTMP("XPDT",7811,"RTN","ORY31603",263,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",264,0)=" ;;D^SERUM UREA NITROGEN"
^XTMP("XPDT",7811,"RTN","ORY31603",265,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",266,0)=" ;;D^60"
^XTMP("XPDT",7811,"RTN","ORY31603",267,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",268,0)=" ;;KEY^860.9:^THROMBOPLASTIN TIME PARTIAL"
^XTMP("XPDT",7811,"RTN","ORY31603",269,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",270,0)=" ;;D^THROMBOPLASTIN TIME PARTIAL"
^XTMP("XPDT",7811,"RTN","ORY31603",271,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",272,0)=" ;;D^60"
^XTMP("XPDT",7811,"RTN","ORY31603",273,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",274,0)=" ;;KEY^860.9:^WBC"
^XTMP("XPDT",7811,"RTN","ORY31603",275,0)=" ;;R^""860.9:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",276,0)=" ;;D^WBC"
^XTMP("XPDT",7811,"RTN","ORY31603",277,0)=" ;;R^""860.9:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",278,0)=" ;;D^60"
^XTMP("XPDT",7811,"RTN","ORY31603",279,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31603",280,0)=" ;;EOF^OCXS(860.9)^1"
^XTMP("XPDT",7811,"RTN","ORY31603",281,0)=" ;;SOF^860.8  ORDER CHECK COMPILER FUNCTIONS"
^XTMP("XPDT",7811,"RTN","ORY31603",282,0)=" ;;KEY^860.8:^CONVERT DATE FROM FILEMAN FORMAT TO OCX FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31603",283,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",284,0)=" ;;D^CONVERT DATE FROM FILEMAN FORMAT TO OCX FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31603",285,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31603",286,0)=" ;;D^DT2INT"
^XTMP("XPDT",7811,"RTN","ORY31603",287,0)=" ;;R^""860.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31603",288,0)=" ;;D^  ;DT2INT(OCXDT) ;      This Local Extrinsic Function converts a date into an integer"
^XTMP("XPDT",7811,"RTN","ORY31603",289,0)=" ;;R^""860.8:"",1,2"
^XTMP("XPDT",7811,"RTN","ORY31603",290,0)=" ;;D^  ; ; By taking the Years, Months, Days, Hours and Minutes converting"
^XTMP("XPDT",7811,"RTN","ORY31603",291,0)=" ;;R^""860.8:"",1,3"
^XTMP("XPDT",7811,"RTN","ORY31603",292,0)=" ;;D^  ; ; Them into Seconds and then adding them all together into one big integer"
^XTMP("XPDT",7811,"RTN","ORY31603",293,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31603",294,0)=" ;;D^  ;DT2INT(OCXDT) ;      This Local Extrinsic Function converts a date into an integer"
^XTMP("XPDT",7811,"RTN","ORY31603",295,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31603",296,0)=" ;;D^  ; ; By taking the Years, Months, Days, Hours and Minutes converting"
^XTMP("XPDT",7811,"RTN","ORY31603",297,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31603",298,0)=" ;;D^  ; ; Them into Seconds and then adding them all together into one big integer"
^XTMP("XPDT",7811,"RTN","ORY31603",299,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31603",300,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31603",301,0)=" ;;R^""860.8:"",100,5"
^XTMP("XPDT",7811,"RTN","ORY31603",302,0)=" ;;D^  ; Q:'$L($G(OCXDT)) """""
^XTMP("XPDT",7811,"RTN","ORY31603",303,0)=" ;;R^""860.8:"",100,6"
^XTMP("XPDT",7811,"RTN","ORY31603",304,0)=" ;;D^  ; N OCXDIFF,OCXVAL S (OCXDIFF,OCXVAL)=0"
^XTMP("XPDT",7811,"RTN","ORY31603",305,0)=" ;;R^""860.8:"",100,7"
^XTMP("XPDT",7811,"RTN","ORY31603",306,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31603",307,0)=" ;;R^""860.8:"",100,8"
^XTMP("XPDT",7811,"RTN","ORY31603",308,0)=" ;;D^  ; I $L(OCXDT),'OCXDT,(OCXDT["" at "") D  ; EXTERNAL EXPERT SYSTEM FORMAT 1 TO EXTERNAL FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31603",309,0)=" ;;R^""860.8:"",100,9"
^XTMP("XPDT",7811,"RTN","ORY31603",310,0)=" ;;D^  ; .N OCXHR,OCXMIN,OCXTIME"
^XTMP("XPDT",7811,"RTN","ORY31603",311,0)=" ;;R^""860.8:"",100,10"
^XTMP("XPDT",7811,"RTN","ORY31603",312,0)=" ;;D^  ; .S OCXTIME=$P($P(OCXDT,"" at "",2),""."",1),OCXHR=$P(OCXTIME,"":"",1),OCXMIN=$P(OCXTIME,"":"",2)"
^XTMP("XPDT",7811,"RTN","ORY31603",313,0)=" ;;R^""860.8:"",100,11"
^XTMP("XPDT",7811,"RTN","ORY31603",314,0)=" ;;D^  ; .S:(OCXDT[""Midnight"") OCXHR=00"
^XTMP("XPDT",7811,"RTN","ORY31603",315,0)=" ;;R^""860.8:"",100,12"
^XTMP("XPDT",7811,"RTN","ORY31603",316,0)=" ;;D^  ; .S:(OCXDT[""PM"") OCXHR=OCXHR+12"
^XTMP("XPDT",7811,"RTN","ORY31603",317,0)=" ;;R^""860.8:"",100,13"
^XTMP("XPDT",7811,"RTN","ORY31603",318,0)=" ;;D^  ; .S OCXDT=$P(OCXDT,"" at "")_""@""_$E(OCXHR+100,2,3)_$E(OCXMIN+100,2,3)"
^XTMP("XPDT",7811,"RTN","ORY31603",319,0)=" ;;R^""860.8:"",100,14"
^XTMP("XPDT",7811,"RTN","ORY31603",320,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31603",321,0)=" ;;R^""860.8:"",100,15"
^XTMP("XPDT",7811,"RTN","ORY31603",322,0)=" ;;D^  ; I $L(OCXDT),(OCXDT?1.2N1""/""1.2N.1"" "".2N.1"":"".2N) D  ; EXTERNAL EXPERT SYSTEM FORMAT 2 TO EXTERNAL FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31603",323,0)=" ;1;"
^XTMP("XPDT",7811,"RTN","ORY31603",324,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31604")="0^9^B58391811^n/a"
^XTMP("XPDT",7811,"RTN","ORY31604",1,0)="ORY31604 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY31604",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY31604",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY31604",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31604",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY31604",6,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31604",7,0)=" D DOT^ORY316ES"
^XTMP("XPDT",7811,"RTN","ORY31604",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31604",9,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31604",10,0)=" K REMOTE,LOCAL,OPCODE,REF"
^XTMP("XPDT",7811,"RTN","ORY31604",11,0)=" F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),"";"",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY31604",12,0)=" .S ^TMP(""OCXRULE"",$J,$O(^TMP(""OCXRULE"",$J,""A""),-1)+1)=TEXT"
^XTMP("XPDT",7811,"RTN","ORY31604",13,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31604",14,0)=" G ^ORY31605"
^XTMP("XPDT",7811,"RTN","ORY31604",15,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31604",16,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY31604",17,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31604",18,0)="DATA ;"
^XTMP("XPDT",7811,"RTN","ORY31604",19,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31604",20,0)=" ;;R^""860.8:"",100,16"
^XTMP("XPDT",7811,"RTN","ORY31604",21,0)=" ;;D^  ; .N OCXMON"
^XTMP("XPDT",7811,"RTN","ORY31604",22,0)=" ;;R^""860.8:"",100,17"
^XTMP("XPDT",7811,"RTN","ORY31604",23,0)=" ;;D^  ; .S OCXMON=$P(""January^February^March^April^May^June^July^August^September^October^November^December"",U,$P(OCXDT,""/"",1))"
^XTMP("XPDT",7811,"RTN","ORY31604",24,0)=" ;;R^""860.8:"",100,18"
^XTMP("XPDT",7811,"RTN","ORY31604",25,0)=" ;;D^  ; .I $L($P(OCXDT,"" "",2)) S OCXDT=OCXMON_"" ""_$P($P(OCXDT,"" "",1),""/"",2)_""@""_$TR($P(OCXDT,"" "",2),"":"","""")"
^XTMP("XPDT",7811,"RTN","ORY31604",26,0)=" ;;R^""860.8:"",100,19"
^XTMP("XPDT",7811,"RTN","ORY31604",27,0)=" ;;D^  ; .E  S OCXDT=OCXMON_"" ""_$P($P(OCXDT,"" "",1),""/"",2)"
^XTMP("XPDT",7811,"RTN","ORY31604",28,0)=" ;;R^""860.8:"",100,20"
^XTMP("XPDT",7811,"RTN","ORY31604",29,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",30,0)=" ;;R^""860.8:"",100,21"
^XTMP("XPDT",7811,"RTN","ORY31604",31,0)=" ;;D^  ; I $L(OCXDT),(OCXDT?1.2N1""/""1.2N1""/""1.2N.1"" "".2N.1"":"".2N) D  ; EXTERNAL EXPERT SYSTEM FORMAT 3 TO EXTERNAL FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31604",32,0)=" ;;R^""860.8:"",100,22"
^XTMP("XPDT",7811,"RTN","ORY31604",33,0)=" ;;D^  ; .N OCXMON"
^XTMP("XPDT",7811,"RTN","ORY31604",34,0)=" ;;R^""860.8:"",100,23"
^XTMP("XPDT",7811,"RTN","ORY31604",35,0)=" ;;D^  ; .S OCXMON=$P(""January^February^March^April^May^June^July^August^September^October^November^December"",U,$P(OCXDT,""/"",1))"
^XTMP("XPDT",7811,"RTN","ORY31604",36,0)=" ;;R^""860.8:"",100,24"
^XTMP("XPDT",7811,"RTN","ORY31604",37,0)=" ;;D^  ; .I $L($P(OCXDT,"" "",2)) S OCXDT=OCXMON_"" ""_$P($P(OCXDT,"" "",1),""/"",2)_"",""_$P($P(OCXDT,"" "",1),""/"",3)_""@""_$TR($P(OCXDT,"" "",2),"":"","""")"
^XTMP("XPDT",7811,"RTN","ORY31604",38,0)=" ;;R^""860.8:"",100,25"
^XTMP("XPDT",7811,"RTN","ORY31604",39,0)=" ;;D^  ; .E  S OCXDT=OCXMON_"" ""_$P($P(OCXDT,"" "",1),""/"",2)_"", ""_$P($P(OCXDT,"" "",1),""/"",3)"
^XTMP("XPDT",7811,"RTN","ORY31604",40,0)=" ;;R^""860.8:"",100,26"
^XTMP("XPDT",7811,"RTN","ORY31604",41,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",42,0)=" ;;R^""860.8:"",100,27"
^XTMP("XPDT",7811,"RTN","ORY31604",43,0)=" ;;D^  ; I $L(OCXDT),'OCXDT D  ; EXTERNAL FORMAT TO INTERNAL FILEMAN FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31604",44,0)=" ;;R^""860.8:"",100,28"
^XTMP("XPDT",7811,"RTN","ORY31604",45,0)=" ;;D^  ; .I (OCXDT[""@0000"") S OCXDT=$P(OCXDT,""@"",1),OCXDIFF=1"
^XTMP("XPDT",7811,"RTN","ORY31604",46,0)=" ;;R^""860.8:"",100,29"
^XTMP("XPDT",7811,"RTN","ORY31604",47,0)=" ;;D^  ; .N %DT,X,Y S X=OCXDT,%DT="""" S:(OCXDT[""@"")!(OCXDT=""N"") %DT=""T"" D ^%DT S OCXDT=+Y"
^XTMP("XPDT",7811,"RTN","ORY31604",48,0)=" ;;R^""860.8:"",100,30"
^XTMP("XPDT",7811,"RTN","ORY31604",49,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",50,0)=" ;;R^""860.8:"",100,31"
^XTMP("XPDT",7811,"RTN","ORY31604",51,0)=" ;;D^  ; I ($L(OCXDT\1)>7) S OCXDT=$$HL7TFM^XLFDT(OCXDT)  ; HL7 FORMAT TO INTERNAL FILEMAN FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31604",52,0)=" ;;R^""860.8:"",100,32"
^XTMP("XPDT",7811,"RTN","ORY31604",53,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",54,0)=" ;;R^""860.8:"",100,33"
^XTMP("XPDT",7811,"RTN","ORY31604",55,0)=" ;;D^  ; I ($L(OCXDT\1)=7) S OCXDT=$$FMTH^XLFDT(+OCXDT)   ; INTERNAL FILEMAN FORMAT TO $H FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31604",56,0)=" ;;R^""860.8:"",100,34"
^XTMP("XPDT",7811,"RTN","ORY31604",57,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",58,0)=" ;;R^""860.8:"",100,35"
^XTMP("XPDT",7811,"RTN","ORY31604",59,0)=" ;;D^  ; I (OCXDT?5N1"",""1.5N) S OCXVAL=(OCXDT*86400)+$P(OCXDT,"","",2)     ;  $H FORMAT TO EXPERT SYSTEM INTERNAL FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31604",60,0)=" ;;R^""860.8:"",100,36"
^XTMP("XPDT",7811,"RTN","ORY31604",61,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",62,0)=" ;;R^""860.8:"",100,37"
^XTMP("XPDT",7811,"RTN","ORY31604",63,0)=" ;;D^  ; Q OCXVAL"
^XTMP("XPDT",7811,"RTN","ORY31604",64,0)=" ;;R^""860.8:"",100,38"
^XTMP("XPDT",7811,"RTN","ORY31604",65,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",66,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31604",67,0)=" ;;KEY^860.8:^CONVERT DATE FROM OCX FORMAT TO READABLE FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31604",68,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31604",69,0)=" ;;D^CONVERT DATE FROM OCX FORMAT TO READABLE FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31604",70,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31604",71,0)=" ;;D^INT2DT"
^XTMP("XPDT",7811,"RTN","ORY31604",72,0)=" ;;R^""860.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31604",73,0)=" ;;D^  ;INT2DT(OCXDT,OCXF) ;      This Local Extrinsic Function converts an OCX internal format"
^XTMP("XPDT",7811,"RTN","ORY31604",74,0)=" ;;R^""860.8:"",1,2"
^XTMP("XPDT",7811,"RTN","ORY31604",75,0)=" ;;D^  ; ; date into an Externl Format (Human Readable) date.   'OCXF=SHORT FORMAT OCXF=LONG FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31604",76,0)=" ;;R^""860.8:"",1,3"
^XTMP("XPDT",7811,"RTN","ORY31604",77,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",78,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31604",79,0)=" ;;D^  ;INT2DT(OCXDT,OCXF) ;      This Local Extrinsic Function converts an OCX internal format"
^XTMP("XPDT",7811,"RTN","ORY31604",80,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31604",81,0)=" ;;D^  ; ; date into an Externl Format (Human Readable) date.   'OCXF=SHORT FORMAT OCXF=LONG FORMAT"
^XTMP("XPDT",7811,"RTN","ORY31604",82,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31604",83,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",84,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31604",85,0)=" ;;D^  ; Q:'$L($G(OCXDT)) """" S OCXF=+$G(OCXF)"
^XTMP("XPDT",7811,"RTN","ORY31604",86,0)=" ;;R^""860.8:"",100,5"
^XTMP("XPDT",7811,"RTN","ORY31604",87,0)=" ;;D^  ; N OCXYR,OCXLPYR,OCXMON,OCXDAY,OCXHR,OCXMIN,OCXSEC,OCXCYR"
^XTMP("XPDT",7811,"RTN","ORY31604",88,0)=" ;;R^""860.8:"",100,6"
^XTMP("XPDT",7811,"RTN","ORY31604",89,0)=" ;;D^  ; S (OCXYR,OCXLPYR,OCXMON,OCXDAY,OCXHR,OCXMIN,OCXSEC,OCXAP)="""""
^XTMP("XPDT",7811,"RTN","ORY31604",90,0)=" ;;R^""860.8:"",100,7"
^XTMP("XPDT",7811,"RTN","ORY31604",91,0)=" ;;D^  ; S OCXSEC=$E(OCXDT#60+100,2,3),OCXDT=OCXDT\60"
^XTMP("XPDT",7811,"RTN","ORY31604",92,0)=" ;;R^""860.8:"",100,8"
^XTMP("XPDT",7811,"RTN","ORY31604",93,0)=" ;;D^  ; S OCXMIN=$E(OCXDT#60+100,2,3),OCXDT=OCXDT\60"
^XTMP("XPDT",7811,"RTN","ORY31604",94,0)=" ;;R^""860.8:"",100,9"
^XTMP("XPDT",7811,"RTN","ORY31604",95,0)=" ;;D^  ; S OCXHR=$E(OCXDT#24+100,2,3),OCXDT=OCXDT\24"
^XTMP("XPDT",7811,"RTN","ORY31604",96,0)=" ;;R^""860.8:"",100,10"
^XTMP("XPDT",7811,"RTN","ORY31604",97,0)=" ;;D^  ; S OCXCYR=($H\1461)*4+1841+(($H#1461)\365)"
^XTMP("XPDT",7811,"RTN","ORY31604",98,0)=" ;;R^""860.8:"",100,11"
^XTMP("XPDT",7811,"RTN","ORY31604",99,0)=" ;;D^  ; S OCXYR=(OCXDT\1461)*4+1841,OCXDT=OCXDT#1461"
^XTMP("XPDT",7811,"RTN","ORY31604",100,0)=" ;;R^""860.8:"",100,12"
^XTMP("XPDT",7811,"RTN","ORY31604",101,0)=" ;;D^  ; S OCXLPYR=(OCXDT\365),OCXDT=OCXDT-(OCXLPYR*365),OCXYR=OCXYR+OCXLPYR"
^XTMP("XPDT",7811,"RTN","ORY31604",102,0)=" ;;R^""860.8:"",100,13"
^XTMP("XPDT",7811,"RTN","ORY31604",103,0)=" ;;D^  ; S OCXCNT=""031^059^090^120^151^181^212^243^273^304^334^365"""
^XTMP("XPDT",7811,"RTN","ORY31604",104,0)=" ;;R^""860.8:"",100,14"
^XTMP("XPDT",7811,"RTN","ORY31604",105,0)=" ;;D^  ; S:(OCXLPYR=3) OCXCNT=""031^060^091^121^152^182^213^244^274^305^335^366"""
^XTMP("XPDT",7811,"RTN","ORY31604",106,0)=" ;;R^""860.8:"",100,15"
^XTMP("XPDT",7811,"RTN","ORY31604",107,0)=" ;;D^  ; F OCXMON=1:1:12 Q:(OCXDT<$P(OCXCNT,U,OCXMON))"
^XTMP("XPDT",7811,"RTN","ORY31604",108,0)=" ;;R^""860.8:"",100,16"
^XTMP("XPDT",7811,"RTN","ORY31604",109,0)=" ;;D^  ; S OCXDAY=OCXDT-$P(OCXCNT,U,OCXMON-1)+1"
^XTMP("XPDT",7811,"RTN","ORY31604",110,0)=" ;;R^""860.8:"",100,17"
^XTMP("XPDT",7811,"RTN","ORY31604",111,0)=" ;;D^  ; I OCXF S OCXMON=$P(""January^February^March^April^May^June^July^August^September^October^November^December"",U,OCXMON)"
^XTMP("XPDT",7811,"RTN","ORY31604",112,0)=" ;;R^""860.8:"",100,18"
^XTMP("XPDT",7811,"RTN","ORY31604",113,0)=" ;;D^  ; E  S OCXMON=$E(OCXMON+100,2,3)"
^XTMP("XPDT",7811,"RTN","ORY31604",114,0)=" ;;R^""860.8:"",100,19"
^XTMP("XPDT",7811,"RTN","ORY31604",115,0)=" ;;D^  ; S OCXAP=$S('OCXHR:""Midnight"",(OCXHR=12):""Noon"",(OCXHR<12):""AM"",1:""PM"")"
^XTMP("XPDT",7811,"RTN","ORY31604",116,0)=" ;;R^""860.8:"",100,20"
^XTMP("XPDT",7811,"RTN","ORY31604",117,0)=" ;;D^  ; I OCXF S OCXHR=OCXHR#12 S:'OCXHR OCXHR=12"
^XTMP("XPDT",7811,"RTN","ORY31604",118,0)=" ;;R^""860.8:"",100,21"
^XTMP("XPDT",7811,"RTN","ORY31604",119,0)=" ;;D^  ; Q:'OCXF $E(OCXMON+100,2,3)_""/""_$E(OCXDAY+100,2,3)_$S((OCXCYR=OCXYR):"" ""_OCXHR_"":""_OCXMIN,1:""/""_$E(OCXYR,3,4))"
^XTMP("XPDT",7811,"RTN","ORY31604",120,0)=" ;;R^""860.8:"",100,22"
^XTMP("XPDT",7811,"RTN","ORY31604",121,0)=" ;;D^  ; Q:(OCXHR+OCXMIN+OCXSEC) OCXMON_"" ""_OCXDAY_"",""_OCXYR_"" at ""_OCXHR_"":""_OCXMIN_"".""_OCXSEC_"" ""_OCXAP"
^XTMP("XPDT",7811,"RTN","ORY31604",122,0)=" ;;R^""860.8:"",100,23"
^XTMP("XPDT",7811,"RTN","ORY31604",123,0)=" ;;D^  ; Q OCXMON_"" ""_OCXDAY_"",""_OCXYR"
^XTMP("XPDT",7811,"RTN","ORY31604",124,0)=" ;;R^""860.8:"",100,24"
^XTMP("XPDT",7811,"RTN","ORY31604",125,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",126,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31604",127,0)=" ;;KEY^860.8:^ELAPSED ORDER CHECK TIME LOGGER"
^XTMP("XPDT",7811,"RTN","ORY31604",128,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31604",129,0)=" ;;D^ELAPSED ORDER CHECK TIME LOGGER"
^XTMP("XPDT",7811,"RTN","ORY31604",130,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31604",131,0)=" ;;D^TIMELOG"
^XTMP("XPDT",7811,"RTN","ORY31604",132,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31604",133,0)=" ;;D^  ;TIMELOG(OCXMODE,OCXCALL) ; Log an entry in the Elapsed time log."
^XTMP("XPDT",7811,"RTN","ORY31604",134,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31604",135,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",136,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31604",137,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",138,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31604",139,0)=" ;;D^  ; Q 0"
^XTMP("XPDT",7811,"RTN","ORY31604",140,0)=" ;;R^""860.8:"",100,5"
^XTMP("XPDT",7811,"RTN","ORY31604",141,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",142,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31604",143,0)=" ;;KEY^860.8:^EQUALS TERM OPERATOR"
^XTMP("XPDT",7811,"RTN","ORY31604",144,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31604",145,0)=" ;;D^EQUALS TERM OPERATOR"
^XTMP("XPDT",7811,"RTN","ORY31604",146,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31604",147,0)=" ;;D^EQTERM"
^XTMP("XPDT",7811,"RTN","ORY31604",148,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31604",149,0)=" ;;D^  ;EQTERM(DATA,TERM) ;"
^XTMP("XPDT",7811,"RTN","ORY31604",150,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31604",151,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",152,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31604",153,0)=" ;;D^T+; I $G(OCXTRACE) W !,""%%%%"",?20,"" Execution trace  DATA: "",$G(DATA),""   TERM: "",$G(TERM)"
^XTMP("XPDT",7811,"RTN","ORY31604",154,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31604",155,0)=" ;;D^  ; N OCXF,OCXL"
^XTMP("XPDT",7811,"RTN","ORY31604",156,0)=" ;;R^""860.8:"",100,5"
^XTMP("XPDT",7811,"RTN","ORY31604",157,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",158,0)=" ;;R^""860.8:"",100,6"
^XTMP("XPDT",7811,"RTN","ORY31604",159,0)=" ;;D^  ; S OCXL="""",OCXF=$$TERMLKUP(TERM,.OCXL)"
^XTMP("XPDT",7811,"RTN","ORY31604",160,0)=" ;;R^""860.8:"",100,7"
^XTMP("XPDT",7811,"RTN","ORY31604",161,0)=" ;;D^T-; Q:'OCXF 0"
^XTMP("XPDT",7811,"RTN","ORY31604",162,0)=" ;;R^""860.8:"",100,8"
^XTMP("XPDT",7811,"RTN","ORY31604",163,0)=" ;;D^T+; I 'OCXF W:$G(OCXTRACE) !,""%%%%"",?20,"" Term '"",TERM,""' not in Order Check National Term File"" Q 0"
^XTMP("XPDT",7811,"RTN","ORY31604",164,0)=" ;;R^""860.8:"",100,9"
^XTMP("XPDT",7811,"RTN","ORY31604",165,0)=" ;;D^T+; I '$O(OCXL(0)) W:$G(OCXTRACE) !,""%%%%"",?20,"" There are no local terms listed for the National Term '"",TERM,""'."" Q 0"
^XTMP("XPDT",7811,"RTN","ORY31604",166,0)=" ;;R^""860.8:"",100,10"
^XTMP("XPDT",7811,"RTN","ORY31604",167,0)=" ;;D^T+; I ($D(OCXL(DATA))!$D(OCXL(""B"",DATA))) W:$G(OCXTRACE) !,""%%%%"",?20,"" Data equals Term"" Q 1"
^XTMP("XPDT",7811,"RTN","ORY31604",168,0)=" ;;R^""860.8:"",100,11"
^XTMP("XPDT",7811,"RTN","ORY31604",169,0)=" ;;D^T-; I ($D(OCXL(DATA))!$D(OCXL(""B"",DATA))) Q 1"
^XTMP("XPDT",7811,"RTN","ORY31604",170,0)=" ;;R^""860.8:"",100,12"
^XTMP("XPDT",7811,"RTN","ORY31604",171,0)=" ;;D^T-; Q 0"
^XTMP("XPDT",7811,"RTN","ORY31604",172,0)=" ;;R^""860.8:"",100,13"
^XTMP("XPDT",7811,"RTN","ORY31604",173,0)=" ;;D^T+; W:$G(OCXTRACE) !,""%%%%"",?20,"" Data does not equal Term"" Q 0"
^XTMP("XPDT",7811,"RTN","ORY31604",174,0)=" ;;R^""860.8:"",100,14"
^XTMP("XPDT",7811,"RTN","ORY31604",175,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",176,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31604",177,0)=" ;;KEY^860.8:^FILE DATA IN PATIENT ACTIVE DATA FILE"
^XTMP("XPDT",7811,"RTN","ORY31604",178,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31604",179,0)=" ;;D^FILE DATA IN PATIENT ACTIVE DATA FILE"
^XTMP("XPDT",7811,"RTN","ORY31604",180,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31604",181,0)=" ;;D^FILE"
^XTMP("XPDT",7811,"RTN","ORY31604",182,0)=" ;;R^""860.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31604",183,0)=" ;;D^  ;FILE(DFN,OCXELE,OCXDFL) ;     This Local Extrinsic Function files data"
^XTMP("XPDT",7811,"RTN","ORY31604",184,0)=" ;;R^""860.8:"",1,2"
^XTMP("XPDT",7811,"RTN","ORY31604",185,0)=" ;;D^  ; ;     in the Order Check Patient Data File"
^XTMP("XPDT",7811,"RTN","ORY31604",186,0)=" ;;R^""860.8:"",1,3"
^XTMP("XPDT",7811,"RTN","ORY31604",187,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",188,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31604",189,0)=" ;;D^  ;FILE(DFN,OCXELE,OCXDFL) ;     This Local Extrinsic Function logs a validated event/element."
^XTMP("XPDT",7811,"RTN","ORY31604",190,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31604",191,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31604",192,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31604",193,0)=" ;;D^T+; I $G(OCXTRACE) W !,""%%%%"",?20,"" Execution trace  DFN: "",DFN,""   OCXELE: "",+$G(OCXELE),""   OCXDFL: "",$G(OCXDFL)"
^XTMP("XPDT",7811,"RTN","ORY31604",194,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31604",195,0)=" ;;D^  ; N OCXTIMN,OCXTIML,OCXTIMT1,OCXTIMT2,OCXDATA,OCXPC,OCXPC,OCXVAL,OCXSUB,OCXDFI"
^XTMP("XPDT",7811,"RTN","ORY31604",196,0)=" ;;R^""860.8:"",100,5"
^XTMP("XPDT",7811,"RTN","ORY31604",197,0)=" ;;D^  ; S DFN=+$G(DFN),OCXELE=+$G(OCXELE)"
^XTMP("XPDT",7811,"RTN","ORY31604",198,0)=" ;1;"
^XTMP("XPDT",7811,"RTN","ORY31604",199,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31605")="0^10^B67826607^n/a"
^XTMP("XPDT",7811,"RTN","ORY31605",1,0)="ORY31605 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY31605",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY31605",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY31605",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31605",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY31605",6,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31605",7,0)=" D DOT^ORY316ES"
^XTMP("XPDT",7811,"RTN","ORY31605",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31605",9,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31605",10,0)=" K REMOTE,LOCAL,OPCODE,REF"
^XTMP("XPDT",7811,"RTN","ORY31605",11,0)=" F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),"";"",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY31605",12,0)=" .S ^TMP(""OCXRULE"",$J,$O(^TMP(""OCXRULE"",$J,""A""),-1)+1)=TEXT"
^XTMP("XPDT",7811,"RTN","ORY31605",13,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31605",14,0)=" G ^ORY31606"
^XTMP("XPDT",7811,"RTN","ORY31605",15,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31605",16,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY31605",17,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31605",18,0)="DATA ;"
^XTMP("XPDT",7811,"RTN","ORY31605",19,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31605",20,0)=" ;;R^""860.8:"",100,6"
^XTMP("XPDT",7811,"RTN","ORY31605",21,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",22,0)=" ;;R^""860.8:"",100,7"
^XTMP("XPDT",7811,"RTN","ORY31605",23,0)=" ;;D^  ; Q:'DFN 1 Q:'OCXELE 1 K OCXDATA"
^XTMP("XPDT",7811,"RTN","ORY31605",24,0)=" ;;R^""860.8:"",100,8"
^XTMP("XPDT",7811,"RTN","ORY31605",25,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",26,0)=" ;;R^""860.8:"",100,9"
^XTMP("XPDT",7811,"RTN","ORY31605",27,0)=" ;;D^  ; S OCXDATA(DFN,OCXELE)=1"
^XTMP("XPDT",7811,"RTN","ORY31605",28,0)=" ;;R^""860.8:"",100,10"
^XTMP("XPDT",7811,"RTN","ORY31605",29,0)=" ;;D^  ; F OCXPC=1:1:$L(OCXDFL,"","") S OCXDFI=$P(OCXDFL,"","",OCXPC) I OCXDFI D"
^XTMP("XPDT",7811,"RTN","ORY31605",30,0)=" ;;R^""860.8:"",100,11"
^XTMP("XPDT",7811,"RTN","ORY31605",31,0)=" ;;D^  ; .S OCXVAL=$G(OCXDF(+OCXDFI)),OCXDATA(DFN,OCXELE,+OCXDFI)=OCXVAL"
^XTMP("XPDT",7811,"RTN","ORY31605",32,0)=" ;;R^""860.8:"",100,12"
^XTMP("XPDT",7811,"RTN","ORY31605",33,0)=" ;;D^T+; .I $G(OCXTRACE) W !,""%%%%"",?20,""   "",$P($G(^OCXS(860.4,+OCXDFI,0)),U,1),"" = """""",OCXVAL,"""""""""
^XTMP("XPDT",7811,"RTN","ORY31605",34,0)=" ;;R^""860.8:"",100,13"
^XTMP("XPDT",7811,"RTN","ORY31605",35,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",36,0)=" ;;R^""860.8:"",100,14"
^XTMP("XPDT",7811,"RTN","ORY31605",37,0)=" ;;D^  ; M ^TMP(""OCXCHK"",$J,DFN)=OCXDATA(DFN)"
^XTMP("XPDT",7811,"RTN","ORY31605",38,0)=" ;;R^""860.8:"",100,15"
^XTMP("XPDT",7811,"RTN","ORY31605",39,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",40,0)=" ;;R^""860.8:"",100,16"
^XTMP("XPDT",7811,"RTN","ORY31605",41,0)=" ;;D^  ; Q 0"
^XTMP("XPDT",7811,"RTN","ORY31605",42,0)=" ;;R^""860.8:"",100,17"
^XTMP("XPDT",7811,"RTN","ORY31605",43,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",44,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31605",45,0)=" ;;KEY^860.8:^GENERATE STRING CHECKSUM"
^XTMP("XPDT",7811,"RTN","ORY31605",46,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31605",47,0)=" ;;D^GENERATE STRING CHECKSUM"
^XTMP("XPDT",7811,"RTN","ORY31605",48,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31605",49,0)=" ;;D^CKSUM"
^XTMP("XPDT",7811,"RTN","ORY31605",50,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31605",51,0)=" ;;D^  ;CKSUM(STR) ;"
^XTMP("XPDT",7811,"RTN","ORY31605",52,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31605",53,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",54,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31605",55,0)=" ;;D^  ; N CKSUM,PTR,ASC S CKSUM=0"
^XTMP("XPDT",7811,"RTN","ORY31605",56,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31605",57,0)=" ;;D^  ; S STR=$TR(STR,""abcdefghijklmnopqrstuvwxyz"",""ABCDEFGHIJKLMNOPQRSTUVWXYZ"")"
^XTMP("XPDT",7811,"RTN","ORY31605",58,0)=" ;;R^""860.8:"",100,5"
^XTMP("XPDT",7811,"RTN","ORY31605",59,0)=" ;;D^  ; F PTR=$L(STR):-1:1 S ASC=$A(STR,PTR)-42 I (ASC>0),(ASC<51) S CKSUM=CKSUM*2+ASC"
^XTMP("XPDT",7811,"RTN","ORY31605",60,0)=" ;;R^""860.8:"",100,6"
^XTMP("XPDT",7811,"RTN","ORY31605",61,0)=" ;;D^  ; Q +CKSUM"
^XTMP("XPDT",7811,"RTN","ORY31605",62,0)=" ;;R^""860.8:"",100,7"
^XTMP("XPDT",7811,"RTN","ORY31605",63,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",64,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31605",65,0)=" ;;KEY^860.8:^GET DATA FROM THE ACTIVE DATA FILE"
^XTMP("XPDT",7811,"RTN","ORY31605",66,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31605",67,0)=" ;;D^GET DATA FROM THE ACTIVE DATA FILE"
^XTMP("XPDT",7811,"RTN","ORY31605",68,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31605",69,0)=" ;;D^GETDATA"
^XTMP("XPDT",7811,"RTN","ORY31605",70,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31605",71,0)=" ;;D^  ;GETDATA(DFN,OCXL,OCXDFI) ;     This Local Extrinsic Function returns runtime data"
^XTMP("XPDT",7811,"RTN","ORY31605",72,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31605",73,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",74,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31605",75,0)=" ;;D^  ; N OCXE,VAL,PC S VAL="""""
^XTMP("XPDT",7811,"RTN","ORY31605",76,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31605",77,0)=" ;;D^  ; F PC=1:1:$L(OCXL,U) S OCXE=$P(OCXL,U,PC) I OCXE S VAL=$G(^TMP(""OCXCHK"",$J,DFN,OCXE,OCXDFI)) Q:$L(VAL)"
^XTMP("XPDT",7811,"RTN","ORY31605",78,0)=" ;;R^""860.8:"",100,5"
^XTMP("XPDT",7811,"RTN","ORY31605",79,0)=" ;;D^  ; Q VAL"
^XTMP("XPDT",7811,"RTN","ORY31605",80,0)=" ;;R^""860.8:"",100,6"
^XTMP("XPDT",7811,"RTN","ORY31605",81,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",82,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31605",83,0)=" ;;KEY^860.8:^IN LIST OPERATOR"
^XTMP("XPDT",7811,"RTN","ORY31605",84,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31605",85,0)=" ;;D^IN LIST OPERATOR"
^XTMP("XPDT",7811,"RTN","ORY31605",86,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31605",87,0)=" ;;D^LIST"
^XTMP("XPDT",7811,"RTN","ORY31605",88,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31605",89,0)=" ;;D^  ;LIST(DATA,LIST) ;   IS THE DATA FIELD IN THE LIST"
^XTMP("XPDT",7811,"RTN","ORY31605",90,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31605",91,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",92,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31605",93,0)=" ;;D^T+; W:$G(OCXTRACE) !,""%%%%"",?20,""     $$LIST("""""",DATA,"""""","""""",LIST,"""""")"""
^XTMP("XPDT",7811,"RTN","ORY31605",94,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31605",95,0)=" ;;D^  ; S:'($E(LIST,1)="","") LIST="",""_LIST S:'($E(LIST,$L(LIST))="","") LIST=LIST_"","" S DATA="",""_DATA_"","""
^XTMP("XPDT",7811,"RTN","ORY31605",96,0)=" ;;R^""860.8:"",100,5"
^XTMP("XPDT",7811,"RTN","ORY31605",97,0)=" ;;D^  ; Q (LIST[DATA)"
^XTMP("XPDT",7811,"RTN","ORY31605",98,0)=" ;;R^""860.8:"",100,6"
^XTMP("XPDT",7811,"RTN","ORY31605",99,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",100,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31605",101,0)=" ;;KEY^860.8:^LOCAL TERM LOOKUP"
^XTMP("XPDT",7811,"RTN","ORY31605",102,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31605",103,0)=" ;;D^LOCAL TERM LOOKUP"
^XTMP("XPDT",7811,"RTN","ORY31605",104,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31605",105,0)=" ;;D^TERMLKUP"
^XTMP("XPDT",7811,"RTN","ORY31605",106,0)=" ;;R^""860.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31605",107,0)=" ;;D^ "
^XTMP("XPDT",7811,"RTN","ORY31605",108,0)=" ;;R^""860.8:"",1,2"
^XTMP("XPDT",7811,"RTN","ORY31605",109,0)=" ;;D^  This function allows a local site to define to Order Checking"
^XTMP("XPDT",7811,"RTN","ORY31605",110,0)=" ;;R^""860.8:"",1,3"
^XTMP("XPDT",7811,"RTN","ORY31605",111,0)=" ;;D^ a term specific to that site. (ie. Lab Test Name, Radiology"
^XTMP("XPDT",7811,"RTN","ORY31605",112,0)=" ;;R^""860.8:"",1,4"
^XTMP("XPDT",7811,"RTN","ORY31605",113,0)=" ;;D^ procedure name, etc.)"
^XTMP("XPDT",7811,"RTN","ORY31605",114,0)=" ;;R^""860.8:"",1,5"
^XTMP("XPDT",7811,"RTN","ORY31605",115,0)=" ;;D^ "
^XTMP("XPDT",7811,"RTN","ORY31605",116,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31605",117,0)=" ;;D^  ;TERMLKUP(OCXTERM,OCXFILE) ;"
^XTMP("XPDT",7811,"RTN","ORY31605",118,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31605",119,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",120,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31605",121,0)=" ;;D^  ; Q"
^XTMP("XPDT",7811,"RTN","ORY31605",122,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31605",123,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",124,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31605",125,0)=" ;;KEY^860.8:^NEW RULE MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31605",126,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31605",127,0)=" ;;D^NEW RULE MESSAGE"
^XTMP("XPDT",7811,"RTN","ORY31605",128,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31605",129,0)=" ;;D^NEWRULE"
^XTMP("XPDT",7811,"RTN","ORY31605",130,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31605",131,0)=" ;;D^  ;NEWRULE(OCXDFN,OCXORD,OCXRUL,OCXREL,OCXNOTF,OCXMESS) ; Has this rule already been triggered for this order number"
^XTMP("XPDT",7811,"RTN","ORY31605",132,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31605",133,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",134,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31605",135,0)=" ;;D^L+; S OCXERR=$$TIMELOG(""M"",""NEWRULE(""_(+$G(OCXDFN))_"",""_(+$G(OCXORD))_"",""_(+$G(OCXRUL))_"",""_(+$G(OCXREL))_"",""_(+$G(OCXNOTF))_"",""_$G(OCXMESS)_"")"")"
^XTMP("XPDT",7811,"RTN","ORY31605",136,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31605",137,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",138,0)=" ;;R^""860.8:"",100,5"
^XTMP("XPDT",7811,"RTN","ORY31605",139,0)=" ;;D^  ; Q:'$G(OCXDFN) 0 Q:'$G(OCXRUL) 0"
^XTMP("XPDT",7811,"RTN","ORY31605",140,0)=" ;;R^""860.8:"",100,6"
^XTMP("XPDT",7811,"RTN","ORY31605",141,0)=" ;;D^  ; Q:'$G(OCXREL) 0  Q:'$G(OCXNOTF) 0  Q:'$L($G(OCXMESS)) 0"
^XTMP("XPDT",7811,"RTN","ORY31605",142,0)=" ;;R^""860.8:"",100,7"
^XTMP("XPDT",7811,"RTN","ORY31605",143,0)=" ;;D^  ; S OCXORD=+$G(OCXORD),OCXDFN=+OCXDFN"
^XTMP("XPDT",7811,"RTN","ORY31605",144,0)=" ;;R^""860.8:"",100,8"
^XTMP("XPDT",7811,"RTN","ORY31605",145,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",146,0)=" ;;R^""860.8:"",100,9"
^XTMP("XPDT",7811,"RTN","ORY31605",147,0)=" ;;D^  ; N OCXNDX,OCXDATA,OCXDFI,OCXELE,OCXGR,OCXTIME,OCXCKSUM,OCXTSP,OCXTSPL"
^XTMP("XPDT",7811,"RTN","ORY31605",148,0)=" ;;R^""860.8:"",100,10"
^XTMP("XPDT",7811,"RTN","ORY31605",149,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",150,0)=" ;;R^""860.8:"",100,11"
^XTMP("XPDT",7811,"RTN","ORY31605",151,0)=" ;;D^  ; S OCXTIME=(+$H)"
^XTMP("XPDT",7811,"RTN","ORY31605",152,0)=" ;;R^""860.8:"",100,12"
^XTMP("XPDT",7811,"RTN","ORY31605",153,0)=" ;;D^  ; S OCXCKSUM=$$CKSUM(OCXMESS)"
^XTMP("XPDT",7811,"RTN","ORY31605",154,0)=" ;;R^""860.8:"",100,13"
^XTMP("XPDT",7811,"RTN","ORY31605",155,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",156,0)=" ;;R^""860.8:"",100,14"
^XTMP("XPDT",7811,"RTN","ORY31605",157,0)=" ;;D^  ; S OCXTSP=($H*86400)+$P($H,"","",2)"
^XTMP("XPDT",7811,"RTN","ORY31605",158,0)=" ;;R^""860.8:"",100,15"
^XTMP("XPDT",7811,"RTN","ORY31605",159,0)=" ;;D^  ; S OCXTSPL=($G(^OCXD(860.7,""AT"",OCXTIME,OCXDFN,OCXRUL,+OCXORD,OCXCKSUM))+$G(OCXTSPI,300))"
^XTMP("XPDT",7811,"RTN","ORY31605",160,0)=" ;;R^""860.8:"",100,16"
^XTMP("XPDT",7811,"RTN","ORY31605",161,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",162,0)=" ;;R^""860.8:"",100,17"
^XTMP("XPDT",7811,"RTN","ORY31605",163,0)=" ;;D^  ; Q:(OCXTSPL>OCXTSP) 0"
^XTMP("XPDT",7811,"RTN","ORY31605",164,0)=" ;;R^""860.8:"",100,18"
^XTMP("XPDT",7811,"RTN","ORY31605",165,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",166,0)=" ;;R^""860.8:"",100,19"
^XTMP("XPDT",7811,"RTN","ORY31605",167,0)=" ;;D^  ; K OCXDATA"
^XTMP("XPDT",7811,"RTN","ORY31605",168,0)=" ;;R^""860.8:"",100,20"
^XTMP("XPDT",7811,"RTN","ORY31605",169,0)=" ;;D^  ; S OCXDATA(OCXDFN,0)=OCXDFN"
^XTMP("XPDT",7811,"RTN","ORY31605",170,0)=" ;;R^""860.8:"",100,21"
^XTMP("XPDT",7811,"RTN","ORY31605",171,0)=" ;;D^  ; S OCXDATA(""B"",OCXDFN,OCXDFN)="""""
^XTMP("XPDT",7811,"RTN","ORY31605",172,0)=" ;;R^""860.8:"",100,22"
^XTMP("XPDT",7811,"RTN","ORY31605",173,0)=" ;;D^  ; S OCXDATA(""AT"",OCXTIME,OCXDFN,OCXRUL,+OCXORD,OCXCKSUM)=OCXTSP"
^XTMP("XPDT",7811,"RTN","ORY31605",174,0)=" ;;R^""860.8:"",100,23"
^XTMP("XPDT",7811,"RTN","ORY31605",175,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",176,0)=" ;;R^""860.8:"",100,24"
^XTMP("XPDT",7811,"RTN","ORY31605",177,0)=" ;;D^  ; S OCXGR=""^OCXD(860.7"""
^XTMP("XPDT",7811,"RTN","ORY31605",178,0)=" ;;R^""860.8:"",100,25"
^XTMP("XPDT",7811,"RTN","ORY31605",179,0)=" ;;D^T+; D SETAP(OCXGR_"")"",0,""Patient"",$P($G(^DPT(OCXDFN,0)),U,1),.OCXDATA,OCXDFN)"
^XTMP("XPDT",7811,"RTN","ORY31605",180,0)=" ;;R^""860.8:"",100,26"
^XTMP("XPDT",7811,"RTN","ORY31605",181,0)=" ;;D^T-; D SETAP(OCXGR_"")"",0,.OCXDATA,OCXDFN)"
^XTMP("XPDT",7811,"RTN","ORY31605",182,0)=" ;;R^""860.8:"",100,27"
^XTMP("XPDT",7811,"RTN","ORY31605",183,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",184,0)=" ;;R^""860.8:"",100,28"
^XTMP("XPDT",7811,"RTN","ORY31605",185,0)=" ;;D^  ; K OCXDATA"
^XTMP("XPDT",7811,"RTN","ORY31605",186,0)=" ;;R^""860.8:"",100,29"
^XTMP("XPDT",7811,"RTN","ORY31605",187,0)=" ;;D^  ; S OCXDATA(OCXRUL,0)=OCXRUL_U_(OCXTIME)_U_(+OCXORD)"
^XTMP("XPDT",7811,"RTN","ORY31605",188,0)=" ;;R^""860.8:"",100,30"
^XTMP("XPDT",7811,"RTN","ORY31605",189,0)=" ;;D^  ; S OCXDATA(OCXRUL,""M"")=OCXMESS"
^XTMP("XPDT",7811,"RTN","ORY31605",190,0)=" ;;R^""860.8:"",100,31"
^XTMP("XPDT",7811,"RTN","ORY31605",191,0)=" ;;D^  ; S OCXDATA(""B"",OCXRUL,OCXRUL)="""""
^XTMP("XPDT",7811,"RTN","ORY31605",192,0)=" ;;R^""860.8:"",100,32"
^XTMP("XPDT",7811,"RTN","ORY31605",193,0)=" ;;D^  ; S OCXGR=OCXGR_"",""_OCXDFN_"",1"""
^XTMP("XPDT",7811,"RTN","ORY31605",194,0)=" ;;R^""860.8:"",100,33"
^XTMP("XPDT",7811,"RTN","ORY31605",195,0)=" ;;D^T+; D SETAP(OCXGR_"")"",""860.71P"",""Rule"",$P($G(^OCXS(860.2,OCXRUL,0)),U,1),.OCXDATA,OCXRUL)"
^XTMP("XPDT",7811,"RTN","ORY31605",196,0)=" ;;R^""860.8:"",100,34"
^XTMP("XPDT",7811,"RTN","ORY31605",197,0)=" ;;D^T-; D SETAP(OCXGR_"")"",""860.71P"",.OCXDATA,OCXRUL)"
^XTMP("XPDT",7811,"RTN","ORY31605",198,0)=" ;;R^""860.8:"",100,35"
^XTMP("XPDT",7811,"RTN","ORY31605",199,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",200,0)=" ;;R^""860.8:"",100,36"
^XTMP("XPDT",7811,"RTN","ORY31605",201,0)=" ;;D^  ; K OCXDATA"
^XTMP("XPDT",7811,"RTN","ORY31605",202,0)=" ;;R^""860.8:"",100,37"
^XTMP("XPDT",7811,"RTN","ORY31605",203,0)=" ;;D^  ; S OCXDATA(OCXREL,0)=OCXREL"
^XTMP("XPDT",7811,"RTN","ORY31605",204,0)=" ;;R^""860.8:"",100,38"
^XTMP("XPDT",7811,"RTN","ORY31605",205,0)=" ;;D^  ; S OCXDATA(""B"",OCXREL,OCXREL)="""""
^XTMP("XPDT",7811,"RTN","ORY31605",206,0)=" ;;R^""860.8:"",100,39"
^XTMP("XPDT",7811,"RTN","ORY31605",207,0)=" ;;D^  ; S OCXGR=OCXGR_"",""_OCXRUL_"",1"""
^XTMP("XPDT",7811,"RTN","ORY31605",208,0)=" ;;R^""860.8:"",100,40"
^XTMP("XPDT",7811,"RTN","ORY31605",209,0)=" ;;D^T+; D SETAP(OCXGR_"")"",""860.712"",""Relation"",OCXREL,.OCXDATA,OCXREL)"
^XTMP("XPDT",7811,"RTN","ORY31605",210,0)=" ;;R^""860.8:"",100,41"
^XTMP("XPDT",7811,"RTN","ORY31605",211,0)=" ;;D^T-; D SETAP(OCXGR_"")"",""860.712"",.OCXDATA,OCXREL)"
^XTMP("XPDT",7811,"RTN","ORY31605",212,0)=" ;;R^""860.8:"",100,42"
^XTMP("XPDT",7811,"RTN","ORY31605",213,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31605",214,0)=" ;;R^""860.8:"",100,43"
^XTMP("XPDT",7811,"RTN","ORY31605",215,0)=" ;;D^  ; S OCXELE=0 F  S OCXELE=$O(^OCXS(860.2,OCXRUL,""C"",""C"",OCXELE)) Q:'OCXELE  D"
^XTMP("XPDT",7811,"RTN","ORY31605",216,0)=" ;;R^""860.8:"",100,44"
^XTMP("XPDT",7811,"RTN","ORY31605",217,0)=" ;;D^  ; .;"
^XTMP("XPDT",7811,"RTN","ORY31605",218,0)=" ;;R^""860.8:"",100,45"
^XTMP("XPDT",7811,"RTN","ORY31605",219,0)=" ;;D^  ; .N OCXGR1"
^XTMP("XPDT",7811,"RTN","ORY31605",220,0)=" ;;R^""860.8:"",100,46"
^XTMP("XPDT",7811,"RTN","ORY31605",221,0)=" ;;D^  ; .S OCXGR1=OCXGR_"",""_OCXREL_"",1"""
^XTMP("XPDT",7811,"RTN","ORY31605",222,0)=" ;;R^""860.8:"",100,47"
^XTMP("XPDT",7811,"RTN","ORY31605",223,0)=" ;;D^  ; .K OCXDATA"
^XTMP("XPDT",7811,"RTN","ORY31605",224,0)=" ;;R^""860.8:"",100,48"
^XTMP("XPDT",7811,"RTN","ORY31605",225,0)=" ;;D^  ; .S OCXDATA(OCXELE,0)=OCXELE"
^XTMP("XPDT",7811,"RTN","ORY31605",226,0)=" ;;R^""860.8:"",100,49"
^XTMP("XPDT",7811,"RTN","ORY31605",227,0)=" ;;D^  ; .S OCXDATA(OCXELE,""TIME"")=OCXTIME"
^XTMP("XPDT",7811,"RTN","ORY31605",228,0)=" ;;R^""860.8:"",100,50"
^XTMP("XPDT",7811,"RTN","ORY31605",229,0)=" ;;D^  ; .S OCXDATA(OCXELE,""LOG"")=$G(OCXOLOG)"
^XTMP("XPDT",7811,"RTN","ORY31605",230,0)=" ;;R^""860.8:"",100,51"
^XTMP("XPDT",7811,"RTN","ORY31605",231,0)=" ;;D^  ; .S OCXDATA(""B"",OCXELE,OCXELE)="""""
^XTMP("XPDT",7811,"RTN","ORY31605",232,0)=" ;;R^""860.8:"",100,52"
^XTMP("XPDT",7811,"RTN","ORY31605",233,0)=" ;;D^  ; .K ^OCXD(860.7,OCXDFN,1,OCXRUL,1,OCXREL,1,OCXELE)"
^XTMP("XPDT",7811,"RTN","ORY31605",234,0)=" ;;R^""860.8:"",100,53"
^XTMP("XPDT",7811,"RTN","ORY31605",235,0)=" ;;D^T+; .D SETAP(OCXGR1_"")"",""860.7122P"",""Element"",$P($G(^OCXS(860.3,OCXELE,0)),U,1),.OCXDATA,OCXELE)"
^XTMP("XPDT",7811,"RTN","ORY31605",236,0)=" ;;R^""860.8:"",100,54"
^XTMP("XPDT",7811,"RTN","ORY31605",237,0)=" ;;D^T-; .D SETAP(OCXGR1_"")"",""860.7122P"",.OCXDATA,OCXELE)"
^XTMP("XPDT",7811,"RTN","ORY31605",238,0)=" ;;R^""860.8:"",100,55"
^XTMP("XPDT",7811,"RTN","ORY31605",239,0)=" ;;D^  ; .;"
^XTMP("XPDT",7811,"RTN","ORY31605",240,0)=" ;;R^""860.8:"",100,56"
^XTMP("XPDT",7811,"RTN","ORY31605",241,0)=" ;;D^  ; .S OCXDFI=0 F  S OCXDFI=$O(^TMP(""OCXCHK"",$J,OCXDFN,OCXELE,OCXDFI)) Q:'OCXDFI  D"
^XTMP("XPDT",7811,"RTN","ORY31605",242,0)=" ;;R^""860.8:"",100,57"
^XTMP("XPDT",7811,"RTN","ORY31605",243,0)=" ;;D^  ; ..N OCXGR2"
^XTMP("XPDT",7811,"RTN","ORY31605",244,0)=" ;;R^""860.8:"",100,58"
^XTMP("XPDT",7811,"RTN","ORY31605",245,0)=" ;;D^  ; ..S OCXGR2=OCXGR1_"",""_OCXELE_"",1"""
^XTMP("XPDT",7811,"RTN","ORY31605",246,0)=" ;;R^""860.8:"",100,59"
^XTMP("XPDT",7811,"RTN","ORY31605",247,0)=" ;;D^  ; ..K OCXDATA"
^XTMP("XPDT",7811,"RTN","ORY31605",248,0)=" ;;R^""860.8:"",100,60"
^XTMP("XPDT",7811,"RTN","ORY31605",249,0)=" ;;D^  ; ..S OCXDATA(OCXDFI,0)=OCXDFI"
^XTMP("XPDT",7811,"RTN","ORY31605",250,0)=" ;;R^""860.8:"",100,61"
^XTMP("XPDT",7811,"RTN","ORY31605",251,0)=" ;;D^  ; ..S OCXDATA(OCXDFI,""VAL"")=^TMP(""OCXCHK"",$J,OCXDFN,OCXELE,OCXDFI)"
^XTMP("XPDT",7811,"RTN","ORY31605",252,0)=" ;;R^""860.8:"",100,62"
^XTMP("XPDT",7811,"RTN","ORY31605",253,0)=" ;;D^  ; ..S OCXDATA(""B"",OCXDFI,OCXDFI)="""""
^XTMP("XPDT",7811,"RTN","ORY31605",254,0)=" ;;R^""860.8:"",100,63"
^XTMP("XPDT",7811,"RTN","ORY31605",255,0)=" ;1;"
^XTMP("XPDT",7811,"RTN","ORY31605",256,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31606")="0^11^B65941029^n/a"
^XTMP("XPDT",7811,"RTN","ORY31606",1,0)="ORY31606 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY31606",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY31606",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY31606",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31606",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY31606",6,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31606",7,0)=" D DOT^ORY316ES"
^XTMP("XPDT",7811,"RTN","ORY31606",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31606",9,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31606",10,0)=" K REMOTE,LOCAL,OPCODE,REF"
^XTMP("XPDT",7811,"RTN","ORY31606",11,0)=" F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),"";"",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY31606",12,0)=" .S ^TMP(""OCXRULE"",$J,$O(^TMP(""OCXRULE"",$J,""A""),-1)+1)=TEXT"
^XTMP("XPDT",7811,"RTN","ORY31606",13,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31606",14,0)=" G ^ORY31607"
^XTMP("XPDT",7811,"RTN","ORY31606",15,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31606",16,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY31606",17,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31606",18,0)="DATA ;"
^XTMP("XPDT",7811,"RTN","ORY31606",19,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31606",20,0)=" ;;D^T+; ..D SETAP(OCXGR2_"")"",""860.71223P"",""Data Field"",$P($G(^OCXS(860.4,OCXDFI,0)),U,1),.OCXDATA,OCXDFI)"
^XTMP("XPDT",7811,"RTN","ORY31606",21,0)=" ;;R^""860.8:"",100,64"
^XTMP("XPDT",7811,"RTN","ORY31606",22,0)=" ;;D^T-; ..D SETAP(OCXGR2_"")"",""860.71223P"",.OCXDATA,OCXDFI)"
^XTMP("XPDT",7811,"RTN","ORY31606",23,0)=" ;;R^""860.8:"",100,65"
^XTMP("XPDT",7811,"RTN","ORY31606",24,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31606",25,0)=" ;;R^""860.8:"",100,66"
^XTMP("XPDT",7811,"RTN","ORY31606",26,0)=" ;;D^  ; Q 1"
^XTMP("XPDT",7811,"RTN","ORY31606",27,0)=" ;;R^""860.8:"",100,67"
^XTMP("XPDT",7811,"RTN","ORY31606",28,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31606",29,0)=" ;;R^""860.8:"",100,68"
^XTMP("XPDT",7811,"RTN","ORY31606",30,0)=" ;;D^T+;SETAP(ROOT,DD,ITEM,ITEMNAME,DATA,DA) ;  Set Rule Event data"
^XTMP("XPDT",7811,"RTN","ORY31606",31,0)=" ;;R^""860.8:"",100,69"
^XTMP("XPDT",7811,"RTN","ORY31606",32,0)=" ;;D^T-;SETAP(ROOT,DD,DATA,DA) ;  Set Rule Event data"
^XTMP("XPDT",7811,"RTN","ORY31606",33,0)=" ;;R^""860.8:"",100,70"
^XTMP("XPDT",7811,"RTN","ORY31606",34,0)=" ;;D^  ; M @ROOT=DATA"
^XTMP("XPDT",7811,"RTN","ORY31606",35,0)=" ;;R^""860.8:"",100,71"
^XTMP("XPDT",7811,"RTN","ORY31606",36,0)=" ;;D^  ; I +$G(DD) S @ROOT@(0)=""^""_($G(DD))_""^""_($P($G(@ROOT@(0)),U,3)+1)_""^""_$G(DA)"
^XTMP("XPDT",7811,"RTN","ORY31606",37,0)=" ;;R^""860.8:"",100,72"
^XTMP("XPDT",7811,"RTN","ORY31606",38,0)=" ;;D^  ; I '$G(DD) S $P(@ROOT@(0),U,3,4)=($P($G(@ROOT@(0)),U,3)+1)_""^""_$G(DA)"
^XTMP("XPDT",7811,"RTN","ORY31606",39,0)=" ;;R^""860.8:"",100,73"
^XTMP("XPDT",7811,"RTN","ORY31606",40,0)=" ;;D^T+; W:$G(OCXTRACE) !,""File Active Data "",$G(ITEM),"": "",$G(ITEMNAME)"
^XTMP("XPDT",7811,"RTN","ORY31606",41,0)=" ;;R^""860.8:"",100,74"
^XTMP("XPDT",7811,"RTN","ORY31606",42,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31606",43,0)=" ;;R^""860.8:"",100,75"
^XTMP("XPDT",7811,"RTN","ORY31606",44,0)=" ;;D^  ; Q"
^XTMP("XPDT",7811,"RTN","ORY31606",45,0)=" ;;R^""860.8:"",100,76"
^XTMP("XPDT",7811,"RTN","ORY31606",46,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31606",47,0)=" ;;R^""860.8:"",100,77"
^XTMP("XPDT",7811,"RTN","ORY31606",48,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31606",49,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",50,0)=" ;;KEY^860.8:^RETURN POINTED TO VALUE"
^XTMP("XPDT",7811,"RTN","ORY31606",51,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",52,0)=" ;;D^RETURN POINTED TO VALUE"
^XTMP("XPDT",7811,"RTN","ORY31606",53,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",54,0)=" ;;D^POINTER"
^XTMP("XPDT",7811,"RTN","ORY31606",55,0)=" ;;R^""860.8:"",1,1"
^XTMP("XPDT",7811,"RTN","ORY31606",56,0)=" ;;D^  ;POINTER(OCXFILE,D0) ;    This Local Extrinsic Function gets the value of the name field"
^XTMP("XPDT",7811,"RTN","ORY31606",57,0)=" ;;R^""860.8:"",1,2"
^XTMP("XPDT",7811,"RTN","ORY31606",58,0)=" ;;D^  ; ;  of record D0 in file OCXFILE"
^XTMP("XPDT",7811,"RTN","ORY31606",59,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31606",60,0)=" ;;D^  ;POINTER(OCXFILE,D0) ;    This Local Extrinsic Function gets the value of the name field"
^XTMP("XPDT",7811,"RTN","ORY31606",61,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31606",62,0)=" ;;D^  ; ;  of record D0 in file OCXFILE"
^XTMP("XPDT",7811,"RTN","ORY31606",63,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31606",64,0)=" ;;D^T+; I $G(OCXTRACE) W !,""%%%%"",?20,""   FILE: "",$G(OCXFILE),""  D0: "",$G(D0)"
^XTMP("XPDT",7811,"RTN","ORY31606",65,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31606",66,0)=" ;;D^  ; Q:'$G(D0) """" Q:'$L($G(OCXFILE)) """""
^XTMP("XPDT",7811,"RTN","ORY31606",67,0)=" ;;R^""860.8:"",100,5"
^XTMP("XPDT",7811,"RTN","ORY31606",68,0)=" ;;D^  ; N GLREF"
^XTMP("XPDT",7811,"RTN","ORY31606",69,0)=" ;;R^""860.8:"",100,6"
^XTMP("XPDT",7811,"RTN","ORY31606",70,0)=" ;;D^  ; I '(OCXFILE=(+OCXFILE)) S GLREF=U_OCXFILE"
^XTMP("XPDT",7811,"RTN","ORY31606",71,0)=" ;;R^""860.8:"",100,7"
^XTMP("XPDT",7811,"RTN","ORY31606",72,0)=" ;;D^  ; E  S GLREF=$$FILE^OCXBDTD(+OCXFILE,""GLOBAL NAME"") Q:'$L(GLREF) """""
^XTMP("XPDT",7811,"RTN","ORY31606",73,0)=" ;;R^""860.8:"",100,8"
^XTMP("XPDT",7811,"RTN","ORY31606",74,0)=" ;;D^T+; I $G(OCXTRACE) W !,""%%%%"",?20,"" GLREF: "",GLREF,""  RESOLVES TO: "",$P($G(@(GLREF_(+D0)_"",0)"")),U,1)"
^XTMP("XPDT",7811,"RTN","ORY31606",75,0)=" ;;R^""860.8:"",100,9"
^XTMP("XPDT",7811,"RTN","ORY31606",76,0)=" ;;D^  ; Q $P($G(@(GLREF_(+D0)_"",0)"")),U,1)"
^XTMP("XPDT",7811,"RTN","ORY31606",77,0)=" ;;R^""860.8:"",100,10"
^XTMP("XPDT",7811,"RTN","ORY31606",78,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31606",79,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",80,0)=" ;;KEY^860.8:^STRING CONTAINS ONE OF A LIST OF VALUES"
^XTMP("XPDT",7811,"RTN","ORY31606",81,0)=" ;;R^""860.8:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",82,0)=" ;;D^STRING CONTAINS ONE OF A LIST OF VALUES"
^XTMP("XPDT",7811,"RTN","ORY31606",83,0)=" ;;R^""860.8:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",84,0)=" ;;D^CLIST"
^XTMP("XPDT",7811,"RTN","ORY31606",85,0)=" ;;R^""860.8:"",100,1"
^XTMP("XPDT",7811,"RTN","ORY31606",86,0)=" ;;D^  ;CLIST(DATA,LIST) ;   DOES THE DATA FIELD CONTAIN AN ELEMENT IN THE LIST"
^XTMP("XPDT",7811,"RTN","ORY31606",87,0)=" ;;R^""860.8:"",100,2"
^XTMP("XPDT",7811,"RTN","ORY31606",88,0)=" ;;D^  ; ;"
^XTMP("XPDT",7811,"RTN","ORY31606",89,0)=" ;;R^""860.8:"",100,3"
^XTMP("XPDT",7811,"RTN","ORY31606",90,0)=" ;;D^T+; W:$G(OCXTRACE) !!,""$$CLIST("",DATA,"","""""",LIST,"""""")"""
^XTMP("XPDT",7811,"RTN","ORY31606",91,0)=" ;;R^""860.8:"",100,4"
^XTMP("XPDT",7811,"RTN","ORY31606",92,0)=" ;;D^  ; N PC F PC=1:1:$L(LIST,"",""),0 I PC,$L($P(LIST,"","",PC)),(DATA[$P(LIST,"","",PC)) Q"
^XTMP("XPDT",7811,"RTN","ORY31606",93,0)=" ;;R^""860.8:"",100,5"
^XTMP("XPDT",7811,"RTN","ORY31606",94,0)=" ;;D^  ; Q ''PC"
^XTMP("XPDT",7811,"RTN","ORY31606",95,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",96,0)=" ;;EOF^OCXS(860.8)^1"
^XTMP("XPDT",7811,"RTN","ORY31606",97,0)=" ;;SOF^860.6  ORDER CHECK DATA CONTEXT"
^XTMP("XPDT",7811,"RTN","ORY31606",98,0)=" ;;KEY^860.6:^CPRS ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",99,0)=" ;;R^""860.6:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",100,0)=" ;;D^CPRS ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",101,0)=" ;;R^""860.6:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",102,0)=" ;;D^OEPS"
^XTMP("XPDT",7811,"RTN","ORY31606",103,0)=" ;;R^""860.6:"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",104,0)=" ;;D^DATA DRIVEN"
^XTMP("XPDT",7811,"RTN","ORY31606",105,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",106,0)=" ;;KEY^860.6:^CPRS ORDER PROTOCOL"
^XTMP("XPDT",7811,"RTN","ORY31606",107,0)=" ;;R^""860.6:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",108,0)=" ;;D^CPRS ORDER PROTOCOL"
^XTMP("XPDT",7811,"RTN","ORY31606",109,0)=" ;;R^""860.6:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",110,0)=" ;;D^OERR"
^XTMP("XPDT",7811,"RTN","ORY31606",111,0)=" ;;R^""860.6:"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",112,0)=" ;;D^DATA DRIVEN"
^XTMP("XPDT",7811,"RTN","ORY31606",113,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",114,0)=" ;;KEY^860.6:^DATABASE LOOKUP"
^XTMP("XPDT",7811,"RTN","ORY31606",115,0)=" ;;R^""860.6:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",116,0)=" ;;D^DATABASE LOOKUP"
^XTMP("XPDT",7811,"RTN","ORY31606",117,0)=" ;;R^""860.6:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",118,0)=" ;;D^DL"
^XTMP("XPDT",7811,"RTN","ORY31606",119,0)=" ;;R^""860.6:"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",120,0)=" ;;D^PACKAGE LOOKUP"
^XTMP("XPDT",7811,"RTN","ORY31606",121,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",122,0)=" ;;KEY^860.6:^GENERIC HL7 MESSAGE ARRAY"
^XTMP("XPDT",7811,"RTN","ORY31606",123,0)=" ;;R^""860.6:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",124,0)=" ;;D^GENERIC HL7 MESSAGE ARRAY"
^XTMP("XPDT",7811,"RTN","ORY31606",125,0)=" ;;R^""860.6:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",126,0)=" ;;D^HL7"
^XTMP("XPDT",7811,"RTN","ORY31606",127,0)=" ;;R^""860.6:"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",128,0)=" ;;D^DATA DRIVEN"
^XTMP("XPDT",7811,"RTN","ORY31606",129,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",130,0)=" ;;EOF^OCXS(860.6)^1"
^XTMP("XPDT",7811,"RTN","ORY31606",131,0)=" ;;SOF^860.5  ORDER CHECK DATA SOURCE"
^XTMP("XPDT",7811,"RTN","ORY31606",132,0)=" ;;KEY^860.5:^DATABASE LOOKUP"
^XTMP("XPDT",7811,"RTN","ORY31606",133,0)=" ;;R^""860.5:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",134,0)=" ;;D^DATABASE LOOKUP"
^XTMP("XPDT",7811,"RTN","ORY31606",135,0)=" ;;R^""860.5:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",136,0)=" ;;D^DATABASE LOOKUP"
^XTMP("XPDT",7811,"RTN","ORY31606",137,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",138,0)=" ;;KEY^860.5:^HL7 COMMON ORDER SEGMENT"
^XTMP("XPDT",7811,"RTN","ORY31606",139,0)=" ;;R^""860.5:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",140,0)=" ;;D^HL7 COMMON ORDER SEGMENT"
^XTMP("XPDT",7811,"RTN","ORY31606",141,0)=" ;;R^""860.5:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",142,0)=" ;;D^GENERIC HL7 MESSAGE ARRAY"
^XTMP("XPDT",7811,"RTN","ORY31606",143,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",144,0)=" ;;KEY^860.5:^HL7 PATIENT ID SEGMENT"
^XTMP("XPDT",7811,"RTN","ORY31606",145,0)=" ;;R^""860.5:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",146,0)=" ;;D^HL7 PATIENT ID SEGMENT"
^XTMP("XPDT",7811,"RTN","ORY31606",147,0)=" ;;R^""860.5:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",148,0)=" ;;D^GENERIC HL7 MESSAGE ARRAY"
^XTMP("XPDT",7811,"RTN","ORY31606",149,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",150,0)=" ;;KEY^860.5:^OERR ORDER EVENT FLAG PROTOCOL"
^XTMP("XPDT",7811,"RTN","ORY31606",151,0)=" ;;R^""860.5:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",152,0)=" ;;D^OERR ORDER EVENT FLAG PROTOCOL"
^XTMP("XPDT",7811,"RTN","ORY31606",153,0)=" ;;R^""860.5:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",154,0)=" ;;D^CPRS ORDER PROTOCOL"
^XTMP("XPDT",7811,"RTN","ORY31606",155,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",156,0)=" ;;KEY^860.5:^ORDER ENTRY ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",157,0)=" ;;R^""860.5:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",158,0)=" ;;D^ORDER ENTRY ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",159,0)=" ;;R^""860.5:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",160,0)=" ;;D^CPRS ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",161,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",162,0)=" ;;EOF^OCXS(860.5)^1"
^XTMP("XPDT",7811,"RTN","ORY31606",163,0)=" ;;SOF^860.4  ORDER CHECK DATA FIELD"
^XTMP("XPDT",7811,"RTN","ORY31606",164,0)=" ;;KEY^860.4:^FILLER"
^XTMP("XPDT",7811,"RTN","ORY31606",165,0)=" ;;R^""860.4:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",166,0)=" ;;D^FILLER"
^XTMP("XPDT",7811,"RTN","ORY31606",167,0)=" ;;R^""860.4:"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",168,0)=" ;;D^FILL"
^XTMP("XPDT",7811,"RTN","ORY31606",169,0)=" ;;R^""860.4:"",101,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",170,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31606",171,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PRESCAN^860.6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",172,0)=" ;;D^CPRS ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",173,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PRESCAN^860.6"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",174,0)=" ;;D^ORDER ENTRY ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",175,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PRESCAN^860.6"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",176,0)=" ;;D^PATIENT.OPS_FILLER"
^XTMP("XPDT",7811,"RTN","ORY31606",177,0)=" ;;R^""860.4:"",""860.41:GENERIC HL7 MESSAGE ARRAY^860.6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",178,0)=" ;;D^GENERIC HL7 MESSAGE ARRAY"
^XTMP("XPDT",7811,"RTN","ORY31606",179,0)=" ;;R^""860.4:"",""860.41:GENERIC HL7 MESSAGE ARRAY^860.6"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",180,0)=" ;;D^HL7 COMMON ORDER SEGMENT"
^XTMP("XPDT",7811,"RTN","ORY31606",181,0)=" ;;R^""860.4:"",""860.41:GENERIC HL7 MESSAGE ARRAY^860.6"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",182,0)=" ;;D^PATIENT.HL7_FILLER"
^XTMP("XPDT",7811,"RTN","ORY31606",183,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",184,0)=" ;;KEY^860.4:^OI LOCAL TEXT"
^XTMP("XPDT",7811,"RTN","ORY31606",185,0)=" ;;R^""860.4:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",186,0)=" ;;D^OI LOCAL TEXT"
^XTMP("XPDT",7811,"RTN","ORY31606",187,0)=" ;;R^""860.4:"",101,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",188,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31606",189,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PRESCAN^860.6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",190,0)=" ;;D^CPRS ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",191,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PRESCAN^860.6"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",192,0)=" ;;D^ORDER ENTRY ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",193,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PRESCAN^860.6"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",194,0)=" ;;D^PATIENT.OPS_LOCAL_TEXT"
^XTMP("XPDT",7811,"RTN","ORY31606",195,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",196,0)=" ;;KEY^860.4:^ORDER MODE"
^XTMP("XPDT",7811,"RTN","ORY31606",197,0)=" ;;R^""860.4:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",198,0)=" ;;D^ORDER MODE"
^XTMP("XPDT",7811,"RTN","ORY31606",199,0)=" ;;R^""860.4:"",101,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",200,0)=" ;;D^FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31606",201,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PRESCAN^860.6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",202,0)=" ;;D^CPRS ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",203,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PRESCAN^860.6"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",204,0)=" ;;D^ORDER ENTRY ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",205,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PRESCAN^860.6"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",206,0)=" ;;D^PATIENT.OPS_ORD_MODE"
^XTMP("XPDT",7811,"RTN","ORY31606",207,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",208,0)=" ;;KEY^860.4:^PATIENT IEN"
^XTMP("XPDT",7811,"RTN","ORY31606",209,0)=" ;;R^""860.4:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",210,0)=" ;;D^PATIENT IEN"
^XTMP("XPDT",7811,"RTN","ORY31606",211,0)=" ;;R^""860.4:"",101,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",212,0)=" ;;D^NUMERIC"
^XTMP("XPDT",7811,"RTN","ORY31606",213,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PROTOCOL^860.6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",214,0)=" ;;D^CPRS ORDER PROTOCOL"
^XTMP("XPDT",7811,"RTN","ORY31606",215,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PROTOCOL^860.6"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",216,0)=" ;;D^OERR ORDER EVENT FLAG PROTOCOL"
^XTMP("XPDT",7811,"RTN","ORY31606",217,0)=" ;;R^""860.4:"",""860.41:CPRS ORDER PROTOCOL^860.6"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",218,0)=" ;;D^PATIENT.OERR_ORDER_PATIENT"
^XTMP("XPDT",7811,"RTN","ORY31606",219,0)=" ;;R^""860.4:"",""860.41:DATABASE LOOKUP^860.6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",220,0)=" ;;D^DATABASE LOOKUP"
^XTMP("XPDT",7811,"RTN","ORY31606",221,0)=" ;;R^""860.4:"",""860.41:DATABASE LOOKUP^860.6"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",222,0)=" ;;D^DATABASE LOOKUP"
^XTMP("XPDT",7811,"RTN","ORY31606",223,0)=" ;;R^""860.4:"",""860.41:DATABASE LOOKUP^860.6"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",224,0)=" ;;D^PATIENT.IEN"
^XTMP("XPDT",7811,"RTN","ORY31606",225,0)=" ;;R^""860.4:"",""860.41:GENERIC HL7 MESSAGE ARRAY^860.6"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",226,0)=" ;;D^GENERIC HL7 MESSAGE ARRAY"
^XTMP("XPDT",7811,"RTN","ORY31606",227,0)=" ;;R^""860.4:"",""860.41:GENERIC HL7 MESSAGE ARRAY^860.6"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",228,0)=" ;;D^HL7 PATIENT ID SEGMENT"
^XTMP("XPDT",7811,"RTN","ORY31606",229,0)=" ;;R^""860.4:"",""860.41:GENERIC HL7 MESSAGE ARRAY^860.6"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",230,0)=" ;;D^PATIENT.HL7_PATIENT_ID"
^XTMP("XPDT",7811,"RTN","ORY31606",231,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31606",232,0)=" ;;EOF^OCXS(860.4)^1"
^XTMP("XPDT",7811,"RTN","ORY31606",233,0)=" ;;SOF^860.3  ORDER CHECK ELEMENT"
^XTMP("XPDT",7811,"RTN","ORY31606",234,0)=" ;;KEY^860.3:^GLUCOPHAGE ORDER"
^XTMP("XPDT",7811,"RTN","ORY31606",235,0)=" ;;R^""860.3:"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",236,0)=" ;;D^GLUCOPHAGE ORDER"
^XTMP("XPDT",7811,"RTN","ORY31606",237,0)=" ;;R^""860.3:"",.02,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",238,0)=" ;;D^CPRS ORDER PRESCAN"
^XTMP("XPDT",7811,"RTN","ORY31606",239,0)=" ;;R^""860.3:"",""860.31:1"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",240,0)=" ;;D^1"
^XTMP("XPDT",7811,"RTN","ORY31606",241,0)=" ;;R^""860.3:"",""860.31:1"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",242,0)=" ;;D^ORDER MODE"
^XTMP("XPDT",7811,"RTN","ORY31606",243,0)=" ;;R^""860.3:"",""860.31:1"",2,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",244,0)=" ;;D^EQ FREE TEXT"
^XTMP("XPDT",7811,"RTN","ORY31606",245,0)=" ;;R^""860.3:"",""860.31:1"",3,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",246,0)=" ;;D^SELECT"
^XTMP("XPDT",7811,"RTN","ORY31606",247,0)=" ;;R^""860.3:"",""860.31:2"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",248,0)=" ;;D^2"
^XTMP("XPDT",7811,"RTN","ORY31606",249,0)=" ;;R^""860.3:"",""860.31:2"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",250,0)=" ;;D^FILLER"
^XTMP("XPDT",7811,"RTN","ORY31606",251,0)=" ;;R^""860.3:"",""860.31:2"",2,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",252,0)=" ;;D^STARTS WITH"
^XTMP("XPDT",7811,"RTN","ORY31606",253,0)=" ;;R^""860.3:"",""860.31:2"",3,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",254,0)=" ;;D^PS"
^XTMP("XPDT",7811,"RTN","ORY31606",255,0)=" ;;R^""860.3:"",""860.31:3"",.01,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",256,0)=" ;;D^3"
^XTMP("XPDT",7811,"RTN","ORY31606",257,0)=" ;;R^""860.3:"",""860.31:3"",1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",258,0)=" ;;D^OI LOCAL TEXT"
^XTMP("XPDT",7811,"RTN","ORY31606",259,0)=" ;;R^""860.3:"",""860.31:3"",2,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",260,0)=" ;;D^CONTAINS NOCASE ELEMENT IN SET"
^XTMP("XPDT",7811,"RTN","ORY31606",261,0)=" ;;R^""860.3:"",""860.31:3"",3,""E"""
^XTMP("XPDT",7811,"RTN","ORY31606",262,0)=" ;1;"
^XTMP("XPDT",7811,"RTN","ORY31606",263,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31607")="0^12^B782472^n/a"
^XTMP("XPDT",7811,"RTN","ORY31607",1,0)="ORY31607 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY31607",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY31607",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY31607",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31607",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY31607",6,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31607",7,0)=" D DOT^ORY316ES"
^XTMP("XPDT",7811,"RTN","ORY31607",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31607",9,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31607",10,0)=" K REMOTE,LOCAL,OPCODE,REF"
^XTMP("XPDT",7811,"RTN","ORY31607",11,0)=" F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),"";"",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY31607",12,0)=" .S ^TMP(""OCXRULE"",$J,$O(^TMP(""OCXRULE"",$J,""A""),-1)+1)=TEXT"
^XTMP("XPDT",7811,"RTN","ORY31607",13,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31607",14,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31607",15,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31607",16,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY31607",17,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31607",18,0)="DATA ;"
^XTMP("XPDT",7811,"RTN","ORY31607",19,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY31607",20,0)=" ;;D^GLUCOPHAGE,METFORMIN"
^XTMP("XPDT",7811,"RTN","ORY31607",21,0)=" ;;R^""860.3:"",""860.31:3"",3.1,""E"""
^XTMP("XPDT",7811,"RTN","ORY31607",22,0)=" ;;D^1"
^XTMP("XPDT",7811,"RTN","ORY31607",23,0)=" ;;EOR^"
^XTMP("XPDT",7811,"RTN","ORY31607",24,0)=" ;;EOF^OCXS(860.3)^1"
^XTMP("XPDT",7811,"RTN","ORY31607",25,0)=" ;1;"
^XTMP("XPDT",7811,"RTN","ORY31607",26,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161")="0^13^B40697465^n/a"
^XTMP("XPDT",7811,"RTN","ORY3161",1,0)="ORY3161 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY3161",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY3161",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY3161",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY3161",6,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",7,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3161",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",9,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",10,0)="COMPARE(L,R) ;"
^XTMP("XPDT",7811,"RTN","ORY3161",11,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",12,0)=" Q:$$RES(""R"") 1"
^XTMP("XPDT",7811,"RTN","ORY3161",13,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",14,0)=" Q:'$L($O(L(""""))) $$ADDREC^ORY3162(""R"")"
^XTMP("XPDT",7811,"RTN","ORY3161",15,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",16,0)=" N C,OCXDD M C=L,C=R S OCXDD=$O(C("""")) Q $$MULT(""C"",OCXDD)"
^XTMP("XPDT",7811,"RTN","ORY3161",17,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",18,0)=" Q 0"
^XTMP("XPDT",7811,"RTN","ORY3161",19,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",20,0)="RES(REF) ;"
^XTMP("XPDT",7811,"RTN","ORY3161",21,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",22,0)=" N QUIT,SUB"
^XTMP("XPDT",7811,"RTN","ORY3161",23,0)=" S QUIT=0"
^XTMP("XPDT",7811,"RTN","ORY3161",24,0)=" S SUB="""" F  S SUB=$O(@REF@(SUB)) Q:'$L(SUB)  I (SUB["":"") D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY3161",25,0)=" .N DD,DA"
^XTMP("XPDT",7811,"RTN","ORY3161",26,0)=" .S DD=$P(SUB,"":"",1),DA=$P(SUB,"":"",2)"
^XTMP("XPDT",7811,"RTN","ORY3161",27,0)=" .I $L(DA),'(DA=+DA) D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY3161",28,0)=" ..N DANEW,SUBNEW"
^XTMP("XPDT",7811,"RTN","ORY3161",29,0)=" ..S DANEW=$O(^OCXS($P(DA,U,2),""B"",$P(DA,U,1),0))"
^XTMP("XPDT",7811,"RTN","ORY3161",30,0)=" ..I 'DANEW W !!,$P($G(^OCXS(+$P(DA,U,2),0)),U,1),"": "",$P(DA,U,1),""  could not resolve name."",!!,""    End Transport."" S QUIT=1 Q"
^XTMP("XPDT",7811,"RTN","ORY3161",31,0)=" ..S SUBNEW=DD_"":""_DANEW"
^XTMP("XPDT",7811,"RTN","ORY3161",32,0)=" ..I $D(@REF@(SUBNEW)) W !!,"" multiple #"",DANEW,"" already existed."" S QUIT=1 Q"
^XTMP("XPDT",7811,"RTN","ORY3161",33,0)=" ..M @REF@(SUBNEW)=@REF@(SUB)"
^XTMP("XPDT",7811,"RTN","ORY3161",34,0)=" ..K @REF@(SUB)"
^XTMP("XPDT",7811,"RTN","ORY3161",35,0)=" ..S SUB="""""
^XTMP("XPDT",7811,"RTN","ORY3161",36,0)=" .I $L(SUB),($D(@REF@(SUB))>9) S QUIT=$$RES($NA(@REF@(SUB)))"
^XTMP("XPDT",7811,"RTN","ORY3161",37,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",38,0)=" Q QUIT"
^XTMP("XPDT",7811,"RTN","ORY3161",39,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",40,0)="MULT(CREF,OCXDD) ;"
^XTMP("XPDT",7811,"RTN","ORY3161",41,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",42,0)=" N OCXSUB,LREF,RREF,QUIT,OCXFLD"
^XTMP("XPDT",7811,"RTN","ORY3161",43,0)=" S LREF=""L""_$E(CREF,2,$L(CREF)),RREF=""R""_$E(CREF,2,$L(CREF))"
^XTMP("XPDT",7811,"RTN","ORY3161",44,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",45,0)=" S QUIT=0,OCXFLD="""" F  S OCXFLD=$O(@CREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY3161",46,0)=" .I (OCXFLD["":"") D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY3161",47,0)=" ..Q:$$EXFLD(+OCXFLD,0)"
^XTMP("XPDT",7811,"RTN","ORY3161",48,0)=" ..I '$D(@LREF@(OCXDD,OCXFLD,.01,""E"")) D  M @LREF@(OCXDD,OCXFLD)=@RREF@(OCXDD,OCXFLD)"
^XTMP("XPDT",7811,"RTN","ORY3161",49,0)=" ...D WARN(""Missing multiple:"",CREF,OCXDD,OCXFLD)"
^XTMP("XPDT",7811,"RTN","ORY3161",50,0)=" ...S QUIT=$$ADDMULT^ORY3163(CREF,OCXDD,OCXFLD)"
^XTMP("XPDT",7811,"RTN","ORY3161",51,0)=" ..I '$D(@RREF@(OCXDD,OCXFLD,.01,""E"")) D  M @RREF@(OCXDD,OCXFLD)=@LREF@(OCXDD,OCXFLD)"
^XTMP("XPDT",7811,"RTN","ORY3161",52,0)=" ...D WARN(""Extra multiple:"",CREF,OCXDD,OCXFLD)"
^XTMP("XPDT",7811,"RTN","ORY3161",53,0)=" ...S QUIT=$$DELMULT^ORY3163($$APPEND(CREF,OCXDD),OCXFLD)"
^XTMP("XPDT",7811,"RTN","ORY3161",54,0)=" .;"
^XTMP("XPDT",7811,"RTN","ORY3161",55,0)=" .I (OCXFLD=+OCXFLD),'$$EXFLD(+OCXDD,OCXFLD) D"
^XTMP("XPDT",7811,"RTN","ORY3161",56,0)=" ..I ($O(@CREF@(OCXDD,OCXFLD,""""))=""E"") D  Q"
^XTMP("XPDT",7811,"RTN","ORY3161",57,0)=" ...I $L($G(@RREF@(OCXDD,OCXFLD,""E""))),'$L($G(@LREF@(OCXDD,OCXFLD,""E""))) D  Q"
^XTMP("XPDT",7811,"RTN","ORY3161",58,0)=" ....D WARN(""Data Value Missing in ""_$$NETNAME^OCXSEND,CREF,OCXDD,OCXFLD,""E"")"
^XTMP("XPDT",7811,"RTN","ORY3161",59,0)=" ....S QUIT=$$EDITFLD^ORY3164(CREF,OCXDD,OCXFLD,""E"")"
^XTMP("XPDT",7811,"RTN","ORY3161",60,0)=" ...I $L($G(@LREF@(OCXDD,OCXFLD,""E""))),'$L($G(@RREF@(OCXDD,OCXFLD,""E""))) D  Q"
^XTMP("XPDT",7811,"RTN","ORY3161",61,0)=" ....D WARN(""Extra Data Value in ""_$$NETNAME^OCXSEND,CREF,OCXDD,OCXFLD,""E"")"
^XTMP("XPDT",7811,"RTN","ORY3161",62,0)=" ....S QUIT=$$DELFLD^ORY3164(CREF,OCXDD,OCXFLD,""E"")"
^XTMP("XPDT",7811,"RTN","ORY3161",63,0)=" ...I '(@LREF@(OCXDD,OCXFLD,""E"")=@RREF@(OCXDD,OCXFLD,""E"")) D"
^XTMP("XPDT",7811,"RTN","ORY3161",64,0)=" ....D WARN(""Inconsistent Data"",CREF,OCXDD,OCXFLD,""E"")"
^XTMP("XPDT",7811,"RTN","ORY3161",65,0)=" ....S QUIT=$$EDITFLD^ORY3164(CREF,OCXDD,OCXFLD,""E"")"
^XTMP("XPDT",7811,"RTN","ORY3161",66,0)=" ..S OCXSUB=0 F  Q:QUIT  S OCXSUB=$O(@CREF@(OCXDD,OCXFLD,OCXSUB)) Q:'OCXSUB  I '($G(@RREF@(OCXDD,OCXFLD,OCXSUB))=$G(@LREF@(OCXDD,OCXFLD,OCXSUB))) D  Q"
^XTMP("XPDT",7811,"RTN","ORY3161",67,0)=" ...D WARN(""Inconsistent word Data"",CREF,OCXDD,OCXFLD,OCXSUB)"
^XTMP("XPDT",7811,"RTN","ORY3161",68,0)=" ...S QUIT=$$LOADWORD^ORY3162(RREF,OCXDD,OCXFLD,OCXSUB)"
^XTMP("XPDT",7811,"RTN","ORY3161",69,0)=" .;"
^XTMP("XPDT",7811,"RTN","ORY3161",70,0)=" .I 'QUIT,(OCXFLD["":"") S QUIT=$$MULT($$APPEND(CREF,OCXDD),OCXFLD)"
^XTMP("XPDT",7811,"RTN","ORY3161",71,0)=" Q QUIT"
^XTMP("XPDT",7811,"RTN","ORY3161",72,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",73,0)="APPEND(ARRAY,OCXSUB) ;"
^XTMP("XPDT",7811,"RTN","ORY3161",74,0)=" S:'(OCXSUB=+OCXSUB) OCXSUB=""""""""_OCXSUB_"""""""""
^XTMP("XPDT",7811,"RTN","ORY3161",75,0)=" Q:'(ARRAY[""("") ARRAY_""(""_OCXSUB_"")"""
^XTMP("XPDT",7811,"RTN","ORY3161",76,0)=" Q $E(ARRAY,1,$L(ARRAY)-1)_"",""_OCXSUB_"")"""
^XTMP("XPDT",7811,"RTN","ORY3161",77,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",78,0)="EXFLD(FILE,OCXFLD) ;"
^XTMP("XPDT",7811,"RTN","ORY3161",79,0)=" N OCXFNAM"
^XTMP("XPDT",7811,"RTN","ORY3161",80,0)=" S OCXFNAM=$$FIELD^OCXSENDD(FILE,OCXFLD,""LABEL"")"
^XTMP("XPDT",7811,"RTN","ORY3161",81,0)=" I (OCXFNAM[""UNIQUE OBJECT IDENTIFIER"") Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",82,0)=" I (FILE=860.2),(OCXFLD=.02) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",83,0)=" I (FILE=860.22),(OCXFLD=4) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",84,0)=" I (FILE=860.3),(OCXFLD=3) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",85,0)=" I (FILE=860.9),(OCXFLD=1) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",86,0)=" I (FILE=860.91) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",87,0)=" I (FILE=860.801) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",88,0)=" I (FILE=860.81) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",89,0)=" I (FILE=861.01) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",90,0)=" I (FILE=863.02) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",91,0)=" I (FILE=863.54) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",92,0)=" I (FILE=863.61) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",93,0)=" I (FILE=863.72) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",94,0)=" I (FILE=863.81) Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",95,0)=" I ($E(OCXFNAM,1)=""*"") Q 1"
^XTMP("XPDT",7811,"RTN","ORY3161",96,0)=" Q 0"
^XTMP("XPDT",7811,"RTN","ORY3161",97,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",98,0)="WARN(MSG,CREF,OCXDD,OCXFLD,OCXSUB) ;"
^XTMP("XPDT",7811,"RTN","ORY3161",99,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",100,0)=" Q:$G(OCXAUTO)"
^XTMP("XPDT",7811,"RTN","ORY3161",101,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",102,0)=" N D0,DASH,OCXDDPTH,OCXDPTR,FILE,FILEID,LREF,OCXPTR,RREF"
^XTMP("XPDT",7811,"RTN","ORY3161",103,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",104,0)=" S DASH="""",$P(DASH,""-"",(55-$L(MSG)))=""-"""
^XTMP("XPDT",7811,"RTN","ORY3161",105,0)=" W !!,""------------"",MSG,DASH"
^XTMP("XPDT",7811,"RTN","ORY3161",106,0)=" D DSPHDR(CREF,OCXDD,OCXFLD)"
^XTMP("XPDT",7811,"RTN","ORY3161",107,0)=" I $D(OCXSUB) D DSPFLD(CREF,OCXDD,OCXFLD,OCXSUB)"
^XTMP("XPDT",7811,"RTN","ORY3161",108,0)=" I '$D(OCXSUB) D DSPREC(CREF,OCXDD,OCXFLD)"
^XTMP("XPDT",7811,"RTN","ORY3161",109,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",110,0)=" W ! Q"
^XTMP("XPDT",7811,"RTN","ORY3161",111,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",112,0)="DSPREC(CREF,OCXDD,OCXFLD) ;"
^XTMP("XPDT",7811,"RTN","ORY3161",113,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",114,0)=" N OCXDPTR,OCXDDPTH,LEVL,OCXCREF,OCXSUB"
^XTMP("XPDT",7811,"RTN","ORY3161",115,0)=" S OCXCREF=$$APPEND($$APPEND(CREF,OCXDD),OCXFLD)"
^XTMP("XPDT",7811,"RTN","ORY3161",116,0)=" S OCXDDPTH=$P($P(OCXCREF,""("",2),"")"",1),LEVL=$L(OCXDDPTH,"","")"
^XTMP("XPDT",7811,"RTN","ORY3161",117,0)=" S OCXSUB="""" F  S OCXSUB=$O(@OCXCREF@(OCXSUB)) Q:'$L(OCXSUB)  D"
^XTMP("XPDT",7811,"RTN","ORY3161",118,0)=" .;"
^XTMP("XPDT",7811,"RTN","ORY3161",119,0)=" .I '(OCXSUB["":""),'((OCXSUB=.01)&$O(@OCXCREF@(OCXSUB))) D"
^XTMP("XPDT",7811,"RTN","ORY3161",120,0)=" ..N LINE"
^XTMP("XPDT",7811,"RTN","ORY3161",121,0)=" ..Q:$$EXFLD(+OCXFLD,OCXSUB)"
^XTMP("XPDT",7811,"RTN","ORY3161",122,0)=" ..I OCXFLD W !,?(5+((LEVL)*4)),$$FIELD^OCXSENDD(+OCXFLD,OCXSUB,""LABEL""),"": "",$G(@OCXCREF@(OCXSUB,""E""))"
^XTMP("XPDT",7811,"RTN","ORY3161",123,0)=" ..S LINE=0 F  S LINE=$O(@OCXCREF@(OCXSUB,LINE)) Q:'LINE  D"
^XTMP("XPDT",7811,"RTN","ORY3161",124,0)=" ...W !,?(5+(LEVL*4)),$J(LINE,3),"">"",@OCXCREF@(OCXSUB,LINE)"
^XTMP("XPDT",7811,"RTN","ORY3161",125,0)=" .;"
^XTMP("XPDT",7811,"RTN","ORY3161",126,0)=" .I (OCXSUB["":"") D"
^XTMP("XPDT",7811,"RTN","ORY3161",127,0)=" ..N D0,OCXDD,FILENAME"
^XTMP("XPDT",7811,"RTN","ORY3161",128,0)=" ..S D0=+$P(OCXSUB,"":"",2),OCXDD=+OCXSUB"
^XTMP("XPDT",7811,"RTN","ORY3161",129,0)=" ..S FILENAME=$$FILENAME^OCXSENDD(OCXDD)"
^XTMP("XPDT",7811,"RTN","ORY3161",130,0)=" ..I $L(FILENAME) W !,?(5+($L(LEVL)*4)),FILENAME"
^XTMP("XPDT",7811,"RTN","ORY3161",131,0)=" ..E  W !!,?(5+(LEVL*4)),FILENAME"
^XTMP("XPDT",7811,"RTN","ORY3161",132,0)=" ..W "" "",D0,"": "",$G(@OCXCREF@(OCXSUB,.01,""E""))"
^XTMP("XPDT",7811,"RTN","ORY3161",133,0)=" ..D DSPREC($$APPEND(CREF,OCXDD),OCXFLD,OCXSUB)"
^XTMP("XPDT",7811,"RTN","ORY3161",134,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",135,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3161",136,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",137,0)="DSPHDR(CREF,OCXDD,OCXFLD) ;"
^XTMP("XPDT",7811,"RTN","ORY3161",138,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",139,0)=" N D0,FILE,FILEID,OCXPTR,OCXDDPTH"
^XTMP("XPDT",7811,"RTN","ORY3161",140,0)=" S OCXDDPTH=$P($P($$APPEND($$APPEND(CREF,OCXDD),OCXFLD),""("",2),"")"",1)"
^XTMP("XPDT",7811,"RTN","ORY3161",141,0)=" S FILE="""" F OCXPTR=1:1:$L(OCXDDPTH,"","") D"
^XTMP("XPDT",7811,"RTN","ORY3161",142,0)=" .N OCXDD,D0,FILEID"
^XTMP("XPDT",7811,"RTN","ORY3161",143,0)=" .S FILEID=$P(OCXDDPTH,"","",OCXPTR)"
^XTMP("XPDT",7811,"RTN","ORY3161",144,0)=" .I (FILEID["":"") D"
^XTMP("XPDT",7811,"RTN","ORY3161",145,0)=" ..S D0=+$P(FILEID,"":"",2),OCXDD=+$E(FILEID,2,$L(FILEID))"
^XTMP("XPDT",7811,"RTN","ORY3161",146,0)=" ..W !,?(5+(OCXPTR*4)),$$FILENAME^OCXSENDD(OCXDD)"
^XTMP("XPDT",7811,"RTN","ORY3161",147,0)=" ..S:$L(FILE) FILE=FILE_"","" S FILE=FILE_FILEID"
^XTMP("XPDT",7811,"RTN","ORY3161",148,0)=" ..I $D(@(""L(""_FILE_"",.01,""""E"""")"")) W "": "",@(""L(""_FILE_"",.01,""""E"""")"") W:D0 "" ["",D0,""]"""
^XTMP("XPDT",7811,"RTN","ORY3161",149,0)=" ..E  I $D(@(""R(""_FILE_"",.01,""""E"""")"")) W "": "",@(""R(""_FILE_"",.01,""""E"""")"") W:D0 "" ["",D0,""]"""
^XTMP("XPDT",7811,"RTN","ORY3161",150,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",151,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3161",152,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",153,0)="DSPFLD(CREF,OCXDD,OCXFLD,OCXSUB) ;"
^XTMP("XPDT",7811,"RTN","ORY3161",154,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",155,0)=" N OCXDPTR,LREF,RREF,OCXDDPTH"
^XTMP("XPDT",7811,"RTN","ORY3161",156,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",157,0)=" S OCXDDPTH=$P($P($$APPEND(CREF,OCXDD),""("",2),"")"",1)"
^XTMP("XPDT",7811,"RTN","ORY3161",158,0)=" S LREF=""L(""_OCXDDPTH_"")"",RREF=""R(""_OCXDDPTH_"")"""
^XTMP("XPDT",7811,"RTN","ORY3161",159,0)=" W !,?(5+(($L(OCXDDPTH,"","")+1)*4)),$$FIELD^OCXSENDD(OCXDD,OCXFLD,""LABEL""),"" field ["",OCXFLD,""]"""
^XTMP("XPDT",7811,"RTN","ORY3161",160,0)=" I OCXSUB W "" Line #"",OCXSUB"
^XTMP("XPDT",7811,"RTN","ORY3161",161,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",162,0)=" W:($D(@RREF@(OCXFLD,OCXSUB))) !,?(5+(($L(OCXDDPTH,"","")+2)*4)),""(R) VMPDEV20.FO-BAYPINES.MED.VA.GOV: "",@RREF@(OCXFLD,OCXSUB)"
^XTMP("XPDT",7811,"RTN","ORY3161",163,0)=" W:($D(@LREF@(OCXFLD,OCXSUB))) !,?(5+(($L(OCXDDPTH,"","")+2)*4)),""(L) "",$$NETNAME^OCXSEND,"": "",@LREF@(OCXFLD,OCXSUB)"
^XTMP("XPDT",7811,"RTN","ORY3161",164,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",165,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3161",166,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",167,0)=" W !,?10 Q 0 Q $$PAUSE"
^XTMP("XPDT",7811,"RTN","ORY3161",168,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",169,0)="PAUSE() W ""  Press Enter "" R X:DTIME W ! Q (X[U)"
^XTMP("XPDT",7811,"RTN","ORY3161",170,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3161",171,0)="NOW() N X,Y,%DT S X=""N"",%DT=""T"" D ^%DT S Y=$$DATE^OCXSENDD(Y) S:(Y[""@"") Y=$P(Y,""@"",1)_"" at ""_$P(Y,""@"",2) Q Y"
^XTMP("XPDT",7811,"RTN","ORY3161",172,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162")="0^14^B26766920^n/a"
^XTMP("XPDT",7811,"RTN","ORY3162",1,0)="ORY3162 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY3162",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY3162",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY3162",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY3162",6,0)=" ;  Record Utilities"
^XTMP("XPDT",7811,"RTN","ORY3162",7,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3162",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",9,0)="ADDREC(OCXCREF) ;"
^XTMP("XPDT",7811,"RTN","ORY3162",10,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",11,0)=" N QUIT,OCXDD,OCXDA,OCXGREF,OCXNAME"
^XTMP("XPDT",7811,"RTN","ORY3162",12,0)=" S OCXDD=$O(@OCXCREF@("""")) Q:'OCXDD 0"
^XTMP("XPDT",7811,"RTN","ORY3162",13,0)=" S OCXNAME=$G(@OCXCREF@(OCXDD,.01,""E""))"
^XTMP("XPDT",7811,"RTN","ORY3162",14,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",15,0)=" W ""   record missing..."""
^XTMP("XPDT",7811,"RTN","ORY3162",16,0)=" I (OCXFLAG[""D"") Q 0"
^XTMP("XPDT",7811,"RTN","ORY3162",17,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",18,0)=" S OCXDA=0 D CREATE(OCXCREF,OCXDD,.OCXDA,0)"
^XTMP("XPDT",7811,"RTN","ORY3162",19,0)=" S:$L(OCXNAME) ^TMP(""OCXRULE"",$J,""A"",+OCXDD,OCXNAME)="""""
^XTMP("XPDT",7811,"RTN","ORY3162",20,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",21,0)=" Q 0"
^XTMP("XPDT",7811,"RTN","ORY3162",22,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",23,0)="CREATE(OCXCREF,OCXDD,OCXDA,OCXLVL) ;"
^XTMP("XPDT",7811,"RTN","ORY3162",24,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",25,0)=" N OCXFLD,OCXGREF,OCXKEY"
^XTMP("XPDT",7811,"RTN","ORY3162",26,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",27,0)=" I $L(OCXDA),'(OCXDA=+OCXDA) W !!,""Unresolved subscript."" Q"
^XTMP("XPDT",7811,"RTN","ORY3162",28,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",29,0)=" S OCXKEY=@OCXCREF@(OCXDD,.01,""E"")"
^XTMP("XPDT",7811,"RTN","ORY3162",30,0)=" S OCXGREF=$$GETREF(+OCXDD,.OCXDA,OCXLVL) Q:'$L(OCXGREF)"
^XTMP("XPDT",7811,"RTN","ORY3162",31,0)=" I 'OCXDA D"
^XTMP("XPDT",7811,"RTN","ORY3162",32,0)=" .S OCXDA=$O(^TMP(""OCXRULE"",$J,""B"",+OCXDD,OCXKEY,0)) Q:OCXDA"
^XTMP("XPDT",7811,"RTN","ORY3162",33,0)=" .S OCXDA=$O(@(OCXGREF_"""""" """")""),-1)+1"
^XTMP("XPDT",7811,"RTN","ORY3162",34,0)=" .F OCXDA=OCXDA:1 Q:'$D(@(OCXGREF_OCXDA_"",0)""))"
^XTMP("XPDT",7811,"RTN","ORY3162",35,0)=" .I $D(@(OCXGREF_OCXDA_"",0)"")) S OCXDA=0"
^XTMP("XPDT",7811,"RTN","ORY3162",36,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",37,0)=" I 'OCXDA W !!,""Error adding record..."" Q"
^XTMP("XPDT",7811,"RTN","ORY3162",38,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",39,0)=" I '$D(@(OCXGREF_""0)"")) S @(OCXGREF_""0)"")=U_$$FILEHDR^OCXSENDD(+OCXDD)_U_U"
^XTMP("XPDT",7811,"RTN","ORY3162",40,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",41,0)=" S OCXFLD=0 F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'OCXFLD  Q:(OCXFLD["":"")  I '$$EXFLD^ORY3161(+OCXDD,OCXFLD) D"
^XTMP("XPDT",7811,"RTN","ORY3162",42,0)=" .I $L($G(@OCXCREF@(OCXDD,OCXFLD,""E""))) D DIE(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,""E""),.OCXDA,OCXLVL)"
^XTMP("XPDT",7811,"RTN","ORY3162",43,0)=" .I $O(@OCXCREF@(OCXDD,OCXFLD,0)) D WORD(OCXDD,OCXGREF,OCXFLD,.OCXDA,OCXCREF)"
^XTMP("XPDT",7811,"RTN","ORY3162",44,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",45,0)=" D PUSH(.OCXDA)"
^XTMP("XPDT",7811,"RTN","ORY3162",46,0)=" S OCXFLD="""" F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  I (OCXFLD["":"") D"
^XTMP("XPDT",7811,"RTN","ORY3162",47,0)=" .S OCXDA=$P(OCXFLD,"":"",2) W ! D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,OCXLVL+1)"
^XTMP("XPDT",7811,"RTN","ORY3162",48,0)=" D POP(.OCXDA)"
^XTMP("XPDT",7811,"RTN","ORY3162",49,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3162",50,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",51,0)="LOADWORD(RREF,OCXDD,OCXFLD,OCXSUB) ;"
^XTMP("XPDT",7811,"RTN","ORY3162",52,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",53,0)=" N QUIT,DDPATH,INDEX,OCXDA,OCXGREF"
^XTMP("XPDT",7811,"RTN","ORY3162",54,0)=" S DDPATH=$P($P($$APPEND(RREF,OCXDD),""("",2),"")"",1)"
^XTMP("XPDT",7811,"RTN","ORY3162",55,0)=" F INDEX=1:1:$L(DDPATH,"","") S OCXDA($L(DDPATH,"","")-INDEX)=+$P($P(DDPATH,"","",INDEX),"":"",2)"
^XTMP("XPDT",7811,"RTN","ORY3162",56,0)=" S OCXDA=$G(OCXDA(0)) K OCXDA(0)"
^XTMP("XPDT",7811,"RTN","ORY3162",57,0)=" Q:(OCXFLAG[""D"") 0"
^XTMP("XPDT",7811,"RTN","ORY3162",58,0)=" I (OCXFLAG[""A"") S QUIT=$$READ(""Y"","" Do you want to reload the local '""_$$FIELD^OCXSENDD(+OCXDD,+OCXFLD,""LABEL"")_""' field ?"",""YES"") Q:'QUIT (QUIT[U)"
^XTMP("XPDT",7811,"RTN","ORY3162",59,0)=" S OCXGREF=$$GETREF(+OCXDD,.OCXDA,$L(DDPATH,"","")-1) Q:'$L(OCXGREF)"
^XTMP("XPDT",7811,"RTN","ORY3162",60,0)=" D WORD(OCXDD,OCXGREF,OCXFLD,.OCXDA,RREF)"
^XTMP("XPDT",7811,"RTN","ORY3162",61,0)=" Q 0"
^XTMP("XPDT",7811,"RTN","ORY3162",62,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",63,0)="GETREF(OCXDD,OCXDA,OCXLVL) ;"
^XTMP("XPDT",7811,"RTN","ORY3162",64,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",65,0)=" Q:'OCXDD """""
^XTMP("XPDT",7811,"RTN","ORY3162",66,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",67,0)=" N OCXIENS,OCXERR,OCXX"
^XTMP("XPDT",7811,"RTN","ORY3162",68,0)=" S OCXIENS=$$IENS^DILF(.OCXDA),OCXERR="""""
^XTMP("XPDT",7811,"RTN","ORY3162",69,0)=" S OCXX=$$ROOT^DILFD(OCXDD,OCXIENS,0,OCXERR)"
^XTMP("XPDT",7811,"RTN","ORY3162",70,0)=" Q OCXX"
^XTMP("XPDT",7811,"RTN","ORY3162",71,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",72,0)="WORD(DD,GREF,FLD,DA,RREF) ;"
^XTMP("XPDT",7811,"RTN","ORY3162",73,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",74,0)=" N SUB,GLROOT,LINE"
^XTMP("XPDT",7811,"RTN","ORY3162",75,0)=" S SUB=$P($$FIELD^OCXSENDD(+DD,FLD,""GLOBAL SUBSCRIPT LOCATION""),"";"",1) S:'(SUB=+SUB) SUB=""""""""_SUB_"""""""""
^XTMP("XPDT",7811,"RTN","ORY3162",76,0)=" S GLROOT=GREF_DA_"",""_SUB_"")"" K @GLROOT"
^XTMP("XPDT",7811,"RTN","ORY3162",77,0)=" S LINE=0 F  S LINE=$O(@RREF@(DD,FLD,LINE)) Q:'LINE  D"
^XTMP("XPDT",7811,"RTN","ORY3162",78,0)=" .S @GLROOT@($O(@GLROOT@(""""),-1)+1,0)=@RREF@(DD,FLD,LINE)"
^XTMP("XPDT",7811,"RTN","ORY3162",79,0)=" S LINE=$O(@GLROOT@(""""),-1),@GLROOT@(0)=U_U_LINE_U_LINE_U_$$DATE(""T"")_U"
^XTMP("XPDT",7811,"RTN","ORY3162",80,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",81,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3162",82,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",83,0)="DATE(X) N %DT,Y S %DT="""" D ^%DT Q +Y"
^XTMP("XPDT",7811,"RTN","ORY3162",84,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",85,0)="DIE(OCXDD,OCXDIC,OCXFLD,OCXVAL,OCXDA,OCXLVL) ;"
^XTMP("XPDT",7811,"RTN","ORY3162",86,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",87,0)=" N DIC,DIE,X,Y,DR,DA,OCXDVAL,OCXPTR,OCXGREF,D0,OCXSCR"
^XTMP("XPDT",7811,"RTN","ORY3162",88,0)=" S (D0,DA)=OCXDA,(DIC,DIE)=OCXDIC,DR="""""
^XTMP("XPDT",7811,"RTN","ORY3162",89,0)=" S:OCXLVL D0=OCXDA(1),DR=""S DA(1)=""_(+D0)_"",D0=""_(+D0)_"";"""
^XTMP("XPDT",7811,"RTN","ORY3162",90,0)=" S:OCXVAL=""?"" OCXVAL=""? "" S DR=DR_OCXFLD_""///^S X=OCXVAL"""
^XTMP("XPDT",7811,"RTN","ORY3162",91,0)=" I '(OCXVAL=""@"") W !,?(OCXLVL*5),$$FIELD^OCXSENDD(+OCXDD,OCXFLD,""LABEL""),"": "",OCXVAL"
^XTMP("XPDT",7811,"RTN","ORY3162",92,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",93,0)=" I '(OCXVAL=""@"") D"
^XTMP("XPDT",7811,"RTN","ORY3162",94,0)=" .N OCXIEN,SHORT"
^XTMP("XPDT",7811,"RTN","ORY3162",95,0)=" .S OCXPTR=+$P($$FIELD^OCXSENDD(+OCXDD,OCXFLD,""SPECIFIER""),""P"",2)"
^XTMP("XPDT",7811,"RTN","ORY3162",96,0)=" .Q:'OCXPTR"
^XTMP("XPDT",7811,"RTN","ORY3162",97,0)=" .S OCXGREF=""^""_$$FIELD^OCXSENDD(+OCXDD,OCXFLD,""POINTER"")"
^XTMP("XPDT",7811,"RTN","ORY3162",98,0)=" .I '($E(OCXGREF,1,4)=""^OCX""),'(OCXGREF=""^ORD(100.9,""),'(OCXGREF=""^ORD(100.8,"") Q"
^XTMP("XPDT",7811,"RTN","ORY3162",99,0)=" .Q:$$DIC(OCXGREF,OCXVAL,0)"
^XTMP("XPDT",7811,"RTN","ORY3162",100,0)=" .S OCXIEN=$$DIC(OCXGREF,OCXVAL,1)"
^XTMP("XPDT",7811,"RTN","ORY3162",101,0)=" .S ^TMP(""OCXRULE"",$J,""B"",OCXPTR,OCXVAL,OCXIEN)="""""
^XTMP("XPDT",7811,"RTN","ORY3162",102,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",103,0)=" S OCXSCR=1"
^XTMP("XPDT",7811,"RTN","ORY3162",104,0)=" D ^DIE"
^XTMP("XPDT",7811,"RTN","ORY3162",105,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",106,0)=" ; I $D(Y) -> DIE FILER ERROR"
^XTMP("XPDT",7811,"RTN","ORY3162",107,0)=" I $D(Y) W ""   ^DIE filer data error..."" S OCXDIER=$G(OCXDIER)+1"
^XTMP("XPDT",7811,"RTN","ORY3162",108,0)=" I '$D(Y) W ""    ...Correct data Filed"""
^XTMP("XPDT",7811,"RTN","ORY3162",109,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",110,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3162",111,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",112,0)="DIC(DIC,X,OCXADD) N OCXSCR S DIC(0)="""",OCXSCR=1 S:OCXADD DIC(0)=""L"" D ^DIC Q:(+Y>0) +Y Q 0"
^XTMP("XPDT",7811,"RTN","ORY3162",113,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",114,0)="PUSH(OCXDA) ;"
^XTMP("XPDT",7811,"RTN","ORY3162",115,0)=" N OCXSUB S OCXSUB="""" F  S OCXSUB=$O(OCXDA(OCXSUB),-1) Q:'OCXSUB  S OCXDA(OCXSUB+1)=OCXDA(OCXSUB)"
^XTMP("XPDT",7811,"RTN","ORY3162",116,0)=" S OCXDA(1)=OCXDA,OCXDA=0"
^XTMP("XPDT",7811,"RTN","ORY3162",117,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3162",118,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",119,0)="POP(OCXDA) ;"
^XTMP("XPDT",7811,"RTN","ORY3162",120,0)=" N OCXSUB S OCXSUB="""" F  S OCXSUB=$O(OCXDA(OCXSUB)) Q:'OCXSUB  S OCXDA(OCXSUB)=$G(OCXDA(OCXSUB+1))"
^XTMP("XPDT",7811,"RTN","ORY3162",121,0)=" S OCXDA=OCXDA(1) K OCXDA($O(OCXDA(""""),-1))"
^XTMP("XPDT",7811,"RTN","ORY3162",122,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3162",123,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",124,0)="APPEND(ARRAY,OCXSUB) ;"
^XTMP("XPDT",7811,"RTN","ORY3162",125,0)=" S:'(OCXSUB=+OCXSUB) OCXSUB=""""""""_OCXSUB_"""""""""
^XTMP("XPDT",7811,"RTN","ORY3162",126,0)=" Q:'(ARRAY[""("") ARRAY_""(""_OCXSUB_"")"""
^XTMP("XPDT",7811,"RTN","ORY3162",127,0)=" Q $E(ARRAY,1,$L(ARRAY)-1)_"",""_OCXSUB_"")"""
^XTMP("XPDT",7811,"RTN","ORY3162",128,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",129,0)="READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;"
^XTMP("XPDT",7811,"RTN","ORY3162",130,0)=" N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT"
^XTMP("XPDT",7811,"RTN","ORY3162",131,0)=" Q:'$L($G(OCXZ0)) U"
^XTMP("XPDT",7811,"RTN","ORY3162",132,0)=" S DIR(0)=OCXZ0"
^XTMP("XPDT",7811,"RTN","ORY3162",133,0)=" S:$L($G(OCXZA)) DIR(""A"")=OCXZA"
^XTMP("XPDT",7811,"RTN","ORY3162",134,0)=" S:$L($G(OCXZB)) DIR(""B"")=OCXZB"
^XTMP("XPDT",7811,"RTN","ORY3162",135,0)=" F OCXLINE=1:1:($G(OCXZL)-1) W !"
^XTMP("XPDT",7811,"RTN","ORY3162",136,0)=" D ^DIR"
^XTMP("XPDT",7811,"RTN","ORY3162",137,0)=" I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U"
^XTMP("XPDT",7811,"RTN","ORY3162",138,0)=" Q Y"
^XTMP("XPDT",7811,"RTN","ORY3162",139,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3162",140,0)="PAUSE() W ""  Press Enter "" R X:DTIME W ! Q (X[U)"
^XTMP("XPDT",7811,"RTN","ORY3162",141,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163")="0^15^B12996914^n/a"
^XTMP("XPDT",7811,"RTN","ORY3163",1,0)="ORY3163 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY3163",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY3163",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY3163",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY3163",6,0)=" ;  Multiple Utilities"
^XTMP("XPDT",7811,"RTN","ORY3163",7,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3163",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",9,0)="ADDMULT(OCXCREF,OCXDD,OCXFLD) ;"
^XTMP("XPDT",7811,"RTN","ORY3163",10,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",11,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",12,0)=" N QUIT,OCXDA,OCXGREF,OCXNAME,DDPATH,INDEX"
^XTMP("XPDT",7811,"RTN","ORY3163",13,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",14,0)=" S DDPATH=$P($P($$APPEND($$APPEND(OCXCREF,OCXDD),OCXFLD),""("",2),"")"",1)"
^XTMP("XPDT",7811,"RTN","ORY3163",15,0)=" F INDEX=1:1:$L(DDPATH,"","") S OCXDA($L(DDPATH,"","")-INDEX)=+$P($P(DDPATH,"","",INDEX),"":"",2)"
^XTMP("XPDT",7811,"RTN","ORY3163",16,0)=" S OCXDA=$G(OCXDA(0)) K OCXDA(0)"
^XTMP("XPDT",7811,"RTN","ORY3163",17,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",18,0)=" Q:(OCXFLAG[""D"") 0"
^XTMP("XPDT",7811,"RTN","ORY3163",19,0)=" I (OCXFLAG[""A"") S QUIT=$$READ(""Y"","" Do you want to add a local '""_$$FILENAME^OCXSENDD(+OCXFLD)_""' multiple ?"",""YES"") Q:'QUIT (QUIT[U)"
^XTMP("XPDT",7811,"RTN","ORY3163",20,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",21,0)=" S OCXGREF=$$GETREF^ORY3162(+OCXFLD,.OCXDA,1)"
^XTMP("XPDT",7811,"RTN","ORY3163",22,0)=" D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,1)"
^XTMP("XPDT",7811,"RTN","ORY3163",23,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",24,0)=" Q 0"
^XTMP("XPDT",7811,"RTN","ORY3163",25,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",26,0)="DELMULT(OCXCREF,OCXDD) ;"
^XTMP("XPDT",7811,"RTN","ORY3163",27,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",28,0)=" N QUIT,OCXGREF,DA,INDEX,DDPATH"
^XTMP("XPDT",7811,"RTN","ORY3163",29,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",30,0)=" Q:(OCXFLAG[""D"") 0"
^XTMP("XPDT",7811,"RTN","ORY3163",31,0)=" I (OCXFLAG[""A"") S QUIT=$$READ(""Y"","" Do you want to delete the local '""_$$FILENAME^OCXSENDD(+OCXDD)_""' multiple ?"",""YES"") Q:'QUIT (QUIT[U)"
^XTMP("XPDT",7811,"RTN","ORY3163",32,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",33,0)=" S DDPATH=$P($P($$APPEND(OCXCREF,OCXDD),""("",2),"")"",1)"
^XTMP("XPDT",7811,"RTN","ORY3163",34,0)=" F INDEX=1:1:$L(DDPATH,"","") S DA($L(DDPATH,"","")-INDEX)=+$P($P(DDPATH,"","",INDEX),"":"",2)"
^XTMP("XPDT",7811,"RTN","ORY3163",35,0)=" S DA=$G(DA(0)) K DA(0)"
^XTMP("XPDT",7811,"RTN","ORY3163",36,0)=" S OCXGREF=$$GETREF^ORY3162(+OCXDD,.DA,1)"
^XTMP("XPDT",7811,"RTN","ORY3163",37,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",38,0)=" D DIE^ORY3162(+OCXDD,OCXGREF,.01,""@"",.DA,$L(DDPATH,"","")-1)"
^XTMP("XPDT",7811,"RTN","ORY3163",39,0)=" K @OCXCREF@(OCXDD) W !!,""  deleted..."""
^XTMP("XPDT",7811,"RTN","ORY3163",40,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",41,0)=" Q 0"
^XTMP("XPDT",7811,"RTN","ORY3163",42,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",43,0)="CREATE(OCXCREF,OCXDD,OCXDA,OCXLVL) ;"
^XTMP("XPDT",7811,"RTN","ORY3163",44,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",45,0)=" N OCXFLD,OCXGREF"
^XTMP("XPDT",7811,"RTN","ORY3163",46,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",47,0)=" S OCXGREF=$$GETREF^ORY3162(+OCXDD,.OCXDA,OCXLVL) Q:'$L(OCXGREF)  S:'OCXDA OCXDA=$O(@(OCXGREF_""""""@"""")""),-1)+1"
^XTMP("XPDT",7811,"RTN","ORY3163",48,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",49,0)=" I '$D(@(OCXGREF_""0)"")) S @(OCXGREF_""0)"")=U_$$FILEHDR^OCXSENDD(+OCXDD)_U_U"
^XTMP("XPDT",7811,"RTN","ORY3163",50,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",51,0)=" S OCXFLD=0 F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'OCXFLD  Q:(OCXFLD["":"")  I '$$EXFLD^ORY3161(+OCXDD,OCXFLD) D"
^XTMP("XPDT",7811,"RTN","ORY3163",52,0)=" .I $L($G(@OCXCREF@(OCXDD,OCXFLD,""E""))) D DIE^ORY3162(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,""E""),.OCXDA,OCXLVL)"
^XTMP("XPDT",7811,"RTN","ORY3163",53,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",54,0)=" D PUSH(.OCXDA)"
^XTMP("XPDT",7811,"RTN","ORY3163",55,0)=" S OCXFLD="""" F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  I (OCXFLD["":"") D"
^XTMP("XPDT",7811,"RTN","ORY3163",56,0)=" .S OCXDA=$P(OCXFLD,"":"",2) W ! D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,OCXLVL+1)"
^XTMP("XPDT",7811,"RTN","ORY3163",57,0)=" D POP(.OCXDA)"
^XTMP("XPDT",7811,"RTN","ORY3163",58,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3163",59,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",60,0)="PUSH(OCXDA) ;"
^XTMP("XPDT",7811,"RTN","ORY3163",61,0)=" N OCXSUB S OCXSUB="""" F  S OCXSUB=$O(OCXDA(OCXSUB),-1) Q:'OCXSUB  S OCXDA(OCXSUB+1)=OCXDA(OCXSUB)"
^XTMP("XPDT",7811,"RTN","ORY3163",62,0)=" S OCXDA(1)=OCXDA,OCXDA=0"
^XTMP("XPDT",7811,"RTN","ORY3163",63,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3163",64,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",65,0)="POP(OCXDA) ;"
^XTMP("XPDT",7811,"RTN","ORY3163",66,0)=" N OCXSUB S OCXSUB="""" F  S OCXSUB=$O(OCXDA(OCXSUB)) Q:'OCXSUB  S OCXDA(OCXSUB)=$G(OCXDA(OCXSUB+1))"
^XTMP("XPDT",7811,"RTN","ORY3163",67,0)=" S OCXDA=OCXDA(1) K OCXDA($O(OCXDA(""""),-1))"
^XTMP("XPDT",7811,"RTN","ORY3163",68,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3163",69,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",70,0)="APPEND(ARRAY,OCXSUB) ;"
^XTMP("XPDT",7811,"RTN","ORY3163",71,0)=" S:'(OCXSUB=+OCXSUB) OCXSUB=""""""""_OCXSUB_"""""""""
^XTMP("XPDT",7811,"RTN","ORY3163",72,0)=" Q:'(ARRAY[""("") ARRAY_""(""_OCXSUB_"")"""
^XTMP("XPDT",7811,"RTN","ORY3163",73,0)=" Q $E(ARRAY,1,$L(ARRAY)-1)_"",""_OCXSUB_"")"""
^XTMP("XPDT",7811,"RTN","ORY3163",74,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",75,0)="READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;"
^XTMP("XPDT",7811,"RTN","ORY3163",76,0)=" N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT"
^XTMP("XPDT",7811,"RTN","ORY3163",77,0)=" Q:'$L($G(OCXZ0)) U"
^XTMP("XPDT",7811,"RTN","ORY3163",78,0)=" S DIR(0)=OCXZ0"
^XTMP("XPDT",7811,"RTN","ORY3163",79,0)=" S:$L($G(OCXZA)) DIR(""A"")=OCXZA"
^XTMP("XPDT",7811,"RTN","ORY3163",80,0)=" S:$L($G(OCXZB)) DIR(""B"")=OCXZB"
^XTMP("XPDT",7811,"RTN","ORY3163",81,0)=" F OCXLINE=1:1:($G(OCXZL)-1) W !"
^XTMP("XPDT",7811,"RTN","ORY3163",82,0)=" D ^DIR"
^XTMP("XPDT",7811,"RTN","ORY3163",83,0)=" I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U"
^XTMP("XPDT",7811,"RTN","ORY3163",84,0)=" Q Y"
^XTMP("XPDT",7811,"RTN","ORY3163",85,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3163",86,0)="PAUSE() W ""  Press Enter "" R X:DTIME W ! Q (X[U)"
^XTMP("XPDT",7811,"RTN","ORY3163",87,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164")="0^16^B13526847^n/a"
^XTMP("XPDT",7811,"RTN","ORY3164",1,0)="ORY3164 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY3164",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY3164",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY3164",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY3164",6,0)=" ;  Field Utilities"
^XTMP("XPDT",7811,"RTN","ORY3164",7,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3164",8,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",9,0)="EDITFLD(OCXCREF,OCXDD,OCXFLD,OCXSUB) ;"
^XTMP("XPDT",7811,"RTN","ORY3164",10,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",11,0)=" N DDPATH,OCXDA,OCXPC,OCXLVL,QUIT"
^XTMP("XPDT",7811,"RTN","ORY3164",12,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",13,0)=" S QUIT=0,DDPATH=$P($P($$APPEND(OCXCREF,OCXDD),""("",2),"")"",1)"
^XTMP("XPDT",7811,"RTN","ORY3164",14,0)=" S OCXLVL=$L(DDPATH,"","")"
^XTMP("XPDT",7811,"RTN","ORY3164",15,0)=" F OCXPC=1:1:OCXLVL S OCXDA(OCXLVL-OCXPC)=+$P($P(DDPATH,"","",OCXPC),"":"",2)"
^XTMP("XPDT",7811,"RTN","ORY3164",16,0)=" S OCXDA=OCXDA(0) K OCXDA(0)"
^XTMP("XPDT",7811,"RTN","ORY3164",17,0)=" I $L($G(@OCXCREF@(OCXDD,OCXFLD,""E""))) D"
^XTMP("XPDT",7811,"RTN","ORY3164",18,0)=" .N RESP"
^XTMP("XPDT",7811,"RTN","ORY3164",19,0)=" .Q:(OCXFLAG[""D"")"
^XTMP("XPDT",7811,"RTN","ORY3164",20,0)=" .I (OCXFLAG[""A"") S RESP=$$READ(""Y"","" Do you want to change the local '""_$$FILENAME^OCXSENDD(+OCXDD)_""' field ?"",""YES"") I 'RESP S QUIT=(RESP[U) Q"
^XTMP("XPDT",7811,"RTN","ORY3164",21,0)=" .S OCXGREF=$$GETREF^ORY3162(+OCXDD,.OCXDA,OCXLVL-1) Q:'$L(OCXGREF)"
^XTMP("XPDT",7811,"RTN","ORY3164",22,0)=" .D DIE^ORY3162(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,""E""),.OCXDA,OCXLVL-1)"
^XTMP("XPDT",7811,"RTN","ORY3164",23,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",24,0)=" Q QUIT"
^XTMP("XPDT",7811,"RTN","ORY3164",25,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",26,0)="DELFLD(OCXCREF,OCXDD,OCXFLD,OCXSUB) ;"
^XTMP("XPDT",7811,"RTN","ORY3164",27,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",28,0)=" N DDPATH,OCXDA,OCXPC,OCXLVL,QUIT,RESP"
^XTMP("XPDT",7811,"RTN","ORY3164",29,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",30,0)=" S QUIT=0,DDPATH=$P($P($$APPEND(OCXCREF,OCXDD),""("",2),"")"",1)"
^XTMP("XPDT",7811,"RTN","ORY3164",31,0)=" S OCXLVL=$L(DDPATH,"","")"
^XTMP("XPDT",7811,"RTN","ORY3164",32,0)=" F OCXPC=1:1:OCXLVL S OCXDA(OCXLVL-OCXPC)=+$P($P(DDPATH,"","",OCXPC),"":"",2)"
^XTMP("XPDT",7811,"RTN","ORY3164",33,0)=" S OCXDA=OCXDA(0) K OCXDA(0)"
^XTMP("XPDT",7811,"RTN","ORY3164",34,0)=" Q:(OCXFLAG[""D"") 0"
^XTMP("XPDT",7811,"RTN","ORY3164",35,0)=" I (OCXFLAG[""A"") S RESP=$$READ(""Y"","" Do you want to Delete the local '""_$$FILENAME^OCXSENDD(+OCXDD)_""' value ?"",""YES"") I 'RESP S QUIT=(RESP[U) Q QUIT"
^XTMP("XPDT",7811,"RTN","ORY3164",36,0)=" S OCXGREF=$$GETREF^ORY3162(+OCXDD,.OCXDA,OCXLVL-1) Q:'$L(OCXGREF)"
^XTMP("XPDT",7811,"RTN","ORY3164",37,0)=" D DIE^ORY3162(OCXDD,OCXGREF,OCXFLD,""@"",.OCXDA,OCXLVL-1)"
^XTMP("XPDT",7811,"RTN","ORY3164",38,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",39,0)=" Q QUIT"
^XTMP("XPDT",7811,"RTN","ORY3164",40,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",41,0)="CREATE(OCXCREF,OCXDD,OCXDA,OCXLVL) ;"
^XTMP("XPDT",7811,"RTN","ORY3164",42,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",43,0)=" N OCXFLD,OCXGREF"
^XTMP("XPDT",7811,"RTN","ORY3164",44,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",45,0)=" S OCXGREF=$$GETREF^ORY3162(+OCXDD,.OCXDA,OCXLVL) Q:'$L(OCXGREF)  S:'OCXDA OCXDA=$O(@(OCXGREF_""""""@"""")""),-1)+1"
^XTMP("XPDT",7811,"RTN","ORY3164",46,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",47,0)=" I '$D(@(OCXGREF_""0)"")) S @(OCXGREF_""0)"")=U_$$FILEHDR^OCXSENDD(+OCXDD)_U_U"
^XTMP("XPDT",7811,"RTN","ORY3164",48,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",49,0)=" S OCXFLD=0 F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'OCXFLD  Q:(OCXFLD["":"")  I '$$EXFLD^ORY3161(+OCXDD,OCXFLD) D"
^XTMP("XPDT",7811,"RTN","ORY3164",50,0)=" .I $L($G(@OCXCREF@(OCXDD,OCXFLD,""E""))) D DIE^ORY3162(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,""E""),.OCXDA,OCXLVL)"
^XTMP("XPDT",7811,"RTN","ORY3164",51,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",52,0)=" D PUSH(.OCXDA)"
^XTMP("XPDT",7811,"RTN","ORY3164",53,0)=" S OCXFLD="""" F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  I (OCXFLD["":"") D"
^XTMP("XPDT",7811,"RTN","ORY3164",54,0)=" .S OCXDA=$P(OCXFLD,"":"",2) W ! D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,OCXLVL+1)"
^XTMP("XPDT",7811,"RTN","ORY3164",55,0)=" D POP(.OCXDA)"
^XTMP("XPDT",7811,"RTN","ORY3164",56,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3164",57,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",58,0)="PUSH(OCXDA) ;"
^XTMP("XPDT",7811,"RTN","ORY3164",59,0)=" N OCXSUB S OCXSUB="""" F  S OCXSUB=$O(OCXDA(OCXSUB),-1) Q:'OCXSUB  S OCXDA(OCXSUB+1)=OCXDA(OCXSUB)"
^XTMP("XPDT",7811,"RTN","ORY3164",60,0)=" S OCXDA(1)=OCXDA,OCXDA=0"
^XTMP("XPDT",7811,"RTN","ORY3164",61,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3164",62,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",63,0)="POP(OCXDA) ;"
^XTMP("XPDT",7811,"RTN","ORY3164",64,0)=" N OCXSUB S OCXSUB="""" F  S OCXSUB=$O(OCXDA(OCXSUB)) Q:'OCXSUB  S OCXDA(OCXSUB)=$G(OCXDA(OCXSUB+1))"
^XTMP("XPDT",7811,"RTN","ORY3164",65,0)=" S OCXDA=OCXDA(1) K OCXDA($O(OCXDA(""""),-1))"
^XTMP("XPDT",7811,"RTN","ORY3164",66,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY3164",67,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",68,0)="APPEND(ARRAY,OCXSUB) ;"
^XTMP("XPDT",7811,"RTN","ORY3164",69,0)=" S:'(OCXSUB=+OCXSUB) OCXSUB=""""""""_OCXSUB_"""""""""
^XTMP("XPDT",7811,"RTN","ORY3164",70,0)=" Q:'(ARRAY[""("") ARRAY_""(""_OCXSUB_"")"""
^XTMP("XPDT",7811,"RTN","ORY3164",71,0)=" Q $E(ARRAY,1,$L(ARRAY)-1)_"",""_OCXSUB_"")"""
^XTMP("XPDT",7811,"RTN","ORY3164",72,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",73,0)="READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;"
^XTMP("XPDT",7811,"RTN","ORY3164",74,0)=" N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT"
^XTMP("XPDT",7811,"RTN","ORY3164",75,0)=" Q:'$L($G(OCXZ0)) U"
^XTMP("XPDT",7811,"RTN","ORY3164",76,0)=" S DIR(0)=OCXZ0"
^XTMP("XPDT",7811,"RTN","ORY3164",77,0)=" S:$L($G(OCXZA)) DIR(""A"")=OCXZA"
^XTMP("XPDT",7811,"RTN","ORY3164",78,0)=" S:$L($G(OCXZB)) DIR(""B"")=OCXZB"
^XTMP("XPDT",7811,"RTN","ORY3164",79,0)=" F OCXLINE=1:1:($G(OCXZL)-1) W !"
^XTMP("XPDT",7811,"RTN","ORY3164",80,0)=" D ^DIR"
^XTMP("XPDT",7811,"RTN","ORY3164",81,0)=" I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U"
^XTMP("XPDT",7811,"RTN","ORY3164",82,0)=" Q Y"
^XTMP("XPDT",7811,"RTN","ORY3164",83,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY3164",84,0)="PAUSE() W ""  Press Enter "" R X:DTIME W ! Q (X[U)"
^XTMP("XPDT",7811,"RTN","ORY3164",85,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES")="0^17^B12681869^n/a"
^XTMP("XPDT",7811,"RTN","ORY316ES",1,0)="ORY316ES ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*316) ;NOV 17,2009 at 13:36"
^XTMP("XPDT",7811,"RTN","ORY316ES",2,0)=" ;;3.0;ORDER ENTRY/RESULTS REPORTING;**316**;Dec 17,1997;Build 17"
^XTMP("XPDT",7811,"RTN","ORY316ES",3,0)=" ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
^XTMP("XPDT",7811,"RTN","ORY316ES",4,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",5,0)="S ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",6,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",7,0)=" N OCXDIER,QUIT,LINE,TEXT,REMOTE,LOCAL,D0,OPCODE,REF,OCXFLAG S QUIT=0"
^XTMP("XPDT",7811,"RTN","ORY316ES",8,0)=" N OCXAUTO,OCZSCR"
^XTMP("XPDT",7811,"RTN","ORY316ES",9,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",10,0)=" D DOT"
^XTMP("XPDT",7811,"RTN","ORY316ES",11,0)=" I $L($T(VERSION^OCXOCMP)),($$VERSION^OCXOCMP=""ORDER CHECK EXPERT version 1.01 released OCT 29,1998""),1"
^XTMP("XPDT",7811,"RTN","ORY316ES",12,0)=" E  D  Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",13,0)=" .W !"
^XTMP("XPDT",7811,"RTN","ORY316ES",14,0)=" .W !,""Rule Transport aborted, version mismatch."""
^XTMP("XPDT",7811,"RTN","ORY316ES",15,0)=" .W !,""Current Local version: "",$$VERSION^OCXOCMP"
^XTMP("XPDT",7811,"RTN","ORY316ES",16,0)=" .W !,""   Rule Transport Version: ORDER CHECK EXPERT version 1.01 released OCT 29,1998"""
^XTMP("XPDT",7811,"RTN","ORY316ES",17,0)=" I '$D(DTIME) W !!,""DTIME not defined !!"",!! Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",18,0)=" W !!,""Order Check Expert System Rule Transporter"""
^XTMP("XPDT",7811,"RTN","ORY316ES",19,0)=" W !,"" Created: NOV 17,2009 at 13:36  at  VMPDEV20.FO-BAYPINES.MED.VA.GOV"""
^XTMP("XPDT",7811,"RTN","ORY316ES",20,0)=" W !,"" Current Date: "",$$NOW^ORY3160,""  at  "",$$NETNAME^OCXSEND,!!"
^XTMP("XPDT",7811,"RTN","ORY316ES",21,0)=" S LASTFILE=0 K ^TMP(""OCXRULE"",$J)"
^XTMP("XPDT",7811,"RTN","ORY316ES",22,0)=" S ^TMP(""OCXRULE"",$J)=($P($H,"","",2)+($H*86400)+(1*60*60))_"" <- ^TMP ENTRY EXPIRATION DATE FOR ^OCXOPURG"""
^XTMP("XPDT",7811,"RTN","ORY316ES",23,0)=" S OCXFLAG=""A"""
^XTMP("XPDT",7811,"RTN","ORY316ES",24,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",25,0)="RUN ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",26,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",27,0)=" W !,""Loading Data "" D ^ORY31601"
^XTMP("XPDT",7811,"RTN","ORY316ES",28,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",29,0)=" S LINE=0 F  S LINE=$O(^TMP(""OCXRULE"",$J,LINE)) Q:'LINE   D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY316ES",30,0)=" .D:'(LINE#50) STATUS^OCXOPOST(LINE,$O(^TMP(""OCXRULE"",$J,"" ""),-1))"
^XTMP("XPDT",7811,"RTN","ORY316ES",31,0)=" .S TEXT=$G(^TMP(""OCXRULE"",$J,LINE)) I $L(TEXT) D  Q:QUIT"
^XTMP("XPDT",7811,"RTN","ORY316ES",32,0)=" ..S TEXT=$P(TEXT,"";"",2,999),OPCODE=$P(TEXT,U,1),TEXT=$P(TEXT,U,2,999)"
^XTMP("XPDT",7811,"RTN","ORY316ES",33,0)=" ..;"
^XTMP("XPDT",7811,"RTN","ORY316ES",34,0)=" ..I OPCODE=""KEY"" D DOT S LOCAL="""",D0=$$GETFILE^ORY3160(+$P(TEXT,U,1),$P(TEXT,U,2),.LOCAL) S QUIT=(D0=(-10)) Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",35,0)=" ..I OPCODE=""R"" S REF=""REMOTE(""_$P(TEXT,"":"",1)_"":""_D0_$P(TEXT,"":"",2,99)_"")"" Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",36,0)=" ..I OPCODE=""D"",$D(REF) S @REF=$P(TEXT,U,1,999) K REF Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",37,0)=" ..;"
^XTMP("XPDT",7811,"RTN","ORY316ES",38,0)=" ..I OPCODE=""EOR"" S QUIT=$$COMPARE^ORY3161(.LOCAL,.REMOTE) K LOCAL,REMOTE Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",39,0)=" ..I OPCODE=""EOF"" K LOCAL,REMOTE Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",40,0)=" ..I OPCODE=""SOF"" W !,""  Installing '"",TEXT,""' records... "" Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",41,0)=" ..I OPCODE=""ROOT"" D  Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",42,0)=" ...N FILE,DATA"
^XTMP("XPDT",7811,"RTN","ORY316ES",43,0)=" ...S FILE=U_$P(TEXT,U,1),DATA=$P(TEXT,U,2,3)"
^XTMP("XPDT",7811,"RTN","ORY316ES",44,0)=" ...I ($P($G(@FILE),U,1,2)=DATA) Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",45,0)=" ...S $P(@FILE,U,1,2)=DATA"
^XTMP("XPDT",7811,"RTN","ORY316ES",46,0)=" ...W !,""  Restoring file #"",(+$P(DATA,U,2)),"" zero node"""
^XTMP("XPDT",7811,"RTN","ORY316ES",47,0)=" ..;"
^XTMP("XPDT",7811,"RTN","ORY316ES",48,0)=" ..W !,""Unknown OpCode: "",OPCODE,""  in: "",TEXT S QUIT=$$PAUSE^ORY3160 W !"
^XTMP("XPDT",7811,"RTN","ORY316ES",49,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",50,0)=" K ^TMP(""OCXRULE"",$J)"
^XTMP("XPDT",7811,"RTN","ORY316ES",51,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",52,0)=" I $D(^OCXS) D"
^XTMP("XPDT",7811,"RTN","ORY316ES",53,0)=" .N FILE,DO,PD0,CNT"
^XTMP("XPDT",7811,"RTN","ORY316ES",54,0)=" .S FILE=0 F  S FILE=$O(^OCXS(FILE)) Q:'FILE  D"
^XTMP("XPDT",7811,"RTN","ORY316ES",55,0)=" ..S D0=0 F CNT=0:1 S PD0=D0,D0=$O(^OCXS(FILE,D0)) Q:'D0"
^XTMP("XPDT",7811,"RTN","ORY316ES",56,0)=" ..S $P(^OCXS(FILE,0),U,3,4)=CNT_U_PD0"
^XTMP("XPDT",7811,"RTN","ORY316ES",57,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",58,0)=" I $G(OCXDIER) D"
^XTMP("XPDT",7811,"RTN","ORY316ES",59,0)=" .W !!!!!!!"
^XTMP("XPDT",7811,"RTN","ORY316ES",60,0)=" .W !,?5,""******************** Warning ******************** """
^XTMP("XPDT",7811,"RTN","ORY316ES",61,0)=" .W !,?7,+$G(OCXDIER),"" data filing error"",$S(($G(OCXDIER)=1):"""",1:""s""),""."""
^XTMP("XPDT",7811,"RTN","ORY316ES",62,0)=" .W !,?7,""Some expert system rules may be incomplete."""
^XTMP("XPDT",7811,"RTN","ORY316ES",63,0)=" .W !,?5,""******************** Warning ******************** """
^XTMP("XPDT",7811,"RTN","ORY316ES",64,0)=" I '$G(OCXDIER) W !!,?5,"" No data filing errors."""
^XTMP("XPDT",7811,"RTN","ORY316ES",65,0)=" W !!,""Transport Finished..."""
^XTMP("XPDT",7811,"RTN","ORY316ES",66,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",67,0)=" D"
^XTMP("XPDT",7811,"RTN","ORY316ES",68,0)=" .N OCXOETIM"
^XTMP("XPDT",7811,"RTN","ORY316ES",69,0)=" .D BMES^XPDUTL(""---Creating Order Check Routines-----------------------------------"")"
^XTMP("XPDT",7811,"RTN","ORY316ES",70,0)=" .D AUTO^OCXOCMP"
^XTMP("XPDT",7811,"RTN","ORY316ES",71,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",72,0)=" Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",73,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",74,0)="DOT Q:$G(OCXAUTO)  W:($X>70) ! W "" ."" Q"
^XTMP("XPDT",7811,"RTN","ORY316ES",75,0)=" ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",76,0)="READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;"
^XTMP("XPDT",7811,"RTN","ORY316ES",77,0)=" N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT"
^XTMP("XPDT",7811,"RTN","ORY316ES",78,0)=" Q:'$L($G(OCXZ0)) U"
^XTMP("XPDT",7811,"RTN","ORY316ES",79,0)=" S DIR(0)=OCXZ0"
^XTMP("XPDT",7811,"RTN","ORY316ES",80,0)=" S:$L($G(OCXZA)) DIR(""A"")=OCXZA"
^XTMP("XPDT",7811,"RTN","ORY316ES",81,0)=" S:$L($G(OCXZB)) DIR(""B"")=OCXZB"
^XTMP("XPDT",7811,"RTN","ORY316ES",82,0)=" F OCXLINE=1:1:($G(OCXZL)-1) W !"
^XTMP("XPDT",7811,"RTN","ORY316ES",83,0)=" D ^DIR"
^XTMP("XPDT",7811,"RTN","ORY316ES",84,0)=" I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U"
^XTMP("XPDT",7811,"RTN","ORY316ES",85,0)=" Q Y"
^XTMP("XPDT",7811,"RTN","ORY316ES",86,0)=" ;"
^XTMP("XPDT",7811,"VER")="8.0^22.0"
^XTMP("XPDT",7812)="1"
^XTMP("XPDT",7812,"BLD",7482,0)="PRE Clozapine msg fix 1.0^^0^3100720^n"
^XTMP("XPDT",7812,"BLD",7482,1,0)="^^8^8^3100716^"
^XTMP("XPDT",7812,"BLD",7482,1,1,0)="This patch is for Charleston only.  It includes a modification to PSODRG "
^XTMP("XPDT",7812,"BLD",7482,1,2,0)="routine to only display Clozapine message ""Now doing Clozapine Order "
^XTMP("XPDT",7812,"BLD",7482,1,3,0)="checks.  Please wait..."" when PSOCLO1 is defined in MONITOR ROUTINE field "
^XTMP("XPDT",7812,"BLD",7482,1,4,0)="17.5 of Drug file 50."
^XTMP("XPDT",7812,"BLD",7482,1,5,0)=" "
^XTMP("XPDT",7812,"BLD",7482,1,6,0)="This correction is for remedy ticket 415769."
^XTMP("XPDT",7812,"BLD",7482,1,7,0)=" "
^XTMP("XPDT",7812,"BLD",7482,1,8,0)="This code change will also be in Bundled Build v25."
^XTMP("XPDT",7812,"BLD",7482,4,0)="^9.64PA^^"
^XTMP("XPDT",7812,"BLD",7482,6.3)="4"
^XTMP("XPDT",7812,"BLD",7482,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7812,"BLD",7482,"KRN",.4,0)=".4"
^XTMP("XPDT",7812,"BLD",7482,"KRN",.401,0)=".401"
^XTMP("XPDT",7812,"BLD",7482,"KRN",.402,0)=".402"
^XTMP("XPDT",7812,"BLD",7482,"KRN",.403,0)=".403"
^XTMP("XPDT",7812,"BLD",7482,"KRN",.5,0)=".5"
^XTMP("XPDT",7812,"BLD",7482,"KRN",.84,0)=".84"
^XTMP("XPDT",7812,"BLD",7482,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7812,"BLD",7482,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7812,"BLD",7482,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7812,"BLD",7482,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7812,"BLD",7482,"KRN",9.8,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7812,"BLD",7482,"KRN",9.8,"NM",1,0)="PSODRG^^0^B64072415"
^XTMP("XPDT",7812,"BLD",7482,"KRN",9.8,"NM","B","PSODRG",1)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN",19,0)="19"
^XTMP("XPDT",7812,"BLD",7482,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7812,"BLD",7482,"KRN",101,0)="101"
^XTMP("XPDT",7812,"BLD",7482,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7812,"BLD",7482,"KRN",771,0)="771"
^XTMP("XPDT",7812,"BLD",7482,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7812,"BLD",7482,"KRN",870,0)="870"
^XTMP("XPDT",7812,"BLD",7482,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7812,"BLD",7482,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7812,"BLD",7482,"KRN",8994,0)="8994"
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",.4,.4)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",.401,.401)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",.402,.402)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",.403,.403)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",.5,.5)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",.84,.84)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",19,19)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",101,101)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",771,771)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",870,870)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7812,"BLD",7482,"KRN","B",8994,8994)=""
^XTMP("XPDT",7812,"MBREQ")="0"
^XTMP("XPDT",7812,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7812,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7812,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7812,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7812,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7812,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7812,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7812,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7812,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7812,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7812,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7812,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7812,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7812,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7812,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7812,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7812,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7812,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7812,"QUES","XPM1","B")=""
^XTMP("XPDT",7812,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7812,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7812,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7812,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7812,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7812,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7812,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7812,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7812,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7812,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7812,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7812,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7812,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7812,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7812,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7812,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7812,"RTN")="1"
^XTMP("XPDT",7812,"RTN","PSODRG")="0^1^B64072415"
^XTMP("XPDT",7812,"RTN","PSODRG",1,0)="PSODRG ;IHS/DSD/JCM-ORDER ENTRY DRUG SELECTION ;03/30/93"
^XTMP("XPDT",7812,"RTN","PSODRG",2,0)=" ;;7.0;OUTPATIENT PHARMACY;**20,23,36,53,54,46,112,139,207,148,243,268,324,251**;DEC 1997;Build 4"
^XTMP("XPDT",7812,"RTN","PSODRG",3,0)=" ;Reference ^PSDRUG supported by DBIA 221"
^XTMP("XPDT",7812,"RTN","PSODRG",4,0)=" ;Reference ^PS(50.7 supported by DBIA 2223"
^XTMP("XPDT",7812,"RTN","PSODRG",5,0)=" ;Reference to PSSDIN supported by DBIA 3166"
^XTMP("XPDT",7812,"RTN","PSODRG",6,0)=" ;Reference to $$NDCFMT^PSSNDCUT supported by IA 4707"
^XTMP("XPDT",7812,"RTN","PSODRG",7,0)=" ;Reference to OROCAPI supported by IA 5367"
^XTMP("XPDT",7812,"RTN","PSODRG",8,0)=" ;Reference to $$OITM^ORX8 supported by IA 5469"
^XTMP("XPDT",7812,"RTN","PSODRG",9,0)=" ;----------------------------------------------------------"
^XTMP("XPDT",7812,"RTN","PSODRG",10,0)="START ;"
^XTMP("XPDT",7812,"RTN","PSODRG",11,0)=" S (PSONEW(""DFLG""),PSONEW(""FIELD""),PSODRG(""QFLG""))=0"
^XTMP("XPDT",7812,"RTN","PSODRG",12,0)=" D @($S(+$G(PSOEDIT)=1&('$D(DA)):""SELECT^PSODRGN"",1:""SELECT""))"
^XTMP("XPDT",7812,"RTN","PSODRG",13,0)=" G:$G(PSORXED(""DFLG"")) END ; Select Drug"
^XTMP("XPDT",7812,"RTN","PSODRG",14,0)=" I $G(PSORX(""EDIT"")),$G(PSOY),$G(PSODRUG(""IEN""))=+PSOY D  G:$G(PSORXED(""DFLG"")) END"
^XTMP("XPDT",7812,"RTN","PSODRG",15,0)=" . N NDC D NDC(+$G(PSORXED(""IRXN"")),0,+PSOY,.NDC) I $G(NDC)=""^"" S PSORXED(""DFLG"")=1 Q"
^XTMP("XPDT",7812,"RTN","PSODRG",16,0)=" . I $G(NDC)'="""" S (PSODRUG(""NDC""),PSORXED(""FLD"",27))=NDC"
^XTMP("XPDT",7812,"RTN","PSODRG",17,0)=" ;"
^XTMP("XPDT",7812,"RTN","PSODRG",18,0)=" I $G(PSORX(""EDIT""))]"""",'PSONEW(""FIELD"") D TRADE"
^XTMP("XPDT",7812,"RTN","PSODRG",19,0)=" G:PSONEW(""DFLG"")!(PSODRG(""QFLG""))!($G(PSORXED(""DFLG""))) END"
^XTMP("XPDT",7812,"RTN","PSODRG",20,0)=" D SET ; Set various drug information"
^XTMP("XPDT",7812,"RTN","PSODRG",21,0)=" D NFI ; Display dispense drug/orderable item text"
^XTMP("XPDT",7812,"RTN","PSODRG",22,0)=" D:'$G(PSOEDIT) POST I $G(PSORX(""DFLG"")) S PSONEW(""DFLG"")=1 K:'$G(PSORX(""EDIT"")) PSORX(""DFLG"") ; Do any post selection action"
^XTMP("XPDT",7812,"RTN","PSODRG",23,0)="END ;D EOJ"
^XTMP("XPDT",7812,"RTN","PSODRG",24,0)=" Q"
^XTMP("XPDT",7812,"RTN","PSODRG",25,0)=" ;------------------------------------------------------------"
^XTMP("XPDT",7812,"RTN","PSODRG",26,0)=" ;"
^XTMP("XPDT",7812,"RTN","PSODRG",27,0)="SELECT ;"
^XTMP("XPDT",7812,"RTN","PSODRG",28,0)=" K:'$G(PSORXED) CLOZPAT"
^XTMP("XPDT",7812,"RTN","PSODRG",29,0)=" K IT,DIC,X,Y,PSODRUG(""TRADE NAME""),PSODRUG(""NDC""),PSODRUG(""DAW""),PSODRUG(""BAD"") S:$G(POERR)&($P($G(OR0),""^"",9)) Y=$P(^PSDRUG($P(OR0,""^"",9),0),""^"")"
^XTMP("XPDT",7812,"RTN","PSODRG",30,0)=" I $G(PSODRUG(""IEN""))]"""" S Y=PSODRUG(""NAME""),PSONEW(""OLD VAL"")=PSODRUG(""IEN"")"
^XTMP("XPDT",7812,"RTN","PSODRG",31,0)=" W !,""DRUG: ""_$S($G(Y)]"""":Y_""// "",1:"""") R X:$S($D(DTIME):DTIME,1:300) I '$T S DTOUT=1"
^XTMP("XPDT",7812,"RTN","PSODRG",32,0)=" I X="""",$G(Y)]"""" S:Y X=Y S:'X X=$G(PSODRUG(""IEN"")) S:X X=""`""_X"
^XTMP("XPDT",7812,"RTN","PSODRG",33,0)=" G:X="""" SELECT"
^XTMP("XPDT",7812,"RTN","PSODRG",34,0)=" I X?1.""?"" W !!,""Answer with DRUG NUMBER, or GENERIC NAME, or VA PRODUCT NAME, or"",!,""NATIONAL DRUG CLASS, or SYNONYM"" G SELECT"
^XTMP("XPDT",7812,"RTN","PSODRG",35,0)=" I $G(PSORXED),X[""^"" S PSORXED(""DFLG"")=1 G SELECTX"
^XTMP("XPDT",7812,"RTN","PSODRG",36,0)=" I X=""^""!(X[""^^"")!($D(DTOUT)) S PSONEW(""DFLG"")=1 G SELECTX"
^XTMP("XPDT",7812,"RTN","PSODRG",37,0)=" I '$G(POERR),X[U,$L(X)>1 S PSODIR(""FLD"")=PSONEW(""FLD"") D JUMP^PSODIR1 S:$G(PSODIR(""FIELD"")) PSONEW(""FIELD"")=PSODIR(""FIELD"") K PSODIR S PSODRG(""QFLG"")=1 G SELECTX"
^XTMP("XPDT",7812,"RTN","PSODRG",38,0)=" S DIC=50,DIC(0)=""EMQZVT"",DIC(""T"")="""",D=""B^C^VAPN^VAC"""
^XTMP("XPDT",7812,"RTN","PSODRG",39,0)=" S DIC(""S"")=""I $S('$D(^PSDRUG(+Y,""""I"""")):1,'^(""""I""""):1,DT'>^(""""I""""):1,1:0),$S($P($G(^PSDRUG(+Y,2)),""""^"""",3)'[""""O"""":0,1:1),$D(^PSDRUG(""""ASP"""",+$G(^(2)),+Y))"""
^XTMP("XPDT",7812,"RTN","PSODRG",40,0)=" D MIX^DIC1 K DIC,D"
^XTMP("XPDT",7812,"RTN","PSODRG",41,0)=" I $D(DTOUT) S PSONEW(""DFLG"")=1 G SELECTX"
^XTMP("XPDT",7812,"RTN","PSODRG",42,0)=" I $D(DUOUT) K DUOUT G SELECT"
^XTMP("XPDT",7812,"RTN","PSODRG",43,0)=" I Y<0 G SELECT"
^XTMP("XPDT",7812,"RTN","PSODRG",44,0)=" S:$G(PSONEW(""OLD VAL""))=+Y&('$G(PSOEDIT)) PSODRG(""QFLG"")=1"
^XTMP("XPDT",7812,"RTN","PSODRG",45,0)=" K PSOY S PSOY=Y,PSOY(0)=Y(0)"
^XTMP("XPDT",7812,"RTN","PSODRG",46,0)=" I $P(PSOY(0),""^"")=""OTHER DRUG""!($P(PSOY(0),""^"")=""OUTSIDE DRUG"") D TRADE"
^XTMP("XPDT",7812,"RTN","PSODRG",47,0)="SELECTX K X,Y,DTOUT,DUOUT,PSONEW(""OLD VAL"")"
^XTMP("XPDT",7812,"RTN","PSODRG",48,0)=" Q"
^XTMP("XPDT",7812,"RTN","PSODRG",49,0)=" ;"
^XTMP("XPDT",7812,"RTN","PSODRG",50,0)="NDC(RX,RFL,DRG,NDC) ; Editing NDC for ECME Released Rx's"
^XTMP("XPDT",7812,"RTN","PSODRG",51,0)=" S NDC=$S($G(NDC)'="""":$G(NDC),1:$$GETNDC^PSONDCUT(RX,.RFL))"
^XTMP("XPDT",7812,"RTN","PSODRG",52,0)=" I $$STATUS^PSOBPSUT(RX,RFL)="""" Q"
^XTMP("XPDT",7812,"RTN","PSODRG",53,0)=" I '$$RXRLDT^PSOBPSUT(RX,RFL) Q"
^XTMP("XPDT",7812,"RTN","PSODRG",54,0)=" ;"
^XTMP("XPDT",7812,"RTN","PSODRG",55,0)=" S NDC=$S($G(NDC)'="""":$G(NDC),1:$$GETNDC^PSONDCUT(RX,.RFL))"
^XTMP("XPDT",7812,"RTN","PSODRG",56,0)=" D NDCEDT^PSONDCUT(RX,.RFL,$G(DRG),$G(PSOSITE),.NDC)"
^XTMP("XPDT",7812,"RTN","PSODRG",57,0)=" Q"
^XTMP("XPDT",7812,"RTN","PSODRG",58,0)=" ;"
^XTMP("XPDT",7812,"RTN","PSODRG",59,0)="TRADE ;"
^XTMP("XPDT",7812,"RTN","PSODRG",60,0)=" K DIR,DIC,DA,X,Y"
^XTMP("XPDT",7812,"RTN","PSODRG",61,0)=" S DIR(0)=""52,6.5"" S:$G(PSOTRN)]"""" DIR(""B"")=$G(PSOTRN) D ^DIR K DIR,DIC"
^XTMP("XPDT",7812,"RTN","PSODRG",62,0)=" I X=""@"" S Y=X K DIRUT"
^XTMP("XPDT",7812,"RTN","PSODRG",63,0)=" I $D(DIRUT) S:$D(DUOUT)!$D(DTOUT)&('$D(PSORX(""EDIT""))) PSONEW(""DFLG"")=1 G TRADEX"
^XTMP("XPDT",7812,"RTN","PSODRG",64,0)=" S PSODRUG(""TRADE NAME"")=Y"
^XTMP("XPDT",7812,"RTN","PSODRG",65,0)="TRADEX I $G(PSORXED(""DFLG"")),$D(DIRUT) S PSORXED(""DFLG"")=1"
^XTMP("XPDT",7812,"RTN","PSODRG",66,0)=" K DIRUT,DTOUT,DUOUT,X,Y,DA,DR,DIE"
^XTMP("XPDT",7812,"RTN","PSODRG",67,0)=" Q"
^XTMP("XPDT",7812,"RTN","PSODRG",68,0)="SET ;"
^XTMP("XPDT",7812,"RTN","PSODRG",69,0)=" N STAT S PSODRUG(""IEN"")=+PSOY,PSODRUG(""VA CLASS"")=$P(PSOY(0),""^"",2)"
^XTMP("XPDT",7812,"RTN","PSODRG",70,0)=" S PSODRUG(""NAME"")=$P(PSOY(0),""^"")"
^XTMP("XPDT",7812,"RTN","PSODRG",71,0)=" S:+$G(^PSDRUG(+PSOY,2)) PSODRUG(""OI"")=+$G(^(2)),PSODRUG(""OIN"")=$P(^PS(50.7,+$G(^(2)),0),""^"")"
^XTMP("XPDT",7812,"RTN","PSODRG",72,0)=" S PSODRUG(""NDF"")=$S($G(^PSDRUG(+PSOY,""ND""))]"""":+^(""ND"")_""A""_$P(^(""ND""),""^"",3),1:0)"
^XTMP("XPDT",7812,"RTN","PSODRG",73,0)=" S PSODRUG(""MAXDOSE"")=$P(PSOY(0),""^"",4),PSODRUG(""DEA"")=$P(PSOY(0),""^"",3)"
^XTMP("XPDT",7812,"RTN","PSODRG",74,0)=" S PSODRUG(""CLN"")=$S($D(^PSDRUG(+PSOY,""ND"")):+$P(^(""ND""),""^"",6),1:0)"
^XTMP("XPDT",7812,"RTN","PSODRG",75,0)=" S PSODRUG(""SIG"")=$P(PSOY(0),""^"",5)"
^XTMP("XPDT",7812,"RTN","PSODRG",76,0)=" I $G(PSODRUG(""NDC""))="""" S PSODRUG(""NDC"")=$$GETNDC^PSSNDCUT(+PSOY,$G(PSOSITE))"
^XTMP("XPDT",7812,"RTN","PSODRG",77,0)=" S PSODRUG(""DAW"")=+$$GET1^DIQ(50,+PSOY,81)"
^XTMP("XPDT",7812,"RTN","PSODRG",78,0)=" S PSODRUG(""STKLVL"")=$G(^PSDRUG(+PSOY,660.1))"
^XTMP("XPDT",7812,"RTN","PSODRG",79,0)=" G:$G(^PSDRUG(+PSOY,660))']"""" SETX"
^XTMP("XPDT",7812,"RTN","PSODRG",80,0)=" S PSOX1=$G(^PSDRUG(+PSOY,660))"
^XTMP("XPDT",7812,"RTN","PSODRG",81,0)=" S PSODRUG(""COST"")=$P($G(PSOX1),""^"",6)"
^XTMP("XPDT",7812,"RTN","PSODRG",82,0)=" S PSODRUG(""UNIT"")=$P($G(PSOX1),""^"",8)"
^XTMP("XPDT",7812,"RTN","PSODRG",83,0)=" S PSODRUG(""EXPIRATION DATE"")=$P($G(PSOX1),""^"",9)"
^XTMP("XPDT",7812,"RTN","PSODRG",84,0)="SETX K PSOX1,PSOY"
^XTMP("XPDT",7812,"RTN","PSODRG",85,0)=" Q"
^XTMP("XPDT",7812,"RTN","PSODRG",86,0)="NFI ;display restriction/guidelines"
^XTMP("XPDT",7812,"RTN","PSODRG",87,0)=" D EN^PSSDIN(PSODRUG(""OI""),PSODRUG(""IEN"")) S NFI=$$PROMPT^PSSDIN"
^XTMP("XPDT",7812,"RTN","PSODRG",88,0)=" I NFI]"""",""ODY""[NFI D TD^PSONFI"
^XTMP("XPDT",7812,"RTN","PSODRG",89,0)=" K NFI Q"
^XTMP("XPDT",7812,"RTN","PSODRG",90,0)="POST ;order checks"
^XTMP("XPDT",7812,"RTN","PSODRG",91,0)=" G:$G(PSORX(""DFLG""))!($G(PSORXED(""DFLG""))) POSTX"
^XTMP("XPDT",7812,"RTN","PSODRG",92,0)=" D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",93,0)=" K ZDGDG,ZTHER,IT N LIST S LIST=""PSOPEPS"",^TMP($JOB,LIST,""IN"",""PING"")="""" D IN^PSSHRQ2(LIST)"
^XTMP("XPDT",7812,"RTN","PSODRG",94,0)=" I $P(^TMP($J,LIST,""OUT"",0),""^"")=-1 K DIR D"
^XTMP("XPDT",7812,"RTN","PSODRG",95,0)=" .S DIR(0)=""E"",DIR(""A"",1)=""No Enhanced Order Checks can be performed."""
^XTMP("XPDT",7812,"RTN","PSODRG",96,0)=" .S DIR(""A"",2)=""   Reason: ""_$P($G(^TMP($J,LIST,""OUT"",0)),""^"",2)"
^XTMP("XPDT",7812,"RTN","PSODRG",97,0)=" .S DIR(""A"")=""Press Return to continue..."",DIR(""?"")=""Press Return to continue"""
^XTMP("XPDT",7812,"RTN","PSODRG",98,0)=" .W ! D ^DIR K DIRUT,DUOUT,DIR,X,Y"
^XTMP("XPDT",7812,"RTN","PSODRG",99,0)=" K PSORX(""INTERVENE"") N STAT,SIG,PTR,NDF,VAP S PSORX(""DFLG"")=0"
^XTMP("XPDT",7812,"RTN","PSODRG",100,0)=" W !! D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",101,0)=" D ^PSOBUILD"
^XTMP("XPDT",7812,"RTN","PSODRG",102,0)=" D @$S($G(COPY):""^PSOCPPRE"",1:""^PSODDPRE"") ; Duplicate drug check"
^XTMP("XPDT",7812,"RTN","PSODRG",103,0)=" G:$G(PSORX(""DFLG"")) POSTX"
^XTMP("XPDT",7812,"RTN","PSODRG",104,0)=" D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",105,0)=" I $P($G(^PSDRUG(PSODRUG(""IEN""),""CLOZ1"")),""^"")=""PSOCLO1"" W !,""Now doing Clozapine Order checks.  Please wait..."",! D CLOZ"
^XTMP("XPDT",7812,"RTN","PSODRG",106,0)=" G:PSORX(""DFLG"") POSTX"
^XTMP("XPDT",7812,"RTN","PSODRG",107,0)=" D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",108,0)=" W:$G(PSOFIN)']"""" !,""Now doing allergy checks.  Please wait..."",!"
^XTMP("XPDT",7812,"RTN","PSODRG",109,0)=" S PSONOAL="""" D ALLERGY^PSOORUT2 D:PSONOAL'="""" NOALRGY K PSONOAL"
^XTMP("XPDT",7812,"RTN","PSODRG",110,0)=" D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",111,0)=" G:PSORX(""DFLG"") POSTX"
^XTMP("XPDT",7812,"RTN","PSODRG",112,0)=" D ^PSODGAL1 K PSORX(""INTERVENE"")"
^XTMP("XPDT",7812,"RTN","PSODRG",113,0)=" ;aminoglycoside"
^XTMP("XPDT",7812,"RTN","PSODRG",114,0)=" N AOC"
^XTMP("XPDT",7812,"RTN","PSODRG",115,0)=" D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",116,0)=" S AOC=$$AOC^OROCAPI(PSODFN,$P(PSODRUG(""NDF""),""A"",2)) I $P(AOC,""^"",4)]"""" D"
^XTMP("XPDT",7812,"RTN","PSODRG",117,0)=" .W !!,""***Aminoglycoside Ordered***"",!!"
^XTMP("XPDT",7812,"RTN","PSODRG",118,0)=" .K ^UTILITY($J,""W"") S DIWL=1,DIWR=78,DIWF="""" S X=$P(AOC,""^"",4) D ^DIWP"
^XTMP("XPDT",7812,"RTN","PSODRG",119,0)=" .W !! F ZX=0:0 S ZX=$O(^UTILITY($J,""W"",1,ZX)) Q:'ZX  W ?2,^UTILITY($J,""W"",1,ZX,0),! D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",120,0)=" .K ^UTILITY($J,""W"")"
^XTMP("XPDT",7812,"RTN","PSODRG",121,0)=" D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",122,0)=" ;dangerous meds for pat >64"
^XTMP("XPDT",7812,"RTN","PSODRG",123,0)=" I $G(PSODRUG(""OI"")) D"
^XTMP("XPDT",7812,"RTN","PSODRG",124,0)=" .N OI,OIR S OI=$$OITM^ORX8(PSODRUG(""OI""),""99PSP"") Q:'OI"
^XTMP("XPDT",7812,"RTN","PSODRG",125,0)=" .S OIR=$$DOC^OROCAPI(PSODFN,OI) I $P(OIR,""^"",4)]"""" D"
^XTMP("XPDT",7812,"RTN","PSODRG",126,0)=" ..D HD^PSODDPR2:(($Y+5)'>IOSL) W !!,""***Dangerous Meds for Patient >64***"",!! S DFN=PSODFN D DEM^VADPT"
^XTMP("XPDT",7812,"RTN","PSODRG",127,0)=" ..K ^UTILITY($J,""W"") S DIWL=1,DIWR=78,DIWF="""" S X=$P(OIR,""^"",4) D ^DIWP"
^XTMP("XPDT",7812,"RTN","PSODRG",128,0)=" ..F ZX=0:0 S ZX=$O(^UTILITY($J,""W"",1,ZX)) Q:'ZX  W ?2,^UTILITY($J,""W"",1,ZX,0),! D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",129,0)=" ..K ^UTILITY($J,""W"")"
^XTMP("XPDT",7812,"RTN","PSODRG",130,0)=" D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",131,0)=" ;metformin lab results"
^XTMP("XPDT",7812,"RTN","PSODRG",132,0)=" N GOC S GOC=$$GOC^OROCAPI(PSODFN,PSODRUG(""NAME"")) I $P(GOC,""^"",4)]"""" D"
^XTMP("XPDT",7812,"RTN","PSODRG",133,0)=" .W !!,""***Metformin Lab Results***"",!!"
^XTMP("XPDT",7812,"RTN","PSODRG",134,0)=" .K ^UTILITY($J,""W"") S DIWL=1,DIWR=78,DIWF="""" S X=$P(GOC,""^"",4) D ^DIWP"
^XTMP("XPDT",7812,"RTN","PSODRG",135,0)=" .F ZX=0:0 S ZX=$O(^UTILITY($J,""W"",1,ZX)) Q:'ZX  W ?2,^UTILITY($J,""W"",1,ZX,0),! D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",136,0)=" .K ^UTILITY($J,""W"")"
^XTMP("XPDT",7812,"RTN","PSODRG",137,0)=" D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",138,0)=" K DIWF,DIWL,DIWR,ZX,DFN"
^XTMP("XPDT",7812,"RTN","PSODRG",139,0)=" G:$G(PSODRUG(""DEA""))[""S"" POSTX ;stops if prospective drug is supply"
^XTMP("XPDT",7812,"RTN","PSODRG",140,0)=" ;enhanced OC"
^XTMP("XPDT",7812,"RTN","PSODRG",141,0)=" D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",142,0)=" W ! D @$S($G(COPY):""OBX^PSOCPPRE"",1:""OBX^PSODDPRE"") ; Set PSORX(""DFLG"")=1 if process to stop new enhanced order checks"
^XTMP("XPDT",7812,"RTN","PSODRG",143,0)="POSTX ;"
^XTMP("XPDT",7812,"RTN","PSODRG",144,0)=" K IT,^TMP($J,""DI""_PSODFN),^TMP($J,""DI""),PSORX(""INTERVENE""),DA,^TMP($J,""PSODRDI""),ZDGDG,ZTHER"
^XTMP("XPDT",7812,"RTN","PSODRG",145,0)=" Q"
^XTMP("XPDT",7812,"RTN","PSODRG",146,0)=" ;"
^XTMP("XPDT",7812,"RTN","PSODRG",147,0)="EOJ ;"
^XTMP("XPDT",7812,"RTN","PSODRG",148,0)=" K PSODRG"
^XTMP("XPDT",7812,"RTN","PSODRG",149,0)=" Q"
^XTMP("XPDT",7812,"RTN","PSODRG",150,0)="WAIT ;"
^XTMP("XPDT",7812,"RTN","PSODRG",151,0)=" K DIR S DIR(0)=""E"",DIR(""?"")=""Press Return to continue"",DIR(""A"")=""Press Return to continue..."" W !"
^XTMP("XPDT",7812,"RTN","PSODRG",152,0)=" D ^DIR K DIRUT,DUOUT,DIR,X,Y"
^XTMP("XPDT",7812,"RTN","PSODRG",153,0)=" Q"
^XTMP("XPDT",7812,"RTN","PSODRG",154,0)=" ;"
^XTMP("XPDT",7812,"RTN","PSODRG",155,0)="CLOZ ;"
^XTMP("XPDT",7812,"RTN","PSODRG",156,0)=" S ANQRTN=$P(^PSDRUG(PSODRUG(""IEN""),""CLOZ1""),""^""),ANQX=0"
^XTMP("XPDT",7812,"RTN","PSODRG",157,0)=" S P(5)=PSODRUG(""IEN""),DFN=PSODFN,X=ANQRTN"
^XTMP("XPDT",7812,"RTN","PSODRG",158,0)=" X ^%ZOSF(""TEST"") I  D @(""^""_ANQRTN) S:$G(ANQX) PSORX(""DFLG"")=1"
^XTMP("XPDT",7812,"RTN","PSODRG",159,0)=" K P(5),ANQRTN,ANQX,X,DFN"
^XTMP("XPDT",7812,"RTN","PSODRG",160,0)=" Q"
^XTMP("XPDT",7812,"RTN","PSODRG",161,0)=" ;"
^XTMP("XPDT",7812,"RTN","PSODRG",162,0)="EN(DRG) ;returns lab test identified for clozapine order checking"
^XTMP("XPDT",7812,"RTN","PSODRG",163,0)=" K LAB I $P($G(^PSDRUG(DRG,""CLOZ1"")),""^"")'=""PSOCLO1"" S LAB(""NOT"")=0 Q"
^XTMP("XPDT",7812,"RTN","PSODRG",164,0)=" I $P($G(^PSDRUG(DRG,""CLOZ1"")),""^"")=""PSOCLO1"" D"
^XTMP("XPDT",7812,"RTN","PSODRG",165,0)=" .S (CNT,I)=0 F  S I=$O(^PSDRUG(DRG,""CLOZ2"",I)) Q:'I  S CNT=$G(CNT)+1"
^XTMP("XPDT",7812,"RTN","PSODRG",166,0)=" .I CNT'=2 S LAB(""BAD TEST"")=0 K CNT Q"
^XTMP("XPDT",7812,"RTN","PSODRG",167,0)=" .K CNT F I=0:0 S I=$O(^PSDRUG(DRG,""CLOZ2"",I)) Q:'I  D"
^XTMP("XPDT",7812,"RTN","PSODRG",168,0)=" ..S LABT=$S($P(^PSDRUG(DRG,""CLOZ2"",I,0),""^"",4)=1:""WBC"",1:""ANC""),LAB(LABT)=$P(^PSDRUG(DRG,""CLOZ2"",I,0),""^"")_""^""_$P(^(0),""^"",3)_""^""_$P(^(0),""^"",4)"
^XTMP("XPDT",7812,"RTN","PSODRG",169,0)=" K LABT,I"
^XTMP("XPDT",7812,"RTN","PSODRG",170,0)=" Q"
^XTMP("XPDT",7812,"RTN","PSODRG",171,0)="NOALRGY ;"
^XTMP("XPDT",7812,"RTN","PSODRG",172,0)=" D HD^PSODDPR2:(($Y+5)'>IOSL)"
^XTMP("XPDT",7812,"RTN","PSODRG",173,0)=" N DIR S DIR(0)=""SA^1:YES;0:NO"""
^XTMP("XPDT",7812,"RTN","PSODRG",174,0)=" I $D(^TMP($J,""PSOINTERVENE"",+PSODFN)) D  Q"
^XTMP("XPDT",7812,"RTN","PSODRG",175,0)=" .S DIR(""A"")=""No Allergy Assessment - Do you want to duplicate Intervention?: "",DIR(""B"")=""Yes"""
^XTMP("XPDT",7812,"RTN","PSODRG",176,0)=" .D ^DIR"
^XTMP("XPDT",7812,"RTN","PSODRG",177,0)=" .I 'Y D  Q"
^XTMP("XPDT",7812,"RTN","PSODRG",178,0)=" ..I Y=0 D ^PSORXI Q"
^XTMP("XPDT",7812,"RTN","PSODRG",179,0)=" ..S PSORX(""DFLG"")=1"
^XTMP("XPDT",7812,"RTN","PSODRG",180,0)=" .D DUPINV^PSORXI"
^XTMP("XPDT",7812,"RTN","PSODRG",181,0)=" W $C(7),!,""There is no allergy assessment on file for this patient."""
^XTMP("XPDT",7812,"RTN","PSODRG",182,0)=" W !,""You will be prompted to intervene if you continue with this prescription"""
^XTMP("XPDT",7812,"RTN","PSODRG",183,0)=" S DIR(""A"")=""Do you want to Continue?: "",DIR(""B"")=""N"" D ^DIR"
^XTMP("XPDT",7812,"RTN","PSODRG",184,0)=" I 'Y D  Q"
^XTMP("XPDT",7812,"RTN","PSODRG",185,0)=" .I $D(PSONV) S PSZZQUIT=1 Q"
^XTMP("XPDT",7812,"RTN","PSODRG",186,0)=" .S PSORX(""DFLG"")=1"
^XTMP("XPDT",7812,"RTN","PSODRG",187,0)=" I $D(PSONV) S PSORX(""INTERVENE"")=0 D EN1^PSORXI(PSONV) Q"
^XTMP("XPDT",7812,"RTN","PSODRG",188,0)=" D ^PSORXI"
^XTMP("XPDT",7812,"RTN","PSODRG",189,0)=" Q"
^XTMP("XPDT",7812,"VER")="8.0^22.0"
^XTMP("XPDT",7813)="1"
^XTMP("XPDT",7813,"BLD",5827,0)="MHVZSQA 1.0^^0^3051207^n"
^XTMP("XPDT",7813,"BLD",5827,4,0)="^9.64PA^^"
^XTMP("XPDT",7813,"BLD",5827,"KRN",0)="^9.67PA^8989.52^19"
^XTMP("XPDT",7813,"BLD",5827,"KRN",.4,0)=".4"
^XTMP("XPDT",7813,"BLD",5827,"KRN",.401,0)=".401"
^XTMP("XPDT",7813,"BLD",5827,"KRN",.402,0)=".402"
^XTMP("XPDT",7813,"BLD",5827,"KRN",.403,0)=".403"
^XTMP("XPDT",7813,"BLD",5827,"KRN",.5,0)=".5"
^XTMP("XPDT",7813,"BLD",5827,"KRN",.84,0)=".84"
^XTMP("XPDT",7813,"BLD",5827,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7813,"BLD",5827,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,"NM",0)="^9.68A^5^5"
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,"NM",1,0)="ZZLETA^^0^B5267821"
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,"NM",2,0)="MHVZMENU^^0^B446775"
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,"NM",3,0)="MHVZCFG^^0^B59660127"
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,"NM",4,0)="MHVZCFG2^^0^B56402079"
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,"NM",5,0)="MHVZCFG3^^0^B60372381"
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,"NM","B","MHVZCFG",3)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,"NM","B","MHVZCFG2",4)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,"NM","B","MHVZCFG3",5)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,"NM","B","MHVZMENU",2)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",9.8,"NM","B","ZZLETA",1)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,0)="19"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",0)="^9.68A^20^16"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",1,0)="MHV RX EXTRACT^^0"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",2,0)="MHV RX MENU^^0"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",3,0)="MHV RX PROFILE^^0"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",4,0)="MHV RX REQUEST^^0"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",5,0)="MHV SQA MENU^^0"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",6,0)="MHV START BROKER^^0"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",8,0)="XMUSER^^4^"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",9,0)="PSO MANAGER^^4^"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",10,0)="DG LOAD PATIENT DATA^^4^"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",11,0)="PSO INTERNET REFILLS^^4^"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",13,0)="XPD MAIN^^4^"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",16,0)="MHV HL7^^0"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",17,0)="MPIF VISTA MENU^^4^"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",18,0)="HL MENU FILER LINK MGT^^4^"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",19,0)="HL VIEW TRANSMISSION LOG^^4^"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM",20,0)="DIUSER^^4^"
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","DG LOAD PATIENT DATA",10)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","DIUSER",20)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","HL MENU FILER LINK MGT",18)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","HL VIEW TRANSMISSION LOG",19)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","MHV HL7",16)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","MHV RX EXTRACT",1)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","MHV RX MENU",2)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","MHV RX PROFILE",3)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","MHV RX REQUEST",4)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","MHV SQA MENU",5)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","MHV START BROKER",6)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","MPIF VISTA MENU",17)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","PSO INTERNET REFILLS",11)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","PSO MANAGER",9)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","XMUSER",8)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19,"NM","B","XPD MAIN",13)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7813,"BLD",5827,"KRN",101,0)="101"
^XTMP("XPDT",7813,"BLD",5827,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7813,"BLD",5827,"KRN",771,0)="771"
^XTMP("XPDT",7813,"BLD",5827,"KRN",870,0)="870"
^XTMP("XPDT",7813,"BLD",5827,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7813,"BLD",5827,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7813,"BLD",5827,"KRN",8994,0)="8994"
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",.4,.4)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",.401,.401)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",.402,.402)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",.403,.403)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",.5,.5)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",.84,.84)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",19,19)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",101,101)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",771,771)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",870,870)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7813,"BLD",5827,"KRN","B",8994,8994)=""
^XTMP("XPDT",7813,"BLD",5827,"QUES",0)="^9.62^^"
^XTMP("XPDT",7813,"KRN",19,95,-1)="4^20"
^XTMP("XPDT",7813,"KRN",19,95,0)="DIUSER"
^XTMP("XPDT",7813,"KRN",19,101,-1)="4^8"
^XTMP("XPDT",7813,"KRN",19,101,0)="XMUSER"
^XTMP("XPDT",7813,"KRN",19,141,-1)="4^9"
^XTMP("XPDT",7813,"KRN",19,141,0)="PSO MANAGER"
^XTMP("XPDT",7813,"KRN",19,254,-1)="4^10"
^XTMP("XPDT",7813,"KRN",19,254,0)="DG LOAD PATIENT DATA"
^XTMP("XPDT",7813,"KRN",19,11542,-1)="4^13"
^XTMP("XPDT",7813,"KRN",19,11542,0)="XPD MAIN"
^XTMP("XPDT",7813,"KRN",19,13945,-1)="4^19"
^XTMP("XPDT",7813,"KRN",19,13945,0)="HL VIEW TRANSMISSION LOG"
^XTMP("XPDT",7813,"KRN",19,14213,-1)="4^17"
^XTMP("XPDT",7813,"KRN",19,14213,0)="MPIF VISTA MENU"
^XTMP("XPDT",7813,"KRN",19,14265,-1)="4^18"
^XTMP("XPDT",7813,"KRN",19,14265,0)="HL MENU FILER LINK MGT"
^XTMP("XPDT",7813,"KRN",19,15144,-1)="4^11"
^XTMP("XPDT",7813,"KRN",19,15144,0)="PSO INTERNET REFILLS"
^XTMP("XPDT",7813,"KRN",19,16029,-1)="0^5"
^XTMP("XPDT",7813,"KRN",19,16029,0)="MHV SQA MENU^MHV Tester options^^M^^^^^^^^My HealtheVet^y"
^XTMP("XPDT",7813,"KRN",19,16029,10,0)="^19.01IP^12^8"
^XTMP("XPDT",7813,"KRN",19,16029,10,2,0)="101^MAIL^1"
^XTMP("XPDT",7813,"KRN",19,16029,10,2,"^")="XMUSER"
^XTMP("XPDT",7813,"KRN",19,16029,10,6,0)="14213^MPI^7"
^XTMP("XPDT",7813,"KRN",19,16029,10,6,"^")="MPIF VISTA MENU"
^XTMP("XPDT",7813,"KRN",19,16029,10,7,0)="254^PAT^5"
^XTMP("XPDT",7813,"KRN",19,16029,10,7,"^")="DG LOAD PATIENT DATA"
^XTMP("XPDT",7813,"KRN",19,16029,10,8,0)="11542^XPD^4"
^XTMP("XPDT",7813,"KRN",19,16029,10,8,"^")="XPD MAIN"
^XTMP("XPDT",7813,"KRN",19,16029,10,9,0)="16038^HL7^3"
^XTMP("XPDT",7813,"KRN",19,16029,10,9,"^")="MHV HL7"
^XTMP("XPDT",7813,"KRN",19,16029,10,10,0)="16034^RX^9"
^XTMP("XPDT",7813,"KRN",19,16029,10,10,"^")="MHV RX MENU"
^XTMP("XPDT",7813,"KRN",19,16029,10,11,0)="16033^XWB^8"
^XTMP("XPDT",7813,"KRN",19,16029,10,11,"^")="MHV START BROKER"
^XTMP("XPDT",7813,"KRN",19,16029,10,12,0)="95^FM^2"
^XTMP("XPDT",7813,"KRN",19,16029,10,12,"^")="DIUSER"
^XTMP("XPDT",7813,"KRN",19,16029,99)="60239,53442"
^XTMP("XPDT",7813,"KRN",19,16029,"U")="MHV TESTER OPTIONS"
^XTMP("XPDT",7813,"KRN",19,16030,-1)="0^1"
^XTMP("XPDT",7813,"KRN",19,16030,0)="MHV RX EXTRACT^Prescription Extract^^R^^^^^^^^My HealtheVet^y"
^XTMP("XPDT",7813,"KRN",19,16030,25)="XZZL^MHVZMENU"
^XTMP("XPDT",7813,"KRN",19,16030,"U")="PRESCRIPTION EXTRACT"
^XTMP("XPDT",7813,"KRN",19,16031,-1)="0^3"
^XTMP("XPDT",7813,"KRN",19,16031,0)="MHV RX PROFILE^Active Profile^^R^^^^^^^^My HealtheVet^y"
^XTMP("XPDT",7813,"KRN",19,16031,25)="PZZL^MHVZMENU"
^XTMP("XPDT",7813,"KRN",19,16031,"U")="ACTIVE PROFILE"
^XTMP("XPDT",7813,"KRN",19,16032,-1)="0^4"
^XTMP("XPDT",7813,"KRN",19,16032,0)="MHV RX REQUEST^Refill Request^^R^^^^^^^^My HealtheVet^y"
^XTMP("XPDT",7813,"KRN",19,16032,25)="RZZL^MHVZMENU"
^XTMP("XPDT",7813,"KRN",19,16032,"U")="REFILL REQUEST"
^XTMP("XPDT",7813,"KRN",19,16033,-1)="0^6"
^XTMP("XPDT",7813,"KRN",19,16033,0)="MHV START BROKER^MHV START BROKER^^R^^^^^^^^My HealtheVet^y"
^XTMP("XPDT",7813,"KRN",19,16033,25)="XWB^MHVZMENU"
^XTMP("XPDT",7813,"KRN",19,16033,"U")="MHV START BROKER"
^XTMP("XPDT",7813,"KRN",19,16034,-1)="0^2"
^XTMP("XPDT",7813,"KRN",19,16034,0)="MHV RX MENU^MHV Rx Menu^^M^^^^^^^^My HealtheVet^y"
^XTMP("XPDT",7813,"KRN",19,16034,10,0)="^19.01IP^5^5"
^XTMP("XPDT",7813,"KRN",19,16034,10,1,0)="141^RX"
^XTMP("XPDT",7813,"KRN",19,16034,10,1,"^")="PSO MANAGER"
^XTMP("XPDT",7813,"KRN",19,16034,10,2,0)="15144^PSO"
^XTMP("XPDT",7813,"KRN",19,16034,10,2,"^")="PSO INTERNET REFILLS"
^XTMP("XPDT",7813,"KRN",19,16034,10,3,0)="16030"
^XTMP("XPDT",7813,"KRN",19,16034,10,3,"^")="MHV RX EXTRACT"
^XTMP("XPDT",7813,"KRN",19,16034,10,4,0)="16031"
^XTMP("XPDT",7813,"KRN",19,16034,10,4,"^")="MHV RX PROFILE"
^XTMP("XPDT",7813,"KRN",19,16034,10,5,0)="16032"
^XTMP("XPDT",7813,"KRN",19,16034,10,5,"^")="MHV RX REQUEST"
^XTMP("XPDT",7813,"KRN",19,16034,99)="60239,59619"
^XTMP("XPDT",7813,"KRN",19,16034,"U")="MHV RX MENU"
^XTMP("XPDT",7813,"KRN",19,16038,-1)="0^16"
^XTMP("XPDT",7813,"KRN",19,16038,0)="MHV HL7^MHV HL7 Menu^^M^^^^^^^^^y"
^XTMP("XPDT",7813,"KRN",19,16038,10,0)="^19.01IP^2^2"
^XTMP("XPDT",7813,"KRN",19,16038,10,1,0)="14265^FI^1"
^XTMP("XPDT",7813,"KRN",19,16038,10,1,"^")="HL MENU FILER LINK MGT"
^XTMP("XPDT",7813,"KRN",19,16038,10,2,0)="13945^M^2"
^XTMP("XPDT",7813,"KRN",19,16038,10,2,"^")="HL VIEW TRANSMISSION LOG"
^XTMP("XPDT",7813,"KRN",19,16038,99)="60143,50447"
^XTMP("XPDT",7813,"KRN",19,16038,99.1)="60165,56220"
^XTMP("XPDT",7813,"KRN",19,16038,"U")="MHV HL7 MENU"
^XTMP("XPDT",7813,"MBREQ")="0"
^XTMP("XPDT",7813,"ORD",18,19)="19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA"
^XTMP("XPDT",7813,"ORD",18,19,0)="OPTION"
^XTMP("XPDT",7813,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7813,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7813,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7813,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7813,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7813,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7813,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7813,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7813,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7813,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7813,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7813,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7813,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7813,"QUES","XPI1","B")="YES"
^XTMP("XPDT",7813,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7813,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7813,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7813,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7813,"QUES","XPM1","B")=""
^XTMP("XPDT",7813,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7813,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7813,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7813,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7813,"QUES","XPO1","B")="YES"
^XTMP("XPDT",7813,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7813,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7813,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7813,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7813,"QUES","XPZ1","B")="YES"
^XTMP("XPDT",7813,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7813,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7813,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7813,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7813,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7813,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7813,"RTN")="5"
^XTMP("XPDT",7813,"RTN","MHVZCFG")="0^3^B59660127"
^XTMP("XPDT",7813,"RTN","MHVZCFG",1,0)="MHVZCFG ;;WAS/GPM - Environment Configuration Utility ; 10/31/05 8:38am"
^XTMP("XPDT",7813,"RTN","MHVZCFG",2,0)=" ;;1.0;My HealtheVet Utilities;;Jul 04, 2005"
^XTMP("XPDT",7813,"RTN","MHVZCFG",3,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",4,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",5,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",6,0)="SHOW ; Display the current configuration of this account"
^XTMP("XPDT",7813,"RTN","MHVZCFG",7,0)=" N CFG"
^XTMP("XPDT",7813,"RTN","MHVZCFG",8,0)=" D GET(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",9,0)=" D DISPLAY(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",10,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",11,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",12,0)="TEST ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",13,0)=" N CFG,NODE"
^XTMP("XPDT",7813,"RTN","MHVZCFG",14,0)=" D GET(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",15,0)=" S NODE=""CFG(0)"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",16,0)=" F  S NODE=$Q(@NODE) Q:NODE=""""  Q:NODE]""CFG0""  D"
^XTMP("XPDT",7813,"RTN","MHVZCFG",17,0)=" . W !,NODE,"": "",@NODE"
^XTMP("XPDT",7813,"RTN","MHVZCFG",18,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",19,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",20,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",21,0)="GET(CFG) ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",22,0)=" D XUPARMG(.CFG),HLPARMG(.CFG),DOMAING(.CFG),HLLINKG(.CFG),STATIONG(.CFG),DIVG(.CFG),ST389G(.CFG),MPIFG(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",23,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",24,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",25,0)="DISPLAY(CFG) ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",26,0)=" N S,D,L"
^XTMP("XPDT",7813,"RTN","MHVZCFG",27,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",28,0)=" W !!,""KERNEL SITE PARAMETERS"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",29,0)=" D XUPARMF(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",30,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",31,0)=" W !!,""HL7 SITE PARAMETERS"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",32,0)=" D HLPARMF(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",33,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",34,0)=" W !!,""MEDICAL CENTER DIVISION"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",35,0)=" I $D(CFG(""DIVISION"")) D DIVF(CFG(""DIVISION""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",36,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",37,0)=" W !!,""STATION NUMBER (TIME SENSITIVE)"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",38,0)=" I $D(CFG(""ST389.9"")) D ST389F(CFG(""ST389.9""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",39,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",40,0)=" W !!,""MASTER PATIENT INDEX (LOCAL NUMBERS)"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",41,0)=" I $D(CFG(""MPI LOCAL"")) D MPIFF(CFG(""MPI LOCAL""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",42,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",43,0)=" W !!,""INSTITUTION"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",44,0)=" S S="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",45,0)=" F  S S=$O(CFG(""STATION"",S)) Q:S=""""  D STATIONF(CFG(""STATION"",S))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",46,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",47,0)=" W !!,""DOMAIN"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",48,0)=" S D="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",49,0)=" F  S D=$O(CFG(""DOMAIN"",D)) Q:D=""""  D DOMAINF(CFG(""DOMAIN"",D))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",50,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",51,0)=" W !!,""HL7 LOGICAL LINKS"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",52,0)=" S L="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",53,0)=" F  S L=$O(CFG(""LINK"",L)) Q:L=""""  D HLLINKF(CFG(""LINK"",L))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",54,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",55,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",56,0)="XUPARMG(CFG) ; Get current Kernel parameters"
^XTMP("XPDT",7813,"RTN","MHVZCFG",57,0)=" N P"
^XTMP("XPDT",7813,"RTN","MHVZCFG",58,0)=" S P=$$PROD^XUPROD"
^XTMP("XPDT",7813,"RTN","MHVZCFG",59,0)=" S CFG(""XU PRODUCTION"")=P_""^""_$S(P:""PRODUCTION"",1:""TEST"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG",60,0)=" S CFG(""XU DOMAIN"")=$$DOMAIN($P($G(^XTV(8989.3,1,0)),""^""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",61,0)=" S CFG(""XU STATION"")=$$STATION($P($G(^XTV(8989.3,1,""XUS"")),""^"",17))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",62,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",63,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",64,0)="XUPARMF(CFG) ; Formatted display of current Kernel parameters"
^XTMP("XPDT",7813,"RTN","MHVZCFG",65,0)=" D FMT(""Account Type"",$P($G(CFG(""XU PRODUCTION"")),""^"",2))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",66,0)=" D FMT(""Institution"",$P($G(CFG(""XU STATION"")),""^"",6)_"" ""_$P($G(CFG(""XU STATION"")),""^"",2))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",67,0)=" D FMT(""Domain"",$P($G(CFG(""XU DOMAIN"")),""^"",2))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",68,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",69,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",70,0)="HLPARMG(CFG) ; Get HL7 site parameters"
^XTMP("XPDT",7813,"RTN","MHVZCFG",71,0)=" N P"
^XTMP("XPDT",7813,"RTN","MHVZCFG",72,0)=" S P=$$PARAM^HLCS2"
^XTMP("XPDT",7813,"RTN","MHVZCFG",73,0)=" S CFG(""HL DOMAIN"")=$$DOMAIN($P(P,""^"",1))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",74,0)=" S CFG(""HL STATION"")=$$STATION($P(P,""^"",4))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",75,0)=" S CFG(""HL PROCESSING ID"")=$P(P,""^"",3)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",76,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",77,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",78,0)="HLPARMF(CFG) ; Formatted Display of HL7 site parameters"
^XTMP("XPDT",7813,"RTN","MHVZCFG",79,0)=" D FMT(""Processing ID"",$G(CFG(""HL PROCESSING ID"")))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",80,0)=" D FMT(""Institution"",$P($G(CFG(""HL STATION"")),""^"",6)_"" ""_$P($G(CFG(""HL STATION"")),""^"",2))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",81,0)=" D FMT(""Domain"",$P($G(CFG(""HL DOMAIN"")),""^"",2))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",82,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",83,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",84,0)="DOMAING(CFG) ; Get Domain information"
^XTMP("XPDT",7813,"RTN","MHVZCFG",85,0)=" N S,D,IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG",86,0)=" I '$D(CFG(""XU STATION""))!'$D(CFG(""XU DOMAIN"")) D XUPARMG(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",87,0)=" I '$D(CFG(""HL STATION""))!'$D(CFG(""HL DOMAIN"")) D HLPARMG(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",88,0)=" S CFG(""DOMAIN"",""TLMPI.FO-BAYPINES.MED.VA.GOV"")="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",89,0)=" S CFG(""DOMAIN"",""TLMPIDC.FO-BAYPINES.MED.VA.GOV"")="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",90,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",91,0)=" S D="""" F  S D=$O(^DIC(4.2,""B"",D)) Q:D=""""  D"
^XTMP("XPDT",7813,"RTN","MHVZCFG",92,0)=" . S IEN=$O(^DIC(4.2,""B"",D,0)) Q:'IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG",93,0)=" . S S=$$DOMAIN(IEN)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",94,0)=" . I $D(CFG(""DOMAIN"",D)) S CFG(""DOMAIN"",D)=S"
^XTMP("XPDT",7813,"RTN","MHVZCFG",95,0)=" . I IEN=+CFG(""XU DOMAIN"") S CFG(""DOMAIN"",D)=S"
^XTMP("XPDT",7813,"RTN","MHVZCFG",96,0)=" . I IEN=+CFG(""HL DOMAIN"") S CFG(""DOMAIN"",D)=S"
^XTMP("XPDT",7813,"RTN","MHVZCFG",97,0)=" . I $P(S,""^"",3)=$P(CFG(""XU STATION""),""^"",6) S CFG(""DOMAIN"",D)=S"
^XTMP("XPDT",7813,"RTN","MHVZCFG",98,0)=" . I $P(S,""^"",3)=$P(CFG(""HL STATION""),""^"",6) S CFG(""DOMAIN"",D)=S"
^XTMP("XPDT",7813,"RTN","MHVZCFG",99,0)=" . I $E($P(S,""^"",3),1,5)=""200MH"" S CFG(""DOMAIN"",D)=S"
^XTMP("XPDT",7813,"RTN","MHVZCFG",100,0)=" . I D[""MHV."" S CFG(""DOMAIN"",D)=S"
^XTMP("XPDT",7813,"RTN","MHVZCFG",101,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",102,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",103,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",104,0)="DOMAINF(D) ; Formatted display one domain"
^XTMP("XPDT",7813,"RTN","MHVZCFG",105,0)=" D FMT(""Name"",$P(D,""^"",2))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",106,0)=" D FMT(""Station"",$P(D,""^"",3))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",107,0)=" W !,?15,""----------------------------------------"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",108,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",109,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",110,0)="DOMAIN(P42) ; Return domain information"
^XTMP("XPDT",7813,"RTN","MHVZCFG",111,0)=" Q:'P42 """""
^XTMP("XPDT",7813,"RTN","MHVZCFG",112,0)=" Q P42_""^""_$P($G(^DIC(4.2,P42,0)),""^"")_""^""_$P($G(^DIC(4.2,P42,0)),""^"",13)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",113,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",114,0)="STATIONG(CFG) ; Get Institution information"
^XTMP("XPDT",7813,"RTN","MHVZCFG",115,0)=" N I,IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG",116,0)=" I '$D(CFG(""XU STATION"")) D XUPARMG(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",117,0)=" I '$D(CFG(""HL STATION"")) D HLPARMG(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",118,0)=" S CFG(""STATION"",""200M"")="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",119,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",120,0)=" S I="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",121,0)=" F  S I=$O(^DIC(4,""D"",I)) Q:I=""""  D"
^XTMP("XPDT",7813,"RTN","MHVZCFG",122,0)=" . S IEN=$O(^DIC(4,""D"",I,0)) Q:'IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG",123,0)=" . I $D(CFG(""STATION"",I)) S CFG(""STATION"",I)=$$STATION(IEN)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",124,0)=" . I $E(I,1,5)=""200MH"" S CFG(""STATION"",I)=$$STATION(IEN)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",125,0)=" . I IEN=+CFG(""XU STATION"") S CFG(""STATION"",I)=$$STATION(IEN)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",126,0)=" . I IEN=+CFG(""HL STATION"") S CFG(""STATION"",I)=$$STATION(IEN)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",127,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",128,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",129,0)="STATIONF(S) ; Formatted display one institution"
^XTMP("XPDT",7813,"RTN","MHVZCFG",130,0)=" D FMT(""Name"",$P(S,""^"",2))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",131,0)=" D FMT(""Short Name"",$P(S,""^"",3))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",132,0)=" D FMT(""Facility Type"",$P(S,""^"",4))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",133,0)=" D FMT(""Station Number"",$P(S,""^"",6))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",134,0)=" D FMT(""Status"",$S($P(S,""^"",7)=""N"":""National"",$P(S,""^"",7)=""L"":""Local"",1:""""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",135,0)=" W !,?10,""------------------------------"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",136,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",137,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",138,0)="STATION(P4) ; Return institution information"
^XTMP("XPDT",7813,"RTN","MHVZCFG",139,0)=" Q:'P4 """""
^XTMP("XPDT",7813,"RTN","MHVZCFG",140,0)=" N S0,S3,S6,S99"
^XTMP("XPDT",7813,"RTN","MHVZCFG",141,0)=" S S0=$G(^DIC(4,P4,0))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",142,0)=" S S3=$P($G(^DIC(4,P4,3)),""^"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG",143,0)=" I S3>0 S S3=$P($G(^DIC(4.1,S3,0)),""^"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG",144,0)=" E  S S3="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",145,0)=" S S6=$P($G(^DIC(4,P4,6)),""^"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG",146,0)=" S S99=$P($G(^DIC(4,P4,99)),""^"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG",147,0)=" Q P4_""^""_$P(S0,""^"",1)_""^""_$P(S0,""^"",5)_""^""_S3_""^""_S6_""^""_S99_""^""_$P(S0,""^"",11)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",148,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",149,0)="DIVG(CFG) ; Get Division information"
^XTMP("XPDT",7813,"RTN","MHVZCFG",150,0)=" N IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG",151,0)=" I '$D(CFG(""XU STATION"")) D XUPARMG(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",152,0)=" S CFG(""DIVISION"")="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",153,0)=" Q:$P(CFG(""XU STATION""),""^"",6)="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",154,0)=" S IEN=$O(^DG(40.8,""C"",$P(CFG(""XU STATION""),""^"",6),0))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",155,0)=" I IEN="""" S IEN=$O(^DG(40.8,0))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",156,0)=" S CFG(""DIVISION"")=$$DIVISION(IEN)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",157,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",158,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",159,0)="DIVF(D) ; Formatted display one division"
^XTMP("XPDT",7813,"RTN","MHVZCFG",160,0)=" D FMT(""Name"",$P(D,""^"",3))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",161,0)=" D FMT(""Institution file pointer"",$P($$STATION($P(D,""^"",2)),""^"",2))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",162,0)=" D FMT(""Facility Number"",$P(D,""^"",4))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",163,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",164,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",165,0)="DIVISION(P408) ; Return division information"
^XTMP("XPDT",7813,"RTN","MHVZCFG",166,0)=" Q:'P408 """""
^XTMP("XPDT",7813,"RTN","MHVZCFG",167,0)=" Q P408_""^""_$P($G(^DG(40.8,P408,0)),""^"",7)_""^""_$P($G(^DG(40.8,P408,0)),""^"",1,2)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",168,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",169,0)="MPIFG(CFG) ; Get Master Patient Index (local) information"
^XTMP("XPDT",7813,"RTN","MHVZCFG",170,0)=" N IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG",171,0)=" I '$D(CFG(""XU STATION"")) D XUPARMG(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",172,0)=" S CFG(""MPI LOCAL"")="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",173,0)=" Q:$P(CFG(""XU STATION""),""^"",6)="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",174,0)=" S IEN=$O(^MPIF(984.1,""B"",$P(CFG(""XU STATION""),""^"",6),0)) Q:'IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG",175,0)=" S CFG(""MPI LOCAL"")=IEN_""^""_$P($G(^MPIF(984.1,IEN,0)),""^"",1,2)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",176,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",177,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",178,0)="MPIFF(D) ; Formatted display one Master Patient Index (local)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",179,0)=" D FMT(""Site ID Number"",$P(D,""^"",2))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",180,0)=" D FMT(""Last Number Used"",$P(D,""^"",3))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",181,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",182,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",183,0)="ST389G(CFG) ; Get Station Number (Time sensitive) information"
^XTMP("XPDT",7813,"RTN","MHVZCFG",184,0)=" N IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG",185,0)=" I '$D(CFG(""XU STATION"")) D XUPARMG(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",186,0)=" S CFG(""ST389.9"")="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",187,0)=" Q:$P(CFG(""XU STATION""),""^"",6)="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",188,0)=" S IEN=$O(^VA(389.9,""D"",$P(CFG(""XU STATION""),""^"",6),0))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",189,0)=" I 'IEN S IEN=$O(^VA(389.9,0))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",190,0)=" S CFG(""ST389.9"")=IEN_""^""_$G(^VA(389.9,IEN,0))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",191,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",192,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",193,0)="ST389F(S) ; Formatted display one Station Number (Time sensitive)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",194,0)=" D FMT(""Medical Center Division"",$P($$DIVISION($P(S,""^"",4)),""^"",3))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",195,0)=" D FMT(""Effective Date"",$$FMTE^XLFDT($P(S,""^"",3)))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",196,0)=" D FMT(""Station Number"",$P(S,""^"",5))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",197,0)=" D FMT(""Is Primary Division"",$S($P(S,""^"",6):""YES"",1:""NO""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",198,0)=" D FMT(""Inactive"",$S($P(S,""^"",7):""YES - INACTIVE"",1:""NO - ACTIVE""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",199,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",200,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",201,0)="HLLINKG(CFG) ; Get HL7 Logic Link information"
^XTMP("XPDT",7813,"RTN","MHVZCFG",202,0)=" N I,IEN,L"
^XTMP("XPDT",7813,"RTN","MHVZCFG",203,0)=" I '$D(CFG(""HL STATION""))!'$D(CFG(""HL DOMAIN"")) D HLPARMG(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",204,0)=" S CFG(""LINK"",""MPIVA"")="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",205,0)=" S CFG(""LINK"",""MPIVA DIR"")="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",206,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",207,0)=" S I="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",208,0)=" F  S I=$O(CFG(""LINK"",I)) Q:I=""""  D"
^XTMP("XPDT",7813,"RTN","MHVZCFG",209,0)=" . S IEN=$O(^HLCS(870,""B"",I,0)) Q:'IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG",210,0)=" . S L=$$LINK(IEN)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",211,0)=" . S CFG(""LINK"",$P(L,""^"",2))=L"
^XTMP("XPDT",7813,"RTN","MHVZCFG",212,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",213,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",214,0)=" S I="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG",215,0)=" F  S I=$O(CFG(""DOMAIN"",I)) Q:I=""""  D"
^XTMP("XPDT",7813,"RTN","MHVZCFG",216,0)=" . S IEN=$O(^HLCS(870,""D"",+CFG(""DOMAIN"",I),0)) Q:'IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG",217,0)=" . S L=$$LINK(IEN)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",218,0)=" . S CFG(""LINK"",$P(L,""^"",2))=L"
^XTMP("XPDT",7813,"RTN","MHVZCFG",219,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",220,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",221,0)=" S I=+CFG(""HL STATION"") D"
^XTMP("XPDT",7813,"RTN","MHVZCFG",222,0)=" . S IEN=$O(^HLCS(870,""C"",I,0)) Q:'IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG",223,0)=" . S L=$$LINK(IEN)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",224,0)=" . S CFG(""LINK"",$P(L,""^"",2))=L"
^XTMP("XPDT",7813,"RTN","MHVZCFG",225,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",226,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",227,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",228,0)="HLLINKF(L) ; Formatted display one logical link"
^XTMP("XPDT",7813,"RTN","MHVZCFG",229,0)=" I L S L=$$HLLINKT(L)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",230,0)=" D FMT(""Node"",$P(L,""^"",2))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",231,0)=" D FMT(""Institution"",$P(L,""^"",3))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",232,0)=" D FMT(""Autostart"",$P(L,""^"",4))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",233,0)=" D FMT(""Domain"",$P(L,""^"",5))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",234,0)=" D FMT(""TCP/IP Address"",$P(L,""^"",6))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",235,0)=" D FMT(""TCP/IP Port"",$P(L,""^"",7))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",236,0)=" D FMT(""TCP/IP Service Type"",$P(L,""^"",8))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",237,0)=" W !,?5,""--------------------------------------------------"""
^XTMP("XPDT",7813,"RTN","MHVZCFG",238,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",239,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",240,0)="HLLINKT(L) ; Translate to external"
^XTMP("XPDT",7813,"RTN","MHVZCFG",241,0)=" S $P(L,""^"",3)=$P($$STATION($P(L,""^"",3)),""^"",2)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",242,0)=" S $P(L,""^"",4)=$S($P(L,""^"",4):""Enabled"",1:""Disabled"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG",243,0)=" S $P(L,""^"",5)=$P($$DOMAIN($P(L,""^"",5)),""^"",2)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",244,0)=" S $P(L,""^"",8)=$S($P(L,""^"",8)=""C"":""CLIENT (SENDER)"",$P(L,""^"",8)=""M"":""MULTI LISTENER"",$P(L,""^"",8)=""S"":""SINGLE LISTENER"",1:"""")"
^XTMP("XPDT",7813,"RTN","MHVZCFG",245,0)=" Q L"
^XTMP("XPDT",7813,"RTN","MHVZCFG",246,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",247,0)="LINK(P870) ; Return logical link information"
^XTMP("XPDT",7813,"RTN","MHVZCFG",248,0)=" Q:'P870 """""
^XTMP("XPDT",7813,"RTN","MHVZCFG",249,0)=" N L0,L400"
^XTMP("XPDT",7813,"RTN","MHVZCFG",250,0)=" S L0=$G(^HLCS(870,P870,0))"
^XTMP("XPDT",7813,"RTN","MHVZCFG",251,0)=" S L400=$P($G(^HLCS(870,P870,400)),""^"",1,3)"
^XTMP("XPDT",7813,"RTN","MHVZCFG",252,0)=" Q P870_""^""_$P(L0,""^"",1,2)_""^""_$P(L0,""^"",6,7)_""^""_L400"
^XTMP("XPDT",7813,"RTN","MHVZCFG",253,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG",254,0)="FMT(TAG,VAL) ; Write a Formatted line"
^XTMP("XPDT",7813,"RTN","MHVZCFG",255,0)=" N POS"
^XTMP("XPDT",7813,"RTN","MHVZCFG",256,0)=" S POS=25"
^XTMP("XPDT",7813,"RTN","MHVZCFG",257,0)=" W !,$J($E(TAG,1,POS),POS),"": "",VAL"
^XTMP("XPDT",7813,"RTN","MHVZCFG",258,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG",259,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2")="0^4^B56402079"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",1,0)="MHVZCFG2 ;;WAS/GPM - Environment Configuration Utility ; 10/31/05 8:54am"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",2,0)=" ;;1.0;My HealtheVet Utilities;;Jul 04, 2005"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",3,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",4,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",5,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",6,0)="SET(UPDATE) ; SET NEW CONFIGURATION"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",7,0)=" N ERR,I,IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",8,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",9,0)=" I '+UPDATE(""STATION"") D  Q:'IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",10,0)=" . W !!,""Creating new INSTITUTION file entry for this system"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",11,0)=" . D STATIONF^MHVZCFG(UPDATE(""STATION""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",12,0)=" . S IEN=$$STATIONS(UPDATE(""STATION""),.ERR)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",13,0)=" . I 'IEN W !,""...Failed - ""_ERR Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",14,0)=" . W !,""...Success"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",15,0)=" . S $P(UPDATE(""HL STATION""),""^"")=IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",16,0)=" . S $P(UPDATE(""XU STATION""),""^"")=IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",17,0)=" . D DEFDIV^MHVZCFG3(.UPDATE,.UPDATE)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",18,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",19,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",20,0)=" W !!,""Updating KERNEL SYSTEM PARAMETERS"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",21,0)=" D XUPARMF^MHVZCFG(.UPDATE)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",22,0)=" I '$$XUPARMS(UPDATE(""XU DOMAIN""),UPDATE(""XU STATION""),.ERR) W !,""...Failed - ""_ERR Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",23,0)=" E  W !,""...Success"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",24,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",25,0)=" W !!,""Updating HL7 SITE PARAMETERS"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",26,0)=" D HLPARMF^MHVZCFG(.UPDATE)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",27,0)=" I '$$HLPARMS(UPDATE(""HL DOMAIN""),UPDATE(""HL STATION""),.ERR) W !,""...Failed - ""_ERR Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",28,0)=" E  W !,""...Success"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",29,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",30,0)=" W !!,""Updating MEDICAL CENTER DIVISION"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",31,0)=" D DIVF^MHVZCFG(UPDATE(""DIVISION""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",32,0)=" I '$$DIVS(UPDATE(""DIVISION""),.ERR) W !,""...Failed - ""_ERR Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",33,0)=" E  W !,""...Success"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",34,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",35,0)=" W !!,""Updating STATION NUMBER (TIME SENSITIVE)"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",36,0)=" D ST389F^MHVZCFG(UPDATE(""ST389.9""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",37,0)=" I '$$ST389S(UPDATE(""ST389.9""),.ERR) W !,""...Failed - ""_ERR Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",38,0)=" E  W !,""...Success"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",39,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",40,0)=" W !!,""Updating MASTER PATIENT INDEX (LOCAL NUMBERS)"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",41,0)=" I '$$MPIFS(UPDATE(""XU STATION""),.ERR) W !,""...Failed - ""_ERR Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",42,0)=" E  W !,""...Success"" W:ERR'="""" "" - ""_ERR"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",43,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",44,0)=" I $D(UPDATE(""STATION""))>1 D"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",45,0)=" . W !!,""Creating/Updating INSTITUTION file with external systems"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",46,0)=" . S I="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",47,0)=" . F  S I=$O(UPDATE(""STATION"",I)) Q:I=""""  D"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",48,0)=" .. W ! D STATIONF^MHVZCFG(UPDATE(""STATION"",I))"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",49,0)=" .. S IEN=$$STATIONS(UPDATE(""STATION"",I),.ERR)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",50,0)=" .. I 'IEN W !,""...Failed - ""_ERR Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",51,0)=" .. S $P(UPDATE(""STATION"",I),""^"")=IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",52,0)=" .. D UPDLINK(UPDATE(""STATION"",I),"""",.UPDATE)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",53,0)=" .. W !,""...Success"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",54,0)=" .. Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",55,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",56,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",57,0)=" I $D(UPDATE(""DOMAIN""))>1 D"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",58,0)=" . W !!,""Creating/Updating DOMAIN file with external systems"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",59,0)=" . S I="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",60,0)=" . F  S I=$O(UPDATE(""DOMAIN"",I)) Q:I=""""  D"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",61,0)=" .. W ! D DOMAINF^MHVZCFG(UPDATE(""DOMAIN"",I))"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",62,0)=" .. S IEN=$$DOMAINS(UPDATE(""DOMAIN"",I),.ERR)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",63,0)=" .. I 'IEN W !,""...Failed - ""_ERR Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",64,0)=" .. S $P(UPDATE(""DOMAIN"",I),""^"")=IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",65,0)=" .. D UPDLINK("""",UPDATE(""DOMAIN"",I),.UPDATE)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",66,0)=" .. W !,""...Success"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",67,0)=" .. Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",68,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",69,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",70,0)=" I $D(UPDATE(""LINK""))>1 D"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",71,0)=" . W !!,""Creating/Updating HL LOGICAL LINKS"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",72,0)=" . S I="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",73,0)=" . F  S I=$O(UPDATE(""LINK"",I)) Q:I=""""  D"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",74,0)=" .. W ! D HLLINKF^MHVZCFG(UPDATE(""LINK"",I))"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",75,0)=" .. S IEN=$$HLLINKS(UPDATE(""LINK"",I),.ERR)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",76,0)=" .. I 'IEN W !,""...Failed - ""_ERR Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",77,0)=" .. W !,""...Success"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",78,0)=" .. Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",79,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",80,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",81,0)=" ;     add system views at some time"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",82,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",83,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",84,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",85,0)="XUPARMS(D,S,ERR) ; Set Kernel Parameters"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",86,0)=" N P89893,DOMAIN,STATION,FDA"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",87,0)=" K ERR"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",88,0)=" S P89893=""1,"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",89,0)=" S DOMAIN=+D I 'DOMAIN S ERR=""Missing Domain file pointer"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",90,0)=" S STATION=+S I 'STATION S ERR=""Missing Institurion file pointer"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",91,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",92,0)=" S FDA(8989.3,P89893,.01)=DOMAIN"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",93,0)=" S FDA(8989.3,P89893,217)=STATION"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",94,0)=" D UPDATE^DIE("""",""FDA"","""",""ERR"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",95,0)=" I $D(ERR(""DIERR"")) S ERR=$G(ERR(""DIERR"",1,""TEXT"",1)) Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",96,0)=" Q 1"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",97,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",98,0)="HLPARMS(D,S,ERR) ; Set HL7 Site Parameters"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",99,0)=" N P8693,DOMAIN,STATION,FDA"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",100,0)=" K ERR"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",101,0)=" S P8693=""1,"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",102,0)=" S DOMAIN=+D I 'DOMAIN S ERR=""Missing Domain file pointer"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",103,0)=" S STATION=+S I 'STATION S ERR=""Missing Institurion file pointer"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",104,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",105,0)=" S FDA(869.3,P8693,.02)=DOMAIN"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",106,0)=" S FDA(869.3,P8693,.04)=STATION"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",107,0)=" D UPDATE^DIE("""",""FDA"","""",""ERR"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",108,0)=" I $D(ERR(""DIERR"")) S ERR=$G(ERR(""DIERR"",1,""TEXT"",1)) Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",109,0)=" Q 1"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",110,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",111,0)="DIVS(D,ERR) ; Set Medical Center Division"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",112,0)=" N P408,P4,NAME,STATION,FDA"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",113,0)=" K ERR"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",114,0)=" S P408=$P(D,""^"",1)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",115,0)=" I 'P408 S ERR=""Missing Medical Center Division File Pointer"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",116,0)=" S P408=P408_"","""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",117,0)=" S P4=$P(D,""^"",2) I 'P4 S ERR=""Missing Institution File Pointer"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",118,0)=" S NAME=$P(D,""^"",3) I NAME="""" S ERR=""Medical Center Division Name"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",119,0)=" S STATION=$P(D,""^"",4) I STATION="""" S ERR=""Missing Station Number"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",120,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",121,0)=" S FDA(40.8,P408,.01)=NAME"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",122,0)=" S FDA(40.8,P408,.07)=P4"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",123,0)=" S FDA(40.8,P408,1)=STATION"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",124,0)=" D UPDATE^DIE("""",""FDA"","""",""ERR"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",125,0)=" I $D(ERR(""DIERR"")) S ERR=$G(ERR(""DIERR"",1,""TEXT"",1)) Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",126,0)=" Q 1"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",127,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",128,0)="ST389S(S,ERR) ; Set Station Number Time Sensitive"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",129,0)=" N P3899,PRIMARY,STATION,FDA"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",130,0)=" K ERR"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",131,0)=" S P3899=+S"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",132,0)=" I 'P3899 S ERR=""Missing Station Number (Time Sensitive) File Pointer"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",133,0)=" S P3899=P3899_"","""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",134,0)=" S STATION=$P(S,""^"",5) I STATION="""" S ERR=""Missing Station Number"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",135,0)=" S PRIMARY=""YES"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",136,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",137,0)=" S FDA(389.9,P3899,.04)=STATION"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",138,0)=" ;S FDA(389.9,P3899,.05)=PRIMARY"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",139,0)=" D UPDATE^DIE(""E"",""FDA"","""",""ERR"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",140,0)=" I $D(ERR(""DIERR"")) S ERR=$G(ERR(""DIERR"",1,""TEXT"",1)) Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",141,0)=" Q 1"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",142,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",143,0)="MPIFS(S,ERR) ; Set MPI LOCAL NUMBERS"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",144,0)=" N STATION,FDA"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",145,0)=" K ERR"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",146,0)=" S ERR="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",147,0)=" S STATION=$P(S,""^"",6) I STATION'=+STATION S ERR=""Non Numeric Station Number"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",148,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",149,0)=" I $O(^MPIF(984.1,STATION,0)) S ERR=""Already defined"" Q 1"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",150,0)=" S FDA(984.1,""+1,"",.01)=STATION"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",151,0)=" S FDA(984.1,""+1,"",1)=0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",152,0)=" D UPDATE^DIE(""E"",""FDA"","""",""ERR"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",153,0)=" I $D(ERR(""DIERR"")) S ERR=$G(ERR(""DIERR"",1,""TEXT"",1)) Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",154,0)=" Q 1"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",155,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",156,0)="DOMAINS(D,ERR) ; Set Domain entries"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",157,0)=" N P42,NAME,FLAG,NUMBER,FDA,IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",158,0)=" K ERR"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",159,0)=" S P42=$P(D,""^"",1)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",160,0)=" I 'P42 S P42=$O(^DIC(4.2,""B"",$P(D,""^"",2),0))"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",161,0)=" I 'P42 S P42=""+1""    ;New entry"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",162,0)=" S P42=P42_"","""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",163,0)=" S NAME=$P(D,""^"",2) I NAME="""" S ERR=""Mising Domain Name"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",164,0)=" S NUMBER=$P(D,""^"",3)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",165,0)=" S FLAG=""S"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",166,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",167,0)=" S FDA(4.2,P42,.01)=NAME"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",168,0)=" S FDA(4.2,P42,1)=FLAG"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",169,0)=" S FDA(4.2,P42,5.5)=NUMBER"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",170,0)=" D UPDATE^DIE(""E"",""FDA"",""IEN"",""ERR"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",171,0)=" I $D(ERR(""DIERR"")) S ERR=$G(ERR(""DIERR"",1,""TEXT"",1)) Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",172,0)=" Q $S(P42'=""+1,"":+P42,1:$G(IEN(+P42)))"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",173,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",174,0)="STATIONS(S,ERR) ; Set Institution entries"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",175,0)=" N P4,NAME,SNAME,NUMBER,STATUS,FTYPE,FDA,IEN,XUMF"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",176,0)=" K ERR"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",177,0)=" S XUMF=1"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",178,0)=" S P4=$P(S,""^"",1)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",179,0)=" I 'P4 S P4=$O(^DIC(4,""D"",$P(S,""^"",6),0))"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",180,0)=" I 'P4 S P4=""+1""    ;New entry"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",181,0)=" S P4=P4_"","""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",182,0)=" S NAME=$P(S,""^"",2) I NAME="""" S ERR=""Missing Institution Name"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",183,0)=" S SNAME=$P(S,""^"",3)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",184,0)=" S FTYPE=$P(S,""^"",4) S:FTYPE="""" FTYPE=""OTHER"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",185,0)=" S NUMBER=$P(S,""^"",6) I NUMBER="""" S ERR=""Missing Station Number"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",186,0)=" S STATUS=$P(S,""^"",7) S:STATUS="""" STATUS=""N"""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",187,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",188,0)=" S FDA(4,P4,.01)=NAME"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",189,0)=" S FDA(4,P4,.05)=SNAME"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",190,0)=" S FDA(4,P4,11)=STATUS"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",191,0)=" S FDA(4,P4,13)=FTYPE"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",192,0)=" S FDA(4,P4,99)=NUMBER"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",193,0)=" D UPDATE^DIE(""E"",""FDA"",""IEN"",""ERR"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",194,0)=" I $D(ERR(""DIERR"")) S ERR=$G(ERR(""DIERR"",1,""TEXT"",1)) Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",195,0)=" Q $S(P4'=""+1,"":+P4,1:$G(IEN(+P4)))"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",196,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",197,0)="HLLINKS(L,ERR) ; Set Logical Link entries"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",198,0)=" N P870,NODE,LLP,STATION,DOMAIN,AUTOSTRT,IP,PORT,TYPE,FDA,IEN"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",199,0)=" K ERR"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",200,0)=" S P870=$P(L,""^"",1)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",201,0)=" I 'P870 S P870=""+1""    ;New entry"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",202,0)=" S P870=P870_"","""
^XTMP("XPDT",7813,"RTN","MHVZCFG2",203,0)=" S NODE=$P(L,""^"",2) I NODE="""" S ERR=""Missing Logical Link Name"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",204,0)=" S STATION=$P(L,""^"",3) I 'STATION S ERR=""Missing Institution File Pointer"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",205,0)=" S DOMAIN=$P(L,""^"",5) I 'DOMAIN S ERR=""Missing Domain File Pointer"" Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",206,0)=" S LLP=4            ;TCP"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",207,0)=" S AUTOSTRT=1       ;Enabled"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",208,0)=" S IP=$P(L,""^"",6)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",209,0)=" S PORT=$P(L,""^"",7)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",210,0)=" S TYPE=$P(L,""^"",8)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",211,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",212,0)=" S FDA(870,P870,.01)=NODE"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",213,0)=" S FDA(870,P870,.02)=STATION"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",214,0)=" S FDA(870,P870,.03)=DOMAIN"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",215,0)=" S FDA(870,P870,2)=LLP"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",216,0)=" S FDA(870,P870,4.5)=AUTOSTRT"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",217,0)=" S FDA(870,P870,400.01)=IP"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",218,0)=" S FDA(870,P870,400.02)=PORT"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",219,0)=" S FDA(870,P870,400.03)=TYPE"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",220,0)=" D UPDATE^DIE("""",""FDA"",""IEN"",""ERR"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",221,0)=" I $D(ERR(""DIERR"")) S ERR=$G(ERR(""DIERR"",1,""TEXT"",1)) Q 0"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",222,0)=" Q $S(P870'=""+1,"":+P870,1:$G(IEN(+P870)))"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",223,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",224,0)="UPDLINK(S,D,UPDATE) ;Update Link with Station or Domain pointer"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",225,0)=" N L,LINK"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",226,0)=" S L="""" F  S L=$O(UPDATE(""LINK"",L)) Q:L=""""  D"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",227,0)=" . S LINK=UPDATE(""LINK"",L)"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",228,0)=" . I S,$P(S,""^"",6)=$P(LINK,""^"",3) S $P(LINK,""^"",3)=+S"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",229,0)=" . I D,$P(D,""^"",2)=$P(LINK,""^"",5) S $P(LINK,""^"",5)=+D"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",230,0)=" . S UPDATE(""LINK"",L)=LINK"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",231,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",232,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG2",233,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3")="0^5^B60372381"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",1,0)="MHVZCFG3 ;;WAS/GPM - Environment Configuration Utility ; 10/31/05 8:52am"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",2,0)=" ;;1.0;My HealtheVet Utilities;;Jul 04, 2005"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",3,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",4,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",5,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",6,0)="UPDATE ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",7,0)=" N X,Y,DIR,DIC,DA,DTOUT,DUOUT,DIRUT,DIROUT"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",8,0)=" N CFG,DEFAULT,UPDATE,XUMF,LINK,ST,DM,LT,PT"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",9,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",10,0)=" D GET^MHVZCFG(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",11,0)=" K DIR,DA,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",12,0)=" S DIR(0)=""Y"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",13,0)=" S DIR(""A"")=""DISPLAY CURRENT CONFIGURATION?"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",14,0)=" S DIR(""B"")=""YES"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",15,0)=" D ^DIR Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",16,0)=" I Y D DISPLAY^MHVZCFG(.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",17,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",18,0)=" K DIR,DA,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",19,0)=" S DIR(0)=""Y"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",20,0)=" S DIR(""A"")=""CHANGE THIS CONFIGURATION?"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",21,0)=" S DIR(""B"")=""NO"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",22,0)=" D ^DIR Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",23,0)=" I 'Y Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",24,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",25,0)=" S XUMF=1"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",26,0)=" K DIC,DA,DLAYGO,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",27,0)=" S DIC=""^DIC(4,"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",28,0)=" S DLAYGO=4.2"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",29,0)=" S DIC(0)=""AELMQ"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",30,0)=" S DIC(""B"")=$P($G(CFG(""XU STATION"")),""^"",2)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",31,0)=" S DIC(""DR"")="".05;11;13;99"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",32,0)=" D ^DIC Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",33,0)=" Q:Y<1"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",34,0)=" S UPDATE(""STATION"")=$$STATION^MHVZCFG(+Y)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",35,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",36,0)=" K DIC,DA,DLAYGO,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",37,0)=" S DIC=""^DIC(4.2,"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",38,0)=" S DLAYGO=4.2"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",39,0)=" S DIC(0)=""AELMQ"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",40,0)=" S DIC(""B"")=$P($G(CFG(""HL DOMAIN"")),""^"",2)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",41,0)=" S DIC(""DR"")=""1///S;5.5///""_$P(UPDATE(""STATION""),""^"",6)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",42,0)=" D ^DIC Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",43,0)=" Q:Y<1"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",44,0)=" S UPDATE(""DOMAIN"")=$$DOMAIN^MHVZCFG(+Y)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",45,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",46,0)=" D DEFVIE(.UPDATE)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",47,0)=" K DIR,DA,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",48,0)=" S DIR(0)=""870,400.01"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",49,0)=" S DIR(""A"")=""VIE IP ADDRESS"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",50,0)=" S DIR(""B"")=$G(UPDATE(""VIE IP""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",51,0)=" D ^DIR Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",52,0)=" S UPDATE(""VIE IP"")=Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",53,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",54,0)=" K DIR,DA,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",55,0)=" S DIR(0)=""870,400.02"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",56,0)=" S DIR(""A"")=""VIE PORT"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",57,0)=" S DIR(""B"")=$G(UPDATE(""VIE PORT""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",58,0)=" D ^DIR Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",59,0)=" S UPDATE(""VIE PORT"")=Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",60,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",61,0)=" K DIR,DA,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",62,0)=" S DIR(0)=""Y"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",63,0)=" S DIR(""A"")=""CREATE NEW LOGICAL LINK FOR THIS STATION"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",64,0)=" S DIR(""B"")=""YES"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",65,0)=" I +CFG(""XU STATION"")=+UPDATE(""STATION"") S DIR(""B"")=""NO"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",66,0)=" D ^DIR Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",67,0)=" I Y D"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",68,0)=" . K DIR,DA,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",69,0)=" . S DIR(0)=""870,.01"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",70,0)=" . S DIR(""A"")=""LOGICAL LINK NAME"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",71,0)=" . S DIR(""B"")=""VA""_$E($P($G(UPDATE(""STATION"")),""^"",2),1,8)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",72,0)=" . D ^DIR Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",73,0)=" . S LINK=Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",74,0)=" . ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",75,0)=" . K DIR,DA,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",76,0)=" . S DIR(0)=""870,400.02"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",77,0)=" . S DIR(""A"")=""LISTENER PORT"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",78,0)=" . D ^DIR Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",79,0)=" . S PT=Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",80,0)=" . ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",81,0)=" . K DIR,DA,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",82,0)=" . S DIR(0)=""870,400.03"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",83,0)=" . S DIR(""A"")=""LISTENER TYPE"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",84,0)=" . D ^DIR Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",85,0)=" . S LT=Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",86,0)=" . ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",87,0)=" . S UPDATE(""LINK"",LINK)=""0^""_LINK_""^""_+UPDATE(""STATION"")_""^Enabled^""_+UPDATE(""DOMAIN"")_""^^""_PT_""^""_LT"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",88,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",89,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",90,0)=" S DEFAULT(""VIE IP"")=UPDATE(""VIE IP"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",91,0)=" S DEFAULT(""VIE PORT"")=UPDATE(""VIE PORT"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",92,0)=" D DEFSYS(.DEFAULT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",93,0)=" K DIR,DA,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",94,0)=" S LINK="""" F  S LINK=$O(DEFAULT(""LINK"",LINK)) Q:LINK=""""  D  Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",95,0)=" . S DIR(0)=""Y"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",96,0)=" . I $D(CFG(""LINK"",LINK)) D"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",97,0)=" .. S DIR(""A"")=""A LINK EXISTS FOR '""_LINK_""'.  UPDATE"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",98,0)=" .. S DIR(""B"")=""NO"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",99,0)=" .. Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",100,0)=" . E  D"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",101,0)=" .. S DIR(""A"")=""ADD LINK FOR '""_LINK_""'"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",102,0)=" .. S DIR(""B"")=""YES"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",103,0)=" .. Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",104,0)=" . D ^DIR Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",105,0)=" . I Y D"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",106,0)=" .. S UPDATE(""LINK"",LINK)=DEFAULT(""LINK"",LINK)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",107,0)=" .. S ST=$P(DEFAULT(""LINK"",LINK),""^"",3)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",108,0)=" .. I ST'="""" S UPDATE(""STATION"",ST)=DEFAULT(""STATION"",ST)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",109,0)=" .. S DM=$P(DEFAULT(""LINK"",LINK),""^"",5)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",110,0)=" .. I DM'="""" S UPDATE(""DOMAIN"",DM)=DEFAULT(""DOMAIN"",DM)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",111,0)=" .. Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",112,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",113,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",114,0)=" S UPDATE(""HL STATION"")=UPDATE(""STATION"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",115,0)=" S UPDATE(""HL DOMAIN"")=UPDATE(""DOMAIN"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",116,0)=" S UPDATE(""XU STATION"")=UPDATE(""STATION"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",117,0)=" S UPDATE(""XU DOMAIN"")=UPDATE(""DOMAIN"")"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",118,0)=" D DEFDIV(.UPDATE,.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",119,0)=" D DEFSTA(.UPDATE,.CFG)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",120,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",121,0)=" D DISPLAY^MHVZCFG(.UPDATE)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",122,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",123,0)=" K DIR,DA,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",124,0)=" S DIR(0)=""Y"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",125,0)=" S DIR(""A"")=""OK TO PROCEED WITH UPDATE?"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",126,0)=" S DIR(""B"")=""NO"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",127,0)=" D ^DIR Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",128,0)=" I 'Y Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",129,0)=" D SET^MHVZCFG2(.UPDATE)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",130,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",131,0)=" K DIR,DA,X,Y"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",132,0)=" S DIR(0)=""Y"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",133,0)=" S DIR(""A"")=""DISPLAY UPDATED CONFIGURATION?"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",134,0)=" S DIR(""B"")=""YES"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",135,0)=" D ^DIR Q:$D(DIRUT)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",136,0)=" I Y D SHOW^MHVZCFG"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",137,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",138,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",139,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",140,0)="DEFSYS(DEFAULT) ; Set the Default configuration"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",141,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",142,0)=" ; MPI"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",143,0)=" S DEFAULT(""STATION"",""200M"")=""0^MPI^^MPI^^200M^N"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",144,0)=" S DEFAULT(""DOMAIN"",""TLMPI.FO-BAYPINES.MED.VA.GOV"")=""0^TLMPI.FO-BAYPINES.MED.VA.GOV^200M"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",145,0)=" S DEFAULT(""LINK"",""MPIVA"")=""0^MPIVA^200M^Enabled^TLMPI.FO-BAYPINES.MED.VA.GOV^10.4.229.50^15000^C"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",146,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",147,0)=" ; MPI DIRECT CONNECT"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",148,0)=" S DEFAULT(""DOMAIN"",""TLMPIDC.FO-BAYPINES.MED.VA.GOV"")=""0^TLMPIDC.FO-BAYPINES.MED.VA.GOV^"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",149,0)=" S DEFAULT(""LINK"",""MPIVA DIR"")=""0^MPIVA DIR^^Enabled^TLMPIDC.FO-BAYPINES.MED.VA.GOV^10.4.229.50^15500^C"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",150,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",151,0)=" ; MHV"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",152,0)=" S DEFAULT(""STATION"",""200MH"")=""0^AUSTIN MHV^^OTHER^^200MH^N"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",153,0)=" S DEFAULT(""DOMAIN"",""MHV.MED.VA.GOV"")=""0^MHV.MED.VA.GOV^200MH"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",154,0)=" S DEFAULT(""LINK"",""MHVVA"")=""0^MHVVA^200MH^Enabled^MHV.MED.VA.GOV^""_DEFAULT(""VIE IP"")_""^""_DEFAULT(""VIE PORT"")_""^C"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",155,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",156,0)=" ; MHV DEV"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",157,0)=" S DEFAULT(""STATION"",""200MHD"")=""0^MHV (DEV)^MHV DEVELOPMENT^OTHER^^200MHD^N"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",158,0)=" S DEFAULT(""DOMAIN"",""DEV.MHV.MED.VA.GOV"")=""0^DEV.MHV.MED.VA.GOV^200MHD"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",159,0)=" S DEFAULT(""LINK"",""MHVVA DEV"")=""0^MHVVA DEV^200MHD^Enabled^DEV.MHV.MED.VA.GOV^""_DEFAULT(""VIE IP"")_""^""_DEFAULT(""VIE PORT"")_""^C"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",160,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",161,0)=" ; MHV SYS"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",162,0)=" S DEFAULT(""STATION"",""200MHS"")=""0^MHV (SYS)^MHV SYSTEM TEST^OTHER^^200MHS^N"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",163,0)=" S DEFAULT(""DOMAIN"",""SYS.MHV.MED.VA.GOV"")=""0^SYS.MHV.MED.VA.GOV^200MHS"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",164,0)=" S DEFAULT(""LINK"",""MHVVA SYS"")=""0^MHVVA SYS^200MHS^Enabled^SYS.MHV.MED.VA.GOV^""_DEFAULT(""VIE IP"")_""^""_DEFAULT(""VIE PORT"")_""^C"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",165,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",166,0)=" ; MHV UAT"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",167,0)=" S DEFAULT(""STATION"",""200MHU"")=""0^MHV (UAT)^MHV UAT TEST^OTHER^^200MHU^N"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",168,0)=" S DEFAULT(""DOMAIN"",""UAT.MHV.MED.VA.GOV"")=""0^UAT.MHV.MED.VA.GOV^200MHU"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",169,0)=" S DEFAULT(""LINK"",""MHVVA UAT"")=""0^MHVVA UAT^200MHU^Enabled^UAT.MHV.MED.VA.GOV^""_DEFAULT(""VIE IP"")_""^""_DEFAULT(""VIE PORT"")_""^C"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",170,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",171,0)=" ; MHV DEV2"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",172,0)=" S DEFAULT(""STATION"",""200MHD2"")=""0^MHV (DEV2)^MHV DEVELOPMENT2^OTHER^^200MHD2^N"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",173,0)=" S DEFAULT(""DOMAIN"",""DEV2.MHV.MED.VA.GOV"")=""0^DEV2.MHV.MED.VA.GOV^200MHD2"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",174,0)=" S DEFAULT(""LINK"",""MHVVA DEV2"")=""0^MHVVA DEV2^200MHD2^Enabled^DEV2.MHV.MED.VA.GOV^""_DEFAULT(""VIE IP"")_""^""_DEFAULT(""VIE PORT"")_""^C"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",175,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",176,0)=" ; MHV SYS2"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",177,0)=" S DEFAULT(""STATION"",""200MHS2"")=""0^MHV (SYS2)^MHV SYSTEM TEST2^OTHER^^200MHS2^N"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",178,0)=" S DEFAULT(""DOMAIN"",""SYS2.MHV.MED.VA.GOV"")=""0^SYS2.MHV.MED.VA.GOV^200MHS2"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",179,0)=" S DEFAULT(""LINK"",""MHVVA SYS2"")=""0^MHVVA SYS2^200MHS2^Enabled^SYS2.MHV.MED.VA.GOV^""_DEFAULT(""VIE IP"")_""^""_DEFAULT(""VIE PORT"")_""^C"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",180,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",181,0)=" ; MHV UAT2"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",182,0)=" S DEFAULT(""STATION"",""200MHU2"")=""0^MHV (UAT2)^MHV UAT TEST2^OTHER^^200MHU2^N"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",183,0)=" S DEFAULT(""DOMAIN"",""UAT2.MHV.MED.VA.GOV"")=""0^UAT2.MHV.MED.VA.GOV^200MHU2"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",184,0)=" S DEFAULT(""LINK"",""MHVVA UAT2"")=""0^MHVVA UAT2^200MHU2^Enabled^UAT2.MHV.MED.VA.GOV^""_DEFAULT(""VIE IP"")_""^""_DEFAULT(""VIE PORT"")_""^C"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",185,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",186,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",187,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",188,0)="DEFVIE(UPDATE) ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",189,0)=" Q:$G(UPDATE(""DOMAIN""))="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",190,0)=" I UPDATE(""DOMAIN"")[""FO-BAYPINES"" D"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",191,0)=" . S UPDATE(""VIE IP"")=""10.4.229.99"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",192,0)=" . S UPDATE(""VIE PORT"")=8090"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",193,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",194,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",195,0)=" I UPDATE(""DOMAIN"")[""VET.MED.VA.GOV"",UPDATE(""DOMAIN"")[""TEST.HE"" D"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",196,0)=" . S UPDATE(""VIE IP"")=""10.2.29.170"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",197,0)=" . S UPDATE(""VIE PORT"")=8090"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",198,0)=" . Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",199,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",200,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",201,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",202,0)="DEFDIV(UPDATE,CFG) ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",203,0)=" Q:$G(UPDATE(""XU STATION""))="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",204,0)=" Q:$G(CFG(""XU STATION""))="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",205,0)=" Q:'$D(CFG(""DIVISION""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",206,0)=" N DIV"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",207,0)=" S DIV=$P(CFG(""XU STATION""),""^"",6) Q:DIV="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",208,0)=" S UPDATE(""DIVISION"")=+CFG(""DIVISION"")_""^""_$P(UPDATE(""XU STATION""),""^"",1,2)_""^""_$P(UPDATE(""XU STATION""),""^"",6)"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",209,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",210,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",211,0)="DEFSTA(UPDATE,CFG) ;"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",212,0)=" Q:$G(UPDATE(""XU STATION""))="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",213,0)=" Q:$G(CFG(""XU STATION""))="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",214,0)=" Q:'$D(CFG(""ST389.9""))"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",215,0)=" N STA"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",216,0)=" S STA=$P(CFG(""XU STATION""),""^"",6) Q:STA="""""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",217,0)=" S UPDATE(""ST389.9"")=$P(CFG(""ST389.9""),""^"",1,3)_""^^""_$P(UPDATE(""XU STATION""),""^"",6)_""^1"""
^XTMP("XPDT",7813,"RTN","MHVZCFG3",218,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZCFG3",219,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZMENU")="0^2^B446775"
^XTMP("XPDT",7813,"RTN","MHVZMENU",1,0)="MHVZMENU ;MENU OPTIONS ; 12/5/05 4:54pm"
^XTMP("XPDT",7813,"RTN","MHVZMENU",2,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZMENU",3,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZMENU",4,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZMENU",5,0)="XWB ;"
^XTMP("XPDT",7813,"RTN","MHVZMENU",6,0)=" N SITE,PORT"
^XTMP("XPDT",7813,"RTN","MHVZMENU",7,0)=" S U=""^"",DT=$$DT^XLFDT"
^XTMP("XPDT",7813,"RTN","MHVZMENU",8,0)=" S SITE=$P($$SITE^VASITE,U,3)"
^XTMP("XPDT",7813,"RTN","MHVZMENU",9,0)=" I SITE=994 S PORT=9474"
^XTMP("XPDT",7813,"RTN","MHVZMENU",10,0)=" I SITE=995 S PORT=9470"
^XTMP("XPDT",7813,"RTN","MHVZMENU",11,0)=" I SITE=996 S PORT=9565"
^XTMP("XPDT",7813,"RTN","MHVZMENU",12,0)=" I SITE=658 S PORT=9705"
^XTMP("XPDT",7813,"RTN","MHVZMENU",13,0)=" Q:'PORT"
^XTMP("XPDT",7813,"RTN","MHVZMENU",14,0)=" W !"
^XTMP("XPDT",7813,"RTN","MHVZMENU",15,0)=" D STRT^XWBTCP(PORT)"
^XTMP("XPDT",7813,"RTN","MHVZMENU",16,0)=" Q"
^XTMP("XPDT",7813,"RTN","MHVZMENU",17,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZMENU",18,0)="XZZL D EXTRACT^ZZLETA Q"
^XTMP("XPDT",7813,"RTN","MHVZMENU",19,0)="PZZL D PROFILE^ZZLETA Q"
^XTMP("XPDT",7813,"RTN","MHVZMENU",20,0)="RZZL D REQUEST^ZZLETA Q"
^XTMP("XPDT",7813,"RTN","MHVZMENU",21,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZMENU",22,0)="FM D P^DI Q"
^XTMP("XPDT",7813,"RTN","MHVZMENU",23,0)=" ;"
^XTMP("XPDT",7813,"RTN","MHVZMENU",24,0)=" Q"
^XTMP("XPDT",7813,"RTN","ZZLETA")="0^1^B5267821"
^XTMP("XPDT",7813,"RTN","ZZLETA",1,0)="ZZLETA ; ; 4/25/05 9:16am"
^XTMP("XPDT",7813,"RTN","ZZLETA",2,0)=" ;"
^XTMP("XPDT",7813,"RTN","ZZLETA",3,0)="EXTRACT S ^XTMP(""MHV7LOG"")=1                ;Temporary - turns on logging"
^XTMP("XPDT",7813,"RTN","ZZLETA",4,0)=" D LOG^MHV7U(""ZZLETA"","""",""S"",1)"
^XTMP("XPDT",7813,"RTN","ZZLETA",5,0)=" S DIC=""^DPT("",DIC(0)=""QEALM"",DIC(""A"")=""Select Patient: """
^XTMP("XPDT",7813,"RTN","ZZLETA",6,0)=" D ^DIC"
^XTMP("XPDT",7813,"RTN","ZZLETA",7,0)=" S QRY(""DFN"")=+Y"
^XTMP("XPDT",7813,"RTN","ZZLETA",8,0)=" Q:Y<1"
^XTMP("XPDT",7813,"RTN","ZZLETA",9,0)=" S DIR(0)=""DAO^::EX"""
^XTMP("XPDT",7813,"RTN","ZZLETA",10,0)=" S DIR(""A"")=""Enter From Date: """
^XTMP("XPDT",7813,"RTN","ZZLETA",11,0)=" D ^DIR"
^XTMP("XPDT",7813,"RTN","ZZLETA",12,0)=" S QRY(""FROM"")=Y"
^XTMP("XPDT",7813,"RTN","ZZLETA",13,0)=" S DIR(0)=""DAO^""_QRY(""FROM"")_""::EX"""
^XTMP("XPDT",7813,"RTN","ZZLETA",14,0)=" S DIR(""A"")=""Enter To Date: """
^XTMP("XPDT",7813,"RTN","ZZLETA",15,0)=" D ^DIR"
^XTMP("XPDT",7813,"RTN","ZZLETA",16,0)=" S QRY(""TO"")=Y"
^XTMP("XPDT",7813,"RTN","ZZLETA",17,0)=" S DATAROOT=""LETA"",ERR="""",LETA="""""
^XTMP("XPDT",7813,"RTN","ZZLETA",18,0)=" D EXTRACT^MHVXRX(.QRY,.ERR,DATAROOT)"
^XTMP("XPDT",7813,"RTN","ZZLETA",19,0)=" W !"
^XTMP("XPDT",7813,"RTN","ZZLETA",20,0)=" I ERR W !,ERR,!"
^XTMP("XPDT",7813,"RTN","ZZLETA",21,0)=" F I=1:1:LETA W !,LETA(I)"
^XTMP("XPDT",7813,"RTN","ZZLETA",22,0)=" Q"
^XTMP("XPDT",7813,"RTN","ZZLETA",23,0)=" ;"
^XTMP("XPDT",7813,"RTN","ZZLETA",24,0)="PROFILE S ^XTMP(""MHV7LOG"")=1                ;Temporary - turns on logging"
^XTMP("XPDT",7813,"RTN","ZZLETA",25,0)=" D LOG^MHV7U(""ZZLETA"","""",""S"",1)"
^XTMP("XPDT",7813,"RTN","ZZLETA",26,0)=" S DIC=""^DPT("",DIC(0)=""QEALM"",DIC(""A"")=""Select Patient: """
^XTMP("XPDT",7813,"RTN","ZZLETA",27,0)=" D ^DIC"
^XTMP("XPDT",7813,"RTN","ZZLETA",28,0)=" S QRY(""DFN"")=+Y,QRY(""FROM"")="""",QRY(""TO"")="""",DATAROOT=""LETA"",ERR="""",LETA="""""
^XTMP("XPDT",7813,"RTN","ZZLETA",29,0)=" D PROFILE^MHVXRX(.QRY,.ERR,DATAROOT)"
^XTMP("XPDT",7813,"RTN","ZZLETA",30,0)=" W !"
^XTMP("XPDT",7813,"RTN","ZZLETA",31,0)=" I ERR W !,ERR,!"
^XTMP("XPDT",7813,"RTN","ZZLETA",32,0)=" F I=1:1:LETA W !,LETA(I)"
^XTMP("XPDT",7813,"RTN","ZZLETA",33,0)=" Q"
^XTMP("XPDT",7813,"RTN","ZZLETA",34,0)=" ;"
^XTMP("XPDT",7813,"RTN","ZZLETA",35,0)="REQUEST S ^XTMP(""MHV7LOG"")=1                ;Temporary - turns on logging"
^XTMP("XPDT",7813,"RTN","ZZLETA",36,0)=" D LOG^MHV7U(""ZZLETA"","""",""S"",1)"
^XTMP("XPDT",7813,"RTN","ZZLETA",37,0)=" S DIC=""^DPT("",DIC(0)=""QEALM"",DIC(""A"")=""Select Patient: """
^XTMP("XPDT",7813,"RTN","ZZLETA",38,0)=" D ^DIC"
^XTMP("XPDT",7813,"RTN","ZZLETA",39,0)=" S QRY(""DFN"")=+Y,QRY(""FROM"")="""",QRY(""TO"")="""",DATAROOT=""LETA"",ERR="""",LETA="""""
^XTMP("XPDT",7813,"RTN","ZZLETA",40,0)=" D PROFILE^MHVXRX(.QRY,.ERR,DATAROOT)"
^XTMP("XPDT",7813,"RTN","ZZLETA",41,0)=" W !"
^XTMP("XPDT",7813,"RTN","ZZLETA",42,0)=" I ERR W !,ERR,!"
^XTMP("XPDT",7813,"RTN","ZZLETA",43,0)=" F I=1:1:LETA W !,LETA(I)"
^XTMP("XPDT",7813,"RTN","ZZLETA",44,0)=" ;"
^XTMP("XPDT",7813,"RTN","ZZLETA",45,0)=" S CNT=0"
^XTMP("XPDT",7813,"RTN","ZZLETA",46,0)=" K LETA S LETA="""""
^XTMP("XPDT",7813,"RTN","ZZLETA",47,0)=" K QRY(""RX"")"
^XTMP("XPDT",7813,"RTN","ZZLETA",48,0)="LOOP S Y="""""
^XTMP("XPDT",7813,"RTN","ZZLETA",49,0)=" S DIR(0)=""FO"",DIR(""A"")=""Prescription Number"""
^XTMP("XPDT",7813,"RTN","ZZLETA",50,0)=" D ^DIR"
^XTMP("XPDT",7813,"RTN","ZZLETA",51,0)=" I $D(DUOUT)!($D(DTOUT)) Q"
^XTMP("XPDT",7813,"RTN","ZZLETA",52,0)=" I Y'="""",Y'?4.7N0.1A W !,""Rx number must be alpha numeric"" G LOOP"
^XTMP("XPDT",7813,"RTN","ZZLETA",53,0)=" I Y'="""" D  G LOOP"
^XTMP("XPDT",7813,"RTN","ZZLETA",54,0)=" . S CNT=CNT+1"
^XTMP("XPDT",7813,"RTN","ZZLETA",55,0)=" . S QRY(""RX"",CNT)=Y_""^ZZLETA^""_$$NOW^XLFDT"
^XTMP("XPDT",7813,"RTN","ZZLETA",56,0)=" I $D(QRY(""RX"")) D REQUEST^MHVXRXR(.QRY,.ERR,DATAROOT)"
^XTMP("XPDT",7813,"RTN","ZZLETA",57,0)=" W !"
^XTMP("XPDT",7813,"RTN","ZZLETA",58,0)=" I ERR W !,ERR,!"
^XTMP("XPDT",7813,"RTN","ZZLETA",59,0)=" F I=1:1:LETA W !,LETA(I)"
^XTMP("XPDT",7813,"RTN","ZZLETA",60,0)=" Q"
^XTMP("XPDT",7813,"VER")="8.0^22.0"
^XTMP("XPDT",7814)="1"
^XTMP("XPDT",7814,"BLD",8255,0)="NUR*4.0*43^NURSING SERVICE^0^3100310^y"
^XTMP("XPDT",7814,"BLD",8255,4,0)="^9.64PA^211.8^3"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,0)="211.4"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,0)="^9.641^211.415^4"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.4,0)="NURS LOCATION  (File-top level)"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.4,1,0)="^9.6411^.7^3"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.4,1,.5,0)="CARE SETTING"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.4,1,.6,0)="UNIT TYPE"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.4,1,.7,0)="INPATIENT DSS DEPARTMENT"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.414,0)="POC DATA ENTRY PERSONNEL  (sub-file)"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.414,1,0)="^9.6411^.01^1"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.414,1,.01,0)="POC DATA ENTRY PERSONNEL"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.415,0)="POC DATA APPROVAL PERSONNEL  (sub-file)"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.415,1,0)="^9.6411^.01^1"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.415,1,.01,0)="POC DATA APPROVAL PERSONNEL"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.416,0)="SERVICE DATES  (sub-file)"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.416,1,0)="^9.6411^1^2"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.416,1,.01,0)="SERVICE DATE"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,2,211.416,1,1,0)="STATUS"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,222)="y^y^p^^^^n^^n"
^XTMP("XPDT",7814,"BLD",8255,4,211.4,224)=""
^XTMP("XPDT",7814,"BLD",8255,4,211.8,0)="211.8"
^XTMP("XPDT",7814,"BLD",8255,4,211.8,2,0)="^9.641^211.82^1"
^XTMP("XPDT",7814,"BLD",8255,4,211.8,2,211.82,0)="OCCUPANCY/TRANSFERRED DATE  (sub-file)"
^XTMP("XPDT",7814,"BLD",8255,4,211.8,2,211.82,1,0)="^9.6411^6^1"
^XTMP("XPDT",7814,"BLD",8255,4,211.8,2,211.82,1,6,0)="PRIMARY ASSIGNMENT"
^XTMP("XPDT",7814,"BLD",8255,4,211.8,222)="y^n^p^^^^n^^n"
^XTMP("XPDT",7814,"BLD",8255,4,211.8,224)=""
^XTMP("XPDT",7814,"BLD",8255,4,212.8,0)="212.8"
^XTMP("XPDT",7814,"BLD",8255,4,212.8,222)="y^y^f^^n^^y^o^n"
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.4,211.4)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.4,211.4,.5)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.4,211.4,.6)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.4,211.4,.7)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.4,211.414)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.4,211.414,.01)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.4,211.415)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.4,211.415,.01)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.4,211.416)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.4,211.416,.01)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.4,211.416,1)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.8,211.82)=""
^XTMP("XPDT",7814,"BLD",8255,4,"APDD",211.8,211.82,6)=""
^XTMP("XPDT",7814,"BLD",8255,4,"B",211.4,211.4)=""
^XTMP("XPDT",7814,"BLD",8255,4,"B",211.8,211.8)=""
^XTMP("XPDT",7814,"BLD",8255,4,"B",212.8,212.8)=""
^XTMP("XPDT",7814,"BLD",8255,6.3)="4"
^XTMP("XPDT",7814,"BLD",8255,"ABNS",0)="^9.66A^^"
^XTMP("XPDT",7814,"BLD",8255,"ABPKG")="y^n"
^XTMP("XPDT",7814,"BLD",8255,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7814,"BLD",8255,"KRN",.4,0)=".4"
^XTMP("XPDT",7814,"BLD",8255,"KRN",.401,0)=".401"
^XTMP("XPDT",7814,"BLD",8255,"KRN",.402,0)=".402"
^XTMP("XPDT",7814,"BLD",8255,"KRN",.402,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7814,"BLD",8255,"KRN",.402,"NM",1,0)="NURS-I-PRIORITY 1A    FILE #211.4^211.4^0"
^XTMP("XPDT",7814,"BLD",8255,"KRN",.402,"NM","B","NURS-I-PRIORITY 1A    FILE #211.4",1)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN",.403,0)=".403"
^XTMP("XPDT",7814,"BLD",8255,"KRN",.5,0)=".5"
^XTMP("XPDT",7814,"BLD",8255,"KRN",.84,0)=".84"
^XTMP("XPDT",7814,"BLD",8255,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7814,"BLD",8255,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7814,"BLD",8255,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7814,"BLD",8255,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7814,"BLD",8255,"KRN",19,0)="19"
^XTMP("XPDT",7814,"BLD",8255,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7814,"BLD",8255,"KRN",101,0)="101"
^XTMP("XPDT",7814,"BLD",8255,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7814,"BLD",8255,"KRN",771,0)="771"
^XTMP("XPDT",7814,"BLD",8255,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7814,"BLD",8255,"KRN",870,0)="870"
^XTMP("XPDT",7814,"BLD",8255,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7814,"BLD",8255,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7814,"BLD",8255,"KRN",8994,0)="8994"
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",.4,.4)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",.401,.401)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",.402,.402)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",.403,.403)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",.5,.5)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",.84,.84)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",19,19)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",101,101)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",771,771)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",870,870)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7814,"BLD",8255,"KRN","B",8994,8994)=""
^XTMP("XPDT",7814,"BLD",8255,"QUES",0)="^9.62^^"
^XTMP("XPDT",7814,"BLD",8255,"REQB",0)="^9.611^^"
^XTMP("XPDT",7814,"DATA",212.8,1,0)="CRITICAL CARE^Highest level of care for adult patients, including all ICU types. Optional specialties are: Cardiothoracic, Coronary Care, Med, Neurology, Pulmonary, Surgery and Trauma ICU"
^XTMP("XPDT",7814,"DATA",212.8,1,1)="HOSPITAL ACUTE"
^XTMP("XPDT",7814,"DATA",212.8,2,0)="MEDICAL^Medical services for adult patients. Includes Internal Medicine, Family Practice, Cardiology. Optional specialties are: Cardiac, GI, Infection Disease, Neurology, Oncology, Renal or Respiratory Units"
^XTMP("XPDT",7814,"DATA",212.8,2,1)="HOSPITAL ACUTE"
^XTMP("XPDT",7814,"DATA",212.8,3,0)="MENTAL HEALTH ACUTE^Units caring for patients with acute psychiatric disorders."
^XTMP("XPDT",7814,"DATA",212.8,3,1)="HOSPITAL ACUTE"
^XTMP("XPDT",7814,"DATA",212.8,4,0)="MIXED MED SURG^Units that care for adult patients admitted to either medical or surgical services. Optional specialties are: Cardiac, Neuro/Neurosurgery or Oncology, Med-Surg combined units"
^XTMP("XPDT",7814,"DATA",212.8,4,1)="HOSPITAL ACUTE"
^XTMP("XPDT",7814,"DATA",212.8,5,0)="STEP DOWN^Units providing care for adult patients at lower level than critical care units and higher level than med/surg units. Telemetry is not an indicator of acuity level"
^XTMP("XPDT",7814,"DATA",212.8,5,1)="HOSPITAL ACUTE"
^XTMP("XPDT",7814,"DATA",212.8,6,0)="SCI ACUTE & REHAB^Includes all hospital SCI units, acute and rehab"
^XTMP("XPDT",7814,"DATA",212.8,6,1)="HOSPITAL ACUTE"
^XTMP("XPDT",7814,"DATA",212.8,7,0)="SURGICAL^Surgical services for adult patients. Includes general surgery, neurosurgery, orthopedics. Optional: Bariatric, Cardiothoracic, Gynecology, Plastic Surgery, Transplant, Trauma Surgical unit"
^XTMP("XPDT",7814,"DATA",212.8,7,1)="HOSPITAL ACUTE"
^XTMP("XPDT",7814,"DATA",212.8,8,0)="HOSPITAL ACUTE OTHER^Not elsewhere classified"
^XTMP("XPDT",7814,"DATA",212.8,8,1)="HOSPITAL ACUTE"
^XTMP("XPDT",7814,"DATA",212.8,9,0)="COMMUNITY LIVING CENTER^Units for adult patients with long term care needs, proving skilled nursing/specialty programs. May be located on/near a VA facility or free-standing in the community"
^XTMP("XPDT",7814,"DATA",212.8,9,1)="HOSPITAL CONTINUING CARE"
^XTMP("XPDT",7814,"DATA",212.8,10,0)="DOMICILIARY"
^XTMP("XPDT",7814,"DATA",212.8,10,1)="HOSPITAL CONTINUING CARE"
^XTMP("XPDT",7814,"DATA",212.8,11,0)="MENTAL HEALTH REHAB CHRONIC^Units caring for patients with chronic mental health conditions"
^XTMP("XPDT",7814,"DATA",212.8,11,1)="HOSPITAL CONTINUING CARE"
^XTMP("XPDT",7814,"DATA",212.8,12,0)="BLIND REHAB^Units that care for blinded veterans needing to acquire the skills and capabilities necessary for personal independence and emotional stability"
^XTMP("XPDT",7814,"DATA",212.8,12,1)="HOSPITAL CONTINUING CARE"
^XTMP("XPDT",7814,"DATA",212.8,13,0)="TRAUMA REHAB^Units that provide rehab services and care for veterans with physical, cognitive and/or psychosocial impairments or disabilities"
^XTMP("XPDT",7814,"DATA",212.8,13,1)="HOSPITAL CONTINUING CARE"
^XTMP("XPDT",7814,"DATA",212.8,14,0)="HOSPITAL CONTINUING CARE OTHER^Not elsewhere classified"
^XTMP("XPDT",7814,"DATA",212.8,14,1)="HOSPITAL CONTINUING CARE"
^XTMP("XPDT",7814,"DATA",212.8,15,0)="DIALYSIS^Dialysis units"
^XTMP("XPDT",7814,"DATA",212.8,15,1)="INTERVENTIONAL UNITS"
^XTMP("XPDT",7814,"DATA",212.8,16,0)="ER/URGENT CARE^Includes general Emergency Departments as well as Urgent Care Centers"
^XTMP("XPDT",7814,"DATA",212.8,16,1)="INTERVENTIONAL UNITS"
^XTMP("XPDT",7814,"DATA",212.8,17,0)="PERIOPERATIVE^Includes pre-op holding, operating rooms, post anesthesia care, same day and ambulatory surgery units"
^XTMP("XPDT",7814,"DATA",212.8,17,1)="INTERVENTIONAL UNITS"
^XTMP("XPDT",7814,"DATA",212.8,18,0)="SPECIAL PROCEDURES^Clinics and labs where procedures and treatments commonly occur. Includes Bronchoscopy, Cardiac Catheterization, Infusion Unit, GI lab/Endo, Pain Management, Radiology"
^XTMP("XPDT",7814,"DATA",212.8,18,1)="INTERVENTIONAL UNITS"
^XTMP("XPDT",7814,"DATA",212.8,19,0)="INTERVENIONAL UNITS OTHER^Not elsewhere classified"
^XTMP("XPDT",7814,"DATA",212.8,19,1)="INTERVENTIONAL UNITS"
^XTMP("XPDT",7814,"DATA",212.8,20,0)="COMMUNITY BASED OP CLINIC"
^XTMP("XPDT",7814,"DATA",212.8,20,1)="CLINICS"
^XTMP("XPDT",7814,"DATA",212.8,21,0)="DAY/GROUP PROGRAMS^Includes adult day care"
^XTMP("XPDT",7814,"DATA",212.8,21,1)="CLINICS"
^XTMP("XPDT",7814,"DATA",212.8,22,0)="HOME BASED PRIMARY CARE^Home care nursing"
^XTMP("XPDT",7814,"DATA",212.8,22,1)="CLINICS"
^XTMP("XPDT",7814,"DATA",212.8,23,0)="MENTAL HEALTH OUTPATIENT^Outpatient clinics that provide specialized mental health programs to support patients with chronic mental health conditions"
^XTMP("XPDT",7814,"DATA",212.8,23,1)="CLINICS"
^XTMP("XPDT",7814,"DATA",212.8,24,0)="PRIMARY CARE CLINICS^Includes Primary Care, Women's Clinics"
^XTMP("XPDT",7814,"DATA",212.8,24,1)="CLINICS"
^XTMP("XPDT",7814,"DATA",212.8,25,0)="SCI CLINIC^Limited to SCI Clinics"
^XTMP("XPDT",7814,"DATA",212.8,25,1)="CLINICS"
^XTMP("XPDT",7814,"DATA",212.8,26,0)="SPECIALTY, AMBULATORY CARE^Specialty options include: Allergy, Cardiology, Dermatology, Diabetes, GU, Hypertension, Oncology, Orthopedics, and Smoking Cessation Clinics"
^XTMP("XPDT",7814,"DATA",212.8,26,1)="CLINICS"
^XTMP("XPDT",7814,"DATA",212.8,27,0)="CLINIC OTHER^Not elsewhere classified"
^XTMP("XPDT",7814,"DATA",212.8,27,1)="CLINICS"
^XTMP("XPDT",7814,"DATA",212.8,28,0)="CLINICAL^Workgroups that may function in both inpatient and outpatient settings such as Case Managers, Infection Control, Would Care Nurses, Care Coordination Telehealth, Telecare, etc"
^XTMP("XPDT",7814,"DATA",212.8,28,1)="CROSS SETTINGS"
^XTMP("XPDT",7814,"DATA",212.8,29,0)="NON-CLINICAL^Workgroups that may function in both inpatient and outpatient settings such as Educators, Informatics Nurses, Administrative, Research, Utilization Review etc"
^XTMP("XPDT",7814,"DATA",212.8,29,1)="CROSS SETTINGS"
^XTMP("XPDT",7814,"DATA",212.8,30,0)="CROSS SETTINGS OTHER^Not elsewhere classified"
^XTMP("XPDT",7814,"DATA",212.8,30,1)="CROSS SETTINGS"
^XTMP("XPDT",7814,"FIA",211.4)="NURS LOCATION"
^XTMP("XPDT",7814,"FIA",211.4,0)="^NURSF(211.4,"
^XTMP("XPDT",7814,"FIA",211.4,0,0)="211.4IP"
^XTMP("XPDT",7814,"FIA",211.4,0,1)="y^y^p^^^^n^^n"
^XTMP("XPDT",7814,"FIA",211.4,0,10)=""
^XTMP("XPDT",7814,"FIA",211.4,0,11)=""
^XTMP("XPDT",7814,"FIA",211.4,0,"RLRO")=""
^XTMP("XPDT",7814,"FIA",211.4,0,"VR")="4.0^NUR"
^XTMP("XPDT",7814,"FIA",211.4,211.4)="1"
^XTMP("XPDT",7814,"FIA",211.4,211.4,.5)=""
^XTMP("XPDT",7814,"FIA",211.4,211.4,.6)=""
^XTMP("XPDT",7814,"FIA",211.4,211.4,.7)=""
^XTMP("XPDT",7814,"FIA",211.4,211.4,14)=""
^XTMP("XPDT",7814,"FIA",211.4,211.4,15)=""
^XTMP("XPDT",7814,"FIA",211.4,211.4,16)=""
^XTMP("XPDT",7814,"FIA",211.4,211.414)="1"
^XTMP("XPDT",7814,"FIA",211.4,211.414,.01)=""
^XTMP("XPDT",7814,"FIA",211.4,211.415)="1"
^XTMP("XPDT",7814,"FIA",211.4,211.415,.01)=""
^XTMP("XPDT",7814,"FIA",211.4,211.416)="1"
^XTMP("XPDT",7814,"FIA",211.4,211.416,.01)=""
^XTMP("XPDT",7814,"FIA",211.4,211.416,1)=""
^XTMP("XPDT",7814,"FIA",211.8)="NURS POSITION CONTROL"
^XTMP("XPDT",7814,"FIA",211.8,0)="^NURSF(211.8,"
^XTMP("XPDT",7814,"FIA",211.8,0,0)="211.8IP"
^XTMP("XPDT",7814,"FIA",211.8,0,1)="y^n^p^^^^n^^n"
^XTMP("XPDT",7814,"FIA",211.8,0,10)=""
^XTMP("XPDT",7814,"FIA",211.8,0,11)=""
^XTMP("XPDT",7814,"FIA",211.8,0,"RLRO")=""
^XTMP("XPDT",7814,"FIA",211.8,0,"VR")="4.0^NUR"
^XTMP("XPDT",7814,"FIA",211.8,211.8)="1"
^XTMP("XPDT",7814,"FIA",211.8,211.82)="1"
^XTMP("XPDT",7814,"FIA",211.8,211.82,6)=""
^XTMP("XPDT",7814,"FIA",212.8)="VANOD UNIT TYPES"
^XTMP("XPDT",7814,"FIA",212.8,0)="^NURSF(212.8,"
^XTMP("XPDT",7814,"FIA",212.8,0,0)="212.8I"
^XTMP("XPDT",7814,"FIA",212.8,0,1)="y^y^f^^n^^y^o^n"
^XTMP("XPDT",7814,"FIA",212.8,0,10)=""
^XTMP("XPDT",7814,"FIA",212.8,0,11)=""
^XTMP("XPDT",7814,"FIA",212.8,0,"RLRO")=""
^XTMP("XPDT",7814,"FIA",212.8,0,"VR")="4.0^NUR"
^XTMP("XPDT",7814,"FIA",212.8,212.8)="0"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AA",0)="211.4^AA^POC Data Approval Personnel^R^^F^IR^W^211.415^^^^^S"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AA",.1,0)="^^2^2^3090710^"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AA",.1,1,0)="This is an index of POC Data approval personnel and the nursing locations "
^XTMP("XPDT",7814,"IX",211.4,211.4,"AA",.1,2,0)="for which they are responsible."
^XTMP("XPDT",7814,"IX",211.4,211.4,"AA",1)="S ^NURSF(211.4,""AA"",X,DA(1),DA)="""""
^XTMP("XPDT",7814,"IX",211.4,211.4,"AA",2)="K ^NURSF(211.4,""AA"",X,DA(1),DA)"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AA",2.5)="K ^NURSF(211.4,""AA"")"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AA",11.1,0)="^.114IA^1^1"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AA",11.1,1,0)="1^F^211.415^.01^^1^F"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AE",0)="211.4^AE^POC DATA ENTRY PERSONNEL^R^^F^IR^W^211.414^^^^^S"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AE",.1,0)="^^2^2^3090710^"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AE",.1,1,0)="This is an index for POC DATA ENTRY PERSONNEL and the nursing locations"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AE",.1,2,0)="for which they do data entry."
^XTMP("XPDT",7814,"IX",211.4,211.4,"AE",1)="S ^NURSF(211.4,""AE"",X,DA(1),DA)="""""
^XTMP("XPDT",7814,"IX",211.4,211.4,"AE",2)="K ^NURSF(211.4,""AE"",X,DA(1),DA)"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AE",2.5)="K ^NURSF(211.4,""AE"")"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AE",11.1,0)="^.114IA^1^1"
^XTMP("XPDT",7814,"IX",211.4,211.4,"AE",11.1,1,0)="1^F^211.414^.01^^1^F"
^XTMP("XPDT",7814,"IX",211.4,211.416,"C",0)="211.416^C^Index on service date and status^R^^R^IR^I^211.416^^^^^LS"
^XTMP("XPDT",7814,"IX",211.4,211.416,"C",.1,0)="^^2^2^3090610^"
^XTMP("XPDT",7814,"IX",211.4,211.416,"C",.1,1,0)="This index contains the service date and status.  It can be used to "
^XTMP("XPDT",7814,"IX",211.4,211.416,"C",.1,2,0)="determine the status of a nursing location for a given date."
^XTMP("XPDT",7814,"IX",211.4,211.416,"C",1)="S ^NURSF(211.4,DA(1),7,""C"",X(1),X(2),DA)="""""
^XTMP("XPDT",7814,"IX",211.4,211.416,"C",2)="K ^NURSF(211.4,DA(1),7,""C"",X(1),X(2),DA)"
^XTMP("XPDT",7814,"IX",211.4,211.416,"C",2.5)="K ^NURSF(211.4,DA(1),7,""C"")"
^XTMP("XPDT",7814,"IX",211.4,211.416,"C",11.1,0)="^.114IA^2^2"
^XTMP("XPDT",7814,"IX",211.4,211.416,"C",11.1,1,0)="1^F^211.416^.01^^1^F"
^XTMP("XPDT",7814,"IX",211.4,211.416,"C",11.1,2,0)="2^F^211.416^1^^2^F"
^XTMP("XPDT",7814,"IX",212.8,212.8,"AC",0)="212.8^AC^Index of Unit Type within Setting^R^^R^IR^I^212.8^^^^^S"
^XTMP("XPDT",7814,"IX",212.8,212.8,"AC",1)="S ^NURSF(212.8,""AC"",$E(X(1),1,30),$E(X(2),1,30),DA)="""""
^XTMP("XPDT",7814,"IX",212.8,212.8,"AC",2)="K ^NURSF(212.8,""AC"",$E(X(1),1,30),$E(X(2),1,30),DA)"
^XTMP("XPDT",7814,"IX",212.8,212.8,"AC",2.5)="K ^NURSF(212.8,""AC"")"
^XTMP("XPDT",7814,"IX",212.8,212.8,"AC",11.1,0)="^.114IA^2^2"
^XTMP("XPDT",7814,"IX",212.8,212.8,"AC",11.1,1,0)="1^F^212.8^2^30^1^F"
^XTMP("XPDT",7814,"IX",212.8,212.8,"AC",11.1,1,3)=""
^XTMP("XPDT",7814,"IX",212.8,212.8,"AC",11.1,2,0)="2^F^212.8^.01^30^2^F"
^XTMP("XPDT",7814,"IX",212.8,212.8,"AC",11.1,2,3)=""
^XTMP("XPDT",7814,"KRN",.402,2212,-1)="0^1"
^XTMP("XPDT",7814,"KRN",.402,2212,0)="NURS-I-PRIORITY 1A^3090608.1604^^211.4^^^3100303"
^XTMP("XPDT",7814,"KRN",.402,2212,"DR",1,211.4)=".5;.6;.7;11;12;14;15;"
^XTMP("XPDT",7814,"KRN",.402,2212,"DR",2,211.414)=".01;"
^XTMP("XPDT",7814,"KRN",.402,2212,"DR",2,211.415)=".01;"
^XTMP("XPDT",7814,"MBREQ")="0"
^XTMP("XPDT",7814,"ORD",7,.402)=".402;7;;;EDEOUT^DIFROMSO(.402,DA,"""",XPDA);FPRE^DIFROMSI(.402,"""",XPDA);EPRE^DIFROMSI(.402,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.402,DA,"""",XPDA);DEL^DIFROMSK(.402,"""",%)"
^XTMP("XPDT",7814,"ORD",7,.402,0)="INPUT TEMPLATE"
^XTMP("XPDT",7814,"PKG",525,-1)="1^1"
^XTMP("XPDT",7814,"PKG",525,0)="NURSING SERVICE^NUR^Nursing Service General Module"
^XTMP("XPDT",7814,"PKG",525,20,0)="^9.402P^^"
^XTMP("XPDT",7814,"PKG",525,22,0)="^9.49I^1^1"
^XTMP("XPDT",7814,"PKG",525,22,1,0)="4.0^2970509^2990722^66481"
^XTMP("XPDT",7814,"PKG",525,22,1,"PAH",1,0)="43^3100310"
^XTMP("XPDT",7814,"PKG",525,22,1,"PAH",1,1,0)="^^6^6^3100303"
^XTMP("XPDT",7814,"PKG",525,22,1,"PAH",1,1,1,0)="This patch supports patch PRS*4.0*126--PAID ENHANCEMENTS FOR VANOD.  This"
^XTMP("XPDT",7814,"PKG",525,22,1,"PAH",1,1,2,0)="patch--NUR*4.0*43--must be installed prior to patch PRS*4.0*126.  This "
^XTMP("XPDT",7814,"PKG",525,22,1,"PAH",1,1,3,0)="patch provides for the ability to enter and store additional information"
^XTMP("XPDT",7814,"PKG",525,22,1,"PAH",1,1,4,0)="for Nursing Locations that is required by the VANOD (Veterans Affairs"
^XTMP("XPDT",7814,"PKG",525,22,1,"PAH",1,1,5,0)="Nursing Outcomes Database) in accordance with Public Law 107-135 and the"
^XTMP("XPDT",7814,"PKG",525,22,1,"PAH",1,1,6,0)="OIG Recommendation 4a (annual reporting requirement)."
^XTMP("XPDT",7814,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7814,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7814,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7814,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7814,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7814,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7814,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7814,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7814,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7814,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7814,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7814,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7814,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7814,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7814,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7814,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7814,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7814,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7814,"QUES","XPM1","B")=""
^XTMP("XPDT",7814,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7814,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7814,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7814,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7814,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7814,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7814,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7814,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7814,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7814,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7814,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7814,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7814,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7814,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7814,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7814,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7814,"SEC","^DIC",212.8,212.8,0,"AUDIT")="@"
^XTMP("XPDT",7814,"SEC","^DIC",212.8,212.8,0,"DD")="@"
^XTMP("XPDT",7814,"SEC","^DIC",212.8,212.8,0,"DEL")="@"
^XTMP("XPDT",7814,"SEC","^DIC",212.8,212.8,0,"LAYGO")="@"
^XTMP("XPDT",7814,"SEC","^DIC",212.8,212.8,0,"RD")="@"
^XTMP("XPDT",7814,"SEC","^DIC",212.8,212.8,0,"WR")="@"
^XTMP("XPDT",7814,"UP",211.4,211.414,-1)="211.4^5"
^XTMP("XPDT",7814,"UP",211.4,211.414,0)="211.414"
^XTMP("XPDT",7814,"UP",211.4,211.415,-1)="211.4^6"
^XTMP("XPDT",7814,"UP",211.4,211.415,0)="211.415"
^XTMP("XPDT",7814,"UP",211.4,211.416,-1)="211.4^7"
^XTMP("XPDT",7814,"UP",211.4,211.416,0)="211.416"
^XTMP("XPDT",7814,"UP",211.8,211.82,-1)="211.8^1"
^XTMP("XPDT",7814,"UP",211.8,211.82,0)="211.82"
^XTMP("XPDT",7814,"VER")="8.0^22.0"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.5,0)="CARE SETTING^RS^I:Inpatient;O:Other;^1;5^Q"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.5,3)="Enter an ""I"" if this is an inpatient location or an ""O"" for other."
^XTMP("XPDT",7814,"^DD",211.4,211.4,.5,21,0)="^^2^2^3090709^"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.5,21,1,0)="This is a set of codes used to define the CARE SETTING of the nursing "
^XTMP("XPDT",7814,"^DD",211.4,211.4,.5,21,2,0)="location as inpatient or other."
^XTMP("XPDT",7814,"^DD",211.4,211.4,.5,"DT")="3090709"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.6,0)="UNIT TYPE^P212.8'^NURSF(212.8,^1;6^Q"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.6,.1)="Primary Patient Population Served"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.6,3)="Enter a VANOD UNIT TYPE"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.6,21,0)="^^2^2^3090709^"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.6,21,1,0)="This field defines the VANOD UNIT TYPE associated with the nursing "
^XTMP("XPDT",7814,"^DD",211.4,211.4,.6,21,2,0)="location."
^XTMP("XPDT",7814,"^DD",211.4,211.4,.6,"DT")="3090709"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.7,0)="INPATIENT DSS DEPARTMENT^F^^1;7^K:$L(X)>45!($L(X)<3) X"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.7,3)="Answer must be 3-45 characters in length"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.7,21,0)="^^1^1^3090608^"
^XTMP("XPDT",7814,"^DD",211.4,211.4,.7,21,1,0)="This identifies the Inpatient DSS Department."
^XTMP("XPDT",7814,"^DD",211.4,211.4,.7,"DT")="3090608"
^XTMP("XPDT",7814,"^DD",211.4,211.4,14,0)="POC DATA ENTRY PERSONNEL^211.414P^^5;0"
^XTMP("XPDT",7814,"^DD",211.4,211.4,15,0)="POC DATA APPROVAL PERSONNEL^211.415P^^6;0"
^XTMP("XPDT",7814,"^DD",211.4,211.4,16,0)="SERVICE DATES^211.416D^^7;0"
^XTMP("XPDT",7814,"^DD",211.4,211.4,16,21,0)="^^5^5^3090714^"
^XTMP("XPDT",7814,"^DD",211.4,211.4,16,21,1,0)="Entries to the SERVICE DATES multiple field (#16) are added when the"
^XTMP("XPDT",7814,"^DD",211.4,211.4,16,21,2,0)="INACTIVE FLAG field (#1.5) is changed.  This is accomplished by using"
^XTMP("XPDT",7814,"^DD",211.4,211.4,16,21,3,0)="MUMPS code in the ""AC"" cross reference of the INACTIVE FLAG field as"
^XTMP("XPDT",7814,"^DD",211.4,211.4,16,21,4,0)="a trigger to set the values for the SERVICE DATE field (#.01) and the"
^XTMP("XPDT",7814,"^DD",211.4,211.4,16,21,5,0)="STATUS field (#1) in the SERVICE DATES multiple."
^XTMP("XPDT",7814,"^DD",211.4,211.414,0)="POC DATA ENTRY PERSONNEL SUB-FIELD^^.01^1"
^XTMP("XPDT",7814,"^DD",211.4,211.414,0,"NM","POC DATA ENTRY PERSONNEL")=""
^XTMP("XPDT",7814,"^DD",211.4,211.414,.01,0)="POC DATA ENTRY PERSONNEL^MP200'^VA(200,^0;1^Q"
^XTMP("XPDT",7814,"^DD",211.4,211.414,.01,1,0)="^.1"
^XTMP("XPDT",7814,"^DD",211.4,211.414,.01,1,1,0)="211.414^B"
^XTMP("XPDT",7814,"^DD",211.4,211.414,.01,1,1,1)="S ^NURSF(211.4,DA(1),5,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7814,"^DD",211.4,211.414,.01,1,1,2)="K ^NURSF(211.4,DA(1),5,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7814,"^DD",211.4,211.414,.01,3)="Enter POC Data Entry Personnel."
^XTMP("XPDT",7814,"^DD",211.4,211.414,.01,21,0)="^.001^2^2^3090609^^^"
^XTMP("XPDT",7814,"^DD",211.4,211.414,.01,21,1,0)="A pointer to the NEW PERSON file (#200) that identifies the personnel "
^XTMP("XPDT",7814,"^DD",211.4,211.414,.01,21,2,0)="responsible for entering Nurse POC Daily Time records."
^XTMP("XPDT",7814,"^DD",211.4,211.414,.01,"DT")="3090710"
^XTMP("XPDT",7814,"^DD",211.4,211.415,0)="POC DATA APPROVAL PERSONNEL SUB-FIELD^^.01^1"
^XTMP("XPDT",7814,"^DD",211.4,211.415,0,"NM","POC DATA APPROVAL PERSONNEL")=""
^XTMP("XPDT",7814,"^DD",211.4,211.415,.01,0)="POC DATA APPROVAL PERSONNEL^MP200'^VA(200,^0;1^Q"
^XTMP("XPDT",7814,"^DD",211.4,211.415,.01,1,0)="^.1"
^XTMP("XPDT",7814,"^DD",211.4,211.415,.01,1,1,0)="211.415^B"
^XTMP("XPDT",7814,"^DD",211.4,211.415,.01,1,1,1)="S ^NURSF(211.4,DA(1),6,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7814,"^DD",211.4,211.415,.01,1,1,2)="K ^NURSF(211.4,DA(1),6,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7814,"^DD",211.4,211.415,.01,3)="Enter POC Data Approval Personnel"
^XTMP("XPDT",7814,"^DD",211.4,211.415,.01,21,0)="^.001^2^2^3090609^^"
^XTMP("XPDT",7814,"^DD",211.4,211.415,.01,21,1,0)="A pointer to the NEW PERSON file (#200) that identifies the personnel "
^XTMP("XPDT",7814,"^DD",211.4,211.415,.01,21,2,0)="responsible for approving Nurse POC Daily Time records."
^XTMP("XPDT",7814,"^DD",211.4,211.415,.01,"DT")="3090710"
^XTMP("XPDT",7814,"^DD",211.4,211.416,0)="SERVICE DATES SUB-FIELD^^1^2"
^XTMP("XPDT",7814,"^DD",211.4,211.416,0,"NM","SERVICE DATES")=""
^XTMP("XPDT",7814,"^DD",211.4,211.416,.01,0)="SERVICE DATE^D^^0;1^S %DT=""E"" D ^%DT S X=Y K:X<1 X"
^XTMP("XPDT",7814,"^DD",211.4,211.416,.01,1,0)="^.1"
^XTMP("XPDT",7814,"^DD",211.4,211.416,.01,1,1,0)="211.416^B"
^XTMP("XPDT",7814,"^DD",211.4,211.416,.01,1,1,1)="S ^NURSF(211.4,DA(1),7,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7814,"^DD",211.4,211.416,.01,1,1,2)="K ^NURSF(211.4,DA(1),7,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7814,"^DD",211.4,211.416,.01,3)="(No range limit on date)"
^XTMP("XPDT",7814,"^DD",211.4,211.416,.01,21,0)="^^2^2^3090709^"
^XTMP("XPDT",7814,"^DD",211.4,211.416,.01,21,1,0)="The date on which this nursing location was put into or taken out of"
^XTMP("XPDT",7814,"^DD",211.4,211.416,.01,21,2,0)="service."
^XTMP("XPDT",7814,"^DD",211.4,211.416,.01,"DT")="3090709"
^XTMP("XPDT",7814,"^DD",211.4,211.416,1,0)="STATUS^S^A:ACTIVE;I:INACTIVE;^0;2^Q"
^XTMP("XPDT",7814,"^DD",211.4,211.416,1,3)="Select a status for this nursing location."
^XTMP("XPDT",7814,"^DD",211.4,211.416,1,21,0)="^^1^1^3090709^"
^XTMP("XPDT",7814,"^DD",211.4,211.416,1,21,1,0)="This is the status associated with the SERVICE DATE."
^XTMP("XPDT",7814,"^DD",211.4,211.416,1,"DT")="3090709"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,0)="PRIMARY ASSIGNMENT^S^1:PRIMARY ASSIGNMENT;^0;9^Q"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,0)="^.1"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,1,0)="211.8^AE^MUMPS"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,1,1)="S NUR=$S($P(^NURSF(211.8,DA(1),1,DA,0),""^"",2):$P(^(0),""^"",2),1:"""") S:+NUR ^NURSF(211.8,""AE"",NUR,$E(X,1,30),DA(1),DA)="""" K NUR"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,1,2)="S NUR=$S($P(^NURSF(211.8,DA(1),1,DA,0),""^"",2):$P(^(0),""^"",2),1:"""") K:+NUR ^NURSF(211.8,""AE"",NUR,$E(X,1,30),DA(1),DA) K NUR"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,1,"%D",0)="^.101^1^1^3090805^^"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,1,"%D",1,0)="This mumps index is used to identify an employee's primary assigment."
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,2,0)="211.8^D^MUMPS"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,2,1)="S NUR=$S($P(^NURSF(211.8,DA(1),1,DA,0),""^"",2):$P(^(0),""^"",2),1:"""") S:+NUR ^NURSF(211.8,""D"",+$G(^NURSF(211.8,DA(1),0)),$P(^VA(200,NUR,0),U),NUR,DA)="""" K NUR"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,2,2)="S NUR=$S($P(^NURSF(211.8,DA(1),1,DA,0),""^"",2):$P(^(0),""^"",2),1:"""") K:+NUR ^NURSF(211.8,""D"",+$G(^NURSF(211.8,DA(1),0)),$P(^VA(200,NUR,0),U),NUR,DA) K NUR"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,2,"%D",0)="^.101^3^3^3090924^^^"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,2,"%D",1,0)="This index is used by the PAID ETA Nurse Point of Care software to "
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,2,"%D",2,0)="determine all the Nurses who have this location as their primary "
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,2,"%D",3,0)="assignment."
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,1,2,"DT")="3090924"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,9)="^"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,21,0)="^^1^1^2950224^^^"
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,21,1,0)="This flag designates this assignment as the employee's primary assignment."
^XTMP("XPDT",7814,"^DD",211.8,211.82,6,"DT")="3090924"
^XTMP("XPDT",7814,"^DD",212.8,212.8,0)="FIELD^^2^3"
^XTMP("XPDT",7814,"^DD",212.8,212.8,0,"DDA")="N"
^XTMP("XPDT",7814,"^DD",212.8,212.8,0,"DT")="3090619"
^XTMP("XPDT",7814,"^DD",212.8,212.8,0,"ID",2)="W:$D(^(1)) ""   "",$P(^(1),U,1)"
^XTMP("XPDT",7814,"^DD",212.8,212.8,0,"IX","B",212.8,.01)=""
^XTMP("XPDT",7814,"^DD",212.8,212.8,0,"NM","VANOD UNIT TYPES")=""
^XTMP("XPDT",7814,"^DD",212.8,212.8,0,"PT",211.4,.6)=""
^XTMP("XPDT",7814,"^DD",212.8,212.8,.01,0)="UNIT TYPE NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X"
^XTMP("XPDT",7814,"^DD",212.8,212.8,.01,1,0)="^.1"
^XTMP("XPDT",7814,"^DD",212.8,212.8,.01,1,1,0)="212.8^B"
^XTMP("XPDT",7814,"^DD",212.8,212.8,.01,1,1,1)="S ^NURSF(212.8,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7814,"^DD",212.8,212.8,.01,1,1,2)="K ^NURSF(212.8,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7814,"^DD",212.8,212.8,.01,3)="Answer must be 3-30 characters in length."
^XTMP("XPDT",7814,"^DD",212.8,212.8,.01,21,0)="^.001^2^2^3090708^^"
^XTMP("XPDT",7814,"^DD",212.8,212.8,.01,21,1,0)="The Unit Type Name is a unit name or group that accurately represents 50% "
^XTMP("XPDT",7814,"^DD",212.8,212.8,.01,21,2,0)="or greater of the patient population or group activity."
^XTMP("XPDT",7814,"^DD",212.8,212.8,.01,"DT")="3090708"
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,0)="UNIT TYPE DEFINITION^F^^0;2^K:$L(X)>200!($L(X)<10) X"
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,3)="Answer must be 10-200 characters in length."
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,21,0)="^^8^8^3090708^"
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,21,1,0)="The Unit Type Definition is the explanatory text describing the Unit Type."
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,21,2,0)="The definition includes the units that fall within the Unit Type."
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,21,3,0)=" "
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,21,4,0)="For example:"
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,21,5,0)="A Unit Type is MEDICAL."
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,21,6,0)=" "
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,21,7,0)="The MEDICAL Unit Type Definition includes the following units:"
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,21,8,0)="Internal medicine, family practice, and cardiology."
^XTMP("XPDT",7814,"^DD",212.8,212.8,1,"DT")="3090708"
^XTMP("XPDT",7814,"^DD",212.8,212.8,2,0)="SETTING^F^^1;1^K:$L(X)>30!($L(X)<3) X"
^XTMP("XPDT",7814,"^DD",212.8,212.8,2,1,0)="^.1^^0"
^XTMP("XPDT",7814,"^DD",212.8,212.8,2,3)="Answer must be 3-30 characters in length."
^XTMP("XPDT",7814,"^DD",212.8,212.8,2,21,0)="^^3^3^3090708^"
^XTMP("XPDT",7814,"^DD",212.8,212.8,2,21,1,0)="The Setting is a high level category which contains several Unit Types."
^XTMP("XPDT",7814,"^DD",212.8,212.8,2,21,2,0)="For example, the Hospital-Acute Setting contains the Critical Care, "
^XTMP("XPDT",7814,"^DD",212.8,212.8,2,21,3,0)="Mental Health Acute, and Surgical Unit Types."
^XTMP("XPDT",7814,"^DD",212.8,212.8,2,"DT")="3090619"
^XTMP("XPDT",7814,"^DIC",212.8,212.8,0)="VANOD UNIT TYPES^212.8"
^XTMP("XPDT",7814,"^DIC",212.8,212.8,0,"GL")="^NURSF(212.8,"
^XTMP("XPDT",7814,"^DIC",212.8,212.8,"%D",0)="^^5^5^3090708^"
^XTMP("XPDT",7814,"^DIC",212.8,212.8,"%D",1,0)="The VANOD UNIT TYPES file contains Unit Types that are used to "
^XTMP("XPDT",7814,"^DIC",212.8,212.8,"%D",2,0)="categorize nursing locations."
^XTMP("XPDT",7814,"^DIC",212.8,212.8,"%D",3,0)=" "
^XTMP("XPDT",7814,"^DIC",212.8,212.8,"%D",4,0)="This file is exported with data and the contents of the file should not be"
^XTMP("XPDT",7814,"^DIC",212.8,212.8,"%D",5,0)="locally modified."
^XTMP("XPDT",7814,"^DIC",212.8,"B","VANOD UNIT TYPES",212.8)=""
^XTMP("XPDT",7815)="1"
^XTMP("XPDT",7815,"BLD",8251,0)="PRS*4.0*126^PAID^0^3100308^y"
^XTMP("XPDT",7815,"BLD",8251,4,0)="^9.64PA^456^9"
^XTMP("XPDT",7815,"BLD",8251,4,450,0)="450"
^XTMP("XPDT",7815,"BLD",8251,4,450,2,0)="^9.641^450.01^1"
^XTMP("XPDT",7815,"BLD",8251,4,450,2,450.01,0)="USER PREFERENCES  (sub-file)"
^XTMP("XPDT",7815,"BLD",8251,4,450,2,450.01,1,0)="^9.6411^1^2"
^XTMP("XPDT",7815,"BLD",8251,4,450,2,450.01,1,.01,0)="USER PREFERENCES"
^XTMP("XPDT",7815,"BLD",8251,4,450,2,450.01,1,1,0)="VALUE"
^XTMP("XPDT",7815,"BLD",8251,4,450,222)="y^y^p^^^^n^^n"
^XTMP("XPDT",7815,"BLD",8251,4,450,224)=""
^XTMP("XPDT",7815,"BLD",8251,4,451,0)="451"
^XTMP("XPDT",7815,"BLD",8251,4,451,222)="y^y^f^^^^n"
^XTMP("XPDT",7815,"BLD",8251,4,451.1,0)="451.1"
^XTMP("XPDT",7815,"BLD",8251,4,451.1,222)="y^y^f^^n^^y^o^n"
^XTMP("XPDT",7815,"BLD",8251,4,451.4,0)="451.4"
^XTMP("XPDT",7815,"BLD",8251,4,451.4,222)="y^y^f^^n^^y^o^n"
^XTMP("XPDT",7815,"BLD",8251,4,451.5,0)="451.5"
^XTMP("XPDT",7815,"BLD",8251,4,451.5,222)="y^y^f^^n^^y^o^n"
^XTMP("XPDT",7815,"BLD",8251,4,451.6,0)="451.6"
^XTMP("XPDT",7815,"BLD",8251,4,451.6,222)="y^y^f^^n^^y^o^n"
^XTMP("XPDT",7815,"BLD",8251,4,451.7,0)="451.7"
^XTMP("XPDT",7815,"BLD",8251,4,451.7,222)="y^y^f^^^^n"
^XTMP("XPDT",7815,"BLD",8251,4,455.5,0)="455.5"
^XTMP("XPDT",7815,"BLD",8251,4,455.5,222)="y^y^f^^^^n"
^XTMP("XPDT",7815,"BLD",8251,4,456,0)="456"
^XTMP("XPDT",7815,"BLD",8251,4,456,222)="y^y^f^^^^n"
^XTMP("XPDT",7815,"BLD",8251,4,"APDD",450,450.01)=""
^XTMP("XPDT",7815,"BLD",8251,4,"APDD",450,450.01,.01)=""
^XTMP("XPDT",7815,"BLD",8251,4,"APDD",450,450.01,1)=""
^XTMP("XPDT",7815,"BLD",8251,4,"B",450,450)=""
^XTMP("XPDT",7815,"BLD",8251,4,"B",451,451)=""
^XTMP("XPDT",7815,"BLD",8251,4,"B",451.1,451.1)=""
^XTMP("XPDT",7815,"BLD",8251,4,"B",451.4,451.4)=""
^XTMP("XPDT",7815,"BLD",8251,4,"B",451.5,451.5)=""
^XTMP("XPDT",7815,"BLD",8251,4,"B",451.6,451.6)=""
^XTMP("XPDT",7815,"BLD",8251,4,"B",451.7,451.7)=""
^XTMP("XPDT",7815,"BLD",8251,4,"B",455.5,455.5)=""
^XTMP("XPDT",7815,"BLD",8251,4,"B",456,456)=""
^XTMP("XPDT",7815,"BLD",8251,6)="3^"
^XTMP("XPDT",7815,"BLD",8251,6.3)="3"
^XTMP("XPDT",7815,"BLD",8251,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.4,0)=".4"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.4,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.4,"NM",1,0)="PRSN POC DIVISION PARAMS    FILE #456^456^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.4,"NM","B","PRSN POC DIVISION PARAMS    FILE #456",1)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",.401,0)=".401"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.402,0)=".402"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,0)=".403"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,"NM",0)="^9.68A^5^5"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,"NM",1,0)="PRSN DAILY TIME RECORDS A/E/D    FILE #451^451^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,"NM",2,0)="PRSN EDIT PAID PARAMETERS    FILE #456^456^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,"NM",3,0)="PRSN EDIT TL POC    FILE #455.5^455.5^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,"NM",4,0)="PRSA TL EDIT    FILE #455.5^455.5^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,"NM",5,0)="PRSA TL DISP    FILE #455.5^455.5^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,"NM","B","PRSA TL DISP    FILE #455.5",5)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,"NM","B","PRSA TL EDIT    FILE #455.5",4)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,"NM","B","PRSN DAILY TIME RECORDS A/E/D    FILE #451",1)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,"NM","B","PRSN EDIT PAID PARAMETERS    FILE #456",2)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",.403,"NM","B","PRSN EDIT TL POC    FILE #455.5",3)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",.5,0)=".5"
^XTMP("XPDT",7815,"BLD",8251,"KRN",.84,0)=".84"
^XTMP("XPDT",7815,"BLD",8251,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7815,"BLD",8251,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",0)="^9.68A^43^40"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",1,0)="PRSN9A^^0^B4965598"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",2,0)="PRSN9B^^0^B2695134"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",3,0)="PRSNAA01^^0^B39483493"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",4,0)="PRSNAC01^^0^B18448615"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",5,0)="PRSNCAPE^^0^B30985593"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",6,0)="PRSNCGP^^0^B69640450"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",7,0)="PRSNCGR^^0^B58780397"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",8,0)="PRSNCGR1^^0^B26095132"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",10,0)="PRSNCR1^^0^B11732790"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",11,0)="PRSNCTL^^0^B1882450"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",12,0)="PRSNDPC1^^0^B15362668"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",13,0)="PRSNEC^^0^B12996461"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",14,0)="PRSNEE^^0^B49176241"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",15,0)="PRSNEE0^^0^B14417132"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",16,0)="PRSNEETP^^0^B12521407"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",17,0)="PRSNRAD0^^0^B13777762"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",18,0)="PRSNRAS0^^0^B11143956"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",19,0)="PRSNRAS1^^0^B19319519"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",20,0)="PRSNREV0^^0^B6787176"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",21,0)="PRSNREV1^^0^B10232074"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",22,0)="PRSNRIA^^0^B6243918"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",23,0)="PRSNRMM^^0^B99740768"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",24,0)="PRSNRMM1^^0^B8074438"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",25,0)="PRSNRND0^^0^B7645160"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",26,0)="PRSNRND1^^0^B15584856"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",27,0)="PRSNRSM0^^0^B7471138"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",28,0)="PRSNRSM1^^0^B16647766"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",29,0)="PRSNRUT0^^0^B17110221"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",30,0)="PRSNRUT1^^0^B4856992"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",33,0)="PRSNUT01^^0^B37810066"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",34,0)="PRSNUT02^^0^B65564202"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",35,0)="PRSNUT03^^0^B46685593"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",36,0)="PRSNUT04^^0^B44893532"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",37,0)="PRSNUT05^^0^B7964688"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",38,0)="PRSATIM^^0^B4486909"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",39,0)="PRSU1A^^0^B13822383"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",40,0)="PRSU1B^^0^B11305691"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",41,0)="PRSU1B1^^0^B2203162"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",42,0)="PRSADP1^^0^B11335770"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM",43,0)="PRSATP^^0^B32294391"
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSADP1",42)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSATIM",38)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSATP",43)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSN9A",1)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSN9B",2)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNAA01",3)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNAC01",4)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNCAPE",5)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNCGP",6)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNCGR",7)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNCGR1",8)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNCR1",10)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNCTL",11)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNDPC1",12)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNEC",13)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNEE",14)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNEE0",15)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNEETP",16)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRAD0",17)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRAS0",18)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRAS1",19)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNREV0",20)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNREV1",21)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRIA",22)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRMM",23)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRMM1",24)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRND0",25)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRND1",26)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRSM0",27)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRSM1",28)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRUT0",29)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNRUT1",30)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNUT01",33)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNUT02",34)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNUT03",35)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNUT04",36)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSNUT05",37)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSU1A",39)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSU1B",40)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",9.8,"NM","B","PRSU1B1",41)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,0)="19"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",0)="^9.68A^42^41"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",1,0)="PRSN APPROV CORR POC^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",2,0)="PRSN APPROV POC PAYPD^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",3,0)="PRSN COORDINATOR MENU^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",4,0)="PRSN COORDINATOR REPORTS MENU^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",5,0)="PRSN CORRECT RELEASED POC DATA^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",6,0)="PRSN DAP REPORTS MENU^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",7,0)="PRSN DATA APPROVAL MENU^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",8,0)="PRSN DATA ENTRY MENU^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",9,0)="PRSN DEL POC RECORD^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",10,0)="PRSN DEP REPORTS MENU^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",11,0)="PRSN ENTER NURSE POC DATA^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",12,0)="PRSN NURSE MENU^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",14,0)="PRSN POC APPLICATION PARAMETER^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",15,0)="PRSN POC CORRECT RELEASE^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",16,0)="PRSN POC RELEASE^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",17,0)="PRSN POC TYPE OF TIME^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",18,0)="PRSN RET APPROVED POC RECORD^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",19,0)="PRSN SHOW POC SYSTEM SETUP^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",20,0)="PRSN SITE MAINTENANCE COORD^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",21,0)="PRSN TL POC^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",22,0)="PRSN TOGGLE TK POC POST^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",23,0)="PRSN VANOD EXTRACT^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",24,0)="PRSNR ACTIVITY BY GROUP-COORD^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",25,0)="PRSNR ACTIVITY BY GROUP-DAP^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",26,0)="PRSNR ACTIVITY BY GROUP-DEP^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",27,0)="PRSNR EDU VALIDATION-COORD^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",28,0)="PRSNR INDIV ACTIVITY-COORD^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",29,0)="PRSNR INDIV ACTIVITY-NURSE^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",30,0)="PRSNR INDIVIDUAL ACTIVITY-DAP^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",31,0)="PRSNR INDIVIDUAL ACTIVITY-DEP^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",32,0)="PRSNR MISMATCHES ETA POC-COORD^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",33,0)="PRSNR MISMATCHES ETA POC-DAP^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",34,0)="PRSNR MISMATCHES ETA POC-DEP^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",35,0)="PRSNR MISMATCHES ETA POC-NURSE^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",36,0)="PRSNR NONDIR CARE SUMM-COORD^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",37,0)="PRSNR NONDIR CARE SUMM-DAP^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",38,0)="PRSNR NURSE POSITION AND PAY^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",39,0)="PRSNR SKILL MIX GRP SUMM-COORD^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",40,0)="PRSNR SKILL MIX GRP SUMM-DAP^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",41,0)="PRSA TK MENU^^2"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM",42,0)="PRSRFI-PAID SYSTEM REPORTS^^2"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSA TK MENU",41)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN APPROV CORR POC",1)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN APPROV POC PAYPD",2)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN COORDINATOR MENU",3)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN COORDINATOR REPORTS MENU",4)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN CORRECT RELEASED POC DATA",5)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN DAP REPORTS MENU",6)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN DATA APPROVAL MENU",7)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN DATA ENTRY MENU",8)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN DEL POC RECORD",9)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN DEP REPORTS MENU",10)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN ENTER NURSE POC DATA",11)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN NURSE MENU",12)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN POC APPLICATION PARAMETER",14)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN POC CORRECT RELEASE",15)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN POC RELEASE",16)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN POC TYPE OF TIME",17)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN RET APPROVED POC RECORD",18)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN SHOW POC SYSTEM SETUP",19)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN SITE MAINTENANCE COORD",20)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN TL POC",21)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN TOGGLE TK POC POST",22)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSN VANOD EXTRACT",23)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR ACTIVITY BY GROUP-COORD",24)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR ACTIVITY BY GROUP-DAP",25)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR ACTIVITY BY GROUP-DEP",26)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR EDU VALIDATION-COORD",27)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR INDIV ACTIVITY-COORD",28)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR INDIV ACTIVITY-NURSE",29)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR INDIVIDUAL ACTIVITY-DAP",30)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR INDIVIDUAL ACTIVITY-DEP",31)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR MISMATCHES ETA POC-COORD",32)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR MISMATCHES ETA POC-DAP",33)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR MISMATCHES ETA POC-DEP",34)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR MISMATCHES ETA POC-NURSE",35)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR NONDIR CARE SUMM-COORD",36)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR NONDIR CARE SUMM-DAP",37)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR NURSE POSITION AND PAY",38)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR SKILL MIX GRP SUMM-COORD",39)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSNR SKILL MIX GRP SUMM-DAP",40)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19,"NM","B","PRSRFI-PAID SYSTEM REPORTS",42)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19.1,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19.1,"NM",1,0)="PRSN DEP^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",19.1,"NM","B","PRSN DEP",1)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",101,0)="101"
^XTMP("XPDT",7815,"BLD",8251,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7815,"BLD",8251,"KRN",771,0)="771"
^XTMP("XPDT",7815,"BLD",8251,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7815,"BLD",8251,"KRN",870,0)="870"
^XTMP("XPDT",7815,"BLD",8251,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7815,"BLD",8251,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7815,"BLD",8251,"KRN",8994,0)="8994"
^XTMP("XPDT",7815,"BLD",8251,"KRN",8994,"NM",0)="^9.68A^2^2"
^XTMP("XPDT",7815,"BLD",8251,"KRN",8994,"NM",1,0)="PRSN NURS LOCATION EXTRACTION^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",8994,"NM",2,0)="PRSN POC DAILY TIME EXTRACTION^^0"
^XTMP("XPDT",7815,"BLD",8251,"KRN",8994,"NM","B","PRSN NURS LOCATION EXTRACTION",1)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN",8994,"NM","B","PRSN POC DAILY TIME EXTRACTION",2)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",.4,.4)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",.401,.401)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",.402,.402)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",.403,.403)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",.5,.5)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",.84,.84)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",19,19)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",101,101)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",771,771)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",870,870)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7815,"BLD",8251,"KRN","B",8994,8994)=""
^XTMP("XPDT",7815,"BLD",8251,"QUES",0)="^9.62^^"
^XTMP("XPDT",7815,"DATA",451.1,1,0)="* 61 0610 88^DIRECT CARE RN^RN STAFF, INPT ACUTE/INT^DC"
^XTMP("XPDT",7815,"DATA",451.1,2,0)="* 61 0610 Q1^DIRECT CARE RN^RN STAFF, OUTPT^DC"
^XTMP("XPDT",7815,"DATA",451.1,3,0)="* 61 0610 Q2^DIRECT CARE RN^RN STAFF, MIXED INPT/OUTPT^DC"
^XTMP("XPDT",7815,"DATA",451.1,4,0)="* 61 0610 Q3^DIRECT CARE RN^RN TELEPHONE TRIAGE^DC"
^XTMP("XPDT",7815,"DATA",451.1,5,0)="* 61 0610 Q4^DIRECT CARE RN^RN CLINICAL NURSE LEADER^DC"
^XTMP("XPDT",7815,"DATA",451.1,6,0)="* 61 0610 Q5^DIRECT CARE RN^RN TRAVEL NURSE CORPS^DC"
^XTMP("XPDT",7815,"DATA",451.1,7,0)="* 61 0610 Q6^DIRECT CARE RN^RN STAFF, INPT CLC CONTINUING CARE^DC"
^XTMP("XPDT",7815,"DATA",451.1,8,0)="* 65 0620 *^DIRECT CARE LPN & LVN^^DC"
^XTMP("XPDT",7815,"DATA",451.1,9,0)="* 66 0621 *^DIRECT CARE NURSING AIDES^^DC"
^XTMP("XPDT",7815,"DATA",451.1,10,0)="8241 31 0640 *^DIRECT CARE HEALTH TECHS & AIDES^^DC"
^XTMP("XPDT",7815,"DATA",451.1,11,0)="* 61 0610 M1^HOSPITAL SUPPORT RN^RN ADMISSIONS/DISCHARGE COORDINATOR^HS"
^XTMP("XPDT",7815,"DATA",451.1,12,0)="* 61 0610 M2^HOSPITAL SUPPORT RN^RN CASE MANAGER/CARE COORDINATOR^HS"
^XTMP("XPDT",7815,"DATA",451.1,13,0)="* 61 0610 M3^HOSPITAL SUPPORT RN^RN OEF-OIF CASE MANAGER^HS"
^XTMP("XPDT",7815,"DATA",451.1,14,0)="* 61 0610 M4^HOSPITAL SUPPORT RN^RN FEDERAL RECOVERY COORDINATOR^HS"
^XTMP("XPDT",7815,"DATA",451.1,15,0)="* 61 0610 S1^HOSPITAL SUPPORT RN^RN POLYTRAUMA REHAB LIAISON^HS"
^XTMP("XPDT",7815,"DATA",451.1,16,0)="* 61 0610 85^HOSPITAL SUPPORT RN^RN EDUCATOR^HS"
^XTMP("XPDT",7815,"DATA",451.1,17,0)="* 61 0610 74^HOSPITAL SUPPORT RN^RN INFECTION CONTROL^HS"
^XTMP("XPDT",7815,"DATA",451.1,18,0)="* 61 0610 S2^HOSPITAL SUPPORT RN^RN INFORMATICS^HS"
^XTMP("XPDT",7815,"DATA",451.1,19,0)="* 61 0610 77^HOSPITAL SUPPORT RN^RN RESEARCHER W/DOCTORATE^HS"
^XTMP("XPDT",7815,"DATA",451.1,20,0)="* 61 0610 S3^HOSPITAL SUPPORT RN^RN PREVENTION/OCCUP HEALTH^HS"
^XTMP("XPDT",7815,"DATA",451.1,21,0)="* 61 0610 J3^HOSPITAL SUPPORT RN^CLINICAL ANALYST^HS"
^XTMP("XPDT",7815,"DATA",451.1,22,0)="* 61 0610 S4^HOSPITAL SUPPORT RN^RN WOUND CARE SPECIALIST^HS"
^XTMP("XPDT",7815,"DATA",451.1,23,0)="* 61 0610 S5^HOSPITAL SUPPORT RN^RN IV THERAPY^HS"
^XTMP("XPDT",7815,"DATA",451.1,24,0)="* 61 0610 S6^HOSPITAL SUPPORT RN^RN GEN CLIN CONSULTANT^HS"
^XTMP("XPDT",7815,"DATA",451.1,25,0)="* 64 0610 75^NURSE PRACTITIONER^NP, PRIMARY CARE^AP"
^XTMP("XPDT",7815,"DATA",451.1,26,0)="* 64 0610 N1^NURSE PRACTITIONER^NP, LTC^AP"
^XTMP("XPDT",7815,"DATA",451.1,27,0)="* 64 0610 N2^NURSE PRACTITIONER^NP, WOMEN'S HEALTH^AP"
^XTMP("XPDT",7815,"DATA",451.1,28,0)="* 64 0610 N3^NURSE PRACTITIONER^NP, POLYTRAUMA/REHAB^AP"
^XTMP("XPDT",7815,"DATA",451.1,29,0)="* 64 0610 N4^NURSE PRACTITIONER^NP, MENTAL HEALTH/SUD^AP"
^XTMP("XPDT",7815,"DATA",451.1,30,0)="* 64 0610 N5^NURSE PRACTITIONER^NP, OTHER^AP"
^XTMP("XPDT",7815,"DATA",451.1,31,0)="* 67 0610 79^CLINICAL NURSE SPECIALIST^CNS, MED/SURG^AP"
^XTMP("XPDT",7815,"DATA",451.1,32,0)="* 67 0610 N7^CLINICAL NURSE SPECIALIST^CNS, LTC/GERIATRICS^AP"
^XTMP("XPDT",7815,"DATA",451.1,33,0)="* 67 0610 N8^CLINICAL NURSE SPECIALIST^CNS, MH/SUD^AP"
^XTMP("XPDT",7815,"DATA",451.1,34,0)="* 61 0610 80^ADMINISTRATIVE RN^RN NURSE EXECUTIVE^AN"
^XTMP("XPDT",7815,"DATA",451.1,35,0)="* 61 0610 82^ADMINISTRATIVE RN^RN SENIOR LEADERSHIP^AN"
^XTMP("XPDT",7815,"DATA",451.1,36,0)="* 61 0610 71^ADMINISTRATIVE RN^NURSE RECRUITER^AN"
^XTMP("XPDT",7815,"DATA",451.1,37,0)="* 61 0610 86^ADMINISTRATIVE RN^RN SHIFT SUPV^AN"
^XTMP("XPDT",7815,"DATA",451.1,38,0)="* 61 0610 87^ADMINISTRATIVE RN^RN MGR/HEAD NURSE^AN"
^XTMP("XPDT",7815,"DATA",451.1,39,0)="* 61 0610 J4^ADMINISTRATIVE RN^RN ASST MGR/PERM CHARGE^AN"
^XTMP("XPDT",7815,"DATA",451.1,40,0)="* 61 0610 G6^ADMINISTRATIVE RN^RN PROG MGR/COORD^AN"
^XTMP("XPDT",7815,"DATA",451.1,41,0)="* 61 0610 G8^ADMINISTRATIVE RN^RN PROG MGR, NATIONAL FED REC/OEF-OIF^AN"
^XTMP("XPDT",7815,"DATA",451.1,42,0)="* 61 0610 89^ADMINISTRATIVE RN^RN VACO, OTHER^AN"
^XTMP("XPDT",7815,"DATA",451.1,43,0)="* 61 0610 J5^ADMINISTRATIVE RN^RN VISN, OTHER^AN"
^XTMP("XPDT",7815,"DATA",451.1,44,0)="* 61 0610 J6^ADMINISTRATIVE RN^RN PEER ADVOCATE^AN"
^XTMP("XPDT",7815,"DATA",451.1,45,0)="* 61 0610 G7^ADMINISTRATIVE RN^RN ADMINISTRATIVE (OTHER)^AN"
^XTMP("XPDT",7815,"DATA",451.1,46,0)="* 61 0610 G5^ADMINISTRATIVE RN^RN FACILITY ADMIN^AN"
^XTMP("XPDT",7815,"DATA",451.1,47,0)="* 62 0610 F2^ADMINISTRATIVE NURSE TRAINEES^RN ADMINISTRATIVE TRAINEE^AT"
^XTMP("XPDT",7815,"DATA",451.1,48,0)="8241 51 0699 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,49,0)="8241 51 0610 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,50,0)="8241 51 0620 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,51,0)="8241 51 0621 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,52,0)="8241 52 0699 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,53,0)="8241 52 0610 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,54,0)="8241 52 0620 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,55,0)="8241 52 0621 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,56,0)="8241 53 0699 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,57,0)="8241 53 0610 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,58,0)="8241 53 0620 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,59,0)="8241 53 0621 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,60,0)="8241 55 0699 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,61,0)="8241 55 0610 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,62,0)="8241 55 0620 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,63,0)="8241 55 0621 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,64,0)="8241 56 0699 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,65,0)="8241 56 0610 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,66,0)="8241 56 0620 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,67,0)="8241 56 0621 *^STUDENT, TRAINEE, FACULTY^^AT"
^XTMP("XPDT",7815,"DATA",451.1,68,0)="8241 51 0610 T1^STUDENT, TRAINEE, FACULTY^NURSE ACADEMIC AFFILIATION TRAINEE^AT"
^XTMP("XPDT",7815,"DATA",451.1,69,0)="8241 51 0610 K5^STUDENT, TRAINEE, FACULTY^NURSE FELLOW POST DOCTORAL^AT"
^XTMP("XPDT",7815,"DATA",451.1,70,0)="8241 51 0610 T2^STUDENT, TRAINEE, FACULTY^NURSE FELLOW POST MASTERS^AT"
^XTMP("XPDT",7815,"DATA",451.1,71,0)="8241 51 0610 K4^STUDENT, TRAINEE, FACULTY^NURSE FELLOW PRE DOCTORAL^AT"
^XTMP("XPDT",7815,"DATA",451.1,72,0)="8241 61 0610 S7^STUDENT, TRAINEE, FACULTY^RN RESIDENT^AT"
^XTMP("XPDT",7815,"DATA",451.1,73,0)="8241 61 0610 R6^STUDENT, TRAINEE, FACULTY^RN VANA FACULTY^AT"
^XTMP("XPDT",7815,"DATA",451.4,1,0)="AA^AUTHORIZED ABSENCE"
^XTMP("XPDT",7815,"DATA",451.4,1,9,0)="^451.49P^2^2"
^XTMP("XPDT",7815,"DATA",451.4,1,9,1,0)="3^AA"
^XTMP("XPDT",7815,"DATA",451.4,1,9,2,0)="4^CP"
^XTMP("XPDT",7815,"DATA",451.4,2,0)="AD^ADOPTION"
^XTMP("XPDT",7815,"DATA",451.4,2,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,2,9,1,0)="28^AD"
^XTMP("XPDT",7815,"DATA",451.4,3,0)="AL^ANNUAL LEAVE"
^XTMP("XPDT",7815,"DATA",451.4,3,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,3,9,1,0)="2^AL"
^XTMP("XPDT",7815,"DATA",451.4,4,0)="CB^FAMILY CARE & BEREAVEMENT"
^XTMP("XPDT",7815,"DATA",451.4,4,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,4,9,1,0)="27^CB"
^XTMP("XPDT",7815,"DATA",451.4,5,0)="CU^COMP TIME/CREDITHRS USED"
^XTMP("XPDT",7815,"DATA",451.4,5,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,5,9,1,0)="5^CU"
^XTMP("XPDT",7815,"DATA",451.4,6,0)="DL^DONOR LEAVE"
^XTMP("XPDT",7815,"DATA",451.4,6,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,6,9,1,0)="29^DL"
^XTMP("XPDT",7815,"DATA",451.4,7,0)="RL^RESTORED ANNUAL LEAVE"
^XTMP("XPDT",7815,"DATA",451.4,7,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,7,9,1,0)="11^RL"
^XTMP("XPDT",7815,"DATA",451.4,8,0)="RS^RECESS"
^XTMP("XPDT",7815,"DATA",451.4,8,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,8,9,1,0)="30^RS"
^XTMP("XPDT",7815,"DATA",451.4,9,0)="HX^HOLIDAY EXCUSED"
^XTMP("XPDT",7815,"DATA",451.4,9,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,9,9,1,0)="6^HX"
^XTMP("XPDT",7815,"DATA",451.4,10,0)="ML^MILITARY LEAVE"
^XTMP("XPDT",7815,"DATA",451.4,10,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,10,9,1,0)="8^ML"
^XTMP("XPDT",7815,"DATA",451.4,11,0)="SL^SICK LEAVE"
^XTMP("XPDT",7815,"DATA",451.4,11,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,11,9,1,0)="12^SL"
^XTMP("XPDT",7815,"DATA",451.4,12,0)="WP^LEAVE WITHOUT PAY"
^XTMP("XPDT",7815,"DATA",451.4,12,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,12,9,1,0)="15^WP"
^XTMP("XPDT",7815,"DATA",451.4,13,0)="NL^NON-PAY ANNUAL LEAVE"
^XTMP("XPDT",7815,"DATA",451.4,13,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,13,9,1,0)="22^NL"
^XTMP("XPDT",7815,"DATA",451.4,14,0)="NP^NON-PAY"
^XTMP("XPDT",7815,"DATA",451.4,14,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,14,9,1,0)="10^NP"
^XTMP("XPDT",7815,"DATA",451.4,15,0)="WI^WORK INSIDE TOUR"
^XTMP("XPDT",7815,"DATA",451.4,15,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,15,9,1,0)="31^WI"
^XTMP("XPDT",7815,"DATA",451.4,16,0)="WO^WORK OUTSIDE TOUR"
^XTMP("XPDT",7815,"DATA",451.4,16,9,0)="^451.49P^3^3"
^XTMP("XPDT",7815,"DATA",451.4,16,9,1,0)="18^OT"
^XTMP("XPDT",7815,"DATA",451.4,16,9,2,0)="16^CT"
^XTMP("XPDT",7815,"DATA",451.4,16,9,3,0)="19^RG"
^XTMP("XPDT",7815,"DATA",451.4,17,0)="TR^TRAINING (INSIDE TOUR)"
^XTMP("XPDT",7815,"DATA",451.4,17,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,17,9,1,0)="20^TR"
^XTMP("XPDT",7815,"DATA",451.4,18,0)="TV^TRAVEL (INSIDE TOUR)"
^XTMP("XPDT",7815,"DATA",451.4,18,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,18,9,1,0)="21^TV"
^XTMP("XPDT",7815,"DATA",451.4,19,0)="HW^HOLIDAY WORKED (INSIDE TOUR)"
^XTMP("XPDT",7815,"DATA",451.4,19,9,0)="^451.49P^1^1"
^XTMP("XPDT",7815,"DATA",451.4,19,9,1,0)="26^HW"
^XTMP("XPDT",7815,"DATA",451.5,1,0)="ST^Sitter"
^XTMP("XPDT",7815,"DATA",451.5,2,0)="LD^Light duty"
^XTMP("XPDT",7815,"DATA",451.5,3,0)="OR^Orientation"
^XTMP("XPDT",7815,"DATA",451.5,4,0)="ED^Onsite education"
^XTMP("XPDT",7815,"DATA",451.5,5,0)="SI^Systems improvement"
^XTMP("XPDT",7815,"DATA",451.5,6,0)="ND^Nondirect care other"
^XTMP("XPDT",7815,"DATA",451.5,7,0)="DC^Direct care"
^XTMP("XPDT",7815,"DATA",451.6,1,0)="HC^High Census/Acuity"
^XTMP("XPDT",7815,"DATA",451.6,2,0)="EW^Extreme Weather"
^XTMP("XPDT",7815,"DATA",451.6,3,0)="UL^Unplanned Leave"
^XTMP("XPDT",7815,"DATA",451.6,4,0)="OP^Open Positions"
^XTMP("XPDT",7815,"DATA",451.6,5,0)="SN^Sitter Needed"
^XTMP("XPDT",7815,"DATA",451.6,6,0)="UP^Unpredicted Pt Care"
^XTMP("XPDT",7815,"DATA",451.6,7,0)="AO^All Other"
^XTMP("XPDT",7815,"FIA",450)="PAID EMPLOYEE"
^XTMP("XPDT",7815,"FIA",450,0)="^PRSPC("
^XTMP("XPDT",7815,"FIA",450,0,0)="450I"
^XTMP("XPDT",7815,"FIA",450,0,1)="y^y^p^^^^n^^n"
^XTMP("XPDT",7815,"FIA",450,0,10)=""
^XTMP("XPDT",7815,"FIA",450,0,11)=""
^XTMP("XPDT",7815,"FIA",450,0,"RLRO")=""
^XTMP("XPDT",7815,"FIA",450,0,"VR")="4.0^PRS"
^XTMP("XPDT",7815,"FIA",450,450)="1"
^XTMP("XPDT",7815,"FIA",450,450,7.5)=""
^XTMP("XPDT",7815,"FIA",450,450.01)="1"
^XTMP("XPDT",7815,"FIA",450,450.01,.01)=""
^XTMP("XPDT",7815,"FIA",450,450.01,1)=""
^XTMP("XPDT",7815,"FIA",451)="POC DAILY TIME RECORDS"
^XTMP("XPDT",7815,"FIA",451,0)="^PRSN(451,"
^XTMP("XPDT",7815,"FIA",451,0,0)="451"
^XTMP("XPDT",7815,"FIA",451,0,1)="y^y^f^^^^n"
^XTMP("XPDT",7815,"FIA",451,0,10)=""
^XTMP("XPDT",7815,"FIA",451,0,11)=""
^XTMP("XPDT",7815,"FIA",451,0,"RLRO")=""
^XTMP("XPDT",7815,"FIA",451,0,"VR")="4.0^PRS"
^XTMP("XPDT",7815,"FIA",451,451)="0"
^XTMP("XPDT",7815,"FIA",451,451.06)="0"
^XTMP("XPDT",7815,"FIA",451,451.09)="0"
^XTMP("XPDT",7815,"FIA",451,451.99)="0"
^XTMP("XPDT",7815,"FIA",451,451.999)="0"
^XTMP("XPDT",7815,"FIA",451,451.9999)="0"
^XTMP("XPDT",7815,"FIA",451.1)="NURSE ROLE"
^XTMP("XPDT",7815,"FIA",451.1,0)="^PRSN(451.1,"
^XTMP("XPDT",7815,"FIA",451.1,0,0)="451.1I"
^XTMP("XPDT",7815,"FIA",451.1,0,1)="y^y^f^^n^^y^o^n"
^XTMP("XPDT",7815,"FIA",451.1,0,10)=""
^XTMP("XPDT",7815,"FIA",451.1,0,11)=""
^XTMP("XPDT",7815,"FIA",451.1,0,"RLRO")=""
^XTMP("XPDT",7815,"FIA",451.1,0,"VR")="4.0^PRS"
^XTMP("XPDT",7815,"FIA",451.1,451.1)="0"
^XTMP("XPDT",7815,"FIA",451.4)="POC TYPE OF TIME"
^XTMP("XPDT",7815,"FIA",451.4,0)="^PRSN(451.4,"
^XTMP("XPDT",7815,"FIA",451.4,0,0)="451.4I"
^XTMP("XPDT",7815,"FIA",451.4,0,1)="y^y^f^^n^^y^o^n"
^XTMP("XPDT",7815,"FIA",451.4,0,10)=""
^XTMP("XPDT",7815,"FIA",451.4,0,11)=""
^XTMP("XPDT",7815,"FIA",451.4,0,"RLRO")=""
^XTMP("XPDT",7815,"FIA",451.4,0,"VR")="4.0^PRS"
^XTMP("XPDT",7815,"FIA",451.4,451.4)="0"
^XTMP("XPDT",7815,"FIA",451.4,451.49)="0"
^XTMP("XPDT",7815,"FIA",451.5)="TYPE OF WORK"
^XTMP("XPDT",7815,"FIA",451.5,0)="^PRSN(451.5,"
^XTMP("XPDT",7815,"FIA",451.5,0,0)="451.5I"
^XTMP("XPDT",7815,"FIA",451.5,0,1)="y^y^f^^n^^y^o^n"
^XTMP("XPDT",7815,"FIA",451.5,0,10)=""
^XTMP("XPDT",7815,"FIA",451.5,0,11)=""
^XTMP("XPDT",7815,"FIA",451.5,0,"RLRO")=""
^XTMP("XPDT",7815,"FIA",451.5,0,"VR")="4.0^PRS"
^XTMP("XPDT",7815,"FIA",451.5,451.5)="0"
^XTMP("XPDT",7815,"FIA",451.6)="REASON FOR OVERTIME"
^XTMP("XPDT",7815,"FIA",451.6,0)="^PRSN(451.6,"
^XTMP("XPDT",7815,"FIA",451.6,0,0)="451.6I"
^XTMP("XPDT",7815,"FIA",451.6,0,1)="y^y^f^^n^^y^o^n"
^XTMP("XPDT",7815,"FIA",451.6,0,10)=""
^XTMP("XPDT",7815,"FIA",451.6,0,11)=""
^XTMP("XPDT",7815,"FIA",451.6,0,"RLRO")=""
^XTMP("XPDT",7815,"FIA",451.6,0,"VR")="4.0^PRS"
^XTMP("XPDT",7815,"FIA",451.6,451.6)="0"
^XTMP("XPDT",7815,"FIA",451.7)="POC DAILY ACTIVITY EXTRACTION"
^XTMP("XPDT",7815,"FIA",451.7,0)="^PRSN(451.7,"
^XTMP("XPDT",7815,"FIA",451.7,0,0)="451.7"
^XTMP("XPDT",7815,"FIA",451.7,0,1)="y^y^f^^^^n"
^XTMP("XPDT",7815,"FIA",451.7,0,10)=""
^XTMP("XPDT",7815,"FIA",451.7,0,11)=""
^XTMP("XPDT",7815,"FIA",451.7,0,"RLRO")=""
^XTMP("XPDT",7815,"FIA",451.7,0,"VR")="4.0^PRS"
^XTMP("XPDT",7815,"FIA",451.7,451.7)="0"
^XTMP("XPDT",7815,"FIA",455.5)="T&L UNIT"
^XTMP("XPDT",7815,"FIA",455.5,0)="^PRST(455.5,"
^XTMP("XPDT",7815,"FIA",455.5,0,0)="455.5"
^XTMP("XPDT",7815,"FIA",455.5,0,1)="y^y^f^^^^n"
^XTMP("XPDT",7815,"FIA",455.5,0,10)=""
^XTMP("XPDT",7815,"FIA",455.5,0,11)=""
^XTMP("XPDT",7815,"FIA",455.5,0,"RLRO")=""
^XTMP("XPDT",7815,"FIA",455.5,0,"VR")="4.0^PRS"
^XTMP("XPDT",7815,"FIA",455.5,455.5)="0"
^XTMP("XPDT",7815,"FIA",455.5,455.51)="0"
^XTMP("XPDT",7815,"FIA",455.5,455.511)="0"
^XTMP("XPDT",7815,"FIA",455.5,455.512)="0"
^XTMP("XPDT",7815,"FIA",455.5,455.52)="0"
^XTMP("XPDT",7815,"FIA",455.5,455.531)="0"
^XTMP("XPDT",7815,"FIA",456)="PAID PARAMETERS"
^XTMP("XPDT",7815,"FIA",456,0)="^PRST(456,"
^XTMP("XPDT",7815,"FIA",456,0,0)="456P"
^XTMP("XPDT",7815,"FIA",456,0,1)="y^y^f^^^^n"
^XTMP("XPDT",7815,"FIA",456,0,10)=""
^XTMP("XPDT",7815,"FIA",456,0,11)=""
^XTMP("XPDT",7815,"FIA",456,0,"RLRO")=""
^XTMP("XPDT",7815,"FIA",456,0,"VR")="4.0^PRS"
^XTMP("XPDT",7815,"FIA",456,456)="0"
^XTMP("XPDT",7815,"FIA",456,456.05)="0"
^XTMP("XPDT",7815,"IX",451,451,"AA",0)="451^AA^The index is used to release POC Daily Time Records.^MU^^R^IR^W^451.09^^^^^S"
^XTMP("XPDT",7815,"IX",451,451,"AA",.1,0)="^^2^2^3091029^"
^XTMP("XPDT",7815,"IX",451,451,"AA",.1,1,0)="The Release Option will use this index to get the POC Daily"
^XTMP("XPDT",7815,"IX",451,451,"AA",.1,2,0)="Time Records."
^XTMP("XPDT",7815,"IX",451,451,"AA",1)="S ^PRSN(451,""AA"",X(2),DA(1),DA)="""""
^XTMP("XPDT",7815,"IX",451,451,"AA",1.4)="S X=X(1)=""A"""
^XTMP("XPDT",7815,"IX",451,451,"AA",2)="K ^PRSN(451,""AA"",X(2),DA(1),DA)"
^XTMP("XPDT",7815,"IX",451,451,"AA",2.5)="K ^PRSN(451,""AA"")"
^XTMP("XPDT",7815,"IX",451,451,"AA",11.1,0)="^.114IA^2^2"
^XTMP("XPDT",7815,"IX",451,451,"AA",11.1,1,0)="1^F^451.09^1^^1^F"
^XTMP("XPDT",7815,"IX",451,451,"AA",11.1,2,0)="2^F^451.09^4^^2^F"
^XTMP("XPDT",7815,"IX",451,451,"ACA",0)="451^ACA^X-REF contains all daily corrections to released pay periods.^MU^^F^IR^W^451.99^^^^^S"
^XTMP("XPDT",7815,"IX",451,451,"ACA",.1,0)="^^3^3^3091104^"
^XTMP("XPDT",7815,"IX",451,451,"ACA",.1,1,0)="Cross reference contains all approved daily corrections to POC records "
^XTMP("XPDT",7815,"IX",451,451,"ACA",.1,2,0)="for which the pay period has already been released.  The index is sorted "
^XTMP("XPDT",7815,"IX",451,451,"ACA",.1,3,0)="by Division, pay period, nurse and then day number."
^XTMP("XPDT",7815,"IX",451,451,"ACA",1)="S ^PRSN(451,""ACA"",X(1),DA(2),DA(1),DA)="""""
^XTMP("XPDT",7815,"IX",451,451,"ACA",1.4)="S X=X(2)=""A"""
^XTMP("XPDT",7815,"IX",451,451,"ACA",2)="K ^PRSN(451,""ACA"",X(1),DA(2),DA(1),DA)"
^XTMP("XPDT",7815,"IX",451,451,"ACA",2.5)="K ^PRSN(451,""ACA"")"
^XTMP("XPDT",7815,"IX",451,451,"ACA",11.1,0)="^.114IA^2^2"
^XTMP("XPDT",7815,"IX",451,451,"ACA",11.1,1,0)="1^C^^^^1"
^XTMP("XPDT",7815,"IX",451,451,"ACA",11.1,1,1.5)="S X=$P($G(^PRSN(451,DA(2),""E"",DA(1),0)),U,5)"
^XTMP("XPDT",7815,"IX",451,451,"ACA",11.1,2,0)="2^F^451.99^1^^2^F"
^XTMP("XPDT",7815,"IX",451,451,"ACE",0)="451^ACE^x-ref contains entered daily corrections to released pay periods.^MU^^F^IR^W^451.99^^^^^S"
^XTMP("XPDT",7815,"IX",451,451,"ACE",.1,0)="^^3^3^3091123^^"
^XTMP("XPDT",7815,"IX",451,451,"ACE",.1,1,0)="Cross reference contains all ""Entered"" daily corrections to POC records "
^XTMP("XPDT",7815,"IX",451,451,"ACE",.1,2,0)="for which the pay period has already been released.  The index is sorted "
^XTMP("XPDT",7815,"IX",451,451,"ACE",.1,3,0)="by Division, pay period, nurse and then day number."
^XTMP("XPDT",7815,"IX",451,451,"ACE",1)="S ^PRSN(451,""ACE"",X(1),DA(2),DA(1),DA)="""""
^XTMP("XPDT",7815,"IX",451,451,"ACE",1.4)="S X=X(2)=""E"""
^XTMP("XPDT",7815,"IX",451,451,"ACE",2)="K ^PRSN(451,""ACE"",X(1),DA(2),DA(1),DA)"
^XTMP("XPDT",7815,"IX",451,451,"ACE",2.5)="K ^PRSN(451,""ACE"")"
^XTMP("XPDT",7815,"IX",451,451,"ACE",11.1,0)="^.114IA^2^2"
^XTMP("XPDT",7815,"IX",451,451,"ACE",11.1,1,0)="1^C^^^^1"
^XTMP("XPDT",7815,"IX",451,451,"ACE",11.1,1,1.5)="S X=$P($G(^PRSN(451,DA(2),""E"",DA(1),0)),U,5)"
^XTMP("XPDT",7815,"IX",451,451,"ACE",11.1,2,0)="2^F^451.99^1^^^F"
^XTMP("XPDT",7815,"IX",451,451,"ACR",0)="451^ACR^x-ref contains all released corrections^MU^^F^IR^W^451.99^^^^^S"
^XTMP("XPDT",7815,"IX",451,451,"ACR",.1,0)="^^3^3^3091104^"
^XTMP("XPDT",7815,"IX",451,451,"ACR",.1,1,0)="Cross reference contains all ""Released"" daily corrections to POC records "
^XTMP("XPDT",7815,"IX",451,451,"ACR",.1,2,0)="for which the pay period has already been released.  The index is sorted "
^XTMP("XPDT",7815,"IX",451,451,"ACR",.1,3,0)="by Division, pay period, nurse and then day number."
^XTMP("XPDT",7815,"IX",451,451,"ACR",1)="S ^PRSN(451,""ACR"",X(1),DA(2),DA(1),DA)="""""
^XTMP("XPDT",7815,"IX",451,451,"ACR",1.4)="S X=X(2)=""R"""
^XTMP("XPDT",7815,"IX",451,451,"ACR",2)="K ^PRSN(451,""ACR"",X(1),DA(2),DA(1),DA)"
^XTMP("XPDT",7815,"IX",451,451,"ACR",2.5)="K ^PRSN(451,""ACR"")"
^XTMP("XPDT",7815,"IX",451,451,"ACR",11.1,0)="^.114IA^2^2"
^XTMP("XPDT",7815,"IX",451,451,"ACR",11.1,1,0)="1^C^^^^1"
^XTMP("XPDT",7815,"IX",451,451,"ACR",11.1,1,1.5)="S X=$P($G(^PRSN(451,DA(2),""E"",DA(1),0)),U,5)"
^XTMP("XPDT",7815,"IX",451,451,"ACR",11.1,2,0)="2^F^451.99^1^^2^F"
^XTMP("XPDT",7815,"IX",451,451,"ACR",11.1,2,3)=""
^XTMP("XPDT",7815,"IX",451,451,"AE",0)="451^AE^This index is used to find all records for a nurse that need to be approved^MU^^F^IR^W^451.09^^^^^S"
^XTMP("XPDT",7815,"IX",451,451,"AE",.1,0)="^^2^2^3091029^^"
^XTMP("XPDT",7815,"IX",451,451,"AE",.1,1,0)="This is an index of all nurse POC records that have a pay period status "
^XTMP("XPDT",7815,"IX",451,451,"AE",.1,2,0)="of Entered and that need to be approved."
^XTMP("XPDT",7815,"IX",451,451,"AE",1)="S ^PRSN(451,""AE"",DA,DA(1))="""""
^XTMP("XPDT",7815,"IX",451,451,"AE",1.4)="S X=X(1)=""E"""
^XTMP("XPDT",7815,"IX",451,451,"AE",2)="K ^PRSN(451,""AE"",DA,DA(1))"
^XTMP("XPDT",7815,"IX",451,451,"AE",2.5)="K ^PRSN(451,""AE"")"
^XTMP("XPDT",7815,"IX",451,451,"AE",11.1,0)="^.114IA^1^1"
^XTMP("XPDT",7815,"IX",451,451,"AE",11.1,1,0)="1^F^451.09^1^^1^F"
^XTMP("XPDT",7815,"IX",451,451,"AE",11.1,1,3)=""
^XTMP("XPDT",7815,"IX",451,451,"AR",0)="451^AR^ALL RELEASED POC RECORDS^MU^^R^IR^W^451.09^^^^^S"
^XTMP("XPDT",7815,"IX",451,451,"AR",.1,0)="^^1^1^3091029^"
^XTMP("XPDT",7815,"IX",451,451,"AR",.1,1,0)="This index contains only POC records with a pay period status of released."
^XTMP("XPDT",7815,"IX",451,451,"AR",1)="S ^PRSN(451,""AR"",X(2),DA(1),DA)="""""
^XTMP("XPDT",7815,"IX",451,451,"AR",1.4)="S X=X(1)=""R"""
^XTMP("XPDT",7815,"IX",451,451,"AR",2)="K ^PRSN(451,""AR"",X(2),DA(1),DA)"
^XTMP("XPDT",7815,"IX",451,451,"AR",2.5)="K ^PRSN(451,""AR"")"
^XTMP("XPDT",7815,"IX",451,451,"AR",11.1,0)="^.114IA^2^2"
^XTMP("XPDT",7815,"IX",451,451,"AR",11.1,1,0)="1^F^451.09^1^^1^F"
^XTMP("XPDT",7815,"IX",451,451,"AR",11.1,1,3)=""
^XTMP("XPDT",7815,"IX",451,451,"AR",11.1,2,0)="2^F^451.09^4^^2^F"
^XTMP("XPDT",7815,"IX",451,451,"AR",11.1,2,3)=""
^XTMP("XPDT",7815,"IX",451,451,"CS",0)="451^CS^Index of correction status of day # multiple of va nurse.^R^^F^IR^W^451.99^^^^^LS"
^XTMP("XPDT",7815,"IX",451,451,"CS",.1,0)="^^1^1^3090608^"
^XTMP("XPDT",7815,"IX",451,451,"CS",.1,1,0)="This index is used to approve and release all POC corrected data records."
^XTMP("XPDT",7815,"IX",451,451,"CS",1)="S ^PRSN(451,""CS"",$E(X,1,5),DA(2),DA(1),DA)="""""
^XTMP("XPDT",7815,"IX",451,451,"CS",1.4)="S X="",E,A,""[("",""_X_"","")"
^XTMP("XPDT",7815,"IX",451,451,"CS",2)="K ^PRSN(451,""CS"",$E(X,1,5),DA(2),DA(1),DA)"
^XTMP("XPDT",7815,"IX",451,451,"CS",2.4)=""
^XTMP("XPDT",7815,"IX",451,451,"CS",2.5)="K ^PRSN(451,""CS"")"
^XTMP("XPDT",7815,"IX",451,451,"CS",11.1,0)="^.114IA^1^1"
^XTMP("XPDT",7815,"IX",451,451,"CS",11.1,1,0)="1^F^451.99^1^5^1^F"
^XTMP("XPDT",7815,"IX",451,451,"CS",11.1,1,3)=""
^XTMP("XPDT",7815,"IX",451,451.09,"AC",0)="451.09^AC^index allows sorting nurses by division for each pay period^R^^F^IR^I^451.09^^^^^S"
^XTMP("XPDT",7815,"IX",451,451.09,"AC",.1,0)="^^3^3^3090826^"
^XTMP("XPDT",7815,"IX",451,451.09,"AC",.1,1,0)="index will provide the ability to sort nurses by division within each pay "
^XTMP("XPDT",7815,"IX",451,451.09,"AC",.1,2,0)="period and make it possible to quickly find all nurses in a particular "
^XTMP("XPDT",7815,"IX",451,451.09,"AC",.1,3,0)="division."
^XTMP("XPDT",7815,"IX",451,451.09,"AC",1)="S ^PRSN(451,DA(1),""E"",""AC"",X,DA)="""""
^XTMP("XPDT",7815,"IX",451,451.09,"AC",2)="K ^PRSN(451,DA(1),""E"",""AC"",X,DA)"
^XTMP("XPDT",7815,"IX",451,451.09,"AC",2.5)="K ^PRSN(451,DA(1),""E"",""AC"")"
^XTMP("XPDT",7815,"IX",451,451.09,"AC",11.1,0)="^.114IA^1^1"
^XTMP("XPDT",7815,"IX",451,451.09,"AC",11.1,1,0)="1^F^451.09^4^^1^F"
^XTMP("XPDT",7815,"IX",451,451.09,"AC",11.1,1,3)=""
^XTMP("XPDT",7815,"IX",451.4,451.4,"C",0)="451.4^C^Index of ETA Type of Time Code for Lookup and Sorting^R^^F^IR^W^451.49^^^^^LS"
^XTMP("XPDT",7815,"IX",451.4,451.4,"C",1)="S ^PRSN(451.4,""C"",$E(X(1),1,30),$E(X(2),1,2),DA(1),DA)="""""
^XTMP("XPDT",7815,"IX",451.4,451.4,"C",2)="K ^PRSN(451.4,""C"",$E(X(1),1,30),$E(X(2),1,2),DA(1),DA)"
^XTMP("XPDT",7815,"IX",451.4,451.4,"C",2.5)="K ^PRSN(451.4,""C"")"
^XTMP("XPDT",7815,"IX",451.4,451.4,"C",11.1,0)="^.114IA^2^2"
^XTMP("XPDT",7815,"IX",451.4,451.4,"C",11.1,1,0)="1^F^451.49^1^30^1^F^"
^XTMP("XPDT",7815,"IX",451.4,451.4,"C",11.1,1,3)=""
^XTMP("XPDT",7815,"IX",451.4,451.4,"C",11.1,2,0)="2^C^^^2^2^F"
^XTMP("XPDT",7815,"IX",451.4,451.4,"C",11.1,2,1.5)="S X=$P(^PRSN(451.4,DA(1),0),U)"
^XTMP("XPDT",7815,"IX",451.4,451.4,"C",11.1,2,3)=""
^XTMP("XPDT",7815,"IX",455.5,455.5,"AE",0)="455.5^AE^POC Data Entry Personnel^R^^F^IR^W^455.52^^^^^S"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AE",.1,0)="^^2^2^3090710^"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AE",.1,1,0)="This is a whole file index to sort POC DATA ENTRY PERSONNEL by the T&L"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AE",.1,2,0)="Units for which they are responsible."
^XTMP("XPDT",7815,"IX",455.5,455.5,"AE",1)="S ^PRST(455.5,""AE"",X,DA(1),DA)="""""
^XTMP("XPDT",7815,"IX",455.5,455.5,"AE",2)="K ^PRST(455.5,""AE"",X,DA(1),DA)"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AE",2.5)="K ^PRST(455.5,""AE"")"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AE",11.1,0)="^.114IA^1^1"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AE",11.1,1,0)="1^F^455.52^.01^^1^F"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AR",0)="455.5^AR^POC Data Approval Personnel^R^^F^IR^W^455.531^^^^^S"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AR",.1,0)="^^2^2^3090710^"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AR",.1,1,0)="This is a whole file index to sort POC DATA APPROVAL PERSONNEL by the T&L"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AR",.1,2,0)="Units for which they are responsible."
^XTMP("XPDT",7815,"IX",455.5,455.5,"AR",1)="S ^PRST(455.5,""AR"",X,DA(1),DA)="""""
^XTMP("XPDT",7815,"IX",455.5,455.5,"AR",2)="K ^PRST(455.5,""AR"",X,DA(1),DA)"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AR",2.5)="K ^PRST(455.5,""AR"")"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AR",11.1,0)="^.114IA^1^1"
^XTMP("XPDT",7815,"IX",455.5,455.5,"AR",11.1,1,0)="1^F^455.531^.01^^1^F"
^XTMP("XPDT",7815,"IX",456,456.05,"C",0)="456.05^C^Index provides a quick lookup of the access parameter for a given pay period^R^^R^IR^I^456.05^^^^^LS"
^XTMP("XPDT",7815,"IX",456,456.05,"C",.1,0)="^^3^3^3090805^"
^XTMP("XPDT",7815,"IX",456,456.05,"C",.1,1,0)="This index provides a lookup to determine what the access parameter was "
^XTMP("XPDT",7815,"IX",456,456.05,"C",.1,2,0)="set to for a given pay period.  Using reverse $Order from the pay period "
^XTMP("XPDT",7815,"IX",456,456.05,"C",.1,3,0)="of concern one can find the parameter setting that is in effect."
^XTMP("XPDT",7815,"IX",456,456.05,"C",1)="S ^PRST(456,DA(1),1,""C"",$E(X(1),1,30),$E(X(2),1,1),DA)="""""
^XTMP("XPDT",7815,"IX",456,456.05,"C",2)="K ^PRST(456,DA(1),1,""C"",$E(X(1),1,30),$E(X(2),1,1),DA)"
^XTMP("XPDT",7815,"IX",456,456.05,"C",2.5)="K ^PRST(456,DA(1),1,""C"")"
^XTMP("XPDT",7815,"IX",456,456.05,"C",11.1,0)="^.114IA^2^2"
^XTMP("XPDT",7815,"IX",456,456.05,"C",11.1,1,0)="1^F^456.05^.01^30^1^F"
^XTMP("XPDT",7815,"IX",456,456.05,"C",11.1,1,3)=""
^XTMP("XPDT",7815,"IX",456,456.05,"C",11.1,2,0)="2^F^456.05^1^1^2^F"
^XTMP("XPDT",7815,"IX",456,456.05,"C",11.1,2,3)=""
^XTMP("XPDT",7815,"KRN",.4,2839,-1)="0^1"
^XTMP("XPDT",7815,"KRN",.4,2839,0)="PRSN POC DIVISION PARAMS^3090820.1036^@^456^^@^3091211"
^XTMP("XPDT",7815,"KRN",.4,2839,"DXS",1,9.2)="S I(0,0)=$G(D0),DIP(1)=$S($D(^PRST(456,D0,0)):^(0),1:""""),D0=$P(DIP(1),U,1) S:'D0!'$D(^DIC(4,+D0,0)) D0=-1 S DIP(101)=$S($D(^DIC(4,D0,99)):^(99),1:"""")"
^XTMP("XPDT",7815,"KRN",.4,2839,"F",2)="0~.01~X DXS(1,9.2) S X=$P(DIP(101),U,1) S D0=I(0,0) W X K DIP;Z;""INSTITUTION:STATION""~5,.01~5,1~"
^XTMP("XPDT",7815,"KRN",.4,2839,"H")="PAID PARAMETERS LIST"
^XTMP("XPDT",7815,"KRN",.403,20,-1)="0^4"
^XTMP("XPDT",7815,"KRN",.403,20,0)="PRSA TL EDIT^^^^2920207^^^455.5^0^0^1"
^XTMP("XPDT",7815,"KRN",.403,20,40,0)="^.4031I^4^4"
^XTMP("XPDT",7815,"KRN",.403,20,40,1,0)="1^^1,1^1^1^0"
^XTMP("XPDT",7815,"KRN",.403,20,40,1,1)="Page 1"
^XTMP("XPDT",7815,"KRN",.403,20,40,1,40,0)="^.4032PI^75^1"
^XTMP("XPDT",7815,"KRN",.403,20,40,1,40,75,0)="PRSA TL DISP^1^1,1^e"
^XTMP("XPDT",7815,"KRN",.403,20,40,2,0)="1.1^^11,10^^^1^15,70"
^XTMP("XPDT",7815,"KRN",.403,20,40,2,1)="Subpage 1.1"
^XTMP("XPDT",7815,"KRN",.403,20,40,2,40,0)="^.4032PI^76^1"
^XTMP("XPDT",7815,"KRN",.403,20,40,2,40,76,0)="PRSA TL ED1^1^3,3^e"
^XTMP("XPDT",7815,"KRN",.403,20,40,3,0)="1.2^^11,10^^^1^17,70"
^XTMP("XPDT",7815,"KRN",.403,20,40,3,1)="Subpage 1.2"
^XTMP("XPDT",7815,"KRN",.403,20,40,3,40,0)="^.4032PI^77^1"
^XTMP("XPDT",7815,"KRN",.403,20,40,3,40,77,0)="PRSA TL ED2^1^3,3^e"
^XTMP("XPDT",7815,"KRN",.403,20,40,4,0)="1.3^^13,10^^^1^17,70"
^XTMP("XPDT",7815,"KRN",.403,20,40,4,1)="Subpage 1.3"
^XTMP("XPDT",7815,"KRN",.403,20,40,4,40,0)="^.4032PI^88^1"
^XTMP("XPDT",7815,"KRN",.403,20,40,4,40,88,0)="PRSA TL ED3^1^3,3^e"
^XTMP("XPDT",7815,"KRN",.403,21,-1)="0^5"
^XTMP("XPDT",7815,"KRN",.403,21,0)="PRSA TL DISP^^^^2920207^^^455.5^1^0^1"
^XTMP("XPDT",7815,"KRN",.403,21,40,0)="^.4031I^1^1"
^XTMP("XPDT",7815,"KRN",.403,21,40,1,0)="1^^1,1^^^0"
^XTMP("XPDT",7815,"KRN",.403,21,40,1,1)="Page 1"
^XTMP("XPDT",7815,"KRN",.403,21,40,1,40,0)="^.4032PI^75^1"
^XTMP("XPDT",7815,"KRN",.403,21,40,1,40,75,0)="PRSA TL DISP^1^1,1^d"
^XTMP("XPDT",7815,"KRN",.403,134,-1)="0^1"
^XTMP("XPDT",7815,"KRN",.403,134,0)="PRSN DAILY TIME RECORDS A/E/D^@^@^^3090601.0925^^^451^0^0^1"
^XTMP("XPDT",7815,"KRN",.403,134,12)=""
^XTMP("XPDT",7815,"KRN",.403,134,14)=""
^XTMP("XPDT",7815,"KRN",.403,134,15,0)="^^1^1^3091130^^^"
^XTMP("XPDT",7815,"KRN",.403,134,15,1,0)="The Form is used to add/edit/delete POC data."
^XTMP("XPDT",7815,"KRN",.403,134,20)=""
^XTMP("XPDT",7815,"KRN",.403,134,40,0)="^.4031I^3^3"
^XTMP("XPDT",7815,"KRN",.403,134,40,1,0)="1^^1,1"
^XTMP("XPDT",7815,"KRN",.403,134,40,1,1)="Page 1"
^XTMP("XPDT",7815,"KRN",.403,134,40,1,12)=""
^XTMP("XPDT",7815,"KRN",.403,134,40,1,40,0)="^.4032IP^488^2"
^XTMP("XPDT",7815,"KRN",.403,134,40,1,40,488,0)="TIME SEGMENT^2^8,1^e"
^XTMP("XPDT",7815,"KRN",.403,134,40,1,40,488,2)="10^AC^n^^^"
^XTMP("XPDT",7815,"KRN",.403,134,40,1,40,488,11)=""
^XTMP("XPDT",7815,"KRN",.403,134,40,1,40,488,12)=""
^XTMP("XPDT",7815,"KRN",.403,134,40,1,40,497,0)="HEADER OPTION, PP & DATE ^1^1,1^e"
^XTMP("XPDT",7815,"KRN",.403,134,40,1,40,497,11)=""
^XTMP("XPDT",7815,"KRN",.403,134,40,2,0)="1.1^^8,21^^^1^15,75"
^XTMP("XPDT",7815,"KRN",.403,134,40,2,1)="Page 1.1^"
^XTMP("XPDT",7815,"KRN",.403,134,40,2,11)=""
^XTMP("XPDT",7815,"KRN",.403,134,40,2,12)=""
^XTMP("XPDT",7815,"KRN",.403,134,40,2,15,0)="^^2^2^3091209^"
^XTMP("XPDT",7815,"KRN",.403,134,40,2,15,1,0)="If the type of time is OT/CT/RG then this pop-out page will be invoked"
^XTMP("XPDT",7815,"KRN",.403,134,40,2,15,2,0)="enter the Voluntary/Mandatory and the reason of OT/CT/RG."
^XTMP("XPDT",7815,"KRN",.403,134,40,2,40,0)="^.4032IP^504^1"
^XTMP("XPDT",7815,"KRN",.403,134,40,2,40,504,0)="POC Type of Time^1^2,2^e"
^XTMP("XPDT",7815,"KRN",.403,134,40,2,40,504,12)="S DDSBR=$S($$GET^DDSVAL(DIE,.DA,6)="""":2,$$GET^DDSVAL(DIE,.DA,7)="""":3,1:"""")"
^XTMP("XPDT",7815,"KRN",.403,134,40,3,0)="1.5^^8,21^^^1^15,75"
^XTMP("XPDT",7815,"KRN",.403,134,40,3,1)="Page 1.5"
^XTMP("XPDT",7815,"KRN",.403,134,40,3,15,0)="^^3^3^3091019^^"
^XTMP("XPDT",7815,"KRN",.403,134,40,3,15,1,0)="If the primary tour or the secondary is a 2-day tour and the time segment "
^XTMP("XPDT",7815,"KRN",.403,134,40,3,15,2,0)="does not contain the mid-night then this pop-out page will be invoked for"
^XTMP("XPDT",7815,"KRN",.403,134,40,3,15,3,0)="entering the day # of the start time."
^XTMP("XPDT",7815,"KRN",.403,134,40,3,40,0)="^.4032IP^509^1"
^XTMP("XPDT",7815,"KRN",.403,134,40,3,40,509,0)="POC START TIME DAY #^1^2,2^e"
^XTMP("XPDT",7815,"KRN",.403,136,-1)="0^2"
^XTMP("XPDT",7815,"KRN",.403,136,0)="PRSN EDIT PAID PARAMETERS^@^@^^3090623.111^^^456^0^0^1"
^XTMP("XPDT",7815,"KRN",.403,136,40,0)="^.4031I^2^2"
^XTMP("XPDT",7815,"KRN",.403,136,40,1,0)="1^^1,1"
^XTMP("XPDT",7815,"KRN",.403,136,40,1,1)="Page 1"
^XTMP("XPDT",7815,"KRN",.403,136,40,1,40,0)="^.4032IP^503^2"
^XTMP("XPDT",7815,"KRN",.403,136,40,1,40,502,0)="PRSN PAID PARAM HDR^1^1,1^d"
^XTMP("XPDT",7815,"KRN",.403,136,40,1,40,503,0)="PRSN PAID PARAM EDIT^2^5,1^e"
^XTMP("XPDT",7815,"KRN",.403,136,40,2,0)="1.1^^10,1^^^1^14,75"
^XTMP("XPDT",7815,"KRN",.403,136,40,2,1)="Page 1.1^ACCESS TO NURSES FOR POC DATA,PRSN PAID PARAM EDIT,Page 1"
^XTMP("XPDT",7815,"KRN",.403,136,40,2,15,0)="^^2^2^3090729^"
^XTMP("XPDT",7815,"KRN",.403,136,40,2,15,1,0)="This pop up page is used to enter the EFFECTIVE PAY PERIOD (#1) for the "
^XTMP("XPDT",7815,"KRN",.403,136,40,2,15,2,0)="associated update to the ACCESS TO NURSES FOR POC DATA field (#.01)."
^XTMP("XPDT",7815,"KRN",.403,136,40,2,40,0)="^.4032IP^506^1"
^XTMP("XPDT",7815,"KRN",.403,136,40,2,40,506,0)="PRSN PAID PAY PD EDIT^1^1,1^e"
^XTMP("XPDT",7815,"KRN",.403,137,-1)="0^3"
^XTMP("XPDT",7815,"KRN",.403,137,0)="PRSN EDIT TL POC^@^@^^3091124.083^^^455.5^0^0^1"
^XTMP("XPDT",7815,"KRN",.403,137,40,0)="^.4031I^1^1"
^XTMP("XPDT",7815,"KRN",.403,137,40,1,0)="1^^1,1"
^XTMP("XPDT",7815,"KRN",.403,137,40,1,1)="Page 1"
^XTMP("XPDT",7815,"KRN",.403,137,40,1,40,0)="^.4032IP^510^1"
^XTMP("XPDT",7815,"KRN",.403,137,40,1,40,510,0)="PRSN TL EDIT^1^1,1^e"
^XTMP("XPDT",7815,"KRN",.404,75,0)="PRSA TL DISP^455.5^0"
^XTMP("XPDT",7815,"KRN",.404,75,40,0)="^.4044I^13^13"
^XTMP("XPDT",7815,"KRN",.404,75,40,1,0)="1^VA TIME & ATTENDANCE SYSTEM^1^"
^XTMP("XPDT",7815,"KRN",.404,75,40,1,2)="^^2,27^"
^XTMP("XPDT",7815,"KRN",.404,75,40,2,0)="2^TIME & LEAVE UNIT^1^"
^XTMP("XPDT",7815,"KRN",.404,75,40,2,2)="^^3,32^"
^XTMP("XPDT",7815,"KRN",.404,75,40,3,0)="3^CODE^3"
^XTMP("XPDT",7815,"KRN",.404,75,40,3,1)=".01"
^XTMP("XPDT",7815,"KRN",.404,75,40,3,2)="5,13^3^5,1"
^XTMP("XPDT",7815,"KRN",.404,75,40,4,0)="4^NAME^3"
^XTMP("XPDT",7815,"KRN",.404,75,40,4,1)="1"
^XTMP("XPDT",7815,"KRN",.404,75,40,4,2)="6,13^20^6,1"
^XTMP("XPDT",7815,"KRN",.404,75,40,5,0)="5^STATION #^3"
^XTMP("XPDT",7815,"KRN",.404,75,40,5,1)="20"
^XTMP("XPDT",7815,"KRN",.404,75,40,5,2)="7,13^3^7,1^1"
^XTMP("XPDT",7815,"KRN",.404,75,40,5,3)="!M"
^XTMP("XPDT",7815,"KRN",.404,75,40,5,3.1)="S Y=$G(^DD(""SITE"",1))"
^XTMP("XPDT",7815,"KRN",.404,75,40,6,0)="6^SERVICE^3"
^XTMP("XPDT",7815,"KRN",.404,75,40,6,1)="21"
^XTMP("XPDT",7815,"KRN",.404,75,40,6,2)="8,13^30^8,1"
^XTMP("XPDT",7815,"KRN",.404,75,40,7,0)="7^SECTION^3"
^XTMP("XPDT",7815,"KRN",.404,75,40,7,1)="22"
^XTMP("XPDT",7815,"KRN",.404,75,40,7,2)="8,59^20^8,50"
^XTMP("XPDT",7815,"KRN",.404,75,40,8,0)="9^Select TIMEKEEPER^3"
^XTMP("XPDT",7815,"KRN",.404,75,40,8,1)="10"
^XTMP("XPDT",7815,"KRN",.404,75,40,8,2)="13,24^30^13,1"
^XTMP("XPDT",7815,"KRN",.404,75,40,8,7)="^1.1"
^XTMP("XPDT",7815,"KRN",.404,75,40,9,0)="10^Select SUPERVISOR^3"
^XTMP("XPDT",7815,"KRN",.404,75,40,9,1)="11"
^XTMP("XPDT",7815,"KRN",.404,75,40,9,2)="15,24^30^15,1"
^XTMP("XPDT",7815,"KRN",.404,75,40,9,7)="^1.2"
^XTMP("XPDT",7815,"KRN",.404,75,40,10,0)="11^Select OT/CT APPROVER^3"
^XTMP("XPDT",7815,"KRN",.404,75,40,10,1)="12"
^XTMP("XPDT",7815,"KRN",.404,75,40,10,2)="17,24^30^17,1"
^XTMP("XPDT",7815,"KRN",.404,75,40,10,7)="^1.3"
^XTMP("XPDT",7815,"KRN",.404,75,40,11,0)="8^Entitled Sat/Sun Premiums?^3"
^XTMP("XPDT",7815,"KRN",.404,75,40,11,1)="23"
^XTMP("XPDT",7815,"KRN",.404,75,40,11,2)="11,28^3^11,1^1"
^XTMP("XPDT",7815,"KRN",.404,75,40,12,0)="7.5^Time SleepTime Begins^3"
^XTMP("XPDT",7815,"KRN",.404,75,40,12,1)="24"
^XTMP("XPDT",7815,"KRN",.404,75,40,12,2)="10,28^6^10,1"
^XTMP("XPDT",7815,"KRN",.404,75,40,13,0)="12^DIVISION^3"
^XTMP("XPDT",7815,"KRN",.404,75,40,13,1)="20.5"
^XTMP("XPDT",7815,"KRN",.404,75,40,13,2)="7,59^30^7,49"
^XTMP("XPDT",7815,"KRN",.404,76,0)="PRSA TL ED1^455.51"
^XTMP("XPDT",7815,"KRN",.404,76,40,0)="^.4044I^1^1"
^XTMP("XPDT",7815,"KRN",.404,76,40,1,0)="1^Timekeeper^3"
^XTMP("XPDT",7815,"KRN",.404,76,40,1,1)=".01"
^XTMP("XPDT",7815,"KRN",.404,76,40,1,2)="1,13^30^1,1"
^XTMP("XPDT",7815,"KRN",.404,77,0)="PRSA TL ED2^455.511"
^XTMP("XPDT",7815,"KRN",.404,77,40,0)="^.4044I^2^2"
^XTMP("XPDT",7815,"KRN",.404,77,40,1,0)="1^Supervisor^3"
^XTMP("XPDT",7815,"KRN",.404,77,40,1,1)=".01"
^XTMP("XPDT",7815,"KRN",.404,77,40,1,2)="1,13^30^1,1"
^XTMP("XPDT",7815,"KRN",.404,77,40,2,0)="2^T&L which Certifies Supervisor^3"
^XTMP("XPDT",7815,"KRN",.404,77,40,2,1)="1"
^XTMP("XPDT",7815,"KRN",.404,77,40,2,2)="3,33^3^3,1"
^XTMP("XPDT",7815,"KRN",.404,77,40,2,4)="1"
^XTMP("XPDT",7815,"KRN",.404,88,0)="PRSA TL ED3^455.512"
^XTMP("XPDT",7815,"KRN",.404,88,40,0)="^.4044I^1^1"
^XTMP("XPDT",7815,"KRN",.404,88,40,1,0)="1^OT/CT Approver^3"
^XTMP("XPDT",7815,"KRN",.404,88,40,1,1)=".01"
^XTMP("XPDT",7815,"KRN",.404,88,40,1,2)="1,17^30^1,1"
^XTMP("XPDT",7815,"KRN",.404,488,0)="TIME SEGMENT^451.9999"
^XTMP("XPDT",7815,"KRN",.404,488,11)="S:$O(PRSNPC(""""))]"""" DDSCHG=1"
^XTMP("XPDT",7815,"KRN",.404,488,12)=""
^XTMP("XPDT",7815,"KRN",.404,488,40,0)="^.4044I^10^8"
^XTMP("XPDT",7815,"KRN",.404,488,40,1,0)="1^^3"
^XTMP("XPDT",7815,"KRN",.404,488,40,1,1)=".01"
^XTMP("XPDT",7815,"KRN",.404,488,40,1,2)="1,2^6"
^XTMP("XPDT",7815,"KRN",.404,488,40,1,4)="1^^^0"
^XTMP("XPDT",7815,"KRN",.404,488,40,2,0)="2^^3"
^XTMP("XPDT",7815,"KRN",.404,488,40,2,1)="1"
^XTMP("XPDT",7815,"KRN",.404,488,40,2,2)="1,10^6"
^XTMP("XPDT",7815,"KRN",.404,488,40,2,4)="1"
^XTMP("XPDT",7815,"KRN",.404,488,40,2,12)="I X]"""" S Y=$$MILSS^PRSNEE0($$GET^DDSVAL(DIE,.DA,.01),X,1) S:$P(Y,U,2)<2401&PRSNTM DDSSTACK=1.5 D:'$G(DDSSTACK) PUT^DDSVAL(DIE,.DA,8,$P(Y,U)),PUT^DDSVAL(DIE,.DA,9,$P(Y,U,2))"
^XTMP("XPDT",7815,"KRN",.404,488,40,2,13)="S Y=$$GET^DDSVAL(DIE,.DA,9),Z=$$GET^DDSVAL(DIE,.DA,8) D HLP^DDSUTL(""Military Time ""_Z_"" - ""_Y)"
^XTMP("XPDT",7815,"KRN",.404,488,40,3,0)="3^^3"
^XTMP("XPDT",7815,"KRN",.404,488,40,3,1)="3"
^XTMP("XPDT",7815,"KRN",.404,488,40,3,2)="1,18^2"
^XTMP("XPDT",7815,"KRN",.404,488,40,3,4)="1"
^XTMP("XPDT",7815,"KRN",.404,488,40,3,10)="I X]"""","",OT,CT,RG,""[X S DDSSTACK=1.1"
^XTMP("XPDT",7815,"KRN",.404,488,40,3,11)="I X]"""" S A=$$GET^DDSVAL(DIE,.DA,2) I A S Y=$$GET^DDSVAL(DIE,.DA,8),Z=$$GET^DDSVAL(DIE,.DA,9) I Z\100*60+(Z#100)-(Y\100*60+(Y#100))<A,PRSNTM!(Z'>2400)!("",OT,CT,RG,""[X) D HLP^DDSUTL(""Meal Time is over Start/Stop Time."") S DDSBR=8"
^XTMP("XPDT",7815,"KRN",.404,488,40,3,12)="I $$GET^DDSVAL(DIE,.DA,9)>2400,'PRSNTM,"",OT,CT,RG,""'[X D HLP^DDSUTL(""For 1-Day Tour, Stop Time in the Second Day Tour must have Type of Time OT/CT/RG."") S DDSBR=3"
^XTMP("XPDT",7815,"KRN",.404,488,40,3,13)="I "",OT,CT,RG,""'[X D PUT^DDSVAL(DIE,.DA,6,""""),PUT^DDSVAL(DIE,.DA,7,"""") D:X'=""WI"" PUT^DDSVAL(DIE,.DA,5,"""")"
^XTMP("XPDT",7815,"KRN",.404,488,40,6,0)="6^^3"
^XTMP("XPDT",7815,"KRN",.404,488,40,6,1)="4"
^XTMP("XPDT",7815,"KRN",.404,488,40,6,2)="1,48^13"
^XTMP("XPDT",7815,"KRN",.404,488,40,6,4)="1"
^XTMP("XPDT",7815,"KRN",.404,488,40,6,11)="S A=$$GET^DDSVAL(DIE,.DA,2) I A S Y=$$GET^DDSVAL(DIE,.DA,8),Z=$$GET^DDSVAL(DIE,.DA,9) I Z\100*60+(Z#100)-(Y\100*60+(Y#100))<A D HLP^DDSUTL(""Meal Time is over Start/Stop Time."") S DDSBR=8"
^XTMP("XPDT",7815,"KRN",.404,488,40,7,0)="7^^3"
^XTMP("XPDT",7815,"KRN",.404,488,40,7,1)="5"
^XTMP("XPDT",7815,"KRN",.404,488,40,7,2)="1,63^2"
^XTMP("XPDT",7815,"KRN",.404,488,40,7,11)="S A=$$GET^DDSVAL(DIE,.DA,3) I "",WI,OT,CT,RG,""'[A S DDSBR=8"
^XTMP("XPDT",7815,"KRN",.404,488,40,8,0)="8^^3"
^XTMP("XPDT",7815,"KRN",.404,488,40,8,1)="2"
^XTMP("XPDT",7815,"KRN",.404,488,40,8,2)="1,78^2"
^XTMP("XPDT",7815,"KRN",.404,488,40,8,11)="I $$GET^DDSVAL(DIE,.DA,1)="""" D HLP^DDSUTL(""Enter Stop Time first"") S DDSBR=2"
^XTMP("XPDT",7815,"KRN",.404,488,40,8,12)="S Y=$$GET^DDSVAL(DIE,.DA,9),Z=$$GET^DDSVAL(DIE,.DA,8) I Y\100*60+(Y#100)-(Z\100*60+(Z#100))<X D HLP^DDSUTL(""Meal Time is over Start/Stop Time."") S DDSBR=8"
^XTMP("XPDT",7815,"KRN",.404,488,40,8,13)="S Y=$$GET^DDSVAL(DIE,.DA,9),Z=$$GET^DDSVAL(DIE,.DA,8) D HLP^DDSUTL(""This is the military time for Start/Stop Time ""_Z_""-""_Y)"
^XTMP("XPDT",7815,"KRN",.404,488,40,9,0)="4^^4"
^XTMP("XPDT",7815,"KRN",.404,488,40,9,2)="1,20^26"
^XTMP("XPDT",7815,"KRN",.404,488,40,9,30)="S Y={TYPE OF TIME:457.3:1}_""~""_{MANDATORY INDICATOR;I}_""~""_{REASON FOR OT/CT/RG:1} S:$P(Y,""~"",2,3)=""~"" Y=$P(Y,""~"") I Y'?.P S Y=""-""_$TR(Y,""~"",""/"")"
^XTMP("XPDT",7815,"KRN",.404,488,40,10,0)="7.5^^4"
^XTMP("XPDT",7815,"KRN",.404,488,40,10,2)="1,65^11"
^XTMP("XPDT",7815,"KRN",.404,488,40,10,30)="S Y={TYPE OF WORK:WORK DESCRIPTION} I Y]"""" S Y=""-""_Y"
^XTMP("XPDT",7815,"KRN",.404,497,0)="HEADER OPTION, PP & DATE ^451.999^"
^XTMP("XPDT",7815,"KRN",.404,497,40,0)="^.4044I^20^18"
^XTMP("XPDT",7815,"KRN",.404,497,40,1,0)="1^Option - ^1"
^XTMP("XPDT",7815,"KRN",.404,497,40,1,2)="^^1,1"
^XTMP("XPDT",7815,"KRN",.404,497,40,3,0)="3^Default Location= ^1"
^XTMP("XPDT",7815,"KRN",.404,497,40,3,2)="^^4,1"
^XTMP("XPDT",7815,"KRN",.404,497,40,4,0)="4^Tour=^1"
^XTMP("XPDT",7815,"KRN",.404,497,40,4,2)="^^5,1"
^XTMP("XPDT",7815,"KRN",.404,497,40,5,0)="5^ Start   Stop    Type of Time/OT-Mand?/Reason  Work Location  Work Type    Meal^1"
^XTMP("XPDT",7815,"KRN",.404,497,40,5,2)="^^7,1"
^XTMP("XPDT",7815,"KRN",.404,497,40,7,0)="2.2^SS#= ^1"
^XTMP("XPDT",7815,"KRN",.404,497,40,7,2)="^^3,33"
^XTMP("XPDT",7815,"KRN",.404,497,40,8,0)="2.5^T&L= ^1"
^XTMP("XPDT",7815,"KRN",.404,497,40,8,2)="^^3,51"
^XTMP("XPDT",7815,"KRN",.404,497,40,9,0)="4.5^POC Record Status= ^1"
^XTMP("XPDT",7815,"KRN",.404,497,40,9,2)="^^4,51"
^XTMP("XPDT",7815,"KRN",.404,497,40,10,0)="1.5^^4"
^XTMP("XPDT",7815,"KRN",.404,497,40,10,2)="1,10^30"
^XTMP("XPDT",7815,"KRN",.404,497,40,10,30)="S Y=$P($G(XQY0),U,2)"
^XTMP("XPDT",7815,"KRN",.404,497,40,11,0)="1.7^For POC Date= ^1"
^XTMP("XPDT",7815,"KRN",.404,497,40,11,2)="^^1,41"
^XTMP("XPDT",7815,"KRN",.404,497,40,12,0)="1.8^^4"
^XTMP("XPDT",7815,"KRN",.404,497,40,12,2)="1,55^25"
^XTMP("XPDT",7815,"KRN",.404,497,40,12,30)="S Y=$P($G(PRSNPP),U,2)_"" of PP ""_$P($G(PRSNPP),U)"
^XTMP("XPDT",7815,"KRN",.404,497,40,13,0)="2^^4"
^XTMP("XPDT",7815,"KRN",.404,497,40,13,2)="3,1^30"
^XTMP("XPDT",7815,"KRN",.404,497,40,13,30)="S Y=$P($G(PRSNID),U)"
^XTMP("XPDT",7815,"KRN",.404,497,40,14,0)="2.3^^4"
^XTMP("XPDT",7815,"KRN",.404,497,40,14,2)="3,38^11"
^XTMP("XPDT",7815,"KRN",.404,497,40,14,30)="S Y=$P($G(PRSNID),U,4),Y=$E(Y)_""XX-XX-""_$E(Y,6,9)"
^XTMP("XPDT",7815,"KRN",.404,497,40,15,0)="2.6^^4"
^XTMP("XPDT",7815,"KRN",.404,497,40,15,2)="3,56^6"
^XTMP("XPDT",7815,"KRN",.404,497,40,15,30)="S Y=$P($G(PRSNID),U,3)"
^XTMP("XPDT",7815,"KRN",.404,497,40,16,0)="3.1^^4"
^XTMP("XPDT",7815,"KRN",.404,497,40,16,2)="4,19^30"
^XTMP("XPDT",7815,"KRN",.404,497,40,16,30)="S Y=$P($G(PRSNID),U,5)"
^XTMP("XPDT",7815,"KRN",.404,497,40,17,0)="4.6^^4"
^XTMP("XPDT",7815,"KRN",.404,497,40,17,2)="4,70^9"
^XTMP("XPDT",7815,"KRN",.404,497,40,17,30)="S Y=$P($G(PRSNID),U,6)"
^XTMP("XPDT",7815,"KRN",.404,497,40,18,0)="2.7^Station= ^1"
^XTMP("XPDT",7815,"KRN",.404,497,40,18,2)="^^3,65"
^XTMP("XPDT",7815,"KRN",.404,497,40,19,0)="2.8^^4"
^XTMP("XPDT",7815,"KRN",.404,497,40,19,2)="3,74^6"
^XTMP("XPDT",7815,"KRN",.404,497,40,19,30)="S Y=$P($G(PRSNID),U,2)"
^XTMP("XPDT",7815,"KRN",.404,497,40,20,0)="4.1^^4"
^XTMP("XPDT",7815,"KRN",.404,497,40,20,2)="5,7^72"
^XTMP("XPDT",7815,"KRN",.404,497,40,20,30)="S Y=$G(PRSNTD)"
^XTMP("XPDT",7815,"KRN",.404,502,0)="PRSN PAID PARAM HDR^456^"
^XTMP("XPDT",7815,"KRN",.404,502,40,0)="^.4044I^2^2"
^XTMP("XPDT",7815,"KRN",.404,502,40,1,0)="1^VA TIME & ATTENDANCE SYSTEM^1"
^XTMP("XPDT",7815,"KRN",.404,502,40,1,2)="^^1,26"
^XTMP("XPDT",7815,"KRN",.404,502,40,2,0)="2^PAID PARAMETERS SET-UP^1"
^XTMP("XPDT",7815,"KRN",.404,502,40,2,2)="^^2,28"
^XTMP("XPDT",7815,"KRN",.404,503,0)="PRSN PAID PARAM EDIT^456"
^XTMP("XPDT",7815,"KRN",.404,503,40,0)="^.4044I^1^1"
^XTMP("XPDT",7815,"KRN",.404,503,40,1,0)="1^INSTITUTION^3"
^XTMP("XPDT",7815,"KRN",.404,503,40,1,1)=".01"
^XTMP("XPDT",7815,"KRN",.404,503,40,1,2)="2,14^30^2,1"
^XTMP("XPDT",7815,"KRN",.404,503,40,1,4)="1"
^XTMP("XPDT",7815,"KRN",.404,504,0)="POC Type of Time^451.9999"
^XTMP("XPDT",7815,"KRN",.404,504,40,0)="^.4044I^3^3"
^XTMP("XPDT",7815,"KRN",.404,504,40,1,0)="1^TYPE OF TIME= ^3"
^XTMP("XPDT",7815,"KRN",.404,504,40,1,1)="3"
^XTMP("XPDT",7815,"KRN",.404,504,40,1,2)="1,17^30^1,1^1"
^XTMP("XPDT",7815,"KRN",.404,504,40,1,4)="1^^^1"
^XTMP("XPDT",7815,"KRN",.404,504,40,2,0)="2^MANDATORY INDICATOR^3"
^XTMP("XPDT",7815,"KRN",.404,504,40,2,1)="6"
^XTMP("XPDT",7815,"KRN",.404,504,40,2,2)="3,22^9^3,1"
^XTMP("XPDT",7815,"KRN",.404,504,40,2,4)="1"
^XTMP("XPDT",7815,"KRN",.404,504,40,2,10)="I X="""" D HLP^DDSUTL(""Mandatory Indicator is required"") S DDSBR=2"
^XTMP("XPDT",7815,"KRN",.404,504,40,3,0)="3^REASON FOR OT/CT/RG^3"
^XTMP("XPDT",7815,"KRN",.404,504,40,3,1)="7"
^XTMP("XPDT",7815,"KRN",.404,504,40,3,2)="4,22^30^4,1"
^XTMP("XPDT",7815,"KRN",.404,504,40,3,4)="1"
^XTMP("XPDT",7815,"KRN",.404,504,40,3,10)="I X="""" D HLP^DDSUTL(""Reason for OT/CT/RG is required"") S DDSBR=3"
^XTMP("XPDT",7815,"KRN",.404,506,0)="PRSN PAID PAY PD EDIT^456.05"
^XTMP("XPDT",7815,"KRN",.404,506,40,0)="^.4044I^^0"
^XTMP("XPDT",7815,"KRN",.404,509,0)="POC START TIME DAY #^451.9999"
^XTMP("XPDT",7815,"KRN",.404,509,15,0)="^^1^1^3091014^"
^XTMP("XPDT",7815,"KRN",.404,509,15,1,0)="The block is used to enter the start time day #."
^XTMP("XPDT",7815,"KRN",.404,509,40,0)="^.4044I^3^3"
^XTMP("XPDT",7815,"KRN",.404,509,40,1,0)="1^START TIME=^3"
^XTMP("XPDT",7815,"KRN",.404,509,40,1,1)=".01"
^XTMP("XPDT",7815,"KRN",.404,509,40,1,2)="1,14^10^1,1^1"
^XTMP("XPDT",7815,"KRN",.404,509,40,1,4)="1^^^1"
^XTMP("XPDT",7815,"KRN",.404,509,40,2,0)="2^STOP TIME=^3"
^XTMP("XPDT",7815,"KRN",.404,509,40,2,1)="1"
^XTMP("XPDT",7815,"KRN",.404,509,40,2,2)="2,13^10^2,1^1"
^XTMP("XPDT",7815,"KRN",.404,509,40,2,4)="1^^^1"
^XTMP("XPDT",7815,"KRN",.404,509,40,3,0)="3^Tour Start Time on Day #^2"
^XTMP("XPDT",7815,"KRN",.404,509,40,3,2)="4,27^1^4,1"
^XTMP("XPDT",7815,"KRN",.404,509,40,3,3)="!M"
^XTMP("XPDT",7815,"KRN",.404,509,40,3,3.1)="S Y=$$GET^DDSVAL(DIE,.DA,8),Y=$S(Y="""":"""",Y>2400:2,1:1)"
^XTMP("XPDT",7815,"KRN",.404,509,40,3,4)="1"
^XTMP("XPDT",7815,"KRN",.404,509,40,3,12)="S Y=$$MILSS^PRSNEE0($$GET^DDSVAL(DIE,.DA,.01),$$GET^DDSVAL(DIE,.DA,1),X) D:Y'<0 PUT^DDSVAL(DIE,.DA,8,$P(Y,U)),PUT^DDSVAL(DIE,.DA,9,$P(Y,U,2)) S:Y<0 DDSBR=3"
^XTMP("XPDT",7815,"KRN",.404,509,40,3,13)=""
^XTMP("XPDT",7815,"KRN",.404,509,40,3,20)="N"
^XTMP("XPDT",7815,"KRN",.404,509,40,3,21,0)="^^2^2^3091014^^"
^XTMP("XPDT",7815,"KRN",.404,509,40,3,21,1,0)="Enter 1 if the tour start time of this session begins in Day 1."
^XTMP("XPDT",7815,"KRN",.404,509,40,3,21,2,0)="      2 if the tour start time of this session begins in Day 2."
^XTMP("XPDT",7815,"KRN",.404,509,40,3,22)="K:X'=1&(X'=2) X"
^XTMP("XPDT",7815,"KRN",.404,510,0)="PRSN TL EDIT^455.5"
^XTMP("XPDT",7815,"KRN",.404,510,15,0)="^^2^2^3091124^"
^XTMP("XPDT",7815,"KRN",.404,510,15,1,0)="This form is used to enter and edit POC Entry and Approval personnel for "
^XTMP("XPDT",7815,"KRN",.404,510,15,2,0)="a T&L Unit."
^XTMP("XPDT",7815,"KRN",.404,510,40,0)="^.4044I^11^11"
^XTMP("XPDT",7815,"KRN",.404,510,40,1,0)="1^VA TIME & ATTENDANCE SYSTEM^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,1,2)="^^2,28"
^XTMP("XPDT",7815,"KRN",.404,510,40,2,0)="2^EDIT POC ENTRY & APPROVAL PERSONNEL^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,2,2)="^^3,24"
^XTMP("XPDT",7815,"KRN",.404,510,40,3,0)="3^T&L UNIT^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,3,2)="^^4,36"
^XTMP("XPDT",7815,"KRN",.404,510,40,4,0)="4^CODE=^3"
^XTMP("XPDT",7815,"KRN",.404,510,40,4,1)=".01"
^XTMP("XPDT",7815,"KRN",.404,510,40,4,2)="6,7^3^6,1^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,4,4)="1^^^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,5,0)="5^NAME=^3"
^XTMP("XPDT",7815,"KRN",.404,510,40,5,1)="1"
^XTMP("XPDT",7815,"KRN",.404,510,40,5,2)="7,7^20^7,1^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,5,4)="0^^^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,6,0)="6^STATION #=^3"
^XTMP("XPDT",7815,"KRN",.404,510,40,6,1)="20"
^XTMP("XPDT",7815,"KRN",.404,510,40,6,2)="8,12^3^8,1^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,6,3)="!M"
^XTMP("XPDT",7815,"KRN",.404,510,40,6,3.1)="S Y=$G(^DD(""SITE"",1))"
^XTMP("XPDT",7815,"KRN",.404,510,40,6,4)="1^^^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,7,0)="7^SERVICE=^3"
^XTMP("XPDT",7815,"KRN",.404,510,40,7,1)="21"
^XTMP("XPDT",7815,"KRN",.404,510,40,7,2)="9,10^30^9,1^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,7,4)="0^^^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,8,0)="8^DIVISION=^3"
^XTMP("XPDT",7815,"KRN",.404,510,40,8,1)="20.5"
^XTMP("XPDT",7815,"KRN",.404,510,40,8,2)="8,59^20^8,49^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,8,4)="1^^^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,9,0)="9^SECTION=^3"
^XTMP("XPDT",7815,"KRN",.404,510,40,9,1)="22"
^XTMP("XPDT",7815,"KRN",.404,510,40,9,2)="9,59^20^9,50^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,9,4)="0^^^1"
^XTMP("XPDT",7815,"KRN",.404,510,40,10,0)="10^Select POC DATA ENTRY PERSONNEL^3"
^XTMP("XPDT",7815,"KRN",.404,510,40,10,1)="30"
^XTMP("XPDT",7815,"KRN",.404,510,40,10,2)="12,34^30^12,1"
^XTMP("XPDT",7815,"KRN",.404,510,40,11,0)="11^Select POC DATA APPROVAL PERSONNEL^3"
^XTMP("XPDT",7815,"KRN",.404,510,40,11,1)="31"
^XTMP("XPDT",7815,"KRN",.404,510,40,11,2)="15,37^30^15,1"
^XTMP("XPDT",7815,"KRN",19,5860,-1)="2^41"
^XTMP("XPDT",7815,"KRN",19,5860,0)="PRSA TK MENU^TimeKeeper Main Menu^^M^.5^^^^^^^^^1^"
^XTMP("XPDT",7815,"KRN",19,5860,10,0)="^19.01IP^28^28"
^XTMP("XPDT",7815,"KRN",19,5860,10,28,0)="13356^18"
^XTMP("XPDT",7815,"KRN",19,5860,10,28,"^")="PRSN TOGGLE TK POC POST"
^XTMP("XPDT",7815,"KRN",19,5860,"U")="TIMEKEEPER MAIN MENU"
^XTMP("XPDT",7815,"KRN",19,6004,-1)="2^42"
^XTMP("XPDT",7815,"KRN",19,6004,0)="PRSRFI-PAID SYSTEM REPORTS^Employee Reports^^M^100831^^^^^^^408"
^XTMP("XPDT",7815,"KRN",19,6004,10,0)="^19.01IP^9^9"
^XTMP("XPDT",7815,"KRN",19,6004,10,9,0)="13505^9"
^XTMP("XPDT",7815,"KRN",19,6004,10,9,"^")="PRSNR NURSE POSITION AND PAY"
^XTMP("XPDT",7815,"KRN",19,6004,"U")="EMPLOYEE REPORTS"
^XTMP("XPDT",7815,"KRN",19,13345,-1)="0^17"
^XTMP("XPDT",7815,"KRN",19,13345,0)="PRSN POC TYPE OF TIME^POC Type of Time^^E^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13345,1,0)="^19.06^1^1^3091216^^^^"
^XTMP("XPDT",7815,"KRN",19,13345,1,1,0)="The option will Add/Edit the POC Type of Time dictionary."
^XTMP("XPDT",7815,"KRN",19,13345,30)="PRSN(451.4,"
^XTMP("XPDT",7815,"KRN",19,13345,31)="AEQMZL"
^XTMP("XPDT",7815,"KRN",19,13345,36)="B"
^XTMP("XPDT",7815,"KRN",19,13345,50)="PRSN(451.4,"
^XTMP("XPDT",7815,"KRN",19,13345,51)=".01;1:99"
^XTMP("XPDT",7815,"KRN",19,13345,"U")="POC TYPE OF TIME"
^XTMP("XPDT",7815,"KRN",19,13353,-1)="0^14"
^XTMP("XPDT",7815,"KRN",19,13353,0)="PRSN POC APPLICATION PARAMETER^Edit POC Division Access Parameter^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13353,1,0)="^^5^5^3091208^"
^XTMP("XPDT",7815,"KRN",19,13353,1,1,0)="The option provides the VANOD site coordinator the ability to set the "
^XTMP("XPDT",7815,"KRN",19,13353,1,2,0)="access parameter for POC data to either T&L unit or Nursing "
^XTMP("XPDT",7815,"KRN",19,13353,1,3,0)="Location for each division.  This parameter will determine how data "
^XTMP("XPDT",7815,"KRN",19,13353,1,4,0)="entry personnel and data approval personnel access nurses for the "
^XTMP("XPDT",7815,"KRN",19,13353,1,5,0)="division."
^XTMP("XPDT",7815,"KRN",19,13353,25)="EN^PRSNCAPE"
^XTMP("XPDT",7815,"KRN",19,13353,"U")="EDIT POC DIVISION ACCESS PARAM"
^XTMP("XPDT",7815,"KRN",19,13354,-1)="0^8"
^XTMP("XPDT",7815,"KRN",19,13354,0)="PRSN DATA ENTRY MENU^Nurse POC Data Entry Menu^^M^^^^^^^y^PAID"
^XTMP("XPDT",7815,"KRN",19,13354,1,0)="^19.06^2^2^3091022^^^^"
^XTMP("XPDT",7815,"KRN",19,13354,1,1,0)="This is the main menu for all the options that a Nurse Point of Care "
^XTMP("XPDT",7815,"KRN",19,13354,1,2,0)="(POC) Data Entry Personnel will need."
^XTMP("XPDT",7815,"KRN",19,13354,10,0)="^19.01IP^4^4"
^XTMP("XPDT",7815,"KRN",19,13354,10,1,0)="13355^2^2"
^XTMP("XPDT",7815,"KRN",19,13354,10,1,"^")="PRSN DEL POC RECORD"
^XTMP("XPDT",7815,"KRN",19,13354,10,2,0)="13412^1^1"
^XTMP("XPDT",7815,"KRN",19,13354,10,2,"^")="PRSN ENTER NURSE POC DATA"
^XTMP("XPDT",7815,"KRN",19,13354,10,3,0)="13414^3"
^XTMP("XPDT",7815,"KRN",19,13354,10,3,"^")="PRSN DEP REPORTS MENU"
^XTMP("XPDT",7815,"KRN",19,13354,10,4,0)="13474^4"
^XTMP("XPDT",7815,"KRN",19,13354,10,4,"^")="PRSN CORRECT RELEASED POC DATA"
^XTMP("XPDT",7815,"KRN",19,13354,99)="61656,59043"
^XTMP("XPDT",7815,"KRN",19,13354,"U")="NURSE POC DATA ENTRY MENU"
^XTMP("XPDT",7815,"KRN",19,13355,-1)="0^9"
^XTMP("XPDT",7815,"KRN",19,13355,0)="PRSN DEL POC RECORD^Delete Nurse POC Daily Time Record^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13355,1,0)="^19.06^10^10^3091109^^"
^XTMP("XPDT",7815,"KRN",19,13355,1,1,0)="This option allows data entry personnel to delete the following types of "
^XTMP("XPDT",7815,"KRN",19,13355,1,2,0)="records:"
^XTMP("XPDT",7815,"KRN",19,13355,1,3,0)=" "
^XTMP("XPDT",7815,"KRN",19,13355,1,4,0)="1. An entered Nurse POC Daily Time record that has never been approved or "
^XTMP("XPDT",7815,"KRN",19,13355,1,5,0)="released."
^XTMP("XPDT",7815,"KRN",19,13355,1,6,0)="2. A Nurse POC Daily Time record that is an unapproved correction to a "
^XTMP("XPDT",7815,"KRN",19,13355,1,7,0)="previously released record."
^XTMP("XPDT",7815,"KRN",19,13355,1,8,0)=" "
^XTMP("XPDT",7815,"KRN",19,13355,1,9,0)="The system provides a message to the user as to the status of the"
^XTMP("XPDT",7815,"KRN",19,13355,1,10,0)="deletion request."
^XTMP("XPDT",7815,"KRN",19,13355,25)="DELPOC^PRSNDPC1"
^XTMP("XPDT",7815,"KRN",19,13355,"U")="DELETE NURSE POC DAILY TIME RE"
^XTMP("XPDT",7815,"KRN",19,13356,-1)="0^22"
^XTMP("XPDT",7815,"KRN",19,13356,0)="PRSN TOGGLE TK POC POST^Turn On/Off POC Data Entry from Timecard Posting^^R^^PRSN DEP^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13356,1,0)="^^7^7^3090724^"
^XTMP("XPDT",7815,"KRN",19,13356,1,1,0)="This option is controlled by a security key-PRSN DEP.  When a "
^XTMP("XPDT",7815,"KRN",19,13356,1,2,0)="timekeeper is added to the POC DATA ENTRY PERSONNEL multiple in the T&L "
^XTMP("XPDT",7815,"KRN",19,13356,1,3,0)="unit file, then they will receive the SECURITY KEY that unlocks this menu "
^XTMP("XPDT",7815,"KRN",19,13356,1,4,0)="item from the TIMEKEEPER MAIN MENU.  The option will give them the "
^XTMP("XPDT",7815,"KRN",19,13356,1,5,0)="ability to TURN ON or TURN OFF the new functionality in the POST EMPLOYEE "
^XTMP("XPDT",7815,"KRN",19,13356,1,6,0)="time option, which takes a timekeeper directly to the POC Data Entry from "
^XTMP("XPDT",7815,"KRN",19,13356,1,7,0)="the POST EMPLOYEE TIME option."
^XTMP("XPDT",7815,"KRN",19,13356,25)="TOGGLE^PRSNEETP"
^XTMP("XPDT",7815,"KRN",19,13356,"U")="TURN ON/OFF POC DATA ENTRY FRO"
^XTMP("XPDT",7815,"KRN",19,13402,-1)="0^23"
^XTMP("XPDT",7815,"KRN",19,13402,0)="PRSN VANOD EXTRACT^VANOD Kernel RPC^^B^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13402,1,0)="^^2^2^3090826^"
^XTMP("XPDT",7815,"KRN",19,13402,1,1,0)="This option is required by the Kernel Broker to give access to the RPCs "
^XTMP("XPDT",7815,"KRN",19,13402,1,2,0)="used by the VA Nursing Outcomes Database (VANOD)"
^XTMP("XPDT",7815,"KRN",19,13402,"RPC",0)="^19.05P^2^2"
^XTMP("XPDT",7815,"KRN",19,13402,"RPC",1,0)="PRSN NURS LOCATION EXTRACTION"
^XTMP("XPDT",7815,"KRN",19,13402,"RPC",2,0)="PRSN POC DAILY TIME EXTRACTION"
^XTMP("XPDT",7815,"KRN",19,13402,"U")="VANOD KERNEL RPC"
^XTMP("XPDT",7815,"KRN",19,13410,-1)="0^19"
^XTMP("XPDT",7815,"KRN",19,13410,0)="PRSN SHOW POC SYSTEM SETUP^Show Nurse Count by Location and T&L Unit^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13410,1,0)="^19.06^2^2^3100305^^^"
^XTMP("XPDT",7815,"KRN",19,13410,1,1,0)="This option lists divisions and the locations in those divisions.  It "
^XTMP("XPDT",7815,"KRN",19,13410,1,2,0)="shows how many nurses from various T&Ls are assigned to those locations."
^XTMP("XPDT",7815,"KRN",19,13410,25)="SHOWSU^PRSNUT05"
^XTMP("XPDT",7815,"KRN",19,13410,"U")="SHOW NURSE COUNT BY LOCATION A"
^XTMP("XPDT",7815,"KRN",19,13412,-1)="0^11"
^XTMP("XPDT",7815,"KRN",19,13412,0)="PRSN ENTER NURSE POC DATA^Enter Nurse POC Data^^R^^^^^^^^PAID"
^XTMP("XPDT",7815,"KRN",19,13412,1,0)="^^2^2^3090923^"
^XTMP("XPDT",7815,"KRN",19,13412,1,1,0)="This option is used to enter and edit nurse POC data for all of a "
^XTMP("XPDT",7815,"KRN",19,13412,1,2,0)="nurse's time and attendance activity."
^XTMP("XPDT",7815,"KRN",19,13412,25)="ENT^PRSNEE"
^XTMP("XPDT",7815,"KRN",19,13412,"U")="ENTER NURSE POC DATA"
^XTMP("XPDT",7815,"KRN",19,13413,-1)="0^26"
^XTMP("XPDT",7815,"KRN",19,13413,0)="PRSNR ACTIVITY BY GROUP-DEP^Activity Report by Group^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13413,1,0)="^19.06^3^3^3090930^^"
^XTMP("XPDT",7815,"KRN",19,13413,1,1,0)="This report provides nursing point of care activity over a date range, by "
^XTMP("XPDT",7815,"KRN",19,13413,1,2,0)="location or T&L unit within a division.  The user can specify a detailed "
^XTMP("XPDT",7815,"KRN",19,13413,1,3,0)="or summary report."
^XTMP("XPDT",7815,"KRN",19,13413,25)="DEP^PRSNRAS0"
^XTMP("XPDT",7815,"KRN",19,13413,"U")="ACTIVITY REPORT BY GROUP"
^XTMP("XPDT",7815,"KRN",19,13414,-1)="0^10"
^XTMP("XPDT",7815,"KRN",19,13414,0)="PRSN DEP REPORTS MENU^Reports^^M^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13414,1,0)="^19.06^2^2^3091015^^^^"
^XTMP("XPDT",7815,"KRN",19,13414,1,1,0)="This menu contains all the reports available to the POC Data Entry "
^XTMP("XPDT",7815,"KRN",19,13414,1,2,0)="Personnel."
^XTMP("XPDT",7815,"KRN",19,13414,10,0)="^19.01IP^3^3"
^XTMP("XPDT",7815,"KRN",19,13414,10,1,0)="13413^1"
^XTMP("XPDT",7815,"KRN",19,13414,10,1,"^")="PRSNR ACTIVITY BY GROUP-DEP"
^XTMP("XPDT",7815,"KRN",19,13414,10,2,0)="13416^2"
^XTMP("XPDT",7815,"KRN",19,13414,10,2,"^")="PRSNR INDIVIDUAL ACTIVITY-DEP"
^XTMP("XPDT",7815,"KRN",19,13414,10,3,0)="13470^3"
^XTMP("XPDT",7815,"KRN",19,13414,10,3,"^")="PRSNR MISMATCHES ETA POC-DEP"
^XTMP("XPDT",7815,"KRN",19,13414,99)="61649,55666"
^XTMP("XPDT",7815,"KRN",19,13414,"U")="REPORTS"
^XTMP("XPDT",7815,"KRN",19,13415,-1)="0^7"
^XTMP("XPDT",7815,"KRN",19,13415,0)="PRSN DATA APPROVAL MENU^Nurse POC Data Approval Menu^^M^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13415,1,0)="^19.06^2^2^3091124^^^^"
^XTMP("XPDT",7815,"KRN",19,13415,1,1,0)="This menu contains all the POC options and reports for the POC Data "
^XTMP("XPDT",7815,"KRN",19,13415,1,2,0)="Approval Personnel."
^XTMP("XPDT",7815,"KRN",19,13415,10,0)="^19.01IP^3^3"
^XTMP("XPDT",7815,"KRN",19,13415,10,1,0)="13419^1^1"
^XTMP("XPDT",7815,"KRN",19,13415,10,1,"^")="PRSN DAP REPORTS MENU"
^XTMP("XPDT",7815,"KRN",19,13415,10,2,0)="13509^2^2"
^XTMP("XPDT",7815,"KRN",19,13415,10,2,"^")="PRSN APPROV POC PAYPD"
^XTMP("XPDT",7815,"KRN",19,13415,10,3,0)="13510^3^3"
^XTMP("XPDT",7815,"KRN",19,13415,10,3,"^")="PRSN APPROV CORR POC"
^XTMP("XPDT",7815,"KRN",19,13415,99)="61689,52736"
^XTMP("XPDT",7815,"KRN",19,13415,"U")="NURSE POC DATA APPROVAL MENU"
^XTMP("XPDT",7815,"KRN",19,13416,-1)="0^31"
^XTMP("XPDT",7815,"KRN",19,13416,0)="PRSNR INDIVIDUAL ACTIVITY-DEP^Individual Activity Report^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13416,1,0)="^^2^2^3090930^"
^XTMP("XPDT",7815,"KRN",19,13416,1,1,0)="This report provides individual nursing point of care activity over a "
^XTMP("XPDT",7815,"KRN",19,13416,1,2,0)="date range, by location or T&L unit within a division."
^XTMP("XPDT",7815,"KRN",19,13416,25)="DEP^PRSNRIA"
^XTMP("XPDT",7815,"KRN",19,13416,"U")="INDIVIDUAL ACTIVITY REPORT"
^XTMP("XPDT",7815,"KRN",19,13417,-1)="0^25"
^XTMP("XPDT",7815,"KRN",19,13417,0)="PRSNR ACTIVITY BY GROUP-DAP^Activity Report by Group^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13417,1,0)="^19.06^3^3^3091029^^^"
^XTMP("XPDT",7815,"KRN",19,13417,1,1,0)="This report provides nursing point of care activity over a date range, by"
^XTMP("XPDT",7815,"KRN",19,13417,1,2,0)="location or T&L unit within a division.  The user can specify a detailed"
^XTMP("XPDT",7815,"KRN",19,13417,1,3,0)="or summary report."
^XTMP("XPDT",7815,"KRN",19,13417,25)="DAP^PRSNRAS0"
^XTMP("XPDT",7815,"KRN",19,13417,"U")="ACTIVITY REPORT BY GROUP"
^XTMP("XPDT",7815,"KRN",19,13418,-1)="0^30"
^XTMP("XPDT",7815,"KRN",19,13418,0)="PRSNR INDIVIDUAL ACTIVITY-DAP^Individual Activity Report^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13418,1,0)="^19.06^2^2^3091007^^"
^XTMP("XPDT",7815,"KRN",19,13418,1,1,0)="This report provides individual nursing point of care activity over a "
^XTMP("XPDT",7815,"KRN",19,13418,1,2,0)="date range, by location or T&L unit within a division."
^XTMP("XPDT",7815,"KRN",19,13418,25)="DAP^PRSNRIA"
^XTMP("XPDT",7815,"KRN",19,13418,"U")="INDIVIDUAL ACTIVITY REPORT"
^XTMP("XPDT",7815,"KRN",19,13419,-1)="0^6"
^XTMP("XPDT",7815,"KRN",19,13419,0)="PRSN DAP REPORTS MENU^Reports^^M^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13419,1,0)="^19.06^2^2^3091119^^^^"
^XTMP("XPDT",7815,"KRN",19,13419,1,1,0)="This menu contains all the reports available to the POC Data Approval"
^XTMP("XPDT",7815,"KRN",19,13419,1,2,0)="Personnel."
^XTMP("XPDT",7815,"KRN",19,13419,10,0)="^19.01IP^5^5"
^XTMP("XPDT",7815,"KRN",19,13419,10,1,0)="13417^1"
^XTMP("XPDT",7815,"KRN",19,13419,10,1,"^")="PRSNR ACTIVITY BY GROUP-DAP"
^XTMP("XPDT",7815,"KRN",19,13419,10,2,0)="13418^2"
^XTMP("XPDT",7815,"KRN",19,13419,10,2,"^")="PRSNR INDIVIDUAL ACTIVITY-DAP"
^XTMP("XPDT",7815,"KRN",19,13419,10,3,0)="13469^3"
^XTMP("XPDT",7815,"KRN",19,13419,10,3,"^")="PRSNR MISMATCHES ETA POC-DAP"
^XTMP("XPDT",7815,"KRN",19,13419,10,4,0)="13475^4"
^XTMP("XPDT",7815,"KRN",19,13419,10,4,"^")="PRSNR SKILL MIX GRP SUMM-DAP"
^XTMP("XPDT",7815,"KRN",19,13419,10,5,0)="13507^5"
^XTMP("XPDT",7815,"KRN",19,13419,10,5,"^")="PRSNR NONDIR CARE SUMM-DAP"
^XTMP("XPDT",7815,"KRN",19,13419,99)="61684,64553"
^XTMP("XPDT",7815,"KRN",19,13419,"U")="REPORTS"
^XTMP("XPDT",7815,"KRN",19,13421,-1)="0^4"
^XTMP("XPDT",7815,"KRN",19,13421,0)="PRSN COORDINATOR REPORTS MENU^Reports^^M^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13421,1,0)="^19.06^1^1^3100305^^^^"
^XTMP("XPDT",7815,"KRN",19,13421,1,1,0)="This menu contains all the reports available to the POC Coordinator."
^XTMP("XPDT",7815,"KRN",19,13421,10,0)="^19.01IP^7^6"
^XTMP("XPDT",7815,"KRN",19,13421,10,1,0)="13423^1"
^XTMP("XPDT",7815,"KRN",19,13421,10,1,"^")="PRSNR ACTIVITY BY GROUP-COORD"
^XTMP("XPDT",7815,"KRN",19,13421,10,2,0)="13424^2"
^XTMP("XPDT",7815,"KRN",19,13421,10,2,"^")="PRSNR INDIV ACTIVITY-COORD"
^XTMP("XPDT",7815,"KRN",19,13421,10,3,0)="13468^3"
^XTMP("XPDT",7815,"KRN",19,13421,10,3,"^")="PRSNR MISMATCHES ETA POC-COORD"
^XTMP("XPDT",7815,"KRN",19,13421,10,4,0)="13473^4"
^XTMP("XPDT",7815,"KRN",19,13421,10,4,"^")="PRSNR EDU VALIDATION-COORD"
^XTMP("XPDT",7815,"KRN",19,13421,10,5,0)="13476^5"
^XTMP("XPDT",7815,"KRN",19,13421,10,5,"^")="PRSNR SKILL MIX GRP SUMM-COORD"
^XTMP("XPDT",7815,"KRN",19,13421,10,7,0)="13506^6"
^XTMP("XPDT",7815,"KRN",19,13421,10,7,"^")="PRSNR NONDIR CARE SUMM-COORD"
^XTMP("XPDT",7815,"KRN",19,13421,99)="61790,55384"
^XTMP("XPDT",7815,"KRN",19,13421,"U")="REPORTS"
^XTMP("XPDT",7815,"KRN",19,13422,-1)="0^3"
^XTMP("XPDT",7815,"KRN",19,13422,0)="PRSN COORDINATOR MENU^Nurse POC Coordinator Menu^^M^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13422,1,0)="^19.06^2^2^3091208^^^^"
^XTMP("XPDT",7815,"KRN",19,13422,1,1,0)="This menu contains all the POC options and reports for the POC "
^XTMP("XPDT",7815,"KRN",19,13422,1,2,0)="Coordinator."
^XTMP("XPDT",7815,"KRN",19,13422,10,0)="^19.01IP^6^5"
^XTMP("XPDT",7815,"KRN",19,13422,10,1,0)="13421^5^5"
^XTMP("XPDT",7815,"KRN",19,13422,10,1,"^")="PRSN COORDINATOR REPORTS MENU"
^XTMP("XPDT",7815,"KRN",19,13422,10,2,0)="13503^1^1"
^XTMP("XPDT",7815,"KRN",19,13422,10,2,"^")="PRSN POC RELEASE"
^XTMP("XPDT",7815,"KRN",19,13422,10,3,0)="13504^2^2"
^XTMP("XPDT",7815,"KRN",19,13422,10,3,"^")="PRSN RET APPROVED POC RECORD"
^XTMP("XPDT",7815,"KRN",19,13422,10,5,0)="13511^3^3"
^XTMP("XPDT",7815,"KRN",19,13422,10,5,"^")="PRSN POC CORRECT RELEASE"
^XTMP("XPDT",7815,"KRN",19,13422,10,6,0)="13512^4^4"
^XTMP("XPDT",7815,"KRN",19,13422,10,6,"^")="PRSN SITE MAINTENANCE COORD"
^XTMP("XPDT",7815,"KRN",19,13422,99)="61703,36095"
^XTMP("XPDT",7815,"KRN",19,13422,"U")="NURSE POC COORDINATOR MENU"
^XTMP("XPDT",7815,"KRN",19,13423,-1)="0^24"
^XTMP("XPDT",7815,"KRN",19,13423,0)="PRSNR ACTIVITY BY GROUP-COORD^Activity Report by Group^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13423,1,0)="^19.06^3^3^3091119^^^"
^XTMP("XPDT",7815,"KRN",19,13423,1,1,0)="This report provides nursing point of care activity over a date range, by "
^XTMP("XPDT",7815,"KRN",19,13423,1,2,0)="location or T&L unit within a division.  The user can specify a detailed "
^XTMP("XPDT",7815,"KRN",19,13423,1,3,0)="or summary report."
^XTMP("XPDT",7815,"KRN",19,13423,25)="COORD^PRSNRAS0"
^XTMP("XPDT",7815,"KRN",19,13423,"U")="ACTIVITY REPORT BY GROUP"
^XTMP("XPDT",7815,"KRN",19,13424,-1)="0^28"
^XTMP("XPDT",7815,"KRN",19,13424,0)="PRSNR INDIV ACTIVITY-COORD^Individual Activity Report^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13424,1,0)="^19.06^2^2^3091014^^"
^XTMP("XPDT",7815,"KRN",19,13424,1,1,0)="This report provides individual nursing point of care activity over a "
^XTMP("XPDT",7815,"KRN",19,13424,1,2,0)="date range, by location or T&L unit within a division."
^XTMP("XPDT",7815,"KRN",19,13424,25)="COORD^PRSNRIA"
^XTMP("XPDT",7815,"KRN",19,13424,"U")="INDIVIDUAL ACTIVITY REPORT"
^XTMP("XPDT",7815,"KRN",19,13465,-1)="0^29"
^XTMP("XPDT",7815,"KRN",19,13465,0)="PRSNR INDIV ACTIVITY-NURSE^Individual Activity Report^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13465,1,0)="^^2^2^3091014^"
^XTMP("XPDT",7815,"KRN",19,13465,1,1,0)="This report provides individual nursing point of care activity over a"
^XTMP("XPDT",7815,"KRN",19,13465,1,2,0)="date range, by location or T&L unit within a division."
^XTMP("XPDT",7815,"KRN",19,13465,25)="NURSE^PRSNRIA"
^XTMP("XPDT",7815,"KRN",19,13465,"U")="INDIVIDUAL ACTIVITY REPORT"
^XTMP("XPDT",7815,"KRN",19,13467,-1)="0^12"
^XTMP("XPDT",7815,"KRN",19,13467,0)="PRSN NURSE MENU^Nurse POC Staff Menu^^M^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13467,1,0)="^19.06^2^2^3100302^^^"
^XTMP("XPDT",7815,"KRN",19,13467,1,1,0)="This menu contains all the POC options and reports for POC Nurse "
^XTMP("XPDT",7815,"KRN",19,13467,1,2,0)="Personnel."
^XTMP("XPDT",7815,"KRN",19,13467,10,0)="^19.01IP^2^2"
^XTMP("XPDT",7815,"KRN",19,13467,10,1,0)="13465^1"
^XTMP("XPDT",7815,"KRN",19,13467,10,1,"^")="PRSNR INDIV ACTIVITY-NURSE"
^XTMP("XPDT",7815,"KRN",19,13467,10,2,0)="13471^2"
^XTMP("XPDT",7815,"KRN",19,13467,10,2,"^")="PRSNR MISMATCHES ETA POC-NURSE"
^XTMP("XPDT",7815,"KRN",19,13467,99)="61787,49688"
^XTMP("XPDT",7815,"KRN",19,13467,"U")="NURSE POC STAFF MENU"
^XTMP("XPDT",7815,"KRN",19,13468,-1)="0^32"
^XTMP("XPDT",7815,"KRN",19,13468,0)="PRSNR MISMATCHES ETA POC-COORD^Mismatch Report-Point of Care vs. ETA Timecard^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13468,1,0)="^^5^5^3100302^"
^XTMP("XPDT",7815,"KRN",19,13468,1,1,0)="This option provides the site coordinator the ability to report any "
^XTMP("XPDT",7815,"KRN",19,13468,1,2,0)="mismatches between the ETA timecard and the Nurse's Point of Care (POC) "
^XTMP("XPDT",7815,"KRN",19,13468,1,3,0)="record.  Mismatches are reported when there is a discrepancy between "
^XTMP("XPDT",7815,"KRN",19,13468,1,4,0)="the two records for either the type of time or start and stop times for a "
^XTMP("XPDT",7815,"KRN",19,13468,1,5,0)="particular type of time."
^XTMP("XPDT",7815,"KRN",19,13468,25)="COORD^PRSNRMM1"
^XTMP("XPDT",7815,"KRN",19,13468,"U")="MISMATCH REPORT-POINT OF CARE "
^XTMP("XPDT",7815,"KRN",19,13469,-1)="0^33"
^XTMP("XPDT",7815,"KRN",19,13469,0)="PRSNR MISMATCHES ETA POC-DAP^Mismatch Report-Point of Care vs. ETA Timecard^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13469,1,0)="^^5^5^3100302^"
^XTMP("XPDT",7815,"KRN",19,13469,1,1,0)="This option provides POC data approval personnel the ability to report any"
^XTMP("XPDT",7815,"KRN",19,13469,1,2,0)="mismatches between the ETA timecard and the Nurse's Point of Care (POC) "
^XTMP("XPDT",7815,"KRN",19,13469,1,3,0)="record.  Mismatches are reported when there is a discrepancy between the"
^XTMP("XPDT",7815,"KRN",19,13469,1,4,0)="two records for either the type of time or start and stop times for a "
^XTMP("XPDT",7815,"KRN",19,13469,1,5,0)="particular type of time."
^XTMP("XPDT",7815,"KRN",19,13469,25)="DAP^PRSNRMM1"
^XTMP("XPDT",7815,"KRN",19,13469,"U")="MISMATCH REPORT-POINT OF CARE "
^XTMP("XPDT",7815,"KRN",19,13470,-1)="0^34"
^XTMP("XPDT",7815,"KRN",19,13470,0)="PRSNR MISMATCHES ETA POC-DEP^Mismatch Report-Point of Care vs. ETA Timecard^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13470,1,0)="^^5^5^3100302^"
^XTMP("XPDT",7815,"KRN",19,13470,1,1,0)="This option provides POC data entry personnel the ability to report any"
^XTMP("XPDT",7815,"KRN",19,13470,1,2,0)="mismatches between the ETA timecard and the Nurse's Point of Care (POC) "
^XTMP("XPDT",7815,"KRN",19,13470,1,3,0)="record.  Mismatches are reported when there is a discrepancy between the"
^XTMP("XPDT",7815,"KRN",19,13470,1,4,0)="two records for either the type of time or start and stop times for a "
^XTMP("XPDT",7815,"KRN",19,13470,1,5,0)="particular type of time."
^XTMP("XPDT",7815,"KRN",19,13470,25)="DEP^PRSNRMM1"
^XTMP("XPDT",7815,"KRN",19,13470,"U")="MISMATCH REPORT-POINT OF CARE "
^XTMP("XPDT",7815,"KRN",19,13471,-1)="0^35"
^XTMP("XPDT",7815,"KRN",19,13471,0)="PRSNR MISMATCHES ETA POC-NURSE^Mismatch Report-Point of Care vs. ETA Timecard^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13471,1,0)="^^5^5^3100302^"
^XTMP("XPDT",7815,"KRN",19,13471,1,1,0)="This option provides a nurse the ability to report any mismatches between"
^XTMP("XPDT",7815,"KRN",19,13471,1,2,0)="their ETA timecard and their Nurse's Point of Care (POC) record.  "
^XTMP("XPDT",7815,"KRN",19,13471,1,3,0)="Mismatches are reported when there is a discrepancy between the"
^XTMP("XPDT",7815,"KRN",19,13471,1,4,0)="two records for either the type of time or start and stop times for a "
^XTMP("XPDT",7815,"KRN",19,13471,1,5,0)="particular type of time."
^XTMP("XPDT",7815,"KRN",19,13471,25)="NURSE^PRSNRMM1"
^XTMP("XPDT",7815,"KRN",19,13471,"U")="MISMATCH REPORT-POINT OF CARE "
^XTMP("XPDT",7815,"KRN",19,13473,-1)="0^27"
^XTMP("XPDT",7815,"KRN",19,13473,0)="PRSNR EDU VALIDATION-COORD^Nursing Education Validation^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13473,1,0)="^^3^3^3091015^"
^XTMP("XPDT",7815,"KRN",19,13473,1,1,0)="This report provides nursing job codes, roles, assignments,education "
^XTMP("XPDT",7815,"KRN",19,13473,1,2,0)="level and year degree earned over a date range, by location or T&L unit "
^XTMP("XPDT",7815,"KRN",19,13473,1,3,0)="within a division."
^XTMP("XPDT",7815,"KRN",19,13473,25)="COORD^PRSNREV0"
^XTMP("XPDT",7815,"KRN",19,13473,"U")="NURSING EDUCATION VALIDATION"
^XTMP("XPDT",7815,"KRN",19,13474,-1)="0^5"
^XTMP("XPDT",7815,"KRN",19,13474,0)="PRSN CORRECT RELEASED POC DATA^Correct Released Nurse POC Data^^R^^^^^^^^PAID"
^XTMP("XPDT",7815,"KRN",19,13474,1,0)="^^3^3^3091022^"
^XTMP("XPDT",7815,"KRN",19,13474,1,1,0)="This option provides the functionality to enter correction to nurse POC "
^XTMP("XPDT",7815,"KRN",19,13474,1,2,0)="data for direct care nurses for a prior date that has already been "
^XTMP("XPDT",7815,"KRN",19,13474,1,3,0)="released to VANOD."
^XTMP("XPDT",7815,"KRN",19,13474,25)="ENT^PRSNEC"
^XTMP("XPDT",7815,"KRN",19,13474,"U")="CORRECT RELEASED NURSE POC DAT"
^XTMP("XPDT",7815,"KRN",19,13475,-1)="0^40"
^XTMP("XPDT",7815,"KRN",19,13475,0)="PRSNR SKILL MIX GRP SUMM-DAP^Nurse Group Work Summary by Skill Mix^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13475,1,0)="^19.06^2^2^3091029^^"
^XTMP("XPDT",7815,"KRN",19,13475,1,1,0)="This report provides nursing group work summary by skill mix over a date "
^XTMP("XPDT",7815,"KRN",19,13475,1,2,0)="range, by default location or T&L unit within a division."
^XTMP("XPDT",7815,"KRN",19,13475,25)="DAP^PRSNRSM0"
^XTMP("XPDT",7815,"KRN",19,13475,"U")="NURSE GROUP WORK SUMMARY BY SK"
^XTMP("XPDT",7815,"KRN",19,13476,-1)="0^39"
^XTMP("XPDT",7815,"KRN",19,13476,0)="PRSNR SKILL MIX GRP SUMM-COORD^Nurse Group Work Summary by Skill Mix^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13476,1,0)="^^2^2^3091029^"
^XTMP("XPDT",7815,"KRN",19,13476,1,1,0)="This report provides nursing group work summary by skill mix over a date"
^XTMP("XPDT",7815,"KRN",19,13476,1,2,0)="range, by default location or T&L unit within a division."
^XTMP("XPDT",7815,"KRN",19,13476,25)="COORD^PRSNRSM0"
^XTMP("XPDT",7815,"KRN",19,13476,"U")="NURSE GROUP WORK SUMMARY BY SK"
^XTMP("XPDT",7815,"KRN",19,13503,-1)="0^16"
^XTMP("XPDT",7815,"KRN",19,13503,0)="PRSN POC RELEASE^Release Pay Period POC Data for VANOD Extract^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13503,1,0)="^19.06^7^7^3091103^^"
^XTMP("XPDT",7815,"KRN",19,13503,1,1,0)="This option provides ability to review POC data for a pay period and "
^XTMP("XPDT",7815,"KRN",19,13503,1,2,0)="release that data for extraction to VANOD.  Select a single division or"
^XTMP("XPDT",7815,"KRN",19,13503,1,3,0)="all divisions for release, and optionally view all POC/ETA mismatches for"
^XTMP("XPDT",7815,"KRN",19,13503,1,4,0)="the selected release group."
^XTMP("XPDT",7815,"KRN",19,13503,1,5,0)=" "
^XTMP("XPDT",7815,"KRN",19,13503,1,6,0)="The option transfers records from the POC Daily Time Records (#451) file"
^XTMP("XPDT",7815,"KRN",19,13503,1,7,0)="to the POC Daily Activity Extraction (#451.7) file."
^XTMP("XPDT",7815,"KRN",19,13503,25)="RELEASE^PRSNCGR"
^XTMP("XPDT",7815,"KRN",19,13503,"U")="RELEASE PAY PERIOD POC DATA FO"
^XTMP("XPDT",7815,"KRN",19,13504,-1)="0^18"
^XTMP("XPDT",7815,"KRN",19,13504,0)="PRSN RET APPROVED POC RECORD^Return Approved Nurse POC Daily Time Record^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13504,1,0)="^^10^10^3091109^"
^XTMP("XPDT",7815,"KRN",19,13504,1,1,0)="This option shall allows the PEV System ADPAC/VANOD Site Coordinator to "
^XTMP("XPDT",7815,"KRN",19,13504,1,2,0)="return the following types of records:"
^XTMP("XPDT",7815,"KRN",19,13504,1,3,0)=" "
^XTMP("XPDT",7815,"KRN",19,13504,1,4,0)="1.      An Approved Nurse POC Daily Time record, that has never been "
^XTMP("XPDT",7815,"KRN",19,13504,1,5,0)="Released."
^XTMP("XPDT",7815,"KRN",19,13504,1,6,0)="2.      An Approved Nurse POC Daily Time record that has been Released "
^XTMP("XPDT",7815,"KRN",19,13504,1,7,0)="and has subsequently been Corrected."
^XTMP("XPDT",7815,"KRN",19,13504,1,8,0)=" "
^XTMP("XPDT",7815,"KRN",19,13504,1,9,0)="The purpose of this option is to allow the data entry personnel to edit a "
^XTMP("XPDT",7815,"KRN",19,13504,1,10,0)="record that was previously approved."
^XTMP("XPDT",7815,"KRN",19,13504,25)="RETPOC^PRSNCR1"
^XTMP("XPDT",7815,"KRN",19,13504,"U")="RETURN APPROVED NURSE POC DAIL"
^XTMP("XPDT",7815,"KRN",19,13505,-1)="0^38"
^XTMP("XPDT",7815,"KRN",19,13505,0)="PRSNR NURSE POSITION AND PAY^Nurse Position and Pay Information^^R^^^^^^^^PAID"
^XTMP("XPDT",7815,"KRN",19,13505,1,0)="^19.06^4^4^3100305^^"
^XTMP("XPDT",7815,"KRN",19,13505,1,1,0)="This report provides costing data of all active nurse staff.  The report"
^XTMP("XPDT",7815,"KRN",19,13505,1,2,0)="includes Name, SSN (last 4), Skill Mix, BOC, OCC, Assignment Code, "
^XTMP("XPDT",7815,"KRN",19,13505,1,3,0)="CC, Nurse Role, Grade/Step, Next Step Due Date, Years of Service and "
^XTMP("XPDT",7815,"KRN",19,13505,1,4,0)="Salary.  Payroll personnel can run this report for any division."
^XTMP("XPDT",7815,"KRN",19,13505,25)="COORDNPP^PRSNREV0"
^XTMP("XPDT",7815,"KRN",19,13505,"U")="NURSE POSITION AND PAY INFORMA"
^XTMP("XPDT",7815,"KRN",19,13506,-1)="0^36"
^XTMP("XPDT",7815,"KRN",19,13506,0)="PRSNR NONDIR CARE SUMM-COORD^Non-direct Care Summary by Skill Mix^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13506,1,0)="^19.06^3^3^3091119^^^"
^XTMP("XPDT",7815,"KRN",19,13506,1,1,0)="This report provides a summary of non direct care hours performed by "
^XTMP("XPDT",7815,"KRN",19,13506,1,2,0)="nurses and unlicensed personnel over a date range, by location or T&L "
^XTMP("XPDT",7815,"KRN",19,13506,1,3,0)="unit within a division."
^XTMP("XPDT",7815,"KRN",19,13506,25)="COORD^PRSNRND0"
^XTMP("XPDT",7815,"KRN",19,13506,"U")="NON-DIRECT CARE SUMMARY BY SKI"
^XTMP("XPDT",7815,"KRN",19,13507,-1)="0^37"
^XTMP("XPDT",7815,"KRN",19,13507,0)="PRSNR NONDIR CARE SUMM-DAP^Nondirect Care Summary by Skillmix^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13507,1,0)="^19.06^3^3^3091119^^"
^XTMP("XPDT",7815,"KRN",19,13507,1,1,0)="This report provides a summary of non direct care hours performed by"
^XTMP("XPDT",7815,"KRN",19,13507,1,2,0)="nurses and unlicensed personnel over a date range, by location or T&L"
^XTMP("XPDT",7815,"KRN",19,13507,1,3,0)="unit within a division."
^XTMP("XPDT",7815,"KRN",19,13507,25)="DAP^PRSNRND0"
^XTMP("XPDT",7815,"KRN",19,13507,"U")="NONDIRECT CARE SUMMARY BY SKIL"
^XTMP("XPDT",7815,"KRN",19,13508,-1)="0^21"
^XTMP("XPDT",7815,"KRN",19,13508,0)="PRSN TL POC^Edit Update T&L Unit POC Users^^R^^^^^^^^PAID^^"
^XTMP("XPDT",7815,"KRN",19,13508,1,0)="^19.06^2^2^3091124^^^"
^XTMP("XPDT",7815,"KRN",19,13508,1,1,0)="This option allows the PEV ADPAC to enter and edit POC Entry and Approval "
^XTMP("XPDT",7815,"KRN",19,13508,1,2,0)="personnel for a T&L Unit."
^XTMP("XPDT",7815,"KRN",19,13508,20)=""
^XTMP("XPDT",7815,"KRN",19,13508,25)="EDIT^PRSNCTL"
^XTMP("XPDT",7815,"KRN",19,13508,"U")="EDIT UPDATE T&L UNIT POC USERS"
^XTMP("XPDT",7815,"KRN",19,13509,-1)="0^2"
^XTMP("XPDT",7815,"KRN",19,13509,0)="PRSN APPROV POC PAYPD^Approve Pay Period POC Records^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13509,1,0)="^^1^1^3091124^"
^XTMP("XPDT",7815,"KRN",19,13509,1,1,0)="This option is used to approve pay period Nurse POC records."
^XTMP("XPDT",7815,"KRN",19,13509,25)="EN^PRSNAA01"
^XTMP("XPDT",7815,"KRN",19,13509,"U")="APPROVE PAY PERIOD POC RECORDS"
^XTMP("XPDT",7815,"KRN",19,13510,-1)="0^1"
^XTMP("XPDT",7815,"KRN",19,13510,0)="PRSN APPROV CORR POC^Approve Corrected Daily POC Records^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13510,1,0)="^^1^1^3091124^"
^XTMP("XPDT",7815,"KRN",19,13510,1,1,0)="This option is used to approve corrected daily POC records."
^XTMP("XPDT",7815,"KRN",19,13510,25)="EN^PRSNAC01"
^XTMP("XPDT",7815,"KRN",19,13510,"U")="APPROVE CORRECTED DAILY POC RE"
^XTMP("XPDT",7815,"KRN",19,13511,-1)="0^15"
^XTMP("XPDT",7815,"KRN",19,13511,0)="PRSN POC CORRECT RELEASE^Release Corrected POC Data for VANOD Extract^^R^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13511,1,0)="^^7^7^3091207^"
^XTMP("XPDT",7815,"KRN",19,13511,1,1,0)="This option provides the VANOD Site Coordinator or designee the ability "
^XTMP("XPDT",7815,"KRN",19,13511,1,2,0)="to review and release POC data that has been released in the past and has "
^XTMP("XPDT",7815,"KRN",19,13511,1,3,0)="subsequently been corrected and approved.  The option releases all "
^XTMP("XPDT",7815,"KRN",19,13511,1,4,0)="records for the day that has been corrected and may release additional "
^XTMP("XPDT",7815,"KRN",19,13511,1,5,0)="days if they have been impacted by the correction.  E.g., a two day tour "
^XTMP("XPDT",7815,"KRN",19,13511,1,6,0)="that is corrected may impact the following day and that day would also "
^XTMP("XPDT",7815,"KRN",19,13511,1,7,0)="need to be rebuilt and released."
^XTMP("XPDT",7815,"KRN",19,13511,25)="CRELEASE^PRSNCGP"
^XTMP("XPDT",7815,"KRN",19,13511,"U")="RELEASE CORRECTED POC DATA FOR"
^XTMP("XPDT",7815,"KRN",19,13512,-1)="0^20"
^XTMP("XPDT",7815,"KRN",19,13512,0)="PRSN SITE MAINTENANCE COORD^Package Maintenance^^M^^^^^^^^"
^XTMP("XPDT",7815,"KRN",19,13512,1,0)="^^1^1^3091208^"
^XTMP("XPDT",7815,"KRN",19,13512,1,1,0)="Menu option holding maintenance options for the VANOD site coordinator."
^XTMP("XPDT",7815,"KRN",19,13512,10,0)="^19.01IP^3^3"
^XTMP("XPDT",7815,"KRN",19,13512,10,1,0)="13508^1^1"
^XTMP("XPDT",7815,"KRN",19,13512,10,1,"^")="PRSN TL POC"
^XTMP("XPDT",7815,"KRN",19,13512,10,2,0)="13353^2^2"
^XTMP("XPDT",7815,"KRN",19,13512,10,2,"^")="PRSN POC APPLICATION PARAMETER"
^XTMP("XPDT",7815,"KRN",19,13512,10,3,0)="13410^3"
^XTMP("XPDT",7815,"KRN",19,13512,10,3,"^")="PRSN SHOW POC SYSTEM SETUP"
^XTMP("XPDT",7815,"KRN",19,13512,99)="61790,44624"
^XTMP("XPDT",7815,"KRN",19,13512,"U")="PACKAGE MAINTENANCE"
^XTMP("XPDT",7815,"KRN",19.1,583,-1)="0^1"
^XTMP("XPDT",7815,"KRN",19.1,583,0)="PRSN DEP^Nurse POC and TK Key^l^n^0"
^XTMP("XPDT",7815,"KRN",19.1,583,1,0)="^19.11^4^4^3090824^^^"
^XTMP("XPDT",7815,"KRN",19.1,583,1,1,0)="This Key allows a timekeeper access to the Toggle option so they can "
^XTMP("XPDT",7815,"KRN",19.1,583,1,2,0)="choose to enter POC data when they are posting timecards or not.  The key "
^XTMP("XPDT",7815,"KRN",19.1,583,1,3,0)="is given to timekeepers who are added to the POC Data Entry multiple in "
^XTMP("XPDT",7815,"KRN",19.1,583,1,4,0)="the T&L unit file."
^XTMP("XPDT",7815,"KRN",8994,2542,-1)="0^1"
^XTMP("XPDT",7815,"KRN",8994,2542,0)="PRSN NURS LOCATION EXTRACTION^NURSLOC^PRSN9A^4^A^0"
^XTMP("XPDT",7815,"KRN",8994,2542,1,0)="^^23^23^3090804^"
^XTMP("XPDT",7815,"KRN",8994,2542,1,1,0)="VANOD shall have the ability to extract data from the Nursing Location "
^XTMP("XPDT",7815,"KRN",8994,2542,1,2,0)="(file # 211.4)."
^XTMP("XPDT",7815,"KRN",8994,2542,1,3,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2542,1,4,0)="For inpatient settings the location data can be used by VANOD as a map "
^XTMP("XPDT",7815,"KRN",8994,2542,1,5,0)="between nurse POC data and the patients for whom they provide care.  For "
^XTMP("XPDT",7815,"KRN",8994,2542,1,6,0)="other care settings the location data can be used to report an activity."
^XTMP("XPDT",7815,"KRN",8994,2542,1,7,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2542,1,8,0)="Input Parameter"
^XTMP("XPDT",7815,"KRN",8994,2542,1,9,0)="Parameter 1:  The name of the output or return VistA global array"
^XTMP("XPDT",7815,"KRN",8994,2542,1,10,0)="Output. The PEV RPC shall provide a VistA temporary global array of"
^XTMP("XPDT",7815,"KRN",8994,2542,1,11,0)="records with the name provided with the input parameter 1."
^XTMP("XPDT",7815,"KRN",8994,2542,1,12,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2542,1,13,0)="Parameter 2:  The date is in format 'YYYYMMDD' is optional. If there is no"
^XTMP("XPDT",7815,"KRN",8994,2542,1,14,0)="date then the defult date will be 'TODAY'. The Nursing Location output"
^XTMP("XPDT",7815,"KRN",8994,2542,1,15,0)="provided in this RPC shall only include data for locations that are active"
^XTMP("XPDT",7815,"KRN",8994,2542,1,16,0)="in any one of the day # of the Pay Period of the parameter date. If the"
^XTMP("XPDT",7815,"KRN",8994,2542,1,17,0)="current date is between day 1 and day 11 of the pay period, the Nursing"
^XTMP("XPDT",7815,"KRN",8994,2542,1,18,0)="Locations RPC shall return locations that were active for the prior pay"
^XTMP("XPDT",7815,"KRN",8994,2542,1,19,0)="period with the data that currently resides in the NURS LOCATION file"
^XTMP("XPDT",7815,"KRN",8994,2542,1,20,0)="(211.4).  If the current date is between day 12 and day 14 of the pay"
^XTMP("XPDT",7815,"KRN",8994,2542,1,21,0)="period the Nursing Locations RPC shall return locations that are active"
^XTMP("XPDT",7815,"KRN",8994,2542,1,22,0)="for the current pay period with the data that currently resides in the"
^XTMP("XPDT",7815,"KRN",8994,2542,1,23,0)="NURS LOCATION file (211.4)."
^XTMP("XPDT",7815,"KRN",8994,2542,2,0)="^8994.02A^1^1"
^XTMP("XPDT",7815,"KRN",8994,2542,2,1,0)="PRSNDT^1^15^0^1"
^XTMP("XPDT",7815,"KRN",8994,2542,2,1,1,0)="^8994.021^3^3^3090804^^^"
^XTMP("XPDT",7815,"KRN",8994,2542,2,1,1,1,0)="The PRSNDT is, in date format 'YYYYMMDD', for extracting all NURS"
^XTMP("XPDT",7815,"KRN",8994,2542,2,1,1,2,0)="LOCATIONS and their assocated Wards in File #211.4 that is active in any"
^XTMP("XPDT",7815,"KRN",8994,2542,2,1,1,3,0)="one of the Day# (1-14) of the Pay Period of the PRSNDT."
^XTMP("XPDT",7815,"KRN",8994,2542,2,"B","PRSNDT",1)=""
^XTMP("XPDT",7815,"KRN",8994,2542,2,"PARAMSEQ",1,1)=""
^XTMP("XPDT",7815,"KRN",8994,2542,3,0)="^8994.03^31^31^3090804^^^"
^XTMP("XPDT",7815,"KRN",8994,2542,3,1,0)="The PEV RPC shall provide a VistA temporary global array of records with "
^XTMP("XPDT",7815,"KRN",8994,2542,3,2,0)="the name provided with the input parameter 1."
^XTMP("XPDT",7815,"KRN",8994,2542,3,3,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2542,3,4,0)="Header Node"
^XTMP("XPDT",7815,"KRN",8994,2542,3,5,0)="This global array shall have a header node with index 0.  The header node "
^XTMP("XPDT",7815,"KRN",8994,2542,3,6,0)="is a literal string with delimiter '^'.  Data returned in the header node "
^XTMP("XPDT",7815,"KRN",8994,2542,3,7,0)="is defined as follows:"
^XTMP("XPDT",7815,"KRN",8994,2542,3,8,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2542,3,9,0)="Delimiter       Piece # Data Description"
^XTMP("XPDT",7815,"KRN",8994,2542,3,10,0)="^       1       Site Name (STATION NUMBER) of VistA Database"
^XTMP("XPDT",7815,"KRN",8994,2542,3,11,0)="^       2       Total Number of Records Extracted"
^XTMP("XPDT",7815,"KRN",8994,2542,3,12,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2542,3,13,0)="Data Nodes"
^XTMP("XPDT",7815,"KRN",8994,2542,3,14,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2542,3,15,0)="The output shall be an array of records indexed by sequence number "
^XTMP("XPDT",7815,"KRN",8994,2542,3,16,0)="beginning at 1.  Each record is a delimited literal string defined as "
^XTMP("XPDT",7815,"KRN",8994,2542,3,17,0)="follows:"
^XTMP("XPDT",7815,"KRN",8994,2542,3,18,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2542,3,19,0)="Delimiter       Piece # Data Description"
^XTMP("XPDT",7815,"KRN",8994,2542,3,20,0)="^       1       Sequence Number (beginning at 1)"
^XTMP("XPDT",7815,"KRN",8994,2542,3,21,0)="^       2       Record Type: L for Location, W for MAS Ward"
^XTMP("XPDT",7815,"KRN",8994,2542,3,22,0)="^       3       IEN of Hospital Location File #44"
^XTMP("XPDT",7815,"KRN",8994,2542,3,23,0)="^       4       Hospital Location Name"
^XTMP("XPDT",7815,"KRN",8994,2542,3,24,0)="^       5       DIVISION (INSTITUTION FILE #4 IEN as defined in the "
^XTMP("XPDT",7815,"KRN",8994,2542,3,25,0)="                computed expression in .02 field of file 211.4)"
^XTMP("XPDT",7815,"KRN",8994,2542,3,26,0)="^       6       INSTITUTION FILE NAME"
^XTMP("XPDT",7815,"KRN",8994,2542,3,27,0)="^       7       Care Setting (I=inpatient/O=other)"
^XTMP("XPDT",7815,"KRN",8994,2542,3,28,0)="^       8       Pt. Pop (VANOD Unit Type)"
^XTMP("XPDT",7815,"KRN",8994,2542,3,29,0)="^       9       IEN of MAS Ward File (#42)"
^XTMP("XPDT",7815,"KRN",8994,2542,3,30,0)="^       10      MAS Ward Name"
^XTMP("XPDT",7815,"KRN",8994,2542,3,31,0)="^       11      DSS Department"
^XTMP("XPDT",7815,"KRN",8994,2543,-1)="0^2"
^XTMP("XPDT",7815,"KRN",8994,2543,0)="PRSN POC DAILY TIME EXTRACTION^POCTIME^PRSN9B^4^A^0^^1"
^XTMP("XPDT",7815,"KRN",8994,2543,1,0)="^^13^13^3090731^"
^XTMP("XPDT",7815,"KRN",8994,2543,1,1,0)="VANOD shall have the ability to extract data from the POC DAILY ACTIVITY"
^XTMP("XPDT",7815,"KRN",8994,2543,1,2,0)="EXTRACTION File (#451.7)."
^XTMP("XPDT",7815,"KRN",8994,2543,1,3,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2543,1,4,0)="Input Parameters: The PEV RPC Broker call shall be called with the"
^XTMP("XPDT",7815,"KRN",8994,2543,1,5,0)="following input parameters."
^XTMP("XPDT",7815,"KRN",8994,2543,1,6,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2543,1,7,0)="Parameter 1:  The name of the output or return VistA globa array."
^XTMP("XPDT",7815,"KRN",8994,2543,1,8,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2543,1,9,0)="Parameter 2:  Integer - records with a sequence number greater than"
^XTMP("XPDT",7815,"KRN",8994,2543,1,10,0)="this value shall be returned, in sequence.  The number of records returned"
^XTMP("XPDT",7815,"KRN",8994,2543,1,11,0)="shall not exceed the value passed in parameter 3."
^XTMP("XPDT",7815,"KRN",8994,2543,1,12,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2543,1,13,0)="Parameter 3:  Integer - Maximum number of records to be returned."
^XTMP("XPDT",7815,"KRN",8994,2543,2,0)="^8994.02A^4^2"
^XTMP("XPDT",7815,"KRN",8994,2543,2,3,0)="PRSNSEQ^1^15^1^1"
^XTMP("XPDT",7815,"KRN",8994,2543,2,3,1,0)="^^4^4^3090731^"
^XTMP("XPDT",7815,"KRN",8994,2543,2,3,1,1,0)="Any records in POC DAILY ACTIVITY EXTRACTION File (#451.7) with a sequence"
^XTMP("XPDT",7815,"KRN",8994,2543,2,3,1,2,0)="number greater than this value shall be returned, in sequence.  The number"
^XTMP("XPDT",7815,"KRN",8994,2543,2,3,1,3,0)="of records returned shall not exceed the value passed in parameter"
^XTMP("XPDT",7815,"KRN",8994,2543,2,3,1,4,0)="PRSNREC."
^XTMP("XPDT",7815,"KRN",8994,2543,2,4,0)="PRSNREC^1^15^1^2"
^XTMP("XPDT",7815,"KRN",8994,2543,2,4,1,0)="^^1^1^3090731^"
^XTMP("XPDT",7815,"KRN",8994,2543,2,4,1,1,0)="This is the Maximum number of records to be returned."
^XTMP("XPDT",7815,"KRN",8994,2543,2,"B","PRSNREC",4)=""
^XTMP("XPDT",7815,"KRN",8994,2543,2,"B","PRSNSEQ",3)=""
^XTMP("XPDT",7815,"KRN",8994,2543,2,"PARAMSEQ",1,3)=""
^XTMP("XPDT",7815,"KRN",8994,2543,2,"PARAMSEQ",2,4)=""
^XTMP("XPDT",7815,"KRN",8994,2543,3,0)="^^62^62^3090731^"
^XTMP("XPDT",7815,"KRN",8994,2543,3,1,0)="The PEV RPC Broker call shall provide a VistA temporary global array of "
^XTMP("XPDT",7815,"KRN",8994,2543,3,2,0)="records with the name provided with the input parameter 1."
^XTMP("XPDT",7815,"KRN",8994,2543,3,3,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2543,3,4,0)="Header Node"
^XTMP("XPDT",7815,"KRN",8994,2543,3,5,0)="This global array shall have a header node with index 0.  The header node "
^XTMP("XPDT",7815,"KRN",8994,2543,3,6,0)="is a literal string with delimiter  ^ .  Data returned in the header node "
^XTMP("XPDT",7815,"KRN",8994,2543,3,7,0)="is defined as follows:"
^XTMP("XPDT",7815,"KRN",8994,2543,3,8,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2543,3,9,0)="Delimiter       Piece # Data Description"
^XTMP("XPDT",7815,"KRN",8994,2543,3,10,0)="^       1       Site Name (STATION NUMBER) of VistA database"
^XTMP("XPDT",7815,"KRN",8994,2543,3,11,0)="^       2       Sequence # of first record in returned data"
^XTMP("XPDT",7815,"KRN",8994,2543,3,12,0)="^       3       Sequence # of last record returned"
^XTMP("XPDT",7815,"KRN",8994,2543,3,13,0)="^       4       Total number of records returned"
^XTMP("XPDT",7815,"KRN",8994,2543,3,14,0)="^       5       Sequence # of last record currently in Nurse POC "
^XTMP("XPDT",7815,"KRN",8994,2543,3,15,0)="                Extraction file (#541.7)"
^XTMP("XPDT",7815,"KRN",8994,2543,3,16,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2543,3,17,0)="Data Nodes"
^XTMP("XPDT",7815,"KRN",8994,2543,3,18,0)="The output shall be an array of records indexed by sequence number as "
^XTMP("XPDT",7815,"KRN",8994,2543,3,19,0)="defined by the input parameters.  Each record is a delimited literal "
^XTMP("XPDT",7815,"KRN",8994,2543,3,20,0)="string defined as follows:"
^XTMP("XPDT",7815,"KRN",8994,2543,3,21,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2543,3,22,0)="Delimiter       Piece # Data Description"
^XTMP("XPDT",7815,"KRN",8994,2543,3,23,0)="^       1       Sequence Number"
^XTMP("XPDT",7815,"KRN",8994,2543,3,24,0)="^       2       Station # (3 digit station number)"
^XTMP("XPDT",7815,"KRN",8994,2543,3,25,0)="^       3       Division (2 character division code-if applicable)"
^XTMP("XPDT",7815,"KRN",8994,2543,3,26,0)="^       4       Version Number (Sequence Number of Times of Reconciled) "
^XTMP("XPDT",7815,"KRN",8994,2543,3,27,0)="^       5       Nurse ID (SS# without  - )"
^XTMP("XPDT",7815,"KRN",8994,2543,3,28,0)="^       6       IEN (Internal Entry Number) of File #450 Paid Employee"
^XTMP("XPDT",7815,"KRN",8994,2543,3,29,0)="^       7       Date (YYYYMMDD)"
^XTMP("XPDT",7815,"KRN",8994,2543,3,30,0)="^       8       Start Time (0000 - 2345)"
^XTMP("XPDT",7815,"KRN",8994,2543,3,31,0)="^       9       Stop Time (0015 - 2400) (stop time must be greater start"
^XTMP("XPDT",7815,"KRN",8994,2543,3,32,0)="                time)"
^XTMP("XPDT",7815,"KRN",8994,2543,3,33,0)="^       10      Type of Time"
^XTMP("XPDT",7815,"KRN",8994,2543,3,34,0)="^       11      Point of Care derived from  NURS LOCATION 211.4"
^XTMP("XPDT",7815,"KRN",8994,2543,3,35,0)="^       12      Mandatory Overtime (M or V)"
^XTMP("XPDT",7815,"KRN",8994,2543,3,36,0)="^       13      Reason for Overtime "
^XTMP("XPDT",7815,"KRN",8994,2543,3,37,0)="^       14      Types of Work"
^XTMP("XPDT",7815,"KRN",8994,2543,3,38,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2543,3,39,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2543,3,40,0)="Version Number (Piece 4)   Full Day Substitution"
^XTMP("XPDT",7815,"KRN",8994,2543,3,41,0)="The records with highest version number are the most recently released "
^XTMP("XPDT",7815,"KRN",8994,2543,3,42,0)="data records.  Records with version number one are original records.  "
^XTMP("XPDT",7815,"KRN",8994,2543,3,43,0)="Records with a version number greater than 1 are corrections to records "
^XTMP("XPDT",7815,"KRN",8994,2543,3,44,0)="that have been released previously."
^XTMP("XPDT",7815,"KRN",8994,2543,3,45,0)="The highest version number for a nurse and a date  is a replacement for "
^XTMP("XPDT",7815,"KRN",8994,2543,3,46,0)="all data for the earlier version of the data for that nurse on that date. "
^XTMP("XPDT",7815,"KRN",8994,2543,3,47,0)="(Full day substitution)."
^XTMP("XPDT",7815,"KRN",8994,2543,3,48,0)="It may be necessary to provide VANOD with a correction to a day off where "
^XTMP("XPDT",7815,"KRN",8994,2543,3,49,0)="overtime was incorrectly reported and there was no activity on that day.  "
^XTMP("XPDT",7815,"KRN",8994,2543,3,50,0)="The RPC shall return a record with identifiers but no activity data for "
^XTMP("XPDT",7815,"KRN",8994,2543,3,51,0)="that day (see sample record 28)."
^XTMP("XPDT",7815,"KRN",8994,2543,3,52,0)=" "
^XTMP("XPDT",7815,"KRN",8994,2543,3,53,0)="Seq#    Sta #   Div.    Version #       Nurse ID        Nurse IEN 450   "
^XTMP("XPDT",7815,"KRN",8994,2543,3,54,0)="FM Date Start Time      Stop Time       Type of Time    Point of Care   "
^XTMP("XPDT",7815,"KRN",8994,2543,3,55,0)="Mand.  OT       Reason for overtime     Type of Work"
^XTMP("XPDT",7815,"KRN",8994,2543,3,56,0)="25      688     AD      1       000-45-8452     13418   3091016 0700    "
^XTMP("XPDT",7815,"KRN",8994,2543,3,57,0)="1000    Tour Time       2841"
^XTMP("XPDT",7815,"KRN",8994,2543,3,58,0)="26      688     AD      1       000-45-8452     13418   3091016 1000    "
^XTMP("XPDT",7815,"KRN",8994,2543,3,59,0)="1900    Tour Time       2841                    Sitter"
^XTMP("XPDT",7815,"KRN",8994,2543,3,60,0)="27      688     AD      1       000-45-8452     13418   3091016 1900    "
^XTMP("XPDT",7815,"KRN",8994,2543,3,61,0)="2100    Overtime        1677    Mandatory"
^XTMP("XPDT",7815,"KRN",8994,2543,3,62,0)="28      688     AD      2       000-22-9999     2088    3090912"
^XTMP("XPDT",7815,"MBREQ")="0"
^XTMP("XPDT",7815,"ORD",3,19.1)="19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1"
^XTMP("XPDT",7815,"ORD",3,19.1,0)="SECURITY KEY"
^XTMP("XPDT",7815,"ORD",5,.4)=".4;5;;;EDEOUT^DIFROMSO(.4,DA,"""",XPDA);FPRE^DIFROMSI(.4,"""",XPDA);EPRE^DIFROMSI(.4,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.4,DA,"""",XPDA);DEL^DIFROMSK(.4,"""",%)"
^XTMP("XPDT",7815,"ORD",5,.4,0)="PRINT TEMPLATE"
^XTMP("XPDT",7815,"ORD",8,.403)=".403;8;;;EDEOUT^DIFROMSO(.403,DA,"""",XPDA);FPRE^DIFROMSI(.403,"""",XPDA);EPRE^DIFROMSI(.403,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.403,DA,"""",XPDA);DEL^DIFROMSK(.403,"""",%)"
^XTMP("XPDT",7815,"ORD",8,.403,0)="FORM"
^XTMP("XPDT",7815,"ORD",16,8994)="8994;16;1;;;;;;;RPCDEL^XPDIA1"
^XTMP("XPDT",7815,"ORD",16,8994,0)="REMOTE PROCEDURE"
^XTMP("XPDT",7815,"ORD",18,19)="19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA"
^XTMP("XPDT",7815,"ORD",18,19,0)="OPTION"
^XTMP("XPDT",7815,"PKG",408,-1)="1^1"
^XTMP("XPDT",7815,"PKG",408,0)="PAID^PRS^PAID"
^XTMP("XPDT",7815,"PKG",408,20,0)="^9.402P^^"
^XTMP("XPDT",7815,"PKG",408,22,0)="^9.49I^1^1"
^XTMP("XPDT",7815,"PKG",408,22,1,0)="4.0^2950912^2960130"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,0)="126^3100308"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,0)="^^19^19^3100302"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,1,0)="This patch primarily implements new functionality within VistA's"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,2,0)="Personnel and Accounting Integrated Data/ Enhanced Time and Attendance"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,3,0)="(PAID/ETA) software version 4.0 to provides appropriate"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,4,0)="data to VANOD (Veterans Affairs Nursing Outcomes Database) in accordance"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,5,0)="with Public Law 107-135 and the OIG Recommendation 4a (annual reporting"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,6,0)="requirement).  The patch also includes minor modifications to existing ETA"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,7,0)="functionality to support the collection of data for the VANOD."
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,8,0)=" "
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,9,0)="This patch is dependent on the Nursing Service patch-NUR*4.0*43.  The "
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,10,0)="Nursing "
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,11,0)="service patch also supports the collection of data for the VANOD.  Patch "
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,12,0)="NUR*4."
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,13,0)="0*43 must be installed prior to patch PRS*4.0*126."
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,14,0)=" "
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,15,0)="The patch implements functionality to gather and store information related"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,16,0)="to nurses providing direct patient care (as well as indirect care).  It"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,17,0)="provides functionality to enter, edit, update, review, certify and store"
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,18,0)="this information.  The system provides the ability for a point to point "
^XTMP("XPDT",7815,"PKG",408,22,1,"PAH",1,1,19,0)="transfer of this information from each VistA instance to the VANOD."
^XTMP("XPDT",7815,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7815,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7815,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7815,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7815,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7815,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7815,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7815,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7815,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7815,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7815,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7815,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7815,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7815,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7815,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7815,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7815,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7815,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7815,"QUES","XPM1","B")=""
^XTMP("XPDT",7815,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7815,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7815,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7815,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7815,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7815,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7815,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7815,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7815,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7815,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7815,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7815,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7815,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7815,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7815,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7815,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7815,"RTN")="40"
^XTMP("XPDT",7815,"RTN","PRSADP1")="0^42^B11335770^B11280993"
^XTMP("XPDT",7815,"RTN","PRSADP1",1,0)="PRSADP1 ; HISC/REL,WIRMFO/JAH - Display Employee T&A Data ;AUG 07, 1997"
^XTMP("XPDT",7815,"RTN","PRSADP1",2,0)=" ;;4.0;PAID;**22,114,126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSADP1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSADP1",4,0)=" W:$E(IOST,1,2)=""C-"" @IOF W !?26,""VA TIME & ATTENDANCE SYSTEM"""
^XTMP("XPDT",7815,"RTN","PRSADP1",5,0)=" W !?23,""EMPLOYEE TIME AND ATTENDANCE DATA"" D HDR"
^XTMP("XPDT",7815,"RTN","PRSADP1",6,0)=" W !!,?7,""Date"",?21,""Scheduled Tour"",?46,""Tour Exceptions"""
^XTMP("XPDT",7815,"RTN","PRSADP1",7,0)=" W !?3,""------------------------------------------------------------------------"",!"
^XTMP("XPDT",7815,"RTN","PRSADP1",8,0)="F0 ; Display Frames"
^XTMP("XPDT",7815,"RTN","PRSADP1",9,0)=" K Y1,Y2 S Y1=$G(^PRST(458,PPI,""E"",DFN,""D"",DAY,1)),Y2=$G(^(2)),Y3=$G(^(3)),Y4=$G(^(4)),TC=$P($G(^(0)),""^"",2)"
^XTMP("XPDT",7815,"RTN","PRSADP1",10,0)=" I Y1="""" S Y1=$S(TC=1:""Day Off"",TC=2:""Day Tour"",TC=3!(TC=4):""Intermittent"",1:"""")"
^XTMP("XPDT",7815,"RTN","PRSADP1",11,0)=" I "" 1 3 4 ""'[TC,$P($G(^PRST(458,PPI,""E"",DFN,""D"",DAY,10)),""^"",1)="""" S Y2(1)=""Unposted"""
^XTMP("XPDT",7815,"RTN","PRSADP1",12,0)=" I TC=3,$P($G(^PRST(458,PPI,""E"",DFN,""D"",DAY,10)),""^"",4)=1 S Y2(1)=""Day Worked"""
^XTMP("XPDT",7815,"RTN","PRSADP1",13,0)=" W !?3,DTE S (L3,L4)=0 I Y1="""",Y2="""" S Y31="""" G EX"
^XTMP("XPDT",7815,"RTN","PRSADP1",14,0)=" D S1"
^XTMP("XPDT",7815,"RTN","PRSADP1",15,0)=" F K=1:1 Q:'$D(Y1(K))&'$D(Y2(K))  W:K>1 ! W:$D(Y1(K)) ?21,Y1(K) W:$D(Y2(K)) ?45,$P(Y2(K),""^"",1),?63,$P(Y2(K),""^"",2)"
^XTMP("XPDT",7815,"RTN","PRSADP1",16,0)=" W:Y3'="""" !?10,Y3"
^XTMP("XPDT",7815,"RTN","PRSADP1",17,0)="EX Q"
^XTMP("XPDT",7815,"RTN","PRSADP1",18,0)="F1 ; Display Pay period for Certification"
^XTMP("XPDT",7815,"RTN","PRSADP1",19,0)=" K Y1,Y2 S Y1=$G(^PRST(458,PPI,""E"",DFN,""D"",DAY,1)),Y2=$G(^(2)),Y3=$G(^(3)),Y4=$G(^(4)),TC=$P($G(^(0)),""^"",2)"
^XTMP("XPDT",7815,"RTN","PRSADP1",20,0)=" I Y1="""" S Y1=$S(TC=1:""Day Off"",TC=2:""Day Tour"",TC=3!(TC=4):""Intermittent"",1:"""")"
^XTMP("XPDT",7815,"RTN","PRSADP1",21,0)=" I "" 1 3 4 ""'[TC,$P($G(^PRST(458,PPI,""E"",DFN,""D"",DAY,10)),""^"",1)="""" S Y2(1)=""Unposted"""
^XTMP("XPDT",7815,"RTN","PRSADP1",22,0)=" I TC=3,$P($G(^PRST(458,PPI,""E"",DFN,""D"",DAY,10)),""^"",4)=1 S Y2(1)=""Day Worked"""
^XTMP("XPDT",7815,"RTN","PRSADP1",23,0)=" W:'$D(PRSNTD) !?3,DTE S (L3,L4)=0 I Y1="""",Y2="""" S Y31="""" G EX"
^XTMP("XPDT",7815,"RTN","PRSADP1",24,0)=" D S1"
^XTMP("XPDT",7815,"RTN","PRSADP1",25,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSADP1",26,0)="S1 ; Set Schedule Array"
^XTMP("XPDT",7815,"RTN","PRSADP1",27,0)=" S Y31="""""
^XTMP("XPDT",7815,"RTN","PRSADP1",28,0)=" F L1=1:3:19 S A1=$P(Y1,""^"",L1) Q:A1=""""  D"
^XTMP("XPDT",7815,"RTN","PRSADP1",29,0)=" .S L3=L3+1,Y1(L3)=A1 S:$P(Y1,""^"",L1+1)'="""" Y1(L3)=Y1(L3)_""-""_$P(Y1,""^"",L1+1)"
^XTMP("XPDT",7815,"RTN","PRSADP1",30,0)=" .S:Y31'="""" Y31=Y31_"", "" S Y31=Y31_Y1(L3)"
^XTMP("XPDT",7815,"RTN","PRSADP1",31,0)=" .I $P(Y1,""^"",L1+2)'="""" S L3=L3+1,Y1(L3)=""  ""_$P($G(^PRST(457.2,+$P(Y1,""^"",L1+2),0)),""^"",1)"
^XTMP("XPDT",7815,"RTN","PRSADP1",32,0)=" .I  S Y31=Y31_"" ""_$P($G(^PRST(457.2,+$P(Y1,""^"",L1+2),0)),""^"",6)"
^XTMP("XPDT",7815,"RTN","PRSADP1",33,0)=" .Q"
^XTMP("XPDT",7815,"RTN","PRSADP1",34,0)=" G:Y4="""" S2"
^XTMP("XPDT",7815,"RTN","PRSADP1",35,0)=" F L1=1:3:19 S A1=$P(Y4,""^"",L1) Q:A1=""""  D"
^XTMP("XPDT",7815,"RTN","PRSADP1",36,0)=" .S L3=L3+1,Y1(L3)=A1 S:$P(Y4,""^"",L1+1)'="""" Y1(L3)=Y1(L3)_""-""_$P(Y4,""^"",L1+1)"
^XTMP("XPDT",7815,"RTN","PRSADP1",37,0)=" .S:Y31'="""" Y31=Y31_"", "" S Y31=Y31_Y1(L3)"
^XTMP("XPDT",7815,"RTN","PRSADP1",38,0)=" .I $P(Y4,""^"",L1+2)'="""" S L3=L3+1,Y1(L3)=""  ""_$P($G(^PRST(457.2,+$P(Y4,""^"",L1+2),0)),""^"",1)"
^XTMP("XPDT",7815,"RTN","PRSADP1",39,0)=" .I  S Y31=Y31_"" ""_$P($G(^PRST(457.2,+$P(Y1,""^"",L1+2),0)),""^"",6)"
^XTMP("XPDT",7815,"RTN","PRSADP1",40,0)=" .Q"
^XTMP("XPDT",7815,"RTN","PRSADP1",41,0)="S2 ; Set Worked Array"
^XTMP("XPDT",7815,"RTN","PRSADP1",42,0)=" F L1=1:4:25 D  I A1="""" G S3"
^XTMP("XPDT",7815,"RTN","PRSADP1",43,0)=" .S A1=$P(Y2,""^"",L1+2) Q:A1=""""  S L4=L4+1"
^XTMP("XPDT",7815,"RTN","PRSADP1",44,0)=" .S A2=$P(Y2,""^"",L1) I A2'="""" S Y2(L4)=A2_""-""_$P(Y2,""^"",L1+1)"
^XTMP("XPDT",7815,"RTN","PRSADP1",45,0)=" .S K=$O(^PRST(457.3,""B"",A1,0)) S $P(Y2(L4),""^"",2)=A1_"" ""_$P($G(^PRST(457.3,+K,0)),""^"",2)"
^XTMP("XPDT",7815,"RTN","PRSADP1",46,0)=" .I $P(Y2,""^"",L1+3)'="""" S L4=L4+1,Y2(L4)=""  ""_$P($G(^PRST(457.4,+$P(Y2,""^"",L1+3),0)),""^"",1)"
^XTMP("XPDT",7815,"RTN","PRSADP1",47,0)=" .Q"
^XTMP("XPDT",7815,"RTN","PRSADP1",48,0)="S3 Q"
^XTMP("XPDT",7815,"RTN","PRSADP1",49,0)="HDR ; Display Employee Data"
^XTMP("XPDT",7815,"RTN","PRSADP1",50,0)=" S C0=^PRSPC(DFN,0) W !!,$P(C0,""^"",1) S X=$P(C0,""^"",9)"
^XTMP("XPDT",7815,"RTN","PRSADP1",51,0)=" I '$G(PRSTLV)!($G(PRSTLV)=1) W ?65,""XXX-XX-"",$E(X,6,9)"
^XTMP("XPDT",7815,"RTN","PRSADP1",52,0)=" I $G(PRSTLV)=2!($G(PRSTLV)=3) W ?65,$E(X),""XX-XX-"",$E(X,6,9)"
^XTMP("XPDT",7815,"RTN","PRSADP1",53,0)=" I $G(PRSTLV)=7 W ?65,$E(X,1,3)_""-""_$E(X,4,5)_""-""_$E(X,6,9)"
^XTMP("XPDT",7815,"RTN","PRSADP1",54,0)=" W !!,""Station: "",$P(C0,""^"",7),?30,""Normal Hours: "",$J($P(C0,""^"",16),3),?65,""Duty Basis:"",?77,$P(C0,""^"",10)"
^XTMP("XPDT",7815,"RTN","PRSADP1",55,0)=" W !,""T&L:     "",$P(C0,""^"",8),?30,""Pay Plan:"",?46,$P(C0,""^"",21),?65,""Comp/Flex:"",?77,$S(PPE'="""":$P($G(^PRST(458,PPI,""E"",DFN,0)),""^"",6),1:$P($G(^PRSPC(DFN,1)),""^"",7))"
^XTMP("XPDT",7815,"RTN","PRSADP1",56,0)=" W ! W:PPE'="""" ""Pay Per: "",PPE W ?65,""FLSA:"",?77,$P(C0,""^"",12) Q"
^XTMP("XPDT",7815,"RTN","PRSATIM")="0^38^B4486909^B4139617"
^XTMP("XPDT",7815,"RTN","PRSATIM",1,0)="PRSATIM ;HISC/REL - Time Input Conversion ;01/21/05"
^XTMP("XPDT",7815,"RTN","PRSATIM",2,0)=" ;;4.0;PAID;**69,70,71,93,100,126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSATIM",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSATIM",4,0)=" S X=$TR(X,""adimnop"",""ADIMNOP"")"
^XTMP("XPDT",7815,"RTN","PRSATIM",5,0)=" S X=$S(X=""M"":""MID"",X=""N"":""NOON"",1:X)"
^XTMP("XPDT",7815,"RTN","PRSATIM",6,0)=" I X?1""12"".A S X=$S(X=""12M"":""MID"",X=""12N"":""NOON"",1:X)"
^XTMP("XPDT",7815,"RTN","PRSATIM",7,0)=" I X?1.A S X=$S(X[""MID"":2400,X[""NOON"":1200,1:"""")"
^XTMP("XPDT",7815,"RTN","PRSATIM",8,0)=" S:$E(X,$L(X))=""M"" X=$E(X,1,$L(X)-1) S X1=$E(X,$L(X)) I X1?1U,""AP""'[X1 G ERR"
^XTMP("XPDT",7815,"RTN","PRSATIM",9,0)=" S X1=$P(X,"":"",2) I X1'="""",X1'?2N1.2U G ERR"
^XTMP("XPDT",7815,"RTN","PRSATIM",10,0)=" I $L(X)>7 G ERR"
^XTMP("XPDT",7815,"RTN","PRSATIM",11,0)=" I X'?4N,$S($L(+X)<3:+X,1:+X\100)>12 G ERR"
^XTMP("XPDT",7815,"RTN","PRSATIM",12,0)=" S X=$P(X,"":"",1)_$P(X,"":"",2),X1=X"
^XTMP("XPDT",7815,"RTN","PRSATIM",13,0)=" G:X?4N A I X'?1.4N1.2U G ERR"
^XTMP("XPDT",7815,"RTN","PRSATIM",14,0)=" S:X<13 X=X*100 I X1[""A"" G:X>1259 ERR S X=$S(X=1200:2400,X>1159:X-1200,1:X)"
^XTMP("XPDT",7815,"RTN","PRSATIM",15,0)=" E  I X<1200,X1[""P""!(X<600) S X=X+1200 I X<1300 G ERR"
^XTMP("XPDT",7815,"RTN","PRSATIM",16,0)="A I X>2400!('X&(X'=""0000""))!(X#100>59) G ERR"
^XTMP("XPDT",7815,"RTN","PRSATIM",17,0)=" S X1=+X I 'X1!(X1=1200)!(X1=2400) S X=$S(X1=1200:""NOON"",1:""MID"") G DNE"
^XTMP("XPDT",7815,"RTN","PRSATIM",18,0)=" S X1=$S(X1>1259:X1-1200,1:X1),X1=$E(""000"",0,4-$L(X1))_X1_$S(X=2400:""A"",X>1159:""P"",1:""A"")"
^XTMP("XPDT",7815,"RTN","PRSATIM",19,0)=" I ""00^15^30^45""'[$E(X1,3,4) G ERR"
^XTMP("XPDT",7815,"RTN","PRSATIM",20,0)=" S X=$E(X1,1,2)_"":""_$E(X1,3,5)"
^XTMP("XPDT",7815,"RTN","PRSATIM",21,0)="DNE K X1 Q"
^XTMP("XPDT",7815,"RTN","PRSATIM",22,0)="ERR K X,X1 Q"
^XTMP("XPDT",7815,"RTN","PRSATIM",23,0)="CNV ; Convert Start/Stop to minutes"
^XTMP("XPDT",7815,"RTN","PRSATIM",24,0)=" ; X=start_""^""_stop  Output: Y=start(min)_""^""_stop(min)"
^XTMP("XPDT",7815,"RTN","PRSATIM",25,0)=" S CNX=X,X=$P(CNX,""^"",1),Y=0 D MIL S Y=Y\100*60+(Y#100),$P(CNX,""^"",1)=Y"
^XTMP("XPDT",7815,"RTN","PRSATIM",26,0)=" S X=$P(CNX,""^"",2),Y=1 D MIL S Y=Y\100*60+(Y#100)"
^XTMP("XPDT",7815,"RTN","PRSATIM",27,0)=" S Y=$P(CNX,""^"",1)_""^""_Y K CNX Q"
^XTMP("XPDT",7815,"RTN","PRSATIM",28,0)="MIL ; Convert from AM/PM to 2400"
^XTMP("XPDT",7815,"RTN","PRSATIM",29,0)=" ; X=time Y: 0=Mid=0,1=Mid=2400 Output: Y=time in 2400"
^XTMP("XPDT",7815,"RTN","PRSATIM",30,0)=" I X=""MID""!(X=""NOON"") S Y=$S(X=""NOON"":1200,Y:2400,1:0) Q"
^XTMP("XPDT",7815,"RTN","PRSATIM",31,0)=" S Y=$P(X,"":"",1)_$P(X,"":"",2),Y=+Y Q:X[""A"""
^XTMP("XPDT",7815,"RTN","PRSATIM",32,0)=" S:Y<1200 Y=Y+1200 Q"
^XTMP("XPDT",7815,"RTN","PRSATIM",33,0)="HLP ; Time Help"
^XTMP("XPDT",7815,"RTN","PRSATIM",34,0)=" D EN^DDIOL(""     Time may be entered as 8A or 8a, 8:00A, 8:15A, 8:15AM or military"")"
^XTMP("XPDT",7815,"RTN","PRSATIM",35,0)=" D EN^DDIOL(""     time: 0800, 1300; or MID or 12M for midnight; NOON or 12N for noon."")"
^XTMP("XPDT",7815,"RTN","PRSATIM",36,0)=" D EN^DDIOL(""     Time must be in quarter hours; e.g., 8A or 8:15A or 8:30A or 8:45A.""),EN^DDIOL("" "")"
^XTMP("XPDT",7815,"RTN","PRSATIM",37,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSATP")="0^43^B32294391^B31400754"
^XTMP("XPDT",7815,"RTN","PRSATP",1,0)="PRSATP ;HISC/REL,WIRMFO/MGD/PLT - Timekeeper Post Time ;2/24/10"
^XTMP("XPDT",7815,"RTN","PRSATP",2,0)=" ;;4.0;PAID;**22,57,69,92,102,93,112,126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSATP",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSATP",4,0)=" ; input (from calling option)"
^XTMP("XPDT",7815,"RTN","PRSATP",5,0)=" ;   PTPF - (optional) part-time physician flag, true (=1) when called"
^XTMP("XPDT",7815,"RTN","PRSATP",6,0)=" ;          by the posting option for part-time physicians with a memo."
^XTMP("XPDT",7815,"RTN","PRSATP",7,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",8,0)=" N GLOB ; global reference for employee's time & attendance record."
^XTMP("XPDT",7815,"RTN","PRSATP",9,0)=" N PRSDT"
^XTMP("XPDT",7815,"RTN","PRSATP",10,0)=" S PRSTLV=2 D ^PRSAUTL G:TLI<1 EX S %DT=""X"",X=""T+3"" D ^%DT"
^XTMP("XPDT",7815,"RTN","PRSATP",11,0)=" S %DT=""AEPX"",%DT(""A"")=""Posting Date: "",%DT(""B"")=""T-1"",%DT(0)=-Y W ! D ^%DT"
^XTMP("XPDT",7815,"RTN","PRSATP",12,0)=" G:Y<1 EX S (PRSDT,D1)=Y S Y=$G(^PRST(458,""AD"",D1)),PPI=$P(Y,""^"",1),DAY=$P(Y,""^"",2)"
^XTMP("XPDT",7815,"RTN","PRSATP",13,0)=" I PPI="""" W !!,$C(7),""Pay Period is Not Open Yet!"" G EX"
^XTMP("XPDT",7815,"RTN","PRSATP",14,0)=" S PPE=$P($G(^PRST(458,PPI,0)),""^"",1),DTE=$P($G(^PRST(458,PPI,2)),""^"",DAY),DTI=$P($G(^(1)),""^"",DAY)"
^XTMP("XPDT",7815,"RTN","PRSATP",15,0)="D2 W !!,""Would you like to edit the T & A RECORDs in alphabetical order"" S %=1 D YN^DICN I % S LP=% G EX:%=-1,LOOP:%=1,NME"
^XTMP("XPDT",7815,"RTN","PRSATP",16,0)=" W !!,""Answer YES if you want all RECORDs brought up for which no data"""
^XTMP("XPDT",7815,"RTN","PRSATP",17,0)=" W !,""has been entered."" G D2"
^XTMP("XPDT",7815,"RTN","PRSATP",18,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",19,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",20,0)="LOOP ;"
^XTMP("XPDT",7815,"RTN","PRSATP",21,0)=" S LP=1,NN="""""
^XTMP("XPDT",7815,"RTN","PRSATP",22,0)=" F  S NN=$O(^PRSPC(""ATL""_TLE,NN)) Q:NN=""""  F DFN=0:0 S DFN=$O(^PRSPC(""ATL""_TLE,NN,DFN)) Q:DFN<1  I $$PTPSCR(DFN,PRSDT,$G(PTPF)) S GLOB="""" D POST D:GLOB]"""" UNLOCK^PRSLIB00(GLOB),NURSEPOC^PRSNEETP(TLI,PPI,DFN,PRSDT) I 'LP G EX"
^XTMP("XPDT",7815,"RTN","PRSATP",23,0)=" G EX"
^XTMP("XPDT",7815,"RTN","PRSATP",24,0)="NME K DIC S DIC(""A"")=""Select EMPLOYEE: "",DIC(""S"")=""I $P(^(0),""""^"""",8)=TLE,$D(^PRST(458,PPI,""""E"""",+Y)),$$PTPSCR^PRSATP(+Y,PRSDT,$G(PTPF))"",DIC(0)=""AEQM"",DIC=""^PRSPC("",D=""ATL""_TLE W ! D IX^DIC S DFN=+Y K DIC"
^XTMP("XPDT",7815,"RTN","PRSATP",25,0)=" G:DFN<1 EX S GLOB="""" D POST D:GLOB]"""" UNLOCK^PRSLIB00(GLOB),NURSEPOC^PRSNEETP(TLI,PPI,DFN,PRSDT) G NME"
^XTMP("XPDT",7815,"RTN","PRSATP",26,0)="POST S TC=$P($G(^PRST(458,PPI,""E"",DFN,""D"",DAY,0)),""^"",2),TC2=$P($G(^(0)),""^"",13)"
^XTMP("XPDT",7815,"RTN","PRSATP",27,0)=" I 'TC Q:LP'=2  W !!?5,""This Employee has no tour entered for this date."" Q"
^XTMP("XPDT",7815,"RTN","PRSATP",28,0)=" I ""T""'[$P($G(^PRST(458,PPI,""E"",DFN,0)),""^"",2) W:LP=2 $C(7),!!,""This Employee has already been sent to Payroll."" Q"
^XTMP("XPDT",7815,"RTN","PRSATP",29,0)=" S STAT=$P($G(^PRST(458,PPI,""E"",DFN,""D"",DAY,10)),""^"",1)"
^XTMP("XPDT",7815,"RTN","PRSATP",30,0)=" I LP=1,""1 3 4""[TC!(STAT'="""") Q"
^XTMP("XPDT",7815,"RTN","PRSATP",31,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",32,0)=" ; check if ESR is approved when posting PT Phy with memo"
^XTMP("XPDT",7815,"RTN","PRSATP",33,0)=" I $G(PTPF),$P($G(^PRST(458,PPI,""E"",DFN,""D"",DAY,7)),U)=5 D  Q:'Y!$D(DIRUT)"
^XTMP("XPDT",7815,"RTN","PRSATP",34,0)=" . W $C(7),!"
^XTMP("XPDT",7815,"RTN","PRSATP",35,0)=" . W !,""This day was auto-posted from an approved Electronic Subsidiary Record (ESR)."""
^XTMP("XPDT",7815,"RTN","PRSATP",36,0)=" . W !,""Normally, changes should be accomplished by having the T & L supervisor return"""
^XTMP("XPDT",7815,"RTN","PRSATP",37,0)=" . W !,""the ESR day to the part-time physician for correction."""
^XTMP("XPDT",7815,"RTN","PRSATP",38,0)=" . W !,""An exception to the above is when AWOL, On Suspension, or Non-Pay must be"""
^XTMP("XPDT",7815,"RTN","PRSATP",39,0)=" . W !,""posted, since those can not be entered via the ESR."",!"
^XTMP("XPDT",7815,"RTN","PRSATP",40,0)=" . S DIR(0)=""Y"""
^XTMP("XPDT",7815,"RTN","PRSATP",41,0)=" . S DIR(""A"")=""Do you want to manually post this day on the timecard"""
^XTMP("XPDT",7815,"RTN","PRSATP",42,0)=" . S DIR(""B"")=""NO"""
^XTMP("XPDT",7815,"RTN","PRSATP",43,0)=" . D ^DIR K DIR"
^XTMP("XPDT",7815,"RTN","PRSATP",44,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",45,0)=" ; lock employee record for editing by timekeeper"
^XTMP("XPDT",7815,"RTN","PRSATP",46,0)=" I '$$AVAILREC^PRSLIB00(""TK"",.GLOB,.STOP) S:LP=1&$G(STOP) LP=0 Q"
^XTMP("XPDT",7815,"RTN","PRSATP",47,0)=" D ^PRSADP1,LP,^PRSATP2,^PRSAENT"
^XTMP("XPDT",7815,"RTN","PRSATP",48,0)=" G P0:TC>4,P0:TC=2,P0:TC=3,P3:TC=4,P1"
^XTMP("XPDT",7815,"RTN","PRSATP",49,0)="P0 R !!,""Did Employee Only Work Scheduled Tour? "",X:DTIME S:'$T X=""^^"" S:X[""^^"" LP=0 Q:X[""^""  S X=$TR(X,""yesnor"",""YESNOR"")"
^XTMP("XPDT",7815,"RTN","PRSATP",50,0)=" S:X="""" X=""*"" I $P(""YES"",X,1)'="""",$P(""NO"",X,1)'="""",X'=""R"" W $C(7),!?5,"" Answer YES or NO or R for Normal Posting with Remarks"" G P0"
^XTMP("XPDT",7815,"RTN","PRSATP",51,0)=" S X=$E(X,1) I ""YR""'[X G P1"
^XTMP("XPDT",7815,"RTN","PRSATP",52,0)=" S PTY=1 I STAT'="""" K ^PRST(458,PPI,""E"",DFN,""D"",DAY,2),^(3)"
^XTMP("XPDT",7815,"RTN","PRSATP",53,0)=" I TC=3 S $P(^PRST(458,PPI,""E"",DFN,""D"",DAY,2),""^"",3)=""RG"",STAT=""T"""
^XTMP("XPDT",7815,"RTN","PRSATP",54,0)=" I STAT'="""",$P($G(^PRST(458,PPI,""E"",DFN,""D"",DAY,0)),""^"",12) D NOW^%DTC S NOW=%,TT=""HW"" D S0^PRSAPPH"
^XTMP("XPDT",7815,"RTN","PRSATP",55,0)=" S LV="""" D A2^PRSATP0:X=""R"" G UPD"
^XTMP("XPDT",7815,"RTN","PRSATP",56,0)="P1 R !!,""Was Employee Absent the Entire Tour? "",X:DTIME S:'$T X=""^"" Q:X[""^""  S X=$TR(X,""yesno"",""YESNO"")"
^XTMP("XPDT",7815,"RTN","PRSATP",57,0)=" S:X="""" X=""*"" I $P(""YES"",X,1)'="""",$P(""NO"",X,1)'="""" W $C(7),"" Answer YES or NO"" G P1"
^XTMP("XPDT",7815,"RTN","PRSATP",58,0)=" I X?1""Y"".E D ^PRSATP0 Q:X[""^""  G UPD"
^XTMP("XPDT",7815,"RTN","PRSATP",59,0)=" I $E(ENT,1,2)[""D"" K ^PRST(458,PPI,""E"",DFN,""D"",DAY,2),^(3),^(10) Q"
^XTMP("XPDT",7815,"RTN","PRSATP",60,0)="P3 S ZENT=$S($E(ENT,2)=""H""&('$G(PTPF)):""RG "",$E(ENT,1,2)=""00"":""RG "",1:"""")"
^XTMP("XPDT",7815,"RTN","PRSATP",61,0)=" I TC=1 D OT S:$P($G(^PRST(458,PPI,""E"",DFN,""D"",DAY,0)),""^"",12)&(AC=""M2E"") ZENT=ZENT_""HW "" S ZENT=ZENT_""NP CP "" G P31"
^XTMP("XPDT",7815,"RTN","PRSATP",62,0)=" I TC=3!(TC=4) D LV S:$P($G(^PRST(458,PPI,""E"",DFN,""D"",DAY,0)),""^"",12)&($E(ENT,22)) ZENT=ZENT_""HW "" G P31"
^XTMP("XPDT",7815,"RTN","PRSATP",63,0)=" D LV,OT S ZENT=ZENT_""TV TR "" S:$P($G(^PRST(458,PPI,""E"",DFN,""D"",DAY,0)),""^"",12) ZENT=ZENT_""HX HW """
^XTMP("XPDT",7815,"RTN","PRSATP",64,0)="P31 S DDSFILE=458,DDSFILE(1)=458.02,DA(2)=PPI,DA(1)=DFN,DA=DAY"
^XTMP("XPDT",7815,"RTN","PRSATP",65,0)=" S Z=$G(^PRST(458,PPI,""E"",DFN,""D"",DAY,2)) K ZS"
^XTMP("XPDT",7815,"RTN","PRSATP",66,0)=" S DR=""[PRSA TP POST1]"" D ^DDS K DS Q:'$D(ZS)"
^XTMP("XPDT",7815,"RTN","PRSATP",67,0)=" I ZS'="""" S ^PRST(458,PPI,""E"",DFN,""D"",DAY,2)=ZS,PTY=3 G UPD"
^XTMP("XPDT",7815,"RTN","PRSATP",68,0)=" I $D(^PRST(458,PPI,""E"",DFN,""D"",DAY,2)) K ^(2),^(3),^(10)"
^XTMP("XPDT",7815,"RTN","PRSATP",69,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSATP",70,0)="UPD ; Update status"
^XTMP("XPDT",7815,"RTN","PRSATP",71,0)=" D NOW^%DTC"
^XTMP("XPDT",7815,"RTN","PRSATP",72,0)=" S $P(^PRST(458,PPI,""E"",DFN,""D"",DAY,10),""^"",1,4)=""T^""_DUZ_""^""_%_""^""_PTY"
^XTMP("XPDT",7815,"RTN","PRSATP",73,0)=" N DAH,DBH,HOL,QUIT"
^XTMP("XPDT",7815,"RTN","PRSATP",74,0)=" S (DAH,DBH,HOL,QUIT)="""""
^XTMP("XPDT",7815,"RTN","PRSATP",75,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",76,0)=" ; Check to holiday encapsulated by a form a non-pay"
^XTMP("XPDT",7815,"RTN","PRSATP",77,0)=" D HENCAP^PRSATP3(PPI,DFN,DAY,.DBH,.HOL,.DAH,.QUIT)"
^XTMP("XPDT",7815,"RTN","PRSATP",78,0)=" Q:QUIT"
^XTMP("XPDT",7815,"RTN","PRSATP",79,0)=" D UPDT^PRSATP3(DFN,DBH,HOL,DAH)"
^XTMP("XPDT",7815,"RTN","PRSATP",80,0)=" K DAH,DBH,HOL,QUIT"
^XTMP("XPDT",7815,"RTN","PRSATP",81,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSATP",82,0)="LP W !!,""Enter '^' to bypass this employee."" W:LP=1 "" Enter '^^' to stop T&L editing."" W ! Q"
^XTMP("XPDT",7815,"RTN","PRSATP",83,0)="LV S Z1=""30 31 31 31 32 33 28 35 35 30 36 37 38"",Z2=""AL SL CB AD NL WP CU AA DL RL NP CP HX"""
^XTMP("XPDT",7815,"RTN","PRSATP",84,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",85,0)=" ; Check to see if the employee is entitled to Military Leave and add"
^XTMP("XPDT",7815,"RTN","PRSATP",86,0)=" ; ML to list if they are.  Added to be compliant with Public Law"
^XTMP("XPDT",7815,"RTN","PRSATP",87,0)=" ; 106-554."
^XTMP("XPDT",7815,"RTN","PRSATP",88,0)=" S:$E(ENT,34) Z1=Z1_"" 34"",Z2=Z2_"" ML"""
^XTMP("XPDT",7815,"RTN","PRSATP",89,0)=" ;9/3 month employee entitled RS with recess hours in file# 458.8"
^XTMP("XPDT",7815,"RTN","PRSATP",90,0)=" S:$E(ENT,5)&$P($$RSHR^PRSU1B2(DFN,PPE),U,DAY>7+1) Z1=Z1_"" 5"",Z2=Z2_"" RS"""
^XTMP("XPDT",7815,"RTN","PRSATP",91,0)=" F K=1:1:$L(Z1,"" "") I $E(ENT,$P(Z1,"" "",K)) S ZENT=ZENT_$P(Z2,"" "",K)_"" """
^XTMP("XPDT",7815,"RTN","PRSATP",92,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSATP",93,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",94,0)="OT ; Get entitled out-of-tour types of time"
^XTMP("XPDT",7815,"RTN","PRSATP",95,0)=" S Z1=""12 28 26"",Z2=""OT CT ON"" F K=1:1:3 I $E(ENT,$P(Z1,"" "",K)) S ZENT=ZENT_$P(Z2,"" "",K)_"" "" I ZENT'[""UN"" S ZENT=ZENT_""UN """
^XTMP("XPDT",7815,"RTN","PRSATP",96,0)=" I $E(ENT,29),'$E(ENT,26) S ZENT=ZENT_""SB "" S:ZENT'[""UN"" ZENT=ZENT_""UN """
^XTMP("XPDT",7815,"RTN","PRSATP",97,0)=" ; Allow Stand By for employees w/ Prem Pay Ind = W or V"
^XTMP("XPDT",7815,"RTN","PRSATP",98,0)=" I $E(ENT,29),$E(ENT,26),""^W^V^""[(U_PMP_U) S ZENT=ZENT_""SB "" S:ZENT'[""UN"" ZENT=ZENT_""UN """
^XTMP("XPDT",7815,"RTN","PRSATP",99,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSATP",100,0)="EX ;clean up lock global which is set in $$AVAILREC^PRSLIB00"
^XTMP("XPDT",7815,"RTN","PRSATP",101,0)=" K ^TMP($J,""LOCK"")"
^XTMP("XPDT",7815,"RTN","PRSATP",102,0)=" ;generic cleanup"
^XTMP("XPDT",7815,"RTN","PRSATP",103,0)=" G KILL^XUSCLEAN"
^XTMP("XPDT",7815,"RTN","PRSATP",104,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",105,0)="PTPSCR(PRSIEN,PSTDT,PTPF) ; part-time physician screen extrinsic function"
^XTMP("XPDT",7815,"RTN","PRSATP",106,0)=" ; input"
^XTMP("XPDT",7815,"RTN","PRSATP",107,0)=" ;   PRSIEN - Employee IEN (file 450)"
^XTMP("XPDT",7815,"RTN","PRSATP",108,0)=" ;   PSTDT  - Date being posted (FileMan internal)"
^XTMP("XPDT",7815,"RTN","PRSATP",109,0)=" ;   PTPF   - (opt) Part-time physician flag, equals true (1) when screen"
^XTMP("XPDT",7815,"RTN","PRSATP",110,0)=" ;            should only allow selection of part-time physician with"
^XTMP("XPDT",7815,"RTN","PRSATP",111,0)=" ;            memo and false (null or 0) when screen should only"
^XTMP("XPDT",7815,"RTN","PRSATP",112,0)=" ;            allow selection of employees that are not part-time"
^XTMP("XPDT",7815,"RTN","PRSATP",113,0)=" ;            physicians with memo."
^XTMP("XPDT",7815,"RTN","PRSATP",114,0)=" ; result"
^XTMP("XPDT",7815,"RTN","PRSATP",115,0)=" ;   returns a boolean value (1 or 0) or null"
^XTMP("XPDT",7815,"RTN","PRSATP",116,0)=" ;     =1 if employee passed screen"
^XTMP("XPDT",7815,"RTN","PRSATP",117,0)=" ;        (PTPF true and employee is PTP with memo) OR"
^XTMP("XPDT",7815,"RTN","PRSATP",118,0)=" ;        (PTPF false and employee is not PTP with memo)"
^XTMP("XPDT",7815,"RTN","PRSATP",119,0)=" ;     =0 if employee did not pass screen"
^XTMP("XPDT",7815,"RTN","PRSATP",120,0)=" ;     =null value if required inputs were not provided"
^XTMP("XPDT",7815,"RTN","PRSATP",121,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",122,0)=" N PRSRET,PTPM"
^XTMP("XPDT",7815,"RTN","PRSATP",123,0)=" S PTPF=$G(PTPF)"
^XTMP("XPDT",7815,"RTN","PRSATP",124,0)=" S PRSRET="""" ; init return"
^XTMP("XPDT",7815,"RTN","PRSATP",125,0)=" I PRSIEN,PSTDT D"
^XTMP("XPDT",7815,"RTN","PRSATP",126,0)=" . ; determine if employee is PT physician with memo on the posting date"
^XTMP("XPDT",7815,"RTN","PRSATP",127,0)=" . S PTPM=$S($$MIEN^PRSPUT1(PRSIEN,PSTDT)>0:1,1:0)"
^XTMP("XPDT",7815,"RTN","PRSATP",128,0)=" . ; apply screen"
^XTMP("XPDT",7815,"RTN","PRSATP",129,0)=" . S PRSRET=$S(PTPF&PTPM:1,'PTPF&'PTPM:1,1:0)"
^XTMP("XPDT",7815,"RTN","PRSATP",130,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",131,0)=" Q PRSRET"
^XTMP("XPDT",7815,"RTN","PRSATP",132,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSATP",133,0)=" ;PRSATP"
^XTMP("XPDT",7815,"RTN","PRSN9A")="0^1^B4965598^n/a"
^XTMP("XPDT",7815,"RTN","PRSN9A",1,0)="PRSN9A ;;WOIFO/PLT - RPC Nurs Location Extraction ; 08/14/2009  7:56 AM"
^XTMP("XPDT",7815,"RTN","PRSN9A",2,0)=" ;;4.0;PAID;**126**Sep 21, 1995;;Build 3"
^XTMP("XPDT",7815,"RTN","PRSN9A",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSN9A",4,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSN9A",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSN9A",6,0)=" ;.ret - rpc return value with return value type: global array"
^XTMP("XPDT",7815,"RTN","PRSN9A",7,0)=" ;prsndt - rpc parameter 1 with type: literal date in format yyyymmdd"
^XTMP("XPDT",7815,"RTN","PRSN9A",8,0)="NURSLOC(RET,PRSNDT) ;remote procedure call- extract all active nurse locations"
^XTMP("XPDT",7815,"RTN","PRSN9A",9,0)=" N PRSNA,PRSNB,PRSNC,PRSNE,PRSNF,PRSNSEQ,PRSNLOC,PRSNSITE,PRSNGLB"
^XTMP("XPDT",7815,"RTN","PRSN9A",10,0)=" ;convert yyyymmdd to fileman date"
^XTMP("XPDT",7815,"RTN","PRSN9A",11,0)=" S PRSNDT=PRSNDT-17000000"
^XTMP("XPDT",7815,"RTN","PRSN9A",12,0)=" ;get active location of the date"
^XTMP("XPDT",7815,"RTN","PRSN9A",13,0)=" ;prsnloc(ien of file# 211.4)=^1-location name, ^2-instituion name"
^XTMP("XPDT",7815,"RTN","PRSN9A",14,0)=" ;^3-institution ien of file# 4 ^4-station # (field #99 of file #4)"
^XTMP("XPDT",7815,"RTN","PRSN9A",15,0)=" K PRSNLOC D ACTIVLOC^PRSNUT01(.PRSNLOC,PRSNDT)"
^XTMP("XPDT",7815,"RTN","PRSN9A",16,0)=" K ^TMP(""PRSN"",$J,""RPCLOC"") S PRSNGLB=$NAME(^TMP(""PRSN"",$J,""RPCLOC""))"
^XTMP("XPDT",7815,"RTN","PRSN9A",17,0)=" ;assembly records"
^XTMP("XPDT",7815,"RTN","PRSN9A",18,0)=" S (PRSNSEQ,PRSNA)=0 F  S PRSNA=$O(PRSNLOC(PRSNA)) QUIT:'PRSNA  S PRSNB=PRSNLOC(PRSNA),PRSNC=$G(^NURSF(211.4,PRSNA,1)) D"
^XTMP("XPDT",7815,"RTN","PRSN9A",19,0)=" . ;location records"
^XTMP("XPDT",7815,"RTN","PRSN9A",20,0)=" . S PRSNLOC=+^NURSF(211.4,PRSNA,0)_""^""_$P(PRSNB,U)_""^""_$P(PRSNB,U,3)_""^""_$P(PRSNB,U,2)_""^""_$P(PRSNC,U,5)_""^""_$S($P(PRSNC,U,6):$P(^NURSF(212.8,$P(PRSNC,U,6),0),U),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSN9A",21,0)=" . S PRSNSEQ=PRSNSEQ+1,@PRSNGLB@(PRSNSEQ)=PRSNSEQ_""^L^""_PRSNLOC"
^XTMP("XPDT",7815,"RTN","PRSN9A",22,0)=" . ;ward records in mas ward multiple field #3 of file 211.4"
^XTMP("XPDT",7815,"RTN","PRSN9A",23,0)=" . S PRSNE=0 F  S PRSNE=$O(^NURSF(211.4,PRSNA,3,PRSNE)) QUIT:'PRSNE  S PRSNF=^(PRSNE,0) D"
^XTMP("XPDT",7815,"RTN","PRSN9A",24,0)=" .. S:PRSNF $P(PRSNLOC,U,7,8)=+PRSNF_""^""_$P(^DIC(42,+PRSNF,0),U)"
^XTMP("XPDT",7815,"RTN","PRSN9A",25,0)=" .. S PRSNSEQ=PRSNSEQ+1,@PRSNGLB@(PRSNSEQ)=PRSNSEQ_""^W^""_PRSNLOC"
^XTMP("XPDT",7815,"RTN","PRSN9A",26,0)=" .. QUIT"
^XTMP("XPDT",7815,"RTN","PRSN9A",27,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSN9A",28,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSN9A",29,0)=" ;set the header node"
^XTMP("XPDT",7815,"RTN","PRSN9A",30,0)=" S PRSNSITE=$P($G(^XMB(1,1,""XUS"")),""^"",17),PRSNSITE=$S(+PRSNSITE>0:$P($G(^DIC(4,PRSNSITE,99)),""^"",1),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSN9A",31,0)=" S @PRSNGLB@(0)=PRSNSITE_""^""_PRSNSEQ"
^XTMP("XPDT",7815,"RTN","PRSN9A",32,0)=" S RET=$NAME(^TMP(""PRSN"",$J,""RPCLOC""))"
^XTMP("XPDT",7815,"RTN","PRSN9A",33,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSN9A",34,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSN9B")="0^2^B2695134^n/a"
^XTMP("XPDT",7815,"RTN","PRSN9B",1,0)="PRSN9B ;;WOIFO/PLT - RPC POC Daily Time Ectration ; 08/14/2009  7:56 AM"
^XTMP("XPDT",7815,"RTN","PRSN9B",2,0)=" ;;4.0;PAID;**126**Sep 21, 1995;;Build 3"
^XTMP("XPDT",7815,"RTN","PRSN9B",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSN9B",4,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSN9B",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSN9B",6,0)=" ;.ret - rpc return value with return value type: global array"
^XTMP("XPDT",7815,"RTN","PRSN9B",7,0)=" ;prsnseq - rpc parameter 1 with type: literal after sequence number requested in format nnnn..."
^XTMP("XPDT",7815,"RTN","PRSN9B",8,0)=" ;prsnrec - rpc parameter 2 with type: literal number of records requested in format nnn..."
^XTMP("XPDT",7815,"RTN","PRSN9B",9,0)="POCTIME(RET,PRSNSEQ,PRSNREC) ;remote procedure call - extract poc daily time records"
^XTMP("XPDT",7815,"RTN","PRSN9B",10,0)=" N PRSNA,PRSNB,PRSNC,PRSNSITE,PRSNGLB,PRSNEND"
^XTMP("XPDT",7815,"RTN","PRSN9B",11,0)=" ;get the current last record in file #451.7"
^XTMP("XPDT",7815,"RTN","PRSN9B",12,0)=" S PRSNEND=$O(^PRSN(451.7,"":""),-1)"
^XTMP("XPDT",7815,"RTN","PRSN9B",13,0)=" K ^TMP(""PRSN"",$J,""RPCPOC"") S PRSNGLB=$NAME(^TMP(""PRSN"",$J,""RPCPOC""))"
^XTMP("XPDT",7815,"RTN","PRSN9B",14,0)=" ;start record after prsnseq"
^XTMP("XPDT",7815,"RTN","PRSN9B",15,0)=" S PRSNA=PRSNSEQ,PRSNB=0 F  S PRSNA=$O(^PRSN(451.7,PRSNA)),PRSNB=PRSNB+1 QUIT:PRSNA>PRSNEND!(PRSNB>PRSNREC)!'PRSNA  S @PRSNGLB@(PRSNA)=^(PRSNA,0)"
^XTMP("XPDT",7815,"RTN","PRSN9B",16,0)=" ;set the header node"
^XTMP("XPDT",7815,"RTN","PRSN9B",17,0)=" S PRSNSITE=$P($G(^XMB(1,1,""XUS"")),""^"",17),PRSNSITE=$S(+PRSNSITE>0:$P($G(^DIC(4,PRSNSITE,99)),""^"",1),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSN9B",18,0)=" S PRSNA=$O(@PRSNGLB@(0)),PRSNC=$O(@PRSNGLB@("":""),-1),PRSNB=PRSNB-1"
^XTMP("XPDT",7815,"RTN","PRSN9B",19,0)=" S @PRSNGLB@(0)=PRSNSITE_""^""_PRSNA_""^""_PRSNC_""^""_PRSNB_""^""_PRSNEND"
^XTMP("XPDT",7815,"RTN","PRSN9B",20,0)=" S RET=$NAME(^TMP(""PRSN"",$J,""RPCPOC""))"
^XTMP("XPDT",7815,"RTN","PRSN9B",21,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSN9B",22,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01")="0^3^B39483493^n/a"
^XTMP("XPDT",7815,"RTN","PRSNAA01",1,0)="PRSNAA01 ;WOIFO/DWA - Pay period approval for Nurse POC records;10/5/2009"
^XTMP("XPDT",7815,"RTN","PRSNAA01",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNAA01",3,0)=" ;;Per VHA Directive 2004-038,this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNAA01",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",5,0)="EN ; Entry point for approval of POC records for a pay period."
^XTMP("XPDT",7815,"RTN","PRSNAA01",6,0)=" N A,B,DAY,DAYREC,DIC,DIR,DIRUT,DSPFLG,GROUP,GRPIEN,GRPSC,I,IEN200"
^XTMP("XPDT",7815,"RTN","PRSNAA01",7,0)=" N IEN450,NURSNM,PAYPD,PREVPD,PREVREC,PRSD,PRSFLG,PRSIEN,PRSPD,PRSPDE"
^XTMP("XPDT",7815,"RTN","PRSNAA01",8,0)=" N PRSPDI,PRSPRM,PRSSTAT,STOP,REC,SEG"
^XTMP("XPDT",7815,"RTN","PRSNAA01",9,0)=" D ACCESS^PRSNUT02(.GROUP,""A"",DT)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",10,0)=" I $P($G(GROUP(0)),U)=""E"" D  Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",11,0)=" . W !!,""There are no groups assigned or selected."""
^XTMP("XPDT",7815,"RTN","PRSNAA01",12,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",13,0)=" N PREVREC,PRSIEN,PREVPD,GRPSC,PRSPRM,GRPIEN,PRSPDI,PRSPDE"
^XTMP("XPDT",7815,"RTN","PRSNAA01",14,0)=" S PRSPRM=$P(GROUP(0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",15,0)=" S STOP=0"
^XTMP("XPDT",7815,"RTN","PRSNAA01",16,0)=" S GRPIEN=0,GRPIEN=$O(GROUP(GRPIEN))"
^XTMP("XPDT",7815,"RTN","PRSNAA01",17,0)=" I PRSPRM=""N"" S GRPSC=$P(GROUP(GRPIEN),U,4)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",18,0)=" S PRSPDI=$G(^PRST(458,""AD"",DT)) S:PRSPDI="""" PRSPDI=$G(^PRST(458,""AD"",$O(^PRST(458,""AD"","":""),-1)))"
^XTMP("XPDT",7815,"RTN","PRSNAA01",19,0)=" I $P(PRSPDI,U,2)<12 S PRSPDI=+PRSPDI-1"
^XTMP("XPDT",7815,"RTN","PRSNAA01",20,0)=" E  S PRSPDI=+PRSPDI"
^XTMP("XPDT",7815,"RTN","PRSNAA01",21,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",22,0)=" D PREV"
^XTMP("XPDT",7815,"RTN","PRSNAA01",23,0)=" I PRSFLG D SETPPD"
^XTMP("XPDT",7815,"RTN","PRSNAA01",24,0)=" I 'PRSFLG W ""There are no POC records to approve for this ""_$S(PRSPRM=""N"":""Nurse Location."",1:""T&L Unit."")"
^XTMP("XPDT",7815,"RTN","PRSNAA01",25,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",26,0)=" D CLEANUP"
^XTMP("XPDT",7815,"RTN","PRSNAA01",27,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",28,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",29,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",30,0)="SETPPD ; back up default of current pay period if it doesn't have any data"
^XTMP("XPDT",7815,"RTN","PRSNAA01",31,0)=" S PRSPDI=$O(PREVREC(PRSPDI+1),-1)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",32,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",33,0)=" N DIC,X,Y,DUOUT,DTOUT"
^XTMP("XPDT",7815,"RTN","PRSNAA01",34,0)=" S DIC(""B"")=PRSPDI"
^XTMP("XPDT",7815,"RTN","PRSNAA01",35,0)=" S DIC=""^PRSN(451,"",DIC(0)=""AEQMZ"""
^XTMP("XPDT",7815,"RTN","PRSNAA01",36,0)=" S DIC(""A"")=""Select a Pay Period: """
^XTMP("XPDT",7815,"RTN","PRSNAA01",37,0)=" S DIC(""S"")=""I +Y'>PRSPDI&($D(PREVREC(+Y)))"""
^XTMP("XPDT",7815,"RTN","PRSNAA01",38,0)=" D ^DIC"
^XTMP("XPDT",7815,"RTN","PRSNAA01",39,0)=" Q:$D(DUOUT)!$D(DTOUT)!(+$G(Y)'>0)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",40,0)=" S PRSPDE=$P(^PRST(458,+Y,0),U)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",41,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",42,0)=" I +Y<PRSPDI S PRSPDI=+Y D APPREV"
^XTMP("XPDT",7815,"RTN","PRSNAA01",43,0)=" I PRSPRM=""N"" D APPROVN(PRSPDI)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",44,0)=" I PRSPRM=""T"" D APPROVT(PRSPDI)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",45,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",46,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",47,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",48,0)="PREV ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",49,0)=" S (PREVPD,PRSFLG,PRSIEN,PRSSTAT)=0"
^XTMP("XPDT",7815,"RTN","PRSNAA01",50,0)=" F  S PRSIEN=$O(^PRSN(451,""AE"",PRSIEN)) Q:'PRSIEN  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",51,0)=" . I +$$PRIMLOC^PRSNUT03($P($G(^PRSPC(PRSIEN,200)),U))=+GROUP(GRPIEN) D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",52,0)=" . . F  S PREVPD=$O(^PRSN(451,""AE"",PRSIEN,PREVPD)) Q:'PREVPD!(PREVPD>PRSPDI)  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",53,0)=" . . . S PREVREC(PREVPD,PRSIEN)=PREVPD_""^""_PRSIEN,PRSFLG=1"
^XTMP("XPDT",7815,"RTN","PRSNAA01",54,0)=" . I $P(^PRSPC(PRSIEN,0),U,8)=+GROUP(GRPIEN) D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",55,0)=" . . F  S PREVPD=$O(^PRSN(451,""AE"",PRSIEN,PREVPD)) Q:PREVPD=PRSPDI  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",56,0)=" . . . S PREVREC(PREVPD,PRSIEN)=PREVPD_""^""_PRSIEN,PRSFLG=1"
^XTMP("XPDT",7815,"RTN","PRSNAA01",57,0)=" I PRSFLG D DSPREV"
^XTMP("XPDT",7815,"RTN","PRSNAA01",58,0)=" W !!"
^XTMP("XPDT",7815,"RTN","PRSNAA01",59,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",60,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",61,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",62,0)="DSPREV ;  Display previous pay period records"
^XTMP("XPDT",7815,"RTN","PRSNAA01",63,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",64,0)=" W !!,""The following previous pay periods have unapproved POC records"""
^XTMP("XPDT",7815,"RTN","PRSNAA01",65,0)=" W !,""in this ""_$S(PRSPRM=""N"":""Nurse Location"",1:""T&L Unit"")_"":"",!! D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",66,0)=" . F  S PREVPD=$O(PREVREC(PREVPD)) Q:'PREVPD  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",67,0)=" . . W ""Pay period "",$P(^PRST(458,PREVPD,0),U),!"
^XTMP("XPDT",7815,"RTN","PRSNAA01",68,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",69,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",70,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",71,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",72,0)="APPROVN(PRSPDI) ; Nurses in Nurse Staffing Location"
^XTMP("XPDT",7815,"RTN","PRSNAA01",73,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",74,0)=" N Y,NURSNM,IEN200,PRSIEN"
^XTMP("XPDT",7815,"RTN","PRSNAA01",75,0)=" S (IEN200,PRSIEN,NURSNM)=0"
^XTMP("XPDT",7815,"RTN","PRSNAA01",76,0)=" F  S NURSNM=$O(^NURSF(211.8,""D"",GRPSC,NURSNM)) Q:NURSNM=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",77,0)=" . S IEN200=$O(^NURSF(211.8,""D"",GRPSC,NURSNM,""""))"
^XTMP("XPDT",7815,"RTN","PRSNAA01",78,0)=" . I IEN200']"""" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",79,0)=" . S PRSIEN=$G(^VA(200,IEN200,450))"
^XTMP("XPDT",7815,"RTN","PRSNAA01",80,0)=" . I PRSIEN']"""" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",81,0)=" . ;I +$$ISNURSE^PRSNUT01(PRSIEN),$D(^PRSN(451,PRSPDI,""E"",PRSIEN)) D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",82,0)=" . I $D(^PRSN(451,""AE"",PRSIEN,PRSPDI)) D APPROV(PRSPDI,PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",83,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",84,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",85,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",86,0)="APPROVT(PRSPDI) ; Find nurses in T&L Unit"
^XTMP("XPDT",7815,"RTN","PRSNAA01",87,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",88,0)=" N Y"
^XTMP("XPDT",7815,"RTN","PRSNAA01",89,0)=" S (NURSNM,PRSIEN)=0"
^XTMP("XPDT",7815,"RTN","PRSNAA01",90,0)=" F  S NURSNM=$O(^PRSPC(""ATL""_GRPIEN,NURSNM)) Q:'NURSNM!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",91,0)=" . S PRSIEN=$O(^PRSPC(""ATL""_GRPIEN,NURSNM,""""))"
^XTMP("XPDT",7815,"RTN","PRSNAA01",92,0)=" . I +$$ISNURSE^PRSNUT01(PRSIEN),$D(^PRSN(451,PRSPDI,""E"",PRSIEN)) D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",93,0)=" . . I $D(^PRSN(451,""AE"",PRSIEN,PRSPDI)) D APPROV(PRSPDI,PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",94,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",95,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",96,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",97,0)="APPROV(PRSPD,PRSIEN) ; Complete approval process"
^XTMP("XPDT",7815,"RTN","PRSNAA01",98,0)=" N DAY,DAYREC,REC,SEG,DSPFLG,Y"
^XTMP("XPDT",7815,"RTN","PRSNAA01",99,0)=" S DSPFLG=0"
^XTMP("XPDT",7815,"RTN","PRSNAA01",100,0)=" F DAY=1:1:14 D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",101,0)=" . K DAYREC"
^XTMP("XPDT",7815,"RTN","PRSNAA01",102,0)=" . D L1^PRSNRUT1(.DAYREC,PRSPD,PRSIEN,DAY)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",103,0)=" . Q:'$O(DAYREC(0))"
^XTMP("XPDT",7815,"RTN","PRSNAA01",104,0)=" . S SEG=0,DSPFLG=1"
^XTMP("XPDT",7815,"RTN","PRSNAA01",105,0)=" . F  S SEG=$O(DAYREC(SEG)) Q:'SEG  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",106,0)=" . . S REC(DAY,SEG)=DAYREC(SEG)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",107,0)=" . D SETREC(.REC,PRSPD)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",108,0)=" I DSPFLG D "
^XTMP("XPDT",7815,"RTN","PRSNAA01",109,0)=" . D HDR(PRSPD,PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",110,0)=" . D DSPREC(.REC)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",111,0)=" . D DSPMM(PRSIEN,PRSPD)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",112,0)=" . I 'STOP D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",113,0)=" . . D HDR(PRSPD,PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",114,0)=" . . D DSPREC(.REC)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",115,0)=" . . D ACTION(PRSPD,PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",116,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",117,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",118,0)="APPREV ; Process previous pay periods"
^XTMP("XPDT",7815,"RTN","PRSNAA01",119,0)=" N A,B"
^XTMP("XPDT",7815,"RTN","PRSNAA01",120,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",121,0)=" S A=PRSPDI,B=0"
^XTMP("XPDT",7815,"RTN","PRSNAA01",122,0)=" ;F  S A=$O(PREVREC(A)) Q:'A  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",123,0)=" F  S B=$O(PREVREC(A,B)) Q:'B!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",124,0)=" . D APPROV(A,B)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",125,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",126,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",127,0)="SETREC(REC,PAYPD) ; Set up record for display"
^XTMP("XPDT",7815,"RTN","PRSNAA01",128,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",129,0)=" N A,B"
^XTMP("XPDT",7815,"RTN","PRSNAA01",130,0)=" S (A,B)=0"
^XTMP("XPDT",7815,"RTN","PRSNAA01",131,0)=" F  S A=$O(REC(A)) Q:'A  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",132,0)=" . F  S B=$O(REC(A,B)) Q:'B  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",133,0)=" . . S:$P(REC(A,B),U,5)]""""&($P(REC(A,B),U,5)?1.N) $P(REC(A,B),U,5)=$P($P(^SC($P(^NURSF(211.4,$P(REC(A,B),U,5),0),U),0),U),"" "",3,4)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",134,0)=" . . S:$P(REC(A,B),U,6)]""""&($P(REC(A,B),U,6)?1.N) $P(REC(A,B),U,6)=$P(^PRSN(451.5,$P(REC(A,B),U,6),0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",135,0)=" . . S:$P(REC(A,B),U,8)]""""&($P(REC(A,B),U,8)?1.N) $P(REC(A,B),U,8)=$P(^PRSN(451.6,$P(REC(A,B),U,8),0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",136,0)=" . . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNAA01",137,0)=" . I $O(REC(A,0)) S $P(REC(A,$O(REC(A,0))),U,12)=$P(^PRST(458,PAYPD,2),U,A)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",138,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNAA01",139,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",140,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNAA01",141,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",142,0)="DSPREC(REC) ; Display the record"
^XTMP("XPDT",7815,"RTN","PRSNAA01",143,0)=" N A,B"
^XTMP("XPDT",7815,"RTN","PRSNAA01",144,0)=" S (A,B)=0"
^XTMP("XPDT",7815,"RTN","PRSNAA01",145,0)=" F  S A=$O(REC(A)) Q:'A  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",146,0)=" . F  S B=$O(REC(A,B)) Q:'B  D"
^XTMP("XPDT",7815,"RTN","PRSNAA01",147,0)=" . . W $P($P(REC(A,B),U,12),"" ""),?12,$P(REC(A,B),U),?21,$P(REC(A,B),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",148,0)=" . . W ?28,$P(REC(A,B),U,4),?38,$P($P(REC(A,B),U,5),"" "")"
^XTMP("XPDT",7815,"RTN","PRSNAA01",149,0)=" . . W ?51,$P($P(REC(A,B),U,6),"" ""),?64,$P($P(REC(A,B),U,8),"" "")"
^XTMP("XPDT",7815,"RTN","PRSNAA01",150,0)=" . . W ?77,$P(REC(A,B),U,7),!"
^XTMP("XPDT",7815,"RTN","PRSNAA01",151,0)=" . . W $P($P(REC(A,B),U,12),"" "",2,999),?12,$P(REC(A,B),U,2),?38"
^XTMP("XPDT",7815,"RTN","PRSNAA01",152,0)=" . . W $P($P(REC(A,B),U,5),"" "",2),?51,$P($P(REC(A,B),U,6),"" "",2),?64"
^XTMP("XPDT",7815,"RTN","PRSNAA01",153,0)=" . . W $P($P(REC(A,B),U,8),"" "",2),!"
^XTMP("XPDT",7815,"RTN","PRSNAA01",154,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",155,0)=" . . I (IOSL-6)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR(PRSPD,PRSIEN) W !"
^XTMP("XPDT",7815,"RTN","PRSNAA01",156,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",157,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",158,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",159,0)="DSPMM(PRSIEN,PRSPD) ; Display mismatch report"
^XTMP("XPDT",7815,"RTN","PRSNAA01",160,0)=" W !!,?5,""Ready to display Mismatch Report"",!"
^XTMP("XPDT",7815,"RTN","PRSNAA01",161,0)=" S STOP=$$ASK^PRSLIB00()"
^XTMP("XPDT",7815,"RTN","PRSNAA01",162,0)=" Q:STOP"
^XTMP("XPDT",7815,"RTN","PRSNAA01",163,0)=" D PPMM^PRSNRMM(PRSIEN,PRSPD,,.STOP)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",164,0)=" W !!,?5,""Return to Approvals."",!"
^XTMP("XPDT",7815,"RTN","PRSNAA01",165,0)=" S STOP=$$ASK^PRSLIB00(1)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",166,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",167,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",168,0)="ACTION(A,B) ; Approve or bypass current record"
^XTMP("XPDT",7815,"RTN","PRSNAA01",169,0)=" N DIR,X,Y"
^XTMP("XPDT",7815,"RTN","PRSNAA01",170,0)=" S PAYPD=A,PRSIEN=B"
^XTMP("XPDT",7815,"RTN","PRSNAA01",171,0)=" S DIR(""A"")=""Enter an 'A' to Approve or Return to Bypass: """
^XTMP("XPDT",7815,"RTN","PRSNAA01",172,0)=" S DIR(0)=""SAO^A:Approve"" D ^DIR ;K DIR"
^XTMP("XPDT",7815,"RTN","PRSNAA01",173,0)=" I Y="""" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",174,0)=" I $D(DIRUT) S STOP=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",175,0)=" I Y=""A"" D UPDTPOC^PRSNCGR1(PAYPD,PRSIEN,Y)"
^XTMP("XPDT",7815,"RTN","PRSNAA01",176,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",177,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",178,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",179,0)="HDR(PAYPD,IEN450) ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",180,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",181,0)=" S PRSPDE=$$GET1^DIQ(458,PAYPD,.01),PRSIEN=IEN450"
^XTMP("XPDT",7815,"RTN","PRSNAA01",182,0)=" W:$E(IOST,1,2)=""C-"" @IOF"
^XTMP("XPDT",7815,"RTN","PRSNAA01",183,0)=" W $$GET1^DIQ(450,PRSIEN,.01),?26,""Approve Pay Period POC Records"""
^XTMP("XPDT",7815,"RTN","PRSNAA01",184,0)=" W ?66,""Pay Pd: "",PRSPDE,!!"
^XTMP("XPDT",7815,"RTN","PRSNAA01",185,0)=" W ""Date"",?12,""Start/"",?20,""Meal"",?26,""Type of"",?38,""Location"",?51"
^XTMP("XPDT",7815,"RTN","PRSNAA01",186,0)=" W ""Type of"",?66,""OT"",?76,""OT"",!"
^XTMP("XPDT",7815,"RTN","PRSNAA01",187,0)=" W ?12,""Stop"",?27,""Time"",?52,""Work"",?64,""Reason"",?75,""Mand"",!"
^XTMP("XPDT",7815,"RTN","PRSNAA01",188,0)=" F I=1:1:80 W ""-"""
^XTMP("XPDT",7815,"RTN","PRSNAA01",189,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",190,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAA01",191,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",192,0)="CLEANUP ;"
^XTMP("XPDT",7815,"RTN","PRSNAA01",193,0)=" K PRSIEN,PRSPDI,PRSPDE,GROUP,GRPIEN,GRPSC,REC,PREVREC,NURSNM,IEN200"
^XTMP("XPDT",7815,"RTN","PRSNAA01",194,0)=" K PRSFLG,DSPFLG,PREVPD,PRSPRM,PRSSTAT,PRSD,A,B,Y,X,DIC"
^XTMP("XPDT",7815,"RTN","PRSNAA01",195,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01")="0^4^B18448615^n/a"
^XTMP("XPDT",7815,"RTN","PRSNAC01",1,0)="PRSNAC01 ;WOIFO/DWA - Approval for Corrected Nurse POC records;10/5/2009"
^XTMP("XPDT",7815,"RTN","PRSNAC01",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNAC01",3,0)=" ;;Per VHA Directive 2004-038,this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNAC01",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",5,0)="EN ; Entry point for approval of POC records for a pay period."
^XTMP("XPDT",7815,"RTN","PRSNAC01",6,0)=" N A,CHECK,IEN200,PRSD,PRSPPD,PRSIEN,PRSSN,POCREC,PRSVER,POCSEG"
^XTMP("XPDT",7815,"RTN","PRSNAC01",7,0)=" N POCCNT,QUIT,DIR,FOUND,GROUP,GRPIEN,GRPSC,GRPNM,I,LOC,POCD,REC"
^XTMP("XPDT",7815,"RTN","PRSNAC01",8,0)=" N STOP,ZEROFND,PRSDAY,PRSDIV,PRSDIVE,PRSDIVI,PRSPRM"
^XTMP("XPDT",7815,"RTN","PRSNAC01",9,0)=" S QUIT=0"
^XTMP("XPDT",7815,"RTN","PRSNAC01",10,0)=" D ACCESS^PRSNUT02(.GROUP,""A"",DT,2)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",11,0)=" I $P($G(GROUP(0)),U)=""E"" D  Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",12,0)=" . W !!,""There are no groups assigned or selected."""
^XTMP("XPDT",7815,"RTN","PRSNAC01",13,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",14,0)=" S PRSPRM=$P(GROUP(0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",15,0)=" S GRPNM=0,GRPNM=$O(GROUP(GRPNM))"
^XTMP("XPDT",7815,"RTN","PRSNAC01",16,0)=" S GRPIEN=$P(GROUP(GRPNM),U)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",17,0)=" I PRSPRM=""N"" S GRPSC=$P(^NURSF(211.4,GRPIEN,0),U)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",18,0)=" S PRSDIVI=$P(GROUP(GRPNM),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",19,0)=" S PRSDIVE=$P(GROUP(GRPNM),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",20,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",21,0)=" D LOCCOR"
^XTMP("XPDT",7815,"RTN","PRSNAC01",22,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",23,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",24,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",25,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",26,0)="LOCCOR ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",27,0)=" S LOC=0"
^XTMP("XPDT",7815,"RTN","PRSNAC01",28,0)=" F  S LOC=$O(GROUP(LOC)) Q:LOC=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNAC01",29,0)=" . I PRSPRM=""N"" S CHECK(+GROUP(LOC))="""""
^XTMP("XPDT",7815,"RTN","PRSNAC01",30,0)=" . I PRSPRM=""T"" S CHECK(LOC)="""""
^XTMP("XPDT",7815,"RTN","PRSNAC01",31,0)=" S (PRSDIV,PRSPPD,PRSIEN,PRSDAY,ZEROFND)=0"
^XTMP("XPDT",7815,"RTN","PRSNAC01",32,0)=" F  S PRSDIV=$O(^PRSN(451,""ACE"",PRSDIV)) Q:'PRSDIV  D"
^XTMP("XPDT",7815,"RTN","PRSNAC01",33,0)=" . F  S PRSPPD=$O(^PRSN(451,""ACE"",PRSDIV,PRSPPD)) Q:'PRSPPD  D"
^XTMP("XPDT",7815,"RTN","PRSNAC01",34,0)=" . . F  S PRSIEN=$O(^PRSN(451,""ACE"",PRSDIV,PRSPPD,PRSIEN)) Q:'PRSIEN  D"
^XTMP("XPDT",7815,"RTN","PRSNAC01",35,0)=" . . . I PRSPRM=""N"" D GRPLOC"
^XTMP("XPDT",7815,"RTN","PRSNAC01",36,0)=" . . . I PRSPRM=""T"" D TLLOC"
^XTMP("XPDT",7815,"RTN","PRSNAC01",37,0)=" . . . Q:'FOUND"
^XTMP("XPDT",7815,"RTN","PRSNAC01",38,0)=" . . . S PRSDAY=0 F  S PRSDAY=$O(^PRSN(451,""ACE"",PRSDIV,PRSPPD,PRSIEN,PRSDAY)) Q:'PRSDAY  D"
^XTMP("XPDT",7815,"RTN","PRSNAC01",39,0)=" . . . . D HDR"
^XTMP("XPDT",7815,"RTN","PRSNAC01",40,0)=" . . . . K POCD D L1^PRSNRUT1(.POCD,PRSPPD,PRSIEN,PRSDAY)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",41,0)=" . . . . D SETREC(.POCD),DSPREC(.POCD),DSPMM"
^XTMP("XPDT",7815,"RTN","PRSNAC01",42,0)=" . . . . I 'QUIT D"
^XTMP("XPDT",7815,"RTN","PRSNAC01",43,0)=" . . . . . D HDR,DSPREC(.POCD),ACTION"
^XTMP("XPDT",7815,"RTN","PRSNAC01",44,0)=" . . . . . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNAC01",45,0)=" . . . . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNAC01",46,0)=" . . . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNAC01",47,0)=" I 'ZEROFND W !!,""There are no corrected records to approve."",!!"
^XTMP("XPDT",7815,"RTN","PRSNAC01",48,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",49,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",50,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",51,0)="GRPLOC ; Find records for selected group"
^XTMP("XPDT",7815,"RTN","PRSNAC01",52,0)=" S FOUND=0"
^XTMP("XPDT",7815,"RTN","PRSNAC01",53,0)=" I $D(CHECK(+$$PRIMLOC^PRSNUT03(^PRSPC(PRSIEN,200)))) S (FOUND,ZEROFND)=1"
^XTMP("XPDT",7815,"RTN","PRSNAC01",54,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",55,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",56,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",57,0)="TLLOC ; Find records for selected T&L Unit"
^XTMP("XPDT",7815,"RTN","PRSNAC01",58,0)=" S FOUND=0"
^XTMP("XPDT",7815,"RTN","PRSNAC01",59,0)=" I $D(CHECK($P(^PRSPC(PRSIEN,0),U,8))) S (FOUND,ZEROFND)=1"
^XTMP("XPDT",7815,"RTN","PRSNAC01",60,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",61,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",62,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",63,0)="SETREC(REC) ; Set up current record for display"
^XTMP("XPDT",7815,"RTN","PRSNAC01",64,0)=" S A=0"
^XTMP("XPDT",7815,"RTN","PRSNAC01",65,0)=" F  S A=$O(REC(A)) Q:'A  D"
^XTMP("XPDT",7815,"RTN","PRSNAC01",66,0)=" . S PRSVER=$P(REC(A),U,11)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",67,0)=" . S:$P(REC(A),U,5)]""""&($P(REC(A),U,5)?1.N) $P(REC(A),U,5)=$P($P(^SC($P(^NURSF(211.4,$P(REC(A),U,5),0),U),0),U),"" "",3,4)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",68,0)=" . S:$P(REC(A),U,6)]""""&($P(REC(A),U,6)?1.N) $P(REC(A),U,6)=$P(^PRSN(451.5,$P(REC(A),U,6),0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",69,0)=" . S:$P(REC(A),U,8)]""""&($P(REC(A),U,8)?1.N) $P(REC(A),U,8)=$P(^PRSN(451.6,$P(REC(A),U,8),0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",70,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNAC01",71,0)=" I $O(REC(0)) S $P(REC($O(REC(0))),U,12)=$P(^PRST(458,PRSPPD,2),U,PRSDAY)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",72,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",73,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",74,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",75,0)="DSPREC(REC) ;  Display current record"
^XTMP("XPDT",7815,"RTN","PRSNAC01",76,0)=" N A"
^XTMP("XPDT",7815,"RTN","PRSNAC01",77,0)=" S A=0"
^XTMP("XPDT",7815,"RTN","PRSNAC01",78,0)=" F  S A=$O(REC(A)) Q:'A  D"
^XTMP("XPDT",7815,"RTN","PRSNAC01",79,0)=" . W $P($P(REC(A),U,12),"" ""),?12,$P(REC(A),U),?21,$P(REC(A),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",80,0)=" . W ?28,$P(REC(A),U,4),?38,$P($P(REC(A),U,5),"" "")"
^XTMP("XPDT",7815,"RTN","PRSNAC01",81,0)=" . W ?51,$P($P(REC(A),U,6),"" ""),?64,$P($P(REC(A),U,8),"" "")"
^XTMP("XPDT",7815,"RTN","PRSNAC01",82,0)=" . W ?77,$P(REC(A),U,7),!"
^XTMP("XPDT",7815,"RTN","PRSNAC01",83,0)=" . W $P($P(REC(A),U,12),"" "",2,999),?12,$P(REC(A),U,2),?38"
^XTMP("XPDT",7815,"RTN","PRSNAC01",84,0)=" . W $P($P(REC(A),U,5),"" "",2),?51,$P($P(REC(A),U,6),"" "",2),?64"
^XTMP("XPDT",7815,"RTN","PRSNAC01",85,0)=" . W $P($P(REC(A),U,8),"" "",2),!"
^XTMP("XPDT",7815,"RTN","PRSNAC01",86,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",87,0)=" . I (IOSL-6)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR W !"
^XTMP("XPDT",7815,"RTN","PRSNAC01",88,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",89,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",90,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",91,0)="DSPMM ;  Display the mismatch report before asking for approval"
^XTMP("XPDT",7815,"RTN","PRSNAC01",92,0)=" W !!,?5,""Ready to display Mismatch Report"",!"
^XTMP("XPDT",7815,"RTN","PRSNAC01",93,0)=" S STOP=$$ASK^PRSLIB00()"
^XTMP("XPDT",7815,"RTN","PRSNAC01",94,0)=" I STOP S QUIT=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",95,0)=" D PPMM^PRSNRMM(PRSIEN,PRSPPD,,.STOP)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",96,0)=" W !!,?5,""Return to Approvals."",!"
^XTMP("XPDT",7815,"RTN","PRSNAC01",97,0)=" S STOP=$$ASK^PRSLIB00(1) ; I STOP S QUIT=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",98,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",99,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",100,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",101,0)="ACTION ;  Approve or Bypass current record"
^XTMP("XPDT",7815,"RTN","PRSNAC01",102,0)=" N DIR,X,Y"
^XTMP("XPDT",7815,"RTN","PRSNAC01",103,0)=" S DIR(""A"")=""Enter an 'A' to Approve or Return to Bypass: """
^XTMP("XPDT",7815,"RTN","PRSNAC01",104,0)=" S DIR(0)=""SAO^A:Approve"" D ^DIR"
^XTMP("XPDT",7815,"RTN","PRSNAC01",105,0)=" I Y="""" Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",106,0)=" I Y[""^"" S QUIT=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",107,0)=" I Y=""A"" D UPDTPOCD^PRSNCGP(PRSPPD,PRSIEN,PRSDAY,PRSVER,Y)"
^XTMP("XPDT",7815,"RTN","PRSNAC01",108,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",109,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNAC01",110,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",111,0)="HDR ;  Header for display of records"
^XTMP("XPDT",7815,"RTN","PRSNAC01",112,0)=" W:$E(IOST,1,2)=""C-"" @IOF"
^XTMP("XPDT",7815,"RTN","PRSNAC01",113,0)=" W $P(^PRSPC(PRSIEN,0),U),?(80-28)/2,""Approve Corrected POC Record"""
^XTMP("XPDT",7815,"RTN","PRSNAC01",114,0)=" W ?63,$S(PRSPRM=""N"":""Location: ""_GRPNM,1:""T&L Unit: ""_GRPNM),!"
^XTMP("XPDT",7815,"RTN","PRSNAC01",115,0)=" W ?58,""SSN: "",$E($P(^PRSPC(PRSIEN,0),U,9)),""XXXXX"",$E($P(^PRSPC(PRSIEN,0),U,9),6,9),!"
^XTMP("XPDT",7815,"RTN","PRSNAC01",116,0)=" W ""Date"",?12,""Start/"",?20,""Meal"",?26,""Type of"",?38,""Location"",?51"
^XTMP("XPDT",7815,"RTN","PRSNAC01",117,0)=" W ""Type of"",?66,""OT"",?76,""OT"",!"
^XTMP("XPDT",7815,"RTN","PRSNAC01",118,0)=" W ?12,""Stop"",?27,""Time"",?52,""Work"",?64,""Reason"",?75,""Mand"",!"
^XTMP("XPDT",7815,"RTN","PRSNAC01",119,0)=" F I=1:1:80 W ""-"""
^XTMP("XPDT",7815,"RTN","PRSNAC01",120,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",121,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNAC01",122,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE")="0^5^B30985593^n/a"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",1,0)="PRSNCAPE ;WOIFO/DWA - PAID PARAMETER ENTER/EDIT ;07/30/09"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNCAPE",4,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",5,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",6,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",7,0)=" ;  Key variables used in this routine:"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",8,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",9,0)=" ;     PPI,PPE,PPST = Current pay period internal value, external"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",10,0)=" ;                    value and start date"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",11,0)=" ;     LPPE,LPST    = Last pay period external value and start date"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",12,0)=" ;     NPPE,NPST    = Next pay period external value and start date"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",13,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",14,0)=" ;     IENS         = Internal entry number of selected institution"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",15,0)=" ;     IENS2        = External value of selected institution"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",16,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",17,0)=" ;     PRSFDA       = A name spaced FileMan Data Array"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",18,0)=" ;     PAYPD        = External value of selected effective pay period"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",19,0)=" ;     PPDI         = Internal entry number of selected effective"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",20,0)=" ;                    pay period"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",21,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",22,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",23,0)="EN ; Entry point for PAID Application Parameter Edit"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",24,0)=" N OUT S OUT=0 D SHODIVAC(.OUT) Q:OUT"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",25,0)=" K DIC"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",26,0)=" N PPI,PPE,PPST,LPPE,LPST,NPPE,NPST,IENS,IENS2,PRSFDA,PAYPD,PPDI"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",27,0)=" N X1,X2,X,Y,ORIGPP,NAM,NAM2"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",28,0)=" S PPI=$P($G(^PRST(458,""AD"",DT)),""^"")"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",29,0)=" I 'PPI W !!,""Current Pay Period must be open for testing.  Quitting."" Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",30,0)=" S PPE=$P(^PRST(458,PPI,0),""^"")"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",31,0)=" S LPPE=$P(^PRST(458,PPI-1,0),""^"")"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",32,0)=" S NPPE=$E($$NXTPP^PRSAPPU(PPE),3,7)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",33,0)=" S PPST=$P(^PRST(458,PPI,1),""^"")"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",34,0)=" S LPST=$P(^PRST(458,PPI-1,1),""^"")"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",35,0)=" S X1=PPST,X2=14 D C^%DTC S NPST=X"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",36,0)=" D HDR"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",37,0)=" N DIC,X,Y,DUOUT,DTOUT"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",38,0)=" S DIC=""^PRST(456,"",DIC(0)=""ALEQMZ"",DIC(""A"")=""Select Institution: """
^XTMP("XPDT",7815,"RTN","PRSNCAPE",39,0)=" D ^DIC"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",40,0)=" Q:$D(DUOUT)!$D(DTOUT)!(+Y'>0)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",41,0)=" S IENS=+Y,IENS2=$P(Y,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",42,0)="PPDS ; Set the effective pay period"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",43,0)=" S X=PPST D DTP^PRSAPPU"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",44,0)=" W !!!,""C = Current Pay Period beginning ""_Y"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",45,0)=" S X=LPST D DTP^PRSAPPU"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",46,0)=" W !,""L = Last Pay Period beginning ""_Y"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",47,0)=" S X=NPST D DTP^PRSAPPU"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",48,0)=" W !,""N = Next Pay Period beginning ""_Y,!"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",49,0)=" N DIR,DIRUT,Y,PRSDT"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",50,0)=" S DIR(0)=""SB^C:Current;N:Next;L:Last"",DIR(""A"")=""Select Effective Pay Period; Current, Next, Last"""
^XTMP("XPDT",7815,"RTN","PRSNCAPE",51,0)=" D ^DIR K DIR Q:$D(DIRUT)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",52,0)=" W !!"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",53,0)=" S PAYPD=$S(Y=""C"":PPE,Y=""N"":NPPE,1:LPPE)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",54,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",55,0)=" S PRSDT=$S(Y=""C"":PPST,Y=""N"":NPST,1:LPST)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",56,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",57,0)=" S PPDI=$O(^PRST(456,IENS,1,""B"",PAYPD,0))"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",58,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",59,0)=" S NAM=$$DIVACC^PRSNUT02(PRSDT,IENS2)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",60,0)=" S ORIGPP=$P(NAM,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",61,0)=" S NAM=$P(NAM,U)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",62,0)=" S NAM2=$S(NAM=""N"":""T"",1:""N"")"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",63,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",64,0)=" ; If no existing entry, set one up, otherwise Update existing entry"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",65,0)=" I PPDI'>0 D"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",66,0)=" .  D NA1"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",67,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",68,0)=" . W !!,""The Nurse Access Method for ""_$$EXTERNAL^DILFD(456,.01,"""",IENS2)_"" pay period ""_PAYPD_"" is currently set to "",!,$$EXTERNAL^DILFD(456.05,1,"""",NAM)_"".  Do you wish to change it?"",!!"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",69,0)=" . N DIR,Y,DIRUT"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",70,0)=" . S DIR(0)=""Y"",DIR(""B"")=""Yes"" D ^DIR K DIR Q:$D(DIRUT)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",71,0)=" . I Y=0 W ""   No changes made, quitting."",!! Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",72,0)=" . S NAM=NAM2"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",73,0)=" . S PRSFDA(456.05,PPDI_"",""_IENS_"","",1)=NAM"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",74,0)=" . D FILE^DIE("""",""PRSFDA"",""""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",75,0)=" . W !!,""The Nurse Access Method for ""_$$EXTERNAL^DILFD(456,.01,"""",IENS2)_"" has been successfully changed to "",!,$$EXTERNAL^DILFD(456.05,1,"""",NAM)_"" Effective Pay Period ""_PAYPD_""."",!!"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",76,0)=" . Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",77,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",78,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",79,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",80,0)="NA1 ; Create a new sub-record and set nurse access parameter"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",81,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",82,0)=" N STOP,PPDI"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",83,0)=" S STOP=0"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",84,0)=" N DIR,Y,DIRUT"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",85,0)=" I ORIGPP'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",86,0)=" .  W !!,""The Nurse Access Method for ""_$$EXTERNAL^DILFD(456,.01,"""",IENS2)_"" pay period ""_PAYPD_"" is currently set to "",!,$$EXTERNAL^DILFD(456.05,1,"""",NAM)_"".  Do you wish to change it?"",!! D"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",87,0)=" . S DIR(0)=""Y"",DIR(""B"")=""Yes"" D ^DIR K DIR Q:$D(DIRUT)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",88,0)=" . I Y=0 W ""   No changes made, quitting."",!! S STOP=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",89,0)=" . S NAM=NAM2"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",90,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",91,0)=" . S DIR(0)=""SB^N:Nurse Location;T:T&L Unit"",DIR(""A"")=""Select Nurse Access Method; Nurse Location or T&L Unit"" D ^DIR K DIR Q:$D(DIRUT)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",92,0)=" . S NAM=X"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",93,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",94,0)=" Q:STOP"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",95,0)=" N PRSFDA,PRSIENS,PPDI"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",96,0)=" S PRSFDA(456.05,""+2,""_IENS_"","",.01)=PAYPD"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",97,0)=" D UPDATE^DIE("""",""PRSFDA"",""PRSIENS""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",98,0)=" S PPDI=PRSIENS(2)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",99,0)=" S PRSFDA(456.05,PPDI_"",""_IENS_"","",1)=NAM"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",100,0)=" D FILE^DIE("""",""PRSFDA"",""""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",101,0)=" W !!,""The Nurse Access Method for ""_$$EXTERNAL^DILFD(456,.01,"""",IENS2)_"" has been successfully set to "",!,$$EXTERNAL^DILFD(456.05,1,"""",NAM)_"" Effective Pay Period ""_PAYPD_""."",!!"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",102,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",103,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",104,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",105,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",106,0)="HDR ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",107,0)=" N L1,L2"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",108,0)=" I $E(IOST,1,2)=""C-"" W @IOF"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",109,0)=" S L1=""VA TIME & ATTENDANCE SYSTEM"",L2=""PAID PARAMETERS ENTER/EDIT"""
^XTMP("XPDT",7815,"RTN","PRSNCAPE",110,0)=" W ?((80-$L(L1))/2),L1,!,?((80-$L(L2))/2),L2,!!!!"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",111,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",112,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",113,0)="SHODIVAC(OUT) ; DISPLAY POC ACCESS (T&L/NURSE LOCATION) FOR ALL DIVISIONS"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",114,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",115,0)=" N DIR,X,Y,DIRUT S DIR(0)=""Y"",DIR(""A"")=""Show history"" D ^DIR"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",116,0)=" Q:$D(DIRUT)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",117,0)=" W @IOF"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",118,0)=" N HIST,CNT,DIVI"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",119,0)=" S HIST=Y"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",120,0)=" D SDHDR"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",121,0)=" S (CNT,DIVI)=0"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",122,0)=" F  S DIVI=$O(^PRST(456,""B"",DIVI)) Q:DIVI'>0!OUT  D"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",123,0)=" .  S CNT=CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",124,0)=" .  I CNT>1,HIST D SDHDR"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",125,0)=" .  S X=$P($$DIVACC^PRSNUT02(DT,DIVI),U)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",126,0)=" .  W !"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",127,0)=" .  W $$EXTERNAL^DILFD(456,.01,"""",DIVI)"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",128,0)=" .  W "" ("",DIVI,"")"""
^XTMP("XPDT",7815,"RTN","PRSNCAPE",129,0)=" .  W ?32,$S(X=""N"":""Nurse Location"",X=""T"":""T&L Unit"",1:""None"")"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",130,0)=" .  W ?55,""(Current)"""
^XTMP("XPDT",7815,"RTN","PRSNCAPE",131,0)=" .  I HIST D ACCHIST(DIVI) W !!! S OUT=$$ASK^PRSLIB00()"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",132,0)=" I 'HIST W !!! S OUT=$$ASK^PRSLIB00()"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",133,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",134,0)="ACCHIST(DIVI) ; SHOW HISTORY OF POC ACCESS (T&L/NURSE LOC) FOR A DIVISION"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",135,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",136,0)=" N DPI,PPE,AP,PPE"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",137,0)=" S DPI=$O(^PRST(456,""B"",DIVI,0))"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",138,0)=" Q:DPI'>0"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",139,0)=" S PPE="""""
^XTMP("XPDT",7815,"RTN","PRSNCAPE",140,0)=" F  S PPE=$O(^PRST(456,DPI,1,""C"",PPE)) Q:PPE=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",141,0)=" .  S AP=$O(^PRST(456,DPI,1,""C"",PPE,""""))"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",142,0)=" .  W !?32,$S(AP=""N"":""Nurse Location"",1:""T&L Unit"")"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",143,0)=" .  W ?57,PPE"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",144,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",145,0)="SDHDR ; SHOW DIVISION HEADER"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",146,0)=" W @IOF,!!!"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",147,0)=" W !?30,""DATA ENTRY/APPROVAL"",?55,""EFFECTIVE"""
^XTMP("XPDT",7815,"RTN","PRSNCAPE",148,0)=" W !,""   DIVISION"",?30,""ACCESS TO NURSE VIA"",?55,""PAY PERIOD"""
^XTMP("XPDT",7815,"RTN","PRSNCAPE",149,0)=" W !,""==============="",?29,""======================"",?54,""============"""
^XTMP("XPDT",7815,"RTN","PRSNCAPE",150,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCAPE",151,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP")="0^6^B69640450^n/a"
^XTMP("XPDT",7815,"RTN","PRSNCGP",1,0)="PRSNCGP ;WOIFO-JAH - Release POC Record corrections for VANOD;11/03/09"
^XTMP("XPDT",7815,"RTN","PRSNCGP",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNCGP",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNCGP",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGP",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",6,0)="CRELEASE ; Routine provides functionality to release corrected records for"
^XTMP("XPDT",7815,"RTN","PRSNCGP",7,0)=" ; VANOD extraction. These are daily records with a CORRECTION STATUS"
^XTMP("XPDT",7815,"RTN","PRSNCGP",8,0)=" ; of Approved for a Day"
^XTMP("XPDT",7815,"RTN","PRSNCGP",9,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",10,0)=" ;    Prompt Coordinator for Divisions to release (one, many, all) "
^XTMP("XPDT",7815,"RTN","PRSNCGP",11,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",12,0)=" N PRSINST,PPI,PPS,MMR,INSTCC"
^XTMP("XPDT",7815,"RTN","PRSNCGP",13,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",14,0)=" D GETDIV^PRSNCGR(.PRSINST) Q:PRSINST<0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",15,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",16,0)=" ; Check all pay periods with approved corrections to released records."
^XTMP("XPDT",7815,"RTN","PRSNCGP",17,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",18,0)=" D PRECHK(.INSTCC,.PRSINST)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",19,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",20,0)=" ; do prelimary report of record status"
^XTMP("XPDT",7815,"RTN","PRSNCGP",21,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",22,0)=" D CNTREP(.INSTCC)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",23,0)=" Q:$G(INSTCC)=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",24,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",25,0)=" S X=$$ASK^PRSLIB00() Q:X"
^XTMP("XPDT",7815,"RTN","PRSNCGP",26,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",27,0)=" ;    prompt for mismatch report "
^XTMP("XPDT",7815,"RTN","PRSNCGP",28,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",29,0)=" S MMR=$$ASKMM^PRSNCGR() Q:MMR<0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",30,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",31,0)=" I MMR D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",32,0)=" .  N %ZIS,POP,IOP"
^XTMP("XPDT",7815,"RTN","PRSNCGP",33,0)=" .  S %ZIS=""MQ"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",34,0)=" .  D ^%ZIS"
^XTMP("XPDT",7815,"RTN","PRSNCGP",35,0)=" .  Q:POP"
^XTMP("XPDT",7815,"RTN","PRSNCGP",36,0)=" .  I $D(IO(""Q"")) D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",37,0)=" ..    K IO(""Q"")"
^XTMP("XPDT",7815,"RTN","PRSNCGP",38,0)=" ..    N ZTDESC,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNCGP",39,0)=" ..    S ZTDESC=""PRSN POC/ETA MISMATCH REPORT FOR POC CORRECTIONS"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",40,0)=" ..    S ZTRTN=""MMREP^PRSNCGP"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",41,0)=" ..    S ZTSAVE(""PPI"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGP",42,0)=" ..    S ZTSAVE(""PRSINST"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGP",43,0)=" ..    S ZTSAVE(""MMR"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGP",44,0)=" ..    D ^%ZTLOAD"
^XTMP("XPDT",7815,"RTN","PRSNCGP",45,0)=" ..    I $D(ZTSK) S ZTREQ=""@"" W !,""Request ""_ZTSK_"" Queued."""
^XTMP("XPDT",7815,"RTN","PRSNCGP",46,0)=" ..    K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNCGP",47,0)=" .  E  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",48,0)=" ..    D MMREP^PRSNCGP"
^XTMP("XPDT",7815,"RTN","PRSNCGP",49,0)=" .  D ^%ZISC"
^XTMP("XPDT",7815,"RTN","PRSNCGP",50,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",51,0)=" I $$SUREQ^PRSNCGR() D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",52,0)=" .  N %ZIS,POP,IOP"
^XTMP("XPDT",7815,"RTN","PRSNCGP",53,0)=" .  S %ZIS=""MQ"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",54,0)=" .  D ^%ZIS"
^XTMP("XPDT",7815,"RTN","PRSNCGP",55,0)=" .  Q:POP"
^XTMP("XPDT",7815,"RTN","PRSNCGP",56,0)=" .  I $D(IO(""Q"")) D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",57,0)=" ..    K IO(""Q"")"
^XTMP("XPDT",7815,"RTN","PRSNCGP",58,0)=" ..    N ZTDESC,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNCGP",59,0)=" ..    S ZTDESC=""PRSN POC/ETA MISMATCH REPORT"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",60,0)=" ..    S ZTRTN=""DRIVER^PRSNCGP"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",61,0)=" ..    S ZTSAVE(""PRSINST"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGP",62,0)=" ..    S ZTSAVE(""INSTCC"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGP",63,0)=" ..    S ZTSAVE(""MMR"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGP",64,0)=" ..    D ^%ZTLOAD"
^XTMP("XPDT",7815,"RTN","PRSNCGP",65,0)=" ..    I $D(ZTSK) S ZTREQ=""@"" W !,""Request ""_ZTSK_"" Queued."""
^XTMP("XPDT",7815,"RTN","PRSNCGP",66,0)=" ..    K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNCGP",67,0)=" .E  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",68,0)=" ..    D DRIVER"
^XTMP("XPDT",7815,"RTN","PRSNCGP",69,0)=" .  D ^%ZISC"
^XTMP("XPDT",7815,"RTN","PRSNCGP",70,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGP",71,0)="DRIVER ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",72,0)=" N REC,CNT,FIELD,SEGCNT,PC,CI,SN"
^XTMP("XPDT",7815,"RTN","PRSNCGP",73,0)=" S REC=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",74,0)=" F  S REC=$O(PRSINST(REC)) Q:REC'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",75,0)=" .  S CI=+PRSINST(REC)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",76,0)=" .  D GETS^DIQ(4,CI_"","",""99"",""E"",""FIELD("",,)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",77,0)=" .  S SN=FIELD(4,CI_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNCGP",78,0)=" .  S CNT(CI)=""0^0"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",79,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",80,0)=" .;  loop thru Approved Daily Corrections index (sorted by Division,"
^XTMP("XPDT",7815,"RTN","PRSNCGP",81,0)=" .;  pay period, nurse, day number)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",82,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",83,0)=" .  S (SEGCNT,PPI,RECCNT)=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",84,0)=" .  F  S PPI=$O(^PRSN(451,""ACA"",CI,PPI)) Q:PPI'>0  S PRSIEN=0 F  S PRSIEN=$O(^PRSN(451,""ACA"",CI,PPI,PRSIEN)) Q:PRSIEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",85,0)=" ..    S $P(CNT(CI),U)=$P(CNT(CI),U)+1"
^XTMP("XPDT",7815,"RTN","PRSNCGP",86,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",87,0)=" ..; build node with days corrected"
^XTMP("XPDT",7815,"RTN","PRSNCGP",88,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",89,0)=" ..    K CDS"
^XTMP("XPDT",7815,"RTN","PRSNCGP",90,0)=" ..    S I=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",91,0)=" ..    F  S I=$O(^PRSN(451,""ACA"",CI,PPI,PRSIEN,I)) Q:I'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",92,0)=" ...     S CDS(I)="""""
^XTMP("XPDT",7815,"RTN","PRSNCGP",93,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",94,0)=" ..;  get all records for the pay period"
^XTMP("XPDT",7815,"RTN","PRSNCGP",95,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",96,0)=" ..    K PC D EXTRECS^PRSNCGR(.PC,.RECCNT,PPI,PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",97,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",98,0)=" ..;  trim days from PC that aren't impacted by corrections"
^XTMP("XPDT",7815,"RTN","PRSNCGP",99,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",100,0)=" ..   D TRIMPC(.PC,.CDS,PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",101,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",102,0)=" ..; note that day 15 has data and we need to determine whether"
^XTMP("XPDT",7815,"RTN","PRSNCGP",103,0)=" ..; to file that days correction after filing for this pp"
^XTMP("XPDT",7815,"RTN","PRSNCGP",104,0)=" ..    S PCNX=0 I $D(PC(15)) S PCNX=1 K PC(15)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",105,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",106,0)=" ..;   file all corrections in PC array "
^XTMP("XPDT",7815,"RTN","PRSNCGP",107,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",108,0)=" ..    D FILEPP^PRSNCGR1(.PC,PRSIEN,PPI,CI,SN)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",109,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",110,0)=" ..;   increment counter"
^XTMP("XPDT",7815,"RTN","PRSNCGP",111,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",112,0)=" ..    S $P(CNT(CI),U,2)=$P(CNT(CI),U,2)+$$PCCOUNT(.PC)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",113,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",114,0)=" ..;  update daily POC record status from approved to released"
^XTMP("XPDT",7815,"RTN","PRSNCGP",115,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",116,0)=" ..    D UPDTPOC(.PC,PPI,PRSIEN,""R"")"
^XTMP("XPDT",7815,"RTN","PRSNCGP",117,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",118,0)=" ..; File and update for day one of next pp, if necessary."
^XTMP("XPDT",7815,"RTN","PRSNCGP",119,0)=" ..; If there is correction data from a two day tour of current pay"
^XTMP("XPDT",7815,"RTN","PRSNCGP",120,0)=" ..; period that impacts day 1 of next pay period and that pay"
^XTMP("XPDT",7815,"RTN","PRSNCGP",121,0)=" ..; period has been released then we need to include any data"
^XTMP("XPDT",7815,"RTN","PRSNCGP",122,0)=" ..; that is explicitly recorded on that day.  If there is also"
^XTMP("XPDT",7815,"RTN","PRSNCGP",123,0)=" ..; a correction on that day or that pay period is not released"
^XTMP("XPDT",7815,"RTN","PRSNCGP",124,0)=" ..; then we need do nothing as the release of that correction or pp"
^XTMP("XPDT",7815,"RTN","PRSNCGP",125,0)=" ..; will pick up the two day tour spillover."
^XTMP("XPDT",7815,"RTN","PRSNCGP",126,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",127,0)=" ..  S NXTPPSTA=$P($G(^PRSN(451,PPI+1,""E"",PRSIEN,0)),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",128,0)=" ..  S NXTPPDAT=$D(^PRSN(451,PPI+1,""E"",PRSIEN,""D"",1,0))"
^XTMP("XPDT",7815,"RTN","PRSNCGP",129,0)=" ..  S NXTPPCOR=$D(^PRSN(451,""ACA"",CI,PPI+1,PRSIEN,1))"
^XTMP("XPDT",7815,"RTN","PRSNCGP",130,0)=" ..    I PCNX,'NXTPPCOR,NXTPPSTA=""R"",NXTPPDAT D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",131,0)=" ...      K PC D EXTRECS^PRSNCGR(.PC,.SEGCNT,PPI+1,PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",132,0)=" ...;only need day one, so kill the rest"
^XTMP("XPDT",7815,"RTN","PRSNCGP",133,0)=" ...      N I F I=0,2:1:15 K PC(I)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",134,0)=" ...      D FILEPP^PRSNCGR1(.PCNX,PRSIEN,PPI+1,CI,SN)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",135,0)=" ...      S $P(CNT(CI),U,2)=$P(CNT(CI),U,2)+$$PCCOUNT(.PCNX)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",136,0)=" ...      D UPDTPOC(.PCNX,PPI+1,PRSIEN,""R"")"
^XTMP("XPDT",7815,"RTN","PRSNCGP",137,0)=" D RESULTS(.CNT)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",138,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",139,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGP",140,0)="MMREP ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",141,0)=" N REC,CNT,FIELD,SEGCNT,PC,PPI,CI,PG,OUT,SN"
^XTMP("XPDT",7815,"RTN","PRSNCGP",142,0)=" S (PG,REC,OUT)=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",143,0)=" F  S REC=$O(PRSINST(REC)) Q:REC'>0!OUT  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",144,0)=" .    S CI=+PRSINST(REC)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",145,0)=" .    D GETS^DIQ(4,CI_"","",""99"",""E"",""FIELD("",,)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",146,0)=" .    S SN=FIELD(4,CI_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNCGP",147,0)=" .    S PRSIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",148,0)=" .  S PPI=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",149,0)=" .  F  S PPI=$O(^PRSN(451,""ACA"",CI,PPI)) Q:PPI'>0  S PRSIEN=0 F  S PRSIEN=$O(^PRSN(451,""ACA"",CI,PPI,PRSIEN)) Q:PRSIEN'>0!OUT  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",150,0)=" ..      D PPMM^PRSNRMM(PRSIEN,PPI,.PG,.OUT)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",151,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGP",152,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",153,0)="TRIMPC(PC,CDS,PRSIEN) ;Trim days from pay per array that are not either"
^XTMP("XPDT",7815,"RTN","PRSNCGP",154,0)=" ; a corrected day or a day impacted by the correction"
^XTMP("XPDT",7815,"RTN","PRSNCGP",155,0)=" ; i.e., we must resend days that have time from a corrected day"
^XTMP("XPDT",7815,"RTN","PRSNCGP",156,0)=" ; that cross midnight into them."
^XTMP("XPDT",7815,"RTN","PRSNCGP",157,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",158,0)=" N PRSD,CORSPIL"
^XTMP("XPDT",7815,"RTN","PRSNCGP",159,0)=" S PRSD=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",160,0)=" F  S PRSD=$O(PC(PRSD)) Q:PRSD'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",161,0)=" .  S CORSPIL=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",162,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",163,0)=" .; if prior day is a correction with spillover we must include today"
^XTMP("XPDT",7815,"RTN","PRSNCGP",164,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",165,0)=" .  I $D(CDS(PRSD-1)),$$SPILLOVR($G(PC(PRSD-1)),PRSD-1) S CORSPIL=1"
^XTMP("XPDT",7815,"RTN","PRSNCGP",166,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",167,0)=" .; kill days that aren't part of the correction set"
^XTMP("XPDT",7815,"RTN","PRSNCGP",168,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",169,0)=" .  I '$D(CDS(PRSD))&('CORSPIL) K PC(PRSD)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",170,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNCGP",171,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGP",172,0)="SPILLOVR(SEGS,I) ; return true if a segment on this day crosses midnight"
^XTMP("XPDT",7815,"RTN","PRSNCGP",173,0)=" N SPILL,J"
^XTMP("XPDT",7815,"RTN","PRSNCGP",174,0)=" S (SPILL,J)=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",175,0)=" F  S J=$O(SEGS(I,J)) Q:J'>0!SPILL  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",176,0)=" .  I $P(SEGS(I,J),U,10)>2400 S SPILL=1"
^XTMP("XPDT",7815,"RTN","PRSNCGP",177,0)=" Q SPILL"
^XTMP("XPDT",7815,"RTN","PRSNCGP",178,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",179,0)="PCCOUNT(ARRAY2D) ; COUNT records in 2D array with integer subscripts"
^XTMP("XPDT",7815,"RTN","PRSNCGP",180,0)=" N I,J,CNT"
^XTMP("XPDT",7815,"RTN","PRSNCGP",181,0)=" S (CNT,I)=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",182,0)=" F  S I=$O(ARRAY2D(I)) Q:I'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",183,0)=" .  S J=0 F  S J=$O(ARRAY2D(I,J)) Q:J'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",184,0)=" ..   S CNT=CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNCGP",185,0)=" Q CNT"
^XTMP("XPDT",7815,"RTN","PRSNCGP",186,0)="RESULTS(CNT) ; Print results of the Release"
^XTMP("XPDT",7815,"RTN","PRSNCGP",187,0)=" N DIVI,DIVE,I,F,X,STNAME,STNUM"
^XTMP("XPDT",7815,"RTN","PRSNCGP",188,0)=" W @IOF,!!,?14,""POC CORRECTED RECORDS RELEASED RESULTS"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",189,0)=" W !,?14,""======================================"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",190,0)=" W !!,?30,""TOTAL"",?42,""TOTAL"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",191,0)=" W !,?4,""DIVISION"",?30,""NURSES"",?42,""RECORDS"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",192,0)=" W !,?4,""========"",?30,""======"",?42,""======="""
^XTMP("XPDT",7815,"RTN","PRSNCGP",193,0)=" N I S I=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",194,0)=" F  S I=$O(CNT(I)) Q:I'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",195,0)=" .  D GETS^DIQ(4,I_"","","".01;99"",""EI"",""F("",,)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",196,0)=" .  S STNUM=F(4,I_"","",99,""E""),STNAME=F(4,I_"","",.01,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNCGP",197,0)=" .  W !,?4,STNAME,"" ("",STNUM,"")"",?30,$P(CNT(I),U),?44,$P(CNT(I),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",198,0)=" W !!! S X=$$ASK^PRSLIB00(1)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",199,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGP",200,0)="PRECHK(INSTCC,PRSINST) ; Count up corrections by division"
^XTMP("XPDT",7815,"RTN","PRSNCGP",201,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",202,0)=" ;  INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNCGP",203,0)=" ;    PRSINST (required) array of institutions to check"
^XTMP("XPDT",7815,"RTN","PRSNCGP",204,0)=" ;  OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNCGP",205,0)=" ;    INSTCC (returned by reference) Institution correction counts"
^XTMP("XPDT",7815,"RTN","PRSNCGP",206,0)=" ;         e.g.,  INSTCC(500)=32 "
^XTMP("XPDT",7815,"RTN","PRSNCGP",207,0)=" ;                INSTCC(16473)=10 "
^XTMP("XPDT",7815,"RTN","PRSNCGP",208,0)=" ;         Where the node is the institution # and it is set equal"
^XTMP("XPDT",7815,"RTN","PRSNCGP",209,0)=" ;         to the total number of corrections across all released"
^XTMP("XPDT",7815,"RTN","PRSNCGP",210,0)=" ;         pay periods."
^XTMP("XPDT",7815,"RTN","PRSNCGP",211,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",212,0)=" N REC,CNT,FIELD,STOP"
^XTMP("XPDT",7815,"RTN","PRSNCGP",213,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",214,0)=" S (INSTCC,I)=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",215,0)=" F  S I=$O(PRSINST(I)) Q:I'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",216,0)=" .  S INSTCC(+PRSINST(I))=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",217,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",218,0)=" S I=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",219,0)=" F  S I=$O(INSTCC(I)) Q:I'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",220,0)=" .  S PPI=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",221,0)=" .  F  S PPI=$O(^PRSN(451,""ACA"",I,PPI)) Q:PPI'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",222,0)=" ..  S PRSIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",223,0)=" ..  F  S PRSIEN=$O(^PRSN(451,""ACA"",I,PPI,PRSIEN)) Q:PRSIEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",224,0)=" ...    S INSTCC=INSTCC+1"
^XTMP("XPDT",7815,"RTN","PRSNCGP",225,0)=" ...    S INSTCC(I)=INSTCC(I)+1"
^XTMP("XPDT",7815,"RTN","PRSNCGP",226,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGP",227,0)="CNTREP(INSTCC) ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",228,0)=" N I,STNUM,STNAME,X"
^XTMP("XPDT",7815,"RTN","PRSNCGP",229,0)=" W @IOF,!!!,?20,""CORRECTION TOTALS BY DIVISION"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",230,0)=" W !,?20,""============================="""
^XTMP("XPDT",7815,"RTN","PRSNCGP",231,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",232,0)=" W !!,""DIVISION"",?30,""# OF DAILY"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",233,0)=" W !,?30,""DAILY CORRECTIONS"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",234,0)=" S I=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",235,0)=" F  S I=$O(INSTCC(I)) Q:I'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",236,0)=" .  D GETS^DIQ(4,I_"","","".01;99"",""EI"",""F("",,)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",237,0)=" .  S STNUM=F(4,I_"","",99,""E""),STNAME=F(4,I_"","",.01,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNCGP",238,0)=" .  W !,?4,STNAME,"" ("",STNUM,"")"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",239,0)=" .  W ?30,$J(INSTCC(I),10,0)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",240,0)=" I $G(INSTCC)=0 D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",241,0)=" .  W !!,""  No approved corrections are ready for release."""
^XTMP("XPDT",7815,"RTN","PRSNCGP",242,0)=" .  W !!! S X=$$ASK^PRSLIB00(1)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",243,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGP",244,0)="UPDTPOCD(PPI,PRSIEN,PRSD,PRSV,STATUS) ; update DAILY RECORD status for POC records"
^XTMP("XPDT",7815,"RTN","PRSNCGP",245,0)=" ; INPUT :"
^XTMP("XPDT",7815,"RTN","PRSNCGP",246,0)=" ;    PPI,PRSIEN,PRSD : Standard"
^XTMP("XPDT",7815,"RTN","PRSNCGP",247,0)=" ;    PRSV : (optional) if STATUS is (A)pproved PRSV must be defined"
^XTMP("XPDT",7815,"RTN","PRSNCGP",248,0)=" ;                      to the version number of the POC record"
^XTMP("XPDT",7815,"RTN","PRSNCGP",249,0)=" ;    STATUS: (optional) : set to (A)pproved"
^XTMP("XPDT",7815,"RTN","PRSNCGP",250,0)=" ;                                (R)eleased"
^XTMP("XPDT",7815,"RTN","PRSNCGP",251,0)=" ;                                (E)ntered"
^XTMP("XPDT",7815,"RTN","PRSNCGP",252,0)=" ;                                Null (remove status)"
^XTMP("XPDT",7815,"RTN","PRSNCGP",253,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGP",254,0)=" N IENS,PRSFDA"
^XTMP("XPDT",7815,"RTN","PRSNCGP",255,0)=" S IENS=PRSD_"",""_PRSIEN_"",""_PPI_"","""
^XTMP("XPDT",7815,"RTN","PRSNCGP",256,0)=" I STATUS="""" S STATUS=""@"""
^XTMP("XPDT",7815,"RTN","PRSNCGP",257,0)=" S PRSFDA(451.99,IENS,1)=STATUS"
^XTMP("XPDT",7815,"RTN","PRSNCGP",258,0)=" D UPDATE^DIE("""",""PRSFDA"",""IENS""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNCGP",259,0)=" I STATUS=""A""&(PRSV>0) D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",260,0)=" .;  update approver and date time of approval"
^XTMP("XPDT",7815,"RTN","PRSNCGP",261,0)=" .  K IENS,PRSFDA N %"
^XTMP("XPDT",7815,"RTN","PRSNCGP",262,0)=" .  S IENS=PRSV_"",""_PRSD_"",""_PRSIEN_"",""_PPI_"","""
^XTMP("XPDT",7815,"RTN","PRSNCGP",263,0)=" .  S PRSFDA(451.999,IENS,1)=DUZ"
^XTMP("XPDT",7815,"RTN","PRSNCGP",264,0)=" .  D NOW^%DTC"
^XTMP("XPDT",7815,"RTN","PRSNCGP",265,0)=" .  S PRSFDA(451.999,IENS,2)=%"
^XTMP("XPDT",7815,"RTN","PRSNCGP",266,0)=" .  D UPDATE^DIE("""",""PRSFDA"",""IENS""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNCGP",267,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGP",268,0)="UPDTPOC(PC,PPI,PRSIEN,STATUS) ; update POC daily record status"
^XTMP("XPDT",7815,"RTN","PRSNCGP",269,0)=" N IENS,FDA"
^XTMP("XPDT",7815,"RTN","PRSNCGP",270,0)=" S I=0"
^XTMP("XPDT",7815,"RTN","PRSNCGP",271,0)=" F  S I=$O(PC(I)) Q:I'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGP",272,0)=" . S IENS=I_"",""_PRSIEN_"",""_PPI_"","""
^XTMP("XPDT",7815,"RTN","PRSNCGP",273,0)=" . S FDA(451.99,IENS,1)=STATUS"
^XTMP("XPDT",7815,"RTN","PRSNCGP",274,0)=" D UPDATE^DIE("""",""FDA"",""IENS""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNCGP",275,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR")="0^7^B58780397^n/a"
^XTMP("XPDT",7815,"RTN","PRSNCGR",1,0)="PRSNCGR ;WOIFO-JAH - Release POC Records for VANOD Extraction;10/16/09"
^XTMP("XPDT",7815,"RTN","PRSNCGR",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNCGR",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNCGR",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",6,0)="RELEASE ; Routine provides functionality to release records for"
^XTMP("XPDT",7815,"RTN","PRSNCGR",7,0)=" ; VANOD extraction.  I.e., search for POC records who's pay period"
^XTMP("XPDT",7815,"RTN","PRSNCGR",8,0)=" ; status is approved and move those records to the extraction"
^XTMP("XPDT",7815,"RTN","PRSNCGR",9,0)=" ; file.  Records in the POC file may cross midnight, but we will"
^XTMP("XPDT",7815,"RTN","PRSNCGR",10,0)=" ; split those records at midnight and report the activity on the"
^XTMP("XPDT",7815,"RTN","PRSNCGR",11,0)=" ; day on which it occured."
^XTMP("XPDT",7815,"RTN","PRSNCGR",12,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",13,0)=" ;    Prompt Coordinator for Divisions to release (one, many, all) "
^XTMP("XPDT",7815,"RTN","PRSNCGR",14,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",15,0)=" N PRSINST,PPI,PPS,MMR"
^XTMP("XPDT",7815,"RTN","PRSNCGR",16,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",17,0)=" D GETDIV(.PRSINST) Q:PRSINST<0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",18,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",19,0)=" ; Check all pay periods with approved records which are "
^XTMP("XPDT",7815,"RTN","PRSNCGR",20,0)=" ; ready to be released."
^XTMP("XPDT",7815,"RTN","PRSNCGR",21,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",22,0)=" D PPRELCHK(.PPS,.PRSINST)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",23,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",24,0)=" ;    prompt for pay period"
^XTMP("XPDT",7815,"RTN","PRSNCGR",25,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",26,0)=" S PPI=$$GETPP(.PPS) Q:PPI'>0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",27,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",28,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",29,0)=" ; do prelimary report of record status"
^XTMP("XPDT",7815,"RTN","PRSNCGR",30,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",31,0)=" D CNTREP^PRSNCGR1(.PRSINST,PPI)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",32,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",33,0)=" I '$D(PPS(""P"",PPI)) D  Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR",34,0)=" .  W !!,""There are no records in pay period "",$P($G(^PRST(458,PPI,0)),U),"" approved for release."""
^XTMP("XPDT",7815,"RTN","PRSNCGR",35,0)=" .  W !! S X=$$ASK^PRSLIB00(1)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",36,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",37,0)=" ;    prompt for mismatch report "
^XTMP("XPDT",7815,"RTN","PRSNCGR",38,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",39,0)=" S MMR=$$ASKMM() Q:MMR<0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",40,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",41,0)=" I MMR D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",42,0)=" .  N %ZIS,POP,IOP"
^XTMP("XPDT",7815,"RTN","PRSNCGR",43,0)=" .  S %ZIS=""MQ"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",44,0)=" .  D ^%ZIS"
^XTMP("XPDT",7815,"RTN","PRSNCGR",45,0)=" .  Q:POP"
^XTMP("XPDT",7815,"RTN","PRSNCGR",46,0)=" .  I $D(IO(""Q"")) D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",47,0)=" ..    K IO(""Q"")"
^XTMP("XPDT",7815,"RTN","PRSNCGR",48,0)=" ..    N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNCGR",49,0)=" ..    S ZTDESC=""PRSN POC/ETA MISMATCH REPORT"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",50,0)=" ..    S ZTRTN=""MMREP^PRSNCGR"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",51,0)=" ..    S ZTSAVE(""PPI"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGR",52,0)=" ..    S ZTSAVE(""PRSINST"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGR",53,0)=" ..    S ZTSAVE(""MMR"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGR",54,0)=" ..    D ^%ZTLOAD"
^XTMP("XPDT",7815,"RTN","PRSNCGR",55,0)=" ..    I $D(ZTSK) S ZTREQ=""@"" W !,""Request ""_ZTSK_"" Queued."""
^XTMP("XPDT",7815,"RTN","PRSNCGR",56,0)=" ..    K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNCGR",57,0)=" .  E  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",58,0)=" ..    D MMREP^PRSNCGR"
^XTMP("XPDT",7815,"RTN","PRSNCGR",59,0)=" .  D ^%ZISC"
^XTMP("XPDT",7815,"RTN","PRSNCGR",60,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",61,0)=" I $$SUREQ() D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",62,0)=" .  N %ZIS,POP,IOP"
^XTMP("XPDT",7815,"RTN","PRSNCGR",63,0)=" .  S %ZIS=""MQ"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",64,0)=" .  D ^%ZIS"
^XTMP("XPDT",7815,"RTN","PRSNCGR",65,0)=" .  Q:POP"
^XTMP("XPDT",7815,"RTN","PRSNCGR",66,0)=" .  I $D(IO(""Q"")) D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",67,0)=" ..    K IO(""Q"")"
^XTMP("XPDT",7815,"RTN","PRSNCGR",68,0)=" ..    N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNCGR",69,0)=" ..    S ZTDESC=""PRSN POC/ETA MISMATCH REPORT"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",70,0)=" ..    S ZTRTN=""DRIVER^PRSNCGR"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",71,0)=" ..    S ZTSAVE(""PPI"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGR",72,0)=" ..    S ZTSAVE(""PRSINST"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGR",73,0)=" ..    S ZTSAVE(""MMR"")="""""
^XTMP("XPDT",7815,"RTN","PRSNCGR",74,0)=" ..    D ^%ZTLOAD"
^XTMP("XPDT",7815,"RTN","PRSNCGR",75,0)=" ..    I $D(ZTSK) S ZTREQ=""@"" W !,""Request ""_ZTSK_"" Queued."""
^XTMP("XPDT",7815,"RTN","PRSNCGR",76,0)=" ..    K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNCGR",77,0)=" .  E  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",78,0)=" ..    D DRIVER"
^XTMP("XPDT",7815,"RTN","PRSNCGR",79,0)=" .  D ^%ZISC"
^XTMP("XPDT",7815,"RTN","PRSNCGR",80,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR",81,0)="MMREP ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",82,0)=" N REC,CNT,FIELD,SEGCNT,PC,OUT,PG,CI,SN"
^XTMP("XPDT",7815,"RTN","PRSNCGR",83,0)=" S (PG,REC,OUT)=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",84,0)=" F  S REC=$O(PRSINST(REC)) Q:REC'>0!OUT  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",85,0)=" .    S CI=+PRSINST(REC)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",86,0)=" .    D GETS^DIQ(4,CI_"","",""99"",""E"",""FIELD("",,)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",87,0)=" .    S SN=FIELD(4,CI_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNCGR",88,0)=" .    S PRSIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",89,0)=" .    F  S PRSIEN=$O(^PRSN(451,""AA"",CI,PPI,PRSIEN)) Q:PRSIEN'>0!OUT  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",90,0)=" ..      D PPMM^PRSNRMM(PRSIEN,PPI,.PG,.OUT)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",91,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR",92,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",93,0)="DRIVER ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",94,0)=" N REC,CI,SN,CNT,PRSIEN,SEGCNT,PC"
^XTMP("XPDT",7815,"RTN","PRSNCGR",95,0)=" S REC=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",96,0)=" F  S REC=$O(PRSINST(REC)) Q:REC'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",97,0)=" .  S CI=+PRSINST(REC)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",98,0)=" .  D GETS^DIQ(4,CI_"","",""99"",""E"",""FIELD("",,)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",99,0)=" .  S SN=FIELD(4,CI_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNCGR",100,0)=" .  S CNT(CI)=""0^0"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",101,0)=" .  S PRSIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",102,0)=" .  F  S PRSIEN=$O(^PRSN(451,""AA"",CI,PPI,PRSIEN)) Q:PRSIEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",103,0)=" ..    S SEGCNT=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",104,0)=" ..    S $P(CNT(CI),U)=$P(CNT(CI),U)+1"
^XTMP("XPDT",7815,"RTN","PRSNCGR",105,0)=" ..    K PC D EXTRECS(.PC,.SEGCNT,PPI,PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",106,0)=" ..    D FILEPP^PRSNCGR1(.PC,PRSIEN,PPI,CI,SN)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",107,0)=" ..    S $P(CNT(CI),U,2)=$P(CNT(CI),U,2)+SEGCNT"
^XTMP("XPDT",7815,"RTN","PRSNCGR",108,0)=" ..    D UPDTPOC^PRSNCGR1(PPI,PRSIEN,""R"")"
^XTMP("XPDT",7815,"RTN","PRSNCGR",109,0)=" .; if any records were released then update the release history for"
^XTMP("XPDT",7815,"RTN","PRSNCGR",110,0)=" .; for this division"
^XTMP("XPDT",7815,"RTN","PRSNCGR",111,0)=" .  I $P(CNT(CI),U,2)>0 D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",112,0)=" ..    D UPDTPP^PRSNCGR1(PPI,CI,$P(CNT(CI),U),$P(CNT(CI),U,2))"
^XTMP("XPDT",7815,"RTN","PRSNCGR",113,0)=" D RESULTS(.CNT,PPI)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",114,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",115,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR",116,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",117,0)="GETPP(PPS) ;prompt for and return pay period"
^XTMP("XPDT",7815,"RTN","PRSNCGR",118,0)=" ; Use the following criteria:"
^XTMP("XPDT",7815,"RTN","PRSNCGR",119,0)=" ;   1) pp must exist in 451"
^XTMP("XPDT",7815,"RTN","PRSNCGR",120,0)=" ;   2) Default value is most recently ended pay period"
^XTMP("XPDT",7815,"RTN","PRSNCGR",121,0)=" ;   3) selection of a pay period that has not ended is not allowed"
^XTMP("XPDT",7815,"RTN","PRSNCGR",122,0)=" ;   4) Screen out pay periods with no approved data"
^XTMP("XPDT",7815,"RTN","PRSNCGR",123,0)=" N DIC,DUOUT,DTOUT,X,Y,PPI,DEFPP,PPTEMP"
^XTMP("XPDT",7815,"RTN","PRSNCGR",124,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",125,0)=" ; set default as most recent pay period with data but must be "
^XTMP("XPDT",7815,"RTN","PRSNCGR",126,0)=" ; earlier than current"
^XTMP("XPDT",7815,"RTN","PRSNCGR",127,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",128,0)=" S PPTEMP=$G(^PRST(458,""AD"",DT))"
^XTMP("XPDT",7815,"RTN","PRSNCGR",129,0)=" S DEFPP=$O(PPS(""P"",PPTEMP),-1)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",130,0)=" S DIC(""B"")=DEFPP"
^XTMP("XPDT",7815,"RTN","PRSNCGR",131,0)=" S DIC=""^PRSN(451,"",DIC(0)=""AEQMZ"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",132,0)=" S DIC(""A"")=""Select a Pay Period: """
^XTMP("XPDT",7815,"RTN","PRSNCGR",133,0)=" S DIC(""S"")=""I +Y'>DEFPP&($D(PPS(""""P"""",+Y)))"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",134,0)=" D ^DIC"
^XTMP("XPDT",7815,"RTN","PRSNCGR",135,0)=" I $D(DUOUT)!$D(DTOUT)!+$G(Y)'>0 Q 0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",136,0)=" Q +Y"
^XTMP("XPDT",7815,"RTN","PRSNCGR",137,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",138,0)="GETDIV(PRSINST) ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",139,0)=" N DIC,VAUTSTR,VAUTNI,VAUTVB,Y,CNT"
^XTMP("XPDT",7815,"RTN","PRSNCGR",140,0)=" S DIC=""^PRST(456,"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",141,0)=" S VAUTSTR=""PAID Parameter Institution"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",142,0)=" S VAUTNI=2,VAUTVB=""PRSINST"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",143,0)=" D FIRST^VAUTOMA"
^XTMP("XPDT",7815,"RTN","PRSNCGR",144,0)=" I $G(Y)<0 S PRSINST=Y Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR",145,0)=" S (CNT,Y)=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",146,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",147,0)=" ; all institutions selected, so loop through file to get them."
^XTMP("XPDT",7815,"RTN","PRSNCGR",148,0)=" I PRSINST D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",149,0)=" .  F  S Y=$O(^PRST(456,Y)) Q:Y'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",150,0)=" ..    S PRSINST(Y)=$G(^PRST(456,Y,0))"
^XTMP("XPDT",7815,"RTN","PRSNCGR",151,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",152,0)=" ; Since the one, many or all call (VAUTOMA) doesn't explicitly return"
^XTMP("XPDT",7815,"RTN","PRSNCGR",153,0)=" ; whether the user aborted the prompt, we need to check to see"
^XTMP("XPDT",7815,"RTN","PRSNCGR",154,0)=" ; if there is anything in the selection array at this point"
^XTMP("XPDT",7815,"RTN","PRSNCGR",155,0)=" ;  and return -1 if nothing was selected."
^XTMP("XPDT",7815,"RTN","PRSNCGR",156,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",157,0)=" S Y=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",158,0)=" F  S Y=$O(PRSINST(Y)) Q:Y'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",159,0)=" .  S CNT=CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNCGR",160,0)=" I CNT'>0 S PRSINST=-1"
^XTMP("XPDT",7815,"RTN","PRSNCGR",161,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR",162,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",163,0)="ASKMM() ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",164,0)=" W !!,"" Would you like to view the mismatch report"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",165,0)=" W !,"" for records to be released?"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",166,0)=" N DIR,DIRUT,X,Y S DIR(0)=""Y"",DIR(""B"")=""N"" D ^DIR"
^XTMP("XPDT",7815,"RTN","PRSNCGR",167,0)=" I $D(DIRUT) S Y=-1"
^XTMP("XPDT",7815,"RTN","PRSNCGR",168,0)=" Q Y"
^XTMP("XPDT",7815,"RTN","PRSNCGR",169,0)="SUREQ() ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",170,0)=" W !!,"" Are you sure you want to Release POC records?"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",171,0)=" N DIR,DIRUT,X,Y S DIR(0)=""Y"",DIR(""B"")=""N"" D ^DIR"
^XTMP("XPDT",7815,"RTN","PRSNCGR",172,0)=" I $D(DIRUT) S Y=-1"
^XTMP("XPDT",7815,"RTN","PRSNCGR",173,0)=" Q Y"
^XTMP("XPDT",7815,"RTN","PRSNCGR",174,0)=" ;"_$C(9)_""
^XTMP("XPDT",7815,"RTN","PRSNCGR",175,0)="EXTRECS(PC,SEGCNT,PPI,PRSIEN) ; get all POC activity for nurses pay period"
^XTMP("XPDT",7815,"RTN","PRSNCGR",176,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",177,0)=" ;  INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNCGR",178,0)=" ;          PRSIEN - (required) nurse 450 IEN"
^XTMP("XPDT",7815,"RTN","PRSNCGR",179,0)=" ;          PPI (required) pay period IEN"
^XTMP("XPDT",7815,"RTN","PRSNCGR",180,0)=" ;  OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNCGR",181,0)=" ;          PC - Array of POC activity records formatted for"
^XTMP("XPDT",7815,"RTN","PRSNCGR",182,0)=" ;             the extraction file."
^XTMP("XPDT",7815,"RTN","PRSNCGR",183,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",184,0)=" ; Note: any work from the 2nd Saturday night of the prior pay period is "
^XTMP("XPDT",7815,"RTN","PRSNCGR",185,0)=" ; returned in the zero node of PC, if that pp is either approved or"
^XTMP("XPDT",7815,"RTN","PRSNCGR",186,0)=" ; released."
^XTMP("XPDT",7815,"RTN","PRSNCGR",187,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",188,0)=" ; In general.  Work from a two day tour is included on the node"
^XTMP("XPDT",7815,"RTN","PRSNCGR",189,0)=" ; for that day.  I.e., two day tours are split at midnight."
^XTMP("XPDT",7815,"RTN","PRSNCGR",190,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNCGR",191,0)=" N PRSD,POCD,T1,T2,SEG,SI"
^XTMP("XPDT",7815,"RTN","PRSNCGR",192,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",193,0)=" S SI=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",194,0)=" K POCD"
^XTMP("XPDT",7815,"RTN","PRSNCGR",195,0)=" ; If prior pp approved or released get any spillover from 2nd Sat."
^XTMP("XPDT",7815,"RTN","PRSNCGR",196,0)=" I ""^A^R^""[(U_$P($G(^PRSN(451,PPI-1,""E"",PRSIEN,0)),U,2)_U) D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",197,0)=" .  D L1^PRSNRUT1(.POCD,PPI-1,PRSIEN,14)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",198,0)=" .  S PRSD=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",199,0)=" .  D SEGS"
^XTMP("XPDT",7815,"RTN","PRSNCGR",200,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",201,0)=" F PRSD=1:1:14 D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",202,0)=" .  K POCD"
^XTMP("XPDT",7815,"RTN","PRSNCGR",203,0)=" .  D L1^PRSNRUT1(.POCD,PPI,PRSIEN,PRSD)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",204,0)=" .  D SEGS"
^XTMP("XPDT",7815,"RTN","PRSNCGR",205,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",206,0)=" ;   Don't extract day 14 from prior pay period"
^XTMP("XPDT",7815,"RTN","PRSNCGR",207,0)=" K PC(0)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",208,0)=" ; we may end up with data in PC(15)--2 day tour on day 14 of current"
^XTMP("XPDT",7815,"RTN","PRSNCGR",209,0)=" ; pp.  That should only be extracted for corrections and is handled"
^XTMP("XPDT",7815,"RTN","PRSNCGR",210,0)=" ; by the release corrections logic"
^XTMP("XPDT",7815,"RTN","PRSNCGR",211,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR",212,0)="SEGS ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",213,0)=" S SEG=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",214,0)=" F  S SEG=$O(POCD(SEG)) Q:SEG'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",215,0)=" .;  T1 and T2 are start and stop times for each segment."
^XTMP("XPDT",7815,"RTN","PRSNCGR",216,0)=" .; 1st IF handles segments occuring entirely on 2nd day of a tour."
^XTMP("XPDT",7815,"RTN","PRSNCGR",217,0)=" .; 2nd if splits segments that cross midnight into segments on the day"
^XTMP("XPDT",7815,"RTN","PRSNCGR",218,0)=" .; they occur and the ELSE DO handles segments entirely on 1st day."
^XTMP("XPDT",7815,"RTN","PRSNCGR",219,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",220,0)=" .    S T1=$P(POCD(SEG),U,9)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",221,0)=" .    S T2=$P(POCD(SEG),U,10)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",222,0)=" .    I T1>2345 D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",223,0)=" ..      S SI=SI+1"
^XTMP("XPDT",7815,"RTN","PRSNCGR",224,0)=" ..      S PC(PRSD+1,SI)=POCD(SEG)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",225,0)=" ..      S $P(PC(PRSD+1,SI),U,9)=T1-2400"
^XTMP("XPDT",7815,"RTN","PRSNCGR",226,0)=" ..      S $P(PC(PRSD+1,SI),U,10)=T2-2400"
^XTMP("XPDT",7815,"RTN","PRSNCGR",227,0)=" .    E  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",228,0)=" ..      I T2>2400 D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",229,0)=" ...        S SI=SI+1"
^XTMP("XPDT",7815,"RTN","PRSNCGR",230,0)=" ...        S PC(PRSD,SI)=POCD(SEG)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",231,0)=" ...        S $P(PC(PRSD,SI),U,2)=""MID"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",232,0)=" ...        S $P(PC(PRSD,SI),U,10)=2400"
^XTMP("XPDT",7815,"RTN","PRSNCGR",233,0)=" ...        S SI=SI+1"
^XTMP("XPDT",7815,"RTN","PRSNCGR",234,0)=" ...        S PC(PRSD+1,SI)=POCD(SEG)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",235,0)=" ...        S $P(PC(PRSD+1,SI),U)=""MID"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",236,0)=" ...        S $P(PC(PRSD+1,SI),U,9)=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",237,0)=" ...        S $P(PC(PRSD+1,SI),U,10)=T2-2400"
^XTMP("XPDT",7815,"RTN","PRSNCGR",238,0)=" ..      E  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",239,0)=" ...        S SI=SI+1"
^XTMP("XPDT",7815,"RTN","PRSNCGR",240,0)=" ...        S PC(PRSD,SI)=POCD(SEG)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",241,0)=" S SEGCNT=SI"
^XTMP("XPDT",7815,"RTN","PRSNCGR",242,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR",243,0)="RESULTS(CNT,PPI) ; Print results of the Release"
^XTMP("XPDT",7815,"RTN","PRSNCGR",244,0)=" N DIVI,DIVE,I,F,X,STNUM,STNAME"
^XTMP("XPDT",7815,"RTN","PRSNCGR",245,0)=" W @IOF,!!,?14,""POC RECORDS RELEASED RESULTS FOR PAY PERIOD "",$P($G(^PRST(458,PPI,0)),U)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",246,0)=" W !,?14,""==========================================="""
^XTMP("XPDT",7815,"RTN","PRSNCGR",247,0)=" W !!,?30,""TOTAL"",?42,""TOTAL"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",248,0)=" W !,?4,""DIVISION"",?30,""NURSES"",?42,""RECORDS"""
^XTMP("XPDT",7815,"RTN","PRSNCGR",249,0)=" W !,?4,""========"",?30,""======"",?42,""======="""
^XTMP("XPDT",7815,"RTN","PRSNCGR",250,0)=" N I S I=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",251,0)=" F  S I=$O(CNT(I)) Q:I'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",252,0)=" .  D GETS^DIQ(4,I_"","","".01;99"",""EI"",""F("",,)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",253,0)=" .  S STNUM=F(4,I_"","",99,""E""),STNAME=F(4,I_"","",.01,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNCGR",254,0)=" .  W !,?4,STNAME,"" ("",STNUM,"")"",?30,$P(CNT(I),U),?44,$P(CNT(I),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",255,0)=" W !!! S X=$$ASK^PRSLIB00(1)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",256,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR",257,0)="PPRELCHK(PPS,PRSINST,PPI) ; BUILD ARRAY OF PAY PERIODS WITH APPROVED DATA"
^XTMP("XPDT",7815,"RTN","PRSNCGR",258,0)=" ; BY DIVISION"
^XTMP("XPDT",7815,"RTN","PRSNCGR",259,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",260,0)=" ;  INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNCGR",261,0)=" ;    PRSINST (required) array of institutions to check"
^XTMP("XPDT",7815,"RTN","PRSNCGR",262,0)=" ;    PPI (optional) if passed only that pay period will be checked"
^XTMP("XPDT",7815,"RTN","PRSNCGR",263,0)=" ;         otherwise all pps will be checked"
^XTMP("XPDT",7815,"RTN","PRSNCGR",264,0)=" ;  OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNCGR",265,0)=" ;    PPS (returned by reference) two part array. Portion w/subscript"
^XTMP("XPDT",7815,"RTN","PRSNCGR",266,0)=" ;         ""P"" contains pay periods w/approved recs. for any of the "
^XTMP("XPDT",7815,"RTN","PRSNCGR",267,0)=" ;         divisions in PRSINST.  Subscipt ""D"" is division specific "
^XTMP("XPDT",7815,"RTN","PRSNCGR",268,0)=" ;         w/total approved records for each pay period."
^XTMP("XPDT",7815,"RTN","PRSNCGR",269,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR",270,0)=" N REC,CNT,FIELD,STOP"
^XTMP("XPDT",7815,"RTN","PRSNCGR",271,0)=" I $G(PPI)>0 D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",272,0)=" .   S STOP=PPI"
^XTMP("XPDT",7815,"RTN","PRSNCGR",273,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",274,0)=" .   S STOP=99999999"
^XTMP("XPDT",7815,"RTN","PRSNCGR",275,0)=" S REC=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",276,0)=" F  S REC=$O(PRSINST(REC)) Q:REC'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",277,0)=" .  S CI=+PRSINST(REC)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",278,0)=" .  S PPI=+$G(PPI)"
^XTMP("XPDT",7815,"RTN","PRSNCGR",279,0)=" .  F  S PPI=$O(^PRSN(451,""AA"",CI,PPI)) Q:PPI'>0!(PPI>STOP)  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",280,0)=" ..    S PPS(""D"",CI,PPI)=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",281,0)=" ..    S PPS(""P"",PPI)="""""
^XTMP("XPDT",7815,"RTN","PRSNCGR",282,0)=" ..    S PRSIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR",283,0)=" ..    F  S PRSIEN=$O(^PRSN(451,""AA"",CI,PPI,PRSIEN)) Q:PRSIEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR",284,0)=" ...      S PPS(""D"",CI,PPI)=PPS(""D"",CI,PPI)+1"
^XTMP("XPDT",7815,"RTN","PRSNCGR",285,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR1")="0^8^B26095132^n/a"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",1,0)="PRSNCGR1 ;WOIFO-JAH - Release POC Records for VANOD Extraction;10/16/09"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNCGR1",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",6,0)="FILEPP(PC,PRSIEN,PPI,INST,STATN) ; file pay per activity records for Nurse to extraction AND update extraction version number in 451"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",7,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",8,0)=" N PRSD,I,PRSFDA,PCDATA,X,X1,OTR"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",9,0)=" S PRSD=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",10,0)=" F  S PRSD=$O(PC(PRSD)) Q:PRSD'>0!(PRSD>14)  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",11,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",12,0)=" .;  increment version number for this day's extraction"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",13,0)=" .   D EXTVERS(.VNUM,PPI,PRSIEN,PRSD)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",14,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",15,0)=" .  S I=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",16,0)=" .  F  S I=$O(PC(PRSD,I)) Q:I'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",17,0)=" ..   S PCDATA=PC(PRSD,I)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",18,0)=" ..   K PRSFDA,IEN"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",19,0)=" ..   S PRSFDA(451.7,""+1,"",.01)=$P($G(^PRSN(451.7,0)),U,3)+1"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",20,0)=" ..   S PRSFDA(451.7,""+1,"",1)=$G(INST)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",21,0)=" ..   S PRSFDA(451.7,""+1,"",2)=$G(STATN)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",22,0)=" ..   S PRSFDA(451.7,""+1,"",3)=VNUM"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",23,0)=" ..   S PRSFDA(451.7,""+1,"",4)=$P($G(^PRSPC(PRSIEN,0)),U,9)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",24,0)=" ..   S PRSFDA(451.7,""+1,"",5)=+PRSIEN"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",25,0)=" ..   S X=$P($G(^PRST(458,PPI,1)),U,PRSD)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",26,0)=" ..   S X1=$E(X,1,3)+1700_$E(X,4,7)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",27,0)=" ..   S PRSFDA(451.7,""+1,"",6)=X1"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",28,0)=" ..   S PRSFDA(451.7,""+1,"",7)=$P(PCDATA,U,9) ;           Start time"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",29,0)=" ..   S PRSFDA(451.7,""+1,"",8)=$P(PCDATA,U,10) ;          Stop time"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",30,0)=" ..   S PRSFDA(451.7,""+1,"",9)=$P(PCDATA,U,4) ;         POC type of time"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",31,0)=" ..   S PRSFDA(451.7,""+1,"",10)=$P(PCDATA,U,5) ;        Point of care"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",32,0)=" ..   S PRSFDA(451.7,""+1,"",11)=$P(PCDATA,U,7) ;        mand. ot?"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",33,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",34,0)=" ..   S OTR=$P(PCDATA,U,8)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",35,0)=" ..   I OTR>0 S OTR=$P($G(^PRSN(451.6,OTR,0)),U) ;   OT reason"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",36,0)=" ..   S PRSFDA(451.7,""+1,"",12)=OTR"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",37,0)=" ..;                                                 451.5 type of wrk"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",38,0)=" ..   S PRSFDA(451.7,""+1,"",13)=$P($G(^PRSN(451.5,+$P(PCDATA,U,6),0)),U)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",39,0)=" ..   S PRSFDA(451.7,""+1,"",14)=DT ;                    release date"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",40,0)=" ..   D UPDATE^DIE("""",""PRSFDA"",""IEN""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",41,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",42,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",43,0)="EXTVERS(VNUM,PPI,PRSIEN,PRSD) ; update extraction version in POC records file"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",44,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",45,0)=" ;  RETURN: VNUM-the version number of the extraction for the "
^XTMP("XPDT",7815,"RTN","PRSNCGR1",46,0)=" ;               day (PRSD = 1-14) of the pay period."
^XTMP("XPDT",7815,"RTN","PRSNCGR1",47,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",48,0)=" ; increment Extraction Version number.  If no data on node then"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",49,0)=" ; we are dealing with the initial extraction for 2nd day of a "
^XTMP("XPDT",7815,"RTN","PRSNCGR1",50,0)=" ; two day tour, so add a node and set version to 1. Subsequent"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",51,0)=" ; releases to day will then have the correct version number."
^XTMP("XPDT",7815,"RTN","PRSNCGR1",52,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",53,0)=" K FDA,IENS"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",54,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",55,0)=" I $D(^PRSN(451,PPI,""E"",PRSIEN,""D"",PRSD,0)) D"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",56,0)=" .  S IENS=PRSD_"",""_PRSIEN_"",""_PPI_"","""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",57,0)=" .  S VNUM=1+$P($G(^PRSN(451,PPI,""E"",PRSIEN,""D"",PRSD,0)),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",58,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",59,0)=" .  S IENS=""+1""_PRSIEN_"",""_PPI_"","""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",60,0)=" .  S IENS(1)=PRSD"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",61,0)=" .  S VNUM=1"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",62,0)=" .  S FDA(451.99,IENS,.01)=PRSD"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",63,0)=" S FDA(451.99,IENS,2)=VNUM"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",64,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",65,0)=" D UPDATE^DIE("""",""FDA"",""IENS""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",66,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",67,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",68,0)="UPDTPOC(PPI,PRSIEN,STATUS,RETURN) ; update pay period status for nurse POC records"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",69,0)=" ; INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",70,0)=" ;   PPI, PRSIEN: Standard"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",71,0)=" ;   STATUS: POC pay period status (E)ntered, (A)pproved, (R)eleased"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",72,0)=" ;   RETURN: (optional) flag set to true to indicate the pay period"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",73,0)=" ;                      is being returned"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",74,0)=" N IENS,PRSFDA,PRIMLOC"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",75,0)=" S IENS=PRSIEN_"",""_PPI_"","""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",76,0)=" S PRSFDA(451.09,IENS,1)=STATUS"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",77,0)=" I STATUS=""A"" D"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",78,0)=" .  S PRIMLOC=+$$PRIMLOC^PRSNUT03(+$G(^PRSPC(PRSIEN,200)))"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",79,0)=" .  S PRSFDA(451.09,IENS,4)=$P($$DIV^PRSNUT03(""N"",+PRIMLOC),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",80,0)=" .  S PRSFDA(451.09,IENS,2)=DUZ"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",81,0)=" .  N %,X,%I,%H D NOW^%DTC"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",82,0)=" .  S PRSFDA(451.09,IENS,3)=%"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",83,0)=" .  S PRSFDA(451.09,IENS,5)=PRIMLOC"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",84,0)=" .  S PRSFDA(451.09,IENS,6)=$P($G(^PRSPC(PRSIEN,0)),U,8)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",85,0)=" I STATUS=""E""&$G(RETURN) D "
^XTMP("XPDT",7815,"RTN","PRSNCGR1",86,0)=" .  S PRSFDA(451.09,IENS,4)=""@"""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",87,0)=" .  S PRSFDA(451.09,IENS,2)=""@"""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",88,0)=" .  S PRSFDA(451.09,IENS,3)=""@"""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",89,0)=" .  S PRSFDA(451.09,IENS,5)=""@"""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",90,0)=" .  S PRSFDA(451.09,IENS,6)=""@"""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",91,0)=" D UPDATE^DIE("""",""PRSFDA"",""IENS""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",92,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",93,0)="UPDTPP(PPI,CI,NRSCNT,RECNT) ; update division release history for pay period"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",94,0)=" N IENS,PRSFDA"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",95,0)=" S IENS=""+1,""_PPI_"","""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",96,0)=" S PRSFDA(451.06,IENS,.01)=CI"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",97,0)=" S PRSFDA(451.06,IENS,1)=DUZ"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",98,0)=" N %,X,%I,%H D NOW^%DTC"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",99,0)=" S PRSFDA(451.06,IENS,2)=%"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",100,0)=" S PRSFDA(451.06,IENS,3)=NRSCNT"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",101,0)=" S PRSFDA(451.06,IENS,4)=RECNT"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",102,0)=" D UPDATE^DIE("""",""PRSFDA"",""IENS""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",103,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",104,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",105,0)="CNTREP(PRSINST,PPI) ;  Report on the record status for each division"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",106,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",107,0)=" ;  INPUT: PRSINST- array of instituions"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",108,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",109,0)=" N REC,PRECNT,FIELD,PC,DIV,CI,PRSIEN,PRIM,SN"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",110,0)=" S REC=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",111,0)=" F  S REC=$O(PRSINST(REC)) Q:REC'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",112,0)=" .  S CI=+PRSINST(REC)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",113,0)=" .  D GETS^DIQ(4,CI_"","",""99"",""E"",""FIELD("",,)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",114,0)=" .  S SN=FIELD(4,CI_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",115,0)=" .  S PRECNT(CI)=""0^0^0"""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",116,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",117,0)=" .; count up entered records"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",118,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",119,0)=" .  S PRSIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",120,0)=" .  F  S PRSIEN=$O(^PRSN(451,""AE"",PRSIEN)) Q:PRSIEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",121,0)=" ..    S PRIM=$$PRIMLOC^PRSNUT03(+$G(^PRSPC(PRSIEN,200)))"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",122,0)=" ..    S DIV=$P($$ISACTIVE^PRSNUT01(DT,+PRIM),U,4)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",123,0)=" ..    I (DIV=CI),($D(^PRSN(451,""AE"",PRSIEN,PPI))) D"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",124,0)=" ...       S $P(PRECNT(CI),U)=$P(PRECNT(CI),U)+1"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",125,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",126,0)=" .; count up approved records"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",127,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",128,0)=" .  S PRSIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",129,0)=" .  F  S PRSIEN=$O(^PRSN(451,""AA"",CI,PPI,PRSIEN)) Q:PRSIEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",130,0)=" ..    S $P(PRECNT(CI),U,2)=$P(PRECNT(CI),U,2)+1"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",131,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",132,0)=" .; count up released records"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",133,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",134,0)=" .  S PRSIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",135,0)=" .  F  S PRSIEN=$O(^PRSN(451,""AR"",CI,PPI,PRSIEN)) Q:PRSIEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",136,0)=" ..    S $P(PRECNT(CI),U,3)=$P(PRECNT(CI),U,3)+1"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",137,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",138,0)=" ; Display counts for the division"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",139,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",140,0)=" W @IOF,!!!,?14,""Pay Period "",$P($G(^PRST(458,PPI,0)),U),"" Statistics"""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",141,0)=" N DIVI,DIVE,I,F,X"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",142,0)=" W !,?14,""==============================="""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",143,0)=" W !!,?26,""NURSES POINT OF CARE PAY PERIOD RECORD STATUS"""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",144,0)=" W !,?4,""DIVISION"",?41,""UNAPPROVED"",?54,""APPROVED"",?66,""RELEASED"""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",145,0)=" W !,?4,""========"",?41,""=========="",?54,""========"",?66,""========"""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",146,0)=" N I,STNUM,STNAME S I=0"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",147,0)=" F  S I=$O(PRECNT(I)) Q:I'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",148,0)=" .  D GETS^DIQ(4,I_"","","".01;99"",""EI"",""F("",,)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",149,0)=" .  S STNUM=F(4,I_"","",99,""E""),STNAME=F(4,I_"","",.01,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",150,0)=" .  W !,?4,STNAME,"" ("",STNUM,"")"""
^XTMP("XPDT",7815,"RTN","PRSNCGR1",151,0)=" .  W ?42,$J($P(PRECNT(I),U),8)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",152,0)=" .  W ?54,$J($P(PRECNT(I),U,2),8)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",153,0)=" .  W ?66,$J($P(PRECNT(I),U,3),8)"
^XTMP("XPDT",7815,"RTN","PRSNCGR1",154,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCR1")="0^10^B11732790^n/a"
^XTMP("XPDT",7815,"RTN","PRSNCR1",1,0)="PRSNCR1 ;WOIFO/DAM - Return Approved POC Record;10/28/09"
^XTMP("XPDT",7815,"RTN","PRSNCR1",2,0)=" ;;4.0;PAID;**126**;Sep 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNCR1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNCR1",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCR1",5,0)="RETPOC ; called from option Return Approved Nurse POC Daily Time Record"
^XTMP("XPDT",7815,"RTN","PRSNCR1",6,0)=" N GROUP,PRSIEN,VALUE,CANRET"
^XTMP("XPDT",7815,"RTN","PRSNCR1",7,0)=" D ACCESS^PRSNUT02(.GROUP,""E"",DT,0)"
^XTMP("XPDT",7815,"RTN","PRSNCR1",8,0)=" ; quit if any error during group selection"
^XTMP("XPDT",7815,"RTN","PRSNCR1",9,0)=" I $P($G(GROUP(0)),U)=""E"" W !!,?4,$P(GROUP(0),U,2) S X=$$ASK^PRSLIB00(1) Q"
^XTMP("XPDT",7815,"RTN","PRSNCR1",10,0)=" S VALUE=+GROUP($O(GROUP(0)))"
^XTMP("XPDT",7815,"RTN","PRSNCR1",11,0)=" Q:VALUE'>0"
^XTMP("XPDT",7815,"RTN","PRSNCR1",12,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",13,0)=" ; Select Nurse"
^XTMP("XPDT",7815,"RTN","PRSNCR1",14,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",15,0)=" S PRSIEN=+$$PICKNURS^PRSNUT03($P(GROUP(0),U,2),VALUE)"
^XTMP("XPDT",7815,"RTN","PRSNCR1",16,0)=" Q:+PRSIEN'>0"
^XTMP("XPDT",7815,"RTN","PRSNCR1",17,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",18,0)=" ; Allow user to select a date and reprompt if record is not valid"
^XTMP("XPDT",7815,"RTN","PRSNCR1",19,0)=" ; for return"
^XTMP("XPDT",7815,"RTN","PRSNCR1",20,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",21,0)=" N %DT,Y,X,OUT"
^XTMP("XPDT",7815,"RTN","PRSNCR1",22,0)=" S (CANRET,OUT)=0"
^XTMP("XPDT",7815,"RTN","PRSNCR1",23,0)=" S %DT=""A"""
^XTMP("XPDT",7815,"RTN","PRSNCR1",24,0)=" F  D  Q:CANRET!OUT"
^XTMP("XPDT",7815,"RTN","PRSNCR1",25,0)=" .  D ^%DT"
^XTMP("XPDT",7815,"RTN","PRSNCR1",26,0)=" .  I $G(X)[U!($G(X)="""")!(Y'>0) S OUT=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNCR1",27,0)=" .  S PRSDT=Y"
^XTMP("XPDT",7815,"RTN","PRSNCR1",28,0)=" .  S PRSDTDAT=$G(^PRST(458,""AD"",PRSDT))"
^XTMP("XPDT",7815,"RTN","PRSNCR1",29,0)=" .  S PPI=$P(PRSDTDAT,U),PRSD=$P(PRSDTDAT,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNCR1",30,0)=" .  I (PRSD'>0)!(PPI'>0) W "" ?? "",$C(7),""Timecard record does not exist for that date."" Q"
^XTMP("XPDT",7815,"RTN","PRSNCR1",31,0)=" .  S CANRET=$$CANRET(PRSIEN,PRSDT,PRSD,PPI)"
^XTMP("XPDT",7815,"RTN","PRSNCR1",32,0)=" .  I 'CANRET W "" ?? "",$C(7),$P(CANRET,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNCR1",33,0)=" Q:OUT!('CANRET)"
^XTMP("XPDT",7815,"RTN","PRSNCR1",34,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",35,0)=" ; Confirm that the user does want to return the record"
^XTMP("XPDT",7815,"RTN","PRSNCR1",36,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",37,0)=" N DIR,X,Y,DIRUT"
^XTMP("XPDT",7815,"RTN","PRSNCR1",38,0)=" S DIR(0)=""Y"""
^XTMP("XPDT",7815,"RTN","PRSNCR1",39,0)=" S DIR(""B"")=""YES"""
^XTMP("XPDT",7815,"RTN","PRSNCR1",40,0)=" S DIR(""A"")=""Are you sure you want to return this record"""
^XTMP("XPDT",7815,"RTN","PRSNCR1",41,0)=" S DIR(""?"")=""Accept the default YES or enter NO"""
^XTMP("XPDT",7815,"RTN","PRSNCR1",42,0)=" D ^DIR"
^XTMP("XPDT",7815,"RTN","PRSNCR1",43,0)=" Q:$D(DIRUT)!'$G(Y)"
^XTMP("XPDT",7815,"RTN","PRSNCR1",44,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",45,0)=" ; Lookup Record"
^XTMP("XPDT",7815,"RTN","PRSNCR1",46,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",47,0)=" ; Confirm return or display a status message that record can't be returned."
^XTMP("XPDT",7815,"RTN","PRSNCR1",48,0)=" ; Display Record on that date?"
^XTMP("XPDT",7815,"RTN","PRSNCR1",49,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",50,0)=" ;  if pp status is R then it must be a return of a daily correction"
^XTMP("XPDT",7815,"RTN","PRSNCR1",51,0)=" ;  otherwise we return the whole pay period."
^XTMP("XPDT",7815,"RTN","PRSNCR1",52,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",53,0)=" I $P(CANRET,U,2)=""R"" D"
^XTMP("XPDT",7815,"RTN","PRSNCR1",54,0)=" .  D UPDTPOCD^PRSNCGP(PPI,PRSIEN,PRSD,"""",""E"")"
^XTMP("XPDT",7815,"RTN","PRSNCR1",55,0)=" .  W !,""POC daily record successfully returned."""
^XTMP("XPDT",7815,"RTN","PRSNCR1",56,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNCR1",57,0)=" .  D UPDTPOC^PRSNCGR1(PPI,PRSIEN,""E"",1)"
^XTMP("XPDT",7815,"RTN","PRSNCR1",58,0)=" .  W !,""POC pay period successfully returned."""
^XTMP("XPDT",7815,"RTN","PRSNCR1",59,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",60,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCR1",61,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",62,0)="CANRET(PRSIEN,PRSDT,PRSD,PPI) ; Return true if the record on the specified date"
^XTMP("XPDT",7815,"RTN","PRSNCR1",63,0)=" ; is allowed to be deleted, otherwise return an error message."
^XTMP("XPDT",7815,"RTN","PRSNCR1",64,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",65,0)=" N CANRET,PRSDTDAT,PDAYSTAT,PPSTAT"
^XTMP("XPDT",7815,"RTN","PRSNCR1",66,0)=" S CANRET=0"
^XTMP("XPDT",7815,"RTN","PRSNCR1",67,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",68,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",69,0)=" ;  check does record exist"
^XTMP("XPDT",7815,"RTN","PRSNCR1",70,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",71,0)=" I '+$G(^PRSN(451,PPI,""E"",PRSIEN,""D"",PRSD,0)) D  Q CANRET"
^XTMP("XPDT",7815,"RTN","PRSNCR1",72,0)=" .  S CANRET=""0^^POC record does not exist for that date."""
^XTMP("XPDT",7815,"RTN","PRSNCR1",73,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",74,0)=" ;  if pay period status is only (A)pproved then this pay "
^XTMP("XPDT",7815,"RTN","PRSNCR1",75,0)=" ;  pay period record has never been released and can be"
^XTMP("XPDT",7815,"RTN","PRSNCR1",76,0)=" ;  returned"
^XTMP("XPDT",7815,"RTN","PRSNCR1",77,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",78,0)=" S PPSTAT=$P($G(^PRSN(451,PPI,""E"",PRSIEN,0)),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNCR1",79,0)=" Q:PPSTAT=""A"" 1"
^XTMP("XPDT",7815,"RTN","PRSNCR1",80,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",81,0)=" I PPSTAT=""E"" D  Q CANRET"
^XTMP("XPDT",7815,"RTN","PRSNCR1",82,0)=" .  S CANRET=""0""_U_PPSTAT_U_""POC record status is Entered.  It does not need to be returned.  It is currently available for editing."""
^XTMP("XPDT",7815,"RTN","PRSNCR1",83,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",84,0)=" ; If pay period status is released we need to check the status"
^XTMP("XPDT",7815,"RTN","PRSNCR1",85,0)=" ; of individual days to determine if Coordinator can return"
^XTMP("XPDT",7815,"RTN","PRSNCR1",86,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",87,0)=" S PDAYSTAT=$P($G(^PRSN(451,PPI,""E"",PRSIEN,""D"",PRSD,0)),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNCR1",88,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",89,0)=" I PDAYSTAT="""" D  Q CANRET"
^XTMP("XPDT",7815,"RTN","PRSNCR1",90,0)=" . S CANRET=""0""_U_PPSTAT_U_""Record does not need to be returned.  It is currently available for editing."""
^XTMP("XPDT",7815,"RTN","PRSNCR1",91,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",92,0)=" ; status A can be returned, otherwise it's Entered or Released"
^XTMP("XPDT",7815,"RTN","PRSNCR1",93,0)=" ; and can already be edited or deleted or approved."
^XTMP("XPDT",7815,"RTN","PRSNCR1",94,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",95,0)=" I PDAYSTAT=""A"" D"
^XTMP("XPDT",7815,"RTN","PRSNCR1",96,0)=" .  S CANRET=""1""_U_PPSTAT_U"
^XTMP("XPDT",7815,"RTN","PRSNCR1",97,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNCR1",98,0)=" .  S CANRET=""0""_U_PPSTAT_U_""POC record status is ""_$S(PDAYSTAT=""E"":""Entered"",1:""Released"")_"". It is currently available for editing."""
^XTMP("XPDT",7815,"RTN","PRSNCR1",99,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",100,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCR1",101,0)=" Q CANRET"
^XTMP("XPDT",7815,"RTN","PRSNCR1",102,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCTL")="0^11^B1882450^n/a"
^XTMP("XPDT",7815,"RTN","PRSNCTL",1,0)="PRSNCTL ;WOIFO/DWA - Edit T&L Unit POC Entry and Approval Personnel ;11/24/09"
^XTMP("XPDT",7815,"RTN","PRSNCTL",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNCTL",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNCTL",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCTL",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCTL",6,0)="EDIT ; Enter/Edit POC Entry and Approval Personnel for a T&L Unit"
^XTMP("XPDT",7815,"RTN","PRSNCTL",7,0)=" N TEMPLATE,STOP S STOP=0"
^XTMP("XPDT",7815,"RTN","PRSNCTL",8,0)=" S TEMPLATE=""[PRSN EDIT TL POC]"""
^XTMP("XPDT",7815,"RTN","PRSNCTL",9,0)=" F  D  Q:STOP>0"
^XTMP("XPDT",7815,"RTN","PRSNCTL",10,0)=" .  D MAIN(.STOP,TEMPLATE)"
^XTMP("XPDT",7815,"RTN","PRSNCTL",11,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCTL",12,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCTL",13,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCTL",14,0)="DISP ; Display T&L Unit"
^XTMP("XPDT",7815,"RTN","PRSNCTL",15,0)=" N TEMPLATE,STOP S STOP=0"
^XTMP("XPDT",7815,"RTN","PRSNCTL",16,0)=" S TEMPLATE=""[PRSA TL DISP]"""
^XTMP("XPDT",7815,"RTN","PRSNCTL",17,0)=" F  D  Q:STOP>0"
^XTMP("XPDT",7815,"RTN","PRSNCTL",18,0)=" .  D MAIN(.STOP,TEMPLATE)"
^XTMP("XPDT",7815,"RTN","PRSNCTL",19,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCTL",20,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCTL",21,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCTL",22,0)="MAIN(STOP,T) ;"
^XTMP("XPDT",7815,"RTN","PRSNCTL",23,0)=" N TLI,DA,DDSFILE,DR,DS"
^XTMP("XPDT",7815,"RTN","PRSNCTL",24,0)=" S STOP=0"
^XTMP("XPDT",7815,"RTN","PRSNCTL",25,0)=" S TLI=$$INIT()"
^XTMP("XPDT",7815,"RTN","PRSNCTL",26,0)=" I TLI'>0 S STOP=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNCTL",27,0)=" S DA=+TLI,DDSFILE=455.5,DR=T"
^XTMP("XPDT",7815,"RTN","PRSNCTL",28,0)=" D ^DDS K DS"
^XTMP("XPDT",7815,"RTN","PRSNCTL",29,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNCTL",30,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCTL",31,0)="INIT() ;"
^XTMP("XPDT",7815,"RTN","PRSNCTL",32,0)=" D HDR"
^XTMP("XPDT",7815,"RTN","PRSNCTL",33,0)=" N DIC,X,Y,DUOUT,DTOUT"
^XTMP("XPDT",7815,"RTN","PRSNCTL",34,0)=" S DIC=""^PRST(455.5,"",DIC(0)=""AEQLM"",DIC(""A"")=""Select T&L Unit: "" D ^DIC K DIC"
^XTMP("XPDT",7815,"RTN","PRSNCTL",35,0)=" I $D(DUOUT)!$D(DTOUT)!(Y'>0) Q 0"
^XTMP("XPDT",7815,"RTN","PRSNCTL",36,0)=" Q Y"
^XTMP("XPDT",7815,"RTN","PRSNCTL",37,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCTL",38,0)="HDR ; Header"
^XTMP("XPDT",7815,"RTN","PRSNCTL",39,0)=" W:$E(IOST,1,2)=""C-"" @IOF"
^XTMP("XPDT",7815,"RTN","PRSNCTL",40,0)=" W !,?26,""VA TIME & ATTENDANCE SYSTEM"",!"
^XTMP("XPDT",7815,"RTN","PRSNCTL",41,0)=" W ?24,""EDIT POC ENTRY & APPROVAL PERSONNEL"",!"
^XTMP("XPDT",7815,"RTN","PRSNCTL",42,0)=" W ?36,""T&L UNIT"",!!!"
^XTMP("XPDT",7815,"RTN","PRSNCTL",43,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNCTL",44,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNDPC1")="0^12^B15362668^n/a"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",1,0)="PRSNDPC1 ;WOIFO/DAM - Delete POC Records;10/28/09"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",2,0)=" ;;4.0;PAID;**126**;Sep 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",5,0)="DELPOC ; called from option Delete Nurse POC Daily Time Record"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",6,0)=" N GROUP,PRSIEN,VALUE,CANDEL"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",7,0)=" D ACCESS^PRSNUT02(.GROUP,""E"",DT,0)"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",8,0)=" ; quit if any error during group selection"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",9,0)=" I $P($G(GROUP(0)),U)=""E"" W !!,?4,$P(GROUP(0),U,2) S X=$$ASK^PRSLIB00(1) Q"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",10,0)=" S VALUE=+GROUP($O(GROUP(0)))"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",11,0)=" Q:VALUE'>0"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",12,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",13,0)=" ; Select Nurse"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",14,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",15,0)=" S PRSIEN=+$$PICKNURS^PRSNUT03($P(GROUP(0),U,2),VALUE)"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",16,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",17,0)=" ; Allow user to select a date and reprompt if record is not valid"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",18,0)=" ; for deletion"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",19,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",20,0)=" N %DT,Y,X,OUT"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",21,0)=" S (CANDEL,OUT)=0"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",22,0)=" S %DT=""A"""
^XTMP("XPDT",7815,"RTN","PRSNDPC1",23,0)=" F  D  Q:CANDEL!OUT"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",24,0)=" .  D ^%DT"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",25,0)=" .  I $G(X)[U!($G(X)="""")!(Y'>0) S OUT=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",26,0)=" .  S PRSDT=Y"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",27,0)=" .  S PRSDTDAT=$G(^PRST(458,""AD"",PRSDT))"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",28,0)=" .  S PPI=$P(PRSDTDAT,U),PRSD=$P(PRSDTDAT,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",29,0)=" .  I (PRSD'>0)!(PPI'>0) W "" ?? "",$C(7),""Timecard record does not exist for that date."" Q"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",30,0)=" .  S PRSNVER=$O(^PRSN(451,PPI,""E"",PRSIEN,""D"",PRSD,""V"",999),-1)"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",31,0)=" .  S CANDEL=$$CANDEL(PRSIEN,PRSDT,PRSD,PPI,PRSNVER)"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",32,0)=" .  I 'CANDEL W "" ?? "",$C(7),$P(CANDEL,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",33,0)=" Q:OUT!('CANDEL)"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",34,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",35,0)=" ; Lookup Record"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",36,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",37,0)=" ; Confirm deletion or status message that record can't be deleted"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",38,0)=" ; Display Record on that date?"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",39,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",40,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",41,0)=" I $$EDVDEL(PRSIEN,PRSD,PPI,PRSNVER) D"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",42,0)=" .   W !,""POC record successfully deleted."""
^XTMP("XPDT",7815,"RTN","PRSNDPC1",43,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",44,0)=" .   W !,""Could not delete POC record."""
^XTMP("XPDT",7815,"RTN","PRSNDPC1",45,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",46,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",47,0)="EDVDEL(PRSIEN,PRSD,PPI,PRSNVER) ;  DELETE RECORD FUNCTION"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",48,0)=" ; RETURNS 1 IF RECORD IS DELETED OTHERWISE 0"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",49,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",50,0)=" N PRSNA,X,RETURN"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",51,0)=" S RETURN=0"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",52,0)=" Q:'PRSNVER RETURN"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",53,0)=" I PRSNVER>1 D"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",54,0)=" .  S PRSNA=""451;;""_PPI_""~451.09;;""_PRSIEN_""~451.99;;""_PRSD_""~451.999;^PRSN(451,PPI,""""E"""",PRSIEN,""""D"""",PRSD,""""V"""",;""_PRSNVER"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",55,0)=" .;  if version is 2 set daily record status back to null (no correction)"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",56,0)=" .;  if greater than 2 set status back to released."
^XTMP("XPDT",7815,"RTN","PRSNDPC1",57,0)=" . I PRSNVER=2 D UPDTPOCD^PRSNCGP(PPI,PRSIEN,PRSD,"""","""")"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",58,0)=" . I PRSNVER>2 D UPDTPOCD^PRSNCGP(PPI,PRSIEN,PRSD,"""",""R"")"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",59,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",60,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",61,0)=" .  S PRSNA=""451;;""_PPI_""~451.09;;""_PRSIEN_""~451.99;^PRSN(451,PPI,""""E"""",PRSIEN,""""D"""",;""_PRSD"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",62,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",63,0)=" K X D DELETE^PRSU1B1(.X,PRSNA)"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",64,0)=" I X S RETURN=1"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",65,0)=" QUIT RETURN"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",66,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",67,0)="CANDEL(PRSIEN,PRSDT,PRSD,PPI,VERSION) ; Return true if the record on the specified date"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",68,0)=" ; is allowed to be deleted, otherwise return an error message."
^XTMP("XPDT",7815,"RTN","PRSNDPC1",69,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",70,0)=" N CANDEL,PRSDTDAT,PDAYSTAT,PPSTAT"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",71,0)=" S CANDEL=0"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",72,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",73,0)=" ;  check for a valid date"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",74,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",75,0)=" I (PRSD'>0)!(PPI'>0) S CANDEL=""0^Timecard record does not exist for that date."" Q CANDEL"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",76,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",77,0)=" ;  check does record exist"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",78,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",79,0)=" I '+$G(^PRSN(451,PPI,""E"",PRSIEN,""D"",PRSD,0)) D  Q CANDEL"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",80,0)=" .  S CANDEL=""0^POC record does not exist for that date."""
^XTMP("XPDT",7815,"RTN","PRSNDPC1",81,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",82,0)=" ;  if pay period status is only entered (E) then this record"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",83,0)=" ;  hasn't been anywhere and they can delete it."
^XTMP("XPDT",7815,"RTN","PRSNDPC1",84,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",85,0)=" S PPSTAT=$P($G(^PRSN(451,PPI,""E"",PRSIEN,0)),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",86,0)=" Q:PPSTAT=""E"" 1"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",87,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",88,0)=" I PPSTAT=""A"" D  Q CANDEL"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",89,0)=" .  S CANDEL=""0^POC record status is Approved and never Released. To delete record, VANOD site coordinator must first return record for editing."""
^XTMP("XPDT",7815,"RTN","PRSNDPC1",90,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",91,0)=" ; If the pay period is already release we need to check the status"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",92,0)=" ; of individual days to determine if DEP can delete, but we can never"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",93,0)=" ; delete version 1 of a release POC"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",94,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",95,0)=" I VERSION=1 D  Q CANDEL"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",96,0)=" .  S CANDEL=""0^The POC record status is Released.  Can't delete."""
^XTMP("XPDT",7815,"RTN","PRSNDPC1",97,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",98,0)=" S PDAYSTAT=$P($G(^PRSN(451,PPI,""E"",PRSIEN,""D"",PRSD,0)),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",99,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",100,0)=" I PDAYSTAT="""" D  Q CANDEL"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",101,0)=" . S CANDEL=""0^The POC record status is Released.  Can't delete."""
^XTMP("XPDT",7815,"RTN","PRSNDPC1",102,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",103,0)=" I PDAYSTAT=""E"" D"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",104,0)=" .  S CANDEL=1"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",105,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",106,0)=" .  S CANDEL=""0""_U_""POC record status is ""_$S(PDAYSTAT=""A"":""Approved"",1:""Released"")_"". Can't delete."""
^XTMP("XPDT",7815,"RTN","PRSNDPC1",107,0)=" Q CANDEL"
^XTMP("XPDT",7815,"RTN","PRSNDPC1",108,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEC")="0^13^B12996461^n/a"
^XTMP("XPDT",7815,"RTN","PRSNEC",1,0)="PRSNEC ;WOIFO/PLT - Correct Release Nurse POC Data ; 08/14/2009  7:56 AM"
^XTMP("XPDT",7815,"RTN","PRSNEC",2,0)=" ;;4.0;PAID;**126**Sep 21, 1995;;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNEC",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNEC",4,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEC",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEC",6,0)="ENT ;option entry"
^XTMP("XPDT",7815,"RTN","PRSNEC",7,0)=" N PRSNCR,PRSNG,PRSNDT,PPI,PRSNDAY,PRSNPP,DFN,PRSNSTS"
^XTMP("XPDT",7815,"RTN","PRSNEC",8,0)=" ;prsncr="""" if poc a/e, =1 if correct release, =eat i from eta post employee time"
^XTMP("XPDT",7815,"RTN","PRSNEC",9,0)=" S PRSNCR=1"
^XTMP("XPDT",7815,"RTN","PRSNEC",10,0)=" D ACCESS^PRSNUT02(.A,""E"",DT,"""") G:$G(A(0))=""""!($G(A(0))?1""E"".E) EXIT"
^XTMP("XPDT",7815,"RTN","PRSNEC",11,0)=" S PRSNG=A(0)_""^""_$O(A(0))_""^""_A($O(A(0))) K A"
^XTMP("XPDT",7815,"RTN","PRSNEC",12,0)="Q1 S %DT=""AEPX"",%DT(""A"")=""Enter Date to Correct Released POC Record: "",%DT(""B"")=""T-1"" D ^%DT G:Y<1 EXIT"
^XTMP("XPDT",7815,"RTN","PRSNEC",13,0)=" S PRSNDT=Y,Y=$G(^PRST(458,""AD"",Y)),PPI=$P(Y,""^"",1),PRSNDAY=$P(Y,""^"",2)"
^XTMP("XPDT",7815,"RTN","PRSNEC",14,0)=" I PPI="""" D EN^DDIOL(""Pay Period is Not Open Yet!"") G EXIT"
^XTMP("XPDT",7815,"RTN","PRSNEC",15,0)=" S PRSNPP=$P(^PRST(458,PPI,0),U)_U_$P(^(2),U,PRSNDAY)"
^XTMP("XPDT",7815,"RTN","PRSNEC",16,0)=" ;selecting a nurse"
^XTMP("XPDT",7815,"RTN","PRSNEC",17,0)="Q2 S Y=$$PICKNURS^PRSNUT03($P(PRSNG,U,2),$P(PRSNG,U,4)) G Q1:Y<1"
^XTMP("XPDT",7815,"RTN","PRSNEC",18,0)=" S DFN=+Y"
^XTMP("XPDT",7815,"RTN","PRSNEC",19,0)=" I $P($G(^PRSN(451,PPI,""E"",DFN,0)),U,2)'=""R"" W !!,""POC Record has a status - "",$S($P($G(^(0)),U,2)=""A"":""APPROVED"",$P($G(^(0)),U,2)=""E"":""ENTERED"",1:""Unknown or no POC data entered""),"" and it is not released yet!"" G Q2"
^XTMP("XPDT",7815,"RTN","PRSNEC",20,0)=" S PRSNSTS=$P($G(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,0)),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNEC",21,0)=" I PRSNSTS=""A"" W !!,""The Correct Released POC Record has a status - APPROVED, ask Coordinator to"",!,""return the record for editing."" G Q2"
^XTMP("XPDT",7815,"RTN","PRSNEC",22,0)=" D CREL G Q2"
^XTMP("XPDT",7815,"RTN","PRSNEC",23,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEC",24,0)="EXIT QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEC",25,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEC",26,0)="CREL ;start correct released poc time record"
^XTMP("XPDT",7815,"RTN","PRSNEC",27,0)=" N PRSNVER,PRSNVERO,PRSNX,PRSNEW,PRSNG,PRSNA"
^XTMP("XPDT",7815,"RTN","PRSNEC",28,0)=" S PRSNX="""",PRSNEW="""""
^XTMP("XPDT",7815,"RTN","PRSNEC",29,0)=" L +^PRSN(451,PPI,""E"",DFN):0 E  W !!,""File is in use, Try it later!"" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEC",30,0)=" S PRSNVER=$O(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"","":""),-1)"
^XTMP("XPDT",7815,"RTN","PRSNEC",31,0)=" G:PRSNSTS=""E"" EDIT S PRSNVERO=PRSNVER,PRSNVER=PRSNVER+1"
^XTMP("XPDT",7815,"RTN","PRSNEC",32,0)=" ;add a new version # in subfile #451.999 in subfile #451.99"
^XTMP("XPDT",7815,"RTN","PRSNEC",33,0)=" K X,Y"
^XTMP("XPDT",7815,"RTN","PRSNEC",34,0)=" I '$D(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",PRSNVER)) S X=PRSNVER D ADD^PRSU1B1(.X,.Y,""451;;""_PPI_""~451.09;;""_DFN_"";~451.99;;""_PRSNDAY_"";9~451.999;^PRSN(451,PPI,""""E"""",DFN,""""D"""",PRSNDAY,""""V"""","",PRSNVER) S:Y>0 $P(PRSNEW,U,4)=1"
^XTMP("XPDT",7815,"RTN","PRSNEC",35,0)=" I '$D(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",PRSNVER)) W !,""Nurse POC file in use, try it later!"" G DLOCK"
^XTMP("XPDT",7815,"RTN","PRSNEC",36,0)=" ;copy (correct) released version 'prsnvero' to a new version 'prsnver'"
^XTMP("XPDT",7815,"RTN","PRSNEC",37,0)=" S PRSNA=0"
^XTMP("XPDT",7815,"RTN","PRSNEC",38,0)=" F  S PRSNA=$O(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",PRSNVERO,""T"",PRSNA)) QUIT:'PRSNA  S A=^(PRSNA,0) D"
^XTMP("XPDT",7815,"RTN","PRSNEC",39,0)=" . N X,Y"
^XTMP("XPDT",7815,"RTN","PRSNEC",40,0)=" . S X=$P(A,U)"
^XTMP("XPDT",7815,"RTN","PRSNEC",41,0)=" . S X(""DR"")=""1////""_$P(A,U,2)_"";2////""_$P(A,U,3)_"";3////""_$P(A,U,4)_"";4////""_$P(A,U,5)_"";5////""_$P(A,U,6)_"";6////""_$P(A,U,7)_"";7////""_$P(A,U,8)_"";8////""_$P(A,U,9)_"";9////""_$P(A,U,10)"
^XTMP("XPDT",7815,"RTN","PRSNEC",42,0)=" . D ADD^PRSU1B1(.X,.Y,""451;;""_PPI_""~451.09;;""_DFN_""~451.99;;""_PRSNDAY_""~451.999;;""_PRSNVER_"";~451.9999;^PRSN(451,PPI,""""E"""",DFN,""""D"""",PRSNDAY,""""V"""",PRSNVER,""""T"""","",PRSNA)"
^XTMP("XPDT",7815,"RTN","PRSNEC",43,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEC",44,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEC",45,0)="EDIT ;start editing"
^XTMP("XPDT",7815,"RTN","PRSNEC",46,0)=" ;+prsng=0 in single nurse mode, =1 in alphabetical batch mode"
^XTMP("XPDT",7815,"RTN","PRSNEC",47,0)=" S $P(PRSNG,U)=0"
^XTMP("XPDT",7815,"RTN","PRSNEC",48,0)=" D SMAN^PRSNEE"
^XTMP("XPDT",7815,"RTN","PRSNEC",49,0)="DLOCK L -^PRSN(451,PPI,""E"",DFN)"
^XTMP("XPDT",7815,"RTN","PRSNEC",50,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEC",51,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEC",52,0)=" ;for example (347,14308,3,"""")"
^XTMP("XPDT",7815,"RTN","PRSNEC",53,0)="NURSE(PPI,DFN,PRSNDAY,PRSNDT) ;test one single nurse"
^XTMP("XPDT",7815,"RTN","PRSNEC",54,0)=" S PRSNCR=1,PRSNEW="""",PRSNG=0"
^XTMP("XPDT",7815,"RTN","PRSNEC",55,0)=" S PRSNPP=$P(^PRST(458,PPI,0),U)_U_$P(^(2),U,PRSNDAY)"
^XTMP("XPDT",7815,"RTN","PRSNEC",56,0)=" D CREL"
^XTMP("XPDT",7815,"RTN","PRSNEC",57,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEC",58,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE")="0^14^B49176241^n/a"
^XTMP("XPDT",7815,"RTN","PRSNEE",1,0)="PRSNEE ;WOIFO/PLT - Enter Nurse POC Data Entry ; 08/14/2009  7:56 AM"
^XTMP("XPDT",7815,"RTN","PRSNEE",2,0)=" ;;4.0;PAID;**126**Sep 21, 1995;;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNEE",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNEE",4,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE",6,0)="ENT ;option entry"
^XTMP("XPDT",7815,"RTN","PRSNEE",7,0)=" N A,X,Y"
^XTMP("XPDT",7815,"RTN","PRSNEE",8,0)=" N PRSNCR,PRSNG,PRSNDT,PPI,PRSNDAY,PRSNPP,PRSNEW,PRSNGLB,PRSNGA,PRSNGB,DFN,PRSNX"
^XTMP("XPDT",7815,"RTN","PRSNEE",9,0)=" ;prsncr="""" if poc a/e, =1 if correct release, =eta if post employee time"
^XTMP("XPDT",7815,"RTN","PRSNEE",10,0)=" S PRSNCR="""""
^XTMP("XPDT",7815,"RTN","PRSNEE",11,0)=" D ACCESS^PRSNUT02(.A,""E"",DT,"""") G:$G(A(0))=""""!($G(A(0))?1""E"".E) EXIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",12,0)=" S PRSNG=A(0)_""^""_$O(A(0))_""^""_A($O(A(0))) K A"
^XTMP("XPDT",7815,"RTN","PRSNEE",13,0)=" S %DT=""AEPX"",%DT(""A"")=""Enter POC Data for Date: "",%DT(""B"")=""T-1"" D ^%DT G:Y<1 EXIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",14,0)=" S PRSNDT=Y,Y=$G(^PRST(458,""AD"",Y)),PPI=$P(Y,""^"",1),PRSNDAY=$P(Y,""^"",2)"
^XTMP("XPDT",7815,"RTN","PRSNEE",15,0)=" I PPI="""" D EN^DDIOL(""Pay Period is Not Open Yet!"") G EXIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",16,0)=" ;entry from tag nurse for eta"
^XTMP("XPDT",7815,"RTN","PRSNEE",17,0)="PPADD S PRSNPP=$P(^PRST(458,PPI,0),U)_U_$P(^(2),U,PRSNDAY)"
^XTMP("XPDT",7815,"RTN","PRSNEE",18,0)=" ;add new ppi entry in file 451"
^XTMP("XPDT",7815,"RTN","PRSNEE",19,0)=" I '$D(^PRSN(451,PPI)) K X,Y S X=$P(PRSNPP,U) D ADD^PRSU1B1(.X,.Y,""451"",PPI) S:Y PRSNEW=1"
^XTMP("XPDT",7815,"RTN","PRSNEE",20,0)=" I '$D(^PRSN(451,PPI)) W !,""File - POC DAILY TIME RECORDS is in use, try it later!"" G EXIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",21,0)=" ;if from entry point nurse called from eta post employee time option"
^XTMP("XPDT",7815,"RTN","PRSNEE",22,0)=" I PRSNCR=""ETA"" D POST G EXIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",23,0)="Q1 S Y(1)=""Answer YES if you want all Nurses brought up for whom no data has been entered."" D YN^PRSU1A(.X,.Y,""Would you like to enter the POC RECORDs in alphabetical order"","""",""Yes"")"
^XTMP("XPDT",7815,"RTN","PRSNEE",24,0)=" ;+prsng=1 - for alpha order, =0 for one nurse"
^XTMP("XPDT",7815,"RTN","PRSNEE",25,0)=" S $P(PRSNG,U)=Y G ONE:Y=0,EXIT:Y[""^"""
^XTMP("XPDT",7815,"RTN","PRSNEE",26,0)=" ;for group of location or t&l"
^XTMP("XPDT",7815,"RTN","PRSNEE",27,0)=" S PRSNGLB=$S($P(PRSNG,U,2)=""N"":$NA(^NURSF(211.8,""D"",$P(PRSNG,U,7))),1:$NA(^PRSPC(""ATL""_$P(PRSNG,U,3))))"
^XTMP("XPDT",7815,"RTN","PRSNEE",28,0)=" S PRSNGA="""" F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""""  D  QUIT:$G(PRSNX)[""^^"""
^XTMP("XPDT",7815,"RTN","PRSNEE",29,0)=" . S PRSNGB=0 F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB  S DFN=$S($P(PRSNG,U,2)=""N"":+$G(^VA(200,PRSNGB,450)),1:PRSNGB) D POST QUIT:$G(PRSNX)[""^^"""
^XTMP("XPDT",7815,"RTN","PRSNEE",30,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",31,0)=" G EXIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",32,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE",33,0)="ONE ;selecting a nurse"
^XTMP("XPDT",7815,"RTN","PRSNEE",34,0)=" S Y=$$PICKNURS^PRSNUT03($P(PRSNG,U,2),$P(PRSNG,U,4)) G EXIT:Y<1"
^XTMP("XPDT",7815,"RTN","PRSNEE",35,0)=" S DFN=+Y D POST G ONE"
^XTMP("XPDT",7815,"RTN","PRSNEE",36,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE",37,0)="EXIT QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",38,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE",39,0)="POST ;start poc posting"
^XTMP("XPDT",7815,"RTN","PRSNEE",40,0)=" N PRSNX,PRSNQ,PRSNUR,PRSNLOC,PRSNUR,PRSNLOC,PRSNPC,PRSNVER,PRSNQ,PRSNTD,PRSNTM"
^XTMP("XPDT",7815,"RTN","PRSNEE",41,0)=" S PRSNX="""",PRSNQ="""",PRSNUR=$$ISNURSE^PRSNUT01(DFN) QUIT:'PRSNUR"
^XTMP("XPDT",7815,"RTN","PRSNEE",42,0)=" S $P(PRSNUR,U,5)=$$EXTERNAL^DILFD(451.1,3,,$P(PRSNUR,U,4),)"
^XTMP("XPDT",7815,"RTN","PRSNEE",43,0)=" S PRSNEW=+$G(PRSNEW),PRSNVER=1"
^XTMP("XPDT",7815,"RTN","PRSNEE",44,0)=" ;check pp status if not in alpha mode"
^XTMP("XPDT",7815,"RTN","PRSNEE",45,0)=" I $P($G(^PRSN(451,PPI,""E"",DFN,0)),U,2)]"""",$P(^(0),U,2)'=""E"" QUIT:PRSNG  S A=$P(^(0),U,2) D  QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",46,0)=" . W !!,""The POC Record has a status - "",$S(A=""A"":""Approved, ask Coordinator to return the record for editing."",1:""Released, use the Correct Released Nurse POC Data option for correcting."")"
^XTMP("XPDT",7815,"RTN","PRSNEE",47,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",48,0)=" S PRSNLOC=$$DFTLOC(PPI,DFN)"
^XTMP("XPDT",7815,"RTN","PRSNEE",49,0)=" ;quit if in alpha mode"
^XTMP("XPDT",7815,"RTN","PRSNEE",50,0)=" K PRSNPC I $D(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",PRSNVER)) QUIT:PRSNG  D SMAN QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",51,0)=" ;get default time segments array prsnpc of poc time segments from eta"
^XTMP("XPDT",7815,"RTN","PRSNEE",52,0)=" D ETAPOC^PRSNEE0"
^XTMP("XPDT",7815,"RTN","PRSNEE",53,0)=" ;quit if by group, no eta posted and tour is day off or intermittens"
^XTMP("XPDT",7815,"RTN","PRSNEE",54,0)=" I PRSNG,'PRSNPC,""1 3 4""[$P(PRSNPC,U,2) QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",55,0)=" W:PRSNG !!,""Nurse: "",PRSNGA,""  ("",$P(PRSNUR,U,5),"")"",?50,$P(PRSNLOC,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNEE",56,0)="Q2 G Q3:PRSNPC"
^XTMP("XPDT",7815,"RTN","PRSNEE",57,0)=" S Y(1)=""Enter YES if you want to enter POC data before posting ETA Exceptions."""
^XTMP("XPDT",7815,"RTN","PRSNEE",58,0)=" S Y(2)=""Enter NO or '^' to the next Nurse, or '^^' to quit the option."""
^XTMP("XPDT",7815,"RTN","PRSNEE",59,0)=" D YN^PRSU1A(.X,.Y,""ETA Timecard is not posted do you wish to continue"","""",""Yes"")"
^XTMP("XPDT",7815,"RTN","PRSNEE",60,0)=" I Y=0!(Y[U) S:X[""^^"" PRSNX=X QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",61,0)="Q3 G:$P(PRSNUR,U,4)=""DC"" Q5"
^XTMP("XPDT",7815,"RTN","PRSNEE",62,0)=" S Y(1)=""Enter Yes if nurse provided any Direct Care, No if not"""
^XTMP("XPDT",7815,"RTN","PRSNEE",63,0)=" S Y(2)=""Enter '^' to the next Nurse, or '^^' to quit the option."""
^XTMP("XPDT",7815,"RTN","PRSNEE",64,0)=" D YN^PRSU1A(.X,.Y,""Did this nurse provide any Direct Care"","""",""Yes"")"
^XTMP("XPDT",7815,"RTN","PRSNEE",65,0)=" S $P(PRSNQ,U,2)=Y G:Y Q5 I Y[U S:X[""^^"" PRSNX=X QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",66,0)="Q4 S Y(1)=""Enter Yes or No or '^' to the next Nurse, or '^^' to quit the option."""
^XTMP("XPDT",7815,"RTN","PRSNEE",67,0)=" D YN^PRSU1A(.X,.Y,""Did this nurse work at Default Location and entir tour"","""",""Yes"")"
^XTMP("XPDT",7815,"RTN","PRSNEE",68,0)=" S $P(PRSNQ,U,3)=Y I Y[U S:X[""^^"" PRSNX=X QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",69,0)=" G ADD"
^XTMP("XPDT",7815,"RTN","PRSNEE",70,0)="Q5 S Y(1)=""Enter YES or No or '^' to the next Nurse, or '^^' to quit the option."""
^XTMP("XPDT",7815,"RTN","PRSNEE",71,0)=" D YN^PRSU1A(.X,.Y,""Did the Nurse only provide Direct Care at Defualt Location for the Entire Tour"","""",""Yes"")"
^XTMP("XPDT",7815,"RTN","PRSNEE",72,0)=" S $P(PRSNQ,U,$S($P(PRSNQ,U,2)="""":1,1:3))=Y I Y[U S:X[""^^"" PRSNX=X QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",73,0)=" ;quit if eta posted, poc with eta default but no tour/exceptions"
^XTMP("XPDT",7815,"RTN","PRSNEE",74,0)="ADD I PRSNPC,PRSNQ!$P(PRSNQ,U,3),$O(PRSNPC(""""))="""" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",75,0)=" ;add nurse in subfile# 451.09 of file #451 with pp-status e"
^XTMP("XPDT",7815,"RTN","PRSNEE",76,0)=" I '$D(^PRSN(451,PPI,""E"",DFN)) K X,Y S X=DFN,X(""DR"")=""1////E"" D ADD^PRSU1B1(.X,.Y,""451;;""_PPI_"";9~451.09;^PRSN(451,PPI,""""E"""","",DFN) S:Y $P(PRSNEW,U,2)=1"
^XTMP("XPDT",7815,"RTN","PRSNEE",77,0)=" I '$D(^PRSN(451,PPI,""E"",DFN)) W !,""Nurse POC file in use, try it later!"" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",78,0)=" ;add day # in subfile #451.99 in subfile #451.09"
^XTMP("XPDT",7815,"RTN","PRSNEE",79,0)=" I '$D(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY)) K X,Y S X=PRSNDAY D ADD^PRSU1B1(.X,.Y,""451;;""_PPI_""~451.09;;""_DFN_"";9~451.99;^PRSN(451,PPI,""""E"""",DFN,""""D"""","",PRSNDAY) S:Y $P(PRSNEW,U,3)=1"
^XTMP("XPDT",7815,"RTN","PRSNEE",80,0)=" I '$D(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY)) W !,""Nurse POC file in use, try it later!"" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",81,0)=" ;add version # in subfile #451.999 in subfile #451.99"
^XTMP("XPDT",7815,"RTN","PRSNEE",82,0)=" I '$D(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",PRSNVER)) K X,Y S X=PRSNVER D ADD^PRSU1B1(.X,.Y,""451;;""_PPI_""~451.09;;""_DFN_"";~451.99;;""_PRSNDAY_"";9~451.999;^PRSN(451,PPI,""""E"""",DFN,""""D"""",PRSNDAY,""""V"""","",PRSNVER) S:Y $P(PRSNEW,U,4)=1"
^XTMP("XPDT",7815,"RTN","PRSNEE",83,0)=" I '$D(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",PRSNVER)) W !,""Nurse POC file in use, try it later!"" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",84,0)=" D SMAN"
^XTMP("XPDT",7815,"RTN","PRSNEE",85,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",86,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE",87,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE",88,0)="SMAN ;start screenman"
^XTMP("XPDT",7815,"RTN","PRSNEE",89,0)=" N PRSNID,DDSFILE,DR,DA,DDSPAGE,DDSPARM,DDSCHANG,DDSSAVE,DIMSG,DTOUT"
^XTMP("XPDT",7815,"RTN","PRSNEE",90,0)=" L +^PRSN(451,PPI,""E"",DFN):0 E  W !!,""File is in use, Try it later!"" D:$P(PRSNEW,U,4) EDVDEL QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",91,0)=" S:PRSNCR=1 PRSNLOC=$$DFTLOC(PPI,DFN)"
^XTMP("XPDT",7815,"RTN","PRSNEE",92,0)=" ;add poc data prsnpc array time segemnts in file #451.9999 of file #451"
^XTMP("XPDT",7815,"RTN","PRSNEE",93,0)=" I $O(PRSNPC(""""))]"""",PRSNLOC D ADDTS^PRSNEE0 I PRSNPC,PRSNQ!$P(PRSNQ,U,3) G SMANEXT"
^XTMP("XPDT",7815,"RTN","PRSNEE",94,0)=" ;prsnid = 1^ name ^2 staion # ^3 t&l ^4 ss# ^5 defaul location ^6 poc status"
^XTMP("XPDT",7815,"RTN","PRSNEE",95,0)=" S PRSNID=$P(^PRSPC(DFN,0),U),$P(PRSNID,U,2,4)=$P(^PRSPC(DFN,0),U,7,9),$P(PRSNID,U,5)=$P(PRSNLOC,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNEE",96,0)=" S $P(PRSNID,U,6)=$S('PRSNCR:$P(^PRSN(451,PPI,""E"",DFN,0),U,2),1:$P(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,0),U,2))"
^XTMP("XPDT",7815,"RTN","PRSNEE",97,0)=" S $P(PRSNID,U,6)=$S($P(PRSNID,U,6)=""E"":""Entered"",1:""New"")"
^XTMP("XPDT",7815,"RTN","PRSNEE",98,0)=" ;get displaying tour of duty of the day and the 1 or 2 day tour data"
^XTMP("XPDT",7815,"RTN","PRSNEE",99,0)=" S PRSNTD=$$TOUR(PPI,DFN,PRSNDAY),PRSNTM=$$PSTOUR^PRSNEE0(PPI,DFN,PRSNDAY)"
^XTMP("XPDT",7815,"RTN","PRSNEE",100,0)=" S DA=PRSNVER,DA(1)=PRSNDAY,DA(2)=DFN,DA(3)=PPI"
^XTMP("XPDT",7815,"RTN","PRSNEE",101,0)=" S DDSFILE(1)=451.999,DDSFILE(2)=451.99,DDSFILE(3)=451.09,DDSFILE=451"
^XTMP("XPDT",7815,"RTN","PRSNEE",102,0)=" S DR=""[PRSN DAILY TIME RECORDS A/E/D]"",DDSPARM=""CS"",PRSNX="""" D ^DDS"
^XTMP("XPDT",7815,"RTN","PRSNEE",103,0)=" ;time out or user quits in dds"
^XTMP("XPDT",7815,"RTN","PRSNEE",104,0)=" S:$D(DTOUT)>0 PRSNX=""^^"""
^XTMP("XPDT",7815,"RTN","PRSNEE",105,0)=" ;save and change post action after dds call"
^XTMP("XPDT",7815,"RTN","PRSNEE",106,0)="EDVDEL ;if no save and no change, delete new added entries before dds call"
^XTMP("XPDT",7815,"RTN","PRSNEE",107,0)=" ;delete e,d, v multiple field records"
^XTMP("XPDT",7815,"RTN","PRSNEE",108,0)=" I $P(PRSNEW,U,4),'$G(DDSSAVE),'$G(DDSCHANG) D"
^XTMP("XPDT",7815,"RTN","PRSNEE",109,0)=" . N PRSNA"
^XTMP("XPDT",7815,"RTN","PRSNEE",110,0)=" . S PRSNA=""451;;""_PPI_"";9~451.09;^PRSN(451,PPI,""""E"""",;""_DFN"
^XTMP("XPDT",7815,"RTN","PRSNEE",111,0)=" . I $P(PRSNEW,U,2) K X D DELETE^PRSU1B1(.X,PRSNA) QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",112,0)=" . S $P(PRSNA,""~"",3)=""451.99;^PRSN(451,PPI,""""E"""",DFN,""""D"""",;""_PRSNDAY"
^XTMP("XPDT",7815,"RTN","PRSNEE",113,0)=" . I $P(PRSNEW,U,3) K X D DELETE^PRSU1B1(.X,PRSNA) QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",114,0)=" . S $P(PRSNA,""~"",4)=""451.999;^PRSN(451,PPI,""""E"""",DFN,""""D"""",PRSNDAY,""""V"""",;""_PRSNVER"
^XTMP("XPDT",7815,"RTN","PRSNEE",115,0)=" . I $P(PRSNEW,U,4) K X D DELETE^PRSU1B1(.X,PRSNA)"
^XTMP("XPDT",7815,"RTN","PRSNEE",116,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",117,0)=" ;changed"
^XTMP("XPDT",7815,"RTN","PRSNEE",118,0)=" I $G(DDSCHANG)=1 D"
^XTMP("XPDT",7815,"RTN","PRSNEE",119,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",120,0)=" ;saved"
^XTMP("XPDT",7815,"RTN","PRSNEE",121,0)=" I $G(DDSSAVE)=1 D"
^XTMP("XPDT",7815,"RTN","PRSNEE",122,0)=" . ;add correction released status 'e' in day # multiple"
^XTMP("XPDT",7815,"RTN","PRSNEE",123,0)=" . I PRSNCR,$P(PRSNEW,U,4) D EDIT^PRSU1B(.X,""451;;""_PPI_""~451.09;;""_DFN_"";9~451.99;^PRSN(451,PPI,""""E"""",DFN,""""D"""",;""_PRSNDAY,""1////E"","""")"
^XTMP("XPDT",7815,"RTN","PRSNEE",124,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",125,0)="SMANEXT L -^PRSN(451,PPI,""E"",DFN)"
^XTMP("XPDT",7815,"RTN","PRSNEE",126,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE",127,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE",128,0)="TOUR(PPI,DFN,DAY) ;ef - tour of duty of the nurse"
^XTMP("XPDT",7815,"RTN","PRSNEE",129,0)=" N Y1,Y2,Y3,Y31,Y4,TC,L1,A1,L3,PRSNTD"
^XTMP("XPDT",7815,"RTN","PRSNEE",130,0)=" S PRSNTD="""" D F1^PRSADP1"
^XTMP("XPDT",7815,"RTN","PRSNEE",131,0)=" QUIT Y31"
^XTMP("XPDT",7815,"RTN","PRSNEE",132,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE",133,0)=" ;return ^1 = """", ^2=ien of file #44, ^3=hospital location name"
^XTMP("XPDT",7815,"RTN","PRSNEE",134,0)="DFTLOC(PPI,DFN) ;ef - nurse default location of the ppi"
^XTMP("XPDT",7815,"RTN","PRSNEE",135,0)=" N A"
^XTMP("XPDT",7815,"RTN","PRSNEE",136,0)=" S A=$P($G(^PRSN(451,PPI,""E"",DFN,0)),U,6)"
^XTMP("XPDT",7815,"RTN","PRSNEE",137,0)=" QUIT:A +A_""^^""_$S(A:$P($G(^SC(+$G(^NURSF(211.4,+A,0)),0)),U),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNEE",138,0)=" QUIT $$PRIMLOC^PRSNUT03(+$G(^PRSPC(DFN,200)))"
^XTMP("XPDT",7815,"RTN","PRSNEE",139,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE",140,0)=" ;ppi=ien of file #458, dfn=ien of file #450, prsnday=day #, prsndt=fileman date of day #"
^XTMP("XPDT",7815,"RTN","PRSNEE",141,0)="NURSE(PPI,DFN,PRSNDAY,PRSNDT) ;entry point from eta post employee time option"
^XTMP("XPDT",7815,"RTN","PRSNEE",142,0)=" N PRSNCR,PRSNG,PRSNPP,PRSNEW,PRNGLB,PRSNGA,PRSNGB"
^XTMP("XPDT",7815,"RTN","PRSNEE",143,0)=" S PRSNCR=""ETA"",PRSNG=0 G PPADD"
^XTMP("XPDT",7815,"RTN","PRSNEE",144,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE",145,0)=" ;the following line is for testing by d nurse+3*******************"
^XTMP("XPDT",7815,"RTN","PRSNEE",146,0)=" S PRSNCR="""",PRSNEW="""",PRSNG=0,PPI=347,DFN=14308,PRSNDAY=3,PRSNVER=2"
^XTMP("XPDT",7815,"RTN","PRSNEE",147,0)=" S PRSNLOC=$$DFTLOC(PPI,DFN),PRSNPP=$P(^PRST(458,PPI,0),U)_U_$P(^(2),U,PRSNDAY) G SMAN"
^XTMP("XPDT",7815,"RTN","PRSNEE",148,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE0")="0^15^B14417132^n/a"
^XTMP("XPDT",7815,"RTN","PRSNEE0",1,0)="PRSNEE0 ;WOIFO/PLT - Utility of Nurse POC Data A/E/D ; 08/14/2009  7:56 AM"
^XTMP("XPDT",7815,"RTN","PRSNEE0",2,0)=" ;;4.0;PAID;**126**Sep 21, 1995;;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNEE0",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNEE0",4,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE0",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE0",6,0)=" ;return value=^1 is 1 if primary or secondary is a 2-day tour ^2=meal time ^3=y if 2-day tour ^4=meal time of secondary ^5=y if 2-day tour of secondary"
^XTMP("XPDT",7815,"RTN","PRSNEE0",7,0)="PSTOUR(PPI,DFN,PRSNDAY) ;ef - primary and secondary tour info"
^XTMP("XPDT",7815,"RTN","PRSNEE0",8,0)=" N A,B"
^XTMP("XPDT",7815,"RTN","PRSNEE0",9,0)=" S A=$G(^PRST(458,PPI,""E"",DFN,""D"",PRSNDAY,0))"
^XTMP("XPDT",7815,"RTN","PRSNEE0",10,0)=" I A="""" QUIT """""
^XTMP("XPDT",7815,"RTN","PRSNEE0",11,0)=" S B=$P($G(^PRST(457.1,+$P(A,U,2),0)),U,3)_U_$P($G(^(0)),U,5)"
^XTMP("XPDT",7815,"RTN","PRSNEE0",12,0)=" S:$P(A,U,13)]"""" B=B_U_$P($G(^PRST(457.1,+$P(A,U,13),0)),U,3)_U_$P($G(^(0)),U,5)"
^XTMP("XPDT",7815,"RTN","PRSNEE0",13,0)=" QUIT $P(B,U,2)=""Y""!($P(B,U,4)=""Y"")_U_B"
^XTMP("XPDT",7815,"RTN","PRSNEE0",14,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE0",15,0)=" ;get prsnt array of tour of duty and exceptions from eta"
^XTMP("XPDT",7815,"RTN","PRSNEE0",16,0)=" ;build prsnpc array from the prsnt array"
^XTMP("XPDT",7815,"RTN","PRSNEE0",17,0)=" ;prsnpc(start militaty time)=^1-start time (military), ^2- stop time (military)"
^XTMP("XPDT",7815,"RTN","PRSNEE0",18,0)=" ;              ^3-eta type of time, ^4-meal time"
^XTMP("XPDT",7815,"RTN","PRSNEE0",19,0)="ETAPOC ;convert eta tour of duty and exceptions time segments to array prsnpc"
^XTMP("XPDT",7815,"RTN","PRSNEE0",20,0)=" N A,B,C"
^XTMP("XPDT",7815,"RTN","PRSNEE0",21,0)=" K PRSNT,PRSNPC D BLDTC^PRSNRMM(.PRSNT,DFN,PPI,PRSNDAY,1)"
^XTMP("XPDT",7815,"RTN","PRSNEE0",22,0)=" S PRSNPC=$P(PRSNT,U)'=0_""^""_$P(PRSNT,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNEE0",23,0)=" S A=0 F  S A=$O(PRSNT(A)) QUIT:'A  S B=PRSNT(A) I $P(B,U,4) S A=$P(B,U,4),C=$G(PRSNT(A)),C=C+$S(C#100<45:15,1:55),PRSNPC(+B)=+B_U_C_U_$P(B,U,5)_U_$P(B,U,7)"
^XTMP("XPDT",7815,"RTN","PRSNEE0",24,0)=" K PRSNT"
^XTMP("XPDT",7815,"RTN","PRSNEE0",25,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE0",26,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE0",27,0)="ADDTS ;add poc time segments in file #451.9999 of file# 451"
^XTMP("XPDT",7815,"RTN","PRSNEE0",28,0)=" N PRSNA,PRSNB,PRSNC"
^XTMP("XPDT",7815,"RTN","PRSNEE0",29,0)=" S PRSNA=0 F  S PRSNA=$O(PRSNPC(PRSNA)) QUIT:'PRSNA  D"
^XTMP("XPDT",7815,"RTN","PRSNEE0",30,0)=" . N X,Y,A,B,C"
^XTMP("XPDT",7815,"RTN","PRSNEE0",31,0)=" . ;set x and x(""r"")"
^XTMP("XPDT",7815,"RTN","PRSNEE0",32,0)=" . S A=PRSNPC(PRSNA),X=$E(A>2400*-2400+A+10000,2,5) D ^PRSATIM"
^XTMP("XPDT",7815,"RTN","PRSNEE0",33,0)=" . S B=$P(A,U,2),C=$P(A,U,4),B=$E(B>2400*-2400+B+10000,2,5)"
^XTMP("XPDT",7815,"RTN","PRSNEE0",34,0)=" . S PRSNB=$S("",OT,CT,RG,""[C&(C]""""):""V"",1:""""),PRSNC=$S(PRSNQ!$P(PRSNQ,U,3):$O(^PRSN(451.5,""B"",""DC"",0)),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNEE0",35,0)=" . S X(""DR"")=""1///""_B_"";2////""_C_"";3////""_$P(A,U,3)_"";4////""_$P(PRSNLOC,U)_"";5////""_PRSNC_"";6////""_PRSNB_"";8////""_$P(A,U)_"";9////""_$P(A,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNEE0",36,0)=" . D ADD^PRSU1B1(.X,.Y,""451;;""_PPI_""~451.09;;""_DFN_""~451.99;;""_PRSNDAY_""~451.999;;""_PRSNVER_"";~451.9999;^PRSN(451,PPI,""""E"""",DFN,""""D"""",PRSNDAY,""""V"""",PRSNVER,""""T"""","")"
^XTMP("XPDT",7815,"RTN","PRSNEE0",37,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE0",38,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE0",39,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE0",40,0)=" ;called from screenman form page 1 or page 1.5"
^XTMP("XPDT",7815,"RTN","PRSNEE0",41,0)=" ;a=start time, b=stop time, c=1 if start time starts day 1, =2 if day 2"
^XTMP("XPDT",7815,"RTN","PRSNEE0",42,0)="MILSS(A,B,C) ;ef:^1-military start time, ^2-military stop time, ^3 invalid message"
^XTMP("XPDT",7815,"RTN","PRSNEE0",43,0)=" N X,Y,D,E"
^XTMP("XPDT",7815,"RTN","PRSNEE0",44,0)=" S Y=0,X=A D MIL^PRSATIM S D=C-1*2400+Y,Y=1,X=B D MIL^PRSATIM S Y=C-1*2400+Y,E=Y S:Y'>D E=2400+Y"
^XTMP("XPDT",7815,"RTN","PRSNEE0",45,0)=" QUIT D_""^""_E_""^""_$S(E>2400&(C=1):""Stop Time is in the Second Day of the tour. Its Type of Time must be OT/CT/RG."",E>4800&(C=2):""Stop Time is in the Third Day of the tour."",1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNEE0",46,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEE0",47,0)=" ;data validation check before save"
^XTMP("XPDT",7815,"RTN","PRSNEE0",48,0)="DATAVAL ;called from form for data validation"
^XTMP("XPDT",7815,"RTN","PRSNEE0",49,0)=" N PRSNA,PRSNB,PRSNC,PRSNERR"
^XTMP("XPDT",7815,"RTN","PRSNEE0",50,0)=" S PRSNERR=0"
^XTMP("XPDT",7815,"RTN","PRSNEE0",51,0)=" S DA=0 F  S DA=$O(^PRSN(451,PPI,""E"",DFN,""D"",PRSNDAY,""V"",PRSNVER,""T"",DA)) QUIT:'DA  S PRSNA=^(DA,0),PRSNB=$$GET^DDSVAL(DIE,.DA,8),PRSNC=$$GET^DDSVAL(DIE,.DA,9) D"
^XTMP("XPDT",7815,"RTN","PRSNEE0",52,0)=" . I PRSNB=""""!(PRSNC="""") S PRSNERR=PRSNERR+1,PRSNERR(PRSNERR)=""Subrecord: ""_$P(PRSNA,U)_"" has wrong Stop Time"" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE0",53,0)=" . I $D(PRSNB(PRSNB)) S PRSNERR=PRSNERR+1,PRSNERR(PRSNERR)=""Subrecord: ""_$P(PRSNA,U)_"" has duplicate Start Time"" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE0",54,0)=" . S PRSNB(PRSNB)=PRSNC_""^""_$P(PRSNA,U)"
^XTMP("XPDT",7815,"RTN","PRSNEE0",55,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE0",56,0)=" S PRSNB="""" F  S PRSNB=$O(PRSNB(PRSNB)) QUIT:'PRSNB  S PRSNC=+PRSNB(PRSNB) D"
^XTMP("XPDT",7815,"RTN","PRSNEE0",57,0)=" . I $O(PRSNB(PRSNB))'=$O(PRSNB(PRSNC-1)) S PRSNERR=PRSNERR+1,PRSNERR(PRSNERR)=""Subrecord: ""_$P(PRSNA,U)_"" has Stop Time greater than Start Time of the next time segment"""
^XTMP("XPDT",7815,"RTN","PRSNEE0",58,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEE0",59,0)=" I PRSNERR D HLP^DDSUTL(.PRSNERR) S DDSBR=""1^2^1"""
^XTMP("XPDT",7815,"RTN","PRSNEE0",60,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNEETP")="0^16^B12521407^n/a"
^XTMP("XPDT",7815,"RTN","PRSNEETP",1,0)="PRSNEETP ;;WOIFO/JAH - Timekeeper for Nurse Activity for VANOD;7/24/2009"
^XTMP("XPDT",7815,"RTN","PRSNEETP",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNEETP",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNEETP",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNEETP",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",6,0)="NURSEPOC(TLI,PPI,PRSIEN,PRSDT) ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",7,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",8,0)=" ;  Determine if current user (timekeeper) has set toggle to enter POC"
^XTMP("XPDT",7815,"RTN","PRSNEETP",9,0)=" ;  data as they post employee time"
^XTMP("XPDT",7815,"RTN","PRSNEETP",10,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",11,0)=" Q:'$$EDTTOGLD()"
^XTMP("XPDT",7815,"RTN","PRSNEETP",12,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",13,0)=" ; Determine if employee passed in PRSIEN is a nurse "
^XTMP("XPDT",7815,"RTN","PRSNEETP",14,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",15,0)=" Q:'$$ISNURSE^PRSNUT01(PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNEETP",16,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",17,0)=" ; Determine if user has access as a data entry personnel"
^XTMP("XPDT",7815,"RTN","PRSNEETP",18,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",19,0)=" Q:'$D(^PRST(455.5,""AE"",DUZ,TLI))"
^XTMP("XPDT",7815,"RTN","PRSNEETP",20,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",21,0)=" ; Get Day number of PRSDT-"
^XTMP("XPDT",7815,"RTN","PRSNEETP",22,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",23,0)=" N DAT,PRSD"
^XTMP("XPDT",7815,"RTN","PRSNEETP",24,0)=" S DAT=$G(^PRST(458,""AD"",PRSDT)),PRSD=$P(DAT,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNEETP",25,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",26,0)=" ;Call the POC data entry code"
^XTMP("XPDT",7815,"RTN","PRSNEETP",27,0)=" D NURSE^PRSNEE(PPI,PRSIEN,PRSD,"""")"
^XTMP("XPDT",7815,"RTN","PRSNEETP",28,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNEETP",29,0)="EDTTOGLD() ; Check to see if edit POC from Timecard is toggled on."
^XTMP("XPDT",7815,"RTN","PRSNEETP",30,0)=" ; look up preference for TKPOCEDIT user preference"
^XTMP("XPDT",7815,"RTN","PRSNEETP",31,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",32,0)=" N TOGGLE,PRSIEN,IENS,SWITCH"
^XTMP("XPDT",7815,"RTN","PRSNEETP",33,0)=" S TOGGLE=0"
^XTMP("XPDT",7815,"RTN","PRSNEETP",34,0)=" S PRSIEN=$G(^VA(200,DUZ,450))"
^XTMP("XPDT",7815,"RTN","PRSNEETP",35,0)=" Q:PRSIEN'>0 TOGGLE"
^XTMP("XPDT",7815,"RTN","PRSNEETP",36,0)=" S IENS="",""_PRSIEN_"","""
^XTMP("XPDT",7815,"RTN","PRSNEETP",37,0)=" D FIND^DIC(450.01,IENS,""1"",,""TKPOCEDIT"",,,,,""SWITCH"",)"
^XTMP("XPDT",7815,"RTN","PRSNEETP",38,0)=" I $G(SWITCH(""DILIST"",""ID"",1,1))=""TRUE"" S TOGGLE=1"
^XTMP("XPDT",7815,"RTN","PRSNEETP",39,0)=" Q TOGGLE"
^XTMP("XPDT",7815,"RTN","PRSNEETP",40,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",41,0)="TOGGLE ; Turn On/Off POC Data Entry from Timecard Posting"
^XTMP("XPDT",7815,"RTN","PRSNEETP",42,0)=" ; called from option PRSN TOGGLE TK POC POST"
^XTMP("XPDT",7815,"RTN","PRSNEETP",43,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",44,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",45,0)=" N TOGON,PRSIEN,PREFIEN"
^XTMP("XPDT",7815,"RTN","PRSNEETP",46,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",47,0)=" ; get current setting"
^XTMP("XPDT",7815,"RTN","PRSNEETP",48,0)=" S TOGON=$$EDTTOGLD()"
^XTMP("XPDT",7815,"RTN","PRSNEETP",49,0)=" W @IOF,!!!"
^XTMP("XPDT",7815,"RTN","PRSNEETP",50,0)=" I TOGON D"
^XTMP("XPDT",7815,"RTN","PRSNEETP",51,0)=" .  W !?5,""You ARE currently set up to edit"""
^XTMP("XPDT",7815,"RTN","PRSNEETP",52,0)=" .  W !?5,""Nurse Point of Care records as"""
^XTMP("XPDT",7815,"RTN","PRSNEETP",53,0)=" .  W !?5,""you post timecards.  Do you wish"""
^XTMP("XPDT",7815,"RTN","PRSNEETP",54,0)=" .  W !?5,""to remove this setting?"",!"
^XTMP("XPDT",7815,"RTN","PRSNEETP",55,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNEETP",56,0)=" .  W !?5,""You are NOT set up to edit POC"""
^XTMP("XPDT",7815,"RTN","PRSNEETP",57,0)=" .  W !?5,""records as you post timecards."""
^XTMP("XPDT",7815,"RTN","PRSNEETP",58,0)=" .  W !?5,""Do you wish to add this"""
^XTMP("XPDT",7815,"RTN","PRSNEETP",59,0)=" .  W !?5,""capability?"",!"
^XTMP("XPDT",7815,"RTN","PRSNEETP",60,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",61,0)=" ; ask user if they want to change current preference"
^XTMP("XPDT",7815,"RTN","PRSNEETP",62,0)=" N DIR,DIRUT,X,Y"
^XTMP("XPDT",7815,"RTN","PRSNEETP",63,0)=" S DIR(0)=""Y"",DIR(""B"")=""Y"" D ^DIR"
^XTMP("XPDT",7815,"RTN","PRSNEETP",64,0)=" Q:$D(DIRUT)!('$G(Y))"
^XTMP("XPDT",7815,"RTN","PRSNEETP",65,0)=" S PRSIEN=$G(^VA(200,DUZ,450))"
^XTMP("XPDT",7815,"RTN","PRSNEETP",66,0)=" S IENS="",""_PRSIEN_"","""
^XTMP("XPDT",7815,"RTN","PRSNEETP",67,0)=" D FIND^DIC(450.01,IENS,""1"",,""TKPOCEDIT"",,,,,""SWITCH"",)"
^XTMP("XPDT",7815,"RTN","PRSNEETP",68,0)=" ; if there is an entry for TKPOCEDIT preference then update entry to "
^XTMP("XPDT",7815,"RTN","PRSNEETP",69,0)=" ;   new preference"
^XTMP("XPDT",7815,"RTN","PRSNEETP",70,0)=" ; otherwise add and set user preference to multiple."
^XTMP("XPDT",7815,"RTN","PRSNEETP",71,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",72,0)=" I +SWITCH(""DILIST"",0) D"
^XTMP("XPDT",7815,"RTN","PRSNEETP",73,0)=" . S PREFIEN=+$G(SWITCH(""DILIST"",2,1))"
^XTMP("XPDT",7815,"RTN","PRSNEETP",74,0)=" . N FDA,IENS"
^XTMP("XPDT",7815,"RTN","PRSNEETP",75,0)=" . S IENS=PREFIEN_"",""_PRSIEN_"","""
^XTMP("XPDT",7815,"RTN","PRSNEETP",76,0)=" . S FDA(450.01,IENS,1)=$S(TOGON:""FALSE"",1:""TRUE"")"
^XTMP("XPDT",7815,"RTN","PRSNEETP",77,0)=" . D UPDATE^DIE("""",""FDA"",""IENS""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNEETP",78,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNEETP",79,0)=" . N FDA,IENS"
^XTMP("XPDT",7815,"RTN","PRSNEETP",80,0)=" . S IENS=""+1,""_PRSIEN_"","""
^XTMP("XPDT",7815,"RTN","PRSNEETP",81,0)=" . S FDA(450.01,IENS,.01)=""TKPOCEDIT"""
^XTMP("XPDT",7815,"RTN","PRSNEETP",82,0)=" . S FDA(450.01,IENS,1)=$S(TOGON:""FALSE"",1:""TRUE"")"
^XTMP("XPDT",7815,"RTN","PRSNEETP",83,0)=" . D UPDATE^DIE("""",""FDA"",""IENS""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNEETP",84,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNEETP",85,0)="ASSIGNKY(X) ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",86,0)=" ; entry point called when user added as a POC Data Entry Personnel"
^XTMP("XPDT",7815,"RTN","PRSNEETP",87,0)=" ; in the T&L unit file.  When added they get the PRSN DEP security key,"
^XTMP("XPDT",7815,"RTN","PRSNEETP",88,0)=" ; if they don't already have it."
^XTMP("XPDT",7815,"RTN","PRSNEETP",89,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",90,0)=" S IEN200=$G(X)"
^XTMP("XPDT",7815,"RTN","PRSNEETP",91,0)=" Q:IEN200'>0"
^XTMP("XPDT",7815,"RTN","PRSNEETP",92,0)=" I '$D(^XUSEC(""PRSN DEP"",IEN200)) D"
^XTMP("XPDT",7815,"RTN","PRSNEETP",93,0)=" . N KEYIEN"
^XTMP("XPDT",7815,"RTN","PRSNEETP",94,0)=" . S KEYIEN=$$FIND1^DIC(19.1,,""X"",""PRSN DEP"")"
^XTMP("XPDT",7815,"RTN","PRSNEETP",95,0)=" . Q:'KEYIEN"
^XTMP("XPDT",7815,"RTN","PRSNEETP",96,0)=" . S PRSFDA(200.051,""?+1,""_IEN200_"","",.01)=KEYIEN"
^XTMP("XPDT",7815,"RTN","PRSNEETP",97,0)=" . S PRSIENS(1)=KEYIEN"
^XTMP("XPDT",7815,"RTN","PRSNEETP",98,0)=" . D UPDATE^DIE("""",""PRSFDA"",""PRSIENS""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNEETP",99,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNEETP",100,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",101,0)="REMOVEKY(DA,X) ;entry point is called when a user is deleted as a POC Data "
^XTMP("XPDT",7815,"RTN","PRSNEETP",102,0)=" ; Entry Personnel in the T&L unit file.  When they are deleted from"
^XTMP("XPDT",7815,"RTN","PRSNEETP",103,0)=" ; the multiple, the key is removed, unless they are also in another"
^XTMP("XPDT",7815,"RTN","PRSNEETP",104,0)=" ; T&L as a POC Data Entry Personnel."
^XTMP("XPDT",7815,"RTN","PRSNEETP",105,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",106,0)=" ; Loop thru ""AE"" xref in case this data entry personnel is assigned"
^XTMP("XPDT",7815,"RTN","PRSNEETP",107,0)=" ; to other T&Ls"
^XTMP("XPDT",7815,"RTN","PRSNEETP",108,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",109,0)=" N IEN200 S IEN200=$G(X) Q:IEN200'>0"
^XTMP("XPDT",7815,"RTN","PRSNEETP",110,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",111,0)=" N TLI,FOUND S (TLI,FOUND)=0"
^XTMP("XPDT",7815,"RTN","PRSNEETP",112,0)=" F  S TLI=$O(^PRST(455.5,""AE"",IEN200,TLI)) Q:TLI'>0!FOUND  D"
^XTMP("XPDT",7815,"RTN","PRSNEETP",113,0)=" .  I TLI'=""""&(TLI'=DA(1)) S FOUND=1"
^XTMP("XPDT",7815,"RTN","PRSNEETP",114,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNEETP",115,0)=" I 'FOUND,$D(^XUSEC(""PRSN DEP"",IEN200)) D"
^XTMP("XPDT",7815,"RTN","PRSNEETP",116,0)=" . N KEYIEN,PRSFDA,PRSIENS,DKIEN"
^XTMP("XPDT",7815,"RTN","PRSNEETP",117,0)=" . S KEYIEN=$$FIND1^DIC(19.1,,""X"",""PRSN DEP"")"
^XTMP("XPDT",7815,"RTN","PRSNEETP",118,0)=" . Q:'KEYIEN"
^XTMP("XPDT",7815,"RTN","PRSNEETP",119,0)=" . S DKIEN=$$FIND1^DIC(200.051,"",""_IEN200_"","",""QX"",KEYIEN)"
^XTMP("XPDT",7815,"RTN","PRSNEETP",120,0)=" . Q:'DKIEN"
^XTMP("XPDT",7815,"RTN","PRSNEETP",121,0)=" . S PRSFDA(200.051,DKIEN_"",""_IEN200_"","",.01)=""@"""
^XTMP("XPDT",7815,"RTN","PRSNEETP",122,0)=" . D FILE^DIE(""E"",""PRSFDA""),MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNEETP",123,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAD0")="0^17^B13777762^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",1,0)="PRSNRAD0 ;WOIFO/DAM - POC GROUP ACTIVITY DETAILED REPORT ;060409"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",2,0)=" ;;4.0;PAID;**126**;June 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",4,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",5,0)=" ;   "
^XTMP("XPDT",7815,"RTN","PRSNRAD0",6,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNRAD0",7,0)="DSPLY(PRSIEN,BEG,END,STOP) ;Entry point to gather POC data from 451"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",8,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",9,0)=" ;   PRSIEN: Nurse ien 450"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",10,0)=" ;   BEG,END: FileMan begin and end dates for report"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",11,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",12,0)=" N EXTBEG,EXTEND,FMDT"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",13,0)=" D INITIAL"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",14,0)=" D INFO^PRSNRAS1"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",15,0)=" S FMDT=BEG-.1"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",16,0)=" N INDEX,CNT,DAYNODE"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",17,0)=" S (INDEX,CNT)=0"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",18,0)=" F  S FMDT=$O(^PRST(458,""AD"",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",19,0)=" . S DAYNODE=$G(^PRST(458,""AD"",FMDT))"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",20,0)=" . S PPIEN=+DAYNODE"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",21,0)=" . S PRSNDAY=$P(DAYNODE,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",22,0)=" . K POCD   ;array to hold POC data"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",23,0)=" . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",24,0)=" . Q:$G(POCD(0))=0"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",25,0)=" . D DATA"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",26,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",27,0)=" K PRSNAME,PRSNTL,SKILMIX,PRSNSSN,PRSNLNG,PRSNTWD,PRSNPOC1,PRSDY"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",28,0)=" K PPIEN,PRSL,PRSNDAY,STARTDT,STDE,DATE,DAYNODE,FMDT"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",29,0)=" K MEAL,PRSNM,PRSNPOC,PRSNRE,PRSNREC,PRSNRIEN,PRSNSP,PRSNST"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",30,0)=" K PRSNTIEN,PRSNTT,PRSNTW,PRSNWIEN"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",31,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",32,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",33,0)="INITIAL ;  Set up external date range"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",34,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",35,0)=" N Y"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",36,0)=" S Y=BEG D DD^%DT S EXTBEG=Y"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",37,0)=" S Y=END D DD^%DT S EXTEND=Y"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",38,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",39,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",40,0)="HDR ;Display header for report of Individual Nurse Activity"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",41,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",42,0)=" W @IOF"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",43,0)=" W ?25,""GROUP ACTIVITY ""_""DETAILED""_"" REPORT"""
^XTMP("XPDT",7815,"RTN","PRSNRAD0",44,0)=" W !,?25,EXTBEG_"" - ""_EXTEND"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",45,0)=" W !              ;blank line"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",46,0)=" W !,""Nurse Name"",?21,""Last 4"",?29,""Start/"",?38,""Type of"",?49,""Mand"",?57,""Meal"",?65,""Location/"""
^XTMP("XPDT",7815,"RTN","PRSNRAD0",47,0)=" W !,""Skill Mix"",?23,""SSN/"",?29,""Stop"",?39,""Time"",?50,""OT"",?57,""Time"",?64,""Type of Work"""
^XTMP("XPDT",7815,"RTN","PRSNRAD0",48,0)=" W !,""Date"",?23,""T&L"",?29,""Time"""
^XTMP("XPDT",7815,"RTN","PRSNRAD0",49,0)=" W !,""--------------------------------------------------------------------------------"""
^XTMP("XPDT",7815,"RTN","PRSNRAD0",50,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",51,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",52,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",53,0)="DATA ;Extract display data from POCD array and get external date"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",54,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",55,0)=" S (PRSNST,PRSNSP,PRSNPOC,PRSNTT,PRSNWIEN)="""""
^XTMP("XPDT",7815,"RTN","PRSNRAD0",56,0)=" S (PRSNTW,PRSNM,PRSNRE,PRSNREC,PRSNRIEN)="""""
^XTMP("XPDT",7815,"RTN","PRSNRAD0",57,0)=" S (PRSNLNG,PRSNTWD,PRSNPOC1,PRSDY,DATE,MEAL)="""""
^XTMP("XPDT",7815,"RTN","PRSNRAD0",58,0)=" S PRSNTIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",59,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",60,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",61,0)=" ;Get external date in form of MM/DD/YY"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",62,0)=" N DATE S DATE=$E(FMDT,4,5)_""/""_$E(FMDT,6,7)_""/""_$E(FMDT,2,3)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",63,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",64,0)=" ;Get data from POCD array "
^XTMP("XPDT",7815,"RTN","PRSNRAD0",65,0)=" S PRSL=0"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",66,0)=" F  S PRSL=$O(POCD(PRSL)) Q:PRSL'>0!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",67,0)=" . ;Start Time"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",68,0)=" . S PRSNST=$P(POCD(PRSL),U)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",69,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",70,0)=" . ;Stop Time "
^XTMP("XPDT",7815,"RTN","PRSNRAD0",71,0)=" . S PRSNSP=$P(POCD(PRSL),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",72,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",73,0)=" . ;Meal Time"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",74,0)=" . S MEAL=$P(POCD(PRSL),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",75,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",76,0)=" . ;Type of Time code IEN"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",77,0)=" . S PRSNTT=$P(POCD(PRSL),U,4) I PRSNTT'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",78,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",79,0)=" . . ;Type of Time code"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",80,0)=" . . S PRSNTIEN=$O(^PRST(457.3,""B"",PRSNTT,PRSNTIEN)) Q:PRSNTIEN="""""
^XTMP("XPDT",7815,"RTN","PRSNRAD0",81,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",82,0)=" . . ;Description for Type of Time code"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",83,0)=" . . S PRSNLNG=$P(^PRST(457.3,PRSNTIEN,0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",84,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",85,0)=" . S PRSNPOC=$P(POCD(PRSL),U,5) I PRSNPOC'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",86,0)=" . . ;POC"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",87,0)=" . . S PRSNPOC1=$P($$ISACTIVE^PRSNUT01(DT,PRSNPOC),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",88,0)=" .  ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",89,0)=" .  ;Type of Work Code IEN"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",90,0)=" .  S PRSNWIEN=$P(POCD(PRSL),U,6) I PRSNWIEN'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",91,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",92,0)=" . . ;Type of Work Code"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",93,0)=" . . S PRSNTW=$P(^PRSN(451.5,PRSNWIEN,0),U)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",94,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",95,0)=" . . ;Description for Type of Work code"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",96,0)=" . . S PRSNTWD=$P(^PRSN(451.5,PRSNWIEN,0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",97,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",98,0)=" .  ;OT Mandatory/Voluntary"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",99,0)=" . S PRSNM=$P(POCD(PRSL),U,7)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",100,0)=" . D PRT"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",101,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",102,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",103,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",104,0)="PRT ;Print report"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",105,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",106,0)=" I $G(PRSL)=1 W !,$E(PRSNAME,1,19)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",107,0)=" W ?22,$E(PRSNSSN,6,9)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",108,0)=" W ?29,PRSNST"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",109,0)=" W ?38,PRSNLNG"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",110,0)=" W ?51,PRSNM"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",111,0)=" W ?58,MEAL"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",112,0)=" W ?65,$E(PRSNPOC1,1,14)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",113,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",114,0)=" I $G(PRSL)=1 D"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",115,0)=" . W $E(SKILMIX,1,19)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",116,0)=" W ?22,PRSNTL"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",117,0)=" W ?29,PRSNSP"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",118,0)=" W ?65,$E(PRSNTWD,1,14)"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",119,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",120,0)=" I $G(PRSL)=1 D"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",121,0)=" . W DATE"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",122,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",123,0)=" I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR"
^XTMP("XPDT",7815,"RTN","PRSNRAD0",124,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS0")="0^18^B11143956^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",1,0)="PRSNRAS0 ;WOIFO/DAM - Group Activity - Summary and Detailed;9/10/2009"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",2,0)=" ;;4.0;PAID;**126**;Sep 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNRAS0",4,0)="DEP ; Entry point for Data Entry Personnel"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",5,0)=" N GROUP"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",6,0)=" D ACCESS^PRSNUT02(.GROUP,""E"",DT,1)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",7,0)=" ; quit if any error during group selection"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",8,0)=" Q:$P($G(GROUP(0)),U)=""E"""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",9,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",10,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",11,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",12,0)="DAP ; Entry point for Data Approval Personnel"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",13,0)=" N GROUP"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",14,0)=" D ACCESS^PRSNUT02(.GROUP,""A"",DT,1)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",15,0)=" ; quit if any error during group selection"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",16,0)=" Q:$P($G(GROUP(0)),U)=""E"""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",17,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",18,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",19,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",20,0)="COORD ;Entry point for VANOD Coordinator"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",21,0)=" ; Coordinator has no access limits so let them pick any group"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",22,0)=" N GROUP"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",23,0)=" D PIKGROUP^PRSNUT04(.GROUP,"""",1)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",24,0)=" ; quit if any error during group selection"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",25,0)=" Q:$P($G(GROUP(0)),U)=""E"""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",26,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",27,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",28,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",29,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",30,0)="MAIN ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",31,0)=" N RANGE,BEG,END,EXTBEG,EXTEND,STOP"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",32,0)=" N DAYBEG,DAYEND"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",33,0)=" N TYPE,BEG,END"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",34,0)=" S STOP=0"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",35,0)=" D TYPE"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",36,0)=" Q:STOP"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",37,0)=" D DATE"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",38,0)=" Q:STOP"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",39,0)=" D QUE"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",40,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",41,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",42,0)="REPORT ;for group of location or t&l"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",43,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",44,0)=" N PRSIEN,PRSNGLB,PRSNG,PICK,PRSNGA,PRSNGB"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",45,0)=" I TYPE=""S"" D HDR^PRSNRAS1(EXTBEG,EXTEND)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",46,0)=" I TYPE=""D"" D HDR^PRSNRAD0"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",47,0)=" S (PICK,STOP)=0"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",48,0)=" F  S PICK=$O(GROUP(PICK)) Q:PICK=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",49,0)=" .  S PRSNG=GROUP(0)_""^""_PICK_""^""_GROUP(PICK)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",50,0)=" .  S PRSNGLB=$S($P(PRSNG,U,2)=""N"":$NA(^NURSF(211.8,""D"",$P(PRSNG,U,7))),1:$NA(^PRSPC(""ATL""_$P(PRSNG,U,3))))"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",51,0)=" .  S PRSNGA="""""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",52,0)=" .  F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",53,0)=" ..    S PRSNGB=0"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",54,0)=" ..    F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",55,0)=" ...      S PRSIEN=$S($P(PRSNG,U,2)=""N"":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",56,0)=" ...      I +$$ISNURSE^PRSNUT01(PRSIEN) D"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",57,0)=" ....        I TYPE=""S"" D"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",58,0)=" .....;          summary report"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",59,0)=" .....           D DSPLY^PRSNRAS1(PRSIEN,BEG,END,EXTBEG,EXTEND,.STOP)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",60,0)=" ....        E  D"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",61,0)=" .....;          detailed report"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",62,0)=" .....           D DSPLY^PRSNRAD0(PRSIEN,BEG,END,.STOP)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",63,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",64,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",65,0)="TYPE ;Choose summary or detailed group activity report"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",66,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",67,0)=" N DIR,DIRUT,X,Y"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",68,0)=" S DIR(0)=""S^S:Summary Report;D:Detailed Report"""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",69,0)=" S DIR(""A"")=""Enter Selection"""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",70,0)=" S DIR(""?"")=""Enter whether you want to select a Summary or Detailed Group Activity Report"""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",71,0)=" D ^DIR"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",72,0)=" I $D(DIRUT) S STOP=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",73,0)=" S TYPE=Y"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",74,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",75,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",76,0)="DATE ; User is prompted for a date range "
^XTMP("XPDT",7815,"RTN","PRSNRAS0",77,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",78,0)=" S RANGE=$$POCRANGE^PRSNUT01()"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",79,0)=" ; QUIT HERE IF RANGE=0 "
^XTMP("XPDT",7815,"RTN","PRSNRAS0",80,0)=" I +$G(RANGE)'>0 S STOP=1"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",81,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",82,0)=" S BEG=$P(RANGE,U)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",83,0)=" S END=$P(RANGE,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",84,0)=" S EXTBEG=$P(RANGE,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",85,0)=" S EXTEND=$P(RANGE,U,4)"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",86,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",87,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",88,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",89,0)="QUE ;call to generate and display report for individual activity"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",90,0)=" N %ZIS,POP,IOP"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",91,0)=" S %ZIS=""MQ"""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",92,0)=" D ^%ZIS"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",93,0)=" Q:POP"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",94,0)=" I $D(IO(""Q"")) D"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",95,0)=" .  K IO(""Q"")"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",96,0)=" .  N ZTDESC,ZTRTN,ZTSAVE,ZTSK,ZTDTH,ZTIO"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",97,0)=" .  S ZTDESC=""GROUP ACTIVITY ""_TYPE_"" REPORT"""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",98,0)=" .  S ZTRTN=""REPORT^PRSNRAS0"""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",99,0)=" .  S ZTSAVE(""GROUP"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",100,0)=" .  S ZTSAVE(""GROUP("")="""""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",101,0)=" .  S ZTSAVE(""TYPE"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",102,0)=" .  S ZTSAVE(""BEG"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",103,0)=" .  S ZTSAVE(""END"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",104,0)=" .  S ZTSAVE(""EXTBEG"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",105,0)=" .  S ZTSAVE(""EXTEND"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",106,0)=" .  D ^%ZTLOAD"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",107,0)=" .  I $D(ZTSK) S ZTREQ=""@"" W !,""Request ""_ZTSK_"" queued."""
^XTMP("XPDT",7815,"RTN","PRSNRAS0",108,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",109,0)=" .  D REPORT"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",110,0)=" D ^%ZISC"
^XTMP("XPDT",7815,"RTN","PRSNRAS0",111,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS1")="0^19^B19319519^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",1,0)="PRSNRAS1 ;WOIFO/DAM - POC GROUP ACTIVITY SUMMARY REPORT ;060409"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",2,0)=" ;;4.0;PAID;**126**;June 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",4,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",5,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",6,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNRAS1",7,0)="DSPLY(PRSIEN,BEG,END,EXTBEG,EXTEND,STOP) ; gather POC data from 451"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",8,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",9,0)=" ;   PRSIEN: Nurse ien 450"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",10,0)=" ;   BEG,END: FileMan begin and end dates for report"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",11,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",12,0)=" D INFO"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",13,0)=" N INDEX,CNT,DAYNODE,FMDT,STOP"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",14,0)=" S FMDT=BEG-.1"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",15,0)=" S (INDEX,CNT,STOP)=0"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",16,0)=" F  S FMDT=$O(^PRST(458,""AD"",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",17,0)=" . S DAYNODE=$G(^PRST(458,""AD"",FMDT))"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",18,0)=" . S PPIEN=+DAYNODE"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",19,0)=" . S PRSNDAY=$P(DAYNODE,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",20,0)=" . K POCD   ;array to hold POC data"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",21,0)=" . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",22,0)=" . Q:$G(POCD(0))=0"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",23,0)=" . D DATA"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",24,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",25,0)=" D PRTLOOP(EXTBEG,EXTEND)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",26,0)=" K WKTOT"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",27,0)=" K PRSNAME,PRSNTL,SKILMIX,MIX1,MIX2"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",28,0)=" K PRSNLNG,PRSNTWD,PRSNPOC1,PRSDY"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",29,0)=" K PPIEN,PRSL,PRSNDAY,STARTDT,STDE,PRSNSSN"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",30,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",31,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",32,0)="INFO ;Find nurse information to display in report"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",33,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",34,0)=" N PRSNARY"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",35,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",36,0)=" S PRSNARY=$G(^PRSPC(PRSIEN,0))"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",37,0)=" S PRSNAME=$P(PRSNARY,U)              ;Nurse Name"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",38,0)=" S PRSNSSN=$P(PRSNARY,U,9)           ;Nurse SSN"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",39,0)=" S PRSNTL=$P(PRSNARY,U,8)             ;Nurse T&L"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",40,0)=" S SKILMIX=$P($$ISNURSE^PRSNUT01(PRSIEN),U,2) ;  Nurse skillmix"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",41,0)=" I SKILMIX[""ADMINISTRATIVE"" S SKILMIX=""ADMIN RN"""
^XTMP("XPDT",7815,"RTN","PRSNRAS1",42,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",43,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",44,0)="HDR(EXTBEG,EXTEND) ;Display header for report of Individual Nurse Activity"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",45,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",46,0)=" W @IOF"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",47,0)=" W ?25,""GROUP ACTIVITY SUMMARY REPORT"""
^XTMP("XPDT",7815,"RTN","PRSNRAS1",48,0)=" W !,?25,EXTBEG_"" - ""_EXTEND"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",49,0)=" W !         ;blank line"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",50,0)=" W !,""Nurse Name"",?21,""Type of"",?32,""Type of"",?48,""Location"",?66,""# of"",?75,""T&L"""
^XTMP("XPDT",7815,"RTN","PRSNRAS1",51,0)=" W !,""Skill Mix"",?22,""Time"",?33,""Work"",?66,""Hours"",?75,""Unit"""
^XTMP("XPDT",7815,"RTN","PRSNRAS1",52,0)=" W !,""--------------------------------------------------------------------------------"""
^XTMP("XPDT",7815,"RTN","PRSNRAS1",53,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",54,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",55,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",56,0)="DATA ;Extract display data from POCD array"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",57,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",58,0)=" N PRSNST,PRSNSP,PRSNPOC,PRSNTT,PRSNWIEN,HOURS,PRSNTIEN"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",59,0)=" N PRSNTW,PRSNM,PRSNRE,PRSNREC,PRSNRIEN"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",60,0)=" S (PRSNLNG,PRSNTWD,PRSNPOC1,PRSDY)="""""
^XTMP("XPDT",7815,"RTN","PRSNRAS1",61,0)=" N MEAL"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",62,0)=" S PRSNTIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",63,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",64,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",65,0)=" S PRSL=0"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",66,0)=" F  S PRSL=$O(POCD(PRSL)) Q:PRSL'>0!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",67,0)=" . ;Start Time"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",68,0)=" . S PRSNST=$P(POCD(PRSL),U)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",69,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",70,0)=" . ;Stop Time "
^XTMP("XPDT",7815,"RTN","PRSNRAS1",71,0)=" . S PRSNSP=$P(POCD(PRSL),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",72,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",73,0)=" . ;Meal Time"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",74,0)=" . S MEAL=$P(POCD(PRSL),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",75,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",76,0)=" . ;Get hours worked in a given location"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",77,0)=" . S HOURS=$$AMT^PRSPSAPU(PRSNST,PRSNSP,MEAL)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",78,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",79,0)=" . ;Type of Time code IEN"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",80,0)=" . S PRSNTT=$P(POCD(PRSL),U,4) I PRSNTT'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",81,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",82,0)=" . . ;Type of Time code"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",83,0)=" . . S PRSNTIEN=$O(^PRST(457.3,""B"",PRSNTT,PRSNTIEN)) Q:PRSNTIEN=""""!STOP"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",84,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",85,0)=" . . ;Description for Type of Time code"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",86,0)=" . . S PRSNLNG=$P(^PRST(457.3,PRSNTIEN,0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",87,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",88,0)=" . S PRSNPOC=$P(POCD(PRSL),U,5) I PRSNPOC'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",89,0)=" . . ;POC"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",90,0)=" . . S PRSNPOC1=$P($$ISACTIVE^PRSNUT01(DT,PRSNPOC),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",91,0)=" .  ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",92,0)=" .  ;Type of Work Code IEN"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",93,0)=" .  S PRSNWIEN=$P(POCD(PRSL),U,6) I PRSNWIEN'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",94,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",95,0)=" . . ;Type of Work Code"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",96,0)=" . . S PRSNTW=$P(^PRSN(451.5,PRSNWIEN,0),U)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",97,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",98,0)=" . . ;Description for Type of Work code"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",99,0)=" . . S PRSNTWD=$P(^PRSN(451.5,PRSNWIEN,0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",100,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",101,0)=" .;  save hours into work array"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",102,0)=" .   Q:(PRSNLNG="""")!(PRSNTWD="""")!(PRSNPOC1="""")"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",103,0)=" .   I '$D(WKTOT(PRSNLNG,PRSNTWD,PRSNPOC1)) D"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",104,0)=" ..     S CNT=CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",105,0)=" ..     S (INDEX,WKTOT(PRSNLNG,PRSNTWD,PRSNPOC1,0))=CNT"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",106,0)=" .   E  D"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",107,0)=" ..    S INDEX=$G(WKTOT(PRSNLNG,PRSNTWD,PRSNPOC1,0))"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",108,0)=" .   S WKTOT(INDEX,PRSNLNG,PRSNTWD,PRSNPOC1)=$G(WKTOT(INDEX,PRSNLNG,PRSNTWD,PRSNPOC1))+HOURS"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",109,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",110,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",111,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",112,0)="PRTLOOP(EXTBEG,EXTEND) ;  Loop through Totals array and print each one"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",113,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",114,0)=" N PRSL,TT,TWD,POC"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",115,0)=" S PRSL=0"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",116,0)=" F  S PRSL=$O(WKTOT(PRSL)) Q:PRSL'>0!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",117,0)=" .  S TT="""",TT=$O(WKTOT(PRSL,TT))"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",118,0)=" .  S TWD="""",TWD=$O(WKTOT(PRSL,TT,TWD))"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",119,0)=" .  S POC="""",POC=$O(WKTOT(PRSL,TT,TWD,POC))"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",120,0)=" .  S HOURS=$G(WKTOT(PRSL,TT,TWD,POC))"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",121,0)=" .  D PPP(EXTBEG,EXTEND)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",122,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",123,0)="PPP(EXTBEG,EXTEND) ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",124,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",125,0)=" I $G(PRSL)=1 W !,$E(PRSNAME,1,19)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",126,0)=" W ?21,TT,?32,$E(TWD,1,14),?48,$E(POC,1,18),?66,HOURS,?75,PRSNTL"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",127,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",128,0)=" I $G(PRSL)=1 D"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",129,0)=" . W $E(SKILMIX,1,19)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",130,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",131,0)=" I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR(EXTBEG,EXTEND)"
^XTMP("XPDT",7815,"RTN","PRSNRAS1",132,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNREV0")="0^20^B6787176^n/a"
^XTMP("XPDT",7815,"RTN","PRSNREV0",1,0)="PRSNREV0 ;WOIFO/DAM - Nursing Education Validation/Position and Pay Reports ;9/10/2009"
^XTMP("XPDT",7815,"RTN","PRSNREV0",2,0)=" ;;4.0;PAID;**126**;Sep 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNREV0",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNREV0",4,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNREV0",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV0",6,0)="COORDNPP ;entry point of nurse position and pay information"
^XTMP("XPDT",7815,"RTN","PRSNREV0",7,0)=" S PRSNOPT=2"
^XTMP("XPDT",7815,"RTN","PRSNREV0",8,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNREV0",9,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNREV0",10,0)="COORD ;Entry point for VANOD Coordinator"
^XTMP("XPDT",7815,"RTN","PRSNREV0",11,0)=" S PRSNOPT=1"
^XTMP("XPDT",7815,"RTN","PRSNREV0",12,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNREV0",13,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNREV0",14,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV0",15,0)="MAIN ;call to generate and display report for individual activity"
^XTMP("XPDT",7815,"RTN","PRSNREV0",16,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV0",17,0)=" ; Coordinator has no access limits so let them pick any group"
^XTMP("XPDT",7815,"RTN","PRSNREV0",18,0)=" N GROUP"
^XTMP("XPDT",7815,"RTN","PRSNREV0",19,0)=" D PIKGROUP^PRSNUT04(.GROUP,"""",1)"
^XTMP("XPDT",7815,"RTN","PRSNREV0",20,0)=" QUIT:'$G(GROUP(0))"
^XTMP("XPDT",7815,"RTN","PRSNREV0",21,0)=" N %ZIS,POP,IOP"
^XTMP("XPDT",7815,"RTN","PRSNREV0",22,0)=" S %ZIS=""MQ"""
^XTMP("XPDT",7815,"RTN","PRSNREV0",23,0)=" D ^%ZIS"
^XTMP("XPDT",7815,"RTN","PRSNREV0",24,0)=" Q:POP"
^XTMP("XPDT",7815,"RTN","PRSNREV0",25,0)=" I $D(IO(""Q"")) D"
^XTMP("XPDT",7815,"RTN","PRSNREV0",26,0)=" .  K IO(""Q"")"
^XTMP("XPDT",7815,"RTN","PRSNREV0",27,0)=" .  N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNREV0",28,0)=" .  S ZTDESC=$P(""Nursing Education Validation Report^Nurse Position and Pay Information Report"",PRSNOPT)"
^XTMP("XPDT",7815,"RTN","PRSNREV0",29,0)=" .  S ZTRTN=""REPORT^PRSNREV0"""
^XTMP("XPDT",7815,"RTN","PRSNREV0",30,0)=" .  S ZTSAVE(""GROUP"")="""""
^XTMP("XPDT",7815,"RTN","PRSNREV0",31,0)=" .  S ZTSAVE(""TYPE"")="""""
^XTMP("XPDT",7815,"RTN","PRSNREV0",32,0)=" .  S ZTSAVE(""PRSNOPT"")="""""
^XTMP("XPDT",7815,"RTN","PRSNREV0",33,0)=" .  D ^%ZTLOAD"
^XTMP("XPDT",7815,"RTN","PRSNREV0",34,0)=" .  I $D(ZTSK) S ZTREQ=""@"" W !,""Request ""_ZTSK_"" Queued."""
^XTMP("XPDT",7815,"RTN","PRSNREV0",35,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNREV0",36,0)=" .  D REPORT"
^XTMP("XPDT",7815,"RTN","PRSNREV0",37,0)=" D ^%ZISC"
^XTMP("XPDT",7815,"RTN","PRSNREV0",38,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV0",39,0)=" K PRSNOPT"
^XTMP("XPDT",7815,"RTN","PRSNREV0",40,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNREV0",41,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV0",42,0)="REPORT ;for group of location or t&l"
^XTMP("XPDT",7815,"RTN","PRSNREV0",43,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV0",44,0)=" N PRSIEN,PRSNGLB,PRSNG,GHD,PICK,SORT,STOP,I,PRSNGA,PRSNGB,TAB"
^XTMP("XPDT",7815,"RTN","PRSNREV0",45,0)=" S SORT=$P(GROUP(0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNREV0",46,0)=" D HDR^PRSNREV1(PRSNOPT)"
^XTMP("XPDT",7815,"RTN","PRSNREV0",47,0)=" S (PICK,STOP)=0"
^XTMP("XPDT",7815,"RTN","PRSNREV0",48,0)=" F  S PICK=$O(GROUP(PICK)) Q:PICK=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNREV0",49,0)=" .  S PRSNG=GROUP(0)_""^""_PICK_""^""_GROUP(PICK)"
^XTMP("XPDT",7815,"RTN","PRSNREV0",50,0)=" .  S PRSNGLB=$S($P(PRSNG,U,2)=""N"":$NA(^NURSF(211.8,""D"",$P(PRSNG,U,7))),1:$NA(^PRSPC(""ATL""_$P(PRSNG,U,3))))"
^XTMP("XPDT",7815,"RTN","PRSNREV0",51,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNREV0",52,0)=" .; display and underline group sub header"
^XTMP("XPDT",7815,"RTN","PRSNREV0",53,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNREV0",54,0)=" .  S GHD=$S($P(PRSNG,U,2)=""N"":""LOCATION"",1:""T&L UNIT"")_"":  ""_$P(PRSNG,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNREV0",55,0)=" .  S TAB=IOM-$L(GHD)/2-5"
^XTMP("XPDT",7815,"RTN","PRSNREV0",56,0)=" .  W !!,?TAB,GHD,!"
^XTMP("XPDT",7815,"RTN","PRSNREV0",57,0)=" .  W ?TAB F I=1:1:$L(GHD) W ""-"""
^XTMP("XPDT",7815,"RTN","PRSNREV0",58,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNREV0",59,0)=" .  S PRSNGA="""""
^XTMP("XPDT",7815,"RTN","PRSNREV0",60,0)=" .  F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNREV0",61,0)=" ..    S PRSNGB=0"
^XTMP("XPDT",7815,"RTN","PRSNREV0",62,0)=" ..    F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNREV0",63,0)=" ...      S PRSIEN=$S($P(PRSNG,U,2)=""N"":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)"
^XTMP("XPDT",7815,"RTN","PRSNREV0",64,0)=" ...      S NURSE=$$ISNURSE^PRSNUT01(PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNREV0",65,0)=" ...      I +NURSE D"
^XTMP("XPDT",7815,"RTN","PRSNREV0",66,0)=" ....        D DSPLY^PRSNREV1(PRSIEN,PRSNOPT,NURSE,.STOP)"
^XTMP("XPDT",7815,"RTN","PRSNREV0",67,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNREV0",68,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1")="0^21^B10232074^n/a"
^XTMP("XPDT",7815,"RTN","PRSNREV1",1,0)="PRSNREV1 ;WOIFO/DAM - Nursing Education Validation Report II;060409"
^XTMP("XPDT",7815,"RTN","PRSNREV1",2,0)=" ;;4.0;PAID;**126**;June 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNREV1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNREV1",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNREV1",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",6,0)="DSPLY(PRSIEN,PRSNOPT,NURSE,STOP) ; Entry point to gather POC Nurse "
^XTMP("XPDT",7815,"RTN","PRSNREV1",7,0)=" ;                         Education Data from file 450"
^XTMP("XPDT",7815,"RTN","PRSNREV1",8,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNREV1",9,0)=" ;   PRSIEN: Nurse ien 450"
^XTMP("XPDT",7815,"RTN","PRSNREV1",10,0)=" ;   BEG,END: FileMan begin and end dates for report"
^XTMP("XPDT",7815,"RTN","PRSNREV1",11,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",12,0)=" D INFO^PRSNRAS1"
^XTMP("XPDT",7815,"RTN","PRSNREV1",13,0)=" N INDEX,CNT"
^XTMP("XPDT",7815,"RTN","PRSNREV1",14,0)=" S (INDEX,CNT)=0"
^XTMP("XPDT",7815,"RTN","PRSNREV1",15,0)=" D DATA(PRSIEN,PRSNOPT,NURSE,.STOP)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",16,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",17,0)=" K PRSNAME,PRSNSSN,PRSNTL,SKILMIX,ROLE,PRSNLNG,PRSNTWD,PRSNPOC1,PRSDY"
^XTMP("XPDT",7815,"RTN","PRSNREV1",18,0)=" K PPIEN,PRSL,PRSNDAY,STARTDT,STDE,BOC,OCC,ASN,EDU,YEAR"
^XTMP("XPDT",7815,"RTN","PRSNREV1",19,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNREV1",20,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",21,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",22,0)="HDR(PRSNOPT) ;Display header"
^XTMP("XPDT",7815,"RTN","PRSNREV1",23,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",24,0)=" W @IOF"
^XTMP("XPDT",7815,"RTN","PRSNREV1",25,0)=" W $P(""Nursing Education Validation Report^Nurse Position and Pay Information"",U,PRSNOPT),"" Report"""
^XTMP("XPDT",7815,"RTN","PRSNREV1",26,0)=" W ?60,""Run Date: "",$E(DT,4,5),""/"",$E(DT,6,7),""/"",$E(DT,2,3)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",27,0)=" ;nurse education validation"
^XTMP("XPDT",7815,"RTN","PRSNREV1",28,0)=" I PRSNOPT=1 D"
^XTMP("XPDT",7815,"RTN","PRSNREV1",29,0)=" . W !!,""Nurse Name"",?21,""BOC/"",?27,""Assignment Code"",?47,""PAID Education Level"""
^XTMP("XPDT",7815,"RTN","PRSNREV1",30,0)=" . W !,""Last 4 SSN"",?21,""OCC"",?27,""Nurse Role"",?47,""Year Degree Earned"""
^XTMP("XPDT",7815,"RTN","PRSNREV1",31,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNREV1",32,0)=" ;nurse position and pay"
^XTMP("XPDT",7815,"RTN","PRSNREV1",33,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNREV1",34,0)=" . W !!,""Nurse Name"",?21,""BOC/"",?27,""Assignment Code"",?47,""Grade/Step"",?60,""Salary"""
^XTMP("XPDT",7815,"RTN","PRSNREV1",35,0)=" . W !,""Last 4 SSN"",?13,""CC"",?21,""OCC"",?27,""Nurse Role"",?47,""Yr. of Ser."",?60,""Salary Start Date"""
^XTMP("XPDT",7815,"RTN","PRSNREV1",36,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNREV1",37,0)=" W !,""--------------------------------------------------------------------------------"""
^XTMP("XPDT",7815,"RTN","PRSNREV1",38,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",39,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNREV1",40,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",41,0)="DATA(PRSIEN,PRSNOPT,NURSE,STOP) ;Extract display data from POCD array and get external date"
^XTMP("XPDT",7815,"RTN","PRSNREV1",42,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",43,0)=" N JOB,ED,A,B,PRSNA,ROLE"
^XTMP("XPDT",7815,"RTN","PRSNREV1",44,0)=" S (BOC,OCC,ASN,EDU,YEAR)=0"
^XTMP("XPDT",7815,"RTN","PRSNREV1",45,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",46,0)=" S ROLE=$P($G(NURSE),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",47,0)=" S JOB=$$GETCODES^PRSNUT01(PRSIEN)    ;Job codes"
^XTMP("XPDT",7815,"RTN","PRSNREV1",48,0)=" S BOC=$P(JOB,U)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",49,0)=" S OCC=$P(JOB,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",50,0)=" S ASN=$P(JOB,U,7)  ;External value of job assignment code"
^XTMP("XPDT",7815,"RTN","PRSNREV1",51,0)=" ;nurse education validation"
^XTMP("XPDT",7815,"RTN","PRSNREV1",52,0)=" I PRSNOPT=1 D"
^XTMP("XPDT",7815,"RTN","PRSNREV1",53,0)=" . S ED=$$GETDEG^PRSNUT01(PRSIEN)   ;Education level & year degree earned"
^XTMP("XPDT",7815,"RTN","PRSNREV1",54,0)=" . S EDU=$P(ED,U)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",55,0)=" . S YEAR=$P(ED,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",56,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNREV1",57,0)=" ;nurse position and pay"
^XTMP("XPDT",7815,"RTN","PRSNREV1",58,0)=" I PRSNOPT=2 D"
^XTMP("XPDT",7815,"RTN","PRSNREV1",59,0)=" . S PRSNA=^PRSPC(PRSIEN,0),YEAR=$P(PRSNA,U,31) S:YEAR YEAR=$E(DT,1,3)-$E(YEAR,1,3)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",60,0)=" . S A=$P(PRSNA,U,29),B=$L(A),$P(PRSNA,U,29)=$S(A<1000:A,1:$E(A,1,B-6)_"",""_$E(A,B-5,B))"
^XTMP("XPDT",7815,"RTN","PRSNREV1",61,0)=" . S A=$P(PRSNA,U,28),$P(PRSNA,U,28)=$E(A,4,5)_""/""_$E(A,6,7)_""/""_$E(A,2,3)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",62,0)=" . QUIT"
^XTMP("XPDT",7815,"RTN","PRSNREV1",63,0)=" D PRT(PRSNOPT)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",64,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",65,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNREV1",66,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",67,0)="PRT(PRSNOPT) ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",68,0)=" ;print education vaidation report"
^XTMP("XPDT",7815,"RTN","PRSNREV1",69,0)=" I PRSNOPT=1 D"
^XTMP("XPDT",7815,"RTN","PRSNREV1",70,0)=" . W !!,$E(PRSNAME,1,19),?21,BOC,""/"",?27,$E(ASN,1,19),?47,$E(EDU,1,30)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",71,0)=" . W !,$E(PRSNSSN,6,9),?21,OCC,?27,$E(ROLE,1,19),?47,YEAR"
^XTMP("XPDT",7815,"RTN","PRSNREV1",72,0)=" ;print position and pay report"
^XTMP("XPDT",7815,"RTN","PRSNREV1",73,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNREV1",74,0)=" .  W !!,$E(PRSNAME,1,19),?21,BOC,""/"",?27,$E(ASN,1,19),?47,$P(PRSNA,U,14),""-"",$P(PRSNA,U,39),?60,""$"",$P(PRSNA,U,29)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",75,0)=" .  W !,$E(PRSNSSN,6,9),?13,$P(JOB,U,4),?21,OCC,?27,$E(ROLE,1,19),?49,YEAR,?60,$P(PRSNA,U,28)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",76,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNREV1",77,0)=" I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR(PRSNOPT)"
^XTMP("XPDT",7815,"RTN","PRSNREV1",78,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRIA")="0^22^B6243918^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRIA",1,0)="PRSNRIA ;WOIFO/DAM - Nurse POC Report;9/3/2009"
^XTMP("XPDT",7815,"RTN","PRSNRIA",2,0)=" ;;4.0;PAID;**126**;Sep 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRIA",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNRIA",4,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",5,0)="DEP ; Entry point for Data Entry Personnel"
^XTMP("XPDT",7815,"RTN","PRSNRIA",6,0)=" N PRSIEN,GROUP"
^XTMP("XPDT",7815,"RTN","PRSNRIA",7,0)=" D ACCESS^PRSNUT02(.GROUP,""E"",DT)"
^XTMP("XPDT",7815,"RTN","PRSNRIA",8,0)=" Q:$P($G(GROUP(0)),U)=""E"""
^XTMP("XPDT",7815,"RTN","PRSNRIA",9,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNRIA",10,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRIA",11,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",12,0)="DAP ; Entry point for Data Approval Personnel"
^XTMP("XPDT",7815,"RTN","PRSNRIA",13,0)=" N PRSIEN,GROUP"
^XTMP("XPDT",7815,"RTN","PRSNRIA",14,0)=" D ACCESS^PRSNUT02(.GROUP,""A"",DT)"
^XTMP("XPDT",7815,"RTN","PRSNRIA",15,0)=" Q:$P($G(GROUP(0)),U)=""E"""
^XTMP("XPDT",7815,"RTN","PRSNRIA",16,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNRIA",17,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNRIA",18,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",19,0)="COORD ;Entry point for VANOD Coordinator"
^XTMP("XPDT",7815,"RTN","PRSNRIA",20,0)=" ; Coordinator has no access limits so let them pick any nurse"
^XTMP("XPDT",7815,"RTN","PRSNRIA",21,0)=" N PRSIEN,DIC,X,Y,DTOUT,DUOUT"
^XTMP("XPDT",7815,"RTN","PRSNRIA",22,0)=" S DIC=""^PRSPC("",DIC(0)=""AEQMZ"",DIC(""S"")=""I $$ISNURSE^PRSNUT01(Y)"""
^XTMP("XPDT",7815,"RTN","PRSNRIA",23,0)=" D ^DIC"
^XTMP("XPDT",7815,"RTN","PRSNRIA",24,0)=" Q:Y'>0!$D(DTOUT)!$D(DUOUT)"
^XTMP("XPDT",7815,"RTN","PRSNRIA",25,0)=" S PRSIEN=$P(Y,U)"
^XTMP("XPDT",7815,"RTN","PRSNRIA",26,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNRIA",27,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSNRIA",28,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",29,0)="NURSE ;Entry point for VANOD Nurse"
^XTMP("XPDT",7815,"RTN","PRSNRIA",30,0)=" N PRSIEN,SSN"
^XTMP("XPDT",7815,"RTN","PRSNRIA",31,0)=" S PRSIEN="""",SSN=$P($G(^VA(200,DUZ,1)),""^"",9)"
^XTMP("XPDT",7815,"RTN","PRSNRIA",32,0)=" I SSN'="""" S PRSIEN=$O(^PRSPC(""SSN"",SSN,0))"
^XTMP("XPDT",7815,"RTN","PRSNRIA",33,0)=" I 'PRSIEN W !!,*7,""Your SSN was not found in both the New Person & Employee File!"" Q"
^XTMP("XPDT",7815,"RTN","PRSNRIA",34,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",35,0)=" ; if not in 450 as a nurse then explain and quit"
^XTMP("XPDT",7815,"RTN","PRSNRIA",36,0)=" I +$$ISNURSE^PRSNUT01(PRSIEN)'>0 D NOTNRSDX^PRSNRMM1  Q"
^XTMP("XPDT",7815,"RTN","PRSNRIA",37,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",38,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNRIA",39,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRIA",40,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",41,0)="MAIN ; loop through Location or t&l "
^XTMP("XPDT",7815,"RTN","PRSNRIA",42,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNRIA",43,0)=" ; pick a NURSE from the group or the T&L unit"
^XTMP("XPDT",7815,"RTN","PRSNRIA",44,0)=" ;  "
^XTMP("XPDT",7815,"RTN","PRSNRIA",45,0)=" ;  ien value from group variable); If coordinator has already picked a "
^XTMP("XPDT",7815,"RTN","PRSNRIA",46,0)=" ;  nurse, or nurse is doing a lookup on ;self based on SSN and DUZ, then "
^XTMP("XPDT",7815,"RTN","PRSNRIA",47,0)=" ;PRSIEN is set and the line of code below will not be executed."
^XTMP("XPDT",7815,"RTN","PRSNRIA",48,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",49,0)=" N VALUE"
^XTMP("XPDT",7815,"RTN","PRSNRIA",50,0)=" I $G(PRSIEN)'>0 D"
^XTMP("XPDT",7815,"RTN","PRSNRIA",51,0)=" .  S VALUE=+GROUP($O(GROUP(0)))"
^XTMP("XPDT",7815,"RTN","PRSNRIA",52,0)=" .  Q:VALUE'>0"
^XTMP("XPDT",7815,"RTN","PRSNRIA",53,0)=" .  S PRSIEN=+$$PICKNURS^PRSNUT03($P(GROUP(0),U,2),VALUE)"
^XTMP("XPDT",7815,"RTN","PRSNRIA",54,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",55,0)=" N POCD,PPIEN,PRSNDAY,DAYNODE,RANGE,BEG,END,EXTBEG,EXTEND"
^XTMP("XPDT",7815,"RTN","PRSNRIA",56,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",57,0)=" ; User is prompted for a date or date range "
^XTMP("XPDT",7815,"RTN","PRSNRIA",58,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",59,0)=" S RANGE=$$POCRANGE^PRSNUT01()"
^XTMP("XPDT",7815,"RTN","PRSNRIA",60,0)=" ; QUIT HERE IF RANGE=0 "
^XTMP("XPDT",7815,"RTN","PRSNRIA",61,0)=" Q:+RANGE'>0"
^XTMP("XPDT",7815,"RTN","PRSNRIA",62,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",63,0)=" S BEG=$P($G(RANGE),U)"
^XTMP("XPDT",7815,"RTN","PRSNRIA",64,0)=" S END=$P($G(RANGE),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRIA",65,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",66,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",67,0)=" S PPIEN=+$G(^PRST(458,""AD"",BEG))"
^XTMP("XPDT",7815,"RTN","PRSNRIA",68,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",69,0)=" ; If a record exists for the nurse and the date range, then the "
^XTMP("XPDT",7815,"RTN","PRSNRIA",70,0)=" ; Individual Activity report is displayed"
^XTMP("XPDT",7815,"RTN","PRSNRIA",71,0)=" ; If record doesn't exist for the date range selected, then a "
^XTMP("XPDT",7815,"RTN","PRSNRIA",72,0)=" ; message is displayed, ""NO RECORDS EXIST FOR THAT DATE RANGE"","
^XTMP("XPDT",7815,"RTN","PRSNRIA",73,0)=" ; and the user is re-prompted for a date."
^XTMP("XPDT",7815,"RTN","PRSNRIA",74,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRIA",75,0)=" ;call to generate and display report for individual activity"
^XTMP("XPDT",7815,"RTN","PRSNRIA",76,0)=" N %ZIS,POP,IOP"
^XTMP("XPDT",7815,"RTN","PRSNRIA",77,0)=" S %ZIS=""MQ"""
^XTMP("XPDT",7815,"RTN","PRSNRIA",78,0)=" D ^%ZIS"
^XTMP("XPDT",7815,"RTN","PRSNRIA",79,0)=" Q:POP"
^XTMP("XPDT",7815,"RTN","PRSNRIA",80,0)=" I $D(IO(""Q"")) D"
^XTMP("XPDT",7815,"RTN","PRSNRIA",81,0)=" .  K IO(""Q"")"
^XTMP("XPDT",7815,"RTN","PRSNRIA",82,0)=" .  N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNRIA",83,0)=" .  S ZTDESC=""NURSE POINT OF CARE DAILY ACTIVITY REPORT"""
^XTMP("XPDT",7815,"RTN","PRSNRIA",84,0)=" .  S ZTRTN=""POCDSPLY^PRSNRUT0(PRSIEN,BEG,END)"""
^XTMP("XPDT",7815,"RTN","PRSNRIA",85,0)=" .  S ZTSAVE(""PRSIEN"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRIA",86,0)=" .  S ZTSAVE(""BEG"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRIA",87,0)=" .  S ZTSAVE(""END"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRIA",88,0)=" .  D ^%ZTLOAD"
^XTMP("XPDT",7815,"RTN","PRSNRIA",89,0)=" .  I $D(ZTSK) S ZTREQ=""@"" W !,""Request ""_ZTSK_"" Queued."""
^XTMP("XPDT",7815,"RTN","PRSNRIA",90,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNRIA",91,0)=" .  D POCDSPLY^PRSNRUT0(PRSIEN,BEG,END)"
^XTMP("XPDT",7815,"RTN","PRSNRIA",92,0)=" D ^%ZISC"
^XTMP("XPDT",7815,"RTN","PRSNRIA",93,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM")="0^23^B99740768^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRMM",1,0)="PRSNRMM ;WOIFO-JAH - POC Record and Timecard Mismatches;07/31/09"
^XTMP("XPDT",7815,"RTN","PRSNRMM",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRMM",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNRMM",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",6,0)="PPMM(PRSIEN,PPI,PG,STOP) ; report mismatches for a pay period"
^XTMP("XPDT",7815,"RTN","PRSNRMM",7,0)=" S STOP=+$G(STOP)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",8,0)=" S PG=+$G(PG)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",9,0)=" D HDR(.STOP,1,PRSIEN,PPI,.PG)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",10,0)=" F PRSD=1:1:14 Q:STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",11,0)=" .  K MM"
^XTMP("XPDT",7815,"RTN","PRSNRMM",12,0)=" .  D DAILYMM(.MM,PRSIEN,PPI,PRSD)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",13,0)=" .  Q:MM(0)'>0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",14,0)=" .  W !!,$P($G(^PRST(458,PPI,2)),U,PRSD)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",15,0)=" .  D DISPMM(.MM,.STOP,1,PRSIEN,PPI,PRSD)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",16,0)=" .  I (IOSL-4)<$Y D HDR(.STOP,1,PRSIEN,PPI,.PG)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",17,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM",18,0)="DISPMM(MM,STOP,HDR,PRSIEN,PPI,PRSD) ; Display a single day of mismatches between"
^XTMP("XPDT",7815,"RTN","PRSNRMM",19,0)=" ;                  a timecard and a POC record"
^XTMP("XPDT",7815,"RTN","PRSNRMM",20,0)=" ; INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRMM",21,0)=" ;   MM-(array by reference) call DAILYMM to get an array of "
^XTMP("XPDT",7815,"RTN","PRSNRMM",22,0)=" ;       mismatches to pass to this display routine"
^XTMP("XPDT",7815,"RTN","PRSNRMM",23,0)=" ;   PPI-(required) pay period IEN"
^XTMP("XPDT",7815,"RTN","PRSNRMM",24,0)=" ;   PRSD-(required) day number in pay period referenced in PPI"
^XTMP("XPDT",7815,"RTN","PRSNRMM",25,0)=" ;   HDR-(optional) set to true if you want a header included"
^XTMP("XPDT",7815,"RTN","PRSNRMM",26,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",27,0)=" ; OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRMM",28,0)=" ;   STOP-reference variable returned as true if the user was"
^XTMP("XPDT",7815,"RTN","PRSNRMM",29,0)=" ;        prompted to continue and responded with an '^' to quit"
^XTMP("XPDT",7815,"RTN","PRSNRMM",30,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",31,0)=" N T1,T2,TT,P1,P2,PT,PTE,TTE,MISM,DASH"
^XTMP("XPDT",7815,"RTN","PRSNRMM",32,0)=" I $G(STOP)'>0 S STOP=0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",33,0)=" I $G(HDR)'>0 S HDR=0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",34,0)=" S DASH="" -"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",35,0)=" S J=0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",36,0)=" F  S J=$O(MM(J)) Q:J'>0!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",37,0)=" .  I (IOSL-4)<$Y D HDR(.STOP,HDR,PRSIEN,PPI,.PG)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",38,0)=" .  Q:STOP"
^XTMP("XPDT",7815,"RTN","PRSNRMM",39,0)=" .  S MISM=$G(MM(J))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",40,0)=" .  S T1=$$ETIM($P(MISM,U))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",41,0)=" .  S T2=$$ETIM($P(MISM,U,2))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",42,0)=" .  S TT=$P(MISM,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",43,0)=" .  S TTE=$P(MISM,U,4)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",44,0)=" .  S P1=$$ETIM($P(MISM,U,5))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",45,0)=" .  S P2=$$ETIM($P(MISM,U,6))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",46,0)=" .  S PT=$P(MISM,U,7)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",47,0)=" .  S PTE=$P(MISM,U,8)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",48,0)=" .  W !,$J(T1,7),DASH,$J(T2,7),?19,TT,?24,TTE,?40,$J(P1,7),DASH,$J(P2,7),?60,PT,?64,PTE"
^XTMP("XPDT",7815,"RTN","PRSNRMM",49,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM",50,0)="HDR(STOP,HDR,PRSIEN,PPI,PG) ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",51,0)=" I PG>0 S STOP=$$ASK^PRSLIB00()"
^XTMP("XPDT",7815,"RTN","PRSNRMM",52,0)=" Q:STOP"
^XTMP("XPDT",7815,"RTN","PRSNRMM",53,0)=" W @IOF,! S PG=PG+1"
^XTMP("XPDT",7815,"RTN","PRSNRMM",54,0)=" I HDR D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",55,0)=" .  N PPE,PPBEG,PPEND,TITLE,TITLE2,PGE,RUNDATE"
^XTMP("XPDT",7815,"RTN","PRSNRMM",56,0)=" .  S PPE=$P($G(^PRST(458,PPI,0)),U)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",57,0)=" .  S PPBEG=$P($G(^PRST(458,PPI,2)),U,1)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",58,0)=" .  S PPEND=$P($G(^PRST(458,PPI,2)),U,14)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",59,0)=" .  S TITLE=""Mismatch Report Between ETA Timecard & Point of Care Record"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",60,0)=" .  S TITLE2=""for Pay Period ""_PPE_"" (""_PPBEG_"" - ""_PPEND_"")"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",61,0)=" .  W ?((IOM-$L(TITLE))\2),TITLE"
^XTMP("XPDT",7815,"RTN","PRSNRMM",62,0)=" .  W !,?((IOM-$L(TITLE2))\2),TITLE2"
^XTMP("XPDT",7815,"RTN","PRSNRMM",63,0)=" .  S PGE=""Page ""_PG"
^XTMP("XPDT",7815,"RTN","PRSNRMM",64,0)=" .  I PG>0 W ?(IOM-$L(PGE)-2),PGE"
^XTMP("XPDT",7815,"RTN","PRSNRMM",65,0)=" .  S RUNDATE=""Run Date: ""_$E(DT,4,5)_""/""_$E(DT,6,7)_""/""_$E(DT,2,3)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",66,0)=" .  W !,?3,""Nurse: "",$P($G(^PRSPC(PRSIEN,0)),U)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",67,0)=" .  W ?(IOM-$L(RUNDATE)-3),RUNDATE"
^XTMP("XPDT",7815,"RTN","PRSNRMM",68,0)=" .  W !!,?9,""ETA TIMECARD"",?46,""POINT OF CARE RECORD"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",69,0)=" .  W !,?2,""================================="",?40,""==================================="""
^XTMP("XPDT",7815,"RTN","PRSNRMM",70,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM",71,0)="DAILYMM(MM,PRSIEN,PPI,PRSD) ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",72,0)=" ; INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRMM",73,0)=" ;   PRSIEN: 450/451 IEN"
^XTMP("XPDT",7815,"RTN","PRSNRMM",74,0)=" ;   PPI: 451/458 Pay Period IEN"
^XTMP("XPDT",7815,"RTN","PRSNRMM",75,0)=" ;   PRSD: day 1-14 of pay period"
^XTMP("XPDT",7815,"RTN","PRSNRMM",76,0)=" ; OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRMM",77,0)=" ;   MM - mismatch array index 1..n for each mismatch"
^XTMP("XPDT",7815,"RTN","PRSNRMM",78,0)=" ;   MM(0) = number of mismatches and zero for none"
^XTMP("XPDT",7815,"RTN","PRSNRMM",79,0)=" ;   MM(0+n) = TC Seg start^TC Seg Stop^TT^POC seg start^POC seg stop^TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",80,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",81,0)=" ;Loop through Timecard storing types of time in TD string and TD array"
^XTMP("XPDT",7815,"RTN","PRSNRMM",82,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",83,0)=" S MM(0)=0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",84,0)=" D BLDTC(.TD,PRSIEN,PPI,PRSD,0)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",85,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",86,0)=" ; Loop through POC Record storing time in ND string and ND array"
^XTMP("XPDT",7815,"RTN","PRSNRMM",87,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",88,0)=" D BLDPOC(.ND,PRSIEN,PPI,PRSD,0)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",89,0)=" I '$D(ND) S MM=""-1^NO POC RECORD"" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM",90,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",91,0)=" ;  Strings will look like"
^XTMP("XPDT",7815,"RTN","PRSNRMM",92,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",93,0)=" ;  TD=""00000000000000000AAAAAAAAAAAAAAAAAA000000000000000000000..."""
^XTMP("XPDT",7815,"RTN","PRSNRMM",94,0)=" ;  ND=""00000000000000000AAAAAAAAAAAAAAAAAAWWWWWWWWWWWWWWWWWWW00..."""
^XTMP("XPDT",7815,"RTN","PRSNRMM",95,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",96,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",97,0)=" ;  arrays will look like:"
^XTMP("XPDT",7815,"RTN","PRSNRMM",98,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",99,0)=" ;   TD(0)=code^segment start^segment stop^ETA TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",100,0)=" ;   TD(1)=code^segment start^segment stop^ETA TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",101,0)=" ;   TD(3)=code^segment start^segment stop^ETA TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",102,0)=" ;   TD(4)=code^segment start^segment stop^ETA TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",103,0)=" ;   ....."
^XTMP("XPDT",7815,"RTN","PRSNRMM",104,0)=" ;   TD(188)=code^segment start^segment stop^ETA TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",105,0)=" ;   TD(189)=code^segment start^segment stop^ETA TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",106,0)=" ;   TD(190)=code^segment start^segment stop^ETA TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",107,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",108,0)=" ;   ND(0)=code^segment start^segment stop^POC TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",109,0)=" ;   ND(1)=code^segment start^segment stop^POC TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",110,0)=" ;   ....."
^XTMP("XPDT",7815,"RTN","PRSNRMM",111,0)=" ;   ND(191)=code^segment start^segment stop^POC TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",112,0)=" ;   ND(192)=code^segment start^segment stop^POC TT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",113,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",114,0)=" ;  If strings match there are no mismatches and we are done."
^XTMP("XPDT",7815,"RTN","PRSNRMM",115,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",116,0)=" I ND=TD Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM",117,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",118,0)=" ; traverse strings until first mismatched characters are found."
^XTMP("XPDT",7815,"RTN","PRSNRMM",119,0)=" ;  Once a mismatch is found determine the segments associated with"
^XTMP("XPDT",7815,"RTN","PRSNRMM",120,0)=" ; each of the corresponding characters that mismatch."
^XTMP("XPDT",7815,"RTN","PRSNRMM",121,0)=" ;  This can easily be found because the ND and TD arrays have"
^XTMP("XPDT",7815,"RTN","PRSNRMM",122,0)=" ; stored the start and stop of each segment in the node where"
^XTMP("XPDT",7815,"RTN","PRSNRMM",123,0)=" ; corresponding to the position in the ND and TD strings."
^XTMP("XPDT",7815,"RTN","PRSNRMM",124,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",125,0)=" N TCBEG,TCEND,TCBEGI,TCENDI,POCTT,POCBEGI,POCENDI,POCBEG,POCEND"
^XTMP("XPDT",7815,"RTN","PRSNRMM",126,0)=" N I,POCTT,POCTTE,TCTT,TCTTE"
^XTMP("XPDT",7815,"RTN","PRSNRMM",127,0)=" F I=1:1:192 I $E(ND,I)'=$E(TD,I) D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",128,0)=" .  S MM(0)=MM(0)+1"
^XTMP("XPDT",7815,"RTN","PRSNRMM",129,0)=" .  S TCTT=$P(TD(I),U,5)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",130,0)=" .  S TCTTE=$$TTE^PRSPSAPU(TCTT)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",131,0)=" .  I $P(TD(I),U,2)=""Z"" S TCTT="""",TCTTE=""Unposted Tour"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",132,0)=" .  S TCBEGI=+$P(TD(I),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",133,0)=" .  S TCENDI=+$P(TD(I),U,4)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",134,0)=" .  S POCTT=$P(ND(I),U,5)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",135,0)=" .  S POCTTE=$$TTE^PRSPSAPU(POCTT)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",136,0)=" .  S POCBEGI=+$P(ND(I),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",137,0)=" .  S POCENDI=+$P(ND(I),U,4)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",138,0)=" .  S TCBEG=+$G(TD(TCBEGI))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",139,0)=" .  S TCEND=+$G(TD(TCENDI+1))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",140,0)=" .  S POCBEG=+$G(ND(POCBEGI))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",141,0)=" .  S POCEND=+$G(ND(POCENDI+1))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",142,0)=" .;   Adjust end points of segment for clearer reporting when "
^XTMP("XPDT",7815,"RTN","PRSNRMM",143,0)=" .;   POC or ETA has no data at the point of mismatch"
^XTMP("XPDT",7815,"RTN","PRSNRMM",144,0)=" .  I $E(TD,I)=0 D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",145,0)=" ..   I TCENDI>POCENDI S TCEND=+$G(ND(POCENDI+1))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",146,0)=" ..   I TCBEGI<POCBEGI S TCBEG=+$G(ND(POCBEGI))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",147,0)=" ..   S TCTTE=""No Data"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",148,0)=" .  I $E(ND,I)=0 D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",149,0)=" ..   I POCENDI>TCENDI S POCEND=+$G(TD(TCENDI+1))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",150,0)=" ..   I POCBEGI<TCBEGI S POCBEG=+$G(TD(TCBEGI))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",151,0)=" ..   S POCTTE=""No Data"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",152,0)=" .  S MM(+MM(0))=TCBEG_U_TCEND_U_TCTT_U_TCTTE_U_POCBEG_U_POCEND_U_POCTT_U_POCTTE"
^XTMP("XPDT",7815,"RTN","PRSNRMM",153,0)=" .;  start the search back up at the end of the shorter segment"
^XTMP("XPDT",7815,"RTN","PRSNRMM",154,0)=" .;  unless there is no time in the shorter segment"
^XTMP("XPDT",7815,"RTN","PRSNRMM",155,0)=" .  I POCENDI=0 S I=TCENDI Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM",156,0)=" .  I TCENDI=0 S I=POCENDI Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM",157,0)=" .  I POCENDI>TCENDI D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",158,0)=" ..    S I=TCENDI"
^XTMP("XPDT",7815,"RTN","PRSNRMM",159,0)=" .  E  D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",160,0)=" ..    S I=POCENDI"
^XTMP("XPDT",7815,"RTN","PRSNRMM",161,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM",162,0)="BLDPOC(ND,PRSIEN,PPI,PRSD,ACTIVITY) ; Build string and array from POC day"
^XTMP("XPDT",7815,"RTN","PRSNRMM",163,0)=" ; initialize ND"
^XTMP("XPDT",7815,"RTN","PRSNRMM",164,0)=" ; INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRMM",165,0)=" ;   PRSIEN: 450 IEN"
^XTMP("XPDT",7815,"RTN","PRSNRMM",166,0)=" ;   PPI:  458/451 IEN"
^XTMP("XPDT",7815,"RTN","PRSNRMM",167,0)=" ;   PRSD: Pay period day number 1-14"
^XTMP("XPDT",7815,"RTN","PRSNRMM",168,0)=" ;   ACTIVITY: flag set to true if you want to have only portions"
^XTMP("XPDT",7815,"RTN","PRSNRMM",169,0)=" ;             of the array with activity to be returned."
^XTMP("XPDT",7815,"RTN","PRSNRMM",170,0)=" ;   ND: activity string and array"
^XTMP("XPDT",7815,"RTN","PRSNRMM",171,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",172,0)=" N I,POCD,J,CC,SET,T1,T2,TT,SEG"
^XTMP("XPDT",7815,"RTN","PRSNRMM",173,0)=" F I=1:1:192 S $E(ND,I)=0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",174,0)=" F I=1:1:193 S ND(I)=+$$POSTIM(I,1)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",175,0)=" D L1^PRSNRUT1(.POCD,PPI,PRSIEN,PRSD)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",176,0)=" S SEG=0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",177,0)=" F  S SEG=$O(POCD(SEG)) Q:SEG'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",178,0)=" .  S T1=$$TIMEPOS($P(POCD(SEG),U,9),1)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",179,0)=" .  S T2=$$TIMEPOS($P(POCD(SEG),U,10),0)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",180,0)=" .  S TT=$P(POCD(SEG),U,4)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",181,0)=" .  S CC=$$CONVERT(TT)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",182,0)=" .  F J=T1:1:T2 Q:J>192  S $P(ND(J),U,2,5)=CC_U_T1_U_T2_U_TT,$E(ND,J)=CC"
^XTMP("XPDT",7815,"RTN","PRSNRMM",183,0)=" ; loop through activity again to update all the start and stop"
^XTMP("XPDT",7815,"RTN","PRSNRMM",184,0)=" ; times for each segment, this will give segment start and stops"
^XTMP("XPDT",7815,"RTN","PRSNRMM",185,0)=" ; to periods where there is no data"
^XTMP("XPDT",7815,"RTN","PRSNRMM",186,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",187,0)=" N LQH,NEWSTART,QH,NEWEND"
^XTMP("XPDT",7815,"RTN","PRSNRMM",188,0)=" S LQH=0,NEWSTART=1"
^XTMP("XPDT",7815,"RTN","PRSNRMM",189,0)=" F I=1:1:192 D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",190,0)=" .  S QH=$E(ND,I)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",191,0)=" .  I LQH'=QH S NEWSTART=I,LQH=QH"
^XTMP("XPDT",7815,"RTN","PRSNRMM",192,0)=" .  S $P(ND(I),U,3)=NEWSTART"
^XTMP("XPDT",7815,"RTN","PRSNRMM",193,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",194,0)=" S LQH=0,NEWEND=192"
^XTMP("XPDT",7815,"RTN","PRSNRMM",195,0)=" F I=192:-1:1 D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",196,0)=" .  S QH=$E(ND,I)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",197,0)=" .  I LQH'=QH S NEWEND=I,LQH=QH"
^XTMP("XPDT",7815,"RTN","PRSNRMM",198,0)=" .  S $P(ND(I),U,4)=NEWEND"
^XTMP("XPDT",7815,"RTN","PRSNRMM",199,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",200,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",201,0)=" ; If activity is true remove all nodes with no activity"
^XTMP("XPDT",7815,"RTN","PRSNRMM",202,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",203,0)=" I ACTIVITY D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",204,0)=" . F I=1:1:193 I $P($G(ND(I)),U,2)="""" K ND(I)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",205,0)=" . S ND=0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",206,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",207,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM",208,0)="BLDTC(TD,PRSIEN,PPI,PRSD,ACTIVITY) ; Build string and array from Time Card day"
^XTMP("XPDT",7815,"RTN","PRSNRMM",209,0)=" ; initialize TD"
^XTMP("XPDT",7815,"RTN","PRSNRMM",210,0)=" ;  INPUT:  standard PRSIEN, PPI, PRSD"
^XTMP("XPDT",7815,"RTN","PRSNRMM",211,0)=" ;          ACTIVITY-(optional) flag set to true if return array"
^XTMP("XPDT",7815,"RTN","PRSNRMM",212,0)=" ;                   should only contain nodes with activity"
^XTMP("XPDT",7815,"RTN","PRSNRMM",213,0)=" ;  OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRMM",214,0)=" ;   TD (string) with 192 characters representing each 15 minutes of"
^XTMP("XPDT",7815,"RTN","PRSNRMM",215,0)=" ;      the day"
^XTMP("XPDT",7815,"RTN","PRSNRMM",216,0)=" ;   if ACTIVITY parameter true then TD string will be set as follows:"
^XTMP("XPDT",7815,"RTN","PRSNRMM",217,0)=" ;        TD = timecard posting status ^ tour of duty IEN"
^XTMP("XPDT",7815,"RTN","PRSNRMM",218,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",219,0)=" ;   TD(1..192)--array with nodes of activity for each 15 min."
^XTMP("XPDT",7815,"RTN","PRSNRMM",220,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",221,0)=" N I,J,CC,SET,T1,T2,TT,TC,TOD,TODD,TCD,X,Y,POSTED,DAYOFF"
^XTMP("XPDT",7815,"RTN","PRSNRMM",222,0)=" F I=1:1:193 S TD(I)=+$$POSTIM(I,1)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",223,0)=" D LOADTOD^PRSPLVU(PPI,PRSIEN,PRSD,.TOD,.TODD)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",224,0)=" D LOADTC^PRSPLVU(PPI,PRSIEN,PRSD,.TCD)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",225,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",226,0)=" ; Check for no time posted on the timecard"
^XTMP("XPDT",7815,"RTN","PRSNRMM",227,0)=" N X0,PSTAT"
^XTMP("XPDT",7815,"RTN","PRSNRMM",228,0)=" S X0=$G(^PRST(458,PPI,""E"",PRSIEN,""D"",PRSD,0))"
^XTMP("XPDT",7815,"RTN","PRSNRMM",229,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",230,0)=" ; posting status--(T)imekeeper, (P)ayroll, (X)mitted"
^XTMP("XPDT",7815,"RTN","PRSNRMM",231,0)=" S PSTAT=$P($G(^(10)),""^"",1)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",232,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",233,0)=" ; tour of duty (1=day off, 3,4=intermittent)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",234,0)=" S TC=$P(X0,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",235,0)=" S POSTED=1"
^XTMP("XPDT",7815,"RTN","PRSNRMM",236,0)=" I ""1 3 4""'[TC,PSTAT="""" S (PSTAT,POSTED)=0 ;  - no posting to tour"
^XTMP("XPDT",7815,"RTN","PRSNRMM",237,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",238,0)=" F I=1:1:192 S $E(TD,I)=0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",239,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",240,0)=" S SEG=0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",241,0)=" F  S SEG=$O(TOD(SEG)) Q:SEG'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",242,0)=" .  S TT=$P(TOD(SEG),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",243,0)=" .  I TT=""RG"" S TT=""WI"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",244,0)=" .  S CC=$$CONVERT(TT)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",245,0)=" .  S POC=$$CNVTTPOC(TT)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",246,0)=" .  I 'POSTED S CC=""Z"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",247,0)=" .  S T1=$P(TOD(SEG),U,4)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",248,0)=" .  S X=T1,Y=0 D MIL^PRSATIM S T1=Y"
^XTMP("XPDT",7815,"RTN","PRSNRMM",249,0)=" .  S T2=$P(TOD(SEG),U,5)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",250,0)=" .  S X=T2,Y=1 D MIL^PRSATIM S T2=Y"
^XTMP("XPDT",7815,"RTN","PRSNRMM",251,0)=" .  ; if the start time is earlier than the stop time then it"
^XTMP("XPDT",7815,"RTN","PRSNRMM",252,0)=" .  ; must be a time on a second day of a two day tour"
^XTMP("XPDT",7815,"RTN","PRSNRMM",253,0)=" .  I T1>T2 S T2=T2+2400"
^XTMP("XPDT",7815,"RTN","PRSNRMM",254,0)=" .  S T1=$$TIMEPOS(T1,1)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",255,0)=" .  S T2=$$TIMEPOS(T2,0)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",256,0)=" .  F J=T1:1:T2 Q:J>192  S $P(TD(J),U,2,6)=CC_U_T1_U_T2_U_TT_U_POC,$E(TD,J)=CC"
^XTMP("XPDT",7815,"RTN","PRSNRMM",257,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",258,0)=" ; place posted exceptions"
^XTMP("XPDT",7815,"RTN","PRSNRMM",259,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",260,0)=" S SEG=0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",261,0)=" F  S SEG=$O(TCD(SEG)) Q:SEG'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",262,0)=" .  S TT=$P(TCD(SEG),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",263,0)=" .  S T1=$P(TCD(SEG),U,4)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",264,0)=" .  S X=T1,Y=0 D MIL^PRSATIM S T1=Y"
^XTMP("XPDT",7815,"RTN","PRSNRMM",265,0)=" .  S T2=$P(TCD(SEG),U,5)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",266,0)=" .  S X=T2,Y=1 D MIL^PRSATIM S T2=Y"
^XTMP("XPDT",7815,"RTN","PRSNRMM",267,0)=" .  ; if the start time is earlier than the stop time then it"
^XTMP("XPDT",7815,"RTN","PRSNRMM",268,0)=" .  ; must be a time on a second day of a two day tour"
^XTMP("XPDT",7815,"RTN","PRSNRMM",269,0)=" .  I T1>T2 S T2=T2+2400"
^XTMP("XPDT",7815,"RTN","PRSNRMM",270,0)=" .  S T1=$$TIMEPOS(T1,1)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",271,0)=" .  S T2=$$TIMEPOS(T2,0)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",272,0)=" .  S CC=$$CONVERT(TT)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",273,0)=" .  S POC=$$CNVTTPOC(TT)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",274,0)=" .  F J=T1:1:T2 Q:J>192  S $P(TD(J),U,2,6)=CC_U_T1_U_T2_U_TT_U_POC,$E(TD,J)=CC"
^XTMP("XPDT",7815,"RTN","PRSNRMM",275,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",276,0)=" ; place meal"
^XTMP("XPDT",7815,"RTN","PRSNRMM",277,0)=" ;TODD(1)=""3090917^3090918.08^30^2"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",278,0)=" N LEN,LONGSEG,MEAL,EN,STPOS,ENPOS,MIDPOS,MLOC,ST"
^XTMP("XPDT",7815,"RTN","PRSNRMM",279,0)=" I +$P($G(TODD(1)),U,3)>0 D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",280,0)=" .S MEAL=0"
^XTMP("XPDT",7815,"RTN","PRSNRMM",281,0)=" .F  S MEAL=$O(TODD(MEAL)) Q:MEAL'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",282,0)=" ..   S LEN=$P(TODD(MEAL),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",283,0)=" ..   S LONGSEG=$P(TODD(MEAL),U,4)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",284,0)=" ..;;;;;; start of longest tour segment"
^XTMP("XPDT",7815,"RTN","PRSNRMM",285,0)=" ..   S ST=$P(TOD(MEAL_""-""_LONGSEG),U,4)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",286,0)=" ..   S X=ST,Y=0 D MIL^PRSATIM S ST=Y"
^XTMP("XPDT",7815,"RTN","PRSNRMM",287,0)=" ..;;;;;; end of longest tour segment"
^XTMP("XPDT",7815,"RTN","PRSNRMM",288,0)=" ..   S EN=$P(TOD(MEAL_""-""_LONGSEG),U,5)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",289,0)=" ..   S X=EN,Y=1 D MIL^PRSATIM S EN=Y"
^XTMP("XPDT",7815,"RTN","PRSNRMM",290,0)=" ..;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",291,0)=" ..   I ST>EN S EN=EN+2400"
^XTMP("XPDT",7815,"RTN","PRSNRMM",292,0)=" ..;;;;;;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",293,0)=" ..   S STPOS=$$TIMEPOS(ST,1)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",294,0)=" ..   S ENPOS=$$TIMEPOS(EN,0)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",295,0)=" ..   S MIDPOS=STPOS+((ENPOS-STPOS)\2)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",296,0)=" ..;;;;;;; get starting location of the segment where this midway falls"
^XTMP("XPDT",7815,"RTN","PRSNRMM",297,0)=" ..   S MLOC=$P(TD(MIDPOS),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",298,0)=" ..   S $P(TD(MLOC),U,7)=LEN"
^XTMP("XPDT",7815,"RTN","PRSNRMM",299,0)=" ; loop through activity again to update all the start and stop"
^XTMP("XPDT",7815,"RTN","PRSNRMM",300,0)=" ; times for each segment, since exceptions that overwrote the tour"
^XTMP("XPDT",7815,"RTN","PRSNRMM",301,0)=" ; will change the start and stops for subsections of tour"
^XTMP("XPDT",7815,"RTN","PRSNRMM",302,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",303,0)=" S LQH=0,NEWSTART=1"
^XTMP("XPDT",7815,"RTN","PRSNRMM",304,0)=" F I=1:1:192 D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",305,0)=" .  S QH=$E(TD,I)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",306,0)=" .  I LQH'=QH S NEWSTART=I,LQH=QH"
^XTMP("XPDT",7815,"RTN","PRSNRMM",307,0)=" .  S $P(TD(I),U,3)=NEWSTART"
^XTMP("XPDT",7815,"RTN","PRSNRMM",308,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",309,0)=" S LQH=0,NEWEND=192"
^XTMP("XPDT",7815,"RTN","PRSNRMM",310,0)=" F I=192:-1:1 D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",311,0)=" .  S QH=$E(TD,I)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",312,0)=" .  I LQH'=QH S NEWEND=I,LQH=QH"
^XTMP("XPDT",7815,"RTN","PRSNRMM",313,0)=" .  S $P(TD(I),U,4)=NEWEND"
^XTMP("XPDT",7815,"RTN","PRSNRMM",314,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",315,0)=" ; If activity is true remove all nodes with no activity"
^XTMP("XPDT",7815,"RTN","PRSNRMM",316,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",317,0)=" I ACTIVITY D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",318,0)=" . F I=1:1:193 I $P($G(TD(I)),U,2)="""" K TD(I)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",319,0)=" . S TD=PSTAT_U_TC"
^XTMP("XPDT",7815,"RTN","PRSNRMM",320,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",321,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM",322,0)="CNVTTPOC(TT) ; convert an ETA type of time to POC time"
^XTMP("XPDT",7815,"RTN","PRSNRMM",323,0)=" N TC,POC,CODEPOS"
^XTMP("XPDT",7815,"RTN","PRSNRMM",324,0)=" S POC=""AA^AA^AD^AL^CB^CU^DL^RL^RS^HX^ML^SL^WP^NL^NP^WI^TR^TV^WO^WO^WO^WO^HW^^^^"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",325,0)=" S TC=""AA^CP^AD^AL^CB^CU^DL^RL^RS^HX^ML^SL^WP^NL^NP^WI^TR^TV^WO^OT^CT^RG^HW^UN^ON^SB^"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",326,0)=" S CODEPOS=$FIND(TC,TT)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",327,0)=" Q $P(POC,U,CODEPOS/3)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",328,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",329,0)="CONVERT(TT) ; Convert a type of time code to a comparison code"
^XTMP("XPDT",7815,"RTN","PRSNRMM",330,0)=" ;                                            COMPARISON"
^XTMP("XPDT",7815,"RTN","PRSNRMM",331,0)=" ; ETA                   POC                   STRINGS"
^XTMP("XPDT",7815,"RTN","PRSNRMM",332,0)=" ; CODE ETA DX          CODE    POC DX         CODE"
^XTMP("XPDT",7815,"RTN","PRSNRMM",333,0)=" ; ==== ===============  =====   ===========    ====="
^XTMP("XPDT",7815,"RTN","PRSNRMM",334,0)=" ; AA   Auth Abs           AA    Auth Abs         A"
^XTMP("XPDT",7815,"RTN","PRSNRMM",335,0)=" ; CP   Cont of Pay        AA    Auth Abs         A"
^XTMP("XPDT",7815,"RTN","PRSNRMM",336,0)=" ; AD   Adoption           AD    Adoption         D"
^XTMP("XPDT",7815,"RTN","PRSNRMM",337,0)=" ; AL   Annual Leave       AL    Annual Leave     L"
^XTMP("XPDT",7815,"RTN","PRSNRMM",338,0)=" ; CB   Fam Care Bereav    CB    Fam Care Bereav  B"
^XTMP("XPDT",7815,"RTN","PRSNRMM",339,0)=" ; CU   Comp/Cred Used     CU    Comp/Cred Used   U"
^XTMP("XPDT",7815,"RTN","PRSNRMM",340,0)=" ; DL   Donor Leave        DL    Donor Leave      d"
^XTMP("XPDT",7815,"RTN","PRSNRMM",341,0)=" ; RL   Restored AL        RL    Restored AL      R"
^XTMP("XPDT",7815,"RTN","PRSNRMM",342,0)=" ; RS   Recess             RS    Recess           r"
^XTMP("XPDT",7815,"RTN","PRSNRMM",343,0)=" ; HX   Holiday Excused    HX    Holiday Excused  h"
^XTMP("XPDT",7815,"RTN","PRSNRMM",344,0)=" ; ML   Military Leave     ML    Military Leave   M"
^XTMP("XPDT",7815,"RTN","PRSNRMM",345,0)=" ; SL   Sick Leave         SL    Sick Leave       S"
^XTMP("XPDT",7815,"RTN","PRSNRMM",346,0)=" ; WP   Leave w/o Pay      WP    Leave w/o Pay    W"
^XTMP("XPDT",7815,"RTN","PRSNRMM",347,0)=" ; NL   Non-Pay AL         NL    Non-Pay AL       n"
^XTMP("XPDT",7815,"RTN","PRSNRMM",348,0)=" ; NP   Non-Pay            NP    Non-Pay          N"
^XTMP("XPDT",7815,"RTN","PRSNRMM",349,0)=" ;      Tour Time (posted) WI    Work in tour     W"
^XTMP("XPDT",7815,"RTN","PRSNRMM",350,0)=" ; TR   Train (in tour)    TR    Work in Tour     W"
^XTMP("XPDT",7815,"RTN","PRSNRMM",351,0)=" ; TV   Travel (in tour)   TV    Work in Tour     W"
^XTMP("XPDT",7815,"RTN","PRSNRMM",352,0)=" ; OT   Overtime           WO    Work out of tour w"
^XTMP("XPDT",7815,"RTN","PRSNRMM",353,0)=" ; CT   Comp/Cred Earn     WO    Work out of tour w"
^XTMP("XPDT",7815,"RTN","PRSNRMM",354,0)=" ; RG   Reg Sched          WO    Work out of tour w"
^XTMP("XPDT",7815,"RTN","PRSNRMM",355,0)=" ; HW   Hol Work (in tour) HW                     H"
^XTMP("XPDT",7815,"RTN","PRSNRMM",356,0)=" ; UN   Unavailable      Not reported          Ignored"
^XTMP("XPDT",7815,"RTN","PRSNRMM",357,0)=" ; ON   On-Call          Not reported          Ignored"
^XTMP("XPDT",7815,"RTN","PRSNRMM",358,0)=" ; SB   Standby          Not reported          Ignored"
^XTMP("XPDT",7815,"RTN","PRSNRMM",359,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",360,0)=" N TC,CC,CODEPOS"
^XTMP("XPDT",7815,"RTN","PRSNRMM",361,0)=" S CC=""AADLBUdRrhMSWnNWWWwwwwH000"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",362,0)=" S TC=""AA^CP^AD^AL^CB^CU^DL^RL^RS^HX^ML^SL^WP^NL^NP^WI^TR^TV^WO^OT^CT^RG^HW^UN^ON^SB^"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",363,0)=" S CODEPOS=$FIND(TC,TT)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",364,0)=" Q $E(CC,CODEPOS/3)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",365,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",366,0)="TIMEPOS(MT,SORE) ; Convert MILTIME to positional int. where 1 represents"
^XTMP("XPDT",7815,"RTN","PRSNRMM",367,0)=" ; the period from Mid-12:15, 2 - 12:15-12:30, and so on, with 96 "
^XTMP("XPDT",7815,"RTN","PRSNRMM",368,0)=" ; representing the period from 11:45pm to mid."
^XTMP("XPDT",7815,"RTN","PRSNRMM",369,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",370,0)=" ;  INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRMM",371,0)=" ;      MT: military time from 0 to 4800 (2 day clock)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",372,0)=" ;      SORE-flag 0 for start time 1 for end time (required)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",373,0)=" ;  OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRMM",374,0)=" ;      integer value specifying the position in a string"
^XTMP("XPDT",7815,"RTN","PRSNRMM",375,0)=" ;      where each position represents a 15 minute increment of the day"
^XTMP("XPDT",7815,"RTN","PRSNRMM",376,0)=" ; 0=1"
^XTMP("XPDT",7815,"RTN","PRSNRMM",377,0)=" ; 15=2"
^XTMP("XPDT",7815,"RTN","PRSNRMM",378,0)=" ; 30=3"
^XTMP("XPDT",7815,"RTN","PRSNRMM",379,0)=" ; ..."
^XTMP("XPDT",7815,"RTN","PRSNRMM",380,0)=" ; 300=13"
^XTMP("XPDT",7815,"RTN","PRSNRMM",381,0)=" ; 315=14"
^XTMP("XPDT",7815,"RTN","PRSNRMM",382,0)=" ; ..."
^XTMP("XPDT",7815,"RTN","PRSNRMM",383,0)=" ; 1000=50"
^XTMP("XPDT",7815,"RTN","PRSNRMM",384,0)=" ; ..."
^XTMP("XPDT",7815,"RTN","PRSNRMM",385,0)=" ; 1100=55"
^XTMP("XPDT",7815,"RTN","PRSNRMM",386,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",387,0)=" Q ((MT\100)*4)+((("".""_$P(MT/100,""."",2))*100)/15)+$G(SORE)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",388,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",389,0)="POSTIM(I,BORE) ; convert the positional integer time to military time"
^XTMP("XPDT",7815,"RTN","PRSNRMM",390,0)=" ;  INPUT: BORE-0=START, 1=END, flag specifies if this is a "
^XTMP("XPDT",7815,"RTN","PRSNRMM",391,0)=" ;           start time or end time"
^XTMP("XPDT",7815,"RTN","PRSNRMM",392,0)=" N MINS"
^XTMP("XPDT",7815,"RTN","PRSNRMM",393,0)=" S I=I-$G(BORE)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",394,0)=" S MINS=I#4*15 I 'MINS S MINS=""00"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",395,0)=" Q (I\4)_MINS"
^XTMP("XPDT",7815,"RTN","PRSNRMM",396,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",397,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",398,0)="ETIM(MIL) ; Convert a military time to a standard time"
^XTMP("XPDT",7815,"RTN","PRSNRMM",399,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM",400,0)=" N T,H,M"
^XTMP("XPDT",7815,"RTN","PRSNRMM",401,0)=" I (MIL#2400)=0 Q ""MID"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",402,0)=" I (MIL#1200)=0 Q ""NOON"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",403,0)=" S T=MIL/100 S H=$P(T,""."",1),M=$P(T,""."",2)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",404,0)=" I (H#12)=0 Q ""12""_"":""_M_$S(H=12:""PM"",H=24:""AM"",1:""PM"")"
^XTMP("XPDT",7815,"RTN","PRSNRMM",405,0)=" S M=$S($L(M)=0:""00"",$L(M)=1:M_""0"",1:M)"
^XTMP("XPDT",7815,"RTN","PRSNRMM",406,0)=" I (MIL<1200) Q H_"":""_M_""AM"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",407,0)=" I MIL>1200,MIL<2400 Q H-12_"":""_M_""PM"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",408,0)=" I MIL>2400,MIL<3600 Q H-24_"":""_M_""AM"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",409,0)=" I MIL>3600 Q H-36_"":""_M_""PM"""
^XTMP("XPDT",7815,"RTN","PRSNRMM",410,0)=" Q -1"
^XTMP("XPDT",7815,"RTN","PRSNRMM1")="0^24^B8074438^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",1,0)="PRSNRMM1 ;WOIFO-JAH - POC Record and Timecard Mismatches;07/31/09"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNRMM1",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",6,0)="NURSE ;Nurse view their own mismatch data entry point"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",7,0)=" N PRSIEN,SSN,X"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",8,0)=" S PRSIEN="""",SSN=$P($G(^VA(200,DUZ,1)),""^"",9)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",9,0)=" I SSN'="""" S PRSIEN=$O(^PRSPC(""SSN"",SSN,0))"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",10,0)=" I 'PRSIEN D  Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",11,0)=" .  W !!,*7"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",12,0)=" .  W ""Your SSN was not found in both the New Person & Employee File!"""
^XTMP("XPDT",7815,"RTN","PRSNRMM1",13,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",14,0)=" ; if not in 450 as a nurse then explain and quit"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",15,0)=" I +$$ISNURSE^PRSNUT01(PRSIEN)'>0 D NOTNRSDX  Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",16,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",17,0)=" ; get pay period and report mismatches"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",18,0)=" D MAIN(PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",19,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",20,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",21,0)="NOTNRSDX ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",22,0)=" N X"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",23,0)=" W !!,*7"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",24,0)=" W ?5,""Your PAID-ETA parameters for your current log on do not reflect"""
^XTMP("XPDT",7815,"RTN","PRSNRMM1",25,0)=" W !,?5,""the parameters required for Nursing Point of Care Data."",!"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",26,0)=" S X=$$ASK^PRSLIB00(1)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",27,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",28,0)="COORD ;VANOD Site Coordinator entry point"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",29,0)=" ; Coordinator has no access limits so let them pick any nurse"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",30,0)=" N DIC,X,Y,DUOUT,DTOUT,PRSIEN"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",31,0)=" S DIC=""^PRSPC("",DIC(0)=""AEQMZ"",DIC(""S"")=""I $$ISNURSE^PRSNUT01(Y)"""
^XTMP("XPDT",7815,"RTN","PRSNRMM1",32,0)=" D ^DIC"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",33,0)=" Q:Y'>0!$D(DTOUT)!$D(DUOUT)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",34,0)=" S PRSIEN=$P(Y,U)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",35,0)=" D MAIN(PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",36,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",37,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",38,0)="DAP ; POC data approval personnel entry point"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",39,0)=" N GROUP,VALUE,PRSIEN"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",40,0)=" ; prompt DEP to select a group to report on.  They must have"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",41,0)=" ; access to the group."
^XTMP("XPDT",7815,"RTN","PRSNRMM1",42,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",43,0)=" D ACCESS^PRSNUT02(.GROUP,""A"",DT,0)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",44,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",45,0)=" ; quit if any error during group selection"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",46,0)=" I $P($G(GROUP(0)),U)=""E"" W !!!,?4,$P(GROUP(0),U,2) S X=$$ASK^PRSLIB00(1) Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",47,0)=" S VALUE=+GROUP($O(GROUP(0)))"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",48,0)=" Q:VALUE'>0"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",49,0)=" S PRSIEN=+$$PICKNURS^PRSNUT03($P(GROUP(0),U,2),VALUE)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",50,0)=" Q:PRSIEN'>0"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",51,0)=" D MAIN(PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",52,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",53,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",54,0)="DEP ; Entry point for mismatches for Data Entry Personnel."
^XTMP("XPDT",7815,"RTN","PRSNRMM1",55,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",56,0)=" N GROUP,VALUE,PRSIEN"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",57,0)=" ; prompt DEP to select a group to report on.  They must have"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",58,0)=" ; access to the group."
^XTMP("XPDT",7815,"RTN","PRSNRMM1",59,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",60,0)=" D ACCESS^PRSNUT02(.GROUP,""E"",DT,0)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",61,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",62,0)=" ; quit if any error during group selection"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",63,0)=" I $P($G(GROUP(0)),U)=""E"" W !!!,?4,$P(GROUP(0),U,2) S X=$$ASK^PRSLIB00(1) Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",64,0)=" S VALUE=+GROUP($O(GROUP(0)))"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",65,0)=" Q:VALUE'>0"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",66,0)=" S PRSIEN=+$$PICKNURS^PRSNUT03($P(GROUP(0),U,2),VALUE)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",67,0)=" Q:PRSIEN'>0"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",68,0)=" D MAIN(PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",69,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",70,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",71,0)=" ;= = = = = = = = = = = = = = = = = ="
^XTMP("XPDT",7815,"RTN","PRSNRMM1",72,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",73,0)="MAIN(PRSIEN) ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",74,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",75,0)=" N DIC,X,Y,DUOUT,DTOUT,PPI"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",76,0)=" S DIC=""^PRSN(451,"",DIC(0)=""AEQMZ"""
^XTMP("XPDT",7815,"RTN","PRSNRMM1",77,0)=" S DIC(""A"")=""Select a Pay Period: """
^XTMP("XPDT",7815,"RTN","PRSNRMM1",78,0)=" D ^DIC"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",79,0)=" Q:$D(DUOUT)!$D(DTOUT)!+$G(Y)'>0"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",80,0)=" S PPI=+Y"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",81,0)=" N %ZIS,POP,IOP"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",82,0)=" S %ZIS=""MQ"""
^XTMP("XPDT",7815,"RTN","PRSNRMM1",83,0)=" D ^%ZIS"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",84,0)=" Q:POP"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",85,0)=" I $D(IO(""Q"")) D"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",86,0)=" .  K IO(""Q"")"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",87,0)=" .  S ZTDESC=""PRSN POC/ETA MISMATCH REPORT"""
^XTMP("XPDT",7815,"RTN","PRSNRMM1",88,0)=" .  S ZTRTN=""PPMM^PRSNRMM(PRSIEN,PPI)"""
^XTMP("XPDT",7815,"RTN","PRSNRMM1",89,0)=" .  S ZTSAVE(""PRSIEN"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRMM1",90,0)=" .  S ZTSAVE(""PPI"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRMM1",91,0)=" .  D ^%ZTLOAD"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",92,0)=" .  I $D(ZTSK) S ZTREQ=""@"" W !,""Request ""_ZTSK_"" Queued."""
^XTMP("XPDT",7815,"RTN","PRSNRMM1",93,0)=" .  K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",94,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",95,0)=" .  D PPMM^PRSNRMM(PRSIEN,PPI)"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",96,0)=" D ^%ZISC"
^XTMP("XPDT",7815,"RTN","PRSNRMM1",97,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRND0")="0^25^B7645160^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRND0",1,0)="PRSNRND0 ;WOIFO/DAM - Non Direct Care Summary by Skill Mix I REPORT;9/10/2009"
^XTMP("XPDT",7815,"RTN","PRSNRND0",2,0)=" ;;4.0;PAID;** 126**;Sep 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRND0",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNRND0",4,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",6,0)="DAP ; Entry point for Data Approval Personnel"
^XTMP("XPDT",7815,"RTN","PRSNRND0",7,0)=" N GROUP"
^XTMP("XPDT",7815,"RTN","PRSNRND0",8,0)=" D ACCESS^PRSNUT02(.GROUP,""A"",DT,1)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",9,0)=" ; quit if any error during group selection"
^XTMP("XPDT",7815,"RTN","PRSNRND0",10,0)=" Q:$P($G(GROUP(0)),U)=""E"""
^XTMP("XPDT",7815,"RTN","PRSNRND0",11,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNRND0",12,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRND0",13,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",14,0)="COORD ;Entry point for VANOD Coordinator"
^XTMP("XPDT",7815,"RTN","PRSNRND0",15,0)=" ; Coordinator has no access limits so let them pick any group"
^XTMP("XPDT",7815,"RTN","PRSNRND0",16,0)=" N GROUP"
^XTMP("XPDT",7815,"RTN","PRSNRND0",17,0)=" D PIKGROUP^PRSNUT04(.GROUP,"""",1)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",18,0)=" Q:$P($G(GROUP(0)),U)=""E"""
^XTMP("XPDT",7815,"RTN","PRSNRND0",19,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNRND0",20,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",21,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRND0",22,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",23,0)="MAIN ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",24,0)=" N RANGE,BEG,END,EXTBEG,EXTEND,STOP,TYPE,BEG,END"
^XTMP("XPDT",7815,"RTN","PRSNRND0",25,0)=" S STOP=0"
^XTMP("XPDT",7815,"RTN","PRSNRND0",26,0)=" D DATE"
^XTMP("XPDT",7815,"RTN","PRSNRND0",27,0)=" Q:STOP"
^XTMP("XPDT",7815,"RTN","PRSNRND0",28,0)=" D QUE"
^XTMP("XPDT",7815,"RTN","PRSNRND0",29,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRND0",30,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",31,0)="REPORT ;for group of location or t&l"
^XTMP("XPDT",7815,"RTN","PRSNRND0",32,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",33,0)=" N X,PRSIEN,PRSNGLB,PRSNG,GRP,SORT,PRSNGA,PRSNGB,SKILMIX,NUROLE,PICK"
^XTMP("XPDT",7815,"RTN","PRSNRND0",34,0)=" S SORT=$P(GROUP(0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",35,0)=" D HDR^PRSNRND1(EXTBEG,EXTEND)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",36,0)=" S (PICK,STOP)=0"
^XTMP("XPDT",7815,"RTN","PRSNRND0",37,0)=" F  S PICK=$O(GROUP(PICK)) Q:PICK=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNRND0",38,0)=" .  S PRSNG=GROUP(0)_""^""_PICK_""^""_GROUP(PICK)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",39,0)=" .  S PRSNGLB=$S($P(PRSNG,U,2)=""N"":$NA(^NURSF(211.8,""D"",$P(PRSNG,U,7))),1:$NA(^PRSPC(""ATL""_$P(PRSNG,U,3))))"
^XTMP("XPDT",7815,"RTN","PRSNRND0",40,0)=" .  S GRP=$P(PRSNG,U,3)  ;External form of primary location"
^XTMP("XPDT",7815,"RTN","PRSNRND0",41,0)=" .  S PRSNGA="""""
^XTMP("XPDT",7815,"RTN","PRSNRND0",42,0)=" .  F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNRND0",43,0)=" ..    S PRSNGB=0"
^XTMP("XPDT",7815,"RTN","PRSNRND0",44,0)=" ..    F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB  D"
^XTMP("XPDT",7815,"RTN","PRSNRND0",45,0)=" ...      S PRSIEN=$S($P(PRSNG,U,2)=""N"":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",46,0)=" ...      S X=$$ISNURSE^PRSNUT01(PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",47,0)=" ...      I +X D"
^XTMP("XPDT",7815,"RTN","PRSNRND0",48,0)=" ....        S NUROLE=$P(X,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",49,0)=" ....        D GATHER^PRSNRND1(.SKILMIX,GRP,NUROLE,PRSIEN,BEG,END)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",50,0)=" D PRTLP^PRSNRND1(EXTBEG,EXTEND)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",51,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRND0",52,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",53,0)="DATE ; User is prompted for a date range "
^XTMP("XPDT",7815,"RTN","PRSNRND0",54,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",55,0)=" S RANGE=$$POCRANGE^PRSNUT01()"
^XTMP("XPDT",7815,"RTN","PRSNRND0",56,0)=" ; QUIT HERE IF RANGE=0 "
^XTMP("XPDT",7815,"RTN","PRSNRND0",57,0)=" I +$G(RANGE)'>0 S STOP=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNRND0",58,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",59,0)=" S BEG=$P(RANGE,U)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",60,0)=" S END=$P(RANGE,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",61,0)=" S EXTBEG=$P(RANGE,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",62,0)=" S EXTEND=$P(RANGE,U,4)"
^XTMP("XPDT",7815,"RTN","PRSNRND0",63,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",64,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRND0",65,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND0",66,0)="QUE ;call to generate and display report for individual activity"
^XTMP("XPDT",7815,"RTN","PRSNRND0",67,0)=" N %ZIS,POP,IOP"
^XTMP("XPDT",7815,"RTN","PRSNRND0",68,0)=" S %ZIS=""MQ"""
^XTMP("XPDT",7815,"RTN","PRSNRND0",69,0)=" D ^%ZIS"
^XTMP("XPDT",7815,"RTN","PRSNRND0",70,0)=" Q:POP"
^XTMP("XPDT",7815,"RTN","PRSNRND0",71,0)=" I $D(IO(""Q"")) D"
^XTMP("XPDT",7815,"RTN","PRSNRND0",72,0)=" .  K IO(""Q"")"
^XTMP("XPDT",7815,"RTN","PRSNRND0",73,0)=" .  S ZTDESC=""GROUP WORK SUMMARY BY SKILLMIX"""
^XTMP("XPDT",7815,"RTN","PRSNRND0",74,0)=" .  S ZTRTN=""REPORT^PRSNRND0"""
^XTMP("XPDT",7815,"RTN","PRSNRND0",75,0)=" .  S ZTSAVE(""GROUP"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRND0",76,0)=" .  S ZTSAVE(""GROUP("")="""""
^XTMP("XPDT",7815,"RTN","PRSNRND0",77,0)=" .  S ZTSAVE(""TYPE"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRND0",78,0)=" .  S ZTSAVE(""BEG"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRND0",79,0)=" .  S ZTSAVE(""END"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRND0",80,0)=" .  S ZTSAVE(""EXTBEG"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRND0",81,0)=" .  S ZTSAVE(""EXTEND"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRND0",82,0)=" .  D ^%ZTLOAD"
^XTMP("XPDT",7815,"RTN","PRSNRND0",83,0)=" .  I $D(ZTSK) S ZTREQ=""@"" W !,""Request ""_ZTSK_"" Queued."""
^XTMP("XPDT",7815,"RTN","PRSNRND0",84,0)=" .  K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNRND0",85,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNRND0",86,0)=" .  D REPORT"
^XTMP("XPDT",7815,"RTN","PRSNRND0",87,0)=" D ^%ZISC"
^XTMP("XPDT",7815,"RTN","PRSNRND0",88,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRND1")="0^26^B15584856^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRND1",1,0)="PRSNRND1 ;WOIFO/DAM - Non Direct Care Summary by Skill Mix II REPORT ;060409"
^XTMP("XPDT",7815,"RTN","PRSNRND1",2,0)=" ;;4.0;PAID;**126**;June 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRND1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNRND1",4,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",5,0)=" ;   "
^XTMP("XPDT",7815,"RTN","PRSNRND1",6,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNRND1",7,0)="GATHER(SKILMIX,GRP,NUROLE,PRSIEN,BEG,END) ;Entry point to gather POC data from 451"
^XTMP("XPDT",7815,"RTN","PRSNRND1",8,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRND1",9,0)=" ;   SKILMIX: ARRAY containing totals for various types of work"
^XTMP("XPDT",7815,"RTN","PRSNRND1",10,0)=" ;            subscripted by nurse role (or skill mix)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",11,0)=" ;   GRP: Nurse default location or T&L Unit"
^XTMP("XPDT",7815,"RTN","PRSNRND1",12,0)=" ;   NUROLE: the role (f451.1) of the nurse defined by PRSIEN"
^XTMP("XPDT",7815,"RTN","PRSNRND1",13,0)=" ;           this role will match one of the subscripts in the"
^XTMP("XPDT",7815,"RTN","PRSNRND1",14,0)=" ;           SKILMIX array"
^XTMP("XPDT",7815,"RTN","PRSNRND1",15,0)=" ;   PRSIEN: Nurse ien 450"
^XTMP("XPDT",7815,"RTN","PRSNRND1",16,0)=" ;   BEG,END: FileMan begin and end dates for report"
^XTMP("XPDT",7815,"RTN","PRSNRND1",17,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",18,0)=" N INDEX,CNT,DAYNODE,FMDT,PPIEN,PRSNDAY"
^XTMP("XPDT",7815,"RTN","PRSNRND1",19,0)=" S FMDT=BEG-.1"
^XTMP("XPDT",7815,"RTN","PRSNRND1",20,0)=" S (INDEX,CNT)=0"
^XTMP("XPDT",7815,"RTN","PRSNRND1",21,0)=" F  S FMDT=$O(^PRST(458,""AD"",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRND1",22,0)=" . S DAYNODE=$G(^PRST(458,""AD"",FMDT))"
^XTMP("XPDT",7815,"RTN","PRSNRND1",23,0)=" . S PPIEN=+DAYNODE"
^XTMP("XPDT",7815,"RTN","PRSNRND1",24,0)=" . S PRSNDAY=$P(DAYNODE,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",25,0)=" . K POCD   ;array to hold POC data"
^XTMP("XPDT",7815,"RTN","PRSNRND1",26,0)=" . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",27,0)=" . Q:$G(POCD(0))=0"
^XTMP("XPDT",7815,"RTN","PRSNRND1",28,0)=" . D DATA(.SKILMIX,GRP,NUROLE)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",29,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",30,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRND1",31,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",32,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",33,0)="DATA(SKILMIX,GRP,NUROLE) ;Extract data from POCD array"
^XTMP("XPDT",7815,"RTN","PRSNRND1",34,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",35,0)=" N PRSL,ST,SP,MEAL,HOURS,TT,TIEN,LNG,POC,POC1,WIEN,TW,TWD"
^XTMP("XPDT",7815,"RTN","PRSNRND1",36,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",37,0)=" S PRSL=0"
^XTMP("XPDT",7815,"RTN","PRSNRND1",38,0)=" F  S PRSL=$O(POCD(PRSL)) Q:PRSL'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNRND1",39,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",40,0)=" . ;Start and stop time and mealtime"
^XTMP("XPDT",7815,"RTN","PRSNRND1",41,0)=" . S ST=$P(POCD(PRSL),U),SP=$P(POCD(PRSL),U,2),MEAL=$P(POCD(PRSL),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",42,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",43,0)=" . ;Get elapsed time"
^XTMP("XPDT",7815,"RTN","PRSNRND1",44,0)=" . S HOURS=$$AMT^PRSPSAPU(ST,SP,MEAL)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",45,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",46,0)=" . ;Type of Time code IEN"
^XTMP("XPDT",7815,"RTN","PRSNRND1",47,0)=" . S (TIEN,LNG)="""""
^XTMP("XPDT",7815,"RTN","PRSNRND1",48,0)=" . S TT=$P(POCD(PRSL),U,4) I TT'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRND1",49,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",50,0)=" . . ;Type of Time code"
^XTMP("XPDT",7815,"RTN","PRSNRND1",51,0)=" . . S TIEN=$O(^PRST(457.3,""B"",TT,TIEN)) Q:TIEN="""""
^XTMP("XPDT",7815,"RTN","PRSNRND1",52,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",53,0)=" . . ;Description for Type of Time code"
^XTMP("XPDT",7815,"RTN","PRSNRND1",54,0)=" . . S LNG=$P(^PRST(457.3,TIEN,0),U,2)  ;eg, Direct Care, AL"
^XTMP("XPDT",7815,"RTN","PRSNRND1",55,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",56,0)=" . S POC1="""""
^XTMP("XPDT",7815,"RTN","PRSNRND1",57,0)=" . S POC=$P(POCD(PRSL),U,5) I POC'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRND1",58,0)=" . . S POC1=$P($$ISACTIVE^PRSNUT01(DT,POC),U,2) ;Location"
^XTMP("XPDT",7815,"RTN","PRSNRND1",59,0)=" .  ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",60,0)=" .  ;Type of Work Code IEN"
^XTMP("XPDT",7815,"RTN","PRSNRND1",61,0)=" .  S (TW,TWD)="""""
^XTMP("XPDT",7815,"RTN","PRSNRND1",62,0)=" .  S WIEN=$P(POCD(PRSL),U,6) I WIEN'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRND1",63,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",64,0)=" . . ;Type of Work Code"
^XTMP("XPDT",7815,"RTN","PRSNRND1",65,0)=" . . S TW=$P(^PRSN(451.5,WIEN,0),U)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",66,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",67,0)=" . . ;Description for Type of Work code"
^XTMP("XPDT",7815,"RTN","PRSNRND1",68,0)=" . . S TWD=$P(^PRSN(451.5,WIEN,0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",69,0)=" ."
^XTMP("XPDT",7815,"RTN","PRSNRND1",70,0)=" .;  save skill mix, hours and type of work into SKILMIX array"
^XTMP("XPDT",7815,"RTN","PRSNRND1",71,0)=" .  Q:(LNG="""")!(POC1="""")!(TWD="""")"
^XTMP("XPDT",7815,"RTN","PRSNRND1",72,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",73,0)=" .  I $G(TW)'=""DC"" D"
^XTMP("XPDT",7815,"RTN","PRSNRND1",74,0)=" ..    S $P(SKILMIX(GRP,TWD,NUROLE),U,1)=$P($G(SKILMIX(GRP,TWD,NUROLE)),U,1)+HOURS"
^XTMP("XPDT",7815,"RTN","PRSNRND1",75,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRND1",76,0)="HDR(EXTBEG,EXTEND) ;Display header for report of Individual Nurse Activity"
^XTMP("XPDT",7815,"RTN","PRSNRND1",77,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",78,0)=" W @IOF"
^XTMP("XPDT",7815,"RTN","PRSNRND1",79,0)=" W ?17,""NURSE NON DIRECT SUMMARY BY SKILL MIX REPORT"""
^XTMP("XPDT",7815,"RTN","PRSNRND1",80,0)=" W !,?25,EXTBEG_"" - ""_EXTEND"
^XTMP("XPDT",7815,"RTN","PRSNRND1",81,0)=" W !         ;blank line"
^XTMP("XPDT",7815,"RTN","PRSNRND1",82,0)=" W !,""Location"",?22,""Non Direct"",?53,""# of"",?60,""# of"",?67,""# of"",?74,""Total"""
^XTMP("XPDT",7815,"RTN","PRSNRND1",83,0)=" W !,?22,""Care"",?53,""Hours"",?60,""Hours"",?67,""Hours"",?74,""Hours"""
^XTMP("XPDT",7815,"RTN","PRSNRND1",84,0)=" W !,?22,""Category"",?53,""RN"",?60,""LPN"",?67,""UAP"""
^XTMP("XPDT",7815,"RTN","PRSNRND1",85,0)=" W !,""--------------------------------------------------------------------------------"""
^XTMP("XPDT",7815,"RTN","PRSNRND1",86,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",87,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRND1",88,0)="PRTLP(EXTBEG,EXTEND) ;Order through SKILMIX array, total data & display"
^XTMP("XPDT",7815,"RTN","PRSNRND1",89,0)=" N RNDC,LNDC,UNDC,GP,TNDC,SKILL,NDCARE"
^XTMP("XPDT",7815,"RTN","PRSNRND1",90,0)=" S GP=0"
^XTMP("XPDT",7815,"RTN","PRSNRND1",91,0)=" F  S GP=$O(SKILMIX(GP)) Q:GP=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRND1",92,0)=" .  S NDCARE="""""
^XTMP("XPDT",7815,"RTN","PRSNRND1",93,0)=" .  F  S NDCARE=$O(SKILMIX(GP,NDCARE)) Q:NDCARE=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRND1",94,0)=" ..  S (RNDC,LNDC,UNDC,TNDC)=0"
^XTMP("XPDT",7815,"RTN","PRSNRND1",95,0)=" ..  S SKILL="""""
^XTMP("XPDT",7815,"RTN","PRSNRND1",96,0)=" ..  F  S SKILL=$O(SKILMIX(GP,NDCARE,SKILL)) Q:SKILL=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRND1",97,0)=" ...  I SKILL[""RN"" S RNDC=$P(SKILMIX(GP,NDCARE,SKILL),U)+$G(RNDC)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",98,0)=" ...  I SKILL[""LPN"" S LNDC=$P(SKILMIX(GP,NDCARE,SKILL),U)+$G(LNDC)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",99,0)=" ...  I SKILL'[""RN"",SKILL'[""LPN"" S UNDC=$P(SKILMIX(GP,NDCARE,SKILL),U)+$G(UNDC)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",100,0)=" ..  S TNDC=$G(RNDC)+$G(LNDC)+$G(UNDC)  ;total hours"
^XTMP("XPDT",7815,"RTN","PRSNRND1",101,0)=" ..  D PPP(.STOP,EXTBEG,EXTEND)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",102,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRND1",103,0)="PPP(STOP,EXTBEG,EXTEND) ;"
^XTMP("XPDT",7815,"RTN","PRSNRND1",104,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRND1",105,0)=" W GP,?22,NDCARE,?53,RNDC,?60,LNDC,?67,UNDC,?74,TNDC"
^XTMP("XPDT",7815,"RTN","PRSNRND1",106,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRND1",107,0)=" I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR(EXTBEG,EXTEND)"
^XTMP("XPDT",7815,"RTN","PRSNRND1",108,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM0")="0^27^B7471138^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",1,0)="PRSNRSM0 ;WOIFO/DAM - Group Work Summary by Skill Mix I REPORT;9/10/2009"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",2,0)=" ;;4.0;PAID;** 126**;Sep 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",4,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",6,0)="DAP ; Entry point for Data Approval Personnel"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",7,0)=" N GROUP"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",8,0)=" D ACCESS^PRSNUT02(.GROUP,""A"",DT,1)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",9,0)=" ; quit if any error during group selection"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",10,0)=" Q:$P($G(GROUP(0)),U)=""E"""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",11,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",12,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",13,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",14,0)="COORD ;Entry point for VANOD Coordinator"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",15,0)=" ; Coordinator has no access limits so let them pick any group"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",16,0)=" N GROUP"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",17,0)=" D PIKGROUP^PRSNUT04(.GROUP,"""",1)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",18,0)=" Q:$P($G(GROUP(0)),U)=""E"""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",19,0)=" D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",20,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",21,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",22,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",23,0)="MAIN ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",24,0)=" N SKILMIX,RANGE,BEG,END,EXTBEG,EXTEND,STOP"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",25,0)=" S STOP=0"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",26,0)=" D DATE"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",27,0)=" Q:STOP"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",28,0)=" D QUE"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",29,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",30,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",31,0)="REPORT ;for group of location or t&l"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",32,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",33,0)=" N PRSIEN,PRSNGLB,PRSNG,SKILMIX,GRP,STOP,NUROLE,PICK,PRSNGA,PRSNGB,X"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",34,0)=" D HDR^PRSNRSM1(EXTBEG,EXTEND)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",35,0)=" S (PICK,STOP)=0"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",36,0)=" F  S PICK=$O(GROUP(PICK)) Q:PICK=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",37,0)=" .  S PRSNG=GROUP(0)_""^""_PICK_""^""_GROUP(PICK)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",38,0)=" .  S PRSNGLB=$S($P(PRSNG,U,2)=""N"":$NA(^NURSF(211.8,""D"",$P(PRSNG,U,7))),1:$NA(^PRSPC(""ATL""_$P(PRSNG,U,3))))"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",39,0)=" .  S GRP=$P(PRSNG,U,3)  ;External form of primary location"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",40,0)=" .  S PRSNGA="""""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",41,0)=" .  F  S PRSNGA=$O(@PRSNGLB@(PRSNGA)) QUIT:PRSNGA=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",42,0)=" ..    S PRSNGB=0"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",43,0)=" ..    F  S PRSNGB=$O(@PRSNGLB@(PRSNGA,PRSNGB)) QUIT:'PRSNGB!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",44,0)=" ...      S PRSIEN=$S($P(PRSNG,U,2)=""N"":+$G(^VA(200,PRSNGB,450)),1:PRSNGB)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",45,0)=" ...      S X=$$ISNURSE^PRSNUT01(PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",46,0)=" ...      I +X D"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",47,0)=" ....        S NUROLE=$P(X,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",48,0)=" ....        D GATHER^PRSNRSM1(.SKILMIX,GRP,NUROLE,PRSIEN,BEG,END)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",49,0)=" D PRTLP^PRSNRSM1(EXTBEG,EXTEND,.STOP)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",50,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",51,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",52,0)="DATE ; User is prompted for a date range "
^XTMP("XPDT",7815,"RTN","PRSNRSM0",53,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",54,0)=" S RANGE=$$POCRANGE^PRSNUT01()"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",55,0)=" ; QUIT HERE IF RANGE=0 "
^XTMP("XPDT",7815,"RTN","PRSNRSM0",56,0)=" I +$G(RANGE)'>0 S STOP=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",57,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",58,0)=" S BEG=$P(RANGE,U)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",59,0)=" S END=$P(RANGE,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",60,0)=" S EXTBEG=$P(RANGE,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",61,0)=" S EXTEND=$P(RANGE,U,4)"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",62,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",63,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",64,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",65,0)="QUE ;call to generate and display report for individual activity"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",66,0)=" N %ZIS,POP,IOP"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",67,0)=" S %ZIS=""MQ"""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",68,0)=" D ^%ZIS"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",69,0)=" Q:POP"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",70,0)=" I $D(IO(""Q"")) D"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",71,0)=" .  K IO(""Q"")"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",72,0)=" .  N ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",73,0)=" .  S ZTDESC=""GROUP WORK SUMMARY BY SKILLMIX"""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",74,0)=" .  S ZTRTN=""REPORT^PRSNRSM0"""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",75,0)=" .  S ZTSAVE(""GROUP"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",76,0)=" .  S ZTSAVE(""GROUP("")="""""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",77,0)=" .  S ZTSAVE(""BEG"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",78,0)=" .  S ZTSAVE(""END"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",79,0)=" .  S ZTSAVE(""EXTBEG"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",80,0)=" .  S ZTSAVE(""EXTEND"")="""""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",81,0)=" .  D ^%ZTLOAD"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",82,0)=" .  I $D(ZTSK) S ZTREQ=""@"" W !,""Request ""_ZTSK_"" Queued."""
^XTMP("XPDT",7815,"RTN","PRSNRSM0",83,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",84,0)=" .  D REPORT"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",85,0)=" D ^%ZISC"
^XTMP("XPDT",7815,"RTN","PRSNRSM0",86,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM1")="0^28^B16647766^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",1,0)="PRSNRSM1 ;WOIFO/DAM - Group Work Summary by Skill Mix II REPORT ;060409"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",2,0)=" ;;4.0;PAID;**126**;June 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",4,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",5,0)=" ;   "
^XTMP("XPDT",7815,"RTN","PRSNRSM1",6,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNRSM1",7,0)="GATHER(SKILMIX,GRP,NUROLE,PRSIEN,BEG,END) ;Entry point to gather POC data from 451"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",8,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",9,0)=" ;   SKILMIX: ARRAY containing totals for various types of work"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",10,0)=" ;            subscripted by nurse role (or skill mix)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",11,0)=" ;   GRP: Nurse default location or T&L Unit"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",12,0)=" ;   NUROLE: the role (f451.1) of the nurse defined by PRSIEN"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",13,0)=" ;           this role will match one of the subscripts in the"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",14,0)=" ;           SKILMIX array"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",15,0)=" ;   PRSIEN: Nurse ien 450"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",16,0)=" ;   BEG,END: FileMan begin and end dates for report"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",17,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",18,0)=" N FMDT,INDEX,CNT,DAYNODE,PPIEN,PRSNDAY,POCD"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",19,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",20,0)=" S FMDT=BEG-.1"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",21,0)=" S (INDEX,CNT)=0"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",22,0)=" F  S FMDT=$O(^PRST(458,""AD"",FMDT)) Q:FMDT>END!(FMDT'>0)!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",23,0)=" . S DAYNODE=$G(^PRST(458,""AD"",FMDT))"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",24,0)=" . S PPIEN=+DAYNODE"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",25,0)=" . S PRSNDAY=$P(DAYNODE,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",26,0)=" . K POCD   ;array to hold POC data"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",27,0)=" . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",28,0)=" . Q:$G(POCD(0))=0"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",29,0)=" . D DATA(.SKILMIX,GRP,NUROLE)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",30,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",31,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",32,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",33,0)="HDR(EXTBEG,EXTEND) ;Display header for report of Individual Nurse Activity"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",34,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",35,0)=" W @IOF"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",36,0)=" W ?17,""NURSE GROUP WORK SUMMARY BY SKILL MIX REPORT"""
^XTMP("XPDT",7815,"RTN","PRSNRSM1",37,0)=" W !,?25,EXTBEG_"" - ""_EXTEND"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",38,0)=" W !         ;blank line"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",39,0)=" W !,""Grouping"",?30,""Direct Care"",?45,""Nondirect Care"",?65,""Leave Hours"""
^XTMP("XPDT",7815,"RTN","PRSNRSM1",40,0)=" W !,?1,""-Skill Mix"",?33,""Hours"",?49,""Hours"""
^XTMP("XPDT",7815,"RTN","PRSNRSM1",41,0)=" W !,""--------------------------------------------------------------------------------"""
^XTMP("XPDT",7815,"RTN","PRSNRSM1",42,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",43,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",44,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",45,0)="DATA(SKILMIX,GRP,NUROLE) ;Extract display data from POCD array"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",46,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",47,0)=" N PRSL,ST,SP,MEAL,HOURS,TT,TIEN,LNG,POC,POC1,WIEN,TW,TWD"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",48,0)=" S STOP=0"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",49,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",50,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",51,0)=" S PRSL=0"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",52,0)=" F  S PRSL=$O(POCD(PRSL)) Q:PRSL'>0!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",53,0)=" . ;Start Time"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",54,0)=" . S ST=$P(POCD(PRSL),U)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",55,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",56,0)=" . ;Stop Time "
^XTMP("XPDT",7815,"RTN","PRSNRSM1",57,0)=" . S SP=$P(POCD(PRSL),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",58,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",59,0)=" . ;Meal Time"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",60,0)=" . S MEAL=$P(POCD(PRSL),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",61,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",62,0)=" . ;Get elapsed time"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",63,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",64,0)=" . S HOURS=$$AMT^PRSPSAPU(ST,SP,MEAL)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",65,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",66,0)=" . ;Type of Time code IEN"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",67,0)=" . S (TIEN,LNG)="""""
^XTMP("XPDT",7815,"RTN","PRSNRSM1",68,0)=" . S TT=$P(POCD(PRSL),U,4) I TT'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",69,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",70,0)=" . . ;Type of Time code"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",71,0)=" . . S TIEN=$O(^PRST(457.3,""B"",TT,"""")) Q:TIEN=""""!STOP"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",72,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",73,0)=" . . ;Description for Type of Time code"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",74,0)=" . . S LNG=$P(^PRST(457.3,TIEN,0),U,2)  ;eg, Direct Care, AL"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",75,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",76,0)=" . S POC1="""""
^XTMP("XPDT",7815,"RTN","PRSNRSM1",77,0)=" . S POC=$P(POCD(PRSL),U,5) I POC'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",78,0)=" . . S POC1=$P($$ISACTIVE^PRSNUT01(DT,POC),U,2) ;Location"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",79,0)=" .  ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",80,0)=" .  ;Type of Work Code IEN"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",81,0)=" .  S WIEN=$P(POCD(PRSL),U,6) I WIEN'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",82,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",83,0)=" . . ;Type of Work Code"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",84,0)=" . . S TW=$P(^PRSN(451.5,WIEN,0),U)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",85,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",86,0)=" . . ;Description for Type of Work code"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",87,0)=" . . S TWD=$P(^PRSN(451.5,WIEN,0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",88,0)=" ."
^XTMP("XPDT",7815,"RTN","PRSNRSM1",89,0)=" .;  save skill mix and hours into SKILMIX array"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",90,0)=" .  Q:(LNG="""")!(POC1="""")"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",91,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",92,0)=" .;  If we find leave then update totals, otherwise it's work "
^XTMP("XPDT",7815,"RTN","PRSNRSM1",93,0)=" .;  (direct or nondirect) we update."
^XTMP("XPDT",7815,"RTN","PRSNRSM1",94,0)=" .  ;S $P(SKILMIX(NUROLE),U,4)=GRP    ;Nurse default location"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",95,0)=" .  I ""^HX^AL^AA^DL^ML^RL^SL^CB^AD^WP^""[(U_TT_U) D"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",96,0)=" ..    S $P(SKILMIX(GRP,NUROLE),U,3)=$P($G(SKILMIX(GRP,NUROLE)),U,3)+HOURS"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",97,0)=" .  E  D"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",98,0)=" ..    I $G(TW)=""DC"" D"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",99,0)=" ...      S $P(SKILMIX(GRP,NUROLE),U,1)=$P($G(SKILMIX(GRP,NUROLE)),U,1)+HOURS"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",100,0)=" ..    E  D "
^XTMP("XPDT",7815,"RTN","PRSNRSM1",101,0)=" ...      S $P(SKILMIX(GRP,NUROLE),U,2)=$P($G(SKILMIX(GRP,NUROLE)),U,2)+HOURS"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",102,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",103,0)="PRTLP(EXTBEG,EXTEND,STOP) ;Order through the SKILMIX array and pull information for display"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",104,0)=" N LV,DC,NDC,GP,SKILL"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",105,0)=" S GP=0"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",106,0)=" F  S GP=$O(SKILMIX(GP)) Q:GP=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",107,0)=" .  S SKILL=0"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",108,0)=" .  F  S SKILL=$O(SKILMIX(GP,SKILL)) Q:SKILL=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",109,0)=" ..  S LV=$P(SKILMIX(GP,SKILL),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",110,0)=" ..  S DC=$P(SKILMIX(GP,SKILL),U)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",111,0)=" ..  S NDC=$P(SKILMIX(GP,SKILL),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",112,0)=" ..  D PPP(EXTBEG,EXTEND,.STOP)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",113,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",114,0)="PPP(EXTBEG,EXTEND,STOP) ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",115,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",116,0)=" W GP"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",117,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",118,0)=" W ?1,""-""_SKILL"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",119,0)=" W ?35,DC"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",120,0)=" W ?51,NDC"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",121,0)=" W ?70,LV"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",122,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",123,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",124,0)=" I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR(EXTBEG,EXTEND)"
^XTMP("XPDT",7815,"RTN","PRSNRSM1",125,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRUT0")="0^29^B17110221^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",1,0)="PRSNRUT0 ;WOIFO/DAM - Report for POC Data;060409"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",2,0)=" ;;4.0;PAID;**126**;June 2009;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",4,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",5,0)=" ;   "
^XTMP("XPDT",7815,"RTN","PRSNRUT0",6,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNRUT0",7,0)="POCDSPLY(PRSIEN,BEG,END) ;Entry point to gather POC data from 451"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",8,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",9,0)=" ;   PRSIEN: Nurse ien 450"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",10,0)=" ;   BEG,END: FileMan begin and end dates for report"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",11,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",12,0)=" N STOP,PRSNL,DAYNODE,EXTBEG,EXTEND,FMDT,PPIEN,PRSNAME,PRSNSSN,PRSNTL"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",13,0)=" N PRSNPP,PRSNDAY,PRSNDY,PRSDT"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",14,0)=" S STOP=0"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",15,0)=" D INITIAL"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",16,0)=" S PRSNL=$$DEFAULTL()"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",17,0)=" D HDRINFO"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",18,0)=" D HDR"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",19,0)=" S FMDT=BEG-.1"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",20,0)=" F  S FMDT=$O(^PRST(458,""AD"",FMDT)) Q:FMDT>END!(FMDT'>0)  D"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",21,0)=" . S DAYNODE=$G(^PRST(458,""AD"",FMDT))"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",22,0)=" . S PPIEN=+DAYNODE"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",23,0)=" . S PRSNDAY=$P(DAYNODE,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",24,0)=" . Q:'PRSNDAY"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",25,0)=" . K POCD   ;array to hold POC data"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",26,0)=" . D L1^PRSNRUT1(.POCD,PPIEN,PRSIEN,PRSNDAY)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",27,0)=" . D GETDAY(PRSNDAY,.PRSNDY,.PRSDT)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",28,0)=" . D DATA"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",29,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",30,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",31,0)="DEFAULTL() ;Find external value-nurse's default location"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",32,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",33,0)=" Q $P($$PRIMLOC^PRSNUT03($G(^PRSPC(PRSIEN,200))),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",34,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",35,0)="HDRINFO ;Find nurse information to display in report header"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",36,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",37,0)=" N PRSNARY"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",38,0)=" S PRSNARY=$G(^PRSPC(PRSIEN,0))"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",39,0)=" S PRSNAME=$P(PRSNARY,U)             ;Nurse Name"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",40,0)=" S PRSNSSN=$P(PRSNARY,U,9)           ;Nurse SSN"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",41,0)=" S PRSNTL=$P(PRSNARY,U,8)              ;Nurse T&L"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",42,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",43,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",44,0)="HDR ;Display header for report of Individual Nurse Activity"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",45,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",46,0)=" W @IOF"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",47,0)=" W PRSNAME,?32,PRSNL,?48,""T&L""_"" ""_PRSNTL,?48,?68,PRSNSSN"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",48,0)=" W !,EXTBEG_"" - ""_EXTEND"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",49,0)=" W !         ;blank line"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",50,0)=" W !,""Date"",?11,""Tour Time"",?27,""Location"",?57,""OT Mandatory"""
^XTMP("XPDT",7815,"RTN","PRSNRUT0",51,0)=" W !,?11,""-Exceptions"",?27,""-Work Type"",?57,""-OT Reason"""
^XTMP("XPDT",7815,"RTN","PRSNRUT0",52,0)=" W !,""--------------------------------------------------------------------------------"""
^XTMP("XPDT",7815,"RTN","PRSNRUT0",53,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",54,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",55,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",56,0)="GETDAY(PRSNDAY,PRSNDY,PRSDT) ;Find external value of Day Number"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",57,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",58,0)=" N PRSDY"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",59,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",60,0)=" S PRSDY=$P(^PRST(458,PPIEN,2),U,PRSNDAY)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",61,0)=" S PRSNDY=$P(PRSDY,"" ""),PRSDT=$P(PRSDY,"" "",2,3)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",62,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",63,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",64,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",65,0)="DATA ;Extract display data from POCD array"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",66,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",67,0)=" N PRSNST,PRSNSP,PRSNPOC,PRSNPOC1,PRSNTT,PRSNWIEN,PRSNLNG,PRSNTW"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",68,0)=" N PRSNM,PRSNRE,PRSNREC,PRSNTWD,PRSNRIEN,PRSNTIEN,PRSL"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",69,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",70,0)=" S PRSL=0"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",71,0)=" F  S PRSL=$O(POCD(PRSL)) Q:PRSL'>0!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",72,0)=" . ;Start and stop time"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",73,0)=" . S PRSNST=$P(POCD(PRSL),U),PRSNSP=$P(POCD(PRSL),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",74,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",75,0)=" . ;Type of Time code IEN"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",76,0)=" . S PRSNTT=$P(POCD(PRSL),U,4) I PRSNTT'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",77,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",78,0)=" . . ;Type of Time code"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",79,0)=" . . S PRSNTIEN=$O(^PRST(457.3,""B"",PRSNTT,0)) Q:PRSNTIEN'>0"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",80,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",81,0)=" . . ;Description for Type of Time code"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",82,0)=" . . S PRSNLNG=$P(^PRST(457.3,PRSNTIEN,0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",83,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",84,0)=" . S PRSNPOC=$P(POCD(PRSL),U,5) I PRSNPOC'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",85,0)=" . . ;POC"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",86,0)=" . . S PRSNPOC1=$P($$ISACTIVE^PRSNUT01(DT,PRSNPOC),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",87,0)=" .  ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",88,0)=" .  ;Type of Work Code IEN"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",89,0)=" .  S PRSNWIEN=$P(POCD(PRSL),U,6) I PRSNWIEN'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",90,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",91,0)=" . . ;Type of Work Code"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",92,0)=" . . S PRSNTW=$P(^PRSN(451.5,PRSNWIEN,0),U)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",93,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",94,0)=" . . ;Description for Type of Work code"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",95,0)=" . . S PRSNTWD=$P(^PRSN(451.5,PRSNWIEN,0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",96,0)=" .  ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",97,0)=" .  ;OT Mandatory/Voluntary"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",98,0)=" .  S PRSNM=$P(POCD(PRSL),U,7) I PRSNM'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",99,0)=" . . I PRSNM=""V"" S PRSNM=""V Voluntary"""
^XTMP("XPDT",7815,"RTN","PRSNRUT0",100,0)=" . . I PRSNM=""M"" S PRSNM=""M Mandatory"""
^XTMP("XPDT",7815,"RTN","PRSNRUT0",101,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",102,0)=" .  S PRSNRIEN=$P(POCD(PRSL),U,8) I PRSNRIEN'="""" D"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",103,0)=" . . ;Reason for OT code"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",104,0)=" . . S PRSNREC=$P(^PRSN(451.6,PRSNRIEN,0),U)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",105,0)=" . . ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",106,0)=" . . ;Description for OT code"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",107,0)=" . . S PRSNRE=$P(^PRSN(451.6,PRSNRIEN,0),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",108,0)=" . ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",109,0)=" . D PRNT"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",110,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",111,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",112,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",113,0)="PRNT ;Print report"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",114,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",115,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",116,0)=" I PRSL=1 W PRSNDY"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",117,0)=" W ?11,$G(PRSNST)_""-""_$G(PRSNSP),?27,$G(PRSNPOC1),?57,$G(PRSNM)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",118,0)=" W !"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",119,0)=" I PRSL=1 W PRSDT"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",120,0)=" W ?11,""-""_$G(PRSNTT)_"" ""_$G(PRSNLNG),?27,""-""_$G(PRSNTW)_"" ""_$G(PRSNTWD),?57,""-""_$G(PRSNREC)_"" ""_$G(PRSNRE)"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",121,0)=" W !      ;blank line"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",122,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",123,0)=" I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() I 'STOP D HDR"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",124,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",125,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",126,0)="INITIAL ;  Set up external date range"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",127,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",128,0)=" N Y"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",129,0)=" S Y=BEG D DD^%DT S EXTBEG=Y"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",130,0)=" S Y=END D DD^%DT S EXTEND=Y"
^XTMP("XPDT",7815,"RTN","PRSNRUT0",131,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRUT1")="0^30^B4856992^n/a"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",1,0)="PRSNRUT1 ;WOIFO/DAM - API Pull POC Data;060409"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",4,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",5,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",6,0)=" ;    PPIEN: Pay period IEN is in TIME & ATTENDANCE RECORDS file (#458)"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",7,0)=" ;         The .01 field is the pay period, eg ""09-07"" "
^XTMP("XPDT",7815,"RTN","PRSNRUT1",8,0)=" ;                and matches the .01 field in "
^XTMP("XPDT",7815,"RTN","PRSNRUT1",9,0)=" ;                POC DAILY TIME RECORDS file (#451)"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",10,0)=" ;         The IEN is in the 2nd subscript and B xref of "
^XTMP("XPDT",7815,"RTN","PRSNRUT1",11,0)=" ;                the .01 field in file (#458)"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",12,0)=" ;    PRSIEN: Nurse IEN is the .01 field in the POC DAILY TIME RECORDS "
^XTMP("XPDT",7815,"RTN","PRSNRUT1",13,0)=" ;          file (#451) multiple 451.09"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",14,0)=" ;    PRSNDAY: Day number is the .01 field in POC DAILY TIME RECORDS "
^XTMP("XPDT",7815,"RTN","PRSNRUT1",15,0)=" ;           file (#451) multiple 451.99. This parameter is optional.  "
^XTMP("XPDT",7815,"RTN","PRSNRUT1",16,0)=" ;           If a DAY is not passed in, results for the entire pay "
^XTMP("XPDT",7815,"RTN","PRSNRUT1",17,0)=" ;           period are returned."
^XTMP("XPDT",7815,"RTN","PRSNRUT1",18,0)=" ;    "
^XTMP("XPDT",7815,"RTN","PRSNRUT1",19,0)=" ;OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",20,0)=" ;    Returns array POCD(N)=""Start Time^Stop Time^Meal Time"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",21,0)=" ;    ^Type of Time^Point of Care^Type of Work^Mandatory Indicator"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",22,0)=" ;    ^Reason for OT/CT/RG"""
^XTMP("XPDT",7815,"RTN","PRSNRUT1",23,0)=" ;         "
^XTMP("XPDT",7815,"RTN","PRSNRUT1",24,0)="L1(POCD,PPIEN,PRSIEN,PRSNDAY) ;EMPLOYEE"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",25,0)=" ;Called from PRSNRUT0"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",26,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",27,0)=" S POCD(0)=0"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",28,0)=" N N"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",29,0)=" S N=1"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",30,0)=" N PRSND0,PRSND1,PRSND2,PRSND3,PRSND4"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",31,0)=" S PRSND0=PPIEN"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",32,0)=" S PRSND1=0"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",33,0)=" F  S PRSND1=$O(^PRSN(451,PRSND0,""E"",PRSND1)) Q:PRSND1'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",34,0)=" .  I $P($G(^PRSN(451,PRSND0,""E"",PRSND1,0)),U,1)=PRSIEN  D "
^XTMP("XPDT",7815,"RTN","PRSNRUT1",35,0)=" . .  D L2(.POCD,PRSND0,PRSND1,PRSNDAY)"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",36,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",37,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",38,0)="L2(POCD,PRSND0,PRSND1,PRSNDAY)      ;Loop through DAY entries"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",39,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",40,0)=" S PRSND2=0"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",41,0)=" F  S PRSND2=$O(^PRSN(451,PRSND0,""E"",PRSND1,""D"",PRSND2)) Q:'PRSND2  D"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",42,0)=" .  I $P(^PRSN(451,PRSND0,""E"",PRSND1,""D"",PRSND2,0),U,1)=PRSNDAY D"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",43,0)=" ..   D L3(.POCD,PRSND0,PRSND1,PRSND2)"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",44,0)=" .  I PRSNDAY="""" D L3(.POCD,PRSND0,PRSND1,PRSND2)"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",45,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",46,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",47,0)="L3(POCD,PRSND0,PRSND1,PRSND2) ;Loop through VERSION entries"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",48,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",49,0)=" S PRSND3=999"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",50,0)=" S PRSND3=$O(^PRSN(451,PRSND0,""E"",PRSND1,""D"",PRSND2,""V"",PRSND3),-1) Q:PRSND3=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",51,0)=" .  D L4(.POCD,PRSND0,PRSND1,PRSND2,PRSND3)"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",52,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",53,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",54,0)="L4(POCD,PRSND0,PRSND1,PRSND2,PRSND3) ;RETURN DATA"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",55,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",56,0)=" S PRSND4=0"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",57,0)=" F  S PRSND4=$O(^PRSN(451,PRSND0,""E"",PRSND1,""D"",PRSND2,""V"",PRSND3,""T"",PRSND4)) Q:'PRSND4  D"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",58,0)=" .  S POCD(N)=$P(^PRSN(451,PRSND0,""E"",PRSND1,""D"",PRSND2,""V"",PRSND3,""T"",PRSND4,0),U,1,10)"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",59,0)=" .  S $P(POCD(N),U,11)=PRSND3"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",60,0)=" .  S POCD(0)=N"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",61,0)=" .  S N=N+1"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",62,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNRUT1",63,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT01")="0^33^B37810066^n/a"
^XTMP("XPDT",7815,"RTN","PRSNUT01",1,0)="PRSNUT01 ;WOIFO/JAH - Nurse Activity for VANOD Utilities;6/5/2009"
^XTMP("XPDT",7815,"RTN","PRSNUT01",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNUT01",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNUT01",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT01",5,0)="SERVICE ; set the Service date multiple (field 16) in file 211.4, whenever"
^XTMP("XPDT",7815,"RTN","PRSNUT01",6,0)=" ; the inactive flag (1.5) is changed (called from index on field 1.5)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",7,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",8,0)=" Q:$G(DA)'>0!($G(Y)="""")"
^XTMP("XPDT",7815,"RTN","PRSNUT01",9,0)=" N REC,RECEXIST,IENS"
^XTMP("XPDT",7815,"RTN","PRSNUT01",10,0)=" S RECEXIST=0"
^XTMP("XPDT",7815,"RTN","PRSNUT01",11,0)=" S REC=$O(^NURSF(211.4,DA,7,""B"",DT,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",12,0)=" I REC S RECEXIST=$D(^NURSF(211.4,DA,7,REC,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",13,0)=" I RECEXIST D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",14,0)=" . S IENS=REC_"",""_DA_"","""
^XTMP("XPDT",7815,"RTN","PRSNUT01",15,0)=" . S PRSFDA(211.416,IENS,1)=Y"
^XTMP("XPDT",7815,"RTN","PRSNUT01",16,0)=" . D FILE^DIE(,""PRSFDA"",)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",17,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",18,0)=" . N PRSFDA,IENS"
^XTMP("XPDT",7815,"RTN","PRSNUT01",19,0)=" . S IENS=""+1,""_DA_"","""
^XTMP("XPDT",7815,"RTN","PRSNUT01",20,0)=" . S PRSFDA(211.416,IENS,.01)=DT"
^XTMP("XPDT",7815,"RTN","PRSNUT01",21,0)=" . S PRSFDA(211.416,IENS,1)=Y"
^XTMP("XPDT",7815,"RTN","PRSNUT01",22,0)=" . D UPDATE^DIE("""",""PRSFDA"",""IENS"")"
^XTMP("XPDT",7815,"RTN","PRSNUT01",23,0)=" D MSG^DIALOG()"
^XTMP("XPDT",7815,"RTN","PRSNUT01",24,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT01",25,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",26,0)="GETCODES(PRSIEN) ;function returns the following codes from file 450"
^XTMP("XPDT",7815,"RTN","PRSNUT01",27,0)=" ;       Cost Center (CST)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",28,0)=" ;       Budget Object Code (BOC)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",29,0)=" ;       Assignment Code (ASN)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",30,0)=" ;       Occupation Series Code (OCC)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",31,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",32,0)=" N IENS,BOC,BOCE,OCC,ASN,CST,FIELDS,ASNE,CSTE,OCCE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",33,0)=" S IENS=PRSIEN_"","""
^XTMP("XPDT",7815,"RTN","PRSNUT01",34,0)=" D GETS^DIQ(450,IENS,""3;15.5;17;18"",""IE"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",35,0)=" S BOC=$G(FIELDS(450,IENS,18,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",36,0)=" S OCC=$G(FIELDS(450,IENS,15.5,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",37,0)=" S ASN=$G(FIELDS(450,IENS,3,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",38,0)=" S CST=$G(FIELDS(450,IENS,17,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",39,0)=" S BOCE=$G(FIELDS(450,IENS,18,""E""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",40,0)=" S OCCE=$G(FIELDS(450,IENS,15.5,""E""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",41,0)=" S ASNE=$G(FIELDS(450,IENS,3,""E""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",42,0)=" S CSTE=$G(FIELDS(450,IENS,17,""E""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",43,0)=" Q BOC_U_OCC_U_ASN_U_CST_U_BOCE_U_OCCE_U_ASNE_U_CSTE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",44,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",45,0)="GETDEG(PRSIEN) ;function returns degree and year of degree"
^XTMP("XPDT",7815,"RTN","PRSNUT01",46,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",47,0)=" N IENS,DEGREE,YEAR,FIELDS"
^XTMP("XPDT",7815,"RTN","PRSNUT01",48,0)=" S IENS=PRSIEN_"","""
^XTMP("XPDT",7815,"RTN","PRSNUT01",49,0)=" D GETS^DIQ(450,IENS,""10;47"",""IE"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",50,0)=" S DEGREE=$G(FIELDS(450,IENS,10,""E""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",51,0)=" S YEAR=$G(FIELDS(450,IENS,47,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",52,0)=" Q DEGREE_U_YEAR"
^XTMP("XPDT",7815,"RTN","PRSNUT01",53,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",54,0)="ISNURSE(PRSIEN) ;Return True if employee is a nurse"
^XTMP("XPDT",7815,"RTN","PRSNUT01",55,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",56,0)=" ;Lookup employees values in 450 for the following:"
^XTMP("XPDT",7815,"RTN","PRSNUT01",57,0)=" ;       Cost Center (CST)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",58,0)=" ;       Budget Object Code (BOC)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",59,0)=" ;       Assignment Code (ASN)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",60,0)=" ;       Occupation Series Code (OCC)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",61,0)=" ;Determine whether they are a nurse by matching them to one of the"
^XTMP("XPDT",7815,"RTN","PRSNUT01",62,0)=" ;entries in the Nurse Role file"
^XTMP("XPDT",7815,"RTN","PRSNUT01",63,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",64,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",65,0)=" N BOC,CST,OCC,ASN,CODES,KEY"
^XTMP("XPDT",7815,"RTN","PRSNUT01",66,0)=" N NODE0,ISNURSE,FIELDS,IENS"
^XTMP("XPDT",7815,"RTN","PRSNUT01",67,0)=" S ISNURSE=0"
^XTMP("XPDT",7815,"RTN","PRSNUT01",68,0)=" Q:PRSIEN'>0 ISNURSE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",69,0)=" S CODES=$$GETCODES(PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",70,0)=" S BOC=$P(CODES,U)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",71,0)=" S OCC=$P(CODES,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",72,0)=" S ASN=$P(CODES,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",73,0)=" S CST=$P(CODES,U,4)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",74,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",75,0)=" ; lookup on B index in 451.1 for exact or wildcard matches"
^XTMP("XPDT",7815,"RTN","PRSNUT01",76,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",77,0)=" ; the wildcards (*) designate that an employee can have any value"
^XTMP("XPDT",7815,"RTN","PRSNUT01",78,0)=" ; for that entity as long as the other entities match an entry in the"
^XTMP("XPDT",7815,"RTN","PRSNUT01",79,0)=" ; table and they are considered a nurse."
^XTMP("XPDT",7815,"RTN","PRSNUT01",80,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",81,0)=" ; the .01 in that file is a key with cost center, budget object code,"
^XTMP("XPDT",7815,"RTN","PRSNUT01",82,0)=" ; occupation series and assignment code."
^XTMP("XPDT",7815,"RTN","PRSNUT01",83,0)=" S KEY=""* ""_BOC_"" ""_OCC_"" ""_ASN"
^XTMP("XPDT",7815,"RTN","PRSNUT01",84,0)=" I $D(^PRSN(451.1,""B"",KEY)) D NURSTYP Q ISNURSE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",85,0)=" S KEY=""* ""_BOC_"" ""_OCC_"" *"""
^XTMP("XPDT",7815,"RTN","PRSNUT01",86,0)=" I $D(^PRSN(451.1,""B"",KEY)) D NURSTYP Q ISNURSE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",87,0)=" S KEY=CST_"" ""_BOC_"" ""_OCC_"" *"""
^XTMP("XPDT",7815,"RTN","PRSNUT01",88,0)=" I $D(^PRSN(451.1,""B"",KEY)) D NURSTYP Q ISNURSE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",89,0)=" S KEY=CST_"" ""_BOC_"" ""_OCC_"" ""_ASN"
^XTMP("XPDT",7815,"RTN","PRSNUT01",90,0)=" I $D(^PRSN(451.1,""B"",KEY)) D NURSTYP Q ISNURSE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",91,0)=" Q ISNURSE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",92,0)="NURSTYP ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",93,0)=" N IEN"
^XTMP("XPDT",7815,"RTN","PRSNUT01",94,0)=" S IEN=$O(^PRSN(451.1,""B"",KEY,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",95,0)=" S ISNURSE=""1^""_$P($G(^PRSN(451.1,IEN,0)),U,2,4)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",96,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT01",97,0)="ACTIVLOC(ACTLOC,PRSDT) ; return list of active locations for a given date"
^XTMP("XPDT",7815,"RTN","PRSNUT01",98,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT01",99,0)=" ;  PRSDT-optional fileman date.  If no date is passed then today"
^XTMP("XPDT",7815,"RTN","PRSNUT01",100,0)=" ;        is assumed."
^XTMP("XPDT",7815,"RTN","PRSNUT01",101,0)=" ;OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT01",102,0)=" ;  ACTLOC-array of nursing locations that were active on the input"
^XTMP("XPDT",7815,"RTN","PRSNUT01",103,0)=" ;         fileman date"
^XTMP("XPDT",7815,"RTN","PRSNUT01",104,0)=" ; output array is subscripted by Nurse Location IEN and the zero"
^XTMP("XPDT",7815,"RTN","PRSNUT01",105,0)=" ; node contains the count of active locations"
^XTMP("XPDT",7815,"RTN","PRSNUT01",106,0)=" ; Each node contains the following pieces."
^XTMP("XPDT",7815,"RTN","PRSNUT01",107,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",108,0)=" ;  PIECE #   Definition"
^XTMP("XPDT",7815,"RTN","PRSNUT01",109,0)=" ;  -------   -------------"
^XTMP("XPDT",7815,"RTN","PRSNUT01",110,0)=" ;    1       external name of location"
^XTMP("XPDT",7815,"RTN","PRSNUT01",111,0)=" ;    2       Institution Name"
^XTMP("XPDT",7815,"RTN","PRSNUT01",112,0)=" ;    3       institution IEN"
^XTMP("XPDT",7815,"RTN","PRSNUT01",113,0)=" ;    4       station number"
^XTMP("XPDT",7815,"RTN","PRSNUT01",114,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",115,0)=" ;Loop through each entry in the nurse location file and check"
^XTMP("XPDT",7815,"RTN","PRSNUT01",116,0)=" ;the index on the service date multiple to see if it was active"
^XTMP("XPDT",7815,"RTN","PRSNUT01",117,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",118,0)=" I +$G(PRSDT)'>1700000!(+$G(PRSDT)'<4000000) S PRSDT=DT"
^XTMP("XPDT",7815,"RTN","PRSNUT01",119,0)=" K ACTLOC"
^XTMP("XPDT",7815,"RTN","PRSNUT01",120,0)=" N IEN,ACTIVE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",121,0)=" S ACTLOC(0)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT01",122,0)=" S IEN=0"
^XTMP("XPDT",7815,"RTN","PRSNUT01",123,0)=" F  S IEN=$O(^NURSF(211.4,IEN)) Q:IEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",124,0)=" .  S ACTIVE=$$ISACTIVE(PRSDT,IEN)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",125,0)=" .  I ACTIVE D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",126,0)=" .. W !,ACTIVE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",127,0)=" ..    S ACTLOC(IEN)="""",ACTLOC(0)=ACTLOC(0)+1"
^XTMP("XPDT",7815,"RTN","PRSNUT01",128,0)=" ..    S ACTLOC(IEN)=$P(ACTIVE,U,2,5)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",129,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT01",130,0)="ACTIVLST(ACTLOC,PRSDT) ; return list of active locations that are active"
^XTMP("XPDT",7815,"RTN","PRSNUT01",131,0)=" ;for any day in a pay period in which date falls"
^XTMP("XPDT",7815,"RTN","PRSNUT01",132,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT01",133,0)=" ;  PRSDT-optional fileman date.  If no date is passed then today"
^XTMP("XPDT",7815,"RTN","PRSNUT01",134,0)=" ;        is assumed."
^XTMP("XPDT",7815,"RTN","PRSNUT01",135,0)=" ;OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT01",136,0)=" ;  ACTLOC-array of nursing locations that were active on any day"
^XTMP("XPDT",7815,"RTN","PRSNUT01",137,0)=" ;  during the pay period associated witht the input fileman date"
^XTMP("XPDT",7815,"RTN","PRSNUT01",138,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",139,0)=" ;  Output array is subscripted by Nurse Location IEN and the zero"
^XTMP("XPDT",7815,"RTN","PRSNUT01",140,0)=" ;  node contains the count of active locations"
^XTMP("XPDT",7815,"RTN","PRSNUT01",141,0)=" ;  Each node contains the following pieces."
^XTMP("XPDT",7815,"RTN","PRSNUT01",142,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",143,0)=" ;  PIECE #   Definition"
^XTMP("XPDT",7815,"RTN","PRSNUT01",144,0)=" ;  -------   -------------"
^XTMP("XPDT",7815,"RTN","PRSNUT01",145,0)=" ;    1       external name of location"
^XTMP("XPDT",7815,"RTN","PRSNUT01",146,0)=" ;    2       Institution Name"
^XTMP("XPDT",7815,"RTN","PRSNUT01",147,0)=" ;    3       institution IEN"
^XTMP("XPDT",7815,"RTN","PRSNUT01",148,0)=" ;    4       station number"
^XTMP("XPDT",7815,"RTN","PRSNUT01",149,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",150,0)=" ;Loop through each entry in the nurse location file and check"
^XTMP("XPDT",7815,"RTN","PRSNUT01",151,0)=" ;the index on the service date multiple to see if it was active"
^XTMP("XPDT",7815,"RTN","PRSNUT01",152,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",153,0)=" I +$G(PRSDT)'>1700000!(+$G(PRSDT)'<4000000) S PRSDT=DT"
^XTMP("XPDT",7815,"RTN","PRSNUT01",154,0)=" K ACTLOC"
^XTMP("XPDT",7815,"RTN","PRSNUT01",155,0)=" N IEN,ACTIVE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",156,0)=" S ACTLOC(0)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT01",157,0)=" S IEN=0"
^XTMP("XPDT",7815,"RTN","PRSNUT01",158,0)=" F  S IEN=$O(^NURSF(211.4,IEN)) Q:IEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",159,0)=" .  S ACTIVE=$$ISACTPP(PRSDT,IEN)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",160,0)=" .  I ACTIVE D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",161,0)=" ..    S ACTLOC(IEN)="""",ACTLOC(0)=ACTLOC(0)+1"
^XTMP("XPDT",7815,"RTN","PRSNUT01",162,0)=" ..    S ACTLOC(IEN)=$P(ACTIVE,U,2,6)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",163,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT01",164,0)="ISACTIVE(PRSDT,LIEN) ;Return TRUE if location is active on date"
^XTMP("XPDT",7815,"RTN","PRSNUT01",165,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT01",166,0)=" ;  PRSDT-FileMan date"
^XTMP("XPDT",7815,"RTN","PRSNUT01",167,0)=" ;  LIEN- nurse location internal entry number"
^XTMP("XPDT",7815,"RTN","PRSNUT01",168,0)=" ;OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT01",169,0)=" ;  function returns 5 piece string"
^XTMP("XPDT",7815,"RTN","PRSNUT01",170,0)=" ;  PIECE #   Definition"
^XTMP("XPDT",7815,"RTN","PRSNUT01",171,0)=" ;  -------   -------------"
^XTMP("XPDT",7815,"RTN","PRSNUT01",172,0)=" ;    1       0 for inactive, 1 for active"
^XTMP("XPDT",7815,"RTN","PRSNUT01",173,0)=" ;    2       external name of location"
^XTMP("XPDT",7815,"RTN","PRSNUT01",174,0)=" ;    3       Institution Name"
^XTMP("XPDT",7815,"RTN","PRSNUT01",175,0)=" ;    4       institution IEN"
^XTMP("XPDT",7815,"RTN","PRSNUT01",176,0)=" ;    5       station number"
^XTMP("XPDT",7815,"RTN","PRSNUT01",177,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",178,0)=" I '$D(^NURSF(211.4,LIEN,0)) Q ""-1""_U_""Undefined Location"""
^XTMP("XPDT",7815,"RTN","PRSNUT01",179,0)=" N IENS,STATUS,DIVI,STATUS,LOCE,INSIEN,STATNUM"
^XTMP("XPDT",7815,"RTN","PRSNUT01",180,0)=" I +$G(PRSDT)'>1700000!(+$G(PRSDT)'<4000000) S PRSDT=DT"
^XTMP("XPDT",7815,"RTN","PRSNUT01",181,0)=" S PRSDT=PRSDT_"".1"""
^XTMP("XPDT",7815,"RTN","PRSNUT01",182,0)=" S PRSDT=$O(^NURSF(211.4,LIEN,7,""C"",PRSDT),-1)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",183,0)=" I PRSDT="""" D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",184,0)=" .  S STATUS=""I"""
^XTMP("XPDT",7815,"RTN","PRSNUT01",185,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",186,0)=" .  S STATUS=$O(^NURSF(211.4,LIEN,7,""C"",PRSDT,""""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",187,0)=" S IENS=LIEN_"","""
^XTMP("XPDT",7815,"RTN","PRSNUT01",188,0)=" D GETS^DIQ(211.4,IENS_"","","".01;.02"",""IE"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",189,0)=" S LOCE=$G(FIELDS(211.4,IENS,.01,""E""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",190,0)=" S DIVI=$G(FIELDS(211.4,IENS,.02,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",191,0)=" ;institution file pointer from Hospital Location"
^XTMP("XPDT",7815,"RTN","PRSNUT01",192,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",193,0)=" S INSIEN=+$$GET1^DIQ(44,+$G(^NURSF(211.4,LIEN,0)),3,""I"")"
^XTMP("XPDT",7815,"RTN","PRSNUT01",194,0)=" D GETS^DIQ(4,INSIEN_"","",""99"",""E"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",195,0)=" S STATNUM=FIELDS(4,INSIEN_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNUT01",196,0)=" Q $S(STATUS=""A"":1,1:0)_U_LOCE_U_DIVI_U_INSIEN_U_STATNUM"
^XTMP("XPDT",7815,"RTN","PRSNUT01",197,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",198,0)="ISACTPP(PRSDT,LIEN) ;Return True if location is active for any days"
^XTMP("XPDT",7815,"RTN","PRSNUT01",199,0)=" ; during the pay period associated with date"
^XTMP("XPDT",7815,"RTN","PRSNUT01",200,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT01",201,0)=" ;  PRSDT-FileMan date"
^XTMP("XPDT",7815,"RTN","PRSNUT01",202,0)=" ;  LIEN- nurse location internal entry number"
^XTMP("XPDT",7815,"RTN","PRSNUT01",203,0)=" ;OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT01",204,0)=" ;  function returns 2 piece string"
^XTMP("XPDT",7815,"RTN","PRSNUT01",205,0)=" ;  1st piece is 0 for inactive, 1 for active"
^XTMP("XPDT",7815,"RTN","PRSNUT01",206,0)=" ;  2nd piece is external name of location"
^XTMP("XPDT",7815,"RTN","PRSNUT01",207,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNUT01",208,0)=" ; UNIT TEST: F PRSI=1:1:6 W !,$$ISACTPP^PRSNUT01(3090122,PRSI)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",209,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",210,0)=" N PPI,I,PRSDYS,ACTIVE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",211,0)=" S PPI=$P($G(^PRST(458,""AD"",PRSDT)),U)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",212,0)=" ; if date isn't in an open pay period then assume last open pay period"
^XTMP("XPDT",7815,"RTN","PRSNUT01",213,0)=" I PPI'>0 D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",214,0)=" .  S PRSDT=$O(^PRST(458,""AD"",9999999),-1)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",215,0)=" .  S PPI=$P($G(^PRST(458,""AD"",PRSDT)),U)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",216,0)=" S PRSDYS=$G(^PRST(458,PPI,1))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",217,0)=" F I=1:1:14 S PRSDT=$P(PRSDYS,U,I) D  Q:ACTIVE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",218,0)=" .  S ACTIVE=$$ISACTIVE(PRSDT,LIEN)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",219,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",220,0)=" Q ACTIVE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",221,0)="POCRANGE() ;Prompt user for POC date range and return start and stop dates"
^XTMP("XPDT",7815,"RTN","PRSNUT01",222,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",223,0)=" ; GET START DATE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",224,0)=" N %DT,Y,X"
^XTMP("XPDT",7815,"RTN","PRSNUT01",225,0)=" S %DT=""AEP"""
^XTMP("XPDT",7815,"RTN","PRSNUT01",226,0)=" S %DT(""A"")=""Start Date: """
^XTMP("XPDT",7815,"RTN","PRSNUT01",227,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",228,0)=" ; Don't allow selection of dates prior to the first entry in"
^XTMP("XPDT",7815,"RTN","PRSNUT01",229,0)=" ; the POC daily records file or a date after the last day"
^XTMP("XPDT",7815,"RTN","PRSNUT01",230,0)=" ; of the last pay period with POC records on file"
^XTMP("XPDT",7815,"RTN","PRSNUT01",231,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",232,0)=" N EPPI,LPPI,LD"
^XTMP("XPDT",7815,"RTN","PRSNUT01",233,0)=" S EPPI=$O(^PRSN(451,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",234,0)=" I EPPI'>0 Q 0_U_""No POC records on file!"""
^XTMP("XPDT",7815,"RTN","PRSNUT01",235,0)=" S LPPI=$O(^PRSN(451,99999),-1)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",236,0)=" S LD=$P($G(^PRST(458,LPPI,1)),U,14)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",237,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",238,0)=" S %DT(0)=+$G(^PRST(458,EPPI,1))"
^XTMP("XPDT",7815,"RTN","PRSNUT01",239,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",240,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",241,0)=" N SUCCESS,OUT,STARTDT,ENDDT,EDTE,SDTE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",242,0)=" S (SUCCESS,OUT)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT01",243,0)=" F  D  Q:SUCCESS!OUT"
^XTMP("XPDT",7815,"RTN","PRSNUT01",244,0)=" .  D ^%DT"
^XTMP("XPDT",7815,"RTN","PRSNUT01",245,0)=" .  S STARTDT=Y"
^XTMP("XPDT",7815,"RTN","PRSNUT01",246,0)=" .  I STARTDT<LD D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",247,0)=" ..    S SUCCESS=1"
^XTMP("XPDT",7815,"RTN","PRSNUT01",248,0)=" .  E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",249,0)=" ..    W "" ??"",$C(7)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",250,0)=" .  I Y'>0 S OUT=1"
^XTMP("XPDT",7815,"RTN","PRSNUT01",251,0)=" Q:OUT 0"
^XTMP("XPDT",7815,"RTN","PRSNUT01",252,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",253,0)=" ;GET END DATE"
^XTMP("XPDT",7815,"RTN","PRSNUT01",254,0)=" N %DT,Y,X"
^XTMP("XPDT",7815,"RTN","PRSNUT01",255,0)=" S %DT=""AEP"""
^XTMP("XPDT",7815,"RTN","PRSNUT01",256,0)=" S %DT(""A"")=""End Date: """
^XTMP("XPDT",7815,"RTN","PRSNUT01",257,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",258,0)=" ; Don't allow selection of prior to the start date"
^XTMP("XPDT",7815,"RTN","PRSNUT01",259,0)=" S %DT(0)=STARTDT"
^XTMP("XPDT",7815,"RTN","PRSNUT01",260,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT01",261,0)=" S (SUCCESS,OUT)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT01",262,0)=" F  D  Q:SUCCESS!OUT"
^XTMP("XPDT",7815,"RTN","PRSNUT01",263,0)=" .  D ^%DT"
^XTMP("XPDT",7815,"RTN","PRSNUT01",264,0)=" .  S ENDDT=Y"
^XTMP("XPDT",7815,"RTN","PRSNUT01",265,0)=" .  I ENDDT'>LD D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",266,0)=" ..    S SUCCESS=1"
^XTMP("XPDT",7815,"RTN","PRSNUT01",267,0)=" .  E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT01",268,0)=" ..    W "" ??"",$C(7)"
^XTMP("XPDT",7815,"RTN","PRSNUT01",269,0)=" .  I Y'>0 S OUT=1"
^XTMP("XPDT",7815,"RTN","PRSNUT01",270,0)=" Q:OUT 0"
^XTMP("XPDT",7815,"RTN","PRSNUT01",271,0)=" S ENDDT=Y"
^XTMP("XPDT",7815,"RTN","PRSNUT01",272,0)=" S Y=STARTDT D DD^%DT S SDTE=Y"
^XTMP("XPDT",7815,"RTN","PRSNUT01",273,0)=" S Y=ENDDT D DD^%DT S EDTE=Y"
^XTMP("XPDT",7815,"RTN","PRSNUT01",274,0)=" Q STARTDT_U_ENDDT_U_SDTE_U_EDTE"
^XTMP("XPDT",7815,"RTN","PRSNUT02")="0^34^B65564202^n/a"
^XTMP("XPDT",7815,"RTN","PRSNUT02",1,0)="PRSNUT02 ;WOIFO/JAH - Nurse Activity for VANOD Utilities;6/19/2009"
^XTMP("XPDT",7815,"RTN","PRSNUT02",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNUT02",3,0)=" ;;Per VHA Directive 2004-038,this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNUT02",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",5,0)="ACCESS(GRPS,ACCTYPE,PRSDT,MANY) ;return the user selected Group"
^XTMP("XPDT",7815,"RTN","PRSNUT02",6,0)=" K GRPS"
^XTMP("XPDT",7815,"RTN","PRSNUT02",7,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",8,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT02",9,0)=" ;  ACCTYPE-The type of access flag, E for data entry personnel and"
^XTMP("XPDT",7815,"RTN","PRSNUT02",10,0)=" ;          A for data approval personnel"
^XTMP("XPDT",7815,"RTN","PRSNUT02",11,0)=" ;  PRSDT- date for determination of what the division access parameter"
^XTMP("XPDT",7815,"RTN","PRSNUT02",12,0)=" ;         was on that date (either T&L or Location)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",13,0)=" ;  MANY-  (optional) set this flag to true (1) if more than one"
^XTMP("XPDT",7815,"RTN","PRSNUT02",14,0)=" ;         group can be selected.  Set the flag to (2) if you want"
^XTMP("XPDT",7815,"RTN","PRSNUT02",15,0)=" ;         all groups user has access to without any prompting."
^XTMP("XPDT",7815,"RTN","PRSNUT02",16,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",17,0)=" ;OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT02",18,0)=" ;PROCEDURE INTERACTS W/USER TO RETURN THE FOLLOWING:"
^XTMP("XPDT",7815,"RTN","PRSNUT02",19,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",20,0)=" ;  GRPS - array w/users selected groups subscripted"
^XTMP("XPDT",7815,"RTN","PRSNUT02",21,0)=" ;         by .01 field value (t&l external code or location pointer)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",22,0)=" ;  GRPS(0) - will contain the number selected followed by either"
^XTMP("XPDT",7815,"RTN","PRSNUT02",23,0)=" ;            N,T, or E for Nurse Location, T&L unit or Error"
^XTMP("XPDT",7815,"RTN","PRSNUT02",24,0)=" ;            If piece 2 is an E then piece 3 will contain error"
^XTMP("XPDT",7815,"RTN","PRSNUT02",25,0)=" ;            description"
^XTMP("XPDT",7815,"RTN","PRSNUT02",26,0)=" ;         "
^XTMP("XPDT",7815,"RTN","PRSNUT02",27,0)=" ;  Node Definition: an Upparrow delimited string with the following:"
^XTMP("XPDT",7815,"RTN","PRSNUT02",28,0)=" ;     PEICE  DEFINITION"
^XTMP("XPDT",7815,"RTN","PRSNUT02",29,0)=" ;     =====  =============================="
^XTMP("XPDT",7815,"RTN","PRSNUT02",30,0)=" ;       1    IEN of field value of group "
^XTMP("XPDT",7815,"RTN","PRSNUT02",31,0)=" ;       2    IEN of Division associated with this Group"
^XTMP("XPDT",7815,"RTN","PRSNUT02",32,0)=" ;       3    External value of division"
^XTMP("XPDT",7815,"RTN","PRSNUT02",33,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",34,0)=" ;  Sample Call:"
^XTMP("XPDT",7815,"RTN","PRSNUT02",35,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",36,0)=" ;      D ACCESS^PRSNUT02(.G,""E"",DT,1)    "
^XTMP("XPDT",7815,"RTN","PRSNUT02",37,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",38,0)=" ;  Sample Return:"
^XTMP("XPDT",7815,"RTN","PRSNUT02",39,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",40,0)=" ;      G(0)=""3^N"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",41,0)=" ;      G(""1E-EAST"")=""1^16433^500GA"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",42,0)=" ;      G(""3B-EAST"")=""6^16433^500GA"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",43,0)=" ;      G(""3B-WEST"")=""4^16433^500GA"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",44,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",45,0)=" ; determine for which entities current user has access to in both T&L "
^XTMP("XPDT",7815,"RTN","PRSNUT02",46,0)=" ; Unit File & NURS LOCATION file.  Build temp list of all possible "
^XTMP("XPDT",7815,"RTN","PRSNUT02",47,0)=" ; groups. If user has access to groups in more than one division then"
^XTMP("XPDT",7815,"RTN","PRSNUT02",48,0)=" ;  prompt for division"
^XTMP("XPDT",7815,"RTN","PRSNUT02",49,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",50,0)=" N TINDEX,LINDEX"
^XTMP("XPDT",7815,"RTN","PRSNUT02",51,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",52,0)=" ;    use access type parameter for appropriate indices for data entry"
^XTMP("XPDT",7815,"RTN","PRSNUT02",53,0)=" ;    or data approval personnel--TINDEX is the T&L unit file and"
^XTMP("XPDT",7815,"RTN","PRSNUT02",54,0)=" ;    LINDEX is the Nurse Location."
^XTMP("XPDT",7815,"RTN","PRSNUT02",55,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",56,0)=" S TINDEX=$S(ACCTYPE=""E"":""AE"",ACCTYPE=""A"":""AR"",1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNUT02",57,0)=" S LINDEX=$S(ACCTYPE=""E"":""AE"",ACCTYPE=""A"":""AA"",1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNUT02",58,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",59,0)=" ; Quit if no access specified in ACCTYP parameter"
^XTMP("XPDT",7815,"RTN","PRSNUT02",60,0)=" I TINDEX="""" S GRPS(0)=""0^E^Access Type Not Specified"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",61,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",62,0)=" N TMPGRPS,DIVMAP,DIVGRP,TLNODIV,DIVNOPAR"
^XTMP("XPDT",7815,"RTN","PRSNUT02",63,0)=" D TLACC(.TMPGRPS,.DIVMAP,.DIVGRP,.TLNODIV,.DIVNOPAR,TINDEX,DUZ,PRSDT)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",64,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",65,0)=" N OUT"
^XTMP("XPDT",7815,"RTN","PRSNUT02",66,0)=" S OUT=0"
^XTMP("XPDT",7815,"RTN","PRSNUT02",67,0)=" I $D(TLNODIV) D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",68,0)=" .  W !!?5,""WARNING:"",!?5,""========="""
^XTMP("XPDT",7815,"RTN","PRSNUT02",69,0)=" .  W !?5,""You have access to the following T&L unit(s), but no division"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",70,0)=" .  W !?5,""  has been entered for the T&L(s):"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",71,0)=" .  S TLE="""""
^XTMP("XPDT",7815,"RTN","PRSNUT02",72,0)=" .  F  S TLE=$O(TLNODIV(TLE)) Q:TLE=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",73,0)=" ..     W !?8,TLE"
^XTMP("XPDT",7815,"RTN","PRSNUT02",74,0)=" .  S OUT=$$ASK^PRSLIB00(0)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",75,0)=" Q:OUT"
^XTMP("XPDT",7815,"RTN","PRSNUT02",76,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",77,0)=" ; get locations that meet the criteria:"
^XTMP("XPDT",7815,"RTN","PRSNUT02",78,0)=" ;   1. user has access"
^XTMP("XPDT",7815,"RTN","PRSNUT02",79,0)=" ;   2. division access parameter matches the users access type"
^XTMP("XPDT",7815,"RTN","PRSNUT02",80,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",81,0)=" D NLACC(.TMPGRPS,.DIVMAP,.DIVGRP,.TLNODIV,.DIVNOPAR,LINDEX,DUZ,PRSDT)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",82,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",83,0)=" N NDIVI"
^XTMP("XPDT",7815,"RTN","PRSNUT02",84,0)=" I $D(DIVNOPAR) D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",85,0)=" .  W !!,""WARNING: "",!,""========"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",86,0)=" .  W !?5,""You have access to location(s) or T&L units in the following"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",87,0)=" .  W !?5,""division(s), but the division parameter has not been set by"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",88,0)=" .  W !?5,""the package coordinator:"",!"
^XTMP("XPDT",7815,"RTN","PRSNUT02",89,0)=" .  S NDIVI=0"
^XTMP("XPDT",7815,"RTN","PRSNUT02",90,0)=" .  F  S NDIVI=$O(DIVNOPAR(NDIVI)) Q:NDIVI=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",91,0)=" ..    D GETS^DIQ(4,NDIVI_"","","".01;99"",""EI"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",92,0)=" ..    W !?7,NDIVI,?17,FIELDS(4,NDIVI_"","",.01,""E""),?34,FIELDS(4,NDIVI_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNUT02",93,0)=" . S OUT=$$ASK^PRSLIB00(0)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",94,0)=" Q:OUT"
^XTMP("XPDT",7815,"RTN","PRSNUT02",95,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",96,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",97,0)=" I '$D(DIVMAP) S GRPS(0)=""0^E^You have no access to T&Ls or Locations"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",98,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",99,0)=" ; count divsions user can access"
^XTMP("XPDT",7815,"RTN","PRSNUT02",100,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",101,0)=" N CNT,NDIVI"
^XTMP("XPDT",7815,"RTN","PRSNUT02",102,0)=" S (NDIVI,CNT)=0 F  S NDIVI=$O(DIVMAP(NDIVI)) Q:NDIVI'>0  S CNT=CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNUT02",103,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",104,0)=" N OUT,SELDIV S OUT=0"
^XTMP("XPDT",7815,"RTN","PRSNUT02",105,0)=" I CNT>1 D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",106,0)=" .  W !?5,""You have access to location(s) or T&L units in more than one division"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",107,0)=" .  N DIC,X,Y,DUOUT,DTOUT S DIC(0)=""AEQMZ"",DIC=""^DIC(4,"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",108,0)=" .  S DIC(""S"")=""I $P($G(DIVMAP(Y)),U,2)'="""""""""""
^XTMP("XPDT",7815,"RTN","PRSNUT02",109,0)=" .  D ^DIC I $D(DUOUT)!$D(DTOUT)!(Y'>0) S OUT=1"
^XTMP("XPDT",7815,"RTN","PRSNUT02",110,0)=" .  S SELDIV=$G(Y)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",111,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",112,0)=" .  S SELDIV=$O(DIVMAP(0))"
^XTMP("XPDT",7815,"RTN","PRSNUT02",113,0)=" I OUT S GRPS(0)=""E^user abort"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",114,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",115,0)=" ; prompt for location or T&L within selected division"
^XTMP("XPDT",7815,"RTN","PRSNUT02",116,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",117,0)=" N DIVPARAM"
^XTMP("XPDT",7815,"RTN","PRSNUT02",118,0)=" S DIVPARAM=$P($G(DIVMAP(+SELDIV)),U,2)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",119,0)=" I ""T^N""'[DIVPARAM S GRPS(0)=""E^Division Parameter Unspecified"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",120,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",121,0)=" N DIC,X,Y,DUOUT,DTOUT,VAUTSTR,VAUTNI,VAUTVB,OUT"
^XTMP("XPDT",7815,"RTN","PRSNUT02",122,0)=" S OUT=0"
^XTMP("XPDT",7815,"RTN","PRSNUT02",123,0)=" ;      select t&l unit or nurse location"
^XTMP("XPDT",7815,"RTN","PRSNUT02",124,0)=" I DIVPARAM=""T"" D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",125,0)=" .  S VAUTSTR=""T&L Units"",DIC=""^PRST(455.5,"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",126,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",127,0)=" .  S VAUTSTR=""Nurse Location"",DIC=""^NURSF(211.4,"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",128,0)=" S DIC(0)=""AEQMZ"",DIC(""S"")=""I $D(TMPGRPS(DIVPARAM,+SELDIV,+Y))"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",129,0)=" I $G(MANY)=1 D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",130,0)=" .  N PRSNGR"
^XTMP("XPDT",7815,"RTN","PRSNUT02",131,0)=" .  S VAUTNI=2,VAUTVB=""PRSNGR"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",132,0)=" .  D FIRST^VAUTOMA"
^XTMP("XPDT",7815,"RTN","PRSNUT02",133,0)=" .  S (CNT,Y)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT02",134,0)=" .  I 'PRSNGR D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",135,0)=" ..    F  S Y=$O(PRSNGR(Y)) Q:Y=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",136,0)=" ...     I $D(TMPGRPS(DIVPARAM,+SELDIV,Y)) D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",137,0)=" ....      S CNT=CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNUT02",138,0)=" ....      S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,+Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM=""N"":+$G(^NURSF(211.4,+Y,0)),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNUT02",139,0)=" .  E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",140,0)=" .. ; all groups selected, so update output array with them"
^XTMP("XPDT",7815,"RTN","PRSNUT02",141,0)=" ..    F  S Y=$O(DIVGRP(DIVPARAM,Y)) Q:Y=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",142,0)=" ...     I $D(TMPGRPS(DIVPARAM,+SELDIV,+Y)) D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",143,0)=" ....       S CNT=CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNUT02",144,0)=" ....       S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,+Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM=""N"":+$G(^NURSF(211.4,+Y,0)),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNUT02",145,0)=" .     S GRPS(0)=CNT_U_DIVPARAM"
^XTMP("XPDT",7815,"RTN","PRSNUT02",146,0)=" .  I CNT=0 S GRPS(0)=""E^Nothing Selected"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",147,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",148,0)=" .; automatically return all groups (no prompt)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",149,0)=" .  I $G(MANY)=2 D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",150,0)=" ..    S (CNT,Y)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT02",151,0)=" ..    F  S Y=$O(DIVGRP(DIVPARAM,Y)) Q:Y=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",152,0)=" ...     I $D(TMPGRPS(DIVPARAM,+SELDIV,+Y)) D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",153,0)=" ....       S CNT=CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNUT02",154,0)=" ....       S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,+Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM=""N"":+$G(^NURSF(211.4,+Y,0)),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNUT02",155,0)=" ..    S GRPS(0)=CNT_U_DIVPARAM"
^XTMP("XPDT",7815,"RTN","PRSNUT02",156,0)=" ..    I CNT=0 S GRPS(0)=""E^Nothing Selected"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",157,0)=" .  E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",158,0)=" ..  D ^DIC"
^XTMP("XPDT",7815,"RTN","PRSNUT02",159,0)=" ..  I $D(DUOUT)!$D(DTOUT)!(Y'>0) S OUT=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",160,0)=" ..  S GRPS(0)=""1""_U_DIVPARAM"
^XTMP("XPDT",7815,"RTN","PRSNUT02",161,0)=" ..  S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,+Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM=""N"":+$G(^NURSF(211.4,+Y,0)),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNUT02",162,0)=" I OUT S GRPS(0)=""E^user abort"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",163,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",164,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",165,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",166,0)="DIVACC(PRSDT,NDIVI) ; Return Nurse Access parameter for a division"
^XTMP("XPDT",7815,"RTN","PRSNUT02",167,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",168,0)=" N PPI,PPE,PARAMIEN,EFFECTPP,IEN456"
^XTMP("XPDT",7815,"RTN","PRSNUT02",169,0)=" S PPI=+$G(^PRST(458,""AD"",PRSDT))"
^XTMP("XPDT",7815,"RTN","PRSNUT02",170,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",171,0)=" ; Default to last pay period on file if none found for PRSDT"
^XTMP("XPDT",7815,"RTN","PRSNUT02",172,0)=" I PPI'>0 S PPI=$O(^PRST(458,9999999),-1)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",173,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",174,0)=" S PPE=$P($G(^PRST(458,PPI,0)),U)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",175,0)=" S IEN456=$O(^PRST(456,""B"",NDIVI,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT02",176,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",177,0)=" Q:IEN456="""" """""
^XTMP("XPDT",7815,"RTN","PRSNUT02",178,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",179,0)=" S EFFECTPP=$O(^PRST(456,IEN456,1,""C"",PPE_""A""),-1)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",180,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",181,0)=" Q:EFFECTPP="""" """""
^XTMP("XPDT",7815,"RTN","PRSNUT02",182,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",183,0)=" Q $O(^PRST(456,IEN456,1,""C"",EFFECTPP,0))_""^""_EFFECTPP"
^XTMP("XPDT",7815,"RTN","PRSNUT02",184,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",185,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",186,0)="TLACC(TG,DM,DG,TND,DNP,INDEX,IEN200,PRSDT) ;get T&Ls user has access to."
^XTMP("XPDT",7815,"RTN","PRSNUT02",187,0)=" ; The T&L's division must also have access parameter set to T&L unit."
^XTMP("XPDT",7815,"RTN","PRSNUT02",188,0)=" ; Also return T&L's with no division or T&L's with a division (but the "
^XTMP("XPDT",7815,"RTN","PRSNUT02",189,0)=" ; division parameter isn't set) for warning messages but don't add "
^XTMP("XPDT",7815,"RTN","PRSNUT02",190,0)=" ; these to selection list."
^XTMP("XPDT",7815,"RTN","PRSNUT02",191,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNUT02",192,0)=" ; OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT02",193,0)=" ;    TG: temporary array of groups user has access to"
^XTMP("XPDT",7815,"RTN","PRSNUT02",194,0)=" ;    DM: Division Map-array of divisions "
^XTMP("XPDT",7815,"RTN","PRSNUT02",195,0)=" ;    DG: Division group array"
^XTMP("XPDT",7815,"RTN","PRSNUT02",196,0)=" ;   TND: T&L with no divisions array"
^XTMP("XPDT",7815,"RTN","PRSNUT02",197,0)=" ;   DNP: divisions with no parameter array"
^XTMP("XPDT",7815,"RTN","PRSNUT02",198,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",199,0)=" ; Example of array"
^XTMP("XPDT",7815,"RTN","PRSNUT02",200,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",201,0)=" ;     TG(""N"",500,5)=""5-NORTH"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",202,0)=" ;     TG(""N"",16433,6)=""3B-EAST"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",203,0)=" ;     TG(""N"",16436,1)=""1E-EAST"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",204,0)=" ;     TG(""T"",500,261)=112"
^XTMP("XPDT",7815,"RTN","PRSNUT02",205,0)=" ;     TG(""T"",16433,1)=221"
^XTMP("XPDT",7815,"RTN","PRSNUT02",206,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",207,0)=" ;  Example of DM array:"
^XTMP("XPDT",7815,"RTN","PRSNUT02",208,0)=" ;    0 node - total divisions ^ access param set ^ access param not set"
^XTMP("XPDT",7815,"RTN","PRSNUT02",209,0)=" ;    other nodes - (IEN file 4)=""Station number"" (field #99)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",210,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNUT02",211,0)=" ;     DM(0)=2"
^XTMP("XPDT",7815,"RTN","PRSNUT02",212,0)=" ;     DM(16433)=""500GA^T&L"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",213,0)=" ;     DM(16436)=""500GD^NL"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",214,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",215,0)=" N TLI,FIELDS,TLE,NDIVACC,NDIVI"
^XTMP("XPDT",7815,"RTN","PRSNUT02",216,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",217,0)=" S DM(0)=""0^0^0"""
^XTMP("XPDT",7815,"RTN","PRSNUT02",218,0)=" S TLI="""""
^XTMP("XPDT",7815,"RTN","PRSNUT02",219,0)=" F  S TLI=$O(^PRST(455.5,INDEX,IEN200,TLI)) Q:TLI=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",220,0)=" .   D GETS^DIQ(455.5,TLI_"","","".01;20.5"",""IE"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",221,0)=" .   S TLE=$G(FIELDS(455.5,TLI_"","",.01,""E""))"
^XTMP("XPDT",7815,"RTN","PRSNUT02",222,0)=" .   S NDIVI=$G(FIELDS(455.5,TLI_"","",20.5,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT02",223,0)=" .   D GETS^DIQ(4,NDIVI_"","","".01;99"",""EI"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",224,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",225,0)=" .  I NDIVI="""" S TND(TLE)="""" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",226,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",227,0)=" .; Get date sensitive access parameter for POC entry/approval"
^XTMP("XPDT",7815,"RTN","PRSNUT02",228,0)=" .; using pay period of PRSDT to find it in the Parameter file"
^XTMP("XPDT",7815,"RTN","PRSNUT02",229,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",230,0)=" .  S NDIVACC=$P($$DIVACC(PRSDT,NDIVI),U)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",231,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",232,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",233,0)=" .; division access should be T&L Unit because we are looking"
^XTMP("XPDT",7815,"RTN","PRSNUT02",234,0)=" .; at what T&L units this user is assigned to"
^XTMP("XPDT",7815,"RTN","PRSNUT02",235,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",236,0)=" .  I NDIVACC'=""T"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",237,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",238,0)=" .  S TG(""T"",NDIVI,TLI)=TLE"
^XTMP("XPDT",7815,"RTN","PRSNUT02",239,0)=" .  S DM(NDIVI)=FIELDS(4,NDIVI_"","",99,""E"")_U_NDIVACC"
^XTMP("XPDT",7815,"RTN","PRSNUT02",240,0)=" .  S DG(""T"",TLI)=NDIVI_U_FIELDS(4,NDIVI_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNUT02",241,0)=" K FIELDS"
^XTMP("XPDT",7815,"RTN","PRSNUT02",242,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",243,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",244,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",245,0)="NLACC(TG,DM,DG,NND,DNP,INDEX,IEN200,PRSDT) ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",246,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",247,0)=" ; SEE DOCUMENTATION IN TLACC above for INPUT/OUPUT vars. The difference"
^XTMP("XPDT",7815,"RTN","PRSNUT02",248,0)=" ; is this finds and returns access to locations instead of T&Ls."
^XTMP("XPDT",7815,"RTN","PRSNUT02",249,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",250,0)=" N LOCI,FIELDS,NDIVI,LOCE,NDIVACC,NURSLOC"
^XTMP("XPDT",7815,"RTN","PRSNUT02",251,0)=" S LOCI=0"
^XTMP("XPDT",7815,"RTN","PRSNUT02",252,0)=" F  S LOCI=$O(^NURSF(211.4,INDEX,IEN200,LOCI)) Q:LOCI'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNUT02",253,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",254,0)=" .  D GETS^DIQ(211.4,LOCI_"","","".01;.02"",""IE"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",255,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",256,0)=" .  S LOCE=$G(FIELDS(211.4,LOCI_"","",.01,""E""))"
^XTMP("XPDT",7815,"RTN","PRSNUT02",257,0)=" .  S NDIVI=$G(FIELDS(211.4,LOCI_"","",.02,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT02",258,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",259,0)=" .   S NURSLOC=+$$GET1^DIQ(44,+$G(^NURSF(211.4,LOCI,0)),3,""I"")"
^XTMP("XPDT",7815,"RTN","PRSNUT02",260,0)=" .   D GETS^DIQ(4,NURSLOC_"","","".01;99"",""EI"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",261,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",262,0)=" .  I NDIVI="""" S NND(LOCE)="""" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",263,0)=" .  S NDIVACC=$P($$DIVACC(PRSDT,NURSLOC),U)"
^XTMP("XPDT",7815,"RTN","PRSNUT02",264,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",265,0)=" .  I NDIVACC="""" S DNP(NURSLOC)="""" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",266,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",267,0)=" .; division access should be by Nursing Location-we are looking"
^XTMP("XPDT",7815,"RTN","PRSNUT02",268,0)=" .; at what Nurse locations this user is assigned to"
^XTMP("XPDT",7815,"RTN","PRSNUT02",269,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",270,0)=" .  I NDIVACC'=""N"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",271,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT02",272,0)=" .  S DM(NURSLOC)=FIELDS(4,NURSLOC_"","",99,""E"")_U_NDIVACC"
^XTMP("XPDT",7815,"RTN","PRSNUT02",273,0)=" .  S TG(""N"",NURSLOC,LOCI)=LOCE"
^XTMP("XPDT",7815,"RTN","PRSNUT02",274,0)=" .  S DG(""N"",LOCI)=NURSLOC_U_FIELDS(4,NURSLOC_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNUT02",275,0)=" K FIELDS"
^XTMP("XPDT",7815,"RTN","PRSNUT02",276,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT02",277,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03")="0^35^B46685593^n/a"
^XTMP("XPDT",7815,"RTN","PRSNUT03",1,0)="PRSNUT03 ;;WOIFO/JAH - Nurse Activity for VANOD Utilities;6/5/2009"
^XTMP("XPDT",7815,"RTN","PRSNUT03",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNUT03",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNUT03",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT03",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",6,0)="PRIMLOC(IEN200) ; RETURN NURSES PRIMARY ASSIGMENT LOCATION"
^XTMP("XPDT",7815,"RTN","PRSNUT03",7,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",8,0)=" ;FUNCTION RETURNS Nurses primary assigment from Nursing Service package"
^XTMP("XPDT",7815,"RTN","PRSNUT03",9,0)=" ;  piece     value"
^XTMP("XPDT",7815,"RTN","PRSNUT03",10,0)=" ;   1        ien of location from 211.4"
^XTMP("XPDT",7815,"RTN","PRSNUT03",11,0)=" ;   2        .01 value which is pointer to 44"
^XTMP("XPDT",7815,"RTN","PRSNUT03",12,0)=" ;   3        external value of .01 field (e.g., 4 WEST)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",13,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",14,0)=" ; INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT03",15,0)=" ;    PRSIEN:  IEN from New Person file (200)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",16,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",17,0)=" Q:IEN200'>0 ""0^Nurse not found"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",18,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",19,0)=" N D0"
^XTMP("XPDT",7815,"RTN","PRSNUT03",20,0)=" S D0=$O(^NURSF(210,""B"",IEN200,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",21,0)=" Q:D0'>0 ""0^Nurse not found"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",22,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",23,0)=" ; call returns external name of nurse location in X"
^XTMP("XPDT",7815,"RTN","PRSNUT03",24,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNUT03",25,0)=" N X,LOCI,LOCE"
^XTMP("XPDT",7815,"RTN","PRSNUT03",26,0)=" D EN2^NURSUT2"
^XTMP("XPDT",7815,"RTN","PRSNUT03",27,0)=" Q $$NLIEN^PRSNUT03(X)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",28,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",29,0)="NLIEN(NLE) ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",30,0)=" ;  INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT03",31,0)=" ;    NLE - nurse location external name (without NUR prefix)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",32,0)=" ;  OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT03",33,0)=" ;    function returns 211.4 IEN ^ .01 pointer ^ external"
^XTMP("XPDT",7815,"RTN","PRSNUT03",34,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",35,0)=" N LOCP,LOCI,LOCE,PL"
^XTMP("XPDT",7815,"RTN","PRSNUT03",36,0)=" D FIND^DIC(211.4,,"".01"",""M"",""NUR ""_NLE,,,,,""PL"",)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",37,0)=" S LOCP=$G(PL(""DILIST"",1,1))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",38,0)=" S LOCI=$G(PL(""DILIST"",2,1))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",39,0)=" S LOCE=$G(PL(""DILIST"",""ID"",1,.01))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",40,0)=" Q LOCI_U_LOCP_U_LOCE"
^XTMP("XPDT",7815,"RTN","PRSNUT03",41,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",42,0)="LOCNOD(LOC) ; given a location in 211.4 return the node necessary to find"
^XTMP("XPDT",7815,"RTN","PRSNUT03",43,0)=" ; all the nurses in 211.8 with that primary location out of the "
^XTMP("XPDT",7815,"RTN","PRSNUT03",44,0)=" ;  ""D"" index on the primary assignment field."
^XTMP("XPDT",7815,"RTN","PRSNUT03",45,0)=" N POINT44"
^XTMP("XPDT",7815,"RTN","PRSNUT03",46,0)=" S POINT44=+$G(^NURSF(211.4,LOC,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",47,0)=" Q:POINT44'>0 -1"
^XTMP("XPDT",7815,"RTN","PRSNUT03",48,0)=" Q +$O(^NURSF(211.8,""B"",POINT44,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",49,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",50,0)="PICKNURS(GROUP,VALUE) ; pick a nurse from a t&l or location"
^XTMP("XPDT",7815,"RTN","PRSNUT03",51,0)=" ; INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT03",52,0)=" ;     GROUP = T for T&L or N for Nurse Location"
^XTMP("XPDT",7815,"RTN","PRSNUT03",53,0)=" ;     VALUE = IEN (T&L 455.5 or Nurse Location 211.4)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",54,0)=" ; OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT03",55,0)=" ;     function returns a Nurse file 450 (IEN^external Name)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",56,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",57,0)=" Q:""T^N^""'[(GROUP_U) 0"
^XTMP("XPDT",7815,"RTN","PRSNUT03",58,0)=" Q:VALUE'>0 0"
^XTMP("XPDT",7815,"RTN","PRSNUT03",59,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",60,0)=" N DIC,X,Y,TLE,D,S1,S2,REFD,S3"
^XTMP("XPDT",7815,"RTN","PRSNUT03",61,0)=" S DIC(""A"")=""Select Nurse: """
^XTMP("XPDT",7815,"RTN","PRSNUT03",62,0)=" S DIC=""^PRSPC("""
^XTMP("XPDT",7815,"RTN","PRSNUT03",63,0)=" S DIC(0)=""AEQZ"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",64,0)=" I GROUP=""T"" D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",65,0)=" . S DIC(""S"")=""I $$ISNURSE^PRSNUT01(Y)"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",66,0)=" . S TLE=$P($G(^PRST(455.5,VALUE,0)),U)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",67,0)=" . S D=""ATL""_TLE"
^XTMP("XPDT",7815,"RTN","PRSNUT03",68,0)=" . D MIX^DIC1"
^XTMP("XPDT",7815,"RTN","PRSNUT03",69,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",70,0)=" .  S S1=""$$ISNURSE^PRSNUT01(Y)"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",71,0)=" .  S S2=""(+$$PRIMLOC^PRSNUT03($G(^PRSPC(Y,200)))=VALUE)"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",72,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",73,0)=" .  S REFD=+$G(^NURSF(211.4,VALUE,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",74,0)=" .  S S3=""$D(^NURSF(211.8,""""D"""",REFD,$P($G(^PRSPC(Y,0)),U),+$G(^PRSPC(+Y,200))))"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",75,0)=" .;  S DIC(""S"")=""I ""_S1_""&""_S2"
^XTMP("XPDT",7815,"RTN","PRSNUT03",76,0)=" .  S DIC(""S"")=""I ""_S1_""&""_S3"
^XTMP("XPDT",7815,"RTN","PRSNUT03",77,0)=" .  D ^DIC"
^XTMP("XPDT",7815,"RTN","PRSNUT03",78,0)=" Q Y"
^XTMP("XPDT",7815,"RTN","PRSNUT03",79,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",80,0)="DIV(GROUP,VALUE) ; Return the division of a location or a T&L unit"
^XTMP("XPDT",7815,"RTN","PRSNUT03",81,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",82,0)=" ; INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT03",83,0)=" ;     GROUP = T for T&L or N for Nurse Location"
^XTMP("XPDT",7815,"RTN","PRSNUT03",84,0)=" ;     VALUE = IEN (T&L 455.5 or Nurse Location 211.4)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",85,0)=" ; OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT03",86,0)=" ;     Function returns division of input group"
^XTMP("XPDT",7815,"RTN","PRSNUT03",87,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",88,0)=" Q:""T^N^""'[(GROUP_U) 0"
^XTMP("XPDT",7815,"RTN","PRSNUT03",89,0)=" N DIV,STANUM,NLP,P4"
^XTMP("XPDT",7815,"RTN","PRSNUT03",90,0)=" I GROUP=""N"" D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",91,0)=" .  S NLP=+$G(^NURSF(211.4,VALUE,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",92,0)=" .  S P4=+$$GET1^DIQ(44,NLP,3,""I"")"
^XTMP("XPDT",7815,"RTN","PRSNUT03",93,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",94,0)=" .  S P4=+$$GET1^DIQ(455.5,VALUE,20.5,""I"")"
^XTMP("XPDT",7815,"RTN","PRSNUT03",95,0)=" S DIV=$$GET1^DIQ(4,P4,.01,""I"")"
^XTMP("XPDT",7815,"RTN","PRSNUT03",96,0)=" S STANUM=$$GET1^DIQ(4,P4,99,""I"")"
^XTMP("XPDT",7815,"RTN","PRSNUT03",97,0)=" Q DIV_U_STANUM_U_P4"
^XTMP("XPDT",7815,"RTN","PRSNUT03",98,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",99,0)="EN ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",100,0)=" N DIR,DIRUT,SRT,Y,X,SHOW"
^XTMP("XPDT",7815,"RTN","PRSNUT03",101,0)=" S DIR(0)=""SB^T:T&L UNIT;N:NURSE LOCATION"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",102,0)=" S DIR(""B"")=""T"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",103,0)=" S DIR(""A"")=""Select Sort: """
^XTMP("XPDT",7815,"RTN","PRSNUT03",104,0)=" D ^DIR"
^XTMP("XPDT",7815,"RTN","PRSNUT03",105,0)=" Q:$D(DIRUT)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",106,0)=" S SRT=Y"
^XTMP("XPDT",7815,"RTN","PRSNUT03",107,0)=" N DIR,Y,X"
^XTMP("XPDT",7815,"RTN","PRSNUT03",108,0)=" S DIR(0)=""Y"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",109,0)=" S DIR(""B"")=""N"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",110,0)=" S DIR(""A"")=""Show Full Nurse Data"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",111,0)=" D ^DIR"
^XTMP("XPDT",7815,"RTN","PRSNUT03",112,0)=" Q:$D(DIRUT)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",113,0)=" S SHOW=Y"
^XTMP("XPDT",7815,"RTN","PRSNUT03",114,0)=" D ALNURLST(0,SRT,SHOW)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",115,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT03",116,0)="ALNURLST(FLAG,SORT,SHOWNURS) ;List all Nurses in file 450"
^XTMP("XPDT",7815,"RTN","PRSNUT03",117,0)=" ; INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT03",118,0)=" ;    FLAG - set to true if you want to attempt to add the Nurse"
^XTMP("XPDT",7815,"RTN","PRSNUT03",119,0)=" ;           to file 200.  this will also convert any numbers in"
^XTMP("XPDT",7815,"RTN","PRSNUT03",120,0)=" ;           the name from file 450 to letters"
^XTMP("XPDT",7815,"RTN","PRSNUT03",121,0)=" ;    SORT - (required) If ""N"" will sort by Nurse location, ""T"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",122,0)=" ;           report sorts by T&L unit."
^XTMP("XPDT",7815,"RTN","PRSNUT03",123,0)=" ;    SHOWNURS - Set to true if you want to see the full info"
^XTMP("XPDT",7815,"RTN","PRSNUT03",124,0)=" ;               about a nurses role"
^XTMP("XPDT",7815,"RTN","PRSNUT03",125,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",126,0)=" Q:""T^N^""'[(SORT_U) 0"
^XTMP("XPDT",7815,"RTN","PRSNUT03",127,0)=" K ^TMP($J,""PRSN"")"
^XTMP("XPDT",7815,"RTN","PRSNUT03",128,0)=" N N2CNT,NCNT"
^XTMP("XPDT",7815,"RTN","PRSNUT03",129,0)=" S (NCNT,N2CNT)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT03",130,0)=" D GATHER"
^XTMP("XPDT",7815,"RTN","PRSNUT03",131,0)=" N STOP"
^XTMP("XPDT",7815,"RTN","PRSNUT03",132,0)=" D REPORT(.STOP)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",133,0)=" D TOTAL(.STOP)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",134,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT03",135,0)="GATHER ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",136,0)=" N PRSIEN,X,IEN200,SSN,OUT,SSN200,NAME,ZNODE,TLE,NURTYP"
^XTMP("XPDT",7815,"RTN","PRSNUT03",137,0)=" N SRT1,SRT2,NL"
^XTMP("XPDT",7815,"RTN","PRSNUT03",138,0)=" S (PRSIEN)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT03",139,0)=" F  S PRSIEN=$O(^PRSPC(PRSIEN)) Q:PRSIEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",140,0)=" .  S X=$$ISNURSE^PRSNUT01(PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",141,0)=" .  I X D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",142,0)=" ..    S NCNT=NCNT+1"
^XTMP("XPDT",7815,"RTN","PRSNUT03",143,0)=" ..    S NURTYP=$P(X,U,2,4)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",144,0)=" ..    I $G(FLAG) W @IOF,!!!"
^XTMP("XPDT",7815,"RTN","PRSNUT03",145,0)=" ..    S IEN200=$P($G(^PRSPC(PRSIEN,200)),U)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",146,0)=" ..    S ZNODE=$G(^PRSPC(PRSIEN,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",147,0)=" ..    S SSN=$P(ZNODE,U,9)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",148,0)=" ..    S NAME=$P(ZNODE,U)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",149,0)=" ..    S TLE=$P(ZNODE,U,8)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",150,0)=" ..    I TLE="""" S TLE=""NONE"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",151,0)=" ..    S (NL,NLE)=""NONE"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",152,0)=" ..    I IEN200>0 D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",153,0)=" ...      S N2CNT=N2CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNUT03",154,0)=" ...      S SSN200=$P($G(^VA(200,IEN200,1)),U,9)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",155,0)=" ...      S NL=$$PRIMLOC^PRSNUT03(IEN200)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",156,0)=" ...      S NLE=$P(NL,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",157,0)=" ...      I NLE="""" S NLE=""NONE"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",158,0)=" ..    E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",159,0)=" ...     I $G(FLAG) D ADDNRS"
^XTMP("XPDT",7815,"RTN","PRSNUT03",160,0)=" ..   S SRT1=$S($G(SORT)=""N"":NLE,1:TLE)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",161,0)=" ..   S SRT2=$S($G(SORT)=""N"":TLE,1:NLE)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",162,0)=" ..   S ^TMP($J,""PRSN"",SRT1,SRT2,PRSIEN)=SSN_U_NAME_U_IEN200_U_$G(SSN200)_U_NLE_U_TLE"
^XTMP("XPDT",7815,"RTN","PRSNUT03",163,0)=" ..   S ^TMP($J,""PRSN"",SRT1,SRT2,PRSIEN,1)=NURTYP"
^XTMP("XPDT",7815,"RTN","PRSNUT03",164,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT03",165,0)="REPORT(STOP) ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",166,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",167,0)=" ;Print the data in the tmp array by the sort parameter"
^XTMP("XPDT",7815,"RTN","PRSNUT03",168,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",169,0)=" N PAGE,GIEN,PRSIEN,DAT,SD,NL,NTL,TL"
^XTMP("XPDT",7815,"RTN","PRSNUT03",170,0)=" S (PAGE,STOP)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT03",171,0)=" S GROUP="""""
^XTMP("XPDT",7815,"RTN","PRSNUT03",172,0)=" D HDR"
^XTMP("XPDT",7815,"RTN","PRSNUT03",173,0)=" F  S GROUP=$O(^TMP($J,""PRSN"",GROUP)) Q:GROUP=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",174,0)=" .  W !?17,$S($G(SORT)=""N"":""NURSING LOCATION: "",1:""T&L UNIT: "")"
^XTMP("XPDT",7815,"RTN","PRSNUT03",175,0)=" .  I SORT=""N"" D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",176,0)=" ..    S GIEN=$$NLIEN^PRSNUT03(GROUP)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",177,0)=" .  E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",178,0)=" ..    S GIEN=$O(^PRST(455.5,""B"",GROUP,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",179,0)=" .  S SD=$$DIV^PRSNUT03(SORT,+GIEN)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",180,0)=" .  W GROUP,!,?17,""STATION: "",$P(SD,U),"" ("",$P(SD,U,2),"")"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",181,0)=" .  W !?12,""--------------------------------------------"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",182,0)=" .  S SRT2="""""
^XTMP("XPDT",7815,"RTN","PRSNUT03",183,0)=" .  F  S SRT2=$O(^TMP($J,""PRSN"",GROUP,SRT2)) Q:SRT2=""""!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",184,0)=" ..   S PRSIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNUT03",185,0)=" ..   F  S PRSIEN=$O(^TMP($J,""PRSN"",GROUP,SRT2,PRSIEN)) Q:PRSIEN'>0!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",186,0)=" ...    S DAT=$G(^TMP($J,""PRSN"",GROUP,SRT2,PRSIEN))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",187,0)=" ...    S NURTYP=$G(^TMP($J,""PRSN"",GROUP,SRT2,PRSIEN,1))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",188,0)=" ...    S NAME=$P(DAT,U,2)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",189,0)=" ...    S IEN200=$P(DAT,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",190,0)=" ...    S NL=$P(DAT,U,5)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",191,0)=" ...    S TL=$P(DAT,U,6)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",192,0)=" ...    S SSN=$E($P(DAT,U,1),6,9)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",193,0)=" ...    W !,NAME,?23,SSN,?28,PRSIEN,?35,IEN200"
^XTMP("XPDT",7815,"RTN","PRSNUT03",194,0)=" ...    W ?46,$S($G(SORT)=""N"":TL,1:NL)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",195,0)=" ...    I $G(SHOWNURS) D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",196,0)=" ....      W !,?5,$P(NURTYP,U,1),?25,$P(NURTYP,U,2),?50,$P(NURTYP,U,3),!"
^XTMP("XPDT",7815,"RTN","PRSNUT03",197,0)=" ...    E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",198,0)=" ....      S X=$P(NURTYP,U)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",199,0)=" ....      S NTL=$L(X)"
^XTMP("XPDT",7815,"RTN","PRSNUT03",200,0)=" ....      I NTL>15 D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",201,0)=" .....        S DIWL=64"
^XTMP("XPDT",7815,"RTN","PRSNUT03",202,0)=" .....        S DIWF=""WC15"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",203,0)=" .....        K ^UTILITY($J,""W"")"
^XTMP("XPDT",7815,"RTN","PRSNUT03",204,0)=" .....        D ^DIWP,^DIWW K DIWL,DIWF"
^XTMP("XPDT",7815,"RTN","PRSNUT03",205,0)=" ....      E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",206,0)=" .....       I $X>62 W !"
^XTMP("XPDT",7815,"RTN","PRSNUT03",207,0)=" .....       W ?63,X"
^XTMP("XPDT",7815,"RTN","PRSNUT03",208,0)=" ...   I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() D HDR"
^XTMP("XPDT",7815,"RTN","PRSNUT03",209,0)=" ...   I $G(FLAG) S STOP=$$ASK^PRSLIB00()"
^XTMP("XPDT",7815,"RTN","PRSNUT03",210,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT03",211,0)="TOTAL(STOP) ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",212,0)=" W !,""ALL DONE"" I STOP W "":  User Aborted"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",213,0)=" W !,""VA Nurse Count: "",NCNT,!,""Nurses with DUZ: "",N2CNT"
^XTMP("XPDT",7815,"RTN","PRSNUT03",214,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT03",215,0)="ADDNRS ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",216,0)=" ; edit PAID 450 Employee name replaceing digits 0..9 with A..J"
^XTMP("XPDT",7815,"RTN","PRSNUT03",217,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",218,0)=" N NEWNAME"
^XTMP("XPDT",7815,"RTN","PRSNUT03",219,0)=" S NEWNAME=$TR(NAME,""0123456789"",""ABCDEFGHIJ"")"
^XTMP("XPDT",7815,"RTN","PRSNUT03",220,0)=" W !,""NAME: "",NAME,!,""NEW:  "",NEWNAME,!,""Y: "",Y,!,""Y(0): "",$G(Y(0))"
^XTMP("XPDT",7815,"RTN","PRSNUT03",221,0)=" N DIE,DR,DA"
^XTMP("XPDT",7815,"RTN","PRSNUT03",222,0)=" S DIE=""^PRSPC("",DA=PRSIEN,DR="".01///^S X=NEWNAME"" D ^DIE"
^XTMP("XPDT",7815,"RTN","PRSNUT03",223,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",224,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",225,0)=" ; add PAID Nurse employees to file 200"
^XTMP("XPDT",7815,"RTN","PRSNUT03",226,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",227,0)=" N DIC,X,Y"
^XTMP("XPDT",7815,"RTN","PRSNUT03",228,0)=" K DD,DO"
^XTMP("XPDT",7815,"RTN","PRSNUT03",229,0)=" S DIC(0)=""LZ"",X=NEWNAME,DIC=""^VA(200,"" D FILE^DICN"
^XTMP("XPDT",7815,"RTN","PRSNUT03",230,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",231,0)=" ; edit ssn in 200"
^XTMP("XPDT",7815,"RTN","PRSNUT03",232,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",233,0)=" I +Y D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",234,0)=" . S DIE=""^VA(200,"",DA=+Y,DR=""9///^S X=SSN"" D ^DIE"
^XTMP("XPDT",7815,"RTN","PRSNUT03",235,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT03",236,0)="HDR ;"
^XTMP("XPDT",7815,"RTN","PRSNUT03",237,0)=" W @IOF"
^XTMP("XPDT",7815,"RTN","PRSNUT03",238,0)=" S PAGE=PAGE+1"
^XTMP("XPDT",7815,"RTN","PRSNUT03",239,0)=" W ?68,""PAGE "",PAGE"
^XTMP("XPDT",7815,"RTN","PRSNUT03",240,0)=" W !,"" NAME"",?21,""SSN"",?26,""IEN 450"",?35,""IEN 200"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",241,0)=" W ?46,$S($G(SORT)=""N"":""T&L"",1:""PRIM LOC"")"
^XTMP("XPDT",7815,"RTN","PRSNUT03",242,0)=" I $G(SHOWNURS) D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",243,0)=" .  W !,""     NURSE ROLE"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",244,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT03",245,0)=" .  W ?64,""NURSE TYPE"""
^XTMP("XPDT",7815,"RTN","PRSNUT03",246,0)=" W !,""======================================================================="""
^XTMP("XPDT",7815,"RTN","PRSNUT03",247,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT04")="0^36^B44893532^n/a"
^XTMP("XPDT",7815,"RTN","PRSNUT04",1,0)="PRSNUT04 ;;WOIFO/JAH - Nurse Activity for VANOD Utilities;8/25/2009"
^XTMP("XPDT",7815,"RTN","PRSNUT04",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNUT04",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNUT04",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT04",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",6,0)="HASACCES(IEN200,PRSIEN,ACCTYP) ;FUNCTION RETURNS TRUE if the user defined in "
^XTMP("XPDT",7815,"RTN","PRSNUT04",7,0)=" ; parameter IEN200 has access to the Nurse defined in parameter PRSIEN"
^XTMP("XPDT",7815,"RTN","PRSNUT04",8,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",9,0)=" ;INPUT:  "
^XTMP("XPDT",7815,"RTN","PRSNUT04",10,0)=" ;   IEN200: accessors' internal entry number in file 200 (DUZ)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",11,0)=" ;   PRSIEN: nurses' internal entry number in file 450."
^XTMP("XPDT",7815,"RTN","PRSNUT04",12,0)=" ;   ACCTYP: 'E' OR 'A' for data Entry or Approver"
^XTMP("XPDT",7815,"RTN","PRSNUT04",13,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",14,0)=" ;OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT04",15,0)=" ;   HASACCES: function returns true if user has access to this nurse"
^XTMP("XPDT",7815,"RTN","PRSNUT04",16,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",17,0)=" N HASACCES S HASACCES=0"
^XTMP("XPDT",7815,"RTN","PRSNUT04",18,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",19,0)=" ; Get T&L unit and default location of Nurse plus division "
^XTMP("XPDT",7815,"RTN","PRSNUT04",20,0)=" ; associated with each"
^XTMP("XPDT",7815,"RTN","PRSNUT04",21,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",22,0)=" ;  T&L + division"
^XTMP("XPDT",7815,"RTN","PRSNUT04",23,0)=" N TLE,TLI"
^XTMP("XPDT",7815,"RTN","PRSNUT04",24,0)=" D GETS^DIQ(450,PRSIEN_"","",7,""I"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",25,0)=" S TLE=$G(FIELDS(450,PRSIEN_"","",7,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT04",26,0)=" S TLI=$O(^PRST(455.5,""B"",TLE,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT04",27,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",28,0)=" I TLI>0 D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",29,0)=" .  D GETS^DIQ(455.5,TLI_"","",""20.5"",""I"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",30,0)=" .  S TLDIVI=$G(FIELDS(455.5,TLI_"","",20.5,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT04",31,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",32,0)=" ;  Nurses (PRSIEN) Primary Location + division"
^XTMP("XPDT",7815,"RTN","PRSNUT04",33,0)=" N NLI,NURIE200,LINDEX,NLDIVI"
^XTMP("XPDT",7815,"RTN","PRSNUT04",34,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",35,0)=" S NURIE200=+$G(^PRSPC(PRSIEN,200))"
^XTMP("XPDT",7815,"RTN","PRSNUT04",36,0)=" S NLI=+$$PRIMLOC^PRSNUT03(NURIE200)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",37,0)=" S NLDIVI=$P($$DIV^PRSNUT03(""N"",+NLI),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",38,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",39,0)=" ;  Build list of all T&Ls and Locations that (APPROVER/ENTRY PERS)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",40,0)=" ;  in IEN200 has access to subscripted by group ien and division ien"
^XTMP("XPDT",7815,"RTN","PRSNUT04",41,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",42,0)=" S TINDEX=$S(ACCTYP=""E"":""AE"",ACCTYP=""A"":""AR"",1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNUT04",43,0)=" S LINDEX=$S(ACCTYP=""E"":""AE"",ACCTYP=""A"":""AA"",1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNUT04",44,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",45,0)=" N TMPGRPS,DIVMAP,DIVGRP,TN,DN"
^XTMP("XPDT",7815,"RTN","PRSNUT04",46,0)=" D TLACC^PRSNUT02(.TMPGRPS,.DIVMAP,.DIVGRP,.TN,.DN,TINDEX,IEN200,DT)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",47,0)=" D NLACC^PRSNUT02(.TMPGRPS,.DIVMAP,.DIVGRP,.TN,.DN,LINDEX,IEN200,DT)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",48,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNUT04",49,0)=" ; Array (returned from above calls) and shown below indicates that"
^XTMP("XPDT",7815,"RTN","PRSNUT04",50,0)=" ; the user (IEN200) has access to both 'N' nurse locations"
^XTMP("XPDT",7815,"RTN","PRSNUT04",51,0)=" ; and 'T' t&l units for division 16433 and division 500"
^XTMP("XPDT",7815,"RTN","PRSNUT04",52,0)=" ; the last subscipt is the IEN of the t&l or nurse location"
^XTMP("XPDT",7815,"RTN","PRSNUT04",53,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",54,0)=" ;   TMPGRPS(""N"",16433,4)=""3B-WEST 500GA"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",55,0)=" ;   TMPGRPS(""N"",16433,5)=""5-NORTH"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",56,0)=" ;   TMPGRPS(""T"",500,222)=110"
^XTMP("XPDT",7815,"RTN","PRSNUT04",57,0)=" ;   TMPGRPS(""T"",500,230)=117"
^XTMP("XPDT",7815,"RTN","PRSNUT04",58,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",59,0)=" ; Check to see if IEN200 (ENTRY/APPROVAL) matches access to the"
^XTMP("XPDT",7815,"RTN","PRSNUT04",60,0)=" ; Nurses (PRSIEN) location or T&L (including correct division"
^XTMP("XPDT",7815,"RTN","PRSNUT04",61,0)=" ; parameter for that access)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",62,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",63,0)=" I TLDIVI>0,$D(TMPGRPS(""T"",TLDIVI,TLI)) S HASACCES=1"
^XTMP("XPDT",7815,"RTN","PRSNUT04",64,0)=" I NLDIVI>0,$D(TMPGRPS(""N"",NLDIVI,NLI)) S HASACCES=1"
^XTMP("XPDT",7815,"RTN","PRSNUT04",65,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",66,0)=" Q HASACCES"
^XTMP("XPDT",7815,"RTN","PRSNUT04",67,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",68,0)=" ;================================================================="
^XTMP("XPDT",7815,"RTN","PRSNUT04",69,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",70,0)="PIKGROUP(GRPS,GCHOICE,MANY) ;return the groups selected by a user regardless of access"
^XTMP("XPDT",7815,"RTN","PRSNUT04",71,0)=" K GRPS"
^XTMP("XPDT",7815,"RTN","PRSNUT04",72,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",73,0)=" ;INPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT04",74,0)=" ;  GCHOICE:  (optional) Flag set to T, N or null"
^XTMP("XPDT",7815,"RTN","PRSNUT04",75,0)=" ;            T: user will be prompted for T&L units"
^XTMP("XPDT",7815,"RTN","PRSNUT04",76,0)=" ;            N: user will be prompted for Nurse Locations"
^XTMP("XPDT",7815,"RTN","PRSNUT04",77,0)=" ;         null: user will be asked T&L units or locations"
^XTMP("XPDT",7815,"RTN","PRSNUT04",78,0)=" ;  MANY-  (optional) set this flag to true (1) if more than one"
^XTMP("XPDT",7815,"RTN","PRSNUT04",79,0)=" ;         group can be selected"
^XTMP("XPDT",7815,"RTN","PRSNUT04",80,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",81,0)=" ;OUTPUT:"
^XTMP("XPDT",7815,"RTN","PRSNUT04",82,0)=" ;PROCEDURE INTERACTS WITH USER AND RETURNS THE FOLLWOING:"
^XTMP("XPDT",7815,"RTN","PRSNUT04",83,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",84,0)=" ;  GRPS - An array with the users selected groups subscripted"
^XTMP("XPDT",7815,"RTN","PRSNUT04",85,0)=" ;         by .01 field value (t&l external code or location pointer)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",86,0)=" ;  GRPS(0) - will contain the number selected followed by either"
^XTMP("XPDT",7815,"RTN","PRSNUT04",87,0)=" ;            N,T, or E for Nurse Location, T&L unit or Error"
^XTMP("XPDT",7815,"RTN","PRSNUT04",88,0)=" ;            If piece 2 is an E then piece 3 will contain error"
^XTMP("XPDT",7815,"RTN","PRSNUT04",89,0)=" ;            description"
^XTMP("XPDT",7815,"RTN","PRSNUT04",90,0)=" ;         "
^XTMP("XPDT",7815,"RTN","PRSNUT04",91,0)=" ;  Node Definition: an Upparrow delimited string with the following:"
^XTMP("XPDT",7815,"RTN","PRSNUT04",92,0)=" ;     PEICE  DEFINITION"
^XTMP("XPDT",7815,"RTN","PRSNUT04",93,0)=" ;     =====  =============================="
^XTMP("XPDT",7815,"RTN","PRSNUT04",94,0)=" ;       1    internal entry number of field value of group "
^XTMP("XPDT",7815,"RTN","PRSNUT04",95,0)=" ;       2     IEN of Division associated with this Group"
^XTMP("XPDT",7815,"RTN","PRSNUT04",96,0)=" ;       3     External value of division"
^XTMP("XPDT",7815,"RTN","PRSNUT04",97,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",98,0)=" ;  Sample Call:"
^XTMP("XPDT",7815,"RTN","PRSNUT04",99,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",100,0)=" ;      D PIKGROUP^PRSNUT04(.G,""T"",1)    "
^XTMP("XPDT",7815,"RTN","PRSNUT04",101,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",102,0)=" ;  Sample Return:"
^XTMP("XPDT",7815,"RTN","PRSNUT04",103,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",104,0)=" ;      G(0)=""3^N"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",105,0)=" ;      G(""1E-EAST"")=""1^16433^500GA"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",106,0)=" ;      G(""3B-EAST"")=""6^16433^500GA"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",107,0)=" ;      G(""3B-WEST"")=""4^16433^500GA"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",108,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",109,0)=" ; Build temporary list of all possible groups "
^XTMP("XPDT",7815,"RTN","PRSNUT04",110,0)=" ;  If user has access to groups in more than one division then"
^XTMP("XPDT",7815,"RTN","PRSNUT04",111,0)=" ;  prompt to select a division"
^XTMP("XPDT",7815,"RTN","PRSNUT04",112,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",113,0)=" ; Example of TMPGRPS array"
^XTMP("XPDT",7815,"RTN","PRSNUT04",114,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",115,0)=" ;     TMPGRPS(""N"",500,5)=""5-NORTH"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",116,0)=" ;     TMPGRPS(""N"",16433,6)=""3B-EAST"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",117,0)=" ;     TMPGRPS(""N"",16436,1)=""1E-EAST"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",118,0)=" ;     TMPGRPS(""T"",500,261)=112"
^XTMP("XPDT",7815,"RTN","PRSNUT04",119,0)=" ;     TMPGRPS(""T"",16433,1)=221"
^XTMP("XPDT",7815,"RTN","PRSNUT04",120,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",121,0)=" ;  Example of DIVMAP array:"
^XTMP("XPDT",7815,"RTN","PRSNUT04",122,0)=" ;    0 node - total divisions ^ access param set ^ access param not set"
^XTMP("XPDT",7815,"RTN","PRSNUT04",123,0)=" ;    other nodes - (IEN file 4)=""Station number"" (field #99)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",124,0)=" ; "
^XTMP("XPDT",7815,"RTN","PRSNUT04",125,0)=" ;    DIVMAP(0)=2"
^XTMP("XPDT",7815,"RTN","PRSNUT04",126,0)=" ;    DIVMAP(16433)=""500GA^T&L"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",127,0)=" ;    DIVMAP(16436)=""500GD^NL"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",128,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",129,0)=" N TLI,FIELDS,TLE,TMPGRPS,DIVMAP,LOCI,LOCE,I,DIVNOPAR,EFFECTPP,DIVPARAM"
^XTMP("XPDT",7815,"RTN","PRSNUT04",130,0)=" N NURSLOC,SELDIV,TINDEX,TLDIVI,DIVGRP"
^XTMP("XPDT",7815,"RTN","PRSNUT04",131,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",132,0)=" S DIVMAP(0)=""0^0^0"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",133,0)=" S TLI=0"
^XTMP("XPDT",7815,"RTN","PRSNUT04",134,0)=" F  S TLI=$O(^PRST(455.5,TLI)) Q:TLI'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",135,0)=" .   D GETS^DIQ(455.5,TLI_"","","".01;20.5"",""IE"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",136,0)=" .   S TLE=$G(FIELDS(455.5,TLI_"","",.01,""E""))"
^XTMP("XPDT",7815,"RTN","PRSNUT04",137,0)=" .   S DIVI=$G(FIELDS(455.5,TLI_"","",20.5,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT04",138,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",139,0)=" .  Q:DIVI="""""
^XTMP("XPDT",7815,"RTN","PRSNUT04",140,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",141,0)=" .   D GETS^DIQ(4,DIVI_"","","".01;99"",""EI"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",142,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",143,0)=" .  S TMPGRPS(""T"",DIVI,TLI)=TLE"
^XTMP("XPDT",7815,"RTN","PRSNUT04",144,0)=" .  S DIVMAP(DIVI)=FIELDS(4,DIVI_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNUT04",145,0)=" .  S DIVGRP(""T"",TLI)=DIVI_U_FIELDS(4,DIVI_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNUT04",146,0)=" K FIELDS"
^XTMP("XPDT",7815,"RTN","PRSNUT04",147,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",148,0)=" S LOCI=0"
^XTMP("XPDT",7815,"RTN","PRSNUT04",149,0)=" F  S LOCI=$O(^NURSF(211.4,LOCI)) Q:LOCI'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",150,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",151,0)=" .  D GETS^DIQ(211.4,LOCI_"","","".01;.02"",""IE"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",152,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",153,0)=" .  S LOCE=$G(FIELDS(211.4,LOCI_"","",.01,""E""))"
^XTMP("XPDT",7815,"RTN","PRSNUT04",154,0)=" .  S DIVI=$G(FIELDS(211.4,LOCI_"","",.02,""I""))"
^XTMP("XPDT",7815,"RTN","PRSNUT04",155,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",156,0)=" .   S NURSLOC=+$$GET1^DIQ(44,+$G(^NURSF(211.4,LOCI,0)),3,""I"")"
^XTMP("XPDT",7815,"RTN","PRSNUT04",157,0)=" .   D GETS^DIQ(4,NURSLOC_"","","".01;99"",""EI"",""FIELDS("",,)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",158,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",159,0)=" .  Q:DIVI="""""
^XTMP("XPDT",7815,"RTN","PRSNUT04",160,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",161,0)=" .  S DIVMAP(NURSLOC)=FIELDS(4,NURSLOC_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNUT04",162,0)=" .  S TMPGRPS(""N"",NURSLOC,LOCI)=LOCE"
^XTMP("XPDT",7815,"RTN","PRSNUT04",163,0)=" .  S DIVGRP(""N"",LOCI)=NURSLOC_U_FIELDS(4,NURSLOC_"","",99,""E"")"
^XTMP("XPDT",7815,"RTN","PRSNUT04",164,0)=" K FIELDS"
^XTMP("XPDT",7815,"RTN","PRSNUT04",165,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",166,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",167,0)=" I '$D(DIVMAP) S GRPS(0)=""0^E^No T&Ls or Locations found with correct division setup."" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT04",168,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",169,0)=" ; count number of divisions with t&ls and locations"
^XTMP("XPDT",7815,"RTN","PRSNUT04",170,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",171,0)=" N CNT,DIVI"
^XTMP("XPDT",7815,"RTN","PRSNUT04",172,0)=" S (DIVI,CNT)=0 F  S DIVI=$O(DIVMAP(DIVI)) Q:DIVI'>0  S CNT=CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNUT04",173,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",174,0)=" N OUT S OUT=0"
^XTMP("XPDT",7815,"RTN","PRSNUT04",175,0)=" I CNT>1 D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",176,0)=" .  W !?5,""Location(s) and T&L units are in more than one division"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",177,0)=" .  N DIC,X,Y,DUOUT,DTOUT"
^XTMP("XPDT",7815,"RTN","PRSNUT04",178,0)=" .  S DIC(0)=""AEQMZ"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",179,0)=" .  S DIC=""^DIC(4,"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",180,0)=" .  S DIC(""S"")=""I $D(DIVMAP(Y))"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",181,0)=" .  D ^DIC"
^XTMP("XPDT",7815,"RTN","PRSNUT04",182,0)=" .  I $D(DUOUT)!$D(DTOUT)!(Y'>0) S OUT=1"
^XTMP("XPDT",7815,"RTN","PRSNUT04",183,0)=" .  S SELDIV=$G(Y)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",184,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",185,0)=" .  S SELDIV=$O(DIVMAP(0))"
^XTMP("XPDT",7815,"RTN","PRSNUT04",186,0)=" I OUT S GRPS(0)=""E^user abort"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT04",187,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",188,0)=" ; prompt user for location or T&L within selected division"
^XTMP("XPDT",7815,"RTN","PRSNUT04",189,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",190,0)=" N DIR,DIRUT,X,Y"
^XTMP("XPDT",7815,"RTN","PRSNUT04",191,0)=" I ""^N^T^""'[(U_$G(GCHOICE)_U) D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",192,0)=" .  S DIR(0)=""S^T:T&L Units;N:Nurse Locations"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",193,0)=" .  S DIR(""A"")=""Enter Selection"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",194,0)=" .  S DIR(""?"")=""Enter whether you want to select T&L units or Locations."""
^XTMP("XPDT",7815,"RTN","PRSNUT04",195,0)=" .  D ^DIR"
^XTMP("XPDT",7815,"RTN","PRSNUT04",196,0)=" .  S DIVPARAM=Y"
^XTMP("XPDT",7815,"RTN","PRSNUT04",197,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",198,0)=" .  S DIVPARAM=GCHOICE"
^XTMP("XPDT",7815,"RTN","PRSNUT04",199,0)=" I $D(DIRUT) S GRPS(0)=""E^user abort"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT04",200,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",201,0)=" N DIC,X,Y,DUOUT,DTOUT,VAUTSTR,VAUTNI,VAUTVB,OUT,PRSNGR"
^XTMP("XPDT",7815,"RTN","PRSNUT04",202,0)=" S OUT=0"
^XTMP("XPDT",7815,"RTN","PRSNUT04",203,0)=" ;      select t&l unit OR nurse location"
^XTMP("XPDT",7815,"RTN","PRSNUT04",204,0)=" I DIVPARAM=""T"" D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",205,0)=" .  S VAUTSTR=""T&L Units"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",206,0)=" .  S DIC=""^PRST(455.5,"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",207,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",208,0)=" .  S VAUTSTR=""Nurse Location"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",209,0)=" .  S DIC=""^NURSF(211.4,"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",210,0)=" S DIC(0)=""AEQMZ"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",211,0)=" S DIC(""S"")=""I $D(TMPGRPS(DIVPARAM,+SELDIV,+Y))"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",212,0)=" I $G(MANY) D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",213,0)=" .  S VAUTNI=2,VAUTVB=""PRSNGR"""
^XTMP("XPDT",7815,"RTN","PRSNUT04",214,0)=" .  D FIRST^VAUTOMA"
^XTMP("XPDT",7815,"RTN","PRSNUT04",215,0)=" .  S (CNT,Y)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT04",216,0)=" .  I 'PRSNGR D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",217,0)=" ..    F  S Y=$O(PRSNGR(Y)) Q:Y=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",218,0)=" ...     I $D(TMPGRPS(DIVPARAM,+SELDIV,Y)) D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",219,0)=" ....      S CNT=CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNUT04",220,0)=" ....      S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM=""N"":+$G(^NURSF(211.4,+Y,0)),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNUT04",221,0)=" .  E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",222,0)=" ..    ; all groups selected, so update output array with them"
^XTMP("XPDT",7815,"RTN","PRSNUT04",223,0)=" ..    F  S Y=$O(DIVGRP(DIVPARAM,Y)) Q:Y=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",224,0)=" ...     I $D(TMPGRPS(DIVPARAM,+SELDIV,Y)) D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",225,0)=" ....      S CNT=CNT+1"
^XTMP("XPDT",7815,"RTN","PRSNUT04",226,0)=" ....      S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM=""N"":+$G(^NURSF(211.4,+Y,0)),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNUT04",227,0)=" .;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",228,0)=" .  S GRPS(0)=CNT_U_$E(DIVPARAM,1,1)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",229,0)=" .  I CNT=0 S GRPS(0)=""E^Nothing Selected"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT04",230,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT04",231,0)=" .  D ^DIC"
^XTMP("XPDT",7815,"RTN","PRSNUT04",232,0)=" .  I $D(DUOUT)!$D(DTOUT)!(Y'>0) S OUT=1 Q"
^XTMP("XPDT",7815,"RTN","PRSNUT04",233,0)=" .  S GRPS(0)=""1""_U_$E(DIVPARAM,1,1)"
^XTMP("XPDT",7815,"RTN","PRSNUT04",234,0)=" .  S GRPS($G(TMPGRPS(DIVPARAM,+SELDIV,+Y)))=+Y_U_$G(DIVGRP(DIVPARAM,+Y))_U_$S(DIVPARAM=""N"":+$G(^NURSF(211.4,+Y,0)),1:"""")"
^XTMP("XPDT",7815,"RTN","PRSNUT04",235,0)=" I OUT S GRPS(0)=""E^user abort"" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT04",236,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT04",237,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT04",238,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT05")="0^37^B7964688^n/a"
^XTMP("XPDT",7815,"RTN","PRSNUT05",1,0)="PRSNUT05 ;WOIFO/JAH - Nurse Activity for VANOD Utilities;6/5/2009"
^XTMP("XPDT",7815,"RTN","PRSNUT05",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSNUT05",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSNUT05",4,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT05",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT05",6,0)="SHOWSU ; SHOW SYSTEM SETUP WITH DIVISIONS, NURSE LOCATIONS AND T&Ls"
^XTMP("XPDT",7815,"RTN","PRSNUT05",7,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT05",8,0)=" N %ZIS,POP,IOP"
^XTMP("XPDT",7815,"RTN","PRSNUT05",9,0)=" S %ZIS=""MQ"""
^XTMP("XPDT",7815,"RTN","PRSNUT05",10,0)=" D ^%ZIS"
^XTMP("XPDT",7815,"RTN","PRSNUT05",11,0)=" Q:POP"
^XTMP("XPDT",7815,"RTN","PRSNUT05",12,0)=" I $D(IO(""Q"")) D"
^XTMP("XPDT",7815,"RTN","PRSNUT05",13,0)=" .    K IO(""Q"")"
^XTMP("XPDT",7815,"RTN","PRSNUT05",14,0)=" .    S ZTDESC=""PRSN SHOW SYSTEM SETUP REPORT"""
^XTMP("XPDT",7815,"RTN","PRSNUT05",15,0)=" .    S ZTRTN=""MAIN^PRSNUT05"""
^XTMP("XPDT",7815,"RTN","PRSNUT05",16,0)=" .    D ^%ZTLOAD"
^XTMP("XPDT",7815,"RTN","PRSNUT05",17,0)=" .    I $D(ZTSK) S ZTREQ=""@"" W !,""Request ""_ZTSK_"" Queued."""
^XTMP("XPDT",7815,"RTN","PRSNUT05",18,0)=" .    K ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE"
^XTMP("XPDT",7815,"RTN","PRSNUT05",19,0)=" E  D"
^XTMP("XPDT",7815,"RTN","PRSNUT05",20,0)=" .    D MAIN"
^XTMP("XPDT",7815,"RTN","PRSNUT05",21,0)=" D ^%ZISC"
^XTMP("XPDT",7815,"RTN","PRSNUT05",22,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT05",23,0)="MAIN ;"
^XTMP("XPDT",7815,"RTN","PRSNUT05",24,0)=" N RUNDT"
^XTMP("XPDT",7815,"RTN","PRSNUT05",25,0)=" S RUNDT=$E(DT,4,5)_""/""_$E(DT,5,6)_""/""_(1700+$E(DT,1,3))"
^XTMP("XPDT",7815,"RTN","PRSNUT05",26,0)=" D BLDMAP(.DIVMAP)"
^XTMP("XPDT",7815,"RTN","PRSNUT05",27,0)=" D LOCTL(.DATA,.DIVMAP)"
^XTMP("XPDT",7815,"RTN","PRSNUT05",28,0)=" D SHOLOCTL(.DATA,.DIVMAP,RUNDT)"
^XTMP("XPDT",7815,"RTN","PRSNUT05",29,0)=" D CLEANUP"
^XTMP("XPDT",7815,"RTN","PRSNUT05",30,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT05",31,0)="LOCTL(DATA,DIVMAP) ;  Build an array that sorts locations with t&ls and counts"
^XTMP("XPDT",7815,"RTN","PRSNUT05",32,0)=" ;  the number of nurses at the location and t&l"
^XTMP("XPDT",7815,"RTN","PRSNUT05",33,0)=" N PRSIEN,X,OUT,NAME,ZNODE,NCNT,TLE,NLDIV,IEN200,NL,NLE"
^XTMP("XPDT",7815,"RTN","PRSNUT05",34,0)=" S (NCNT,PRSIEN)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT05",35,0)=" F  S PRSIEN=$O(^PRSPC(PRSIEN)) Q:PRSIEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNUT05",36,0)=" .  S X=$$ISNURSE^PRSNUT01(PRSIEN)"
^XTMP("XPDT",7815,"RTN","PRSNUT05",37,0)=" .  I X D"
^XTMP("XPDT",7815,"RTN","PRSNUT05",38,0)=" ..    S NCNT=NCNT+1"
^XTMP("XPDT",7815,"RTN","PRSNUT05",39,0)=" ..    S IEN200=$P($G(^PRSPC(PRSIEN,200)),U)"
^XTMP("XPDT",7815,"RTN","PRSNUT05",40,0)=" ..    S ZNODE=$G(^PRSPC(PRSIEN,0))"
^XTMP("XPDT",7815,"RTN","PRSNUT05",41,0)=" ..    S TLE=$P(ZNODE,U,8)"
^XTMP("XPDT",7815,"RTN","PRSNUT05",42,0)=" ..    I TLE="""" S TLE=""ZZZ"""
^XTMP("XPDT",7815,"RTN","PRSNUT05",43,0)=" ..    S (NL,NLE)=""NONE"""
^XTMP("XPDT",7815,"RTN","PRSNUT05",44,0)=" ..    I IEN200>0 D"
^XTMP("XPDT",7815,"RTN","PRSNUT05",45,0)=" ...      S NL=$$PRIMLOC^PRSNUT03(IEN200)"
^XTMP("XPDT",7815,"RTN","PRSNUT05",46,0)=" ...      S NLE=$P(NL,U,3)"
^XTMP("XPDT",7815,"RTN","PRSNUT05",47,0)=" ...      I NL>0 S NLDIV=$P(DIVMAP(""NL"",+NL),U,3)"
^XTMP("XPDT",7815,"RTN","PRSNUT05",48,0)=" ...      I NLE="""" S (NLDIV,NLE)=""ZZZ"""
^XTMP("XPDT",7815,"RTN","PRSNUT05",49,0)=" ..  I '$D(DATA(NLDIV,NLE,TLE)) S (DATA(NLDIV,NLE,TLE))=0"
^XTMP("XPDT",7815,"RTN","PRSNUT05",50,0)=" ..  S DATA(NLDIV,NLE,TLE)=+DATA(NLDIV,NLE,TLE)+1"
^XTMP("XPDT",7815,"RTN","PRSNUT05",51,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT05",52,0)="SHOLOCTL(DATA,DIVMAP,RUNDT) ;"
^XTMP("XPDT",7815,"RTN","PRSNUT05",53,0)=" N NLD,LSTNLD,STOP,I,J"
^XTMP("XPDT",7815,"RTN","PRSNUT05",54,0)=" S (NLD,LSTNLD,STOP)=0"
^XTMP("XPDT",7815,"RTN","PRSNUT05",55,0)=" F  S NLD=$O(DATA(NLD)) Q:NLD'>0!STOP  D"
^XTMP("XPDT",7815,"RTN","PRSNUT05",56,0)=" .  I NLD'=LSTNLD S:LSTNLD'=0 STOP=$$ASK^PRSLIB00() S LSTNLD=NLD D HDR"
^XTMP("XPDT",7815,"RTN","PRSNUT05",57,0)=" .  S I="""""
^XTMP("XPDT",7815,"RTN","PRSNUT05",58,0)=" .  F  S I=$O(DATA(NLD,I)) Q:I>""ZZZ""!(I="""")  D"
^XTMP("XPDT",7815,"RTN","PRSNUT05",59,0)=" ..   W !,I"
^XTMP("XPDT",7815,"RTN","PRSNUT05",60,0)=" ..   S J="""""
^XTMP("XPDT",7815,"RTN","PRSNUT05",61,0)=" ..   F  S J=$O(DATA(NLD,I,J)) Q:J=""""  D"
^XTMP("XPDT",7815,"RTN","PRSNUT05",62,0)=" ...    W !,?25,$G(DATA(NLD,I,J)),?41,J"
^XTMP("XPDT",7815,"RTN","PRSNUT05",63,0)=" ...    I (IOSL-5)<$Y S STOP=$$ASK^PRSLIB00() D HDR"
^XTMP("XPDT",7815,"RTN","PRSNUT05",64,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT05",65,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT05",66,0)="HDR ;"
^XTMP("XPDT",7815,"RTN","PRSNUT05",67,0)=" N K"
^XTMP("XPDT",7815,"RTN","PRSNUT05",68,0)=" W @IOF,!!!?7,""DIVISION: """
^XTMP("XPDT",7815,"RTN","PRSNUT05",69,0)=" W $P(DIVMAP(""IN"",NLD),U),"" ("",$P(DIVMAP(""IN"",NLD),U,2),"")"""
^XTMP("XPDT",7815,"RTN","PRSNUT05",70,0)=" W ?(IOM-22),""Run Date: "",RUNDT"
^XTMP("XPDT",7815,"RTN","PRSNUT05",71,0)=" W !,""Location"",?22,""Nurse Count"",?38,""T&L Unit"""
^XTMP("XPDT",7815,"RTN","PRSNUT05",72,0)=" W ! F K=1:1:IOM W ""-"""
^XTMP("XPDT",7815,"RTN","PRSNUT05",73,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT05",74,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSNUT05",75,0)="BLDMAP(DIVMAP) ; BUILD A DIVISION MAP OF LOCATIONS"
^XTMP("XPDT",7815,"RTN","PRSNUT05",76,0)=" N DIVINFO,LIEN"
^XTMP("XPDT",7815,"RTN","PRSNUT05",77,0)=" S LIEN=0"
^XTMP("XPDT",7815,"RTN","PRSNUT05",78,0)=" F  S LIEN=$O(^NURSF(211.4,LIEN)) Q:LIEN'>0  D"
^XTMP("XPDT",7815,"RTN","PRSNUT05",79,0)=" .  S DIVINFO=$$DIV^PRSNUT03(""N"",LIEN)"
^XTMP("XPDT",7815,"RTN","PRSNUT05",80,0)=" .  S DIVMAP(""NL"",LIEN)=DIVINFO"
^XTMP("XPDT",7815,"RTN","PRSNUT05",81,0)=" .  S DIVMAP(""IN"",$P(DIVINFO,U,3))=$P(DIVINFO,U,1,2)"
^XTMP("XPDT",7815,"RTN","PRSNUT05",82,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSNUT05",83,0)="CLEANUP ;"
^XTMP("XPDT",7815,"RTN","PRSNUT05",84,0)=" K DIVMAP,DATA"
^XTMP("XPDT",7815,"RTN","PRSNUT05",85,0)=" Q"
^XTMP("XPDT",7815,"RTN","PRSU1A")="0^39^B13822383^n/a"
^XTMP("XPDT",7815,"RTN","PRSU1A",1,0)="PRSU1A ;WOIFO/PLT-General Questions Utility ; 24-Aug-2005 10:34 AM"
^XTMP("XPDT",7815,"RTN","PRSU1A",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSU1A",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSU1A",4,0)=" QUIT  ;invalid entry"
^XTMP("XPDT",7815,"RTN","PRSU1A",5,0)=" ;the followoings are DIR calls for data type D,E,F,L,N,P,S,Y,#,#"
^XTMP("XPDT",7815,"RTN","PRSU1A",6,0)=" ; D-date, E-end of page, F-free-text, L-list or range, N-numeric"
^XTMP("XPDT",7815,"RTN","PRSU1A",7,0)=" ; P- pointer, S-set of codes, Y-yes/no, #,#- dd data dictionary"
^XTMP("XPDT",7815,"RTN","PRSU1A",8,0)=" ;A for DIR(""A"") - prompt text."
^XTMP("XPDT",7815,"RTN","PRSU1A",9,0)=" ;B for DIR(0) 2nd character to end - input modifiers^[parameters]^[transform.]"
^XTMP("XPDT",7815,"RTN","PRSU1A",10,0)=" ; modifiers     A: prompt not appended, O: response optional"
^XTMP("XPDT",7815,"RTN","PRSU1A",11,0)=" ;               r: no replace-with for the defalut response"
^XTMP("XPDT",7815,"RTN","PRSU1A",12,0)=" ; set of codes  B: code listed horizontally, X: exact match"
^XTMP("XPDT",7815,"RTN","PRSU1A",13,0)=" ; free text     U: if '^' allowed in free text"
^XTMP("XPDT",7815,"RTN","PRSU1A",14,0)=" ; list or range C: compress y array, not y-array returned"
^XTMP("XPDT",7815,"RTN","PRSU1A",15,0)=" ;C for DIR(""B"") - default response"
^XTMP("XPDT",7815,"RTN","PRSU1A",16,0)=" ;.x(1...) for DIR(""A"") prompt array or value returned"
^XTMP("XPDT",7815,"RTN","PRSU1A",17,0)=" ;.y(1...) for DIR(""?"") array or value returned "
^XTMP("XPDT",7815,"RTN","PRSU1A",18,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1A",19,0)=" ;date"
^XTMP("XPDT",7815,"RTN","PRSU1A",20,0)=" ;B is ^1=A,O or """", ^2=mini date:maximum date, ^3=mumps code"
^XTMP("XPDT",7815,"RTN","PRSU1A",21,0)="DT(X,Y,A,B,C) N DIR,D S DIR(0)=""D""_B,DIR(""A"")=A S:$G(C)]"""" DIR(""B"")=C"
^XTMP("XPDT",7815,"RTN","PRSU1A",22,0)=" S DIR(""?"")=""Enter a date"",D=$P(B,U,2,3)"
^XTMP("XPDT",7815,"RTN","PRSU1A",23,0)=" I $P(D,"":"")]"""" S Y=$P(D,"":"") D DD^%DT S Y=$S($P(D,"":"",2)]"""":"" between "",1:"" after "")_Y,DIR(""?"")=DIR(""?"")_Y"
^XTMP("XPDT",7815,"RTN","PRSU1A",24,0)=" I $P(D,"":"",2)]"""" S Y=$P(B,"":"",2) D DD^%DT S Y=$S($P(D,"":"",1)="""":"" before "",1:"" and "")_Y,DIR(""?"")=DIR(""?"")_Y"
^XTMP("XPDT",7815,"RTN","PRSU1A",25,0)=" D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y=""^"" K DTOUT,DUOUT,DIROUT"
^XTMP("XPDT",7815,"RTN","PRSU1A",26,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1A",27,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1A",28,0)=" ;end of page"
^XTMP("XPDT",7815,"RTN","PRSU1A",29,0)=" ;B is ^1= A or """", ^2="""", ^3="""""
^XTMP("XPDT",7815,"RTN","PRSU1A",30,0)="EOP(X,Y,A,B,C) N DIR S DIR(0)=""E""_B S:A]"""" DIR(""A"")=A S:$G(C)]"""" DIR(""B"")=C"
^XTMP("XPDT",7815,"RTN","PRSU1A",31,0)=" S DIR(""?"")=""Enter 'return' to continue or '^' to exit."""
^XTMP("XPDT",7815,"RTN","PRSU1A",32,0)=" D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y=""^"" K DTOUT,DUOUT,DIROUT"
^XTMP("XPDT",7815,"RTN","PRSU1A",33,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1A",34,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1A",35,0)=" ;free text"
^XTMP("XPDT",7815,"RTN","PRSU1A",36,0)=" ;B is ^1=A,O,U, ^2=minimum legth:maximum length, ^3=mumps code"
^XTMP("XPDT",7815,"RTN","PRSU1A",37,0)="FT(X,Y,A,B,C) N DIR S DIR(0)=""F""_B S:A]"""" DIR(""A"")=A S:$G(C)]"""" DIR(""B"")=C"
^XTMP("XPDT",7815,"RTN","PRSU1A",38,0)=" D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y=""^"" K DTOUT,DUOUT,DIROUT"
^XTMP("XPDT",7815,"RTN","PRSU1A",39,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1A",40,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1A",41,0)=" ;list of range"
^XTMP("XPDT",7815,"RTN","PRSU1A",42,0)=" ;B is ^1=A,O or """", ^2=mini value:maxi value, ^3=mumps code"
^XTMP("XPDT",7815,"RTN","PRSU1A",43,0)="LR(X,Y,A,B,C) N DIR S DIR(0)=""L""_B S:A]"""" DIR(""A"")=A S:$G(C)]"""" DIR(""B"")=C"
^XTMP("XPDT",7815,"RTN","PRSU1A",44,0)=" D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y=""^"" K DTOUT,DUOUT,DIROUT"
^XTMP("XPDT",7815,"RTN","PRSU1A",45,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1A",46,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1A",47,0)=" ;numeric"
^XTMP("XPDT",7815,"RTN","PRSU1A",48,0)=" ;B is ^1=A,O or """", ^2=mini value:maxi value:maxi decimals, ^3=mumps code"
^XTMP("XPDT",7815,"RTN","PRSU1A",49,0)="NUM(X,Y,A,B,C) N DIR S DIR(0)=""N""_B S:A]"""" DIR(""A"")=A S:$G(C)]"""" DIR(""B"")=C"
^XTMP("XPDT",7815,"RTN","PRSU1A",50,0)=" D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y=""^"" K DTOUT,DUOUT,DIROUT"
^XTMP("XPDT",7815,"RTN","PRSU1A",51,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1A",52,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1A",53,0)=" ;pointer"
^XTMP("XPDT",7815,"RTN","PRSU1A",54,0)=" ;B is ^1=A,O or """", ^2=file #/subfile root:dic(0) data, ^3=mumps code"
^XTMP("XPDT",7815,"RTN","PRSU1A",55,0)="PTR(X,Y,A,B,C) N DIR S DIR(0)=""P""_B S:A]"""" DIR(""A"")=A S:$G(C)]"""" DIR(""B"")=C"
^XTMP("XPDT",7815,"RTN","PRSU1A",56,0)=" D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y=""^"" K DTOUT,DUOUT,DIROUT"
^XTMP("XPDT",7815,"RTN","PRSU1A",57,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1A",58,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1A",59,0)=" ;set of codes"
^XTMP("XPDT",7815,"RTN","PRSU1A",60,0)=" ;B is ^1=A,O,X,B, or M, ^2=code:description;code:description;..., ^3=mumps code"
^XTMP("XPDT",7815,"RTN","PRSU1A",61,0)="SC(X,Y,A,B,C) N DIR S DIR(0)=""S""_B S:A]"""" DIR(""A"")=A S:$G(C)]"""" DIR(""B"")=C"
^XTMP("XPDT",7815,"RTN","PRSU1A",62,0)=" D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y=""^"" K DTOUT,DUOUT,DIROUT"
^XTMP("XPDT",7815,"RTN","PRSU1A",63,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1A",64,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1A",65,0)=" ;yes/no"
^XTMP("XPDT",7815,"RTN","PRSU1A",66,0)=" ;B is ^1=A,O or """", ^2="""", ^3="""""
^XTMP("XPDT",7815,"RTN","PRSU1A",67,0)="YN(X,Y,A,B,C) N DIR S DIR(0)=""Y""_B S:A]"""" DIR(""A"")=A S:$G(C)]"""" DIR(""B"")=C"
^XTMP("XPDT",7815,"RTN","PRSU1A",68,0)=" S DIR(""?"")=""Enter 'Y' for yes, 'N' for no."""
^XTMP("XPDT",7815,"RTN","PRSU1A",69,0)=" D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y=""^"" K DTOUT,DUOUT,DIROUT"
^XTMP("XPDT",7815,"RTN","PRSU1A",70,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1A",71,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1A",72,0)=" ;data field definition"
^XTMP("XPDT",7815,"RTN","PRSU1A",73,0)=" ;B is ^1=(sub)file number,field numberAO, ^2="""", ^3="""""
^XTMP("XPDT",7815,"RTN","PRSU1A",74,0)="DD(X,Y,A,B,C) N DIR S DIR(0)=B S:A]"""" DIR(""A"")=A S:$G(C)]"""" DIR(""B"")=C"
^XTMP("XPDT",7815,"RTN","PRSU1A",75,0)=" D DIRA:$D(X(1)),DIRQ:$D(Y(1)),^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S Y=""^"" K DTOUT,DUOUT,DIROUT"
^XTMP("XPDT",7815,"RTN","PRSU1A",76,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1A",77,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1A",78,0)="DIRA N A S A=0 F  S A=$O(X(A)) Q:A=""""  S DIR(""A"",A)=X(A)"
^XTMP("XPDT",7815,"RTN","PRSU1A",79,0)=" K X"
^XTMP("XPDT",7815,"RTN","PRSU1A",80,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1A",81,0)="DIRQ N A F A=1:1 Q:'$D(Y(A))  S DIR(""?"",A)=Y(A)"
^XTMP("XPDT",7815,"RTN","PRSU1A",82,0)=" S DIR(""?"")=Y(A-1) K DIR(""?"",A-1)"
^XTMP("XPDT",7815,"RTN","PRSU1A",83,0)=" K Y"
^XTMP("XPDT",7815,"RTN","PRSU1A",84,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1A",85,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1A",86,0)=" ;.x user typed value"
^XTMP("XPDT",7815,"RTN","PRSU1A",87,0)=" ;.y=-1 if invalid, cyymmdd.hhmmss"
^XTMP("XPDT",7815,"RTN","PRSU1A",88,0)=" ;A=prompt text"
^XTMP("XPDT",7815,"RTN","PRSU1A",89,0)=" ;B=^1:default value (external form), ^2=[-]fm date, [before]after date"
^XTMP("XPDT",7815,"RTN","PRSU1A",90,0)=" ;C=string of AEFNPRST, any combination"
^XTMP("XPDT",7815,"RTN","PRSU1A",91,0)=" ;  A for ask, E for echo"
^XTMP("XPDT",7815,"RTN","PRSU1A",92,0)=" ;  F for future assumed, N for pure num not allowed"
^XTMP("XPDT",7815,"RTN","PRSU1A",93,0)=" ;  P for past assumed, R time required"
^XTMP("XPDT",7815,"RTN","PRSU1A",94,0)=" ;  S seconds required, T time is optional"
^XTMP("XPDT",7815,"RTN","PRSU1A",95,0)=" ;D= Y if year only, YM if year and month only, YMD if date[@time] only"
^XTMP("XPDT",7815,"RTN","PRSU1A",96,0)="YMDT(X,Y,A,B,C,D) ;reader for year/month/date/time"
^XTMP("XPDT",7815,"RTN","PRSU1A",97,0)=" N %DT,DTOUT"
^XTMP("XPDT",7815,"RTN","PRSU1A",98,0)="YMDT1 S %DT(""A"")=A,%DT(""B"")=$P(B,""^"") S:$P(B,""^"",2)]"""" %DT(0)=$P(B,""^"",2)"
^XTMP("XPDT",7815,"RTN","PRSU1A",99,0)=" S %DT=C S:$G(D)=""YMD"" %DT=%DT_""X"""
^XTMP("XPDT",7815,"RTN","PRSU1A",100,0)=" D ^%DT"
^XTMP("XPDT",7815,"RTN","PRSU1A",101,0)=" I Y'=-1,$G(D)=""Y"",Y#10000'=0 W ""   Enter year only!"" G YMDT1"
^XTMP("XPDT",7815,"RTN","PRSU1A",102,0)=" I Y'=-1,$G(D)=""YM"",Y#100'=0 W ""   Enter month and year only!"" G YMDT1"
^XTMP("XPDT",7815,"RTN","PRSU1A",103,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B")="0^40^B11305691^n/a"
^XTMP("XPDT",7815,"RTN","PRSU1B",1,0)="PRSU1B ;WOIFO/PLT-UTILITY ; 24-Aug-2005 10:34 AM"
^XTMP("XPDT",7815,"RTN","PRSU1B",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSU1B",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSU1B",4,0)=" QUIT  ; invalid entry"
^XTMP("XPDT",7815,"RTN","PRSU1B",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B",6,0)=" ;prsa = ~1 file number;file root;file record id;field # of multiple for adding"
^XTMP("XPDT",7815,"RTN","PRSU1B",7,0)=" ;       ~2 subfile number;subfile root (required if subfile);subfile RI;field # of multiple for adding"
^XTMP("XPDT",7815,"RTN","PRSU1B",8,0)=" ;       ~..."
^XTMP("XPDT",7815,"RTN","PRSU1B",9,0)=" ;prsb data ~1=ABCEFIKLMNnOQSTUVXZ any combination"
^XTMP("XPDT",7815,"RTN","PRSU1B",10,0)=" ;A:ask entry, B:B index only when .01 is pointer, C:display same enty more than one time"
^XTMP("XPDT",7815,"RTN","PRSU1B",11,0)=" ;E:echo back for user interactive mode, F:not save in disv for reuse"
^XTMP("XPDT",7815,"RTN","PRSU1B",12,0)=" ;I:ignore special look-up routine, K:use uniqueness key index, L:add new entry"
^XTMP("XPDT",7815,"RTN","PRSU1B",13,0)=" ;M:use all indices, N:use ien to lookup if no matches, n:include numeric in free text field"
^XTMP("XPDT",7815,"RTN","PRSU1B",14,0)=" ;O:exact match search first, partial second for all indices"
^XTMP("XPDT",7815,"RTN","PRSU1B",15,0)=" ;Q:error with ??, S:suppress disply if one match found"
^XTMP("XPDT",7815,"RTN","PRSU1B",16,0)=" ;T:continue all search results until '^' entered, U: use interanl format value search "
^XTMP("XPDT",7815,"RTN","PRSU1B",17,0)=" ;V:ask ok if 1 match found, X:exact match"
^XTMP("XPDT",7815,"RTN","PRSU1B",18,0)=" ;Z:zero node y(0) and external format y(0,0) returned"
^XTMP("XPDT",7815,"RTN","PRSU1B",19,0)=" ;  ~2=DINUM (option), ~3=SPECIFIED INDEICES"
^XTMP("XPDT",7815,"RTN","PRSU1B",20,0)=" ;prsc = select prompt text (optional)"
^XTMP("XPDT",7815,"RTN","PRSU1B",21,0)=" ;.x = dir array for lookup specification (optional) and value returned"
^XTMP("XPDT",7815,"RTN","PRSU1B",22,0)=" ;.y = value returned from ^dic"
^XTMP("XPDT",7815,"RTN","PRSU1B",23,0)="LOOKUP(X,Y,PRSA,PRSB,PRSC) ;entry look-up"
^XTMP("XPDT",7815,"RTN","PRSU1B",24,0)=" N %,%Y,DG,DISYS,DIC,DLAYGO,DUPUT,DTOUT,DA,A,B,C,D,I"
^XTMP("XPDT",7815,"RTN","PRSU1B",25,0)=" S:PRSA'?.E1""~"" PRSA=PRSA_""~"" S A=$L(PRSA,""~"")-1"
^XTMP("XPDT",7815,"RTN","PRSU1B",26,0)=" I A>1 F B=1:1:A-1 S C=$P(PRSA,""~"",B),DA(A-B)=$P(C,"";"",3)"
^XTMP("XPDT",7815,"RTN","PRSU1B",27,0)=" S B=$P(PRSA,""~"",A),DIC=$P(B,"";"",2)  S:DIC=""""&(A=1) DIC=+B"
^XTMP("XPDT",7815,"RTN","PRSU1B",28,0)=" I $D(X)\10 F A=0,""A"",""B"",""S"",""W"",""DR"",""P"" S:$D(X(A)) DIC(A)=X(A) K X(A)"
^XTMP("XPDT",7815,"RTN","PRSU1B",29,0)=" S:$D(PRSC) DIC(""A"")=PRSC"
^XTMP("XPDT",7815,"RTN","PRSU1B",30,0)=" S:'$D(DIC(0)) DIC(0)=$P(PRSB,""~"") S:DIC(0)[""L"" DLAYGO=PRSA"
^XTMP("XPDT",7815,"RTN","PRSU1B",31,0)=" S:$P(PRSB,""~"",2)?1.N DINUM=$P(PRSB,""~"",2)"
^XTMP("XPDT",7815,"RTN","PRSU1B",32,0)=" S DA="""",D=$P(PRSB,""~"",3) I D="""" D ^DIC I 1"
^XTMP("XPDT",7815,"RTN","PRSU1B",33,0)=" E  D MIX^DIC1"
^XTMP("XPDT",7815,"RTN","PRSU1B",34,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B",35,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B",36,0)=" ;prsa = ~1 file number;file root (required if prsc[""L"");file record id"
^XTMP("XPDT",7815,"RTN","PRSU1B",37,0)=" ;       ~2 subfile number (option);subfile root;subfile RI"
^XTMP("XPDT",7815,"RTN","PRSU1B",38,0)=" ;       ~..."
^XTMP("XPDT",7815,"RTN","PRSU1B",39,0)=" ;prsb = editing fields string DR if not in x-array (optional)"
^XTMP("XPDT",7815,"RTN","PRSU1B",40,0)=" ;prsc = string; '^' abort not allowed if [""^"", lock/unlock if [""L"""
^XTMP("XPDT",7815,"RTN","PRSU1B",41,0)=" ;          single lock/unlock if [""LS"""
^XTMP("XPDT",7815,"RTN","PRSU1B",42,0)=" ;.x = editing filed string DR array or value returned"
^XTMP("XPDT",7815,"RTN","PRSU1B",43,0)=" ;   = value returned 0 if deleted, -1 if abort with '^'"
^XTMP("XPDT",7815,"RTN","PRSU1B",44,0)=" ;                    1 if normal exit, -2 if lock fail"
^XTMP("XPDT",7815,"RTN","PRSU1B",45,0)="EDIT(X,PRSA,PRSB,PRSC) ;edit entry in file"
^XTMP("XPDT",7815,"RTN","PRSU1B",46,0)=" N %,%Y,D0,D1,DDH,DISYS,DLAYGO,DQ"
^XTMP("XPDT",7815,"RTN","PRSU1B",47,0)=" N DI,DIE,DIC,DIS,DA,DR,PRSLOCK,A,B,C,D,Y"
^XTMP("XPDT",7815,"RTN","PRSU1B",48,0)=" S:PRSA'?.E1""~"" PRSA=PRSA_""~"" S PRSC=$G(PRSC),A=$L(PRSA,""~"")-1,PRSLOCK="""""
^XTMP("XPDT",7815,"RTN","PRSU1B",49,0)=" I A>1 F B=1:1:A-1 S C=$P(PRSA,""~"",B),DA(A-B)=$P(C,"";"",3)"
^XTMP("XPDT",7815,"RTN","PRSU1B",50,0)=" S B=$P(PRSA,""~"",A),DIE=$P(B,"";"",2),DA=$P(B,"";"",3) S:PRSC[""L"" PRSLOCK=DIE_$S(PRSC[""LS"":DA_"","",1:"""")"
^XTMP("XPDT",7815,"RTN","PRSU1B",51,0)=" S:DIE=""""&(A=1) DIE=+B"
^XTMP("XPDT",7815,"RTN","PRSU1B",52,0)=" S DR=$G(PRSB) S:PRSC[""^"" DIE(""NO^"")="""""
^XTMP("XPDT",7815,"RTN","PRSU1B",53,0)=" I DR="""" S %X=""X("",%Y=""DR("",DR=X D %XY^%RCR K X"
^XTMP("XPDT",7815,"RTN","PRSU1B",54,0)=" K X I PRSLOCK]"""" S Y=3 D ICLOCK(PRSLOCK,.Y) I 'Y S X=-2 QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B",55,0)=" D ^DIE,DCLOCK(PRSLOCK):PRSLOCK]"""""
^XTMP("XPDT",7815,"RTN","PRSU1B",56,0)=" S X=$S('$D(DA):0,$D(Y)=0:1,1:-1)"
^XTMP("XPDT",7815,"RTN","PRSU1B",57,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B",58,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B",59,0)=" ;prsa = ~1 file number;file root (option);file record id"
^XTMP("XPDT",7815,"RTN","PRSU1B",60,0)=" ;       ~2 subfile number;subfile root (option);subfile RI"
^XTMP("XPDT",7815,"RTN","PRSU1B",61,0)=" ;       ~..."
^XTMP("XPDT",7815,"RTN","PRSU1B",62,0)=" ;prsb = ~1 field#;field#;..."
^XTMP("XPDT",7815,"RTN","PRSU1B",63,0)=" ;       ~2 subfield #;subfield #;..."
^XTMP("XPDT",7815,"RTN","PRSU1B",64,0)=" ;       ~..."
^XTMP("XPDT",7815,"RTN","PRSU1B",65,0)=" ;prsc = string of characters I, E. (no N) (required)"
^XTMP("XPDT",7815,"RTN","PRSU1B",66,0)=" ;prsd = local array name returned, it cann't be %,X,Y"
^XTMP("XPDT",7815,"RTN","PRSU1B",67,0)=" ;        PRSA,PRSB,PRSD,PRSD,PRSE,PRSF"
^XTMP("XPDT",7815,"RTN","PRSU1B",68,0)=" ;     @prsd(file#,record id,field #,""E"")=external value"
^XTMP("XPDT",7815,"RTN","PRSU1B",69,0)=" ;     @prsd(file#,record id,field #,""I"")=internal value"
^XTMP("XPDT",7815,"RTN","PRSU1B",70,0)="PIECE(PRSA,PRSB,PRSC,PRSD) ;get piece data"
^XTMP("XPDT",7815,"RTN","PRSU1B",71,0)=" N D0,DIC,DR,DA,DIQ,PRSE,PRSF,DI"
^XTMP("XPDT",7815,"RTN","PRSU1B",72,0)=" S PRSE=$P(PRSA,""~""),DIC=+PRSE,DA=$P(PRSE,"";"",3),DR=$P(PRSB,""~"")"
^XTMP("XPDT",7815,"RTN","PRSU1B",73,0)=" F PRSF=2:1 Q:$P(PRSA,""~"",PRSF)=""""  S PRSE=$P(PRSA,""~"",PRSF),DA(+PRSE)=$P(PRSE,"";"",3),DR(+PRSE)=$P(PRSB,""~"",PRSF)"
^XTMP("XPDT",7815,"RTN","PRSU1B",74,0)=" S DIQ=PRSD,DIQ(0)=PRSC_""N"""
^XTMP("XPDT",7815,"RTN","PRSU1B",75,0)=" D EN^DIQ1"
^XTMP("XPDT",7815,"RTN","PRSU1B",76,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B",77,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B",78,0)=" ;prsa = (sub)file node root"
^XTMP("XPDT",7815,"RTN","PRSU1B",79,0)=" ;prsb = node value"
^XTMP("XPDT",7815,"RTN","PRSU1B",80,0)="NODE(PRSA,PRSB) ;get node"
^XTMP("XPDT",7815,"RTN","PRSU1B",81,0)=" N PRSC"
^XTMP("XPDT",7815,"RTN","PRSU1B",82,0)=" S @(""PRSC=$G(""_PRSA_""PRSB))"")"
^XTMP("XPDT",7815,"RTN","PRSU1B",83,0)=" QUIT PRSC"
^XTMP("XPDT",7815,"RTN","PRSU1B",84,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B",85,0)=" ;prsc is piece #"
^XTMP("XPDT",7815,"RTN","PRSU1B",86,0)="NP(PRSA,PRSB,PRSC) ;get node and piece"
^XTMP("XPDT",7815,"RTN","PRSU1B",87,0)=" N PRSD"
^XTMP("XPDT",7815,"RTN","PRSU1B",88,0)=" S @(""PRSD=$P($G(""_PRSA_""PRSB)),""""^"""",PRSC)"")"
^XTMP("XPDT",7815,"RTN","PRSU1B",89,0)=" QUIT PRSD"
^XTMP("XPDT",7815,"RTN","PRSU1B",90,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B",91,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B",92,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B",93,0)=" ;prslock array used to store lock history"
^XTMP("XPDT",7815,"RTN","PRSU1B",94,0)="ICLOCK(A,B) ;incremental lock with time (optional)"
^XTMP("XPDT",7815,"RTN","PRSU1B",95,0)=" ;  a = global root ending with ',' or '('"
^XTMP("XPDT",7815,"RTN","PRSU1B",96,0)=" ; .b = time lock seconds and value returned; false if lock fail"
^XTMP("XPDT",7815,"RTN","PRSU1B",97,0)=" S A=$E(A,1,$L(A)-1) I A[""("" S A=A_"")"""
^XTMP("XPDT",7815,"RTN","PRSU1B",98,0)=" I $D(B) L +@(A):B S B=$T E  QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B",99,0)=" S PRSLOCK(A)=$G(PRSLOCK(A))+1"
^XTMP("XPDT",7815,"RTN","PRSU1B",100,0)=" I '$D(B) S B=99999999 L +@(A):B"
^XTMP("XPDT",7815,"RTN","PRSU1B",101,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B",102,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B",103,0)="DCLOCK(A) ;decremental unlock a from prslock array of locking history"
^XTMP("XPDT",7815,"RTN","PRSU1B",104,0)=" ;  a = global root ending with ',' or '('"
^XTMP("XPDT",7815,"RTN","PRSU1B",105,0)=" S A=$E(A,1,$L(A)-1) I A[""("" S A=A_"")"""
^XTMP("XPDT",7815,"RTN","PRSU1B",106,0)=" L -@(A) S PRSLOCK(A)=$G(PRSLOCK(A))-1 K:PRSLOCK(A)<1 PRSLOCK(A)"
^XTMP("XPDT",7815,"RTN","PRSU1B",107,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B",108,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B",109,0)="UNLOCK(A) ;unlock a file (to decremental to 0) in prslock(a)"
^XTMP("XPDT",7815,"RTN","PRSU1B",110,0)=" ;  a = global root ending with ',' or '('"
^XTMP("XPDT",7815,"RTN","PRSU1B",111,0)=" S A=$E(A,1,$L(A)-1) I A[""("" S A=A_"")"""
^XTMP("XPDT",7815,"RTN","PRSU1B",112,0)=" F  Q:$G(PRSLOCK(A))<1  L -@(A) S PRSLOCK(A)=$G(PRSLOCK(A))-1"
^XTMP("XPDT",7815,"RTN","PRSU1B",113,0)=" K PRSLOCK(A)"
^XTMP("XPDT",7815,"RTN","PRSU1B",114,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B",115,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B",116,0)="UNLKALL ;unlock all files in prslock array"
^XTMP("XPDT",7815,"RTN","PRSU1B",117,0)=" N A"
^XTMP("XPDT",7815,"RTN","PRSU1B",118,0)=" S A="""" F  S A=$O(PRSLOCK(A)) Q:A=""""  F  Q:$G(PRSLOCK(A))<1  L -@(A) S PRSLOCK(A)=$G(PRSLOCK(A))-1"
^XTMP("XPDT",7815,"RTN","PRSU1B",119,0)=" K PRSLOCK"
^XTMP("XPDT",7815,"RTN","PRSU1B",120,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B",121,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B1")="0^41^B2203162^n/a"
^XTMP("XPDT",7815,"RTN","PRSU1B1",1,0)="PRSU1B1 ;WOIFO/PLT-UTILITY ; 24-Aug-2005 10:34 AM"
^XTMP("XPDT",7815,"RTN","PRSU1B1",2,0)=" ;;4.0;PAID;**126**;Sep 21, 1995;Build 3"
^XTMP("XPDT",7815,"RTN","PRSU1B1",3,0)=" ;;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7815,"RTN","PRSU1B1",4,0)=" QUIT  ; invalid entry"
^XTMP("XPDT",7815,"RTN","PRSU1B1",5,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B1",6,0)=" ;prsa=~1 file number (required);file root;file record id;field # of multiple for adding"
^XTMP("XPDT",7815,"RTN","PRSU1B1",7,0)=" ;     ~2 subfile number;subfile root (required);subfile RI;field # of multiple for adding"
^XTMP("XPDT",7815,"RTN","PRSU1B1",8,0)=" ;     ~3 ..."
^XTMP("XPDT",7815,"RTN","PRSU1B1",9,0)=" ;.x = .01 internal value or array of dic and X(""DR"") to input for other fields"
^XTMP("XPDT",7815,"RTN","PRSU1B1",10,0)=" ;.y = value returned; -1 no new entry added, ^1=ri,^2=.01 value,^3=1 for new if added"
^XTMP("XPDT",7815,"RTN","PRSU1B1",11,0)="ADD(X,Y,PRSA,DINUM) ;add new entry"
^XTMP("XPDT",7815,"RTN","PRSU1B1",12,0)=" N DD,DO,DIC,%,D0,DA,DI,DIE,DLAYGO,DQ,DR,A,B,C,I"
^XTMP("XPDT",7815,"RTN","PRSU1B1",13,0)=" K:$G(DINUM)="""" DINUM"
^XTMP("XPDT",7815,"RTN","PRSU1B1",14,0)=" S:PRSA'?.E1""~"" PRSA=PRSA_""~"" S A=$L(PRSA,""~"")-1"
^XTMP("XPDT",7815,"RTN","PRSU1B1",15,0)=" I A>1 F B=1:1:A-1 S C=$P(PRSA,""~"",B),DA(A-B)=$P(C,"";"",3)"
^XTMP("XPDT",7815,"RTN","PRSU1B1",16,0)=" S B=$P(PRSA,""~"",A),DIC=$P(B,"";"",2)  S:DIC=""""&(A=1) DIC=+B"
^XTMP("XPDT",7815,"RTN","PRSU1B1",17,0)=" S DLAYGO=PRSA,DIC(0)=""FIL"""
^XTMP("XPDT",7815,"RTN","PRSU1B1",18,0)=" S:$D(X(0)) DIC(0)=X(0) S:$D(X(""DR"")) DIC(""DR"")=X(""DR"") K X(0),X(""DR"")"
^XTMP("XPDT",7815,"RTN","PRSU1B1",19,0)=" D FILE^DICN"
^XTMP("XPDT",7815,"RTN","PRSU1B1",20,0)=" QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B1",21,0)=" ;"
^XTMP("XPDT",7815,"RTN","PRSU1B1",22,0)=" ;prs = ~1 file number(option);file root;file record id"
^XTMP("XPDT",7815,"RTN","PRSU1B1",23,0)=" ;       ~2 subfile number;subfile root;subfile RI"
^XTMP("XPDT",7815,"RTN","PRSU1B1",24,0)=" ;       ~..."
^XTMP("XPDT",7815,"RTN","PRSU1B1",25,0)=" ;.x = value return; 1 if deleted, 0 if not, -2 if lock fail"
^XTMP("XPDT",7815,"RTN","PRSU1B1",26,0)="DELETE(X,PRSA) ;delete entry"
^XTMP("XPDT",7815,"RTN","PRSU1B1",27,0)=" N %,DA,DIC,Y"
^XTMP("XPDT",7815,"RTN","PRSU1B1",28,0)=" N DIK,DIA,PRSLOCK,A,B,C"
^XTMP("XPDT",7815,"RTN","PRSU1B1",29,0)=" S:PRSA'?.E1""~"" PRSA=PRSA_""~"" S A=$L(PRSA,""~"")-1,PRSLOCK="""""
^XTMP("XPDT",7815,"RTN","PRSU1B1",30,0)=" I A>1 F B=1:1:A-1 S C=$P(PRSA,""~"",B),DA(A-B)=$P(C,"";"",3)"
^XTMP("XPDT",7815,"RTN","PRSU1B1",31,0)=" S B=$P(PRSA,""~"",A),DIK=$P(B,"";"",2),DA=$P(B,"";"",3),PRSLOCK=DIK_DA_"","""
^XTMP("XPDT",7815,"RTN","PRSU1B1",32,0)=" S X=3 D ICLOCK^PRSU1B(PRSLOCK,.X) I 'X S X=-2 QUIT"
^XTMP("XPDT",7815,"RTN","PRSU1B1",33,0)=" D ^DIK,DCLOCK^PRSU1B(PRSLOCK)"
^XTMP("XPDT",7815,"RTN","PRSU1B1",34,0)=" S X=1"
^XTMP("XPDT",7815,"RTN","PRSU1B1",35,0)=" QUIT"
^XTMP("XPDT",7815,"SEC","^DIC",451,451,0,"AUDIT")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451,451,0,"DD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451,451,0,"DEL")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451,451,0,"LAYGO")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451,451,0,"RD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451,451,0,"WR")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.1,451.1,0,"AUDIT")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.1,451.1,0,"DD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.1,451.1,0,"DEL")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.1,451.1,0,"LAYGO")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.1,451.1,0,"RD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.1,451.1,0,"WR")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.4,451.4,0,"AUDIT")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.4,451.4,0,"DD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.4,451.4,0,"DEL")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.4,451.4,0,"LAYGO")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.4,451.4,0,"RD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.4,451.4,0,"WR")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.5,451.5,0,"AUDIT")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.5,451.5,0,"DD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.5,451.5,0,"DEL")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.5,451.5,0,"LAYGO")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.5,451.5,0,"RD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.5,451.5,0,"WR")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.6,451.6,0,"AUDIT")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.6,451.6,0,"DD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.6,451.6,0,"DEL")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.6,451.6,0,"LAYGO")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.6,451.6,0,"RD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.6,451.6,0,"WR")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.7,451.7,0,"AUDIT")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.7,451.7,0,"DD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.7,451.7,0,"DEL")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.7,451.7,0,"LAYGO")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.7,451.7,0,"RD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",451.7,451.7,0,"WR")="@"
^XTMP("XPDT",7815,"SEC","^DIC",455.5,455.5,0,"AUDIT")="@"
^XTMP("XPDT",7815,"SEC","^DIC",455.5,455.5,0,"DD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",455.5,455.5,0,"DEL")="@"
^XTMP("XPDT",7815,"SEC","^DIC",455.5,455.5,0,"LAYGO")="@"
^XTMP("XPDT",7815,"SEC","^DIC",455.5,455.5,0,"RD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",455.5,455.5,0,"WR")="@"
^XTMP("XPDT",7815,"SEC","^DIC",456,456,0,"AUDIT")="@"
^XTMP("XPDT",7815,"SEC","^DIC",456,456,0,"DD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",456,456,0,"DEL")="@"
^XTMP("XPDT",7815,"SEC","^DIC",456,456,0,"LAYGO")="@"
^XTMP("XPDT",7815,"SEC","^DIC",456,456,0,"RD")="@"
^XTMP("XPDT",7815,"SEC","^DIC",456,456,0,"WR")="@"
^XTMP("XPDT",7815,"UP",450,450.01,-1)="450^7"
^XTMP("XPDT",7815,"UP",450,450.01,0)="450.01"
^XTMP("XPDT",7815,"VER")="8.0^22.0"
^XTMP("XPDT",7815,"^DD",450,450,7.5,0)="USER PREFERENCES^450.01^^7;0"
^XTMP("XPDT",7815,"^DD",450,450.01,0)="USER PREFERENCES SUB-FIELD^^1^2"
^XTMP("XPDT",7815,"^DD",450,450.01,0,"NM","USER PREFERENCES")=""
^XTMP("XPDT",7815,"^DD",450,450.01,.01,0)="USER PREFERENCES^MF^^0;1^K:$L(X)>30!($L(X)<3) X"
^XTMP("XPDT",7815,"^DD",450,450.01,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",450,450.01,.01,1,1,0)="450.01^B"
^XTMP("XPDT",7815,"^DD",450,450.01,.01,1,1,1)="S ^PRSPC(DA(1),7,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",450,450.01,.01,1,1,2)="K ^PRSPC(DA(1),7,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",450,450.01,.01,3)="Answer must be 3-30 characters in length."
^XTMP("XPDT",7815,"^DD",450,450.01,.01,21,0)="^.001^4^4^3090727^^"
^XTMP("XPDT",7815,"^DD",450,450.01,.01,21,1,0)="This field contains the name of a ETA package defined user preference.  "
^XTMP("XPDT",7815,"^DD",450,450.01,.01,21,2,0)="In general only ETA software code should create or modify entries to this "
^XTMP("XPDT",7815,"^DD",450,450.01,.01,21,3,0)="field, when a user of the package has selected a preference that can be "
^XTMP("XPDT",7815,"^DD",450,450.01,.01,21,4,0)="saved and used by the software to retain the users preference."
^XTMP("XPDT",7815,"^DD",450,450.01,.01,"DT")="3090727"
^XTMP("XPDT",7815,"^DD",450,450.01,1,0)="VALUE^F^^0;2^K:$L(X)>30!($L(X)<3) X"
^XTMP("XPDT",7815,"^DD",450,450.01,1,3)="Answer must be 3-30 characters in length."
^XTMP("XPDT",7815,"^DD",450,450.01,1,21,0)="^^6^6^3090727^"
^XTMP("XPDT",7815,"^DD",450,450.01,1,21,1,0)="This field stores the value of a PAID ETA package user's preference for "
^XTMP("XPDT",7815,"^DD",450,450.01,1,21,2,0)="the associated preference in this multiple.  For example, a timekeeper "
^XTMP("XPDT",7815,"^DD",450,450.01,1,21,3,0)="may choose to edit POC records when they are posting timecards.  If they "
^XTMP("XPDT",7815,"^DD",450,450.01,1,21,4,0)="choose to then the software will save this preference in this field.  "
^XTMP("XPDT",7815,"^DD",450,450.01,1,21,5,0)="Entries to this field and this multiple should only be added or edited by "
^XTMP("XPDT",7815,"^DD",450,450.01,1,21,6,0)="the ETA software when a user selects a preference."
^XTMP("XPDT",7815,"^DD",450,450.01,1,"DT")="3090727"
^XTMP("XPDT",7815,"^DD",451,451,0)="FIELD^^9^3"
^XTMP("XPDT",7815,"^DD",451,451,0,"DDA")="N"
^XTMP("XPDT",7815,"^DD",451,451,0,"DT")="3091007"
^XTMP("XPDT",7815,"^DD",451,451,0,"IX","AL",451.9999,4)=""
^XTMP("XPDT",7815,"^DD",451,451,0,"IX","B",451,.01)=""
^XTMP("XPDT",7815,"^DD",451,451,0,"NM","POC DAILY TIME RECORDS")=""
^XTMP("XPDT",7815,"^DD",451,451,.01,0)="PAY PERIOD^RFX^^0;1^K:$L(X)>5!($L(X)<5)!'(X?2N1""-""2N) X I $D(X) S DINUM=$O(^PRST(458,""B"",X,0)) K:'DINUM DINUM,X"
^XTMP("XPDT",7815,"^DD",451,451,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451,451,.01,1,1,0)="451^B"
^XTMP("XPDT",7815,"^DD",451,451,.01,1,1,1)="S ^PRSN(451,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451,451,.01,1,1,2)="K ^PRSN(451,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451,451,.01,3)="Enter a Pay Period with format YY-PP, where PP is PP#."
^XTMP("XPDT",7815,"^DD",451,451,.01,21,0)="^.001^1^1^3090601^^"
^XTMP("XPDT",7815,"^DD",451,451,.01,21,1,0)="This is the Pay Period in format YY-PP."
^XTMP("XPDT",7815,"^DD",451,451,.01,23,0)="^.001^1^1^3090708^^^"
^XTMP("XPDT",7815,"^DD",451,451,.01,23,1,0)="The IEN of the entry with YY-PP will be the same IEN of the file #458. Before adding a new entry YY-PP in this file, the same YY-PP entry must exist in file #458 first."
^XTMP("XPDT",7815,"^DD",451,451,.01,"DT")="3091102"
^XTMP("XPDT",7815,"^DD",451,451,6,0)="RELEASE HISTORY^451.06P^^D;0"
^XTMP("XPDT",7815,"^DD",451,451,6,21,0)="^.001^1^1^3090701^^^^"
^XTMP("XPDT",7815,"^DD",451,451,6,21,1,0)="This is the released log for each releasing by the release option."
^XTMP("XPDT",7815,"^DD",451,451,6,"DT")="3090603"
^XTMP("XPDT",7815,"^DD",451,451,9,0)="VA NURSE^451.09P^^E;0"
^XTMP("XPDT",7815,"^DD",451,451,9,21,0)="^.001^2^2^3091007^^^^"
^XTMP("XPDT",7815,"^DD",451,451,9,21,1,0)="It contains the point of care data associated with the VA nurse for this"
^XTMP("XPDT",7815,"^DD",451,451,9,21,2,0)="pay period."
^XTMP("XPDT",7815,"^DD",451,451,9,"DT")="3090604"
^XTMP("XPDT",7815,"^DD",451,451.06,0)="RELEASE HISTORY SUB-FIELD^^4^5"
^XTMP("XPDT",7815,"^DD",451,451.06,0,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451,451.06,0,"IX","B",451.06,.01)=""
^XTMP("XPDT",7815,"^DD",451,451.06,0,"NM","RELEASE HISTORY")=""
^XTMP("XPDT",7815,"^DD",451,451.06,0,"UP")="451"
^XTMP("XPDT",7815,"^DD",451,451.06,.01,0)="DIVISION^P4'^DIC(4,^0;1^Q"
^XTMP("XPDT",7815,"^DD",451,451.06,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451,451.06,.01,1,1,0)="451.06^B"
^XTMP("XPDT",7815,"^DD",451,451.06,.01,1,1,1)="S ^PRSN(451,DA(1),""D"",""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451,451.06,.01,1,1,2)="K ^PRSN(451,DA(1),""D"",""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451,451.06,.01,3)="Enter a POC Daily Time Card Release Division."
^XTMP("XPDT",7815,"^DD",451,451.06,.01,21,0)="^^1^1^3090708^^"
^XTMP("XPDT",7815,"^DD",451,451.06,.01,21,1,0)="This is the POC Daily Time Card Release Division."
^XTMP("XPDT",7815,"^DD",451,451.06,.01,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451,451.06,1,0)="RELEASE USER^P200'^VA(200,^0;2^Q"
^XTMP("XPDT",7815,"^DD",451,451.06,1,3)="Enter the user who released the POC Daily Time Records."
^XTMP("XPDT",7815,"^DD",451,451.06,1,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451,451.06,2,0)="RELEASE DATE/TIME^D^^0;3^S %DT=""ETX"" D ^%DT S X=Y K:3090101>X X"
^XTMP("XPDT",7815,"^DD",451,451.06,2,3)="TYPE A DATE/TIME NOT EARLIER THAN JAN 01, 2009"
^XTMP("XPDT",7815,"^DD",451,451.06,2,21,0)="^^1^1^3090708^"
^XTMP("XPDT",7815,"^DD",451,451.06,2,21,1,0)="This is the date and time when the POC Daily Time Card is released."
^XTMP("XPDT",7815,"^DD",451,451.06,2,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451,451.06,3,0)="TOTAL # VA NURSES RELEASED^NJ5,0^^0;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"".""1N.N) X"
^XTMP("XPDT",7815,"^DD",451,451.06,3,3)="Type a Number between 0 and 99999, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",451,451.06,3,21,0)="^.001^1^1^3090630^^"
^XTMP("XPDT",7815,"^DD",451,451.06,3,21,1,0)="The total number of employees for whom time card have been transmitted."
^XTMP("XPDT",7815,"^DD",451,451.06,3,"DT")="3090630"
^XTMP("XPDT",7815,"^DD",451,451.06,4,0)="TOTAL # RECORDS RELEASED^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<0)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7815,"^DD",451,451.06,4,3)="Type a number between 0 and 999999, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",451,451.06,4,21,0)="^^1^1^3090522^"
^XTMP("XPDT",7815,"^DD",451,451.06,4,21,1,0)="The total number of time card records that have been released."
^XTMP("XPDT",7815,"^DD",451,451.06,4,"DT")="3090522"
^XTMP("XPDT",7815,"^DD",451,451.09,0)="VA NURSE SUB-FIELD^^6^9"
^XTMP("XPDT",7815,"^DD",451,451.09,0,"DT")="3091007"
^XTMP("XPDT",7815,"^DD",451,451.09,0,"IX","B",451.09,.01)=""
^XTMP("XPDT",7815,"^DD",451,451.09,0,"NM","VA NURSE")=""
^XTMP("XPDT",7815,"^DD",451,451.09,0,"UP")="451"
^XTMP("XPDT",7815,"^DD",451,451.09,.01,0)="VA NURSE^P450'X^PRSPC(^0;1^I $D(X) S DINUM=X"
^XTMP("XPDT",7815,"^DD",451,451.09,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451,451.09,.01,1,1,0)="451.09^B"
^XTMP("XPDT",7815,"^DD",451,451.09,.01,1,1,1)="S ^PRSN(451,DA(1),""E"",""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451,451.09,.01,1,1,2)="K ^PRSN(451,DA(1),""E"",""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451,451.09,.01,3)="Enter a nurse employee."
^XTMP("XPDT",7815,"^DD",451,451.09,.01,21,0)="^.001^2^2^3090903^^^"
^XTMP("XPDT",7815,"^DD",451,451.09,.01,21,1,0)="A pointer to the PAID EMPLOYEE file (#450) which identifies the name"
^XTMP("XPDT",7815,"^DD",451,451.09,.01,21,2,0)="of the employee."
^XTMP("XPDT",7815,"^DD",451,451.09,.01,"DT")="3090617"
^XTMP("XPDT",7815,"^DD",451,451.09,1,0)="POC RECORD PP STATUS^S^E:ENTERED;A:APPROVED;R:RELEASED;^0;2^Q"
^XTMP("XPDT",7815,"^DD",451,451.09,1,3)="Enter a POC Record PP status."
^XTMP("XPDT",7815,"^DD",451,451.09,1,21,0)="^^1^1^3090708^"
^XTMP("XPDT",7815,"^DD",451,451.09,1,21,1,0)="This is the Pay Period status of the POC Daily Time Card Record."
^XTMP("XPDT",7815,"^DD",451,451.09,1,"DT")="3091103"
^XTMP("XPDT",7815,"^DD",451,451.09,2,0)="APP. SUPERVISOR^P200'^VA(200,^0;3^Q"
^XTMP("XPDT",7815,"^DD",451,451.09,2,3)="Enter an approval supervisor name."
^XTMP("XPDT",7815,"^DD",451,451.09,2,21,0)="^^2^2^3090708^^"
^XTMP("XPDT",7815,"^DD",451,451.09,2,21,1,0)="A pointer to the NEW PERSON file (#200) which identifies the name "
^XTMP("XPDT",7815,"^DD",451,451.09,2,21,2,0)="of the supervisor who approved the employee's time card."
^XTMP("XPDT",7815,"^DD",451,451.09,2,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451,451.09,3,0)="APP. DATE/TIME^D^^0;4^S %DT=""ETX"" D ^%DT S X=Y K:3090101>X X"
^XTMP("XPDT",7815,"^DD",451,451.09,3,3)="TYPE A DATE AND TIME NOT EARLIER THAN JAN 01, 2009"
^XTMP("XPDT",7815,"^DD",451,451.09,3,21,0)="^^1^1^3090522^"
^XTMP("XPDT",7815,"^DD",451,451.09,3,21,1,0)="The date and time the supervisor approved the employee's time card."
^XTMP("XPDT",7815,"^DD",451,451.09,3,"DT")="3090522"
^XTMP("XPDT",7815,"^DD",451,451.09,4,0)="NURSE DIVISION^P4'^DIC(4,^0;5^Q"
^XTMP("XPDT",7815,"^DD",451,451.09,4,3)="Enter the nurse Division."
^XTMP("XPDT",7815,"^DD",451,451.09,4,21,0)="^^2^2^3090805^"
^XTMP("XPDT",7815,"^DD",451,451.09,4,21,1,0)="This is the nurse Division at the time of Approval of POC Daily Time "
^XTMP("XPDT",7815,"^DD",451,451.09,4,21,2,0)="Records."
^XTMP("XPDT",7815,"^DD",451,451.09,4,"DT")="3091103"
^XTMP("XPDT",7815,"^DD",451,451.09,5,0)="NURSE LOCATION^P211.4'^NURSF(211.4,^0;6^Q"
^XTMP("XPDT",7815,"^DD",451,451.09,5,3)="Enter the nurse default NURS LOCATION."
^XTMP("XPDT",7815,"^DD",451,451.09,5,21,0)="^^2^2^3090805^"
^XTMP("XPDT",7815,"^DD",451,451.09,5,21,1,0)="This is the nurse default NURS LOCATION at the time of Approval of POC"
^XTMP("XPDT",7815,"^DD",451,451.09,5,21,2,0)="Daily Time Records."
^XTMP("XPDT",7815,"^DD",451,451.09,5,"DT")="3090805"
^XTMP("XPDT",7815,"^DD",451,451.09,6,0)="NURSE T&L UNIT^P455.5'^PRST(455.5,^0;7^Q"
^XTMP("XPDT",7815,"^DD",451,451.09,6,3)="Enter the Nurse T&L UNIT."
^XTMP("XPDT",7815,"^DD",451,451.09,6,21,0)="^^2^2^3090805^"
^XTMP("XPDT",7815,"^DD",451,451.09,6,21,1,0)="This is the nurse T&L UNIT at the time of Approval of POC Daily Time "
^XTMP("XPDT",7815,"^DD",451,451.09,6,21,2,0)="Records."
^XTMP("XPDT",7815,"^DD",451,451.09,6,"DT")="3090805"
^XTMP("XPDT",7815,"^DD",451,451.09,9,0)="DAY #^451.99^^D;0"
^XTMP("XPDT",7815,"^DD",451,451.09,9,21,0)="^.001^1^1^3091007^^^^"
^XTMP("XPDT",7815,"^DD",451,451.09,9,21,1,0)="Day # multiple may have employee's working day # from 1 to 14."
^XTMP("XPDT",7815,"^DD",451,451.99,0)="DAY # SUB-FIELD^^2^4"
^XTMP("XPDT",7815,"^DD",451,451.99,0,"DT")="3091007"
^XTMP("XPDT",7815,"^DD",451,451.99,0,"IX","B",451.99,.01)=""
^XTMP("XPDT",7815,"^DD",451,451.99,0,"NM","DAY #")=""
^XTMP("XPDT",7815,"^DD",451,451.99,0,"UP")="451.09"
^XTMP("XPDT",7815,"^DD",451,451.99,.01,0)="DAY #^MNJ2,0X^^0;1^K:+X'=X!(X>14)!(X<1)!(X?.E1"".""1.N) X I $D(X) S DINUM=X"
^XTMP("XPDT",7815,"^DD",451,451.99,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451,451.99,.01,1,1,0)="451.99^B"
^XTMP("XPDT",7815,"^DD",451,451.99,.01,1,1,1)="S ^PRSN(451,DA(2),""E"",DA(1),""D"",""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451,451.99,.01,1,1,2)="K ^PRSN(451,DA(2),""E"",DA(1),""D"",""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451,451.99,.01,3)="Type a day number between 1 and 14, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",451,451.99,.01,21,0)="^.001^1^1^3090903^^"
^XTMP("XPDT",7815,"^DD",451,451.99,.01,21,1,0)="The day # from day 1 to day 14 of a pay period."
^XTMP("XPDT",7815,"^DD",451,451.99,.01,"DT")="3090903"
^XTMP("XPDT",7815,"^DD",451,451.99,1,0)="CORRECTION STATUS^S^E:Entered;A:Approved;R:Released;^0;2^Q"
^XTMP("XPDT",7815,"^DD",451,451.99,1,3)="Enter processing status for the corrected released daily POC record."
^XTMP("XPDT",7815,"^DD",451,451.99,1,21,0)="^^3^3^3090604^"
^XTMP("XPDT",7815,"^DD",451,451.99,1,21,1,0)="This is the status of a correction to the daily point of care record.  "
^XTMP("XPDT",7815,"^DD",451,451.99,1,21,2,0)="Daily status only applies to records that have been released with a pay"
^XTMP("XPDT",7815,"^DD",451,451.99,1,21,3,0)="period and then the daily record is corrected."
^XTMP("XPDT",7815,"^DD",451,451.99,1,"DT")="3091123"
^XTMP("XPDT",7815,"^DD",451,451.99,2,0)="ACTIVITY EXTRACTION #^NJ3,0^^0;3^K:+X'=X!(X>999)!(X<1)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7815,"^DD",451,451.99,2,3)="Type a number between 1 and 999, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",451,451.99,2,21,0)="^^1^1^3090720^"
^XTMP("XPDT",7815,"^DD",451,451.99,2,21,1,0)="The field is updated during Releasing POC DAILY TIME RECORDS of File #451.7. The ACTIVITY EXTRACTION # is set in a field of the POC DAILY ACTIVITY record"
^XTMP("XPDT",7815,"^DD",451,451.99,2,"DT")="3090720"
^XTMP("XPDT",7815,"^DD",451,451.99,9,0)="VERSION #^451.999^^V;0"
^XTMP("XPDT",7815,"^DD",451,451.99,9,21,0)="^.001^1^1^3091007^^^^"
^XTMP("XPDT",7815,"^DD",451,451.99,9,21,1,0)="The version # of a release (corrected) employee's time card."
^XTMP("XPDT",7815,"^DD",451,451.999,0)="VERSION # SUB-FIELD^^2^4"
^XTMP("XPDT",7815,"^DD",451,451.999,0,"DT")="3091007"
^XTMP("XPDT",7815,"^DD",451,451.999,0,"IX","B",451.999,.01)=""
^XTMP("XPDT",7815,"^DD",451,451.999,0,"NM","VERSION #")=""
^XTMP("XPDT",7815,"^DD",451,451.999,0,"UP")="451.99"
^XTMP("XPDT",7815,"^DD",451,451.999,.01,0)="VERSION #^NJ3,0X^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"".""1N.N) X I $D(X) S DINUM=X"
^XTMP("XPDT",7815,"^DD",451,451.999,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451,451.999,.01,1,1,0)="451.999^B"
^XTMP("XPDT",7815,"^DD",451,451.999,.01,1,1,1)="S ^PRSN(451,DA(3),""E"",DA(2),""D"",DA(1),""V"",""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451,451.999,.01,1,1,2)="K ^PRSN(451,DA(3),""E"",DA(2),""D"",DA(1),""V"",""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451,451.999,.01,3)="Type a version number between 1 and 999, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",451,451.999,.01,23,0)="^.001^2^2^3090708^^^^"
^XTMP("XPDT",7815,"^DD",451,451.999,.01,23,1,0)="The version # of the employee's day # time card increases by 1 for each"
^XTMP("XPDT",7815,"^DD",451,451.999,.01,23,2,0)="correction of a released time card."
^XTMP("XPDT",7815,"^DD",451,451.999,.01,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451,451.999,1,0)="APP. CORRECT SUPERVISOR^P200'^VA(200,^0;2^Q"
^XTMP("XPDT",7815,"^DD",451,451.999,1,3)="Enter an approval correct released supervisor name."
^XTMP("XPDT",7815,"^DD",451,451.999,1,21,0)="^^2^2^3090708^^"
^XTMP("XPDT",7815,"^DD",451,451.999,1,21,1,0)="A pointer to the NEW PERSON file (#200) that identifies the employee's"
^XTMP("XPDT",7815,"^DD",451,451.999,1,21,2,0)="supervisor who approved the correct released time card."
^XTMP("XPDT",7815,"^DD",451,451.999,1,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451,451.999,2,0)="APP. CORRECT DATE/TIME^D^^0;3^S %DT=""ETX"" D ^%DT S X=Y K:3090101>X X"
^XTMP("XPDT",7815,"^DD",451,451.999,2,3)="TYPE A DATE AND TIME NOT EARLIER THAN JAN 01, 2009"
^XTMP("XPDT",7815,"^DD",451,451.999,2,21,0)="^^2^2^3090522^"
^XTMP("XPDT",7815,"^DD",451,451.999,2,21,1,0)="The date and time the supervisor approved the correct released time card"
^XTMP("XPDT",7815,"^DD",451,451.999,2,21,2,0)="of the version # of the day #."
^XTMP("XPDT",7815,"^DD",451,451.999,2,"DT")="3090522"
^XTMP("XPDT",7815,"^DD",451,451.999,9,0)="TIME SEGMENT^451.9999^^T;0"
^XTMP("XPDT",7815,"^DD",451,451.999,9,21,0)="^.001^1^1^3091007^^^^"
^XTMP("XPDT",7815,"^DD",451,451.999,9,21,1,0)="This multiple field stores all work time segments of point of care data."
^XTMP("XPDT",7815,"^DD",451,451.9999,0)="TIME SEGMENT SUB-FIELD^^9^10"
^XTMP("XPDT",7815,"^DD",451,451.9999,0,"DT")="3091007"
^XTMP("XPDT",7815,"^DD",451,451.9999,0,"IX","AC",451.9999,8)=""
^XTMP("XPDT",7815,"^DD",451,451.9999,0,"IX","B",451.9999,.01)=""
^XTMP("XPDT",7815,"^DD",451,451.9999,0,"NM","TIME SEGMENT")=""
^XTMP("XPDT",7815,"^DD",451,451.9999,0,"UP")="451.999"
^XTMP("XPDT",7815,"^DD",451,451.9999,.01,0)="START TIME^MRFX^^0;1^D:$D(X) ^PRSATIM"
^XTMP("XPDT",7815,"^DD",451,451.9999,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451,451.9999,.01,1,1,0)="451.9999^B"
^XTMP("XPDT",7815,"^DD",451,451.9999,.01,1,1,1)="S ^PRSN(451,DA(4),""E"",DA(3),""D"",DA(2),""V"",DA(1),""T"",""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451,451.9999,.01,1,1,2)="K ^PRSN(451,DA(4),""E"",DA(3),""D"",DA(2),""V"",DA(1),""T"",""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451,451.9999,.01,3)="Enter work start time in format 7:30A, 12:30P, MID (or 12M) for Midnight, NOON (or 12N) for noon."
^XTMP("XPDT",7815,"^DD",451,451.9999,.01,4)="D HLP^PRSATIM"
^XTMP("XPDT",7815,"^DD",451,451.9999,.01,21,0)="^.001^1^1^3091007^^^^"
^XTMP("XPDT",7815,"^DD",451,451.9999,.01,21,1,0)="This is the work start time of a time segment."
^XTMP("XPDT",7815,"^DD",451,451.9999,.01,"DT")="3091007"
^XTMP("XPDT",7815,"^DD",451,451.9999,1,0)="STOP TIME^FX^^0;2^D:$D(X) ^PRSATIM"
^XTMP("XPDT",7815,"^DD",451,451.9999,1,3)="Enter work stop time in format 7:30A, 12:30P, MID (or 12M) for midnight, or NOON (or 12N) for noon."
^XTMP("XPDT",7815,"^DD",451,451.9999,1,4)="D HLP^PRSATIM"
^XTMP("XPDT",7815,"^DD",451,451.9999,1,21,0)="^^1^1^3090709^^"
^XTMP("XPDT",7815,"^DD",451,451.9999,1,21,1,0)="This is the work stop time of a time segment."
^XTMP("XPDT",7815,"^DD",451,451.9999,1,"DT")="3090713"
^XTMP("XPDT",7815,"^DD",451,451.9999,2,0)="MEAL TIME^NJ2,0X^^0;3^K:+X'=X!(X>60)!(X<0)!(X?.E1"".""1.N) X I $D(X) K:X#15 X"
^XTMP("XPDT",7815,"^DD",451,451.9999,2,3)="Enter 0, 15, 30, 45 or 60 for minutes."
^XTMP("XPDT",7815,"^DD",451,451.9999,2,21,0)="^^1^1^3090709^^^"
^XTMP("XPDT",7815,"^DD",451,451.9999,2,21,1,0)="This is number of minutes for meal time."
^XTMP("XPDT",7815,"^DD",451,451.9999,2,"DT")="3090709"
^XTMP("XPDT",7815,"^DD",451,451.9999,3,0)="TYPE OF TIME^FX^^0;4^S DIC=457.3,DIC(0)=""EMQ"",DIC(""S"")=""I """",ON,SB,UN,""""'[$P(^(0),U)"" D ^DIC K DIC S X=$P(Y,""^"",2) K:Y'>0 X"
^XTMP("XPDT",7815,"^DD",451,451.9999,3,3)="Enter a type of time worked or leave taken for the time segment."
^XTMP("XPDT",7815,"^DD",451,451.9999,3,4)="N D,X,DIC,DO S DIC=""^PRST(457.3,"",DIC(0)=""Q"",DIC(""S"")=""I """",ON,SB,UN,""""'[$P(^(0),U)"",D=""B"" D DQ^DICQ Q"
^XTMP("XPDT",7815,"^DD",451,451.9999,3,21,0)="^.001^1^1^3090708^^^^"
^XTMP("XPDT",7815,"^DD",451,451.9999,3,21,1,0)="The type of time worked or leave taken for the time segment."
^XTMP("XPDT",7815,"^DD",451,451.9999,3,23,0)="^^1^1^3090708^"
^XTMP("XPDT",7815,"^DD",451,451.9999,3,23,1,0)="The field stores the field #1 - Short Description in Type of Time File #457.3."
^XTMP("XPDT",7815,"^DD",451,451.9999,3,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451,451.9999,4,0)="POINT OF CARE^RP211.4'^NURSF(211.4,^0;5^Q"
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,1,0)="451^AL^MUMPS"
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,1,1)="S ^PRSN(451,""AL"",$E(X,1,30),DA(4),DA(2),DA(3),DA(1),DA)="""""
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,1,2)="K ^PRSN(451,""AL"",$E(X,1,30),DA(4),DA(2),DA(3),DA(1),DA)"
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,1,"%D",0)="^^6^6^3090806^"
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,1,"%D",1,0)="This index provides the abiltiy to find and report on all nursing work "
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,1,"%D",2,0)="activity at a Nursing Location.  It provides access by identifing the "
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,1,"%D",3,0)="Point of Care, pay period, day number, nurse, version, and time segment.  "
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,1,"%D",4,0)="Be careful to find the record of interest by identifying the latest "
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,1,"%D",5,0)="version of the time segments.  Also, note that subscript are in "
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,1,"%D",6,0)="descending order except that the nurse and day number are reversed."
^XTMP("XPDT",7815,"^DD",451,451.9999,4,1,1,"DT")="3090806"
^XTMP("XPDT",7815,"^DD",451,451.9999,4,3)="Enter a Nurse Location of the time segment worked."
^XTMP("XPDT",7815,"^DD",451,451.9999,4,21,0)="^^1^1^3090709^^"
^XTMP("XPDT",7815,"^DD",451,451.9999,4,21,1,0)="This is the nurse location where the nurse worked in the time segment."
^XTMP("XPDT",7815,"^DD",451,451.9999,4,"DT")="3090806"
^XTMP("XPDT",7815,"^DD",451,451.9999,5,0)="TYPE OF WORK^P451.5'^PRSN(451.5,^0;6^Q"
^XTMP("XPDT",7815,"^DD",451,451.9999,5,3)="Enter a Type of Work."
^XTMP("XPDT",7815,"^DD",451,451.9999,5,21,0)="^^1^1^3090527^"
^XTMP("XPDT",7815,"^DD",451,451.9999,5,21,1,0)="This is a Type of Work for the time segment."
^XTMP("XPDT",7815,"^DD",451,451.9999,5,"DT")="3090527"
^XTMP("XPDT",7815,"^DD",451,451.9999,6,0)="MANDATORY INDICATOR^S^M:MANDATORY;V:VOLUNTARY;^0;7^Q"
^XTMP("XPDT",7815,"^DD",451,451.9999,6,3)="Enter: M for Mandatory or V for Voluntary."
^XTMP("XPDT",7815,"^DD",451,451.9999,6,21,0)="^^1^1^3090709^^"
^XTMP("XPDT",7815,"^DD",451,451.9999,6,21,1,0)="The is the mandatory indicator for OT/CT/RG type of time."
^XTMP("XPDT",7815,"^DD",451,451.9999,6,"DT")="3090709"
^XTMP("XPDT",7815,"^DD",451,451.9999,7,0)="REASON FOR OT/CT/RG^P451.6'^PRSN(451.6,^0;8^Q"
^XTMP("XPDT",7815,"^DD",451,451.9999,7,3)="Enter a reason for the OT/CT/RG Type of Time."
^XTMP("XPDT",7815,"^DD",451,451.9999,7,21,0)="^^1^1^3090527^"
^XTMP("XPDT",7815,"^DD",451,451.9999,7,21,1,0)="This is the reason of OT/CT/RG type of time."
^XTMP("XPDT",7815,"^DD",451,451.9999,7,"DT")="3090527"
^XTMP("XPDT",7815,"^DD",451,451.9999,8,0)="MILITARY START TIME^NJ4,0^^0;9^K:+X'=X!(X>4800)!(X<0)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7815,"^DD",451,451.9999,8,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451,451.9999,8,1,1,0)="451.9999^AC"
^XTMP("XPDT",7815,"^DD",451,451.9999,8,1,1,1)="S ^PRSN(451,DA(4),""E"",DA(3),""D"",DA(2),""V"",DA(1),""T"",""AC"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451,451.9999,8,1,1,2)="K ^PRSN(451,DA(4),""E"",DA(3),""D"",DA(2),""V"",DA(1),""T"",""AC"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451,451.9999,8,1,1,"DT")="3091001"
^XTMP("XPDT",7815,"^DD",451,451.9999,8,3)="Type a number between 0 and 4800, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",451,451.9999,8,21,0)="^.001^1^1^3090709^^^^"
^XTMP("XPDT",7815,"^DD",451,451.9999,8,21,1,0)="This is the start time in military time (+2400) format without leading 0."
^XTMP("XPDT",7815,"^DD",451,451.9999,8,"DT")="3091001"
^XTMP("XPDT",7815,"^DD",451,451.9999,9,0)="MILITARY STOP TIME^NJ4,0^^0;10^K:+X'=X!(X>4800)!(X<0)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7815,"^DD",451,451.9999,9,3)="Type a number between 0 and 4800, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",451,451.9999,9,21,0)="^.001^1^1^3090605^^^^"
^XTMP("XPDT",7815,"^DD",451,451.9999,9,21,1,0)="This is the stop time in military time (+2400) format without leading 0."
^XTMP("XPDT",7815,"^DD",451,451.9999,9,"DT")="3090709"
^XTMP("XPDT",7815,"^DD",451.1,451.1,0)="FIELD^^3^4"
^XTMP("XPDT",7815,"^DD",451.1,451.1,0,"DDA")="N"
^XTMP("XPDT",7815,"^DD",451.1,451.1,0,"DT")="3091203"
^XTMP("XPDT",7815,"^DD",451.1,451.1,0,"ID",1)="W ""   "",$P(^(0),U,2)"
^XTMP("XPDT",7815,"^DD",451.1,451.1,0,"ID",2)="W ""   "",$P(^(0),U,3)"
^XTMP("XPDT",7815,"^DD",451.1,451.1,0,"IX","B",451.1,.01)=""
^XTMP("XPDT",7815,"^DD",451.1,451.1,0,"NM","NURSE ROLE")=""
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,0)="CODE^RFX^^0;1^K:$L(X)>30!($L(X)<3) X"
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,1,1,0)="451.1^B"
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,1,1,1)="S ^PRSN(451.1,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,1,1,2)="K ^PRSN(451.1,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,3)="Enter a code corresponding to an appropriate nurse role and assignment. "
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,0)="^.001^22^22^3090707^^^^"
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,1,0)="This field contains a key containing values for cost center, "
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,2,0)="budget object code, occupation series and assignment code.  For entries "
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,3,0)="that contain the asterisk character, the employee can have any value for "
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,4,0)="these fields in file 450 and therefore match the entry in this file."
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,5,0)=" "
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,6,0)="The following example shows how to interpret the codes:"
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,7,0)="Example:  Code * 61 0610 88  The code is composed of 4 parts separated "
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,8,0)="by spaces."
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,9,0)=" "
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,10,0)="Part 1=Cost Center. The ""*"" in this position indicates that any "
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,11,0)="cost center is applicable. Otherwise a 4 digit number is present."
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,12,0)=" "
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,13,0)="Part 2=Last 2 digits of the 4 digit Budget Object Code. The ""61"""
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,14,0)="in this position is the last 2 digits of Budget Object Code 1061."
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,15,0)=" "
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,16,0)="Part 3=Occupational Series Code. This is a 4 digit number."
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,17,0)=" "
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,18,0)="Part 4=Assignment Code. The ""88"" in this position indicates an"
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,19,0)="assignment of RN Staff, Inpatient Acute. This is typically a 2"
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,20,0)="character code. An ""*"" in this position indicates nursing staff"
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,21,0)="that are automatically assigned to direct care roles regardless"
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,21,22,0)="of assignment codes."
^XTMP("XPDT",7815,"^DD",451.1,451.1,.01,"DT")="3090422"
^XTMP("XPDT",7815,"^DD",451.1,451.1,1,0)="ROLE^RF^^0;2^K:$L(X)>50!($L(X)<3) X"
^XTMP("XPDT",7815,"^DD",451.1,451.1,1,3)="Answer must be 3-50 characters in length."
^XTMP("XPDT",7815,"^DD",451.1,451.1,1,21,0)="^.001^3^3^3090626^^"
^XTMP("XPDT",7815,"^DD",451.1,451.1,1,21,1,0)="Nurse Role describes nursing personnel who have patient care "
^XTMP("XPDT",7815,"^DD",451.1,451.1,1,21,2,0)="responsibilities/assignments. Examples include direct care staff, "
^XTMP("XPDT",7815,"^DD",451.1,451.1,1,21,3,0)="hospital support staff, advanced practice staff."
^XTMP("XPDT",7815,"^DD",451.1,451.1,1,"DT")="3090422"
^XTMP("XPDT",7815,"^DD",451.1,451.1,2,0)="ASSIGNMENT^F^^0;3^K:$L(X)>50!($L(X)<3) X"
^XTMP("XPDT",7815,"^DD",451.1,451.1,2,3)="Answer must be 3-50 characters in length."
^XTMP("XPDT",7815,"^DD",451.1,451.1,2,21,0)="^^3^3^3090626^"
^XTMP("XPDT",7815,"^DD",451.1,451.1,2,21,1,0)="Nursing personnel are assigned to particular job positions suitable for "
^XTMP("XPDT",7815,"^DD",451.1,451.1,2,21,2,0)="their roles. The positions are identified by assignment codes which are "
^XTMP("XPDT",7815,"^DD",451.1,451.1,2,21,3,0)="included as the fourth portion of the .01 field in this file."
^XTMP("XPDT",7815,"^DD",451.1,451.1,2,"DT")="3090423"
^XTMP("XPDT",7815,"^DD",451.1,451.1,3,0)="CATEGORY^S^DC:DIRECT CARE;HS:HOSPITAL SUPPORT (CONSULTIVE);AP:ADVANCED PRACTICE;AN:ADMINISTRATIVE;AT:ACADEMIC/TRAINEE;^0;4^Q"
^XTMP("XPDT",7815,"^DD",451.1,451.1,3,3)="Select the 2 digit code that designates a nursing role"
^XTMP("XPDT",7815,"^DD",451.1,451.1,3,21,0)="^.001^1^1^3091203^^"
^XTMP("XPDT",7815,"^DD",451.1,451.1,3,21,1,0)="Category is a high level designation for a health care employee skill mix."
^XTMP("XPDT",7815,"^DD",451.1,451.1,3,"DT")="3091203"
^XTMP("XPDT",7815,"^DD",451.4,451.4,0)="FIELD^^9^3"
^XTMP("XPDT",7815,"^DD",451.4,451.4,0,"DDA")="Y"
^XTMP("XPDT",7815,"^DD",451.4,451.4,0,"DT")="3090504"
^XTMP("XPDT",7815,"^DD",451.4,451.4,0,"ID",1)="W ""   "",$P(^(0),U,2)"
^XTMP("XPDT",7815,"^DD",451.4,451.4,0,"IX","B",451.4,.01)=""
^XTMP("XPDT",7815,"^DD",451.4,451.4,0,"NM","POC TYPE OF TIME")=""
^XTMP("XPDT",7815,"^DD",451.4,451.4,.01,0)="TYPE OF TIME CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X?2A) X"
^XTMP("XPDT",7815,"^DD",451.4,451.4,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451.4,451.4,.01,1,1,0)="451.4^B"
^XTMP("XPDT",7815,"^DD",451.4,451.4,.01,1,1,1)="S ^PRSN(451.4,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451.4,451.4,.01,1,1,2)="K ^PRSN(451.4,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451.4,451.4,.01,3)="Answer must be 2 characters in length."
^XTMP("XPDT",7815,"^DD",451.4,451.4,.01,21,0)="^.001^1^1^3090429^^^^"
^XTMP("XPDT",7815,"^DD",451.4,451.4,.01,21,1,0)="This is a 2-character type of time code used in Point of Care."
^XTMP("XPDT",7815,"^DD",451.4,451.4,.01,23,0)="^.001^1^1^3090429^^^^"
^XTMP("XPDT",7815,"^DD",451.4,451.4,.01,23,1,0)="The POC TYPE OF TIME CODE is entered in the POC Daily Time Records extracted by the VANOD."
^XTMP("XPDT",7815,"^DD",451.4,451.4,.01,"DT")="3090430"
^XTMP("XPDT",7815,"^DD",451.4,451.4,1,0)="DESCRIPTION^RF^^0;2^K:$L(X)>30!($L(X)<1)!'(X?1A.29APN) X"
^XTMP("XPDT",7815,"^DD",451.4,451.4,1,3)="Answer must be 1-30 characters in length"
^XTMP("XPDT",7815,"^DD",451.4,451.4,1,21,0)="^.001^1^1^3090429^^^^"
^XTMP("XPDT",7815,"^DD",451.4,451.4,1,21,1,0)="This is the description of the POC Type of Time Code."
^XTMP("XPDT",7815,"^DD",451.4,451.4,1,"DT")="3090429"
^XTMP("XPDT",7815,"^DD",451.4,451.4,9,0)="ETA TYPE OF TIME^451.49P^^9;0"
^XTMP("XPDT",7815,"^DD",451.4,451.49,0)="ETA TYPE OF TIME SUB-FIELD^^1^2"
^XTMP("XPDT",7815,"^DD",451.4,451.49,0,"DT")="3090504"
^XTMP("XPDT",7815,"^DD",451.4,451.49,0,"IX","B",451.49,.01)=""
^XTMP("XPDT",7815,"^DD",451.4,451.49,0,"NM","ETA TYPE OF TIME")=""
^XTMP("XPDT",7815,"^DD",451.4,451.49,0,"UP")="451.4"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,0)="ETA TYPE OF TIME^M*P457.3'^PRST(457.3,^0;1^S DIC(""S"")=""I $O(^PRSN(451.4,""""C"""",$P(^PRST(457.3,Y,0),U),0))']1"" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,1,0)="451.49^B"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,1,1)="S ^PRSN(451.4,DA(1),9,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,1,2)="K ^PRSN(451.4,DA(1),9,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,0)="^^TRIGGER^451.49^1"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,1)="K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^PRSN(451.4,D0,9,D1,0)):^(0),1:"""") S X=$P(Y(1),U,2),X=X S DIU=X K Y X ^DD(451.49,.01,1,2,1.1) X ^DD(451.49,.01,1,2,1.4)"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,1.1)="S X=DIV S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=DIV S:'D0!'$D(^PRST(457.3,+D0,0)) D0=-1 S Y(101)=$S($D(^PRST(457.3,D0,0)):^(0),1:"""") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0)"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,1.4)="S DIH=$G(^PRSN(451.4,DIV(0),9,DIV(1),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=451.49,DIG=1 D ^DICR"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,2)="K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^PRSN(451.4,D0,9,D1,0)):^(0),1:"""") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="""" X ^DD(451.49,.01,1,2,2.4)"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,2.4)="S DIH=$G(^PRSN(451.4,DIV(0),9,DIV(1),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=451.49,DIG=1 D ^DICR"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,3)="The field is a triggered field by the field ETA TYPE OF TIME."
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,"%D",0)="^.101^2^2^3090708^^^"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,"%D",1,0)="This is a trigger cross-reference. Field #1 is triggered by field #.01 and"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,"%D",2,0)="stores the Code of Field #.01 in File #457.3 - Type of Time."
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,"CREATE VALUE")="ETA TYPE OF TIME:CODE"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,"DELETE VALUE")="@"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,"DT")="3090504"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,1,2,"FIELD")="ETA TYPE OF TIME CODE"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,3)="Enter an ETA Type of Code in the Type of Time file."
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,12)="One ETA Type of Time Code can only be associated with one POC Time Code"
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,12.1)="S DIC(""S"")=""I $O(^PRSN(451.4,""""C"""",$P(^PRST(457.3,Y,0),U),0))']1"""
^XTMP("XPDT",7815,"^DD",451.4,451.49,.01,"DT")="3090504"
^XTMP("XPDT",7815,"^DD",451.4,451.49,1,0)="ETA TYPE OF TIME CODE^F^^0;2^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X"
^XTMP("XPDT",7815,"^DD",451.4,451.49,1,3)="Answer must be 2 characters in length."
^XTMP("XPDT",7815,"^DD",451.4,451.49,1,5,1,0)="451.49^.01^2"
^XTMP("XPDT",7815,"^DD",451.4,451.49,1,9)="^"
^XTMP("XPDT",7815,"^DD",451.4,451.49,1,21,0)="^^1^1^3090504^"
^XTMP("XPDT",7815,"^DD",451.4,451.49,1,21,1,0)="This is the code of the pointer field .01"
^XTMP("XPDT",7815,"^DD",451.4,451.49,1,"DT")="3090504"
^XTMP("XPDT",7815,"^DD",451.5,451.5,0)="FIELD^^1^2"
^XTMP("XPDT",7815,"^DD",451.5,451.5,0,"DDA")="N"
^XTMP("XPDT",7815,"^DD",451.5,451.5,0,"DT")="3090511"
^XTMP("XPDT",7815,"^DD",451.5,451.5,0,"ID",1)="W ""   "",$P(^(0),U,2)"
^XTMP("XPDT",7815,"^DD",451.5,451.5,0,"IX","B",451.5,.01)=""
^XTMP("XPDT",7815,"^DD",451.5,451.5,0,"NM","TYPE OF WORK")=""
^XTMP("XPDT",7815,"^DD",451.5,451.5,0,"PT",451.9999,5)=""
^XTMP("XPDT",7815,"^DD",451.5,451.5,.01,0)="WORK CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X"
^XTMP("XPDT",7815,"^DD",451.5,451.5,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451.5,451.5,.01,1,1,0)="451.5^B"
^XTMP("XPDT",7815,"^DD",451.5,451.5,.01,1,1,1)="S ^PRSN(451.5,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451.5,451.5,.01,1,1,2)="K ^PRSN(451.5,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451.5,451.5,.01,3)="Answer must be 2 characters in length."
^XTMP("XPDT",7815,"^DD",451.5,451.5,.01,21,0)="^^2^2^3090707^"
^XTMP("XPDT",7815,"^DD",451.5,451.5,.01,21,1,0)="The Work Code is a 2 letter code that reflects the type of work "
^XTMP("XPDT",7815,"^DD",451.5,451.5,.01,21,2,0)="that a nurse performs inside or outside of defined tour time."
^XTMP("XPDT",7815,"^DD",451.5,451.5,.01,"DT")="3090707"
^XTMP("XPDT",7815,"^DD",451.5,451.5,1,0)="WORK DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<3) X"
^XTMP("XPDT",7815,"^DD",451.5,451.5,1,3)="Answer must be 3-30 characters in length."
^XTMP("XPDT",7815,"^DD",451.5,451.5,1,21,0)="^^3^3^3090707^"
^XTMP("XPDT",7815,"^DD",451.5,451.5,1,21,1,0)="The Work Description is the explanatory text of the Work Code. Each Work "
^XTMP("XPDT",7815,"^DD",451.5,451.5,1,21,2,0)="Description is designated by a 2 character code. For example, Direct Care "
^XTMP("XPDT",7815,"^DD",451.5,451.5,1,21,3,0)="is DC, Light Duty is LD, etc."
^XTMP("XPDT",7815,"^DD",451.5,451.5,1,"DT")="3090707"
^XTMP("XPDT",7815,"^DD",451.6,451.6,0)="FIELD^^1^2"
^XTMP("XPDT",7815,"^DD",451.6,451.6,0,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451.6,451.6,0,"ID",1)="W ""   "",$P(^(0),U,2)"
^XTMP("XPDT",7815,"^DD",451.6,451.6,0,"IX","B",451.6,.01)=""
^XTMP("XPDT",7815,"^DD",451.6,451.6,0,"NM","REASON FOR OVERTIME")=""
^XTMP("XPDT",7815,"^DD",451.6,451.6,0,"PT",451.9999,7)=""
^XTMP("XPDT",7815,"^DD",451.6,451.6,.01,0)="OVERTIME CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X"
^XTMP("XPDT",7815,"^DD",451.6,451.6,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451.6,451.6,.01,1,1,0)="451.6^B"
^XTMP("XPDT",7815,"^DD",451.6,451.6,.01,1,1,1)="S ^PRSN(451.6,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451.6,451.6,.01,1,1,2)="K ^PRSN(451.6,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451.6,451.6,.01,3)="Answer must be 2 characters in length."
^XTMP("XPDT",7815,"^DD",451.6,451.6,.01,21,0)="^.001^3^3^3090708^^"
^XTMP("XPDT",7815,"^DD",451.6,451.6,.01,21,1,0)="The Overtime Code is a 2 letter code that reflects a nurse's "
^XTMP("XPDT",7815,"^DD",451.6,451.6,.01,21,2,0)="reason for working overtime.  For instance, the code EW stands for "
^XTMP("XPDT",7815,"^DD",451.6,451.6,.01,21,3,0)="Extreme Weather."
^XTMP("XPDT",7815,"^DD",451.6,451.6,.01,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451.6,451.6,1,0)="OVERTIME DESCRIPTION^F^^0;2^K:$L(X)>40!($L(X)<3) X"
^XTMP("XPDT",7815,"^DD",451.6,451.6,1,3)="Answer must be 3-40 characters in length."
^XTMP("XPDT",7815,"^DD",451.6,451.6,1,21,0)="^^3^3^3090708^"
^XTMP("XPDT",7815,"^DD",451.6,451.6,1,21,1,0)="The Overtime Description is the explanatory text of the Overtime Code."
^XTMP("XPDT",7815,"^DD",451.6,451.6,1,21,2,0)="Each Overtime Description is designated by a 2 character code. For "
^XTMP("XPDT",7815,"^DD",451.6,451.6,1,21,3,0)="example Extreme Weather is EW, Unpredicted Patient Care is UP, etc."
^XTMP("XPDT",7815,"^DD",451.6,451.6,1,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451.7,451.7,0)="FIELD^^14^15"
^XTMP("XPDT",7815,"^DD",451.7,451.7,0,"DDA")="N"
^XTMP("XPDT",7815,"^DD",451.7,451.7,0,"DT")="3091023"
^XTMP("XPDT",7815,"^DD",451.7,451.7,0,"IX","B",451.7,.01)=""
^XTMP("XPDT",7815,"^DD",451.7,451.7,0,"NM","POC DAILY ACTIVITY EXTRACTION")=""
^XTMP("XPDT",7815,"^DD",451.7,451.7,.01,0)="SEQUENCE NUMBER^RNJ15,0X^^0;1^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7815,"^DD",451.7,451.7,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",451.7,451.7,.01,1,1,0)="451.7^B"
^XTMP("XPDT",7815,"^DD",451.7,451.7,.01,1,1,1)="S ^PRSN(451.7,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",451.7,451.7,.01,1,1,2)="K ^PRSN(451.7,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",451.7,451.7,.01,3)="Enter a next available consecutive sequence number."
^XTMP("XPDT",7815,"^DD",451.7,451.7,.01,21,0)="^^1^1^3090708^^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,.01,21,1,0)="This is the sequence number of the entry and it equals to its IEN of the entry."
^XTMP("XPDT",7815,"^DD",451.7,451.7,.01,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451.7,451.7,1,0)="NURSE INSTITUTION^RP4'^DIC(4,^0;2^Q"
^XTMP("XPDT",7815,"^DD",451.7,451.7,1,3)="This is the institution associated witht a nurses primary location."
^XTMP("XPDT",7815,"^DD",451.7,451.7,1,21,0)="^^1^1^3091023^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,1,21,1,0)="This is a pointer to the institution file (#4)."
^XTMP("XPDT",7815,"^DD",451.7,451.7,1,"DT")="3091023"
^XTMP("XPDT",7815,"^DD",451.7,451.7,2,0)="STATION NUMBER^RF^^0;3^K:$L(X)>5!($L(X)<3)!'(X?3.5NA) X"
^XTMP("XPDT",7815,"^DD",451.7,451.7,2,3)="Answer must be 3-5 characters in length."
^XTMP("XPDT",7815,"^DD",451.7,451.7,2,21,0)="^^1^1^3091023^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,2,21,1,0)="This is the station number, field 99 of file 4."
^XTMP("XPDT",7815,"^DD",451.7,451.7,2,"DT")="3091023"
^XTMP("XPDT",7815,"^DD",451.7,451.7,3,0)="TIME CARD RELEASE VERSION #^NJ3,0^^0;4^K:+X'=X!(X>999)!(X<1)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7815,"^DD",451.7,451.7,3,3)="Type a number between 1 and 999, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",451.7,451.7,3,21,0)="^.001^1^1^3090707^^^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,3,21,1,0)="This is the Time Card released version number assigned during releasing."
^XTMP("XPDT",7815,"^DD",451.7,451.7,3,"DT")="3090707"
^XTMP("XPDT",7815,"^DD",451.7,451.7,4,0)="NURSE ID^NJ9,0^^0;5^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7815,"^DD",451.7,451.7,4,3)="Enter a 9-digit identification for the nurse."
^XTMP("XPDT",7815,"^DD",451.7,451.7,4,21,0)="^^1^1^3090513^^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,4,21,1,0)="This is the identification of the nurse."
^XTMP("XPDT",7815,"^DD",451.7,451.7,4,"DT")="3090513"
^XTMP("XPDT",7815,"^DD",451.7,451.7,5,0)="PAID EMPLOYEE IEN^P450'^PRSPC(^0;6^Q"
^XTMP("XPDT",7815,"^DD",451.7,451.7,5,3)="Enter a valid IEN of Paid Employee File."
^XTMP("XPDT",7815,"^DD",451.7,451.7,5,21,0)="^^1^1^3090629^^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,5,21,1,0)="This is the IEN of the Paid Employee File of the nurse."
^XTMP("XPDT",7815,"^DD",451.7,451.7,5,"DT")="3090629"
^XTMP("XPDT",7815,"^DD",451.7,451.7,6,0)="POC TIME RECORD DATE^NJ8,0^^0;7^K:+X'=X!(X>20991231)!(X<20090101)!(X?.E1"".""1N.N) X"
^XTMP("XPDT",7815,"^DD",451.7,451.7,6,3)="Type a Number between 20090101 and 20991231, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",451.7,451.7,6,21,0)="^.001^1^1^3090630^^^^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,6,21,1,0)="This the POC Time Record YYYYMMDD."
^XTMP("XPDT",7815,"^DD",451.7,451.7,6,"DT")="3090630"
^XTMP("XPDT",7815,"^DD",451.7,451.7,7,0)="START TIME^F^^0;8^K:$L(X)>4!($L(X)<4)!'(X?4N&(X<2400)) X"
^XTMP("XPDT",7815,"^DD",451.7,451.7,7,3)="Enter a 4-digit military time less than 2400."
^XTMP("XPDT",7815,"^DD",451.7,451.7,7,21,0)="^.001^2^2^3090707^^^^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,7,21,1,0)="This is the start time of a time segment. The start time is in 4-digit"
^XTMP("XPDT",7815,"^DD",451.7,451.7,7,21,2,0)="military time format."
^XTMP("XPDT",7815,"^DD",451.7,451.7,7,"DT")="3090707"
^XTMP("XPDT",7815,"^DD",451.7,451.7,8,0)="STOP TIME^FX^^0;9^K:$L(X)>4!($L(X)<4)!'(X?4N&((X'<15)&(X'>2400))) X"
^XTMP("XPDT",7815,"^DD",451.7,451.7,8,3)="Enter an end 4-digit military time greater than 0015."
^XTMP("XPDT",7815,"^DD",451.7,451.7,8,21,0)="^^2^2^3090707^^^^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,8,21,1,0)="This is the end time of a time segment. The end time is in 4-digit military"
^XTMP("XPDT",7815,"^DD",451.7,451.7,8,21,2,0)="time format."
^XTMP("XPDT",7815,"^DD",451.7,451.7,8,"DT")="3091027"
^XTMP("XPDT",7815,"^DD",451.7,451.7,9,0)="POC TYPE OF TIME^F^^0;10^K:$L(X)>2!($L(X)<2)!'(X?2A) X"
^XTMP("XPDT",7815,"^DD",451.7,451.7,9,3)="Enter a POC type of code."
^XTMP("XPDT",7815,"^DD",451.7,451.7,9,21,0)="^^1^1^3090513^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,9,21,1,0)="This is a POC type of time code from the File #451.4."
^XTMP("XPDT",7815,"^DD",451.7,451.7,9,"DT")="3090513"
^XTMP("XPDT",7815,"^DD",451.7,451.7,10,0)="POC NURSE LOCATION^RP211.4'^NURSF(211.4,^0;11^Q"
^XTMP("XPDT",7815,"^DD",451.7,451.7,10,3)="Enter a nurse work location."
^XTMP("XPDT",7815,"^DD",451.7,451.7,10,21,0)="^.001^1^1^3090708^^^^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,10,21,1,0)="This is the nurse location where the nurse works."
^XTMP("XPDT",7815,"^DD",451.7,451.7,10,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",451.7,451.7,11,0)="OVERTIME MANDATORY^S^Y:YES;N:NO;^0;12^Q"
^XTMP("XPDT",7815,"^DD",451.7,451.7,11,3)="Enter 'Y' for Yes if overtime is mandatory."
^XTMP("XPDT",7815,"^DD",451.7,451.7,11,21,0)="^^2^2^3090707^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,11,21,1,0)="The value is 'Y' if overtime is mandatory. The value is 'N' or null if"
^XTMP("XPDT",7815,"^DD",451.7,451.7,11,21,2,0)="overtime is not mandatory."
^XTMP("XPDT",7815,"^DD",451.7,451.7,11,"DT")="3090707"
^XTMP("XPDT",7815,"^DD",451.7,451.7,12,0)="OVERTIME REASON^F^^0;13^K:$L(X)>2!($L(X)<2)!'(X?2A) X"
^XTMP("XPDT",7815,"^DD",451.7,451.7,12,3)="Enter a 2-character code for Overtime Reason."
^XTMP("XPDT",7815,"^DD",451.7,451.7,12,21,0)="^^2^2^3090513^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,12,21,1,0)="This is a 2-character code for the overtime reason in File #451.6 Reason"
^XTMP("XPDT",7815,"^DD",451.7,451.7,12,21,2,0)="for Overtime."
^XTMP("XPDT",7815,"^DD",451.7,451.7,12,"DT")="3090513"
^XTMP("XPDT",7815,"^DD",451.7,451.7,13,0)="POC TYPE OF WORK^F^^0;14^K:$L(X)>2!($L(X)<2)!'(X?2A) X"
^XTMP("XPDT",7815,"^DD",451.7,451.7,13,3)="Enter a 2-character Type of Work."
^XTMP("XPDT",7815,"^DD",451.7,451.7,13,21,0)="^^1^1^3090513^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,13,21,1,0)="This is a 2-character code of the File #451.5 Type of Work."
^XTMP("XPDT",7815,"^DD",451.7,451.7,13,"DT")="3090513"
^XTMP("XPDT",7815,"^DD",451.7,451.7,14,0)="RELEASE DATE^D^^0;15^S %DT=""E"" D ^%DT S X=Y K:3090101>X X"
^XTMP("XPDT",7815,"^DD",451.7,451.7,14,3)="Enter a release date of the POC DAILY TIME RECORD for extraction."
^XTMP("XPDT",7815,"^DD",451.7,451.7,14,21,0)="^^1^1^3090707^^^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,14,21,1,0)="This is the release date of the POC DAILY TIME RECORD for data extraction."
^XTMP("XPDT",7815,"^DD",451.7,451.7,14,23,0)="^^1^1^3090707^^^"
^XTMP("XPDT",7815,"^DD",451.7,451.7,14,23,1,0)="The release date is used for purging entries in this file."
^XTMP("XPDT",7815,"^DD",451.7,451.7,14,"DT")="3090707"
^XTMP("XPDT",7815,"^DD",455.5,455.5,0)="FIELD^^20.5^16"
^XTMP("XPDT",7815,"^DD",455.5,455.5,0,"DDA")="N"
^XTMP("XPDT",7815,"^DD",455.5,455.5,0,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",455.5,455.5,0,"IX","AA",455.512,.01)=""
^XTMP("XPDT",7815,"^DD",455.5,455.5,0,"IX","AS",455.511,.01)=""
^XTMP("XPDT",7815,"^DD",455.5,455.5,0,"IX","ASX",455.511,1)=""
^XTMP("XPDT",7815,"^DD",455.5,455.5,0,"IX","AT",455.51,.01)=""
^XTMP("XPDT",7815,"^DD",455.5,455.5,0,"IX","B",455.5,.01)=""
^XTMP("XPDT",7815,"^DD",455.5,455.5,0,"NM","T&L UNIT")=""
^XTMP("XPDT",7815,"^DD",455.5,455.5,0,"PT",451.09,6)=""
^XTMP("XPDT",7815,"^DD",455.5,455.5,0,"PT",457.13,.01)=""
^XTMP("XPDT",7815,"^DD",455.5,455.5,.01,0)="CODE^RFX^^0;1^K:X[""""""""!($A(X)=45) X I $D(X) K:$L(X)>3!($L(X)<3)!'(X?3N!(X?1""VC""1U)!(X?1""F""2N)) X"
^XTMP("XPDT",7815,"^DD",455.5,455.5,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",455.5,455.5,.01,1,1,0)="455.5^B"
^XTMP("XPDT",7815,"^DD",455.5,455.5,.01,1,1,1)="S ^PRST(455.5,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",455.5,455.5,.01,1,1,2)="K ^PRST(455.5,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",455.5,455.5,.01,3)="ANSWER MUST BE 3 NUMBERS IN LENGTH OR 'VC' AND AN ALPHABETIC CHARACTER OR 'F' AND 2 NUMBERS"
^XTMP("XPDT",7815,"^DD",455.5,455.5,.01,21,0)="^^2^2^2951128^^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,.01,21,1,0)="This field contains the three-character code assigned to the"
^XTMP("XPDT",7815,"^DD",455.5,455.5,.01,21,2,0)="T&L Unit."
^XTMP("XPDT",7815,"^DD",455.5,455.5,.01,"DT")="2951128"
^XTMP("XPDT",7815,"^DD",455.5,455.5,1,0)="NAME^F^^0;2^K:$L(X)>20!($L(X)<3) X"
^XTMP("XPDT",7815,"^DD",455.5,455.5,1,3)="ANSWER MUST BE 3-20 CHARACTERS IN LENGTH"
^XTMP("XPDT",7815,"^DD",455.5,455.5,1,21,0)="^^1^1^2881216^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,1,21,1,0)="This field contains a descriptive name for the T&L unit."
^XTMP("XPDT",7815,"^DD",455.5,455.5,2,0)="CURRENT PAY PERIOD STATUS^S^T:TIMEKEEPER CLOSED;P:PAYROLL REVIEWED;X:SENT TO AUSTIN;^0;3^Q"
^XTMP("XPDT",7815,"^DD",455.5,455.5,2,21,0)="^^4^4^2881216^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,2,21,1,0)="This field indicates the status of the T&L unit for the"
^XTMP("XPDT",7815,"^DD",455.5,455.5,2,21,2,0)="current pay period. The status is updated only when all"
^XTMP("XPDT",7815,"^DD",455.5,455.5,2,21,3,0)="employees in the unit have been processed by the Timekeeper"
^XTMP("XPDT",7815,"^DD",455.5,455.5,2,21,4,0)="or reviewed by Payroll."
^XTMP("XPDT",7815,"^DD",455.5,455.5,2,"DT")="2891020"
^XTMP("XPDT",7815,"^DD",455.5,455.5,10,0)="TIMEKEEPER^455.51P^^T;0"
^XTMP("XPDT",7815,"^DD",455.5,455.5,10,21,0)="^^1^1^2940114^^^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,10,21,1,0)="This field contains the Timekeepers assigned to the T&L Unit."
^XTMP("XPDT",7815,"^DD",455.5,455.5,11,0)="SUPERVISOR^455.511P^^S;0"
^XTMP("XPDT",7815,"^DD",455.5,455.5,11,21,0)="^^3^3^2930202^^^^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,11,21,1,0)="This is a list of the persons who may function as OT/CT supervisors"
^XTMP("XPDT",7815,"^DD",455.5,455.5,11,21,2,0)="in that they officially request OT/CT time and verify the time"
^XTMP("XPDT",7815,"^DD",455.5,455.5,11,21,3,0)="worked for this T&L unit."
^XTMP("XPDT",7815,"^DD",455.5,455.5,11,"DT")="2920218"
^XTMP("XPDT",7815,"^DD",455.5,455.5,12,0)="OT/CT APPROVER^455.512P^^A;0"
^XTMP("XPDT",7815,"^DD",455.5,455.5,12,21,0)="^^2^2^2921215^^^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,12,21,1,0)="This is a list of persons who may function as OT/CT approving"
^XTMP("XPDT",7815,"^DD",455.5,455.5,12,21,2,0)="officials for OT/CT requests from this T&L unit."
^XTMP("XPDT",7815,"^DD",455.5,455.5,12,"DT")="2920715"
^XTMP("XPDT",7815,"^DD",455.5,455.5,20,0)="STATION #^RF^^0;4^K:$L(X)>3!($L(X)<3)!'(X?3N) X"
^XTMP("XPDT",7815,"^DD",455.5,455.5,20,3)="Answer must be 3 digits in length."
^XTMP("XPDT",7815,"^DD",455.5,455.5,20,21,0)="^^2^2^2920819^^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,20,21,1,0)="This is a pointer to the Institution file and is the station"
^XTMP("XPDT",7815,"^DD",455.5,455.5,20,21,2,0)="with which this T&L is associated."
^XTMP("XPDT",7815,"^DD",455.5,455.5,20,"DT")="2920330"
^XTMP("XPDT",7815,"^DD",455.5,455.5,20.5,0)="MEDICAL CENTER DIVISION^*P4'^DIC(4,^1;1^S DIC(""S"")=""I +$$SITE^VASITE()=+$G(^DIC(4,+Y,99))&'$P($G(^DIC(4,+Y,99)),U,4)"" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X"
^XTMP("XPDT",7815,"^DD",455.5,455.5,20.5,3)="Must be in the INSTITUTION file (#4) and associated with this facility."
^XTMP("XPDT",7815,"^DD",455.5,455.5,20.5,12)="Only allow selection of active divisions for this VistA instance."
^XTMP("XPDT",7815,"^DD",455.5,455.5,20.5,12.1)="S DIC(""S"")=""I +$$SITE^VASITE()=+$G(^DIC(4,+Y,99))&'$P($G(^DIC(4,+Y,99)),U,4)"""
^XTMP("XPDT",7815,"^DD",455.5,455.5,20.5,21,0)="^^3^3^3090717^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,20.5,21,1,0)="This field points to an entry in the INSTITUTION file (#4).  It may be a"
^XTMP("XPDT",7815,"^DD",455.5,455.5,20.5,21,2,0)="stand alone facility or in the case of an integrated site it could be the "
^XTMP("XPDT",7815,"^DD",455.5,455.5,20.5,21,3,0)="parent facility or any of its subordinates."
^XTMP("XPDT",7815,"^DD",455.5,455.5,20.5,"DT")="3090717"
^XTMP("XPDT",7815,"^DD",455.5,455.5,21,0)="SERVICE^P49'^DIC(49,^0;5^Q"
^XTMP("XPDT",7815,"^DD",455.5,455.5,21,21,0)="^^2^2^2901124^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,21,21,1,0)="This is a pointer into the Service/Section file (49) and indicates"
^XTMP("XPDT",7815,"^DD",455.5,455.5,21,21,2,0)="the Service with which this T&L is associated."
^XTMP("XPDT",7815,"^DD",455.5,455.5,21,"DT")="2900319"
^XTMP("XPDT",7815,"^DD",455.5,455.5,22,0)="SECTION^F^^0;6^K:$L(X)>20!($L(X)<3) X"
^XTMP("XPDT",7815,"^DD",455.5,455.5,22,3)="Answer must be 3-20 characters in length."
^XTMP("XPDT",7815,"^DD",455.5,455.5,22,21,0)="^^2^2^2901124^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,22,21,1,0)="This is a free text field indicating the service sub-unit or"
^XTMP("XPDT",7815,"^DD",455.5,455.5,22,21,2,0)="division with which this T&L unit is associated."
^XTMP("XPDT",7815,"^DD",455.5,455.5,22,"DT")="2920207"
^XTMP("XPDT",7815,"^DD",455.5,455.5,23,0)="ENTITLED TO PREMIUMS?^RS^1:YES;0:NO;^0;7^Q"
^XTMP("XPDT",7815,"^DD",455.5,455.5,23,21,0)="^^1^1^2921215^^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,23,21,1,0)="Indicates the time and leave unit is entitled to premium pay."
^XTMP("XPDT",7815,"^DD",455.5,455.5,23,"DT")="2920925"
^XTMP("XPDT",7815,"^DD",455.5,455.5,24,0)="TIME SLEEP-TIME BEGINS^RFX^^0;8^D:$D(X) ^PRSATIM"
^XTMP("XPDT",7815,"^DD",455.5,455.5,24,4)="D HLP^PRSATIM"
^XTMP("XPDT",7815,"^DD",455.5,455.5,24,21,0)="^^2^2^2921215^^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,24,21,1,0)="When Sleep Time begins for Standby tours of duty in this time and"
^XTMP("XPDT",7815,"^DD",455.5,455.5,24,21,2,0)="leave unit."
^XTMP("XPDT",7815,"^DD",455.5,455.5,24,"DT")="2920925"
^XTMP("XPDT",7815,"^DD",455.5,455.5,30,0)="POC DATA ENTRY PERSONNEL^455.52P^^2;0"
^XTMP("XPDT",7815,"^DD",455.5,455.5,30,21,0)="^^3^3^3090710^^^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,30,21,1,0)="This field contains persons that are responsible for entering additional"
^XTMP("XPDT",7815,"^DD",455.5,455.5,30,21,2,0)="data about VA nurses time and attendance activity for this T&L unit that"
^XTMP("XPDT",7815,"^DD",455.5,455.5,30,21,3,0)="will be used by the VANOD database."
^XTMP("XPDT",7815,"^DD",455.5,455.5,31,0)="POC DATA APPROVAL PERSONNEL^455.531P^^3;0"
^XTMP("XPDT",7815,"^DD",455.5,455.5,31,21,0)="^^3^3^3090708^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,31,21,1,0)="This field contains persons that are responsible for approving additional"
^XTMP("XPDT",7815,"^DD",455.5,455.5,31,21,2,0)="data about VA nurses time and attendance activity for this T&L unit that"
^XTMP("XPDT",7815,"^DD",455.5,455.5,31,21,3,0)="will be used by the VANOD database."
^XTMP("XPDT",7815,"^DD",455.5,455.5,101,0)="PENDING CERTIFICATION ACTIONS^NJ4,0^^0;10^K:+X'=X!(X>9999)!(X<0)!(X?.E1"".""1N.N) X"
^XTMP("XPDT",7815,"^DD",455.5,455.5,101,3)="Type a Number between 0 and 9999, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",455.5,455.5,101,21,0)="^^3^3^2950412^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,101,21,1,0)="This field contains the number of pending actions relating to leave,"
^XTMP("XPDT",7815,"^DD",455.5,455.5,101,21,2,0)="overtime, tour changes, and prior pay period corrections which"
^XTMP("XPDT",7815,"^DD",455.5,455.5,101,21,3,0)="require supervisory certification."
^XTMP("XPDT",7815,"^DD",455.5,455.5,101,"DT")="2950412"
^XTMP("XPDT",7815,"^DD",455.5,455.5,102,0)="PENDING OT/PPA ACTIONS^NJ4,0^^0;11^K:+X'=X!(X>9999)!(X<0)!(X?.E1"".""1N.N) X"
^XTMP("XPDT",7815,"^DD",455.5,455.5,102,3)="Type a Number between 0 and 9999, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",455.5,455.5,102,21,0)="^^2^2^2950523^"
^XTMP("XPDT",7815,"^DD",455.5,455.5,102,21,1,0)="This field contains the number of OT/CT and Prior Pay Period"
^XTMP("XPDT",7815,"^DD",455.5,455.5,102,21,2,0)="Adjustment actions requiring second-level approval."
^XTMP("XPDT",7815,"^DD",455.5,455.5,102,"DT")="2950523"
^XTMP("XPDT",7815,"^DD",455.5,455.51,0)="TIMEKEEPER SUB-FIELD^^1^2"
^XTMP("XPDT",7815,"^DD",455.5,455.51,0,"IX","B",455.51,.01)=""
^XTMP("XPDT",7815,"^DD",455.5,455.51,0,"NM","TIMEKEEPER")=""
^XTMP("XPDT",7815,"^DD",455.5,455.51,0,"UP")="455.5"
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,0)="TIMEKEEPER^P200'X^VA(200,^0;1^I $D(X) S DINUM=X"
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,1,1,0)="455.51^B"
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,1,1,1)="S ^PRST(455.5,DA(1),""T"",""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,1,1,2)="K ^PRST(455.5,DA(1),""T"",""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,1,2,0)="455.5^AT^MUMPS"
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,1,2,1)="S ^PRST(455.5,""AT"",DA,DA(1))="""""
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,1,2,2)="K ^PRST(455.5,""AT"",DA,DA(1))"
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,1,2,"%D",0)="^.101^2^2^3090616^^^"
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,1,2,"%D",1,0)="This is a cross-reference by User of all T&L units for which"
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,1,2,"%D",2,0)="this user is a Timekeeper."
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,21,0)="^^2^2^2940114^^^^"
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,21,1,0)="This field is a pointer to the New Person File (File 200) and is a"
^XTMP("XPDT",7815,"^DD",455.5,455.51,.01,21,2,0)="timekeeper assigned to this T&L Unit."
^XTMP("XPDT",7815,"^DD",455.5,455.51,1,0)="ENTRY METHOD^RS^0:SINGLE STRING ENTRY;1:INDIVIDUAL PROMPTS;^0;2^Q"
^XTMP("XPDT",7815,"^DD",455.5,455.51,1,21,0)="^^2^2^2881216^"
^XTMP("XPDT",7815,"^DD",455.5,455.51,1,21,1,0)="This field contains the preferred data entry method for the"
^XTMP("XPDT",7815,"^DD",455.5,455.51,1,21,2,0)="Timekeeper."
^XTMP("XPDT",7815,"^DD",455.5,455.51,1,"DT")="2880822"
^XTMP("XPDT",7815,"^DD",455.5,455.511,0)="SUPERVISOR SUB-FIELD^^1^2"
^XTMP("XPDT",7815,"^DD",455.5,455.511,0,"DT")="2920810"
^XTMP("XPDT",7815,"^DD",455.5,455.511,0,"IX","AC",455.511,1)=""
^XTMP("XPDT",7815,"^DD",455.5,455.511,0,"IX","B",455.511,.01)=""
^XTMP("XPDT",7815,"^DD",455.5,455.511,0,"NM","SUPERVISOR")=""
^XTMP("XPDT",7815,"^DD",455.5,455.511,0,"UP")="455.5"
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,0)="SUPERVISOR^P200'X^VA(200,^0;1^I $D(X) S DINUM=X"
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,1,1,0)="455.511^B"
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,1,1,1)="S ^PRST(455.5,DA(1),""S"",""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,1,1,2)="K ^PRST(455.5,DA(1),""S"",""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,1,2,0)="455.5^AS^MUMPS"
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,1,2,1)="S ^PRST(455.5,""AS"",DA,DA(1))="""""
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,1,2,2)="K ^PRST(455.5,""AS"",DA,DA(1))"
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,1,2,"%D",0)="^^2^2^2940601^^"
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,1,2,"%D",1,0)="This is a cross-reference by User of all T&L units of which"
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,1,2,"%D",2,0)="the user is a supervisor."
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,21,0)="^^2^2^2921215^^"
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,21,1,0)="This is a pointer to file 200 and represents a supervisor who"
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,21,2,0)="may request and verify OT/CT for this T&L unit."
^XTMP("XPDT",7815,"^DD",455.5,455.511,.01,"DT")="2901110"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,0)="T&L WHICH CERTIFIES SUPERVISOR^RF^^0;2^K:X[""""""""!($A(X)=45) X I $D(X) S DIC=455.5,DIC(0)=""EMQ"" D ^DIC K DIC S X=$P(Y,""^"",2) K:$L(X)'=3 X"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,0)="455.5^ASX^MUMPS"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,1)="S ^PRST(455.5,""ASX"",$E(X,1,30),DA,DA(1))="""""
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,2)="K ^PRST(455.5,""ASX"",$E(X,1,30),DA,DA(1))"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,"%D",0)="^^7^7^2980304^"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,"%D",1,0)="This is a cross-reference by T&L Unit of supervisors certified by that T&L"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,"%D",2,0)="Unit. It is used to find supervisory employees that should be included"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,"%D",3,0)="when certifications or approvals are performed for the T&L."
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,"%D",4,0)="  ^PRST(455.5,""ASX"",X,DA,DA(1)) where:"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,"%D",5,0)="    X is the T&L which certifies the supervisor (external value)."
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,"%D",6,0)="    DA is the supervisor's ien (equal to ien in file #200 due to DINUM)."
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,"%D",7,0)="    DA(1) is the ien of the T&L UNIT that the supervisor supervises."
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,1,"DT")="2980304"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,0)="455.511^AC^MUMPS"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,1)="D:$G(PRSTLWCS)'=""XREF"" TLWCS^PRSZTL"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,2)="Q"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,"%D",0)="^^9^9^2990128^"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,"%D",1,0)="This cross-reference keeps the T&L WHICH CERTIFIES SUPERVISOR field"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,"%D",2,0)="consistant between all T&L Units for which an employee is a supervisor."
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,"%D",3,0)="When the T&L WHICH CERTIFIES SUPERVISOR field is entered or changed for a"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,"%D",4,0)="supervisor of a T&L unit, this cross-reference will automatically make the"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,"%D",5,0)="same update to the T&L WHICH CERTIFIES SUPERVISOR field for any other"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,"%D",6,0)="appropriate T&L units. Variable PRSTLWCS is set equal to ""XREF"" while the"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,"%D",7,0)="cross-reference code is updating the other T&L units. The existance of"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,"%D",8,0)="this variable identifies updates made by the cross-reference so those"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,"%D",9,0)="updates do not also cause execution of the cross-reference code."
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,1,2,"DT")="2990128"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,4)="N D,X,DIC,DO S DIC=""^PRST(455.5,"",DIC(0)=""Q"",D=""B"" D DQ^DICQ Q"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,21,0)="^^3^3^2930202^"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,21,1,0)="A supervisor from this T&L Unit will be displayed all actions"
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,21,2,0)="requiring approval of the supervisor. It will often be the "
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,21,3,0)="Director's Office T&L for Service Chief supervisors for example."
^XTMP("XPDT",7815,"^DD",455.5,455.511,1,"DT")="2990128"
^XTMP("XPDT",7815,"^DD",455.5,455.512,0)="OT/CT APPROVER SUB-FIELD^^.01^1"
^XTMP("XPDT",7815,"^DD",455.5,455.512,0,"IX","B",455.512,.01)=""
^XTMP("XPDT",7815,"^DD",455.5,455.512,0,"NM","OT/CT APPROVER")=""
^XTMP("XPDT",7815,"^DD",455.5,455.512,0,"UP")="455.5"
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,0)="OT/CT APPROVER^P200'X^VA(200,^0;1^I $D(X) S DINUM=X"
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,1,1,0)="455.512^B"
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,1,1,1)="S ^PRST(455.5,DA(1),""A"",""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,1,1,2)="K ^PRST(455.5,DA(1),""A"",""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,1,2,0)="455.5^AA^MUMPS"
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,1,2,1)="S ^PRST(455.5,""AA"",DA,DA(1))="""""
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,1,2,2)="K ^PRST(455.5,""AA"",DA,DA(1))"
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,1,2,"%D",0)="^.101^2^2^3090618^^"
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,1,2,"%D",1,0)="This is a cross-reference by User of all T&L units for which the"
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,1,2,"%D",2,0)="user is an OverTime/CompTime approver."
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,21,0)="^^2^2^2921215^^"
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,21,1,0)="This is a pointer into file 200 and represents an OT/CT approver"
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,21,2,0)="for this T&L unit."
^XTMP("XPDT",7815,"^DD",455.5,455.512,.01,"DT")="2901110"
^XTMP("XPDT",7815,"^DD",455.5,455.52,0)="POC DATA ENTRY PERSONNEL SUB-FIELD^^.01^1"
^XTMP("XPDT",7815,"^DD",455.5,455.52,0,"DT")="3090708"
^XTMP("XPDT",7815,"^DD",455.5,455.52,0,"IX","AC",455.52,.01)=""
^XTMP("XPDT",7815,"^DD",455.5,455.52,0,"IX","B",455.52,.01)=""
^XTMP("XPDT",7815,"^DD",455.5,455.52,0,"NM","POC DATA ENTRY PERSONNEL")=""
^XTMP("XPDT",7815,"^DD",455.5,455.52,0,"UP")="455.5"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,0)="POC DATA ENTRY PERSONNEL^P200'^VA(200,^0;1^Q"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,1,0)="455.52^B"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,1,1)="S ^PRST(455.5,DA(1),2,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,1,2)="K ^PRST(455.5,DA(1),2,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,2,0)="455.52^AC^MUMPS"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,2,1)="D ASSIGNKY^PRSNEETP(.X)"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,2,2)="D REMOVEKY^PRSNEETP(.DA,.X)"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,2,"%D",0)="^.101^6^6^3091217^^^"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,2,"%D",1,0)="This cross reference does not set any index.  It calls MUMPS code to "
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,2,"%D",2,0)="assign the PRSN DEP Security Key when a user is added to the POC Data "
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,2,"%D",3,0)="Entry Personnel multiple.  When a user is deleted from the multiple the "
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,2,"%D",4,0)="cross reference calls code to remove the security key.  The key won't be "
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,2,"%D",5,0)="removed if the user is also a POC Data Entry Personnel in another T&L "
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,2,"%D",6,0)="unit."
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,1,2,"DT")="3091217"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,3)="Select personnel responsible for entering Nurse POC data."
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,21,0)="^^3^3^3090708^"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,21,1,0)="This field points to the NEW PERSON file (#200) and identifies"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,21,2,0)="individuals that are responsible for entering Nurse POC data"
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,21,3,0)="for this T&L unit."
^XTMP("XPDT",7815,"^DD",455.5,455.52,.01,"DT")="3091217"
^XTMP("XPDT",7815,"^DD",455.5,455.531,0)="POC DATA APPROVAL PERSONNEL SUB-FIELD^^.01^1"
^XTMP("XPDT",7815,"^DD",455.5,455.531,0,"DT")="3090511"
^XTMP("XPDT",7815,"^DD",455.5,455.531,0,"IX","B",455.531,.01)=""
^XTMP("XPDT",7815,"^DD",455.5,455.531,0,"NM","POC DATA APPROVAL PERSONNEL")=""
^XTMP("XPDT",7815,"^DD",455.5,455.531,0,"UP")="455.5"
^XTMP("XPDT",7815,"^DD",455.5,455.531,.01,0)="POC DATA APPROVAL PERSONNEL^P200'^VA(200,^0;1^Q"
^XTMP("XPDT",7815,"^DD",455.5,455.531,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",455.5,455.531,.01,1,1,0)="455.531^B"
^XTMP("XPDT",7815,"^DD",455.5,455.531,.01,1,1,1)="S ^PRST(455.5,DA(1),3,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",455.5,455.531,.01,1,1,2)="K ^PRST(455.5,DA(1),3,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",455.5,455.531,.01,3)="Select personnel that will be responsible for Nurse POC data approval."
^XTMP("XPDT",7815,"^DD",455.5,455.531,.01,21,0)="^^2^2^3090708^"
^XTMP("XPDT",7815,"^DD",455.5,455.531,.01,21,1,0)="This field points to the NEW PERSON file (#200) and identifies persons"
^XTMP("XPDT",7815,"^DD",455.5,455.531,.01,21,2,0)="that are responsible for approving Nurse POC data for this T&L unit."
^XTMP("XPDT",7815,"^DD",455.5,455.531,.01,"DT")="3090710"
^XTMP("XPDT",7815,"^DD",456,456,0)="FIELD^^5^6"
^XTMP("XPDT",7815,"^DD",456,456,0,"DDA")="N"
^XTMP("XPDT",7815,"^DD",456,456,0,"DT")="3090805"
^XTMP("XPDT",7815,"^DD",456,456,0,"IX","B",456,.01)=""
^XTMP("XPDT",7815,"^DD",456,456,0,"NM","PAID PARAMETERS")=""
^XTMP("XPDT",7815,"^DD",456,456,0,"VRPK")="PRS"
^XTMP("XPDT",7815,"^DD",456,456,.01,0)="INSTITUTION^R*P4'^DIC(4,^0;1^S DIC(""S"")=""I +$$SITE^VASITE()=+$G(^DIC(4,+Y,99))&'$P($G(^DIC(4,+Y,99)),U,4)"" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X"
^XTMP("XPDT",7815,"^DD",456,456,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",456,456,.01,1,1,0)="456^B"
^XTMP("XPDT",7815,"^DD",456,456,.01,1,1,1)="S ^PRST(456,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",456,456,.01,1,1,2)="K ^PRST(456,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",456,456,.01,3)="Enter an Institution (Division) name."
^XTMP("XPDT",7815,"^DD",456,456,.01,12)="Allow only active divisions that are associated with the parent division"
^XTMP("XPDT",7815,"^DD",456,456,.01,12.1)="S DIC(""S"")=""I +$$SITE^VASITE()=+$G(^DIC(4,+Y,99))&'$P($G(^DIC(4,+Y,99)),U,4)"""
^XTMP("XPDT",7815,"^DD",456,456,.01,21,0)="^.001^2^2^3090622^^^^"
^XTMP("XPDT",7815,"^DD",456,456,.01,21,1,0)="Enter a DIVISION (the same INSTITUTION name in File #4) these parameters"
^XTMP("XPDT",7815,"^DD",456,456,.01,21,2,0)="apply to."
^XTMP("XPDT",7815,"^DD",456,456,.01,23,0)="^.001^2^2^3090622^^^^"
^XTMP("XPDT",7815,"^DD",456,456,.01,23,1,0)="One entry per division for site parameters to handle multi divisional "
^XTMP("XPDT",7815,"^DD",456,456,.01,23,2,0)="sites."
^XTMP("XPDT",7815,"^DD",456,456,.01,"DT")="3090622"
^XTMP("XPDT",7815,"^DD",456,456,1,0)="SEND AWS BULLETIN^S^0:NO;1:YES;^0;2^Q"
^XTMP("XPDT",7815,"^DD",456,456,1,3)="Answer Yes to allow 9mo/3mo AWS bulletin to be sent to developers"
^XTMP("XPDT",7815,"^DD",456,456,1,"DT")="3070725"
^XTMP("XPDT",7815,"^DD",456,456,2,0)="AWS 9MO BULLETIN COUNT^NJ5,0I^^0;3^K:+X'=X!(X>99999)!(X<0)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7815,"^DD",456,456,2,3)="Type a number between 0 and 99999, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",456,456,2,21,0)="^^3^3^3070730^"
^XTMP("XPDT",7815,"^DD",456,456,2,21,1,0)="This field counts the number of bulletins that have been sent to the"
^XTMP("XPDT",7815,"^DD",456,456,2,21,2,0)="developers notifying them when an employee has been identified as being"
^XTMP("XPDT",7815,"^DD",456,456,2,21,3,0)="converted or beginning to work the 9 mo/3 mo AWS."
^XTMP("XPDT",7815,"^DD",456,456,2,23,0)="^^2^2^3070730^"
^XTMP("XPDT",7815,"^DD",456,456,2,23,1,0)="Counter updated by code when bulletin is sent.  Code may impose a limit on"
^XTMP("XPDT",7815,"^DD",456,456,2,23,2,0)="how many bulletins are sent.  Users should not edit this field."
^XTMP("XPDT",7815,"^DD",456,456,2,"DT")="3070730"
^XTMP("XPDT",7815,"^DD",456,456,3,0)="AWS BULLETIN LIMIT^NJ4,0^^0;4^K:+X'=X!(X>9999)!(X<0)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7815,"^DD",456,456,3,3)="Type a number between 0 and 9999, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",456,456,3,21,0)="^^3^3^3070725^"
^XTMP("XPDT",7815,"^DD",456,456,3,21,1,0)="Please enter the number of bulletins that should be sent to the "
^XTMP("XPDT",7815,"^DD",456,456,3,21,2,0)="developers, once an employee is identified as working the 9 month/3 month "
^XTMP("XPDT",7815,"^DD",456,456,3,21,3,0)="alternative work schedule (AWS)."
^XTMP("XPDT",7815,"^DD",456,456,3,23,0)="^^2^2^3070725^"
^XTMP("XPDT",7815,"^DD",456,456,3,23,1,0)="Limit number of bulletins by not sending the bulletin once this limit is "
^XTMP("XPDT",7815,"^DD",456,456,3,23,2,0)="reached.  The limit is stored in field 2--AWS BULLETIN COUNTER."
^XTMP("XPDT",7815,"^DD",456,456,3,"DT")="3070725"
^XTMP("XPDT",7815,"^DD",456,456,4,0)="AWS 36-40 BULLETIN COUNT^NJ4,0I^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"".""1.N) X"
^XTMP("XPDT",7815,"^DD",456,456,4,3)="Type a number between 0 and 9999, 0 Decimal Digits"
^XTMP("XPDT",7815,"^DD",456,456,4,21,0)="^^3^3^3070727^"
^XTMP("XPDT",7815,"^DD",456,456,4,21,1,0)="This field counts the number of bulletins that have been sent to the "
^XTMP("XPDT",7815,"^DD",456,456,4,21,2,0)="developers notifying them when an employee has been identified as being "
^XTMP("XPDT",7815,"^DD",456,456,4,21,3,0)="converted or beginning to work the 36/40 AWS."
^XTMP("XPDT",7815,"^DD",456,456,4,"DT")="3070730"
^XTMP("XPDT",7815,"^DD",456,456,5,0)="ACCESS TO NURSES FOR POC DATA^456.05^^1;0"
^XTMP("XPDT",7815,"^DD",456,456,5,21,0)="^^4^4^3091002^"
^XTMP("XPDT",7815,"^DD",456,456,5,21,1,0)="This multiple will identify the manner in which Data Entry Personnel and "
^XTMP("XPDT",7815,"^DD",456,456,5,21,2,0)="Data Approval Personnel will access the nurses in a division, either by "
^XTMP("XPDT",7815,"^DD",456,456,5,21,3,0)="Nurse Location or T&L Unit, and it will identify the Effective Pay Period "
^XTMP("XPDT",7815,"^DD",456,456,5,21,4,0)="for which the parameter was set."
^XTMP("XPDT",7815,"^DD",456,456.05,0)="ACCESS TO NURSES FOR POC DATA SUB-FIELD^^1^2"
^XTMP("XPDT",7815,"^DD",456,456.05,0,"DT")="3090805"
^XTMP("XPDT",7815,"^DD",456,456.05,0,"IX","B",456.05,.01)=""
^XTMP("XPDT",7815,"^DD",456,456.05,0,"NM","ACCESS TO NURSES FOR POC DATA")=""
^XTMP("XPDT",7815,"^DD",456,456.05,0,"UP")="456"
^XTMP("XPDT",7815,"^DD",456,456.05,.01,0)="EFFECTIVE PAY PERIOD^RF^^0;1^K:$L(X)>5!($L(X)<5)!'(X?2N1""-""2N) X"
^XTMP("XPDT",7815,"^DD",456,456.05,.01,1,0)="^.1"
^XTMP("XPDT",7815,"^DD",456,456.05,.01,1,1,0)="456.05^B"
^XTMP("XPDT",7815,"^DD",456,456.05,.01,1,1,1)="S ^PRST(456,DA(1),1,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7815,"^DD",456,456.05,.01,1,1,2)="K ^PRST(456,DA(1),1,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7815,"^DD",456,456.05,.01,3)="Answer must be in the form YY-PP."
^XTMP("XPDT",7815,"^DD",456,456.05,.01,21,0)="^^2^2^3090805^"
^XTMP("XPDT",7815,"^DD",456,456.05,.01,21,1,0)="This is the effective pay period for which ACCESS TO NURSES FOR POC "
^XTMP("XPDT",7815,"^DD",456,456.05,.01,21,2,0)="DATA is set to either T&L Unit or Nurse Location."
^XTMP("XPDT",7815,"^DD",456,456.05,.01,"DT")="3090805"
^XTMP("XPDT",7815,"^DD",456,456.05,1,0)="ACCESS TO NURSES FOR POC DATA^RS^T:T&L Unit;N:Nurse Location;^0;2^Q"
^XTMP("XPDT",7815,"^DD",456,456.05,1,.1)="NURSE ACCESS"
^XTMP("XPDT",7815,"^DD",456,456.05,1,1,0)="^.1^^0"
^XTMP("XPDT",7815,"^DD",456,456.05,1,3)="Select the method for which this Medical Center Division will access VA Nurse for data entry and approval"
^XTMP("XPDT",7815,"^DD",456,456.05,1,21,0)="^^3^3^3090805^"
^XTMP("XPDT",7815,"^DD",456,456.05,1,21,1,0)="This field describes how Data Entry Personnel and Data Approval Personnel "
^XTMP("XPDT",7815,"^DD",456,456.05,1,21,2,0)="will access VA Nurses for this division.  They can choose between T&L "
^XTMP("XPDT",7815,"^DD",456,456.05,1,21,3,0)="Unit or Nurse Location."
^XTMP("XPDT",7815,"^DD",456,456.05,1,"DT")="3090805"
^XTMP("XPDT",7815,"^DIC",451,451,0)="POC DAILY TIME RECORDS^451"
^XTMP("XPDT",7815,"^DIC",451,451,0,"GL")="^PRSN(451,"
^XTMP("XPDT",7815,"^DIC",451,451,"%",0)="^1.005^^"
^XTMP("XPDT",7815,"^DIC",451,451,"%D",0)="^^3^3^3090708^"
^XTMP("XPDT",7815,"^DIC",451,451,"%D",1,0)="The file stores all nurse Point of Care (POC) data for direct patient"
^XTMP("XPDT",7815,"^DIC",451,451,"%D",2,0)="care and non-direct nurses. The POC data includes the daily time card "
^XTMP("XPDT",7815,"^DIC",451,451,"%D",3,0)="records and its approval, release and correction information."
^XTMP("XPDT",7815,"^DIC",451,"B","POC DAILY TIME RECORDS",451)=""
^XTMP("XPDT",7815,"^DIC",451.1,451.1,0)="NURSE ROLE^451.1"
^XTMP("XPDT",7815,"^DIC",451.1,451.1,0,"GL")="^PRSN(451.1,"
^XTMP("XPDT",7815,"^DIC",451.1,451.1,"%D",0)="^^7^7^3090707^"
^XTMP("XPDT",7815,"^DIC",451.1,451.1,"%D",1,0)="Nurse Roles correspond to codes from VA Human Resources and Finance "
^XTMP("XPDT",7815,"^DIC",451.1,451.1,"%D",2,0)="databases, which were used in making the nursing roles determination.  "
^XTMP("XPDT",7815,"^DIC",451.1,451.1,"%D",3,0)="Cost center, budget object code, occupation series code, and assignment "
^XTMP("XPDT",7815,"^DIC",451.1,451.1,"%D",4,0)="codes are all utilized to determine a nursing role."
^XTMP("XPDT",7815,"^DIC",451.1,451.1,"%D",5,0)=" "
^XTMP("XPDT",7815,"^DIC",451.1,451.1,"%D",6,0)="This file is exported with data and the contents of the file should not be"
^XTMP("XPDT",7815,"^DIC",451.1,451.1,"%D",7,0)="locally modified."
^XTMP("XPDT",7815,"^DIC",451.1,"B","NURSE ROLE",451.1)=""
^XTMP("XPDT",7815,"^DIC",451.4,451.4,0)="POC TYPE OF TIME^451.4"
^XTMP("XPDT",7815,"^DIC",451.4,451.4,0,"GL")="^PRSN(451.4,"
^XTMP("XPDT",7815,"^DIC",451.4,451.4,"%",0)="^1.005^^"
^XTMP("XPDT",7815,"^DIC",451.4,451.4,"%D",0)="^1.001^1^1^3090520^^^"
^XTMP("XPDT",7815,"^DIC",451.4,451.4,"%D",1,0)="The file stores all POC Types of Time with their associated ETA Types of Time."
^XTMP("XPDT",7815,"^DIC",451.4,"B","POC TYPE OF TIME",451.4)=""
^XTMP("XPDT",7815,"^DIC",451.5,451.5,0)="TYPE OF WORK^451.5"
^XTMP("XPDT",7815,"^DIC",451.5,451.5,0,"GL")="^PRSN(451.5,"
^XTMP("XPDT",7815,"^DIC",451.5,451.5,"%D",0)="^^6^6^3090707^"
^XTMP("XPDT",7815,"^DIC",451.5,451.5,"%D",1,0)="This file contains codes for types of work a nurse may perform in a "
^XTMP("XPDT",7815,"^DIC",451.5,451.5,"%D",2,0)="medical setting.  Examples include Direct Care, Light Duty, On Site "
^XTMP("XPDT",7815,"^DIC",451.5,451.5,"%D",3,0)="Education."
^XTMP("XPDT",7815,"^DIC",451.5,451.5,"%D",4,0)=" "
^XTMP("XPDT",7815,"^DIC",451.5,451.5,"%D",5,0)="This file is exported with data and the contents of the file should not"
^XTMP("XPDT",7815,"^DIC",451.5,451.5,"%D",6,0)="be locally modified."
^XTMP("XPDT",7815,"^DIC",451.5,"B","TYPE OF WORK",451.5)=""
^XTMP("XPDT",7815,"^DIC",451.6,451.6,0)="REASON FOR OVERTIME^451.6"
^XTMP("XPDT",7815,"^DIC",451.6,451.6,0,"GL")="^PRSN(451.6,"
^XTMP("XPDT",7815,"^DIC",451.6,451.6,"%D",0)="^^6^6^3090708^"
^XTMP("XPDT",7815,"^DIC",451.6,451.6,"%D",1,0)="This file contains codes for reasons why a nurse may work overtime."
^XTMP("XPDT",7815,"^DIC",451.6,451.6,"%D",2,0)="Examples include Extreme Weather, Sitter Needed, and Unpredicted"
^XTMP("XPDT",7815,"^DIC",451.6,451.6,"%D",3,0)="Patient Care."
^XTMP("XPDT",7815,"^DIC",451.6,451.6,"%D",4,0)=" "
^XTMP("XPDT",7815,"^DIC",451.6,451.6,"%D",5,0)="This file is exported with data and the contents of the file should not be"
^XTMP("XPDT",7815,"^DIC",451.6,451.6,"%D",6,0)="locally modified."
^XTMP("XPDT",7815,"^DIC",451.6,"B","REASON FOR OVERTIME",451.6)=""
^XTMP("XPDT",7815,"^DIC",451.7,451.7,0)="POC DAILY ACTIVITY EXTRACTION^451.7"
^XTMP("XPDT",7815,"^DIC",451.7,451.7,0,"GL")="^PRSN(451.7,"
^XTMP("XPDT",7815,"^DIC",451.7,451.7,"%",0)="^1.005^^"
^XTMP("XPDT",7815,"^DIC",451.7,451.7,"%D",0)="^^3^3^3090708^^^"
^XTMP("XPDT",7815,"^DIC",451.7,451.7,"%D",1,0)="The file stores the released POC Daily Time Records from the"
^XTMP("XPDT",7815,"^DIC",451.7,451.7,"%D",2,0)="POC DAILY TIME RECORDS (#451) FILE for extracting by other applications."
^XTMP("XPDT",7815,"^DIC",451.7,451.7,"%D",3,0)="Entries are set up without user interactions."
^XTMP("XPDT",7815,"^DIC",451.7,"B","POC DAILY ACTIVITY EXTRACTION",451.7)=""
^XTMP("XPDT",7815,"^DIC",455.5,455.5,0)="T&L UNIT^455.5"
^XTMP("XPDT",7815,"^DIC",455.5,455.5,0,"GL")="^PRST(455.5,"
^XTMP("XPDT",7815,"^DIC",455.5,455.5,"%D",0)="^^2^2^2941202^^^"
^XTMP("XPDT",7815,"^DIC",455.5,455.5,"%D",1,0)="This file contains the list of T&L units established by a station"
^XTMP("XPDT",7815,"^DIC",455.5,455.5,"%D",2,0)="as well as the associated timekeepers."
^XTMP("XPDT",7815,"^DIC",455.5,"B","T&L UNIT",455.5)=""
^XTMP("XPDT",7815,"^DIC",456,456,0)="PAID PARAMETERS^456"
^XTMP("XPDT",7815,"^DIC",456,456,0,"GL")="^PRST(456,"
^XTMP("XPDT",7815,"^DIC",456,456,"%",0)="^1.005^^"
^XTMP("XPDT",7815,"^DIC",456,456,"%D",0)="^^5^5^3090708^"
^XTMP("XPDT",7815,"^DIC",456,456,"%D",1,0)="The PAID PARAMETERS file contains data that is specific to the "
^XTMP("XPDT",7815,"^DIC",456,456,"%D",2,0)="administration of Nurse Alternate Work Schedules, such as whether"
^XTMP("XPDT",7815,"^DIC",456,456,"%D",3,0)="to send notification bulletins and how many should be sent.  It also"
^XTMP("XPDT",7815,"^DIC",456,456,"%D",4,0)="defines the manner in which nurses shall be accessed for Nurse POC"
^XTMP("XPDT",7815,"^DIC",456,456,"%D",5,0)="records."
^XTMP("XPDT",7815,"^DIC",456,"B","PAID PARAMETERS",456)=""
^XTMP("XPDT",7816)="1"
^XTMP("XPDT",7816,"BLD",7628,0)="LA*5.2*68^AUTOMATED LAB INSTRUMENTS^0^3091214^y"
^XTMP("XPDT",7816,"BLD",7628,1,0)="^^727^727^3091209^"
^XTMP("XPDT",7816,"BLD",7628,1,1,0)="Blood Bank Clearance"
^XTMP("XPDT",7816,"BLD",7628,1,2,0)="===================="
^XTMP("XPDT",7816,"BLD",7628,1,3,0)="VISTA Laboratory Package patch LA*5.2*68 contains changes to software"
^XTMP("XPDT",7816,"BLD",7628,1,4,0)="controlled by VHA DIRECTIVE 99-053, titled VISTA BLOOD BANK SOFTWARE."
^XTMP("XPDT",7816,"BLD",7628,1,5,0)="Changes include: "
^XTMP("XPDT",7816,"BLD",7628,1,6,0)="    New style indexes have been created for the following sub-files"
^XTMP("XPDT",7816,"BLD",7628,1,7,0)="    of the LAB DATA file (#63):"
^XTMP("XPDT",7816,"BLD",7628,1,8,0)="        ELECTRON MICROSCOPY (#63.02)"
^XTMP("XPDT",7816,"BLD",7628,1,9,0)="        SURGICAL PATHOLOGY (#63.08)"
^XTMP("XPDT",7816,"BLD",7628,1,10,0)="        CYTOPATHOLOGY (#63.09)"
^XTMP("XPDT",7816,"BLD",7628,1,11,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,12,0)="All of the above changes have been reviewed by the VISTA Blood Bank"
^XTMP("XPDT",7816,"BLD",7628,1,13,0)="Developer and found to have no impact on the VISTA BLOOD BANK SOFTWARE"
^XTMP("XPDT",7816,"BLD",7628,1,14,0)="control functions."
^XTMP("XPDT",7816,"BLD",7628,1,15,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,16,0)="RISK ANALYSIS:   Changes made by patch LA*5.2*68 have no effect on Blood"
^XTMP("XPDT",7816,"BLD",7628,1,17,0)="Bank software functionality, therefore RISK is none."
^XTMP("XPDT",7816,"BLD",7628,1,18,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,19,0)="EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS:  Patch LA*5.2*68 does not"
^XTMP("XPDT",7816,"BLD",7628,1,20,0)="alter or modify any software design safeguards or safety critical elements"
^XTMP("XPDT",7816,"BLD",7628,1,21,0)="functions."
^XTMP("XPDT",7816,"BLD",7628,1,22,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,23,0)="POTENTIAL IMPACT ON SITES:  This patch contains changes to 0 routines and"
^XTMP("XPDT",7816,"BLD",7628,1,24,0)="1 file identified in Veterans Health Administration (VHA) Directive 99-053,"
^XTMP("XPDT",7816,"BLD",7628,1,25,0)="group B listing. The changes have no effect on Blood Bank functionality or"
^XTMP("XPDT",7816,"BLD",7628,1,26,0)="medical device control functions. There is no adverse potential to sites."
^XTMP("XPDT",7816,"BLD",7628,1,27,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,28,0)="========================================"
^XTMP("XPDT",7816,"BLD",7628,1,29,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,30,0)="This patch supports the VA Health Data Repository (HDR) effort,"
^XTMP("XPDT",7816,"BLD",7628,1,31,0)="allowing changes to LAB DATA file (#63) to be transmitted to the HDR "
^XTMP("XPDT",7816,"BLD",7628,1,32,0)="via a VistA Laboratory HL7 Result (ORU) message."
^XTMP("XPDT",7816,"BLD",7628,1,33,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,34,0)="Additionally, it provides the capability for the transmission of the HL7"
^XTMP("XPDT",7816,"BLD",7628,1,35,0)="ORU message containing patient laboratory results to subscribers of the HL7"
^XTMP("XPDT",7816,"BLD",7628,1,36,0)="event protocol LA7 LAB RESULTS AVAILABLE (EVN) as these results are made"
^XTMP("XPDT",7816,"BLD",7628,1,37,0)="available within the Laboratory package. The following subscripts are"
^XTMP("XPDT",7816,"BLD",7628,1,38,0)="supported by the event: ""CH"", ""MI"", ""SP"", ""CY"", ""EM"". See post-install"
^XTMP("XPDT",7816,"BLD",7628,1,39,0)="instructions for enabling this capability."
^XTMP("XPDT",7816,"BLD",7628,1,40,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,41,0)="  "
^XTMP("XPDT",7816,"BLD",7628,1,42,0)="****************************************************************************"
^XTMP("XPDT",7816,"BLD",7628,1,43,0)="  "
^XTMP("XPDT",7816,"BLD",7628,1,44,0)="Patch LA*5.2*68 allows the HL7 ORU message containing patient laboratory "
^XTMP("XPDT",7816,"BLD",7628,1,45,0)="results to be transmitted to the subscriber, LA7 LAB RESULTS TO HDR "
^XTMP("XPDT",7816,"BLD",7628,1,46,0)="(SUB). This subscriber protocol is used to transmit laboratory results to "
^XTMP("XPDT",7816,"BLD",7628,1,47,0)="the VA HDR."
^XTMP("XPDT",7816,"BLD",7628,1,48,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,49,0)="The HDR Team will contact the Chief of IRM at each site to set up the "
^XTMP("XPDT",7816,"BLD",7628,1,50,0)="coordination of lab extraction (LA*5.2*68) and the activation of the "
^XTMP("XPDT",7816,"BLD",7628,1,51,0)="subscriber (HDR)."
^XTMP("XPDT",7816,"BLD",7628,1,52,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,53,0)="The coordination of extracting existing laboratory data (HDR historical) "
^XTMP("XPDT",7816,"BLD",7628,1,54,0)="and the configuration of the LA7 LAB RESULTS TO HDR (SUB) subscriber will "
^XTMP("XPDT",7816,"BLD",7628,1,55,0)="be started at the same time. This will ensure that there is an overlap of "
^XTMP("XPDT",7816,"BLD",7628,1,56,0)="laboratory results between the real time extraction of lab data and the "
^XTMP("XPDT",7816,"BLD",7628,1,57,0)="historical extraction of lab data."
^XTMP("XPDT",7816,"BLD",7628,1,58,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,59,0)="If a VA site activates the LA7 LAB RESULTS TO HDR (SUB) subscriber before "
^XTMP("XPDT",7816,"BLD",7628,1,60,0)="the historical extraction of existing laboratory data, the real time "
^XTMP("XPDT",7816,"BLD",7628,1,61,0)="extraction of lab data at the VA site may not be synchronized with the "
^XTMP("XPDT",7816,"BLD",7628,1,62,0)="HDR data."
^XTMP("XPDT",7816,"BLD",7628,1,63,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,64,0)="If you have questions regarding installation or implementation,"
^XTMP("XPDT",7816,"BLD",7628,1,65,0)="contact the HDR Project Office."
^XTMP("XPDT",7816,"BLD",7628,1,66,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,67,0)="Once the HDR Project Office confirms that installation and implementation "
^XTMP("XPDT",7816,"BLD",7628,1,68,0)="was accomplished successfully, you must log a Remedy ticket for any"
^XTMP("XPDT",7816,"BLD",7628,1,69,0)="subsequent problems encountered."
^XTMP("XPDT",7816,"BLD",7628,1,70,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,71,0)="*****************************************************************************"
^XTMP("XPDT",7816,"BLD",7628,1,72,0)="  "
^XTMP("XPDT",7816,"BLD",7628,1,73,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,74,0)="1. The following protocols are added to the PROTOCOL file (#101)"
^XTMP("XPDT",7816,"BLD",7628,1,75,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,76,0)="NAME: LA7 LAB RESULTS ACTION"
^XTMP("XPDT",7816,"BLD",7628,1,77,0)="  ITEM TEXT: Lab process results for HL7 messaging"
^XTMP("XPDT",7816,"BLD",7628,1,78,0)="  TYPE: action                          "
^XTMP("XPDT",7816,"BLD",7628,1,79,0)="  PACKAGE: AUTOMATED LAB INSTRUMENTS"
^XTMP("XPDT",7816,"BLD",7628,1,80,0)=" DESCRIPTION:   Action protocol to setup sending lab results to HL7 message"
^XTMP("XPDT",7816,"BLD",7628,1,81,0)=" subscribers via protocol LA7 LAB RESULTS AVAILABLE (EVN) - Lab Results"
^XTMP("XPDT",7816,"BLD",7628,1,82,0)=" Available Event.  This protocol should be attached to protocol LAB RESULTS"
^XTMP("XPDT",7816,"BLD",7628,1,83,0)=" => EXTERNAL PACKAGE [LR7O ALL EVSEND RESULTS] which is an extended action"
^XTMP("XPDT",7816,"BLD",7628,1,84,0)=" protocol triggered by the lab result verification process."
^XTMP("XPDT",7816,"BLD",7628,1,85,0)="  ENTRY ACTION: D QUEUE^LA7HDR          TIMESTAMP: 59056,40855"
^XTMP("XPDT",7816,"BLD",7628,1,86,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,87,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,88,0)="NAME: LA7 LAB RESULTS AVAILABLE (EVN)  ITEM TEXT: Lab Results Available Event"
^XTMP("XPDT",7816,"BLD",7628,1,89,0)="  TYPE: event driver                   "
^XTMP("XPDT",7816,"BLD",7628,1,90,0)=" DESCRIPTION: A VistA Laboratory package HL7 ORU result message is created"
^XTMP("XPDT",7816,"BLD",7628,1,91,0)=" and sent by the HL package for transmission to any subscribers of event"
^XTMP("XPDT",7816,"BLD",7628,1,92,0)=" protocol LA7 LAB  RESULTS AVAILABLE (EVN)."
^XTMP("XPDT",7816,"BLD",7628,1,93,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,94,0)=" It provides the capability for the generation of a Laboratory HL7 ORU"
^XTMP("XPDT",7816,"BLD",7628,1,95,0)=" message containing patient laboratory results to subscribers of the HL7"
^XTMP("XPDT",7816,"BLD",7628,1,96,0)=" event protocol LA7 LAB RESULTS AVAILABLE (EVN) as these results are made"
^XTMP("XPDT",7816,"BLD",7628,1,97,0)=" available within the Laboratory package."
^XTMP("XPDT",7816,"BLD",7628,1,98,0)="  "
^XTMP("XPDT",7816,"BLD",7628,1,99,0)=" The following subscripts are supported by the event:"
^XTMP("XPDT",7816,"BLD",7628,1,100,0)="   ""CH"", ""MI"", ""SP"", ""CY"", ""EM""."
^XTMP("XPDT",7816,"BLD",7628,1,101,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,102,0)="  TIMESTAMP: 59725,36770                SENDING APPLICATION: LA7LAB"
^XTMP("XPDT",7816,"BLD",7628,1,103,0)="  TRANSACTION MESSAGE TYPE: ORU         EVENT TYPE: R01"
^XTMP("XPDT",7816,"BLD",7628,1,104,0)="  MESSAGE STRUCTURE: ORU_R01            ACCEPT ACK CODE: AL"
^XTMP("XPDT",7816,"BLD",7628,1,105,0)="  APPLICATION ACK TYPE: NE              VERSION ID: 2.4"
^XTMP("XPDT",7816,"BLD",7628,1,106,0)="  RESPONSE PROCESSING ROUTINE: D ACK^LA7VHL"
^XTMP("XPDT",7816,"BLD",7628,1,107,0)="SUBSCRIBERS: LA7 LAB RESULTS TO HDR (SUB)"
^XTMP("XPDT",7816,"BLD",7628,1,108,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,109,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,110,0)="NAME: LA7 LAB RESULTS TO HDR (SUB)      ITEM TEXT: Send Lab Results to HDR"
^XTMP("XPDT",7816,"BLD",7628,1,111,0)="  TYPE: subscriber                      "
^XTMP("XPDT",7816,"BLD",7628,1,112,0)=" DESCRIPTION:   This protocol should be attached to the HL7 event protocol"
^XTMP("XPDT",7816,"BLD",7628,1,113,0)=" LA7 LAB RESULTS AVAILABLE (EVN). See this protocol for further information."
^XTMP("XPDT",7816,"BLD",7628,1,114,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,115,0)=" This subscriber protocol is used by the Laboratory package to indicate to"
^XTMP("XPDT",7816,"BLD",7628,1,116,0)=" the HL package to send laboratory results to the VA Health Data Repository"
^XTMP("XPDT",7816,"BLD",7628,1,117,0)=" (HDR)."
^XTMP("XPDT",7816,"BLD",7628,1,118,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,119,0)=" It utilizes the ""Router"" Subscriber Protocol supported by the VistA HL"
^XTMP("XPDT",7816,"BLD",7628,1,120,0)=" package. The routing logic uses the value of the parameter passed into the"
^XTMP("XPDT",7816,"BLD",7628,1,121,0)=" router to determine which Laboratory package subscript should be sent to"
^XTMP("XPDT",7816,"BLD",7628,1,122,0)=" the HDR."
^XTMP("XPDT",7816,"BLD",7628,1,123,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,124,0)=" Examples:"
^XTMP("XPDT",7816,"BLD",7628,1,125,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,126,0)=" ROUTING LOGIC: D RTR^LA7HDR(""CH;"") will only send to HDR-IMS results"
^XTMP("XPDT",7816,"BLD",7628,1,127,0)=" associated with Laboratory ""CH"" subscript."
^XTMP("XPDT",7816,"BLD",7628,1,128,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,129,0)=" ROUTING LOGIC: D RTR^LA7HDR(""MI;"") will only send to HDR-IMS results"
^XTMP("XPDT",7816,"BLD",7628,1,130,0)=" associated with Laboratory ""MI"" subscript."
^XTMP("XPDT",7816,"BLD",7628,1,131,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,132,0)=" ROUTING LOGIC: D RTR^LA7HDR(""CH;MI;SP;"") will only send to HDR-IMS results"
^XTMP("XPDT",7816,"BLD",7628,1,133,0)=" associated with Laboratory ""CH"", ""MI"", and ""SP"" subscripts."
^XTMP("XPDT",7816,"BLD",7628,1,134,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,135,0)="  TIMESTAMP: 59056,40125                RECEIVING APPLICATION: LA7HDR"
^XTMP("XPDT",7816,"BLD",7628,1,136,0)="  EVENT TYPE: R01                       LOGICAL LINK: VDEFVIE4"
^XTMP("XPDT",7816,"BLD",7628,1,137,0)="  RESPONSE MESSAGE TYPE: ACK            SENDING FACILITY REQUIRED?: YES"
^XTMP("XPDT",7816,"BLD",7628,1,138,0)="  RECEIVING FACILITY REQUIRED?: YES     ROUTING LOGIC: D RTR^LA7HDR(""CH;"")"
^XTMP("XPDT",7816,"BLD",7628,1,139,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,140,0)=" NOTE: This subscriber protocol is distributed with the ROUTING LOGIC"
^XTMP("XPDT",7816,"BLD",7628,1,141,0)="       disabled. See post-installation instructions for guidance to"
^XTMP("XPDT",7816,"BLD",7628,1,142,0)="       enable the protocol."
^XTMP("XPDT",7816,"BLD",7628,1,143,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,144,0)="2. The following option is added to the OPTION file (#19)"
^XTMP("XPDT",7816,"BLD",7628,1,145,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,146,0)="NAME: LA7 HDR RECOVER    MENU TEXT: Recover/Transmit Lab HDR Result"
^XTMP("XPDT",7816,"BLD",7628,1,147,0)="Messages"
^XTMP("XPDT",7816,"BLD",7628,1,148,0)=" TYPE: run routine                                      "
^XTMP("XPDT",7816,"BLD",7628,1,149,0)=" PACKAGE: AUTOMATED LAB INSTRUMENTS"
^XTMP("XPDT",7816,"BLD",7628,1,150,0)=" DESCRIPTION:   Option to recover from failed Lab HDR ORU Result message "
^XTMP("XPDT",7816,"BLD",7628,1,151,0)="generation and/or transmission failure. This option allows the user to"
^XTMP("XPDT",7816,"BLD",7628,1,152,0)="select those VistA Laboratory accessions that need to be transmitted to"
^XTMP("XPDT",7816,"BLD",7628,1,153,0)="the VA HDR and other subscribers of the VistA Laboratory Result Available"
^XTMP("XPDT",7816,"BLD",7628,1,154,0)="HL7 message capability via the protocol Lab Results Available Event [LA7"
^XTMP("XPDT",7816,"BLD",7628,1,155,0)="LAB RESULTS AVAILABLE (EVN)]."
^XTMP("XPDT",7816,"BLD",7628,1,156,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,157,0)="If the original message generation/transmission failed due to system or "
^XTMP("XPDT",7816,"BLD",7628,1,158,0)="communication problems then using this option will allow the generation of"
^XTMP("XPDT",7816,"BLD",7628,1,159,0)="new HL7 messages with the results associated with the selected "
^XTMP("XPDT",7816,"BLD",7628,1,160,0)="accessions.  Accessions can be selected using the human-readable accession"
^XTMP("XPDT",7816,"BLD",7628,1,161,0)="designation (area abbreviation modified date accession number - ""CH 1225"
^XTMP("XPDT",7816,"BLD",7628,1,162,0)="100"") or the accession's associated 10 character unique identifier (UID)."
^XTMP("XPDT",7816,"BLD",7628,1,163,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,164,0)=" ROUTINE: RECOVER^LA7HDR "
^XTMP("XPDT",7816,"BLD",7628,1,165,0)=" UPPERCASE MENU TEXT: RECOVER/TRANSMIT LAB HDR RESUL"
^XTMP("XPDT",7816,"BLD",7628,1,166,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,167,0)="This option is assigned to the Lab liaison menu option [LRLIAISON] and"
^XTMP("XPDT",7816,"BLD",7628,1,168,0)="can be assigned to other uses as needed that support/monitor message "
^XTMP("XPDT",7816,"BLD",7628,1,169,0)="transmission to the VA HDR and other subscribers."
^XTMP("XPDT",7816,"BLD",7628,1,170,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,171,0)="3. The LA7HDR routine, if the configuration LA7HDR in LA7 MESSAGE"
^XTMP("XPDT",7816,"BLD",7628,1,172,0)="PARAMETER file (#62.48) has an active status, queues the record for"
^XTMP("XPDT",7816,"BLD",7628,1,173,0)="transmission to the HDR via a HL7 ORU result message which is transmitted"
^XTMP("XPDT",7816,"BLD",7628,1,174,0)="by the HL package to any subscribers of event protocol LA7 LAB RESULTS"
^XTMP("XPDT",7816,"BLD",7628,1,175,0)="AVAILABLE (EVN) in addition to the HDR subscriber LA7 LAB RESULTS TO HDR"
^XTMP("XPDT",7816,"BLD",7628,1,176,0)="(SUB)."
^XTMP("XPDT",7816,"BLD",7628,1,177,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,178,0)="   The LA7 LAB RESULTS TO HDR (SUB) subscriber protocol uses the logical"
^XTMP("XPDT",7816,"BLD",7628,1,179,0)="link VDEFVIE4. This is a router subscriber protocol which determines"
^XTMP("XPDT",7816,"BLD",7628,1,180,0)="which Lab HL7 messages are sent to the HDR. See protocol description"
^XTMP("XPDT",7816,"BLD",7628,1,181,0)="for further information."
^XTMP("XPDT",7816,"BLD",7628,1,182,0)="  "
^XTMP("XPDT",7816,"BLD",7628,1,183,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,184,0)="4. Anatomic Pathology is not ""CPRS-aware"" and is unable to notify CPRS of"
^XTMP("XPDT",7816,"BLD",7628,1,185,0)="release of anatomic pathology results. HDR will be notified of "
^XTMP("XPDT",7816,"BLD",7628,1,186,0)="availability of anatomic pathology results via three new-style"
^XTMP("XPDT",7816,"BLD",7628,1,187,0)="cross-references in LAB DATA file (#63). These indexes will also trigger"
^XTMP("XPDT",7816,"BLD",7628,1,188,0)="generation of the Lab HL7 ORU message if this capability has been enabled."
^XTMP("XPDT",7816,"BLD",7628,1,189,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,190,0)="   The three new cross-references are:"
^XTMP("XPDT",7816,"BLD",7628,1,191,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,192,0)="Subfile #63.02"
^XTMP("XPDT",7816,"BLD",7628,1,193,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,194,0)="  New-Style Indexes:"
^XTMP("XPDT",7816,"BLD",7628,1,195,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,196,0)="  AC (#98)    FIELD    MUMPS        ACTION"
^XTMP("XPDT",7816,"BLD",7628,1,197,0)="      Short Descr:  Notify HDR and others that this report is available."
^XTMP("XPDT",7816,"BLD",7628,1,198,0)="      Description:  This MUMPS cross-reference triggers the sending of this"
^XTMP("XPDT",7816,"BLD",7628,1,199,0)="                    report to the Health Data Repository (HDR) and other"
^XTMP("XPDT",7816,"BLD",7628,1,200,0)="                    subscribers when electron microscopy results are "
^XTMP("XPDT",7816,"BLD",7628,1,201,0)="                    released."
^XTMP("XPDT",7816,"BLD",7628,1,202,0)="        Set Logic:  D APQ^LA7HDR(DA(1),""EM"",DA)"
^XTMP("XPDT",7816,"BLD",7628,1,203,0)="       Kill Logic:  Q"
^XTMP("XPDT",7816,"BLD",7628,1,204,0)="             X(1):  REPORT RELEASE DATE (63.02,.11) (Subscr 1) (forwards)"
^XTMP("XPDT",7816,"BLD",7628,1,205,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,206,0)="Subfile #63.08"
^XTMP("XPDT",7816,"BLD",7628,1,207,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,208,0)="  New-Style Indexes:"
^XTMP("XPDT",7816,"BLD",7628,1,209,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,210,0)="  AD (#95)    FIELD    MUMPS        ACTION"
^XTMP("XPDT",7816,"BLD",7628,1,211,0)="      Short Descr:  Notify HDR and others that this report is available."
^XTMP("XPDT",7816,"BLD",7628,1,212,0)="      Description:  This MUMPS cross-reference triggers the sending of this"
^XTMP("XPDT",7816,"BLD",7628,1,213,0)="                    report to the Health Data Repository (HDR) and other"
^XTMP("XPDT",7816,"BLD",7628,1,214,0)="                    subscribers when surgical pathology results are "
^XTMP("XPDT",7816,"BLD",7628,1,215,0)="                    released."
^XTMP("XPDT",7816,"BLD",7628,1,216,0)="        Set Logic:  D APQ^LA7HDR(DA(1),""SP"",DA)"
^XTMP("XPDT",7816,"BLD",7628,1,217,0)="       Kill Logic:  Q"
^XTMP("XPDT",7816,"BLD",7628,1,218,0)="             X(1):  REPORT RELEASE DATE/TIME (63.08,.11) (Subscr 1)"
^XTMP("XPDT",7816,"BLD",7628,1,219,0)="                    (forwards)"
^XTMP("XPDT",7816,"BLD",7628,1,220,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,221,0)="Subfile #63.09"
^XTMP("XPDT",7816,"BLD",7628,1,222,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,223,0)="  New-Style Indexes:"
^XTMP("XPDT",7816,"BLD",7628,1,224,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,225,0)="  AD (#96)    FIELD    MUMPS        ACTION"
^XTMP("XPDT",7816,"BLD",7628,1,226,0)="      Short Descr:  Notify HDR and others that this report is available."
^XTMP("XPDT",7816,"BLD",7628,1,227,0)="      Description:  This MUMPS cross-reference triggers the sending of this"
^XTMP("XPDT",7816,"BLD",7628,1,228,0)="                    report to the Health Data Repository (HDR) and other"
^XTMP("XPDT",7816,"BLD",7628,1,229,0)="                    subscribers when cytology results are released."
^XTMP("XPDT",7816,"BLD",7628,1,230,0)="        Set Logic:  D APQ^LA7HDR(DA(1),""CY"",DA)"
^XTMP("XPDT",7816,"BLD",7628,1,231,0)="       Kill Logic:  Q"
^XTMP("XPDT",7816,"BLD",7628,1,232,0)="             X(1):  REPORT RELEASE DATE/TIME  (63.09,.11)  (Subscr 1)"
^XTMP("XPDT",7816,"BLD",7628,1,233,0)="                    (forwards) "
^XTMP("XPDT",7816,"BLD",7628,1,234,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,235,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,236,0)="5. Microbiology results. The current Laboratory package does not support"
^XTMP("XPDT",7816,"BLD",7628,1,237,0)="LOINC encoding of microbiology results. A default encoding is enabled"
^XTMP("XPDT",7816,"BLD",7628,1,238,0)="to LOINC encode standard microbiology tests and antibiotics."
^XTMP("XPDT",7816,"BLD",7628,1,239,0)="LOINC codes valid as of version 2.14."
^XTMP("XPDT",7816,"BLD",7628,1,240,0)="  "
^XTMP("XPDT",7816,"BLD",7628,1,241,0)="Default mapping of NLT/LOINC codes to standard fields within the "
^XTMP("XPDT",7816,"BLD",7628,1,242,0)="MICROBIOLOGY (#5) multiple of LAB DATA file (#63):"
^XTMP("XPDT",7816,"BLD",7628,1,243,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,244,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,245,0)=" Test                               Order NLT     Result NLT     LOINC Code"
^XTMP("XPDT",7816,"BLD",7628,1,246,0)=" Bacteriology report (#11)          87993.0000"
^XTMP("XPDT",7816,"BLD",7628,1,247,0)=" Gram stain (#11.6)                 87993.0000    87754.0000     664-3"
^XTMP("XPDT",7816,"BLD",7628,1,248,0)=" Bacteriology organism (#12)        87993.0000    87570.0000     11475-1"
^XTMP("XPDT",7816,"BLD",7628,1,249,0)=" Bacteria colony count (#12,1)                    87719.0000     564-5"
^XTMP("XPDT",7816,"BLD",7628,1,250,0)=" Parasite report (#14)              87505.0000"
^XTMP("XPDT",7816,"BLD",7628,1,251,0)=" Parasite organism (#16)            87505.0000    87576.0000     17784-0"
^XTMP("XPDT",7816,"BLD",7628,1,252,0)=" Mycology report (#18)              87994.0000"
^XTMP("XPDT",7816,"BLD",7628,1,253,0)=" Fungal organism (#20)              87994.0000    87578.0000     580-1"
^XTMP("XPDT",7816,"BLD",7628,1,254,0)=" Fungal colony count (#20,1)        87994.0000    87723.0000     19101-5"
^XTMP("XPDT",7816,"BLD",7628,1,255,0)=" Mycobacterium report (#22)         87995.0000"
^XTMP("XPDT",7816,"BLD",7628,1,256,0)=" Acid Fast stain (#24)              87995.0000    87756.0000     11545-1"
^XTMP("XPDT",7816,"BLD",7628,1,257,0)=" Acid Fast stain quantity (#25)     87995.0000    87583.0000     11545-1"
^XTMP("XPDT",7816,"BLD",7628,1,258,0)=" Mycobacterium organism (#26)       87995.0000    87589.0000     543-9"
^XTMP("XPDT",7816,"BLD",7628,1,259,0)=" Mycobacterium colony count (#26,1) 87995.0000    87719.0000     564-5"
^XTMP("XPDT",7816,"BLD",7628,1,260,0)=" Virology report (#33)              87996.0000"
^XTMP("XPDT",7816,"BLD",7628,1,261,0)=" Viral agent (#36)                  87996.0000    87590.0000     6584-7"
^XTMP("XPDT",7816,"BLD",7628,1,262,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,263,0)=" Bacteriology or mycobacterium (TB) organism's susceptibilities -"
^XTMP("XPDT",7816,"BLD",7628,1,264,0)="  is based on local site's mapping of NATIONAL VA LAB CODE field (#64)"
^XTMP("XPDT",7816,"BLD",7628,1,265,0)="  in ANTIMICROBIAL SUSCEPTIBILITY file (#62.06) and the related default"
^XTMP("XPDT",7816,"BLD",7628,1,266,0)="  LOINC code associated with this VA NLT code. Use option Map/Unmap "
^XTMP("XPDT",7816,"BLD",7628,1,267,0)="  Antimicrobial Default LOINC Code [LR LOINC MAP ANTIMICROBIAL] to"
^XTMP("XPDT",7816,"BLD",7628,1,268,0)="  configure the default LOINC code for each antibiotic."
^XTMP("XPDT",7816,"BLD",7628,1,269,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,270,0)="6. Surgical Pathology results. The current Laboratory package does not"
^XTMP("XPDT",7816,"BLD",7628,1,271,0)="support LOINC encoding of surgical pathology results."
^XTMP("XPDT",7816,"BLD",7628,1,272,0)="LOINC codes valid as of version 2.14."
^XTMP("XPDT",7816,"BLD",7628,1,273,0)="  "
^XTMP("XPDT",7816,"BLD",7628,1,274,0)="Default mapping of NLT/LOINC codes to standard fields within the "
^XTMP("XPDT",7816,"BLD",7628,1,275,0)="SURGICAL PATHOLOGY (#8) multiple of LAB DATA file (#63):"
^XTMP("XPDT",7816,"BLD",7628,1,276,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,277,0)=" Test                            Order NLT     Result NLT     LOINC Code"
^XTMP("XPDT",7816,"BLD",7628,1,278,0)=" Specimen (#.012)                88515.0000    88539.0000     22633-2"
^XTMP("XPDT",7816,"BLD",7628,1,279,0)=" Brief clinical history (#.013)  88515.0000    88542.0000     22636-5"
^XTMP("XPDT",7816,"BLD",7628,1,280,0)=" Preoperative diagnosis (#.014)  88515.0000    88544.0000     10219-4"
^XTMP("XPDT",7816,"BLD",7628,1,281,0)=" Operative findings (#.015)      88515.0000    88546.0000     10215-2"
^XTMP("XPDT",7816,"BLD",7628,1,282,0)=" Postoperative diagnosis (#.016) 88515.0000    88547.0000     10218-6"
^XTMP("XPDT",7816,"BLD",7628,1,283,0)=" Gross description (#1)          88515.0000    88549.0000     22634-0"
^XTMP("XPDT",7816,"BLD",7628,1,284,0)=" Microscopic description (#1.1)  88515.0000    88563.0000     22635-7"
^XTMP("XPDT",7816,"BLD",7628,1,285,0)=" Frozen section (#1.3)           88515.0000    88569.0000     22635-7"
^XTMP("XPDT",7816,"BLD",7628,1,286,0)=" Surgical path diagnosis (#1.4)  88515.0000    88571.0000     22637-3"
^XTMP("XPDT",7816,"BLD",7628,1,287,0)=" Supplementary report (#1.2)     88515.0000    88589.0000     22639-9"
^XTMP("XPDT",7816,"BLD",7628,1,288,0)=" Specimen weight (#2)            88515.0000    81233.0000     3154-2"
^XTMP("XPDT",7816,"BLD",7628,1,289,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,290,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,291,0)="7. Cytology results. The current Laboratory package does not support"
^XTMP("XPDT",7816,"BLD",7628,1,292,0)="LOINC encoding of cytology results."
^XTMP("XPDT",7816,"BLD",7628,1,293,0)="LOINC codes valid as of version 2.14."
^XTMP("XPDT",7816,"BLD",7628,1,294,0)="  "
^XTMP("XPDT",7816,"BLD",7628,1,295,0)="Default mapping of NLT/LOINC codes to standard fields within the "
^XTMP("XPDT",7816,"BLD",7628,1,296,0)="CYTOPATHOLOGY (#9) multiple of LAB DATA file (#63):"
^XTMP("XPDT",7816,"BLD",7628,1,297,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,298,0)=" Test                            Order NLT     Result NLT     LOINC Code"
^XTMP("XPDT",7816,"BLD",7628,1,299,0)=" Specimens (#.012)               88593.0000    88539.0000     22633-2"
^XTMP("XPDT",7816,"BLD",7628,1,300,0)=" Brief clinical history (#.013)  88593.0000    88542.0000     22636-5"
^XTMP("XPDT",7816,"BLD",7628,1,301,0)=" Preoperative diagnosis (#.014)  88593.0000    88544.0000     10219-4"
^XTMP("XPDT",7816,"BLD",7628,1,302,0)=" Operative findings (#.015)      88593.0000    88542.0000     10215-2"
^XTMP("XPDT",7816,"BLD",7628,1,303,0)=" Postoperative diagnosis (#.016) 88593.0000    88547.0000     10218-6"
^XTMP("XPDT",7816,"BLD",7628,1,304,0)=" Gross description (#1)          88593.0000    88549.0000     22634-0"
^XTMP("XPDT",7816,"BLD",7628,1,305,0)=" Microscopic examination (#1.1)  88593.0000    88563.0000     22635-7"
^XTMP("XPDT",7816,"BLD",7628,1,306,0)=" Supplementary report (#1.2)     88593.0000    88589.0000     22639-9"
^XTMP("XPDT",7816,"BLD",7628,1,307,0)=" Cytopathlogy diagnosis (#1.4)   88593.0000    88571.0000     22637-3"
^XTMP("XPDT",7816,"BLD",7628,1,308,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,309,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,310,0)="8. Electron microscopy results. The current Laboratory package does not"
^XTMP("XPDT",7816,"BLD",7628,1,311,0)="support LOINC encoding of electron microscopy."
^XTMP("XPDT",7816,"BLD",7628,1,312,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,313,0)="Default mapping of NLT/LOINC codes to standard fields within the "
^XTMP("XPDT",7816,"BLD",7628,1,314,0)="EM (#2) multiple of LAB DATA file (#63):"
^XTMP("XPDT",7816,"BLD",7628,1,315,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,316,0)=" Test                            Order NLT     Result NLT     LOINC Code"
^XTMP("XPDT",7816,"BLD",7628,1,317,0)=" Specimens (#.012)               88597.0000    88057.0000     22633-2"
^XTMP("XPDT",7816,"BLD",7628,1,318,0)=" Brief clinical history (#.013)  88597.0000    88542.0000     22636-5"
^XTMP("XPDT",7816,"BLD",7628,1,319,0)=" Preoperative diagnosis (#.014)  88597.0000    88544.0000     10219-4"
^XTMP("XPDT",7816,"BLD",7628,1,320,0)=" Operative findings (#.015)      88597.0000    88542.0000     10215-2"
^XTMP("XPDT",7816,"BLD",7628,1,321,0)=" Postoperative diagnosis (#.016) 88597.0000    88547.0000     10218-6"
^XTMP("XPDT",7816,"BLD",7628,1,322,0)=" Gross description (#1)          88597.0000    88549.0000     22634-0"
^XTMP("XPDT",7816,"BLD",7628,1,323,0)=" Microscopic examination (#1.1)  88597.0000    88563.0000     22635-7"
^XTMP("XPDT",7816,"BLD",7628,1,324,0)=" Supplementary report (#1.2)     88597.0000    88589.0000     22639-9"
^XTMP("XPDT",7816,"BLD",7628,1,325,0)=" EM diagnosis (#1.4)             88597.0000    88571.0000     22637-3"
^XTMP("XPDT",7816,"BLD",7628,1,326,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,327,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,328,0)="9. It corrects a defect identified during patch development with"
^XTMP("XPDT",7816,"BLD",7628,1,329,0)="processing input parameters for the GCPR^LA7QRY API. If the input"
^XTMP("XPDT",7816,"BLD",7628,1,330,0)="parameter LA7SC specified specific subscripts to search then the API"
^XTMP("XPDT",7816,"BLD",7628,1,331,0)="would search those subscripts for any search code even when specific "
^XTMP("XPDT",7816,"BLD",7628,1,332,0)="search codes were passed to the API in the LA7SC array."
^XTMP("XPDT",7816,"BLD",7628,1,333,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,334,0)="10. Converts several FileMan DBS calls on INSTITUTION file (#4) to using"
^XTMP("XPDT",7816,"BLD",7628,1,335,0)="supported API's $$NS^XUAF4 and $$STA^XUAF4."
^XTMP("XPDT",7816,"BLD",7628,1,336,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,337,0)="11. It corrects a defect identified during patch development with"
^XTMP("XPDT",7816,"BLD",7628,1,338,0)="processing input parameters for the GCPR^LA7QRY API. If the input"
^XTMP("XPDT",7816,"BLD",7628,1,339,0)="parameters LA7SDT and LA7EDT specified specific results available date"
^XTMP("XPDT",7816,"BLD",7628,1,340,0)="range the API could return anatomic pathology results which have not"
^XTMP("XPDT",7816,"BLD",7628,1,341,0)="been released. This API has been corrected to check the REPORT RELEASE"
^XTMP("XPDT",7816,"BLD",7628,1,342,0)="DATE field (#.11) for subscripts ""CY"", EM"", ""SP""."
^XTMP("XPDT",7816,"BLD",7628,1,343,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,344,0)="12. Remedy ticket HD0000000096207 reported a problem with the error code"
^XTMP("XPDT",7816,"BLD",7628,1,345,0)="returned by the Lab API LA7QRY. A FileMan DBS error code was erroroneously"
^XTMP("XPDT",7816,"BLD",7628,1,346,0)="being returned to the calling application. Routines LA7QRY, LA7QRY1, and "
^XTMP("XPDT",7816,"BLD",7628,1,347,0)="LA7QRY2 has been modified to use a different name spaced variable LA7QERR"
^XTMP("XPDT",7816,"BLD",7628,1,348,0)="to return to the calling application any error conditions. Additionally,"
^XTMP("XPDT",7816,"BLD",7628,1,349,0)="routine LA7VOBX1 has been modified to use another name spaced variable"
^XTMP("XPDT",7816,"BLD",7628,1,350,0)="LA7DDERR to handle FileMan DBS error conditions related to FileMan data"
^XTMP("XPDT",7816,"BLD",7628,1,351,0)="dictionary calls."
^XTMP("XPDT",7816,"BLD",7628,1,352,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,353,0)="13. It corrects a defect identified by MyHeatheVet regarding encoding of "
^XTMP("XPDT",7816,"BLD",7628,1,354,0)="the following fields in the OBR segment relating to anatomic pathology "
^XTMP("XPDT",7816,"BLD",7628,1,355,0)="reports:"
^XTMP("XPDT",7816,"BLD",7628,1,356,0)=" OBR-32 - Principal result interpreter"
^XTMP("XPDT",7816,"BLD",7628,1,357,0)=" OBR-33 - Assistant result interpreter"
^XTMP("XPDT",7816,"BLD",7628,1,358,0)=" OBR-34 - Technician"
^XTMP("XPDT",7816,"BLD",7628,1,359,0)=" OBR-35 - Transcriptionist"
^XTMP("XPDT",7816,"BLD",7628,1,360,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,361,0)="The name component of these fields was being encoded with the wrong HL7"
^XTMP("XPDT",7816,"BLD",7628,1,362,0)="delimiter (component separator). The name component will be encoded with "
^XTMP("XPDT",7816,"BLD",7628,1,363,0)="the subcomponent separator per the HL7 standard."
^XTMP("XPDT",7816,"BLD",7628,1,364,0)="  "
^XTMP("XPDT",7816,"BLD",7628,1,365,0)="14. To integrate the VistA-Office EHR with the regular VistA system as"
^XTMP("XPDT",7816,"BLD",7628,1,366,0)=" well as adding functionality also available in the Indian Health Services"
^XTMP("XPDT",7816,"BLD",7628,1,367,0)=" system, the GQPR^LA7QRY API has been modified to allow for VistA-Office"
^XTMP("XPDT",7816,"BLD",7628,1,368,0)=" EHR to use data specifically geared toward clinical operations, whether"
^XTMP("XPDT",7816,"BLD",7628,1,369,0)=" in a hospital or a standalone clinic. The use of an Electronic"
^XTMP("XPDT",7816,"BLD",7628,1,370,0)=" Health Record number as opposed to a SSN for patient identification is"
^XTMP("XPDT",7816,"BLD",7628,1,371,0)=" supported as an identifier accepted as input to this API."
^XTMP("XPDT",7816,"BLD",7628,1,372,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,373,0)=" The entry point GCPR^LA7QRY remains unchanged. However, the parameter"
^XTMP("XPDT",7816,"BLD",7628,1,374,0)=" used to pass the patient identifier should contain a 2nd piece indicating"
^XTMP("XPDT",7816,"BLD",7628,1,375,0)=" the type of identifier contained in the 1st piece."
^XTMP("XPDT",7816,"BLD",7628,1,376,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,377,0)=" It supports the following types of patient identifiers"
^XTMP("XPDT",7816,"BLD",7628,1,378,0)="   SS = Social Security number"
^XTMP("XPDT",7816,"BLD",7628,1,379,0)="   PI = VA MPI Integration Control Number"
^XTMP("XPDT",7816,"BLD",7628,1,380,0)="   MR = medical record number of patient in file PATIENT/IHS (#9000001)"
^XTMP("XPDT",7816,"BLD",7628,1,381,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,382,0)=" To regular VistA users this modification will not be seen."
^XTMP("XPDT",7816,"BLD",7628,1,383,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,384,0)="15. To support HDR-Historical which uses the GRPR^LA7QRY API to extract"
^XTMP("XPDT",7816,"BLD",7628,1,385,0)="historical laboratory test results, the input parameter LA7SC to GCPR^LA7QRY"
^XTMP("XPDT",7816,"BLD",7628,1,386,0)="supports a 2nd piece. When the 2nd piece of input parameter LA7SC equals"
^XTMP("XPDT",7816,"BLD",7628,1,387,0)="1 the API will return results encoded using VUID's when available."
^XTMP("XPDT",7816,"BLD",7628,1,388,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,389,0)="16. Remedy tickets HD0000000141922/HD0000000148089 reported a problem with"
^XTMP("XPDT",7816,"BLD",7628,1,390,0)="failure of generation of MailMan bulletin LA7 ORDER STATUS CHANGED at"
^XTMP("XPDT",7816,"BLD",7628,1,391,0)="collection laboratory facility. Routine LA7VMSG1 changed to set interface"
^XTMP("XPDT",7816,"BLD",7628,1,392,0)="type to set flag in Lab HL7 ORU message indicating an order status change"
^XTMP("XPDT",7816,"BLD",7628,1,393,0)="to trigger bulletin generation at collecting site."
^XTMP("XPDT",7816,"BLD",7628,1,394,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,395,0)="  "
^XTMP("XPDT",7816,"BLD",7628,1,396,0)="ASSOCIATED E3R"
^XTMP("XPDT",7816,"BLD",7628,1,397,0)="--------------"
^XTMP("XPDT",7816,"BLD",7628,1,398,0)=" None"
^XTMP("XPDT",7816,"BLD",7628,1,399,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,400,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,401,0)="ASSOCIATED REMEDY"
^XTMP("XPDT",7816,"BLD",7628,1,402,0)="-----------------"
^XTMP("XPDT",7816,"BLD",7628,1,403,0)=" HD0000000096207"
^XTMP("XPDT",7816,"BLD",7628,1,404,0)=" HD0000000141922"
^XTMP("XPDT",7816,"BLD",7628,1,405,0)=" HD0000000148089"
^XTMP("XPDT",7816,"BLD",7628,1,406,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,407,0)="TEST SITES"
^XTMP("XPDT",7816,"BLD",7628,1,408,0)="----------"
^XTMP("XPDT",7816,"BLD",7628,1,409,0)=" Atlanta VAMC"
^XTMP("XPDT",7816,"BLD",7628,1,410,0)=" Biloxi VAMC"
^XTMP("XPDT",7816,"BLD",7628,1,411,0)=" Boston HCS"
^XTMP("XPDT",7816,"BLD",7628,1,412,0)=" El Paso VAMC"
^XTMP("XPDT",7816,"BLD",7628,1,413,0)=" Houston VAMC"
^XTMP("XPDT",7816,"BLD",7628,1,414,0)=" Milwaukee VAMC"
^XTMP("XPDT",7816,"BLD",7628,1,415,0)=" North CHhicago VAMC"
^XTMP("XPDT",7816,"BLD",7628,1,416,0)=" Northhampton VAMC"
^XTMP("XPDT",7816,"BLD",7628,1,417,0)=" Palo Alto HCS"
^XTMP("XPDT",7816,"BLD",7628,1,418,0)=" Philadelphia VAMC"
^XTMP("XPDT",7816,"BLD",7628,1,419,0)=" Pittsburgh HCS"
^XTMP("XPDT",7816,"BLD",7628,1,420,0)=" Puget Sound HCS"
^XTMP("XPDT",7816,"BLD",7628,1,421,0)=" Salt Lake City VAMC"
^XTMP("XPDT",7816,"BLD",7628,1,422,0)=" South Texas HCS"
^XTMP("XPDT",7816,"BLD",7628,1,423,0)=" VA Greater Los Angeles HCS"
^XTMP("XPDT",7816,"BLD",7628,1,424,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,425,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,426,0)="INSTALLATION INSTRUCTIONS"
^XTMP("XPDT",7816,"BLD",7628,1,427,0)="========================="
^XTMP("XPDT",7816,"BLD",7628,1,428,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,429,0)="  The install time for this patch is less than 5 minute. This patch"
^XTMP("XPDT",7816,"BLD",7628,1,430,0)="  can be installed when Laboratory users are on the system."
^XTMP("XPDT",7816,"BLD",7628,1,431,0)="  Suggested time to install: non-peak requirement hours."
^XTMP("XPDT",7816,"BLD",7628,1,432,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,433,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,434,0)="NOTE: Kernel patches must be current on the target system to avoid"
^XTMP("XPDT",7816,"BLD",7628,1,435,0)="      problems loading and/or installing this patch."
^XTMP("XPDT",7816,"BLD",7628,1,436,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,437,0)="      Patch installation needs to be coordinated with the Laboratory"
^XTMP("XPDT",7816,"BLD",7628,1,438,0)="      Information Manager (LIM/ADPAC)."
^XTMP("XPDT",7816,"BLD",7628,1,439,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,440,0)=" 1.   LOAD TRANSPORT GLOBAL"
^XTMP("XPDT",7816,"BLD",7628,1,441,0)="      ---------------------------------------"
^XTMP("XPDT",7816,"BLD",7628,1,442,0)="      Choose the PackMan message containing this patch and invoke the"
^XTMP("XPDT",7816,"BLD",7628,1,443,0)="      INSTALL/CHECK   MESSAGE PackMan option. "
^XTMP("XPDT",7816,"BLD",7628,1,444,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,445,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,446,0)=" 2.   START UP KIDS"
^XTMP("XPDT",7816,"BLD",7628,1,447,0)="      Start up the Kernel Installation and distribution System"
^XTMP("XPDT",7816,"BLD",7628,1,448,0)="      Menu [XPD MAIN]:"
^XTMP("XPDT",7816,"BLD",7628,1,449,0)="              Edits and Distribution ..."
^XTMP("XPDT",7816,"BLD",7628,1,450,0)="                           Utilities ..."
^XTMP("XPDT",7816,"BLD",7628,1,451,0)="                         Installation ..."
^XTMP("XPDT",7816,"BLD",7628,1,452,0)="      "
^XTMP("XPDT",7816,"BLD",7628,1,453,0)="     Select Kernel Installation & Distribution System Option: Installation"
^XTMP("XPDT",7816,"BLD",7628,1,454,0)="                                                              ----"
^XTMP("XPDT",7816,"BLD",7628,1,455,0)="                1      Load a Distribution"
^XTMP("XPDT",7816,"BLD",7628,1,456,0)="                2      Verify Checksums in Transport Global"
^XTMP("XPDT",7816,"BLD",7628,1,457,0)="                3      Print Transport Global"
^XTMP("XPDT",7816,"BLD",7628,1,458,0)="                4      Compare Transport Global to Current System"
^XTMP("XPDT",7816,"BLD",7628,1,459,0)="                5      Backup a Transport Global"
^XTMP("XPDT",7816,"BLD",7628,1,460,0)="                6      Install Package(s)"
^XTMP("XPDT",7816,"BLD",7628,1,461,0)="                       Restart Install of Package(s)"
^XTMP("XPDT",7816,"BLD",7628,1,462,0)="                       Unload a Distribution"
^XTMP("XPDT",7816,"BLD",7628,1,463,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,464,0)="      Select Installation Option:"
^XTMP("XPDT",7816,"BLD",7628,1,465,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,466,0)=" 3.   Select Installation Option:"
^XTMP("XPDT",7816,"BLD",7628,1,467,0)="      -------------------------------"
^XTMP("XPDT",7816,"BLD",7628,1,468,0)="      NOTE:  The following are OPTIONAL - (When prompted for the"
^XTMP("XPDT",7816,"BLD",7628,1,469,0)="      INSTALL NAME, enter LA*5.2*68):"
^XTMP("XPDT",7816,"BLD",7628,1,470,0)="      a.  Backup a Transport Global - This option will create a"
^XTMP("XPDT",7816,"BLD",7628,1,471,0)="          backup message of any routines exported with this patch."
^XTMP("XPDT",7816,"BLD",7628,1,472,0)="          It will not backup any other changes such as DD's or templates."
^XTMP("XPDT",7816,"BLD",7628,1,473,0)="      b.  Compare Transport Global to Current System - This option"
^XTMP("XPDT",7816,"BLD",7628,1,474,0)="          will allow you to view all changes that will be made when this"
^XTMP("XPDT",7816,"BLD",7628,1,475,0)="          patch is installed. It compares all components of this patch"
^XTMP("XPDT",7816,"BLD",7628,1,476,0)="          (routines, DD's, templates, etc.)."
^XTMP("XPDT",7816,"BLD",7628,1,477,0)="      c.  Verify Checksums in Transport Global - This option will"
^XTMP("XPDT",7816,"BLD",7628,1,478,0)="          allow you to ensure the integrity of the routines that are in"
^XTMP("XPDT",7816,"BLD",7628,1,479,0)="          the transport global."
^XTMP("XPDT",7816,"BLD",7628,1,480,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,481,0)=" 4.   Select Installation Option:  Install Package(s)"
^XTMP("XPDT",7816,"BLD",7628,1,482,0)="                                   ------------------"
^XTMP("XPDT",7816,"BLD",7628,1,483,0)="      **This is the step to start the installation of this KIDS patch:"
^XTMP("XPDT",7816,"BLD",7628,1,484,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,485,0)="      a.  Choose the Install Package(s) option to start the patch install."
^XTMP("XPDT",7816,"BLD",7628,1,486,0)="          (When prompted for the INSTALL NAME, enter LA*5.2*68.)"
^XTMP("XPDT",7816,"BLD",7628,1,487,0)="      b.  When prompted 'Want KIDS to INHIBIT LOGONs during the install?"
^XTMP("XPDT",7816,"BLD",7628,1,488,0)="          NO//' answer NO (unless otherwise indicated)"
^XTMP("XPDT",7816,"BLD",7628,1,489,0)="      c.  When prompted 'Want to DISABLE Scheduled Options, Menu Options,"
^XTMP("XPDT",7816,"BLD",7628,1,490,0)="          and Protocols? NO//' answer NO (unless otherwise indicated)"
^XTMP("XPDT",7816,"BLD",7628,1,491,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,492,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,493,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,494,0)=" Note: Routine LA68 will be deleted after successful patch installation."
^XTMP("XPDT",7816,"BLD",7628,1,495,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,496,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,497,0)="POST-INSTALLATION INSTRUCTIONS:"
^XTMP("XPDT",7816,"BLD",7628,1,498,0)="==============================="
^XTMP("XPDT",7816,"BLD",7628,1,499,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,500,0)="***************************************************************************"
^XTMP("XPDT",7816,"BLD",7628,1,501,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,502,0)="After the installation of Patch LA*5.2*68, do not activate the LA7 LAB "
^XTMP("XPDT",7816,"BLD",7628,1,503,0)="RESULTS TO HDR (SUB) subscriber protocol until contacted by the HDR team"
^XTMP("XPDT",7816,"BLD",7628,1,504,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,505,0)="***************************************************************************"
^XTMP("XPDT",7816,"BLD",7628,1,506,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,507,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,508,0)="NOTE: Use the following steps only when activating the transmission of"
^XTMP("XPDT",7816,"BLD",7628,1,509,0)="laboratory data to the VA HDR and/or interfacing to a Commercial Off the "
^XTMP("XPDT",7816,"BLD",7628,1,510,0)="Shelf System (COTS) or other VistA subscriber. No further action is"
^XTMP("XPDT",7816,"BLD",7628,1,511,0)="required, if there is no requirement to activate this interface."
^XTMP("XPDT",7816,"BLD",7628,1,512,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,513,0)=" To activate messaging to the VA HDR perform steps 1, 2, and 3."
^XTMP("XPDT",7816,"BLD",7628,1,514,0)=" To activate messaging to COTS and other VistA subscribers"
^XTMP("XPDT",7816,"BLD",7628,1,515,0)="    perform steps 1 and 4."
^XTMP("XPDT",7816,"BLD",7628,1,516,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,517,0)="1. To utilize the building and transmission of HL7 Lab ORU result messages."
^XTMP("XPDT",7816,"BLD",7628,1,518,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,519,0)="   Enable the configuration 'LA7HDR' in LA7 MESSAGE PARAMETER file"
^XTMP("XPDT",7816,"BLD",7628,1,520,0)="   (#62.48). This is accomplished by setting the field STATUS (#2) to"
^XTMP("XPDT",7816,"BLD",7628,1,521,0)="   'ACTIVE' using VA File Manager. Setting this field to 'INACTIVE' will"
^XTMP("XPDT",7816,"BLD",7628,1,522,0)="   turn off generation of this Lab HL7 message."
^XTMP("XPDT",7816,"BLD",7628,1,523,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,524,0)="   Select VA FileMan Option:  Enter or Edit File Entries"
^XTMP("XPDT",7816,"BLD",7628,1,525,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,526,0)="   INPUT TO WHAT FILE: LA7 MESSAGE PARAMETER// 62.48  LA7 MESSAGE PARAMETER"
^XTMP("XPDT",7816,"BLD",7628,1,527,0)="    EDIT WHICH FIELD: ALL// STATUS"
^XTMP("XPDT",7816,"BLD",7628,1,528,0)="    THEN EDIT FIELD:"
^XTMP("XPDT",7816,"BLD",7628,1,529,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,530,0)="   Select LA7 MESSAGE PARAMETER CONFIGURATION: LA7HDR"
^XTMP("XPDT",7816,"BLD",7628,1,531,0)="   STATUS: INACTIVE// ACTIVE  ACTIVE"
^XTMP("XPDT",7816,"BLD",7628,1,532,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,533,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,534,0)="2. Activation of transmission to HDR requires coordination with your"
^XTMP("XPDT",7816,"BLD",7628,1,535,0)="   assigned HDR Implementation Manager (IM). Sites should not activate the"
^XTMP("XPDT",7816,"BLD",7628,1,536,0)="   LA7 LAB RESULTS TO HDR (SUB) subscriber until notified by the HDR"
^XTMP("XPDT",7816,"BLD",7628,1,537,0)="   team. The coordination of extractions of existing laboratory data will"
^XTMP("XPDT",7816,"BLD",7628,1,538,0)="   be started at the same time the configuration of the LA7 LAB RESULTS TO"
^XTMP("XPDT",7816,"BLD",7628,1,539,0)="   HDR (SUB) subscriber to ensure that there is an overlap of laboratory"
^XTMP("XPDT",7816,"BLD",7628,1,540,0)="   results. This overlap is done to ensure all laboratory results are in"
^XTMP("XPDT",7816,"BLD",7628,1,541,0)="   the HDR."
^XTMP("XPDT",7816,"BLD",7628,1,542,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,543,0)=" a. Set up VDEFVIE4 link for Laboratory data transmission"
^XTMP("XPDT",7816,"BLD",7628,1,544,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,545,0)="     Use the HL7 Main Menu, Filers option to look at the setup for "
^XTMP("XPDT",7816,"BLD",7628,1,546,0)="     VDEFVIE3. "
^XTMP("XPDT",7816,"BLD",7628,1,547,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,548,0)="     Copy down the IP and port number used for VDEFVIE3."
^XTMP("XPDT",7816,"BLD",7628,1,549,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,550,0)="     Use the HL7 Main Menu, Filers option to edit VDEFVIE4.  "
^XTMP("XPDT",7816,"BLD",7628,1,551,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,552,0)="     Enable auto startup and add the same IP and port numbers used for"
^XTMP("XPDT",7816,"BLD",7628,1,553,0)="     VDEFVIE3."
^XTMP("XPDT",7816,"BLD",7628,1,554,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,555,0)="     Use the HL7 Main Menu, Start/Stop Links option to start the VDEFVIE4"
^XTMP("XPDT",7816,"BLD",7628,1,556,0)="     link."
^XTMP("XPDT",7816,"BLD",7628,1,557,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,558,0)="     Use the HL7 Main Menu, Site Parameters option to select VDEF view"
^XTMP("XPDT",7816,"BLD",7628,1,559,0)="     and add VDEFVIE4 to the view."
^XTMP("XPDT",7816,"BLD",7628,1,560,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,561,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,562,0)=" b. To activate the interface to the VA HDR use Protocol Edit option"
^XTMP("XPDT",7816,"BLD",7628,1,563,0)="   [HL EDIT INTERFACE] on the HL package Interface Developer Options"
^XTMP("XPDT",7816,"BLD",7628,1,564,0)="   [HL MENU INTERFACE TK] menu option and edit protocol LA7 LAB RESULTS"
^XTMP("XPDT",7816,"BLD",7628,1,565,0)="   TO HDR (SUB). Go to the second ScreenMan screen and edit the field"
^XTMP("XPDT",7816,"BLD",7628,1,566,0)="   ROUTING LOGIC and remove the leading "";"" character and enter the"
^XTMP("XPDT",7816,"BLD",7628,1,567,0)="   'save' command to save the changes to the protocol."
^XTMP("XPDT",7816,"BLD",7628,1,568,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,569,0)="                          HL7 SUBSCRIBER                       PAGE 2 OF 2"
^XTMP("XPDT",7816,"BLD",7628,1,570,0)="                         LA7 LAB RESULTS TO HDR (SUB)"
^XTMP("XPDT",7816,"BLD",7628,1,571,0)="---------------------------------------------------------------------------"
^XTMP("XPDT",7816,"BLD",7628,1,572,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,573,0)="      RECEIVING APPLICATION: LA7HDR"
^XTMP("XPDT",7816,"BLD",7628,1,574,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,575,0)="      RESPONSE MESSAGE TYPE: ACK                            EVENT TYPE: R01"
^XTMP("XPDT",7816,"BLD",7628,1,576,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,577,0)=" SENDING FACILITY REQUIRED?: YES          RECEIVING FACILITY REQUIRED?: YES"
^XTMP("XPDT",7816,"BLD",7628,1,578,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,579,0)="         SECURITY REQUIRED?:"
^XTMP("XPDT",7816,"BLD",7628,1,580,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,581,0)="               LOGICAL LINK: VDEFVIE4"
^XTMP("XPDT",7816,"BLD",7628,1,582,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,583,0)=" PROCESSING RTN:"
^XTMP("XPDT",7816,"BLD",7628,1,584,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,585,0)="  ROUTING LOGIC: ;D RTR^LA7HDR(""CH;"")  <-- remove leading "";"" character"
^XTMP("XPDT",7816,"BLD",7628,1,586,0)="____________________________________________________________________________"
^XTMP("XPDT",7816,"BLD",7628,1,587,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,588,0)="COMMAND:                                     Press <PF1>H for help    Insert"
^XTMP("XPDT",7816,"BLD",7628,1,589,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,590,0)="After the change the field should look like:"
^XTMP("XPDT",7816,"BLD",7628,1,591,0)="  ROUTING LOGIC: D RTR^LA7HDR(""CH;"")"
^XTMP("XPDT",7816,"BLD",7628,1,592,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,593,0)="3. To transmit Lab HL7 ORU result messages to another system, i.e."
^XTMP("XPDT",7816,"BLD",7628,1,594,0)="   Commercial Off the Shelf System (COTS)."
^XTMP("XPDT",7816,"BLD",7628,1,595,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,596,0)=" a. Create a HL7 subscriber protocol as documented in HL7 Site Manager &"
^XTMP("XPDT",7816,"BLD",7628,1,597,0)="    Developer Manual version 1.6*56"
^XTMP("XPDT",7816,"BLD",7628,1,598,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,599,0)=" b. Attach this protocol as a subscriber to HL7 event protocol LA7 LAB"
^XTMP("XPDT",7816,"BLD",7628,1,600,0)="    RESULTS AVAILABLE (EVN). Use Protocol Edit option [HL EDIT INTERFACE]"
^XTMP("XPDT",7816,"BLD",7628,1,601,0)="    on the HL package Interface Developer Options [HL MENU INTERFACE TK]"
^XTMP("XPDT",7816,"BLD",7628,1,602,0)="    menu option to add this subscriber."
^XTMP("XPDT",7816,"BLD",7628,1,603,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,604,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,605,0)="4. Controlling message generation and transmission."
^XTMP("XPDT",7816,"BLD",7628,1,606,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,607,0)="   Notify the HDR Project Office in the event that this interface is"
^XTMP("XPDT",7816,"BLD",7628,1,608,0)="   deactivated and the interface to the HDR was previously activated"
^XTMP("XPDT",7816,"BLD",7628,1,609,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,610,0)="   a. To turn off message building and transmission to ALL subscribers"
^XTMP("XPDT",7816,"BLD",7628,1,611,0)="      of event protocol LA7 LAB RESULTS AVAILABLE (EVN)."
^XTMP("XPDT",7816,"BLD",7628,1,612,0)="      Disable the configuration 'LA7HDR' in LA7 MESSAGE PARAMETER file"
^XTMP("XPDT",7816,"BLD",7628,1,613,0)="      (#62.48). This is accomplished by setting the field STATUS (#2) to"
^XTMP("XPDT",7816,"BLD",7628,1,614,0)="      'INACTIVE' using VA File Manager Enter or Edit File Entries [DIEDIT]."
^XTMP("XPDT",7816,"BLD",7628,1,615,0)="      Setting this field to 'INACTIVE' will turn off generation of this Lab"
^XTMP("XPDT",7816,"BLD",7628,1,616,0)="      HL7 message."
^XTMP("XPDT",7816,"BLD",7628,1,617,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,618,0)="   b. To turn off message transmission to a specific subscriber."
^XTMP("XPDT",7816,"BLD",7628,1,619,0)="      On the HL package, Interface Developer Options [HL MENU INTERFACE"
^XTMP("XPDT",7816,"BLD",7628,1,620,0)="      TK] menu option, use the Protocol Edit [HL EDIT INTERFACE] option to"
^XTMP("XPDT",7816,"BLD",7628,1,621,0)="      remove the related subscriber protocol from the event protocol LA7"
^XTMP("XPDT",7816,"BLD",7628,1,622,0)="      LAB RESULTS AVAILABLE (EVN)."
^XTMP("XPDT",7816,"BLD",7628,1,623,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,624,0)="      For the VA HDR, remove subscriber protocol LA7 LAB RESULTS TO HDR"
^XTMP("XPDT",7816,"BLD",7628,1,625,0)="      (SUB)."
^XTMP("XPDT",7816,"BLD",7628,1,626,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,627,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,628,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,629,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,630,0)="INSTALLATION EXAMPLE"
^XTMP("XPDT",7816,"BLD",7628,1,631,0)="===================="
^XTMP("XPDT",7816,"BLD",7628,1,632,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,633,0)="Select Installation Option: 6  Install Package(s) "
^XTMP("XPDT",7816,"BLD",7628,1,634,0)="Select INSTALL NAME: LA*5.2*68 Loaded from Distribution  2/4/05@10:21"
^XTMP("XPDT",7816,"BLD",7628,1,635,0)="     => LA*5.2*68"
^XTMP("XPDT",7816,"BLD",7628,1,636,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,637,0)="This Distribution was loaded on Feb 04, 2005@10:21 with header of"
^XTMP("XPDT",7816,"BLD",7628,1,638,0)="   LA*5.2*68"
^XTMP("XPDT",7816,"BLD",7628,1,639,0)="   It consisted of the following Install(s):"
^XTMP("XPDT",7816,"BLD",7628,1,640,0)="      LA*5.2*68"
^XTMP("XPDT",7816,"BLD",7628,1,641,0)="Checking Install for Package LA*5.2*68"
^XTMP("XPDT",7816,"BLD",7628,1,642,0)="Will first run the Environment Check Routine, LA68"
^XTMP("XPDT",7816,"BLD",7628,1,643,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,644,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,645,0)="                        --- Environment Check is Ok ---"
^XTMP("XPDT",7816,"BLD",7628,1,646,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,647,0)="Install Questions for LA*5.2*68"
^XTMP("XPDT",7816,"BLD",7628,1,648,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,649,0)="Incoming Files:"
^XTMP("XPDT",7816,"BLD",7628,1,650,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,651,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,652,0)="   62.48     LA7 MESSAGE PARAMETER  (including data)"
^XTMP("XPDT",7816,"BLD",7628,1,653,0)="Note:  You already have the 'LA7 MESSAGE PARAMETER' File."
^XTMP("XPDT",7816,"BLD",7628,1,654,0)="I will OVERWRITE your data with mine."
^XTMP("XPDT",7816,"BLD",7628,1,655,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,656,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,657,0)="   63        LAB DATA  (Partial Definition)"
^XTMP("XPDT",7816,"BLD",7628,1,658,0)="Note:  You already have the 'LAB DATA' File."
^XTMP("XPDT",7816,"BLD",7628,1,659,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,660,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,661,0)="Want KIDS to Rebuild Menu Trees Upon Completion of Install? YES//"
^XTMP("XPDT",7816,"BLD",7628,1,662,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,663,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,664,0)="Want KIDS to INHIBIT LOGONs during the install? NO// NO"
^XTMP("XPDT",7816,"BLD",7628,1,665,0)="Want to DISABLE Scheduled Options, Menu Options, and Protocols? NO// NO"
^XTMP("XPDT",7816,"BLD",7628,1,666,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,667,0)="Enter the Device you want to print the Install messages."
^XTMP("XPDT",7816,"BLD",7628,1,668,0)="You can queue the install by enter a 'Q' at the device prompt."
^XTMP("XPDT",7816,"BLD",7628,1,669,0)="Enter a '^' to abort the install."
^XTMP("XPDT",7816,"BLD",7628,1,670,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,671,0)="DEVICE: HOME//  TELNET VIRTUAL"
^XTMP("XPDT",7816,"BLD",7628,1,672,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,673,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,674,0)=" Install Started for LA*5.2*68 :"
^XTMP("XPDT",7816,"BLD",7628,1,675,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"BLD",7628,1,676,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,677,0)="Build Distribution Date: Feb 04, 2005"
^XTMP("XPDT",7816,"BLD",7628,1,678,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,679,0)=" Installing Routines:............."
^XTMP("XPDT",7816,"BLD",7628,1,680,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"BLD",7628,1,681,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,682,0)=" Running Pre-Install Routine: PRE^LA68."
^XTMP("XPDT",7816,"BLD",7628,1,683,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,684,0)="               Sending install started alert to mail group G.LMI"
^XTMP("XPDT",7816,"BLD",7628,1,685,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,686,0)="                          *** Pre install started ***"
^XTMP("XPDT",7816,"BLD",7628,1,687,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,688,0)="                           --- No action required---"
^XTMP("XPDT",7816,"BLD",7628,1,689,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,690,0)="                         *** Pre install completed ***"
^XTMP("XPDT",7816,"BLD",7628,1,691,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,692,0)=" Installing Data Dictionaries: ..."
^XTMP("XPDT",7816,"BLD",7628,1,693,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"BLD",7628,1,694,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,695,0)=" Installing Data:"
^XTMP("XPDT",7816,"BLD",7628,1,696,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"BLD",7628,1,697,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,698,0)=" Installing PACKAGE COMPONENTS:"
^XTMP("XPDT",7816,"BLD",7628,1,699,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,700,0)=" Installing HL7 APPLICATION PARAMETER..."
^XTMP("XPDT",7816,"BLD",7628,1,701,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,702,0)=" Installing PROTOCOL.."
^XTMP("XPDT",7816,"BLD",7628,1,703,0)="  Located in the LA7 (LAB MESSAGING) namespace.."
^XTMP("XPDT",7816,"BLD",7628,1,704,0)="  Located in the LA7 (LAB MESSAGING) namespace.."
^XTMP("XPDT",7816,"BLD",7628,1,705,0)="  Located in the LA7 (LAB MESSAGING) namespace.."
^XTMP("XPDT",7816,"BLD",7628,1,706,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"BLD",7628,1,707,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,708,0)=" Running Post-Install Routine: POST^LA68."
^XTMP("XPDT",7816,"BLD",7628,1,709,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,710,0)="                          *** Post install started ***"
^XTMP("XPDT",7816,"BLD",7628,1,711,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,712,0)="          *** Clearing facility name for LA7LAB entry in file #771 ***"
^XTMP("XPDT",7816,"BLD",7628,1,713,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,714,0)="                    *** Clearing facility name completed ***"
^XTMP("XPDT",7816,"BLD",7628,1,715,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,716,0)="                         *** Post install completed ***"
^XTMP("XPDT",7816,"BLD",7628,1,717,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,718,0)="              Sending install completion alert to mail group G.LMI"
^XTMP("XPDT",7816,"BLD",7628,1,719,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,720,0)=" Updating Routine file......"
^XTMP("XPDT",7816,"BLD",7628,1,721,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,722,0)=" Updating KIDS files......."
^XTMP("XPDT",7816,"BLD",7628,1,723,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,724,0)=" LA*5.2*68 Installed."
^XTMP("XPDT",7816,"BLD",7628,1,725,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"BLD",7628,1,726,0)=" "
^XTMP("XPDT",7816,"BLD",7628,1,727,0)=" Install Message sent #xxxx"
^XTMP("XPDT",7816,"BLD",7628,4,0)="^9.64PA^62.485^3"
^XTMP("XPDT",7816,"BLD",7628,4,62.48,0)="62.48"
^XTMP("XPDT",7816,"BLD",7628,4,62.48,222)="y^n^f^^n^^y^o^n"
^XTMP("XPDT",7816,"BLD",7628,4,62.48,224)="I $P(^LAHM(62.48,Y,0),""^"")=""LA7HDR"""
^XTMP("XPDT",7816,"BLD",7628,4,62.485,0)="62.485"
^XTMP("XPDT",7816,"BLD",7628,4,62.485,222)="n^n^f^^n^^y^o^n"
^XTMP("XPDT",7816,"BLD",7628,4,62.485,224)="I Y=121"
^XTMP("XPDT",7816,"BLD",7628,4,63,0)="63"
^XTMP("XPDT",7816,"BLD",7628,4,63,2,0)="^9.641^63.09^3"
^XTMP("XPDT",7816,"BLD",7628,4,63,2,63.02,0)="EM  (sub-file)"
^XTMP("XPDT",7816,"BLD",7628,4,63,2,63.02,1,0)="^9.6411^.11^1"
^XTMP("XPDT",7816,"BLD",7628,4,63,2,63.02,1,.11,0)="REPORT RELEASE DATE"
^XTMP("XPDT",7816,"BLD",7628,4,63,2,63.08,0)="SURGICAL PATHOLOGY  (sub-file)"
^XTMP("XPDT",7816,"BLD",7628,4,63,2,63.08,1,0)="^9.6411^.11^1"
^XTMP("XPDT",7816,"BLD",7628,4,63,2,63.08,1,.11,0)="REPORT RELEASE DATE/TIME"
^XTMP("XPDT",7816,"BLD",7628,4,63,2,63.09,0)="CYTOPATHOLOGY  (sub-file)"
^XTMP("XPDT",7816,"BLD",7628,4,63,2,63.09,1,0)="^9.6411^.11^1"
^XTMP("XPDT",7816,"BLD",7628,4,63,2,63.09,1,.11,0)="REPORT RELEASE DATE/TIME"
^XTMP("XPDT",7816,"BLD",7628,4,63,222)="y^n^p^^^^n^^n"
^XTMP("XPDT",7816,"BLD",7628,4,63,224)=""
^XTMP("XPDT",7816,"BLD",7628,4,"APDD",63,63.02)=""
^XTMP("XPDT",7816,"BLD",7628,4,"APDD",63,63.02,.11)=""
^XTMP("XPDT",7816,"BLD",7628,4,"APDD",63,63.08)=""
^XTMP("XPDT",7816,"BLD",7628,4,"APDD",63,63.08,.11)=""
^XTMP("XPDT",7816,"BLD",7628,4,"APDD",63,63.09)=""
^XTMP("XPDT",7816,"BLD",7628,4,"APDD",63,63.09,.11)=""
^XTMP("XPDT",7816,"BLD",7628,4,"B",62.48,62.48)=""
^XTMP("XPDT",7816,"BLD",7628,4,"B",62.485,62.485)=""
^XTMP("XPDT",7816,"BLD",7628,4,"B",63,63)=""
^XTMP("XPDT",7816,"BLD",7628,6)="^56"
^XTMP("XPDT",7816,"BLD",7628,6.3)="56"
^XTMP("XPDT",7816,"BLD",7628,"ABPKG")="n"
^XTMP("XPDT",7816,"BLD",7628,"INI")="PRE^LA68"
^XTMP("XPDT",7816,"BLD",7628,"INID")="y"
^XTMP("XPDT",7816,"BLD",7628,"INIT")="POST^LA68"
^XTMP("XPDT",7816,"BLD",7628,"KRN",0)="^9.67PA^8989.52^19"
^XTMP("XPDT",7816,"BLD",7628,"KRN",.4,0)=".4"
^XTMP("XPDT",7816,"BLD",7628,"KRN",.4,"NM",0)="^9.68A^^"
^XTMP("XPDT",7816,"BLD",7628,"KRN",.401,0)=".401"
^XTMP("XPDT",7816,"BLD",7628,"KRN",.402,0)=".402"
^XTMP("XPDT",7816,"BLD",7628,"KRN",.403,0)=".403"
^XTMP("XPDT",7816,"BLD",7628,"KRN",.5,0)=".5"
^XTMP("XPDT",7816,"BLD",7628,"KRN",.84,0)=".84"
^XTMP("XPDT",7816,"BLD",7628,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7816,"BLD",7628,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",0)="^9.68A^30^28"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",1,0)="LA7HDR^^0^B39353571"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",2,0)="LA7QRY1^^0^B34477085"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",3,0)="LA7QRY2^^0^B38475048"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",4,0)="LA7QRY^^0^B8496816"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",5,0)="LA7VHLU5^^0^B49053645"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",6,0)="LA7VHLU3^^0^B55573792"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",7,0)="LA7VORUA^^0^B11624236"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",8,0)="LA7VORU1^^0^B61414246"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",9,0)="LA7VMSG1^^0^B52098570"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",11,0)="LA7VHLU^^0^B44857108"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",12,0)="LA7VORM1^^0^B57485485"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",13,0)="LA7HDR1^^0^B37911850"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",14,0)="LA7VOBX^^0^B30185961"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",15,0)="LA7VOBXA^^0^B53603815"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",16,0)="LA7VOBX2^^0^B21393582"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",17,0)="LA7VOBX3^^0^B83540167"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",18,0)="LA7VOBX1^^0^B28786998"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",19,0)="LA7VIN5^^0^B62438539"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",20,0)="LA7VORC^^0^B18625097"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",21,0)="LA7VOBR^^0^B25844567"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",22,0)="LA7VHLU2^^0^B28776777"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",23,0)="LA7VORU^^0^B24122155"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",24,0)="LA7VHLU4^^0^B25782007"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",25,0)="LA7VORU2^^0^B5334202"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",27,0)="LA7VOBRA^^0^B39455733"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",28,0)="LA7VHLU9^^0^B16600197"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",29,0)="LA7VORUB^^0^B37430566"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM",30,0)="LA7VOBRB^^0^B12807459"
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7HDR",1)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7HDR1",13)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7QRY",4)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7QRY1",2)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7QRY2",3)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VHLU",11)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VHLU2",22)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VHLU3",6)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VHLU4",24)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VHLU5",5)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VHLU9",28)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VIN5",19)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VMSG1",9)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VOBR",21)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VOBRA",27)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VOBRB",30)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VOBX",14)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VOBX1",18)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VOBX2",16)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VOBX3",17)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VOBXA",15)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VORC",20)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VORM1",12)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VORU",23)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VORU1",8)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VORU2",25)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VORUA",7)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",9.8,"NM","B","LA7VORUB",29)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",19,0)="19"
^XTMP("XPDT",7816,"BLD",7628,"KRN",19,"NM",0)="^9.68A^2^2"
^XTMP("XPDT",7816,"BLD",7628,"KRN",19,"NM",1,0)="LA7 HDR RECOVER^^0"
^XTMP("XPDT",7816,"BLD",7628,"KRN",19,"NM",2,0)="LRLIAISON^^2"
^XTMP("XPDT",7816,"BLD",7628,"KRN",19,"NM","B","LA7 HDR RECOVER",1)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",19,"NM","B","LRLIAISON",2)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7816,"BLD",7628,"KRN",19.1,"NM",0)="^9.68A^^"
^XTMP("XPDT",7816,"BLD",7628,"KRN",101,0)="101"
^XTMP("XPDT",7816,"BLD",7628,"KRN",101,"NM",0)="^9.68A^4^4"
^XTMP("XPDT",7816,"BLD",7628,"KRN",101,"NM",1,0)="LA7 LAB RESULTS ACTION^^0"
^XTMP("XPDT",7816,"BLD",7628,"KRN",101,"NM",2,0)="LA7 LAB RESULTS AVAILABLE (EVN)^^3"
^XTMP("XPDT",7816,"BLD",7628,"KRN",101,"NM",3,0)="LA7 LAB RESULTS TO HDR (SUB)^^0"
^XTMP("XPDT",7816,"BLD",7628,"KRN",101,"NM",4,0)="LR7O ALL EVSEND RESULTS^^2"
^XTMP("XPDT",7816,"BLD",7628,"KRN",101,"NM","B","LA7 LAB RESULTS ACTION",1)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",101,"NM","B","LA7 LAB RESULTS AVAILABLE (EVN)",2)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",101,"NM","B","LA7 LAB RESULTS TO HDR (SUB)",3)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",101,"NM","B","LR7O ALL EVSEND RESULTS",4)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7816,"BLD",7628,"KRN",409.61,"NM",0)="^9.68A^^"
^XTMP("XPDT",7816,"BLD",7628,"KRN",771,0)="771"
^XTMP("XPDT",7816,"BLD",7628,"KRN",771,"NM",0)="^9.68A^2^1"
^XTMP("XPDT",7816,"BLD",7628,"KRN",771,"NM",2,0)="LA7HDR^^0"
^XTMP("XPDT",7816,"BLD",7628,"KRN",771,"NM","B","LA7HDR",2)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN",870,0)="870"
^XTMP("XPDT",7816,"BLD",7628,"KRN",870,"NM",0)="^9.68A^^0"
^XTMP("XPDT",7816,"BLD",7628,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7816,"BLD",7628,"KRN",8989.51,"NM",0)="^9.68A^^"
^XTMP("XPDT",7816,"BLD",7628,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7816,"BLD",7628,"KRN",8994,0)="8994"
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",.4,.4)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",.401,.401)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",.402,.402)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",.403,.403)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",.5,.5)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",.84,.84)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",19,19)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",101,101)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",771,771)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",870,870)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7816,"BLD",7628,"KRN","B",8994,8994)=""
^XTMP("XPDT",7816,"BLD",7628,"PRE")="LA68"
^XTMP("XPDT",7816,"BLD",7628,"QDEF")="^^^^NO^^^^YES^^NO"
^XTMP("XPDT",7816,"BLD",7628,"QUES",0)="^9.62^^"
^XTMP("XPDT",7816,"BLD",7628,"REQB",0)="^9.611^6^4"
^XTMP("XPDT",7816,"BLD",7628,"REQB",2,0)="LA*5.2*64^2"
^XTMP("XPDT",7816,"BLD",7628,"REQB",3,0)="LA*5.2*69^2"
^XTMP("XPDT",7816,"BLD",7628,"REQB",4,0)="VDEF 1.0^2"
^XTMP("XPDT",7816,"BLD",7628,"REQB",6,0)="LA*5.2*71^2"
^XTMP("XPDT",7816,"BLD",7628,"REQB","B","LA*5.2*64",2)=""
^XTMP("XPDT",7816,"BLD",7628,"REQB","B","LA*5.2*69",3)=""
^XTMP("XPDT",7816,"BLD",7628,"REQB","B","LA*5.2*71",6)=""
^XTMP("XPDT",7816,"BLD",7628,"REQB","B","VDEF 1.0",4)=""
^XTMP("XPDT",7816,"DATA",62.48,35,0)="LA7HDR^HL7^0^1^^5^^^30"
^XTMP("XPDT",7816,"DATA",62.48,35,20,0)="^62.481S^1^1"
^XTMP("XPDT",7816,"DATA",62.48,35,20,1,0)="2^LAB MESSAGING"
^XTMP("XPDT",7816,"DATA",62.485,121,0)="121^FileMan DBS call is reporting error |1| with text '|2|' for data name |3|.^1"
^XTMP("XPDT",7816,"DATA",62.485,121,1)="S LA7TXT(1)=LA7DDERR(""DIERR"",1),LA7TXT(2)=LA7DDERR(""DIERR"",1,""TEXT"",1),LA7TXT(3)=LRSB"
^XTMP("XPDT",7816,"FIA",62.48)="LA7 MESSAGE PARAMETER"
^XTMP("XPDT",7816,"FIA",62.48,0)="^LAHM(62.48,"
^XTMP("XPDT",7816,"FIA",62.48,0,0)="62.48"
^XTMP("XPDT",7816,"FIA",62.48,0,1)="y^n^f^^n^^y^o^n"
^XTMP("XPDT",7816,"FIA",62.48,0,10)=""
^XTMP("XPDT",7816,"FIA",62.48,0,11)="I $P(^LAHM(62.48,Y,0),""^"")=""LA7HDR"""
^XTMP("XPDT",7816,"FIA",62.48,0,"RLRO")=""
^XTMP("XPDT",7816,"FIA",62.48,0,"VR")="5.2^LA"
^XTMP("XPDT",7816,"FIA",62.48,62.48)="0"
^XTMP("XPDT",7816,"FIA",62.48,62.481)="0"
^XTMP("XPDT",7816,"FIA",62.48,62.483)="0"
^XTMP("XPDT",7816,"FIA",62.485)="LA7 MESSAGE LOG BULLETINS"
^XTMP("XPDT",7816,"FIA",62.485,0)="^LAHM(62.485,"
^XTMP("XPDT",7816,"FIA",62.485,0,0)="62.485"
^XTMP("XPDT",7816,"FIA",62.485,0,1)="n^n^f^^n^^y^o^n"
^XTMP("XPDT",7816,"FIA",62.485,0,10)=""
^XTMP("XPDT",7816,"FIA",62.485,0,11)="I Y=121"
^XTMP("XPDT",7816,"FIA",62.485,0,"RLRO")=""
^XTMP("XPDT",7816,"FIA",62.485,0,"VR")="5.2^LA"
^XTMP("XPDT",7816,"FIA",62.485,62.485)="0"
^XTMP("XPDT",7816,"FIA",63)="LAB DATA"
^XTMP("XPDT",7816,"FIA",63,0)="^LR("
^XTMP("XPDT",7816,"FIA",63,0,0)="63"
^XTMP("XPDT",7816,"FIA",63,0,1)="y^n^p^^^^n^^n"
^XTMP("XPDT",7816,"FIA",63,0,10)=""
^XTMP("XPDT",7816,"FIA",63,0,11)=""
^XTMP("XPDT",7816,"FIA",63,0,"RLRO")=""
^XTMP("XPDT",7816,"FIA",63,0,"VR")="5.2^LA"
^XTMP("XPDT",7816,"FIA",63,63)="1"
^XTMP("XPDT",7816,"FIA",63,63.02)="1"
^XTMP("XPDT",7816,"FIA",63,63.02,.11)=""
^XTMP("XPDT",7816,"FIA",63,63.08)="1"
^XTMP("XPDT",7816,"FIA",63,63.08,.11)=""
^XTMP("XPDT",7816,"FIA",63,63.09)="1"
^XTMP("XPDT",7816,"FIA",63,63.09,.11)=""
^XTMP("XPDT",7816,"INI")="PRE^LA68"
^XTMP("XPDT",7816,"INIT")="POST^LA68"
^XTMP("XPDT",7816,"IX",63,63.02,"AC",0)="63.02^AC^Notify HDR and others that this report is available.^MU^^F^^I^63.02^^^^^A"
^XTMP("XPDT",7816,"IX",63,63.02,"AC",.1,0)="^^3^3^3090128^^^^"
^XTMP("XPDT",7816,"IX",63,63.02,"AC",.1,1,0)="This MUMPS cross-reference triggers the sending of this"
^XTMP("XPDT",7816,"IX",63,63.02,"AC",.1,2,0)="report to the Health Data Repository (HDR) and other"
^XTMP("XPDT",7816,"IX",63,63.02,"AC",.1,3,0)="subscribers when electron microscopy results are released."
^XTMP("XPDT",7816,"IX",63,63.02,"AC",1)="D APQ^LA7HDR(DA(1),""EM"",DA)"
^XTMP("XPDT",7816,"IX",63,63.02,"AC",2)="Q"
^XTMP("XPDT",7816,"IX",63,63.02,"AC",11.1,0)="^.114IA^1^1"
^XTMP("XPDT",7816,"IX",63,63.02,"AC",11.1,1,0)="1^F^63.02^.11^^1^F"
^XTMP("XPDT",7816,"IX",63,63.08,"AD",0)="63.08^AD^Notify HDR and others that this report is available.^MU^^F^^I^63.08^^^^^A"
^XTMP("XPDT",7816,"IX",63,63.08,"AD",.1,0)="^^3^3^3090128^^^"
^XTMP("XPDT",7816,"IX",63,63.08,"AD",.1,1,0)="This MUMPS cross-reference triggers the sending of this report"
^XTMP("XPDT",7816,"IX",63,63.08,"AD",.1,2,0)="to the Health Data Repository (HDR) and other subscribers"
^XTMP("XPDT",7816,"IX",63,63.08,"AD",.1,3,0)="when surgical pathology results are released."
^XTMP("XPDT",7816,"IX",63,63.08,"AD",1)="D APQ^LA7HDR(DA(1),""SP"",DA)"
^XTMP("XPDT",7816,"IX",63,63.08,"AD",2)="Q"
^XTMP("XPDT",7816,"IX",63,63.08,"AD",11.1,0)="^.114IA^1^1"
^XTMP("XPDT",7816,"IX",63,63.08,"AD",11.1,1,0)="1^F^63.08^.11^^1^F"
^XTMP("XPDT",7816,"IX",63,63.09,"AD",0)="63.09^AD^Notify HDR and others that this report is available.^MU^^F^^I^63.09^^^^^A"
^XTMP("XPDT",7816,"IX",63,63.09,"AD",.1,0)="^^3^3^3090128^^^"
^XTMP("XPDT",7816,"IX",63,63.09,"AD",.1,1,0)="This MUMPS cross-reference triggers the sending of this"
^XTMP("XPDT",7816,"IX",63,63.09,"AD",.1,2,0)="report to the Health Data Repository (HDR) and other"
^XTMP("XPDT",7816,"IX",63,63.09,"AD",.1,3,0)="subscribers when cytology results are released."
^XTMP("XPDT",7816,"IX",63,63.09,"AD",1)="D APQ^LA7HDR(DA(1),""CY"",DA)"
^XTMP("XPDT",7816,"IX",63,63.09,"AD",2)="Q"
^XTMP("XPDT",7816,"IX",63,63.09,"AD",11.1,0)="^.114IA^1^1"
^XTMP("XPDT",7816,"IX",63,63.09,"AD",11.1,1,0)="1^F^63.09^.11^^1^F"
^XTMP("XPDT",7816,"KRN",19,1240,-1)="2^2"
^XTMP("XPDT",7816,"KRN",19,1240,0)="LRLIAISON^Lab liaison menu^^M^.5^LRLIASON^^^^^^14"
^XTMP("XPDT",7816,"KRN",19,1240,10,0)="^19.01PI^34^34"
^XTMP("XPDT",7816,"KRN",19,1240,10,34,0)="10868^HDR"
^XTMP("XPDT",7816,"KRN",19,1240,10,34,"^")="LA7 HDR RECOVER"
^XTMP("XPDT",7816,"KRN",19,1240,"U")="LAB LIAISON MENU"
^XTMP("XPDT",7816,"KRN",19,10868,-1)="0^1"
^XTMP("XPDT",7816,"KRN",19,10868,0)="LA7 HDR RECOVER^Recover/Transmit Lab HDR Result Messages^^R^^^^^^^^AUTOMATED LAB INSTRUMENTS"
^XTMP("XPDT",7816,"KRN",19,10868,1,0)="^19.06^16^16^3090127^^^^"
^XTMP("XPDT",7816,"KRN",19,10868,1,1,0)="Option to recover from failed Lab HDR ORU Result message"
^XTMP("XPDT",7816,"KRN",19,10868,1,2,0)="generation and/or transmission failure. This option allows"
^XTMP("XPDT",7816,"KRN",19,10868,1,3,0)="the user to select those VistA Laboratory accessions that"
^XTMP("XPDT",7816,"KRN",19,10868,1,4,0)="need to be transmitted to the VA HDR and other subscribers"
^XTMP("XPDT",7816,"KRN",19,10868,1,5,0)="of the VistA Laboratory Result Available HL7 message"
^XTMP("XPDT",7816,"KRN",19,10868,1,6,0)="capability via the protocol Lab Results Available Event"
^XTMP("XPDT",7816,"KRN",19,10868,1,7,0)="[LA7 LAB RESULTS AVAILABLE (EVN)]."
^XTMP("XPDT",7816,"KRN",19,10868,1,8,0)=" "
^XTMP("XPDT",7816,"KRN",19,10868,1,9,0)="If the original message generation/transmission failed"
^XTMP("XPDT",7816,"KRN",19,10868,1,10,0)="due to system or communication problems then using this"
^XTMP("XPDT",7816,"KRN",19,10868,1,11,0)="option will allow the generation of new HL7 messages with"
^XTMP("XPDT",7816,"KRN",19,10868,1,12,0)="the results associated with the selected accessions."
^XTMP("XPDT",7816,"KRN",19,10868,1,13,0)="Accessions can be selected using the human-readable"
^XTMP("XPDT",7816,"KRN",19,10868,1,14,0)="accession designation (area abbreviation modified date"
^XTMP("XPDT",7816,"KRN",19,10868,1,15,0)="accession number - ""CH 1225 100"") or the accession's"
^XTMP("XPDT",7816,"KRN",19,10868,1,16,0)="associated 10 character unique identifier (UID)."
^XTMP("XPDT",7816,"KRN",19,10868,2)=""
^XTMP("XPDT",7816,"KRN",19,10868,25)="RECOVER^LA7HDR"
^XTMP("XPDT",7816,"KRN",19,10868,"U")="RECOVER/TRANSMIT LAB HDR RESUL"
^XTMP("XPDT",7816,"KRN",101,1692,-1)="2^4"
^XTMP("XPDT",7816,"KRN",101,1692,0)="LR7O ALL EVSEND RESULTS^LAB RESULTS => EXTERNAL PACKAGE^^X^1^^^^^^^"
^XTMP("XPDT",7816,"KRN",101,1692,10,0)="^101.01PA^6^6"
^XTMP("XPDT",7816,"KRN",101,1692,10,6,0)="4258^^^"
^XTMP("XPDT",7816,"KRN",101,1692,10,6,"^")="LA7 LAB RESULTS ACTION"
^XTMP("XPDT",7816,"KRN",101,4256,-1)="3^2"
^XTMP("XPDT",7816,"KRN",101,4256,0)="LA7 LAB RESULTS AVAILABLE (EVN)^Lab Results Available Event^^E^^^^^^^^"
^XTMP("XPDT",7816,"KRN",101,4256,1,0)="^101.06^12^12^3090120^^^^"
^XTMP("XPDT",7816,"KRN",101,4256,1,1,0)="A VistA Laboratory package HL7 ORU result message is created and sent"
^XTMP("XPDT",7816,"KRN",101,4256,1,2,0)="by the HL package for transmission to any subscribers of event protocol"
^XTMP("XPDT",7816,"KRN",101,4256,1,3,0)="LA7 LAB RESULTS AVAILABLE (EVN)."
^XTMP("XPDT",7816,"KRN",101,4256,1,4,0)=""
^XTMP("XPDT",7816,"KRN",101,4256,1,5,0)="It provides the capability for the generation of a Laboratory HL7 ORU"
^XTMP("XPDT",7816,"KRN",101,4256,1,6,0)="message containing patient laboratory results to subscribers of the HL7"
^XTMP("XPDT",7816,"KRN",101,4256,1,7,0)="event protocol LA7 LAB RESULTS AVAILABLE (EVN) as these results are made"
^XTMP("XPDT",7816,"KRN",101,4256,1,8,0)="available within the Laboratory package."
^XTMP("XPDT",7816,"KRN",101,4256,1,9,0)="  "
^XTMP("XPDT",7816,"KRN",101,4256,1,10,0)="The following subscripts are supported by the event:"
^XTMP("XPDT",7816,"KRN",101,4256,1,11,0)="  ""CH"", ""MI"", ""SP"", ""CY"", ""EM"". "
^XTMP("XPDT",7816,"KRN",101,4256,1,12,0)=""
^XTMP("XPDT",7816,"KRN",101,4256,99)="61473,34094"
^XTMP("XPDT",7816,"KRN",101,4256,770)="LA7LAB^^ORU^R01^53^^^AL^NE^2.4^"
^XTMP("XPDT",7816,"KRN",101,4256,772)="D ACK^LA7VHL"
^XTMP("XPDT",7816,"KRN",101,4256,775,0)="^101.0775PA^1^1"
^XTMP("XPDT",7816,"KRN",101,4256,775,1,0)="4257"
^XTMP("XPDT",7816,"KRN",101,4256,775,1,"^")="LA7 LAB RESULTS TO HDR (SUB)"
^XTMP("XPDT",7816,"KRN",101,4257,-1)="0^3"
^XTMP("XPDT",7816,"KRN",101,4257,0)="LA7 LAB RESULTS TO HDR (SUB)^Send Lab Results to HDR^^S^^^^^^^^"
^XTMP("XPDT",7816,"KRN",101,4257,1,0)="^101.06^35^35^3090120^^^^"
^XTMP("XPDT",7816,"KRN",101,4257,1,1,0)="This protocol should be attached to the HL7 event protocol LA7 LAB"
^XTMP("XPDT",7816,"KRN",101,4257,1,2,0)="RESULTS AVAILABLE (EVN). See this protocol for further information."
^XTMP("XPDT",7816,"KRN",101,4257,1,3,0)=" "
^XTMP("XPDT",7816,"KRN",101,4257,1,4,0)="This subscriber protocol is used by the Laboratory package to indicate "
^XTMP("XPDT",7816,"KRN",101,4257,1,5,0)="to the HL package to send laboratory results to the VA Health Data"
^XTMP("XPDT",7816,"KRN",101,4257,1,6,0)="Repository (HDR)."
^XTMP("XPDT",7816,"KRN",101,4257,1,7,0)=" "
^XTMP("XPDT",7816,"KRN",101,4257,1,8,0)="It utilizes the ""Router"" Subscriber Protocol supported by the VistA HL"
^XTMP("XPDT",7816,"KRN",101,4257,1,9,0)="package. The routing logic uses the value of the parameter passed into"
^XTMP("XPDT",7816,"KRN",101,4257,1,10,0)="the router to determine which Laboratory package subscript should be"
^XTMP("XPDT",7816,"KRN",101,4257,1,11,0)="sent to the HDR. "
^XTMP("XPDT",7816,"KRN",101,4257,1,12,0)=" "
^XTMP("XPDT",7816,"KRN",101,4257,1,13,0)="The following subscripts are supported by the event:"
^XTMP("XPDT",7816,"KRN",101,4257,1,14,0)="   ""CH"", ""MI"", ""SP"", ""CY"", ""EM""."
^XTMP("XPDT",7816,"KRN",101,4257,1,15,0)=" "
^XTMP("XPDT",7816,"KRN",101,4257,1,16,0)="Examples:"
^XTMP("XPDT",7816,"KRN",101,4257,1,17,0)=" "
^XTMP("XPDT",7816,"KRN",101,4257,1,18,0)="ROUTING LOGIC: D RTR^LA7HDR(""CH;"") will only send to HDR results"
^XTMP("XPDT",7816,"KRN",101,4257,1,19,0)=" associated with Laboratory ""CH"" subscript."
^XTMP("XPDT",7816,"KRN",101,4257,1,20,0)=" "
^XTMP("XPDT",7816,"KRN",101,4257,1,21,0)="ROUTING LOGIC: D RTR^LA7HDR(""MI;"") will only send to HDR results"
^XTMP("XPDT",7816,"KRN",101,4257,1,22,0)=" associated with Laboratory ""MI"" subscript."
^XTMP("XPDT",7816,"KRN",101,4257,1,23,0)=" "
^XTMP("XPDT",7816,"KRN",101,4257,1,24,0)="ROUTING LOGIC: D RTR^LA7HDR(""CH;MI;"") will only send to HDR"
^XTMP("XPDT",7816,"KRN",101,4257,1,25,0)=" results associated with Laboratory ""CH"", and ""MI"" subscripts."
^XTMP("XPDT",7816,"KRN",101,4257,1,26,0)=" "
^XTMP("XPDT",7816,"KRN",101,4257,1,27,0)="ROUTING LOGIC: D RTR^LA7HDR(""CH;MI;SP;"") will only send to HDR"
^XTMP("XPDT",7816,"KRN",101,4257,1,28,0)=" results associated with Laboratory ""CH"", ""MI"", and ""SP"" subscripts."
^XTMP("XPDT",7816,"KRN",101,4257,1,29,0)=" "
^XTMP("XPDT",7816,"KRN",101,4257,1,30,0)="ROUTING LOGIC: D RTR^LA7HDR(""CH;MI;SP;CY;EM;"") will send to HDR"
^XTMP("XPDT",7816,"KRN",101,4257,1,31,0)=" results associated with all Laboratory subscripts currently supported."
^XTMP("XPDT",7816,"KRN",101,4257,1,32,0)=" "
^XTMP("XPDT",7816,"KRN",101,4257,1,33,0)="Note: The order of the subscripts listed in the input parameter is not"
^XTMP("XPDT",7816,"KRN",101,4257,1,34,0)="significant. Separating the subscripts using the "";"" character is"
^XTMP("XPDT",7816,"KRN",101,4257,1,35,0)="significant. "
^XTMP("XPDT",7816,"KRN",101,4257,99)="61473,34094"
^XTMP("XPDT",7816,"KRN",101,4257,770)="^LA7HDR^^R01^^^^^^^ACK"
^XTMP("XPDT",7816,"KRN",101,4257,773)="1^1"
^XTMP("XPDT",7816,"KRN",101,4257,774)=";D RTR^LA7HDR(""CH;"")"
^XTMP("XPDT",7816,"KRN",101,4258,-1)="0^1"
^XTMP("XPDT",7816,"KRN",101,4258,0)="LA7 LAB RESULTS ACTION^Lab process results for HL7 messaging^^A^^^^^^^^AUTOMATED LAB INSTRUMENTS"
^XTMP("XPDT",7816,"KRN",101,4258,1,0)="^101.06^5^5^3090120^^^"
^XTMP("XPDT",7816,"KRN",101,4258,1,1,0)="Action protocol to setup sending lab results to HL7 message subscribers"
^XTMP("XPDT",7816,"KRN",101,4258,1,2,0)="via protocol LA7 LAB RESULTS AVAILABLE (EVN) - Lab Results Available Event."
^XTMP("XPDT",7816,"KRN",101,4258,1,3,0)="This protocol should be attached to protocol LAB RESULTS => EXTERNAL PACKAGE"
^XTMP("XPDT",7816,"KRN",101,4258,1,4,0)="[LR7O ALL EVSEND RESULTS] which is an extended action protocol triggered"
^XTMP("XPDT",7816,"KRN",101,4258,1,5,0)="by the lab result verification process."
^XTMP("XPDT",7816,"KRN",101,4258,10,0)="^101.01PA^^0"
^XTMP("XPDT",7816,"KRN",101,4258,20)="D QUEUE^LA7HDR"
^XTMP("XPDT",7816,"KRN",101,4258,99)="61473,34094"
^XTMP("XPDT",7816,"KRN",771,184,-1)="0^2"
^XTMP("XPDT",7816,"KRN",771,184,0)="LA7HDR^a^^^^^"
^XTMP("XPDT",7816,"MBREQ")="0"
^XTMP("XPDT",7816,"ORD",14,771)="771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)"
^XTMP("XPDT",7816,"ORD",14,771,0)="HL7 APPLICATION PARAMETER"
^XTMP("XPDT",7816,"ORD",15,101)="101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA"
^XTMP("XPDT",7816,"ORD",15,101,0)="PROTOCOL"
^XTMP("XPDT",7816,"ORD",18,19)="19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA"
^XTMP("XPDT",7816,"ORD",18,19,0)="OPTION"
^XTMP("XPDT",7816,"PKG",11,-1)="1^1"
^XTMP("XPDT",7816,"PKG",11,0)="AUTOMATED LAB INSTRUMENTS^LA^Lab Auto-Instrument Package"
^XTMP("XPDT",7816,"PKG",11,22,0)="^9.49I^1^1"
^XTMP("XPDT",7816,"PKG",11,22,1,0)="5.2^3051119^2960605"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,0)="68^3091214^1"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,0)="^^727^727^3091214"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,1,0)="Blood Bank Clearance"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,2,0)="===================="
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,3,0)="VISTA Laboratory Package patch LA*5.2*68 contains changes to software"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,4,0)="controlled by VHA DIRECTIVE 99-053, titled VISTA BLOOD BANK SOFTWARE."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,5,0)="Changes include: "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,6,0)="    New style indexes have been created for the following sub-files"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,7,0)="    of the LAB DATA file (#63):"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,8,0)="        ELECTRON MICROSCOPY (#63.02)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,9,0)="        SURGICAL PATHOLOGY (#63.08)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,10,0)="        CYTOPATHOLOGY (#63.09)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,11,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,12,0)="All of the above changes have been reviewed by the VISTA Blood Bank"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,13,0)="Developer and found to have no impact on the VISTA BLOOD BANK SOFTWARE"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,14,0)="control functions."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,15,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,16,0)="RISK ANALYSIS:   Changes made by patch LA*5.2*68 have no effect on Blood"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,17,0)="Bank software functionality, therefore RISK is none."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,18,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,19,0)="EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS:  Patch LA*5.2*68 does not"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,20,0)="alter or modify any software design safeguards or safety critical elements"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,21,0)="functions."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,22,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,23,0)="POTENTIAL IMPACT ON SITES:  This patch contains changes to 0 routines and"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,24,0)="1 file identified in Veterans Health Administration (VHA) Directive 99-053,"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,25,0)="group B listing. The changes have no effect on Blood Bank functionality or"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,26,0)="medical device control functions. There is no adverse potential to sites."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,27,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,28,0)="========================================"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,29,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,30,0)="This patch supports the VA Health Data Repository (HDR) effort,"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,31,0)="allowing changes to LAB DATA file (#63) to be transmitted to the HDR "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,32,0)="via a VistA Laboratory HL7 Result (ORU) message."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,33,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,34,0)="Additionally, it provides the capability for the transmission of the HL7"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,35,0)="ORU message containing patient laboratory results to subscribers of the HL7"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,36,0)="event protocol LA7 LAB RESULTS AVAILABLE (EVN) as these results are made"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,37,0)="available within the Laboratory package. The following subscripts are"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,38,0)="supported by the event: ""CH"", ""MI"", ""SP"", ""CY"", ""EM"". See post-install"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,39,0)="instructions for enabling this capability."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,40,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,41,0)="  "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,42,0)="****************************************************************************"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,43,0)="  "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,44,0)="Patch LA*5.2*68 allows the HL7 ORU message containing patient laboratory "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,45,0)="results to be transmitted to the subscriber, LA7 LAB RESULTS TO HDR "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,46,0)="(SUB). This subscriber protocol is used to transmit laboratory results to "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,47,0)="the VA HDR."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,48,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,49,0)="The HDR Team will contact the Chief of IRM at each site to set up the "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,50,0)="coordination of lab extraction (LA*5.2*68) and the activation of the "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,51,0)="subscriber (HDR)."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,52,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,53,0)="The coordination of extracting existing laboratory data (HDR historical) "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,54,0)="and the configuration of the LA7 LAB RESULTS TO HDR (SUB) subscriber will "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,55,0)="be started at the same time. This will ensure that there is an overlap of "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,56,0)="laboratory results between the real time extraction of lab data and the "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,57,0)="historical extraction of lab data."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,58,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,59,0)="If a VA site activates the LA7 LAB RESULTS TO HDR (SUB) subscriber before "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,60,0)="the historical extraction of existing laboratory data, the real time "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,61,0)="extraction of lab data at the VA site may not be synchronized with the "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,62,0)="HDR data."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,63,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,64,0)="If you have questions regarding installation or implementation,"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,65,0)="contact the HDR Project Office."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,66,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,67,0)="Once the HDR Project Office confirms that installation and implementation "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,68,0)="was accomplished successfully, you must log a Remedy ticket for any"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,69,0)="subsequent problems encountered."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,70,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,71,0)="*****************************************************************************"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,72,0)="  "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,73,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,74,0)="1. The following protocols are added to the PROTOCOL file (#101)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,75,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,76,0)="NAME: LA7 LAB RESULTS ACTION"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,77,0)="  ITEM TEXT: Lab process results for HL7 messaging"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,78,0)="  TYPE: action                          "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,79,0)="  PACKAGE: AUTOMATED LAB INSTRUMENTS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,80,0)=" DESCRIPTION:   Action protocol to setup sending lab results to HL7 message"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,81,0)=" subscribers via protocol LA7 LAB RESULTS AVAILABLE (EVN) - Lab Results"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,82,0)=" Available Event.  This protocol should be attached to protocol LAB RESULTS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,83,0)=" => EXTERNAL PACKAGE [LR7O ALL EVSEND RESULTS] which is an extended action"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,84,0)=" protocol triggered by the lab result verification process."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,85,0)="  ENTRY ACTION: D QUEUE^LA7HDR          TIMESTAMP: 59056,40855"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,86,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,87,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,88,0)="NAME: LA7 LAB RESULTS AVAILABLE (EVN)  ITEM TEXT: Lab Results Available Event"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,89,0)="  TYPE: event driver                   "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,90,0)=" DESCRIPTION: A VistA Laboratory package HL7 ORU result message is created"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,91,0)=" and sent by the HL package for transmission to any subscribers of event"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,92,0)=" protocol LA7 LAB  RESULTS AVAILABLE (EVN)."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,93,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,94,0)=" It provides the capability for the generation of a Laboratory HL7 ORU"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,95,0)=" message containing patient laboratory results to subscribers of the HL7"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,96,0)=" event protocol LA7 LAB RESULTS AVAILABLE (EVN) as these results are made"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,97,0)=" available within the Laboratory package."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,98,0)="  "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,99,0)=" The following subscripts are supported by the event:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,100,0)="   ""CH"", ""MI"", ""SP"", ""CY"", ""EM""."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,101,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,102,0)="  TIMESTAMP: 59725,36770                SENDING APPLICATION: LA7LAB"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,103,0)="  TRANSACTION MESSAGE TYPE: ORU         EVENT TYPE: R01"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,104,0)="  MESSAGE STRUCTURE: ORU_R01            ACCEPT ACK CODE: AL"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,105,0)="  APPLICATION ACK TYPE: NE              VERSION ID: 2.4"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,106,0)="  RESPONSE PROCESSING ROUTINE: D ACK^LA7VHL"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,107,0)="SUBSCRIBERS: LA7 LAB RESULTS TO HDR (SUB)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,108,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,109,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,110,0)="NAME: LA7 LAB RESULTS TO HDR (SUB)      ITEM TEXT: Send Lab Results to HDR"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,111,0)="  TYPE: subscriber                      "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,112,0)=" DESCRIPTION:   This protocol should be attached to the HL7 event protocol"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,113,0)=" LA7 LAB RESULTS AVAILABLE (EVN). See this protocol for further information."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,114,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,115,0)=" This subscriber protocol is used by the Laboratory package to indicate to"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,116,0)=" the HL package to send laboratory results to the VA Health Data Repository"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,117,0)=" (HDR)."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,118,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,119,0)=" It utilizes the ""Router"" Subscriber Protocol supported by the VistA HL"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,120,0)=" package. The routing logic uses the value of the parameter passed into the"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,121,0)=" router to determine which Laboratory package subscript should be sent to"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,122,0)=" the HDR."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,123,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,124,0)=" Examples:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,125,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,126,0)=" ROUTING LOGIC: D RTR^LA7HDR(""CH;"") will only send to HDR-IMS results"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,127,0)=" associated with Laboratory ""CH"" subscript."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,128,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,129,0)=" ROUTING LOGIC: D RTR^LA7HDR(""MI;"") will only send to HDR-IMS results"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,130,0)=" associated with Laboratory ""MI"" subscript."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,131,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,132,0)=" ROUTING LOGIC: D RTR^LA7HDR(""CH;MI;SP;"") will only send to HDR-IMS results"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,133,0)=" associated with Laboratory ""CH"", ""MI"", and ""SP"" subscripts."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,134,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,135,0)="  TIMESTAMP: 59056,40125                RECEIVING APPLICATION: LA7HDR"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,136,0)="  EVENT TYPE: R01                       LOGICAL LINK: VDEFVIE4"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,137,0)="  RESPONSE MESSAGE TYPE: ACK            SENDING FACILITY REQUIRED?: YES"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,138,0)="  RECEIVING FACILITY REQUIRED?: YES     ROUTING LOGIC: D RTR^LA7HDR(""CH;"")"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,139,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,140,0)=" NOTE: This subscriber protocol is distributed with the ROUTING LOGIC"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,141,0)="       disabled. See post-installation instructions for guidance to"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,142,0)="       enable the protocol."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,143,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,144,0)="2. The following option is added to the OPTION file (#19)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,145,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,146,0)="NAME: LA7 HDR RECOVER    MENU TEXT: Recover/Transmit Lab HDR Result"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,147,0)="Messages"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,148,0)=" TYPE: run routine                                      "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,149,0)=" PACKAGE: AUTOMATED LAB INSTRUMENTS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,150,0)=" DESCRIPTION:   Option to recover from failed Lab HDR ORU Result message "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,151,0)="generation and/or transmission failure. This option allows the user to"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,152,0)="select those VistA Laboratory accessions that need to be transmitted to"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,153,0)="the VA HDR and other subscribers of the VistA Laboratory Result Available"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,154,0)="HL7 message capability via the protocol Lab Results Available Event [LA7"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,155,0)="LAB RESULTS AVAILABLE (EVN)]."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,156,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,157,0)="If the original message generation/transmission failed due to system or "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,158,0)="communication problems then using this option will allow the generation of"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,159,0)="new HL7 messages with the results associated with the selected "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,160,0)="accessions.  Accessions can be selected using the human-readable accession"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,161,0)="designation (area abbreviation modified date accession number - ""CH 1225"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,162,0)="100"") or the accession's associated 10 character unique identifier (UID)."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,163,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,164,0)=" ROUTINE: RECOVER^LA7HDR "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,165,0)=" UPPERCASE MENU TEXT: RECOVER/TRANSMIT LAB HDR RESUL"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,166,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,167,0)="This option is assigned to the Lab liaison menu option [LRLIAISON] and"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,168,0)="can be assigned to other uses as needed that support/monitor message "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,169,0)="transmission to the VA HDR and other subscribers."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,170,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,171,0)="3. The LA7HDR routine, if the configuration LA7HDR in LA7 MESSAGE"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,172,0)="PARAMETER file (#62.48) has an active status, queues the record for"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,173,0)="transmission to the HDR via a HL7 ORU result message which is transmitted"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,174,0)="by the HL package to any subscribers of event protocol LA7 LAB RESULTS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,175,0)="AVAILABLE (EVN) in addition to the HDR subscriber LA7 LAB RESULTS TO HDR"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,176,0)="(SUB)."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,177,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,178,0)="   The LA7 LAB RESULTS TO HDR (SUB) subscriber protocol uses the logical"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,179,0)="link VDEFVIE4. This is a router subscriber protocol which determines"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,180,0)="which Lab HL7 messages are sent to the HDR. See protocol description"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,181,0)="for further information."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,182,0)="  "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,183,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,184,0)="4. Anatomic Pathology is not ""CPRS-aware"" and is unable to notify CPRS of"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,185,0)="release of anatomic pathology results. HDR will be notified of "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,186,0)="availability of anatomic pathology results via three new-style"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,187,0)="cross-references in LAB DATA file (#63). These indexes will also trigger"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,188,0)="generation of the Lab HL7 ORU message if this capability has been enabled."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,189,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,190,0)="   The three new cross-references are:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,191,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,192,0)="Subfile #63.02"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,193,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,194,0)="  New-Style Indexes:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,195,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,196,0)="  AC (#98)    FIELD    MUMPS        ACTION"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,197,0)="      Short Descr:  Notify HDR and others that this report is available."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,198,0)="      Description:  This MUMPS cross-reference triggers the sending of this"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,199,0)="                    report to the Health Data Repository (HDR) and other"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,200,0)="                    subscribers when electron microscopy results are "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,201,0)="                    released."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,202,0)="        Set Logic:  D APQ^LA7HDR(DA(1),""EM"",DA)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,203,0)="       Kill Logic:  Q"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,204,0)="             X(1):  REPORT RELEASE DATE (63.02,.11) (Subscr 1) (forwards)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,205,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,206,0)="Subfile #63.08"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,207,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,208,0)="  New-Style Indexes:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,209,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,210,0)="  AD (#95)    FIELD    MUMPS        ACTION"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,211,0)="      Short Descr:  Notify HDR and others that this report is available."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,212,0)="      Description:  This MUMPS cross-reference triggers the sending of this"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,213,0)="                    report to the Health Data Repository (HDR) and other"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,214,0)="                    subscribers when surgical pathology results are "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,215,0)="                    released."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,216,0)="        Set Logic:  D APQ^LA7HDR(DA(1),""SP"",DA)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,217,0)="       Kill Logic:  Q"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,218,0)="             X(1):  REPORT RELEASE DATE/TIME (63.08,.11) (Subscr 1)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,219,0)="                    (forwards)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,220,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,221,0)="Subfile #63.09"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,222,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,223,0)="  New-Style Indexes:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,224,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,225,0)="  AD (#96)    FIELD    MUMPS        ACTION"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,226,0)="      Short Descr:  Notify HDR and others that this report is available."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,227,0)="      Description:  This MUMPS cross-reference triggers the sending of this"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,228,0)="                    report to the Health Data Repository (HDR) and other"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,229,0)="                    subscribers when cytology results are released."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,230,0)="        Set Logic:  D APQ^LA7HDR(DA(1),""CY"",DA)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,231,0)="       Kill Logic:  Q"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,232,0)="             X(1):  REPORT RELEASE DATE/TIME  (63.09,.11)  (Subscr 1)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,233,0)="                    (forwards) "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,234,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,235,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,236,0)="5. Microbiology results. The current Laboratory package does not support"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,237,0)="LOINC encoding of microbiology results. A default encoding is enabled"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,238,0)="to LOINC encode standard microbiology tests and antibiotics."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,239,0)="LOINC codes valid as of version 2.14."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,240,0)="  "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,241,0)="Default mapping of NLT/LOINC codes to standard fields within the "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,242,0)="MICROBIOLOGY (#5) multiple of LAB DATA file (#63):"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,243,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,244,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,245,0)=" Test                               Order NLT     Result NLT     LOINC Code"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,246,0)=" Bacteriology report (#11)          87993.0000"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,247,0)=" Gram stain (#11.6)                 87993.0000    87754.0000     664-3"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,248,0)=" Bacteriology organism (#12)        87993.0000    87570.0000     11475-1"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,249,0)=" Bacteria colony count (#12,1)                    87719.0000     564-5"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,250,0)=" Parasite report (#14)              87505.0000"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,251,0)=" Parasite organism (#16)            87505.0000    87576.0000     17784-0"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,252,0)=" Mycology report (#18)              87994.0000"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,253,0)=" Fungal organism (#20)              87994.0000    87578.0000     580-1"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,254,0)=" Fungal colony count (#20,1)        87994.0000    87723.0000     19101-5"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,255,0)=" Mycobacterium report (#22)         87995.0000"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,256,0)=" Acid Fast stain (#24)              87995.0000    87756.0000     11545-1"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,257,0)=" Acid Fast stain quantity (#25)     87995.0000    87583.0000     11545-1"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,258,0)=" Mycobacterium organism (#26)       87995.0000    87589.0000     543-9"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,259,0)=" Mycobacterium colony count (#26,1) 87995.0000    87719.0000     564-5"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,260,0)=" Virology report (#33)              87996.0000"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,261,0)=" Viral agent (#36)                  87996.0000    87590.0000     6584-7"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,262,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,263,0)=" Bacteriology or mycobacterium (TB) organism's susceptibilities -"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,264,0)="  is based on local site's mapping of NATIONAL VA LAB CODE field (#64)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,265,0)="  in ANTIMICROBIAL SUSCEPTIBILITY file (#62.06) and the related default"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,266,0)="  LOINC code associated with this VA NLT code. Use option Map/Unmap "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,267,0)="  Antimicrobial Default LOINC Code [LR LOINC MAP ANTIMICROBIAL] to"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,268,0)="  configure the default LOINC code for each antibiotic."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,269,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,270,0)="6. Surgical Pathology results. The current Laboratory package does not"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,271,0)="support LOINC encoding of surgical pathology results."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,272,0)="LOINC codes valid as of version 2.14."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,273,0)="  "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,274,0)="Default mapping of NLT/LOINC codes to standard fields within the "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,275,0)="SURGICAL PATHOLOGY (#8) multiple of LAB DATA file (#63):"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,276,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,277,0)=" Test                            Order NLT     Result NLT     LOINC Code"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,278,0)=" Specimen (#.012)                88515.0000    88539.0000     22633-2"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,279,0)=" Brief clinical history (#.013)  88515.0000    88542.0000     22636-5"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,280,0)=" Preoperative diagnosis (#.014)  88515.0000    88544.0000     10219-4"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,281,0)=" Operative findings (#.015)      88515.0000    88546.0000     10215-2"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,282,0)=" Postoperative diagnosis (#.016) 88515.0000    88547.0000     10218-6"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,283,0)=" Gross description (#1)          88515.0000    88549.0000     22634-0"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,284,0)=" Microscopic description (#1.1)  88515.0000    88563.0000     22635-7"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,285,0)=" Frozen section (#1.3)           88515.0000    88569.0000     22635-7"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,286,0)=" Surgical path diagnosis (#1.4)  88515.0000    88571.0000     22637-3"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,287,0)=" Supplementary report (#1.2)     88515.0000    88589.0000     22639-9"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,288,0)=" Specimen weight (#2)            88515.0000    81233.0000     3154-2"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,289,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,290,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,291,0)="7. Cytology results. The current Laboratory package does not support"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,292,0)="LOINC encoding of cytology results."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,293,0)="LOINC codes valid as of version 2.14."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,294,0)="  "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,295,0)="Default mapping of NLT/LOINC codes to standard fields within the "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,296,0)="CYTOPATHOLOGY (#9) multiple of LAB DATA file (#63):"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,297,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,298,0)=" Test                            Order NLT     Result NLT     LOINC Code"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,299,0)=" Specimens (#.012)               88593.0000    88539.0000     22633-2"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,300,0)=" Brief clinical history (#.013)  88593.0000    88542.0000     22636-5"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,301,0)=" Preoperative diagnosis (#.014)  88593.0000    88544.0000     10219-4"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,302,0)=" Operative findings (#.015)      88593.0000    88542.0000     10215-2"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,303,0)=" Postoperative diagnosis (#.016) 88593.0000    88547.0000     10218-6"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,304,0)=" Gross description (#1)          88593.0000    88549.0000     22634-0"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,305,0)=" Microscopic examination (#1.1)  88593.0000    88563.0000     22635-7"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,306,0)=" Supplementary report (#1.2)     88593.0000    88589.0000     22639-9"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,307,0)=" Cytopathlogy diagnosis (#1.4)   88593.0000    88571.0000     22637-3"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,308,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,309,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,310,0)="8. Electron microscopy results. The current Laboratory package does not"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,311,0)="support LOINC encoding of electron microscopy."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,312,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,313,0)="Default mapping of NLT/LOINC codes to standard fields within the "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,314,0)="EM (#2) multiple of LAB DATA file (#63):"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,315,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,316,0)=" Test                            Order NLT     Result NLT     LOINC Code"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,317,0)=" Specimens (#.012)               88597.0000    88057.0000     22633-2"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,318,0)=" Brief clinical history (#.013)  88597.0000    88542.0000     22636-5"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,319,0)=" Preoperative diagnosis (#.014)  88597.0000    88544.0000     10219-4"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,320,0)=" Operative findings (#.015)      88597.0000    88542.0000     10215-2"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,321,0)=" Postoperative diagnosis (#.016) 88597.0000    88547.0000     10218-6"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,322,0)=" Gross description (#1)          88597.0000    88549.0000     22634-0"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,323,0)=" Microscopic examination (#1.1)  88597.0000    88563.0000     22635-7"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,324,0)=" Supplementary report (#1.2)     88597.0000    88589.0000     22639-9"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,325,0)=" EM diagnosis (#1.4)             88597.0000    88571.0000     22637-3"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,326,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,327,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,328,0)="9. It corrects a defect identified during patch development with"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,329,0)="processing input parameters for the GCPR^LA7QRY API. If the input"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,330,0)="parameter LA7SC specified specific subscripts to search then the API"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,331,0)="would search those subscripts for any search code even when specific "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,332,0)="search codes were passed to the API in the LA7SC array."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,333,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,334,0)="10. Converts several FileMan DBS calls on INSTITUTION file (#4) to using"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,335,0)="supported API's $$NS^XUAF4 and $$STA^XUAF4."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,336,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,337,0)="11. It corrects a defect identified during patch development with"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,338,0)="processing input parameters for the GCPR^LA7QRY API. If the input"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,339,0)="parameters LA7SDT and LA7EDT specified specific results available date"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,340,0)="range the API could return anatomic pathology results which have not"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,341,0)="been released. This API has been corrected to check the REPORT RELEASE"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,342,0)="DATE field (#.11) for subscripts ""CY"", EM"", ""SP""."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,343,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,344,0)="12. Remedy ticket HD0000000096207 reported a problem with the error code"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,345,0)="returned by the Lab API LA7QRY. A FileMan DBS error code was erroroneously"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,346,0)="being returned to the calling application. Routines LA7QRY, LA7QRY1, and "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,347,0)="LA7QRY2 has been modified to use a different name spaced variable LA7QERR"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,348,0)="to return to the calling application any error conditions. Additionally,"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,349,0)="routine LA7VOBX1 has been modified to use another name spaced variable"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,350,0)="LA7DDERR to handle FileMan DBS error conditions related to FileMan data"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,351,0)="dictionary calls."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,352,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,353,0)="13. It corrects a defect identified by MyHeatheVet regarding encoding of "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,354,0)="the following fields in the OBR segment relating to anatomic pathology "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,355,0)="reports:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,356,0)=" OBR-32 - Principal result interpreter"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,357,0)=" OBR-33 - Assistant result interpreter"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,358,0)=" OBR-34 - Technician"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,359,0)=" OBR-35 - Transcriptionist"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,360,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,361,0)="The name component of these fields was being encoded with the wrong HL7"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,362,0)="delimiter (component separator). The name component will be encoded with "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,363,0)="the subcomponent separator per the HL7 standard."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,364,0)="  "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,365,0)="14. To integrate the VistA-Office EHR with the regular VistA system as"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,366,0)=" well as adding functionality also available in the Indian Health Services"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,367,0)=" system, the GQPR^LA7QRY API has been modified to allow for VistA-Office"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,368,0)=" EHR to use data specifically geared toward clinical operations, whether"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,369,0)=" in a hospital or a standalone clinic. The use of an Electronic"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,370,0)=" Health Record number as opposed to a SSN for patient identification is"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,371,0)=" supported as an identifier accepted as input to this API."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,372,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,373,0)=" The entry point GCPR^LA7QRY remains unchanged. However, the parameter"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,374,0)=" used to pass the patient identifier should contain a 2nd piece indicating"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,375,0)=" the type of identifier contained in the 1st piece."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,376,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,377,0)=" It supports the following types of patient identifiers"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,378,0)="   SS = Social Security number"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,379,0)="   PI = VA MPI Integration Control Number"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,380,0)="   MR = medical record number of patient in file PATIENT/IHS (#9000001)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,381,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,382,0)=" To regular VistA users this modification will not be seen."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,383,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,384,0)="15. To support HDR-Historical which uses the GRPR^LA7QRY API to extract"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,385,0)="historical laboratory test results, the input parameter LA7SC to GCPR^LA7QRY"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,386,0)="supports a 2nd piece. When the 2nd piece of input parameter LA7SC equals"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,387,0)="1 the API will return results encoded using VUID's when available."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,388,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,389,0)="16. Remedy tickets HD0000000141922/HD0000000148089 reported a problem with"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,390,0)="failure of generation of MailMan bulletin LA7 ORDER STATUS CHANGED at"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,391,0)="collection laboratory facility. Routine LA7VMSG1 changed to set interface"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,392,0)="type to set flag in Lab HL7 ORU message indicating an order status change"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,393,0)="to trigger bulletin generation at collecting site."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,394,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,395,0)="  "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,396,0)="ASSOCIATED E3R"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,397,0)="--------------"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,398,0)=" None"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,399,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,400,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,401,0)="ASSOCIATED REMEDY"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,402,0)="-----------------"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,403,0)=" HD0000000096207"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,404,0)=" HD0000000141922"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,405,0)=" HD0000000148089"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,406,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,407,0)="TEST SITES"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,408,0)="----------"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,409,0)=" Atlanta VAMC"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,410,0)=" Biloxi VAMC"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,411,0)=" Boston HCS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,412,0)=" El Paso VAMC"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,413,0)=" Houston VAMC"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,414,0)=" Milwaukee VAMC"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,415,0)=" North CHhicago VAMC"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,416,0)=" Northhampton VAMC"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,417,0)=" Palo Alto HCS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,418,0)=" Philadelphia VAMC"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,419,0)=" Pittsburgh HCS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,420,0)=" Puget Sound HCS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,421,0)=" Salt Lake City VAMC"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,422,0)=" South Texas HCS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,423,0)=" VA Greater Los Angeles HCS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,424,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,425,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,426,0)="INSTALLATION INSTRUCTIONS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,427,0)="========================="
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,428,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,429,0)="  The install time for this patch is less than 5 minute. This patch"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,430,0)="  can be installed when Laboratory users are on the system."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,431,0)="  Suggested time to install: non-peak requirement hours."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,432,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,433,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,434,0)="NOTE: Kernel patches must be current on the target system to avoid"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,435,0)="      problems loading and/or installing this patch."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,436,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,437,0)="      Patch installation needs to be coordinated with the Laboratory"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,438,0)="      Information Manager (LIM/ADPAC)."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,439,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,440,0)=" 1.   LOAD TRANSPORT GLOBAL"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,441,0)="      ---------------------------------------"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,442,0)="      Choose the PackMan message containing this patch and invoke the"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,443,0)="      INSTALL/CHECK   MESSAGE PackMan option. "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,444,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,445,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,446,0)=" 2.   START UP KIDS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,447,0)="      Start up the Kernel Installation and distribution System"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,448,0)="      Menu [XPD MAIN]:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,449,0)="              Edits and Distribution ..."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,450,0)="                           Utilities ..."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,451,0)="                         Installation ..."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,452,0)="      "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,453,0)="     Select Kernel Installation & Distribution System Option: Installation"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,454,0)="                                                              ----"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,455,0)="                1      Load a Distribution"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,456,0)="                2      Verify Checksums in Transport Global"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,457,0)="                3      Print Transport Global"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,458,0)="                4      Compare Transport Global to Current System"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,459,0)="                5      Backup a Transport Global"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,460,0)="                6      Install Package(s)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,461,0)="                       Restart Install of Package(s)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,462,0)="                       Unload a Distribution"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,463,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,464,0)="      Select Installation Option:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,465,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,466,0)=" 3.   Select Installation Option:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,467,0)="      -------------------------------"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,468,0)="      NOTE:  The following are OPTIONAL - (When prompted for the"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,469,0)="      INSTALL NAME, enter LA*5.2*68):"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,470,0)="      a.  Backup a Transport Global - This option will create a"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,471,0)="          backup message of any routines exported with this patch."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,472,0)="          It will not backup any other changes such as DD's or templates."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,473,0)="      b.  Compare Transport Global to Current System - This option"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,474,0)="          will allow you to view all changes that will be made when this"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,475,0)="          patch is installed. It compares all components of this patch"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,476,0)="          (routines, DD's, templates, etc.)."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,477,0)="      c.  Verify Checksums in Transport Global - This option will"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,478,0)="          allow you to ensure the integrity of the routines that are in"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,479,0)="          the transport global."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,480,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,481,0)=" 4.   Select Installation Option:  Install Package(s)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,482,0)="                                   ------------------"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,483,0)="      **This is the step to start the installation of this KIDS patch:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,484,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,485,0)="      a.  Choose the Install Package(s) option to start the patch install."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,486,0)="          (When prompted for the INSTALL NAME, enter LA*5.2*68.)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,487,0)="      b.  When prompted 'Want KIDS to INHIBIT LOGONs during the install?"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,488,0)="          NO//' answer NO (unless otherwise indicated)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,489,0)="      c.  When prompted 'Want to DISABLE Scheduled Options, Menu Options,"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,490,0)="          and Protocols? NO//' answer NO (unless otherwise indicated)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,491,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,492,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,493,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,494,0)=" Note: Routine LA68 will be deleted after successful patch installation."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,495,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,496,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,497,0)="POST-INSTALLATION INSTRUCTIONS:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,498,0)="==============================="
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,499,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,500,0)="***************************************************************************"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,501,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,502,0)="After the installation of Patch LA*5.2*68, do not activate the LA7 LAB "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,503,0)="RESULTS TO HDR (SUB) subscriber protocol until contacted by the HDR team"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,504,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,505,0)="***************************************************************************"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,506,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,507,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,508,0)="NOTE: Use the following steps only when activating the transmission of"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,509,0)="laboratory data to the VA HDR and/or interfacing to a Commercial Off the "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,510,0)="Shelf System (COTS) or other VistA subscriber. No further action is"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,511,0)="required, if there is no requirement to activate this interface."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,512,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,513,0)=" To activate messaging to the VA HDR perform steps 1, 2, and 3."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,514,0)=" To activate messaging to COTS and other VistA subscribers"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,515,0)="    perform steps 1 and 4."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,516,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,517,0)="1. To utilize the building and transmission of HL7 Lab ORU result messages."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,518,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,519,0)="   Enable the configuration 'LA7HDR' in LA7 MESSAGE PARAMETER file"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,520,0)="   (#62.48). This is accomplished by setting the field STATUS (#2) to"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,521,0)="   'ACTIVE' using VA File Manager. Setting this field to 'INACTIVE' will"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,522,0)="   turn off generation of this Lab HL7 message."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,523,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,524,0)="   Select VA FileMan Option:  Enter or Edit File Entries"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,525,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,526,0)="   INPUT TO WHAT FILE: LA7 MESSAGE PARAMETER// 62.48  LA7 MESSAGE PARAMETER"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,527,0)="    EDIT WHICH FIELD: ALL// STATUS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,528,0)="    THEN EDIT FIELD:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,529,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,530,0)="   Select LA7 MESSAGE PARAMETER CONFIGURATION: LA7HDR"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,531,0)="   STATUS: INACTIVE// ACTIVE  ACTIVE"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,532,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,533,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,534,0)="2. Activation of transmission to HDR requires coordination with your"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,535,0)="   assigned HDR Implementation Manager (IM). Sites should not activate the"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,536,0)="   LA7 LAB RESULTS TO HDR (SUB) subscriber until notified by the HDR"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,537,0)="   team. The coordination of extractions of existing laboratory data will"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,538,0)="   be started at the same time the configuration of the LA7 LAB RESULTS TO"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,539,0)="   HDR (SUB) subscriber to ensure that there is an overlap of laboratory"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,540,0)="   results. This overlap is done to ensure all laboratory results are in"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,541,0)="   the HDR."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,542,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,543,0)=" a. Set up VDEFVIE4 link for Laboratory data transmission"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,544,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,545,0)="     Use the HL7 Main Menu, Filers option to look at the setup for "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,546,0)="     VDEFVIE3. "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,547,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,548,0)="     Copy down the IP and port number used for VDEFVIE3."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,549,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,550,0)="     Use the HL7 Main Menu, Filers option to edit VDEFVIE4.  "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,551,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,552,0)="     Enable auto startup and add the same IP and port numbers used for"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,553,0)="     VDEFVIE3."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,554,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,555,0)="     Use the HL7 Main Menu, Start/Stop Links option to start the VDEFVIE4"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,556,0)="     link."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,557,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,558,0)="     Use the HL7 Main Menu, Site Parameters option to select VDEF view"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,559,0)="     and add VDEFVIE4 to the view."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,560,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,561,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,562,0)=" b. To activate the interface to the VA HDR use Protocol Edit option"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,563,0)="   [HL EDIT INTERFACE] on the HL package Interface Developer Options"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,564,0)="   [HL MENU INTERFACE TK] menu option and edit protocol LA7 LAB RESULTS"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,565,0)="   TO HDR (SUB). Go to the second ScreenMan screen and edit the field"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,566,0)="   ROUTING LOGIC and remove the leading "";"" character and enter the"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,567,0)="   'save' command to save the changes to the protocol."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,568,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,569,0)="                          HL7 SUBSCRIBER                       PAGE 2 OF 2"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,570,0)="                         LA7 LAB RESULTS TO HDR (SUB)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,571,0)="---------------------------------------------------------------------------"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,572,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,573,0)="      RECEIVING APPLICATION: LA7HDR"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,574,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,575,0)="      RESPONSE MESSAGE TYPE: ACK                            EVENT TYPE: R01"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,576,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,577,0)=" SENDING FACILITY REQUIRED?: YES          RECEIVING FACILITY REQUIRED?: YES"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,578,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,579,0)="         SECURITY REQUIRED?:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,580,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,581,0)="               LOGICAL LINK: VDEFVIE4"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,582,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,583,0)=" PROCESSING RTN:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,584,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,585,0)="  ROUTING LOGIC: ;D RTR^LA7HDR(""CH;"")  <-- remove leading "";"" character"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,586,0)="____________________________________________________________________________"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,587,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,588,0)="COMMAND:                                     Press <PF1>H for help    Insert"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,589,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,590,0)="After the change the field should look like:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,591,0)="  ROUTING LOGIC: D RTR^LA7HDR(""CH;"")"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,592,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,593,0)="3. To transmit Lab HL7 ORU result messages to another system, i.e."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,594,0)="   Commercial Off the Shelf System (COTS)."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,595,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,596,0)=" a. Create a HL7 subscriber protocol as documented in HL7 Site Manager &"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,597,0)="    Developer Manual version 1.6*56"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,598,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,599,0)=" b. Attach this protocol as a subscriber to HL7 event protocol LA7 LAB"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,600,0)="    RESULTS AVAILABLE (EVN). Use Protocol Edit option [HL EDIT INTERFACE]"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,601,0)="    on the HL package Interface Developer Options [HL MENU INTERFACE TK]"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,602,0)="    menu option to add this subscriber."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,603,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,604,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,605,0)="4. Controlling message generation and transmission."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,606,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,607,0)="   Notify the HDR Project Office in the event that this interface is"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,608,0)="   deactivated and the interface to the HDR was previously activated"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,609,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,610,0)="   a. To turn off message building and transmission to ALL subscribers"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,611,0)="      of event protocol LA7 LAB RESULTS AVAILABLE (EVN)."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,612,0)="      Disable the configuration 'LA7HDR' in LA7 MESSAGE PARAMETER file"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,613,0)="      (#62.48). This is accomplished by setting the field STATUS (#2) to"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,614,0)="      'INACTIVE' using VA File Manager Enter or Edit File Entries [DIEDIT]."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,615,0)="      Setting this field to 'INACTIVE' will turn off generation of this Lab"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,616,0)="      HL7 message."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,617,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,618,0)="   b. To turn off message transmission to a specific subscriber."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,619,0)="      On the HL package, Interface Developer Options [HL MENU INTERFACE"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,620,0)="      TK] menu option, use the Protocol Edit [HL EDIT INTERFACE] option to"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,621,0)="      remove the related subscriber protocol from the event protocol LA7"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,622,0)="      LAB RESULTS AVAILABLE (EVN)."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,623,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,624,0)="      For the VA HDR, remove subscriber protocol LA7 LAB RESULTS TO HDR"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,625,0)="      (SUB)."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,626,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,627,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,628,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,629,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,630,0)="INSTALLATION EXAMPLE"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,631,0)="===================="
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,632,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,633,0)="Select Installation Option: 6  Install Package(s) "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,634,0)="Select INSTALL NAME: LA*5.2*68 Loaded from Distribution  2/4/05@10:21"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,635,0)="     => LA*5.2*68"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,636,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,637,0)="This Distribution was loaded on Feb 04, 2005@10:21 with header of"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,638,0)="   LA*5.2*68"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,639,0)="   It consisted of the following Install(s):"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,640,0)="      LA*5.2*68"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,641,0)="Checking Install for Package LA*5.2*68"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,642,0)="Will first run the Environment Check Routine, LA68"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,643,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,644,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,645,0)="                        --- Environment Check is Ok ---"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,646,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,647,0)="Install Questions for LA*5.2*68"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,648,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,649,0)="Incoming Files:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,650,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,651,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,652,0)="   62.48     LA7 MESSAGE PARAMETER  (including data)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,653,0)="Note:  You already have the 'LA7 MESSAGE PARAMETER' File."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,654,0)="I will OVERWRITE your data with mine."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,655,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,656,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,657,0)="   63        LAB DATA  (Partial Definition)"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,658,0)="Note:  You already have the 'LAB DATA' File."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,659,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,660,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,661,0)="Want KIDS to Rebuild Menu Trees Upon Completion of Install? YES//"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,662,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,663,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,664,0)="Want KIDS to INHIBIT LOGONs during the install? NO// NO"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,665,0)="Want to DISABLE Scheduled Options, Menu Options, and Protocols? NO// NO"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,666,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,667,0)="Enter the Device you want to print the Install messages."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,668,0)="You can queue the install by enter a 'Q' at the device prompt."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,669,0)="Enter a '^' to abort the install."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,670,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,671,0)="DEVICE: HOME//  TELNET VIRTUAL"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,672,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,673,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,674,0)=" Install Started for LA*5.2*68 :"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,675,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,676,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,677,0)="Build Distribution Date: Feb 04, 2005"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,678,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,679,0)=" Installing Routines:............."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,680,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,681,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,682,0)=" Running Pre-Install Routine: PRE^LA68."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,683,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,684,0)="               Sending install started alert to mail group G.LMI"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,685,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,686,0)="                          *** Pre install started ***"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,687,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,688,0)="                           --- No action required---"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,689,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,690,0)="                         *** Pre install completed ***"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,691,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,692,0)=" Installing Data Dictionaries: ..."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,693,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,694,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,695,0)=" Installing Data:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,696,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,697,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,698,0)=" Installing PACKAGE COMPONENTS:"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,699,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,700,0)=" Installing HL7 APPLICATION PARAMETER..."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,701,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,702,0)=" Installing PROTOCOL.."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,703,0)="  Located in the LA7 (LAB MESSAGING) namespace.."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,704,0)="  Located in the LA7 (LAB MESSAGING) namespace.."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,705,0)="  Located in the LA7 (LAB MESSAGING) namespace.."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,706,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,707,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,708,0)=" Running Post-Install Routine: POST^LA68."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,709,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,710,0)="                          *** Post install started ***"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,711,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,712,0)="          *** Clearing facility name for LA7LAB entry in file #771 ***"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,713,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,714,0)="                    *** Clearing facility name completed ***"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,715,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,716,0)="                         *** Post install completed ***"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,717,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,718,0)="              Sending install completion alert to mail group G.LMI"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,719,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,720,0)=" Updating Routine file......"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,721,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,722,0)=" Updating KIDS files......."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,723,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,724,0)=" LA*5.2*68 Installed."
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,725,0)="               Feb 04, 2005@10:21:55"
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,726,0)=" "
^XTMP("XPDT",7816,"PKG",11,22,1,"PAH",1,1,727,0)=" Install Message sent #xxxx"
^XTMP("XPDT",7816,"PRE")="LA68"
^XTMP("XPDT",7816,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7816,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7816,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7816,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7816,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7816,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7816,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7816,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7816,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7816,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7816,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7816,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7816,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7816,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7816,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7816,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7816,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7816,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7816,"QUES","XPM1","B")=""
^XTMP("XPDT",7816,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7816,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7816,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7816,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7816,"QUES","XPO1","B")="YES"
^XTMP("XPDT",7816,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7816,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7816,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7816,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7816,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7816,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7816,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7816,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7816,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7816,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7816,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7816,"RTN")="29"
^XTMP("XPDT",7816,"RTN","LA68")="0^^B17816218^n/a"
^XTMP("XPDT",7816,"RTN","LA68",1,0)="LA68 ;DALOI/JMC - LA*5.2*68 PATCH ENVIRONMENT CHECK ROUTINE ;July 28, 2008"
^XTMP("XPDT",7816,"RTN","LA68",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA68",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",4,0)=" ; Reference to PROTOCOL file (#101) supported by ICR #872"
^XTMP("XPDT",7816,"RTN","LA68",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",6,0)="EN ; Does not prevent loading of the transport global."
^XTMP("XPDT",7816,"RTN","LA68",7,0)=" ; Environment check is done only during the install."
^XTMP("XPDT",7816,"RTN","LA68",8,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA68",9,0)=" N XQA,XQAMSG"
^XTMP("XPDT",7816,"RTN","LA68",10,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",11,0)=" I '$G(XPDENV) D  Q"
^XTMP("XPDT",7816,"RTN","LA68",12,0)=" . S XQAMSG=""Transport global for patch ""_$G(XPDNM,""Unknown patch"")_"" loaded on ""_$$HTE^XLFDT($H),XQA(""G.LMI"")="""""
^XTMP("XPDT",7816,"RTN","LA68",13,0)=" . D SETUP^XQALERT"
^XTMP("XPDT",7816,"RTN","LA68",14,0)=" . D BMES^XPDUTL($$CJ^XLFSTR(""Sending transport global loaded alert to mail group G.LMI"",80))"
^XTMP("XPDT",7816,"RTN","LA68",15,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",16,0)=" S XQAMSG=""Installation of patch ""_$G(XPDNM,""Unknown patch"")_"" started on ""_$$HTE^XLFDT($H)"
^XTMP("XPDT",7816,"RTN","LA68",17,0)=" S XQA(""G.LMI"")="""""
^XTMP("XPDT",7816,"RTN","LA68",18,0)=" D SETUP^XQALERT"
^XTMP("XPDT",7816,"RTN","LA68",19,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",20,0)=" D CHECK"
^XTMP("XPDT",7816,"RTN","LA68",21,0)=" D EXIT"
^XTMP("XPDT",7816,"RTN","LA68",22,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA68",23,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",24,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",25,0)="CHECK ; Perform environment check"
^XTMP("XPDT",7816,"RTN","LA68",26,0)=" I $S('$G(IOM):1,'$G(IOSL):1,$G(U)'=""^"":1,1:0) D  Q"
^XTMP("XPDT",7816,"RTN","LA68",27,0)=" . D BMES^XPDUTL($$CJ^XLFSTR(""Terminal Device is not defined"",80))"
^XTMP("XPDT",7816,"RTN","LA68",28,0)=" . S XPDQUIT=2"
^XTMP("XPDT",7816,"RTN","LA68",29,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",30,0)=" I $S('$G(DUZ):1,$D(DUZ)[0:1,$D(DUZ(0))[0:1,1:0) D  Q"
^XTMP("XPDT",7816,"RTN","LA68",31,0)=" . D BMES^XPDUTL($$CJ^XLFSTR(""Please log in to set local DUZ... variables"",80))"
^XTMP("XPDT",7816,"RTN","LA68",32,0)=" . S XPDQUIT=2"
^XTMP("XPDT",7816,"RTN","LA68",33,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",34,0)=" I $P($$ACTIVE^XUSER(DUZ),""^"")'=1 D  Q"
^XTMP("XPDT",7816,"RTN","LA68",35,0)=" . D BMES^XPDUTL($$CJ^XLFSTR(""You are not a valid user on this system"",80))"
^XTMP("XPDT",7816,"RTN","LA68",36,0)=" . S XPDQUIT=2"
^XTMP("XPDT",7816,"RTN","LA68",37,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",38,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA68",39,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",40,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",41,0)="EXIT ;"
^XTMP("XPDT",7816,"RTN","LA68",42,0)=" I $G(XPDQUIT) D BMES^XPDUTL($$CJ^XLFSTR(""--- Install Environment Check FAILED ---"",80))"
^XTMP("XPDT",7816,"RTN","LA68",43,0)=" I '$G(XPDQUIT) D BMES^XPDUTL($$CJ^XLFSTR(""--- Environment Check is Ok ---"",80))"
^XTMP("XPDT",7816,"RTN","LA68",44,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA68",45,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",46,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",47,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",48,0)="PRE ; KIDS Pre install for LA*5.2*68"
^XTMP("XPDT",7816,"RTN","LA68",49,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",50,0)=" ; Save status of existing LA7HDR interface in #62.48 and #101"
^XTMP("XPDT",7816,"RTN","LA68",51,0)=" S LA7HDR=$O(^LAHM(62.48,""B"",""LA7HDR"",0))"
^XTMP("XPDT",7816,"RTN","LA68",52,0)=" I LA7HDR S LA7HDR(0)=$G(^LAHM(62.48,LA7HDR,0))"
^XTMP("XPDT",7816,"RTN","LA68",53,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",54,0)=" S LA7101=$O(^ORD(101,""B"",""LA7 LAB RESULTS TO HDR (SUB)"",0))"
^XTMP("XPDT",7816,"RTN","LA68",55,0)=" I LA7101 S LA7101(774)=$$GET1^DIQ(101,LA7101_"","",774)"
^XTMP("XPDT",7816,"RTN","LA68",56,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",57,0)=" D BMES^XPDUTL($$CJ^XLFSTR(""Sending install started alert to mail group G.LMI"",80))"
^XTMP("XPDT",7816,"RTN","LA68",58,0)=" D BMES^XPDUTL($$CJ^XLFSTR(""*** Pre install started ***"",80))"
^XTMP("XPDT",7816,"RTN","LA68",59,0)=" D BMES^XPDUTL($$CJ^XLFSTR(""--- No action required---"",80))"
^XTMP("XPDT",7816,"RTN","LA68",60,0)=" D BMES^XPDUTL($$CJ^XLFSTR(""*** Pre install completed ***"",80))"
^XTMP("XPDT",7816,"RTN","LA68",61,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",62,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA68",63,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",64,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",65,0)="POST ; KIDS Post install for LA*5.2*68"
^XTMP("XPDT",7816,"RTN","LA68",66,0)=" N DA,DIC,DIK,DLAYGO,LA7200,LA7DIE,LA7FAC,LA7FDA,LA7UPD,LA7X,LA7Y,X,Y,XQA,XQAMSG"
^XTMP("XPDT",7816,"RTN","LA68",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",68,0)=" D BMES^XPDUTL($$CJ^XLFSTR(""*** Post install started ***"",80))"
^XTMP("XPDT",7816,"RTN","LA68",69,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",70,0)=" ; Update flag."
^XTMP("XPDT",7816,"RTN","LA68",71,0)=" S LA7UPD=0"
^XTMP("XPDT",7816,"RTN","LA68",72,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",73,0)=" ; Restore status of LA7HDR entry in #62.48 if pre-existing and active."
^XTMP("XPDT",7816,"RTN","LA68",74,0)=" I LA7HDR,$P($G(LA7HDR(0)),""^"",3)=1 S $P(^LAHM(62.48,LA7HDR,0),""^"",3)=1"
^XTMP("XPDT",7816,"RTN","LA68",75,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",76,0)=" ; Restore status of Lab HDR subscriber protocol entry in #101 if pre-existing and active."
^XTMP("XPDT",7816,"RTN","LA68",77,0)=" I LA7101,$G(LA7101(774))'="""",$E(LA7101(774),1)'="";"" D"
^XTMP("XPDT",7816,"RTN","LA68",78,0)=" . D BMES^XPDUTL($$CJ^XLFSTR(""*** Restoring protocol LA7 LAB RESULTS TO HDR (SUB) Routing Logic field (#774) ***"",80))"
^XTMP("XPDT",7816,"RTN","LA68",79,0)=" . S LA7FDA(1,101,LA7101_"","",774)=LA7101(774)"
^XTMP("XPDT",7816,"RTN","LA68",80,0)=" . D FILE^DIE("""",""LA7FDA(1)"",""LA7DIE(1)"")"
^XTMP("XPDT",7816,"RTN","LA68",81,0)=" . D BMES^XPDUTL($$CJ^XLFSTR(""*** Protocol restore completed ***"",80))"
^XTMP("XPDT",7816,"RTN","LA68",82,0)=" . S LA7UPD=1"
^XTMP("XPDT",7816,"RTN","LA68",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",84,0)=" ; Removing facility station number in FACILITY NAME field in file #771."
^XTMP("XPDT",7816,"RTN","LA68",85,0)=" S LA7FAC=$$FIND1^DIC(771,"""",""OX"",""LA7LAB"",""B"","""")"
^XTMP("XPDT",7816,"RTN","LA68",86,0)=" I LA7FAC>0 D"
^XTMP("XPDT",7816,"RTN","LA68",87,0)=" . D BMES^XPDUTL($$CJ^XLFSTR(""*** Clearing facility name for LA7LAB entry in file #771 ***"",80))"
^XTMP("XPDT",7816,"RTN","LA68",88,0)=" . S LA7FDA(2,771,LA7FAC_"","",3)=""@"""
^XTMP("XPDT",7816,"RTN","LA68",89,0)=" . D FILE^DIE("""",""LA7FDA(2)"",""LA7DIE(2)"")"
^XTMP("XPDT",7816,"RTN","LA68",90,0)=" . D BMES^XPDUTL($$CJ^XLFSTR(""*** Clearing facility name completed ***"",80))"
^XTMP("XPDT",7816,"RTN","LA68",91,0)=" . S LA7UPD=1"
^XTMP("XPDT",7816,"RTN","LA68",92,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",93,0)=" I LA7UPD=0 D BMES^XPDUTL($$CJ^XLFSTR(""--- No actions required for post install ---"",80))"
^XTMP("XPDT",7816,"RTN","LA68",94,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",95,0)=" D BMES^XPDUTL($$CJ^XLFSTR(""*** Post install completed ***"",80))"
^XTMP("XPDT",7816,"RTN","LA68",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",97,0)=" D BMES^XPDUTL($$CJ^XLFSTR(""Sending install completion alert to mail group G.LMI"",80))"
^XTMP("XPDT",7816,"RTN","LA68",98,0)=" S XQAMSG=""Installation of patch ""_$G(XPDNM,""Unknown patch"")_"" completed on ""_$$HTE^XLFDT($H)"
^XTMP("XPDT",7816,"RTN","LA68",99,0)=" S XQA(""G.LMI"")="""""
^XTMP("XPDT",7816,"RTN","LA68",100,0)=" D SETUP^XQALERT"
^XTMP("XPDT",7816,"RTN","LA68",101,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA68",102,0)=" K LA7101,LA7HDR"
^XTMP("XPDT",7816,"RTN","LA68",103,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR")="0^1^B39353571^n/a"
^XTMP("XPDT",7816,"RTN","LA7HDR",1,0)="LA7HDR ;DALOI/JMC - LAB HDR ORU (Observation Result) message builder ;12/08/09  16:39"
^XTMP("XPDT",7816,"RTN","LA7HDR",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7HDR",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",4,0)=" ; Reference to variable DIQUIET supported by DBIA #2098"
^XTMP("XPDT",7816,"RTN","LA7HDR",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",6,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",7,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",9,0)="QUEUE ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",10,0)=" ; Called by protocol LA7 LAB RESULTS ACTION"
^XTMP("XPDT",7816,"RTN","LA7HDR",11,0)=" ; and below (APQ) for AP subscripts"
^XTMP("XPDT",7816,"RTN","LA7HDR",12,0)=" ; Call with:"
^XTMP("XPDT",7816,"RTN","LA7HDR",13,0)=" ;  LRAA   - accession area (CH,MI subscript)"
^XTMP("XPDT",7816,"RTN","LA7HDR",14,0)=" ;  LRAD   - accession date (CH,MI subscript)"
^XTMP("XPDT",7816,"RTN","LA7HDR",15,0)=" ;  LRAN   - accession number (CH,MI subscript)"
^XTMP("XPDT",7816,"RTN","LA7HDR",16,0)=" ;  LRIDT  - inverse date/time (collection date/time)"
^XTMP("XPDT",7816,"RTN","LA7HDR",17,0)=" ;  LRSS   - test subscript defined in LABORATORY TEST file (#60)"
^XTMP("XPDT",7816,"RTN","LA7HDR",18,0)=" ;  LRDFN  - IEN in LAB DATA file (#63)"
^XTMP("XPDT",7816,"RTN","LA7HDR",19,0)=" ;  LRSPEC - specimen "
^XTMP("XPDT",7816,"RTN","LA7HDR",20,0)=" ;  LRSB (Optional) - array of Chemistry results"
^XTMP("XPDT",7816,"RTN","LA7HDR",21,0)=" ;                      ex. glucose LRSB(2)=LR NODE"
^XTMP("XPDT",7816,"RTN","LA7HDR",22,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",23,0)=" N I,LA76248,LA7V,LA7VCH,LASTYP,LAVERR,X,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK"
^XTMP("XPDT",7816,"RTN","LA7HDR",24,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",25,0)=" ; If no accession area then quit - not much we can do."
^XTMP("XPDT",7816,"RTN","LA7HDR",26,0)=" I $G(LRAA)="""" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",27,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",28,0)=" ; If LRSS not defined then set from file #68"
^XTMP("XPDT",7816,"RTN","LA7HDR",29,0)=" I $G(LRSS)="""" N LRSS S LRSS=$P($G(^LRO(68,LRAA,0)),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7HDR",30,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",31,0)=" ; Not supporting AU and BB at this time (or if LRSS is null)."
^XTMP("XPDT",7816,"RTN","LA7HDR",32,0)=" I ""AUBB""[LRSS Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",33,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",34,0)=" ; Check if CPRS has called us more than once for this accession."
^XTMP("XPDT",7816,"RTN","LA7HDR",35,0)=" ; Results are processed on first call."
^XTMP("XPDT",7816,"RTN","LA7HDR",36,0)=" I $D(LRTMPO(""LRIFN"")),$G(LRNIFN)>1 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",37,0)=" I LRSS=""MI"",$D(LRTMPO(""LRIFN"")),$G(^TMP(""LA7HDR"",$J))=(LRAA_""^""_LRAD_""^""_LRAN) K ^TMP(""LA7HDR"",$J) Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",38,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",39,0)=" ; Quit if test patient on a production account."
^XTMP("XPDT",7816,"RTN","LA7HDR",40,0)=" I $$TESTPAT^VADPT($P($G(^LR(LRDFN,0)),""^"",3)),$$PROD^XUPROD(0) Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",41,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",42,0)=" ; Check for configuration LA7HDR in 62.48 to see if turned on and site wants subscribers to receive HL7 messages for this event."
^XTMP("XPDT",7816,"RTN","LA7HDR",43,0)=" ; Task HL7 message building and transmission."
^XTMP("XPDT",7816,"RTN","LA7HDR",44,0)=" ; HDR-IMS will be using HL7 messaging, no call to VDEF API."
^XTMP("XPDT",7816,"RTN","LA7HDR",45,0)=" S LA76248=$O(^LAHM(62.48,""B"",""LA7HDR"",0))"
^XTMP("XPDT",7816,"RTN","LA7HDR",46,0)=" I 'LA76248 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",47,0)=" I '$P(^LAHM(62.48,LA76248,0),""^"",3) Q  ; not active"
^XTMP("XPDT",7816,"RTN","LA7HDR",48,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",49,0)=" S ZTRTN=""BUILD^LA7HDR"",ZTDTH=$H,ZTIO="""",ZTDESC=""Tasked Lab HL7 HDR ORU Build"""
^XTMP("XPDT",7816,"RTN","LA7HDR",50,0)=" F I=""LRAA"",""LRAD"",""LRAN"",""LRIDT"",""LRSS"",""LRDFN"" S ZTSAVE(I)="""""
^XTMP("XPDT",7816,"RTN","LA7HDR",51,0)=" I LRSS=""CH"" D"
^XTMP("XPDT",7816,"RTN","LA7HDR",52,0)=" . S LA7V=0"
^XTMP("XPDT",7816,"RTN","LA7HDR",53,0)=" . F  S LA7V=$O(LRSB(LA7V)) Q:'LA7V  D"
^XTMP("XPDT",7816,"RTN","LA7HDR",54,0)=" . . I $P(LRSB(LA7V),""^"")="""" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",55,0)=" . . S LA7VCH(LA7V)=LRSB(LA7V)"
^XTMP("XPDT",7816,"RTN","LA7HDR",56,0)=" . . I $D(LRSA(LA7V,2)) S LA7VCH(LA7V,1)=""C"""
^XTMP("XPDT",7816,"RTN","LA7HDR",57,0)=" . S ZTSAVE(""LA7VCH*"")="""",ZTSAVE(""LRSPEC"")="""""
^XTMP("XPDT",7816,"RTN","LA7HDR",58,0)=" I LRSS=""CH"",'$D(LA7VCH) Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",59,0)=" S ZTSAVE=(""LA7MTYP"")=""ORU"""
^XTMP("XPDT",7816,"RTN","LA7HDR",60,0)=" D ^%ZTLOAD"
^XTMP("XPDT",7816,"RTN","LA7HDR",61,0)=" I $G(ZTSK)'>0 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",62,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",63,0)=" ; Set flag to handle CPRS calling us multiple times during verifying session for each ordered test."
^XTMP("XPDT",7816,"RTN","LA7HDR",64,0)=" S ^TMP(""LA7HDR"",$J)=LRAA_""^""_LRAD_""^""_LRAN"
^XTMP("XPDT",7816,"RTN","LA7HDR",65,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",66,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",68,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",69,0)="APQ(LRDFN,LRSS,LRIDT) ; Anatomic Pathology (CY,EM,SP) subscript entry point from FileMan cross-reference on specific fields."
^XTMP("XPDT",7816,"RTN","LA7HDR",70,0)=" ; Called by field #.11 in sub-files #63.02, 63.08, 63.09 - AP does not work through CPRS extended action protocols"
^XTMP("XPDT",7816,"RTN","LA7HDR",71,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",72,0)=" ; Only send file #2 patients to HDR"
^XTMP("XPDT",7816,"RTN","LA7HDR",73,0)=" I $P($G(^LR(LRDFN,0)),""^"",2)'=2 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",74,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",75,0)=" D QUEUE"
^XTMP("XPDT",7816,"RTN","LA7HDR",76,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",77,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",78,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",79,0)="BUILD ; Tasked entry point to build HL7 message to VA's HDR"
^XTMP("XPDT",7816,"RTN","LA7HDR",80,0)=" ; Tasked from above."
^XTMP("XPDT",7816,"RTN","LA7HDR",81,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",82,0)=" N DIQUIET,FDA,GBL,HL,HLQ,RUID,SITE"
^XTMP("XPDT",7816,"RTN","LA7HDR",83,0)=" N LA76248,LA76249,LA76249P,LA7DT,LA7ERR,LA7EVNT,LA7ID,LA7INTYP,LA7LNCVR,LA7LOAD,LA7NOMSG,LA7NVAF,LA7RSITE,LA7X,LA7Y,LRQUIET,LRUID"
^XTMP("XPDT",7816,"RTN","LA7HDR",84,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",85,0)=" ; Prevent FileMan from issuing any unwanted WRITE(s)."
^XTMP("XPDT",7816,"RTN","LA7HDR",86,0)=" S (DIQUIET,LRQUIET)=1"
^XTMP("XPDT",7816,"RTN","LA7HDR",87,0)=" ; Insure DILOCKTM is defined"
^XTMP("XPDT",7816,"RTN","LA7HDR",88,0)=" D DT^DICRW"
^XTMP("XPDT",7816,"RTN","LA7HDR",89,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",90,0)=" ; Lock record while building message."
^XTMP("XPDT",7816,"RTN","LA7HDR",91,0)=" F  L +^LR(LRDFN,LRSS,LRIDT,0):DILOCKTM Q:$T  H 5"
^XTMP("XPDT",7816,"RTN","LA7HDR",92,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",93,0)=" S (LA7ERR,LA7NVAF)=0,LA7EVNT=""LA7 LAB RESULTS AVAILABLE (EVN)"""
^XTMP("XPDT",7816,"RTN","LA7HDR",94,0)=" ; Create 62.49 entry but don't store message text."
^XTMP("XPDT",7816,"RTN","LA7HDR",95,0)=" S LA7NOMSG=2"
^XTMP("XPDT",7816,"RTN","LA7HDR",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",97,0)=" I $G(LA7MTYP)="""" S LA7MTYP=""ORU"""
^XTMP("XPDT",7816,"RTN","LA7HDR",98,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",99,0)=" S LA7X=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))"
^XTMP("XPDT",7816,"RTN","LA7HDR",100,0)=" S LRUID=$P(LA7X,""^""),RUID=$P(LA7X,""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7HDR",101,0)=" I LRUID="""" S LRUID=$$LRUID^LRX(LRAA,LRAD,LRAN)"
^XTMP("XPDT",7816,"RTN","LA7HDR",102,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",103,0)=" S (LA7RSITE,SITE)=""LA7HDR"",LA7ID=LA7RSITE_""-O-"",LA76248=$O(^LAHM(62.48,""B"",LA7RSITE,0))"
^XTMP("XPDT",7816,"RTN","LA7HDR",104,0)=" ; No entry in 62.48 - *** Need to add error logging ****"
^XTMP("XPDT",7816,"RTN","LA7HDR",105,0)=" I 'LA76248 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",106,0)=" I '$P(^LAHM(62.48,LA76248,0),""^"",3) Q  ; not active"
^XTMP("XPDT",7816,"RTN","LA7HDR",107,0)=" S LA7INTYP=+$P(^LAHM(62.48,LA76248,0),""^"",9)"
^XTMP("XPDT",7816,"RTN","LA7HDR",108,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",109,0)=" ; Determine if patient needs to have initial load sent to HDR."
^XTMP("XPDT",7816,"RTN","LA7HDR",110,0)=" ; *** need to establish location of HDR flag in 63***"
^XTMP("XPDT",7816,"RTN","LA7HDR",111,0)=" S LA7LOAD=0"
^XTMP("XPDT",7816,"RTN","LA7HDR",112,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",113,0)=" ; Create new outgoing entry in 62.49"
^XTMP("XPDT",7816,"RTN","LA7HDR",114,0)=" S (LA76249,LA76249P)=$$INIT6249^LA7VHLU"
^XTMP("XPDT",7816,"RTN","LA7HDR",115,0)=" I LA76249<1 D  Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",116,0)=" . ; Log entry creation error"
^XTMP("XPDT",7816,"RTN","LA7HDR",117,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",118,0)=" K ^TMP(""LA7-QRY"",$J)"
^XTMP("XPDT",7816,"RTN","LA7HDR",119,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",120,0)=" ; Check ""CH"" test results for ordered tests."
^XTMP("XPDT",7816,"RTN","LA7HDR",121,0)=" ; Per Change Control Board decision to perform lab test's result aggregation on VistA -"
^XTMP("XPDT",7816,"RTN","LA7HDR",122,0)=" ;   - besides test verified during this session include all other test results stored with this specimen."
^XTMP("XPDT",7816,"RTN","LA7HDR",123,0)=" I LRSS=""CH"" D"
^XTMP("XPDT",7816,"RTN","LA7HDR",124,0)=" . N FDA,FDAIEN,LA7ER,LA7VT,LRSB"
^XTMP("XPDT",7816,"RTN","LA7HDR",125,0)=" . S LA7Y=1"
^XTMP("XPDT",7816,"RTN","LA7HDR",126,0)=" . F  S LA7Y=$O(^LR(LRDFN,LRSS,LRIDT,LA7Y)) Q:'LA7Y  D"
^XTMP("XPDT",7816,"RTN","LA7HDR",127,0)=" . . I '$D(LA7VCH(LA7Y)) S LA7VCH(LA7Y)=^LR(LRDFN,LRSS,LRIDT,LA7Y)"
^XTMP("XPDT",7816,"RTN","LA7HDR",128,0)=" . . I $P(LA7VCH(LA7Y),""^"")="""" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",129,0)=" . . S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LA7Y,$P(LA7VCH(LA7Y),""^"",3),LRSPEC)"
^XTMP("XPDT",7816,"RTN","LA7HDR",130,0)=" . . S LRSB=LA7Y S:$G(LA7VCH(LA7Y,1))=""C"" $P(LRSB,""^"",2)=""C"""
^XTMP("XPDT",7816,"RTN","LA7HDR",131,0)=" . . D STORE^LA7QRY2"
^XTMP("XPDT",7816,"RTN","LA7HDR",132,0)=" . . K FDA,FDAIEN,LA7ER"
^XTMP("XPDT",7816,"RTN","LA7HDR",133,0)=" . . S FDA(2,62.49162,""+2,""_LA76249_"","",.01)=LRSB"
^XTMP("XPDT",7816,"RTN","LA7HDR",134,0)=" . . I $G(LA7VCH(LA7Y,1))=""C"" S FDA(2,62.49162,""+2,""_LA76249_"","",.02)=""C"""
^XTMP("XPDT",7816,"RTN","LA7HDR",135,0)=" . . S FDAIEN(1)=LA76249"
^XTMP("XPDT",7816,"RTN","LA7HDR",136,0)=" . . D UPDATE^DIE("""",""FDA(2)"",""FDAIEN"",""LA7ER(2)"")"
^XTMP("XPDT",7816,"RTN","LA7HDR",137,0)=" . . D CLEAN^DILF"
^XTMP("XPDT",7816,"RTN","LA7HDR",138,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",139,0)=" I ""CYEMSP""[LRSS D"
^XTMP("XPDT",7816,"RTN","LA7HDR",140,0)=" . S LRSB=.012,LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,"""","""")"
^XTMP("XPDT",7816,"RTN","LA7HDR",141,0)=" . D STORE^LA7QRY2"
^XTMP("XPDT",7816,"RTN","LA7HDR",142,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",143,0)=" I LRSS=""MI"" D"
^XTMP("XPDT",7816,"RTN","LA7HDR",144,0)=" . S LRSPEC=$P(^LR(LRDFN,LRSS,LRIDT,0),""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7HDR",145,0)=" . S LA7ND=0"
^XTMP("XPDT",7816,"RTN","LA7HDR",146,0)=" . F LA7ND=1,5,8,11,16 I $D(^LR(LRDFN,LRSS,LRIDT,LA7ND)) D"
^XTMP("XPDT",7816,"RTN","LA7HDR",147,0)=" . . I $P(^LR(LRDFN,LRSS,LRIDT,LA7ND),""^"",2)="""" Q  ; If no status -  skip"
^XTMP("XPDT",7816,"RTN","LA7HDR",148,0)=" . . I $D(^TMP(""LA7-QRY"",$J,LRDFN,LRIDT,LRSS)) Q  ; Already marked this report to send"
^XTMP("XPDT",7816,"RTN","LA7HDR",149,0)=" . . S LRSB=$S(LA7ND=1:11,LA7ND=5:14,LA7ND=8:18,LA7ND=11:22,LA7ND=16:33,1:11)"
^XTMP("XPDT",7816,"RTN","LA7HDR",150,0)=" . . S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,"""",LRSPEC)"
^XTMP("XPDT",7816,"RTN","LA7HDR",151,0)=" . . D STORE^LA7QRY2"
^XTMP("XPDT",7816,"RTN","LA7HDR",152,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",153,0)=" S GBL=""^TMP(""""HLS"""",""_$J_"")"""
^XTMP("XPDT",7816,"RTN","LA7HDR",154,0)=" D STARTMSG^LA7VHLU(LA7EVNT,.LA76249,LA7NOMSG)"
^XTMP("XPDT",7816,"RTN","LA7HDR",155,0)=" I $G(HL) S LA7ERR=$TR(HL,""^"",""-"")"
^XTMP("XPDT",7816,"RTN","LA7HDR",156,0)=" S (HLQ,HL(""Q""))="""""
^XTMP("XPDT",7816,"RTN","LA7HDR",157,0)=" D CHKACC^LA7VMSG"
^XTMP("XPDT",7816,"RTN","LA7HDR",158,0)=" I 'LA7ERR D"
^XTMP("XPDT",7816,"RTN","LA7HDR",159,0)=" . I LA7LOAD D"
^XTMP("XPDT",7816,"RTN","LA7HDR",160,0)=" . . N LA7EDT,LA7SC,LA7SDT,LA7SPEC,LRIDT,LRSS,LRUID"
^XTMP("XPDT",7816,"RTN","LA7HDR",161,0)=" . . S (LA7SC,LA7SPEC)=""*"",LA7SDT=$$FMADD^XLFDT(DT,-730,0,0,0),LA7EDT=DT"
^XTMP("XPDT",7816,"RTN","LA7HDR",162,0)=" . . D BCD^LA7QRY2"
^XTMP("XPDT",7816,"RTN","LA7HDR",163,0)=" . D BUILDMSG^LA7QRY1"
^XTMP("XPDT",7816,"RTN","LA7HDR",164,0)=" . D SENDMSG^LA7VMSG1"
^XTMP("XPDT",7816,"RTN","LA7HDR",165,0)=" S LA7ID=LA7RSITE_""-O-""_LRUID"
^XTMP("XPDT",7816,"RTN","LA7HDR",166,0)=" D UPDT6249^LA7VORM1"
^XTMP("XPDT",7816,"RTN","LA7HDR",167,0)=" ; File additional data"
^XTMP("XPDT",7816,"RTN","LA7HDR",168,0)=" S FDA(1,62.49,LA76249_"","",151)=LRUID"
^XTMP("XPDT",7816,"RTN","LA7HDR",169,0)=" S FDA(1,62.49,LA76249_"","",156)=LRIDT"
^XTMP("XPDT",7816,"RTN","LA7HDR",170,0)=" S FDA(1,62.49,LA76249_"","",157)=LRSS"
^XTMP("XPDT",7816,"RTN","LA7HDR",171,0)=" S FDA(1,62.49,LA76249_"","",158)=LRDFN"
^XTMP("XPDT",7816,"RTN","LA7HDR",172,0)=" D FILE^DIE("""",""FDA(1)"",""LA7ERR(1)"")"
^XTMP("XPDT",7816,"RTN","LA7HDR",173,0)=" D CLEAN^DILF"
^XTMP("XPDT",7816,"RTN","LA7HDR",174,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",175,0)=" ; Release locks on entries."
^XTMP("XPDT",7816,"RTN","LA7HDR",176,0)=" L -^LAHM(62.49,LA76249)"
^XTMP("XPDT",7816,"RTN","LA7HDR",177,0)=" L -^LR(LRDFN,LRSS,LRIDT)"
^XTMP("XPDT",7816,"RTN","LA7HDR",178,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",179,0)=" ; Cleanup"
^XTMP("XPDT",7816,"RTN","LA7HDR",180,0)=" K LA7ND,LRUID,LRNLT,LRIDT,LRSS,LRDFN,LA7VCH,LA7MTYP"
^XTMP("XPDT",7816,"RTN","LA7HDR",181,0)=" D EXIT^LA7HDR1"
^XTMP("XPDT",7816,"RTN","LA7HDR",182,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",183,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",184,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",185,0)="RTR(LA7SS) ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",186,0)=" ; Call with LA7SS = list of subscripts that HDR wants separated by "";"""
^XTMP("XPDT",7816,"RTN","LA7HDR",187,0)=" ;                   (LA7SS=""CH;MI;EM"")"
^XTMP("XPDT",7816,"RTN","LA7HDR",188,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",189,0)=" ; Setup link and subscriber array for HL7 HDR message generation"
^XTMP("XPDT",7816,"RTN","LA7HDR",190,0)=" ; Determine if HDR wants to receive lab results for this subscript"
^XTMP("XPDT",7816,"RTN","LA7HDR",191,0)=" ; Called by subscriber router protocol LA7 LAB RESULTS TO HDR (SUB)"
^XTMP("XPDT",7816,"RTN","LA7HDR",192,0)=" ; Check outgoing message and find OBR segment to determine Laboratory"
^XTMP("XPDT",7816,"RTN","LA7HDR",193,0)=" ;  subscript this result is associated with and if it's contained in"
^XTMP("XPDT",7816,"RTN","LA7HDR",194,0)=" ;  the LA7SS subscript list."
^XTMP("XPDT",7816,"RTN","LA7HDR",195,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7HDR",196,0)=" N LA7I,LA7SEG,LA7VI,LA7VJ,LA7X,LRSS,LRX"
^XTMP("XPDT",7816,"RTN","LA7HDR",197,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7HDR",198,0)=" S LRSS="""""
^XTMP("XPDT",7816,"RTN","LA7HDR",199,0)=" F LA7VI=1:1 X HLNEXT Q:HLQUIT'>0  D  Q:LRSS'="""""
^XTMP("XPDT",7816,"RTN","LA7HDR",200,0)=" . I $E(HLNODE,1,3)'=""OBR"" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",201,0)=" . S LA7SEG(0)=HLNODE"
^XTMP("XPDT",7816,"RTN","LA7HDR",202,0)=" . S LA7VJ=0"
^XTMP("XPDT",7816,"RTN","LA7HDR",203,0)=" . F  S LA7VJ=$O(HLNODE(LA7VJ)) Q:'LA7VJ  S LA7SEG(LA7VJ)=HLNODE(LA7VJ)"
^XTMP("XPDT",7816,"RTN","LA7HDR",204,0)=" . S LRX=$$P^LA7VHLU(.LA7SEG,21,HL(""FS"")),LRX=$$UNESC^LA7VHLU3(LRX,HL(""FS"")_HL(""ECH""))"
^XTMP("XPDT",7816,"RTN","LA7HDR",205,0)=" . S LRSS=$P(LRX,""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7HDR",206,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",207,0)=" F LA7I=1:1 S LA7X=$P(LA7SS,"";"",LA7I) Q:LA7X=""""  D  Q:LA7X="""""
^XTMP("XPDT",7816,"RTN","LA7HDR",208,0)=" . I LA7X=LRSS S HLL(""LINKS"",1)=""LA7 LAB RESULTS TO HDR (SUB)^VDEFVIE4"",LA7X="""""
^XTMP("XPDT",7816,"RTN","LA7HDR",209,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",210,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",211,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",212,0)="HDRLOAD(LA7SDT,LA7EDT,LA7LIMIT,LA7EVENT) ; Load patient's historical lab results to HDR (Health Data Repository)."
^XTMP("XPDT",7816,"RTN","LA7HDR",213,0)=" ; Call with LA7SDT = start date of data extraction in FileMan format"
^XTMP("XPDT",7816,"RTN","LA7HDR",214,0)=" ;           LA7EDT = end date of data extraction in FileMan format"
^XTMP("XPDT",7816,"RTN","LA7HDR",215,0)=" ;         LA7LIMIT = # of messages to create this session (default =1000)"
^XTMP("XPDT",7816,"RTN","LA7HDR",216,0)=" ;         LA7EVENT = name of HL7 event protocol to transmit messages"
^XTMP("XPDT",7816,"RTN","LA7HDR",217,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",218,0)=" D HDRLOAD^LA7HDR1"
^XTMP("XPDT",7816,"RTN","LA7HDR",219,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR",220,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",221,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",222,0)="RECOVER ; Recover failed transmissions or message building"
^XTMP("XPDT",7816,"RTN","LA7HDR",223,0)=" ; Called by option Recover/Transmit Lab HDR Result Messages [LA7 HDR RECOVER]"
^XTMP("XPDT",7816,"RTN","LA7HDR",224,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR",225,0)=" D RECOVER^LA7HDR1"
^XTMP("XPDT",7816,"RTN","LA7HDR",226,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1")="0^13^B37911850^n/a"
^XTMP("XPDT",7816,"RTN","LA7HDR1",1,0)="LA7HDR1 ;DALOI/JMC - LAB HDR ORU (Observation Result) message builder (cont'd) ;July 28, 2008"
^XTMP("XPDT",7816,"RTN","LA7HDR1",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7HDR1",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",4,0)=" ; Reference to variable DIQUIET supported by DBIA #2098"
^XTMP("XPDT",7816,"RTN","LA7HDR1",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",6,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",7,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",9,0)="HDRLOAD ; Load patient's historical lab results to HDR (Health Data Repository)."
^XTMP("XPDT",7816,"RTN","LA7HDR1",10,0)=" ; Called from tasked option LA7TASK HDR LOAD"
^XTMP("XPDT",7816,"RTN","LA7HDR1",11,0)=" N DIQUIET,GBL"
^XTMP("XPDT",7816,"RTN","LA7HDR1",12,0)=" N LA7101,LA761,LA76248,LA76249,LA76249P"
^XTMP("XPDT",7816,"RTN","LA7HDR1",13,0)=" N LA7CODE,LA7CNT,LA7DT,LA7ECH,LA7ERR,LA7FS,LA7ID,LA7INTYP,LA7MID,LA7MTYP,LA7NOMSG,LA7NTESN,LA7NVAF,LA7OBRSN,LA7OBXSN,LA7PIDSN,LA7RSITE,LA7QUIT,LA7SC,LA7SPEC"
^XTMP("XPDT",7816,"RTN","LA7HDR1",14,0)=" N LRDFN,LRIDT,LRSS,LRSSLST,LRUID,SITE"
^XTMP("XPDT",7816,"RTN","LA7HDR1",15,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",16,0)=" ; Prevent FileMan from issuing any unwanted WRITE(s)."
^XTMP("XPDT",7816,"RTN","LA7HDR1",17,0)=" S DIQUIET=1,DT=$$DT^XLFDT"
^XTMP("XPDT",7816,"RTN","LA7HDR1",18,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",19,0)=" ; Find entry in #62.48 and check if it's active."
^XTMP("XPDT",7816,"RTN","LA7HDR1",20,0)=" S (LA7RSITE,SITE)=""LA7HDR"",LA76248=$O(^LAHM(62.48,""B"",LA7RSITE,0))"
^XTMP("XPDT",7816,"RTN","LA7HDR1",21,0)=" ; No entry in 62.48 - *** Need to add error logging ****"
^XTMP("XPDT",7816,"RTN","LA7HDR1",22,0)=" I 'LA76248 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",23,0)=" I '$P(^LAHM(62.48,LA76248,0),""^"",3) Q  ; not active"
^XTMP("XPDT",7816,"RTN","LA7HDR1",24,0)=" S LA7INTYP=+$P(^LAHM(62.48,LA76248,0),""^"",9)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",25,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",26,0)=" S (LA7CNT,LA7CNT(1),LA7ERR,LA7NVAF,LA7QUIT)=0,LA7MTYP=""ORU"",LA7NOMSG=2"
^XTMP("XPDT",7816,"RTN","LA7HDR1",27,0)=" I LA7EVENT="""" S LA7EVNT=""LA7 LAB RESULTS AVAILABLE (EVN)"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",28,0)=" ; Setup search and subscript list"
^XTMP("XPDT",7816,"RTN","LA7HDR1",29,0)=" S (LA7SC,LA7SPEC)=""*"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",30,0)=" D SCLIST^LA7QRY2(LA7SC,.LRSSLST)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",31,0)=" ; Check start/end dates"
^XTMP("XPDT",7816,"RTN","LA7HDR1",32,0)=" I '$G(LA7SDT) S LA7SDT=$$FMADD^XLFDT(DT,-730,0,0,0)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",33,0)=" I '$G(LA7EDT) S LA7EDT=DT"
^XTMP("XPDT",7816,"RTN","LA7HDR1",34,0)=" I LA7SDT>LA7EDT S X=LA7SDT,LA7SDT=LA7EDT,LA7EDT=X"
^XTMP("XPDT",7816,"RTN","LA7HDR1",35,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",36,0)=" S GBL=""^TMP(""""HLS"""",""_$J_"")"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",37,0)=" ; Limit number of messages built this session."
^XTMP("XPDT",7816,"RTN","LA7HDR1",38,0)=" S LA7LIMIT=$G(LA7LIMIT,1000)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",39,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",40,0)=" I $D(^XTMP(""LA7HDR"",""LRDFN"")) S LRDFN=$P(^XTMP(""LA7HDR"",""LRDFN""),""^"")"
^XTMP("XPDT",7816,"RTN","LA7HDR1",41,0)=" E  S LRDFN=0"
^XTMP("XPDT",7816,"RTN","LA7HDR1",42,0)=" I LRDFN'=+LRDFN Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",43,0)=" F  S LRDFN=$O(^LR(LRDFN)) Q:'LRDFN  D  Q:LA7QUIT"
^XTMP("XPDT",7816,"RTN","LA7HDR1",44,0)=" . I $$S^%ZTLOAD(""Processing LRDFN ""_LRDFN_"" for HDR Historical"") S (LA7QUIT,ZTSTOP)=1,LRDFN=LRDFN-1 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",45,0)=" . S LA7CNT(1)=LA7CNT(1)+1"
^XTMP("XPDT",7816,"RTN","LA7HDR1",46,0)=" . I '(LA7CNT(1)#100) H 1 ; take a ""rest"" - allow OS to swap out process"
^XTMP("XPDT",7816,"RTN","LA7HDR1",47,0)=" . S X=^LR(LRDFN,0) Q:$P(X,""^"",2)'=2"
^XTMP("XPDT",7816,"RTN","LA7HDR1",48,0)=" . S DFN=$P(X,""^"",3),LA7ID=SITE_""-O-""_$$GET1^DIQ(2,DFN_"","",.01)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",49,0)=" . K ^TMP(""LA7-QRY"",$J),^TMP(""LA7VS"",$J)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",50,0)=" . D BCD^LA7QRY2 S LA7QUIT=0 Q:'$D(^TMP(""LA7-QRY"",$J))"
^XTMP("XPDT",7816,"RTN","LA7HDR1",51,0)=" . S LA76249=$$INIT6249^LA7VHLU,^TMP(""LA7VS"",$J,LA76249)=LA76249"
^XTMP("XPDT",7816,"RTN","LA7HDR1",52,0)=" . D INITHL^LA7VHLU(LA7EVNT)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",53,0)=" . I $G(HL) S LA7QUIT=1,LRDFN=LRDFN-1 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",54,0)=" . D BUILDMSG^LA7QRY1,GEN^LA7VHLU,UPDT6249^LA7VORM1"
^XTMP("XPDT",7816,"RTN","LA7HDR1",55,0)=" . S LA7CNT=LA7CNT+1,LA7QUIT=$S(LA7CNT<LA7LIMIT:0,1:1)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",56,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",57,0)=" ; Update XTMP entry, save last LRDFN processed for next session."
^XTMP("XPDT",7816,"RTN","LA7HDR1",58,0)=" S ^XTMP(""LA7HDR"",0)=$$FMADD^XLFDT(DT,90,0,0,0)_""^""_DT_""^Lab historical results feed to HDR"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",59,0)=" S ^XTMP(""LA7HDR"",""LRDFN"")=LRDFN"
^XTMP("XPDT",7816,"RTN","LA7HDR1",60,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",61,0)=" D EXIT"
^XTMP("XPDT",7816,"RTN","LA7HDR1",62,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",63,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",64,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",65,0)="RECOVER ; Recover failed transmissions or message building"
^XTMP("XPDT",7816,"RTN","LA7HDR1",66,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",67,0)=" N DIR,DIRUT,DTOUT,DUOUT,FIRST,LA76248,LA7CNT,LA7PROD,LA7QUIT,LA7TYPE,LA7UID,LA7X,LA7Y,LAST,LRAA,LRACC,LRAD,LRAN,LRDFN,LREXMPT,LRIDT,LRSPEC,LRSS,X,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK"
^XTMP("XPDT",7816,"RTN","LA7HDR1",68,0)=" S (LA7CNT,LA7QUIT)=0"
^XTMP("XPDT",7816,"RTN","LA7HDR1",69,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",70,0)=" S LA76248=$O(^LAHM(62.48,""B"",""LA7HDR"",0))"
^XTMP("XPDT",7816,"RTN","LA7HDR1",71,0)=" I 'LA76248 W !,""No entry LA7HDR in file #62.48"" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",72,0)=" I '$P(^LAHM(62.48,LA76248,0),""^"",3) D  Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",73,0)=" . S DIR(0)=""EA"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",74,0)=" . S DIR(""A"")=""Enter RETURN to continue:"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",75,0)=" . S DIR(""A"",1)=""Entry LA7HDR is not active in file #62.48"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",76,0)=" . D ^DIR"
^XTMP("XPDT",7816,"RTN","LA7HDR1",77,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",78,0)=" S LA7PROD=$$PROD^XUPROD(0)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",79,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",80,0)=" S DIR(0)=""SO^1:Range of Accessions;2:Selected Accessions"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",81,0)=" S DIR(""A"")=""Selection Method"",DIR(""B"")=1"
^XTMP("XPDT",7816,"RTN","LA7HDR1",82,0)=" D ^DIR"
^XTMP("XPDT",7816,"RTN","LA7HDR1",83,0)=" I $D(DIRUT) Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",84,0)=" S LA7TYPE=+Y"
^XTMP("XPDT",7816,"RTN","LA7HDR1",85,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",86,0)=" ; Get list of accession numbers, set flags used by LRWU4."
^XTMP("XPDT",7816,"RTN","LA7HDR1",87,0)=" S LRACC=1,LREXMPT=1"
^XTMP("XPDT",7816,"RTN","LA7HDR1",88,0)=" I LA7TYPE=1 D"
^XTMP("XPDT",7816,"RTN","LA7HDR1",89,0)=" . D ^LRWU4"
^XTMP("XPDT",7816,"RTN","LA7HDR1",90,0)=" . I LRAN<1 S LA7QUIT=1 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",91,0)=" . S FIRST=LRAN,X=$O(^LRO(68,LRAA,1,LRAD,1,"":""),-1)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",92,0)=" . S DIR(0)=""NO^""_LRAN_"":""_X_"":0"",DIR(""B"")=LRAN"
^XTMP("XPDT",7816,"RTN","LA7HDR1",93,0)=" . S DIR(""A"",1)="""",DIR(""A"")=""Recover accessions from ""_LRAN_"" to"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",94,0)=" . D ^DIR K DIR"
^XTMP("XPDT",7816,"RTN","LA7HDR1",95,0)=" . I $D(DIRUT) S LA7QUIT=1 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",96,0)=" . S LRAN=FIRST-1,LAST=Y"
^XTMP("XPDT",7816,"RTN","LA7HDR1",97,0)=" . F  S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN)) Q:'LRAN!(LRAN>LAST)  D SETTMP"
^XTMP("XPDT",7816,"RTN","LA7HDR1",98,0)=" I LA7TYPE=2 F  D  Q:LA7QUIT!(LRAN<1)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",99,0)=" . D ^LRWU4"
^XTMP("XPDT",7816,"RTN","LA7HDR1",100,0)=" . I $D(DTOUT)!($D(DUOUT)) S LA7QUIT=1 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",101,0)=" . I LRAN<1 S:'$D(^TMP(""LA7S-RTM"",$J)) LA7QUIT=1 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",102,0)=" . D SETTMP"
^XTMP("XPDT",7816,"RTN","LA7HDR1",103,0)=" I LA7QUIT Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",104,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",105,0)=" I '$D(^TMP(""LA7S-RTM"",$J)) D  Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",106,0)=" . S DIR(""A"",1)=""No accessions found to retransmit."""
^XTMP("XPDT",7816,"RTN","LA7HDR1",107,0)=" . S DIR(""A"")=""Enter RETURN to continue or '^' to exit"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",108,0)=" . S DIR(0)=""E"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",109,0)=" . D ^DIR"
^XTMP("XPDT",7816,"RTN","LA7HDR1",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",111,0)=" S DIR(""A"")=""Ready to retransmit"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",112,0)=" S DIR(""A"",1)=""Found ""_LA7CNT_"" accessions that can be retransmitted."""
^XTMP("XPDT",7816,"RTN","LA7HDR1",113,0)=" S DIR(0)=""YO"",DIR(""B"")=""NO"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",114,0)=" D ^DIR K DIR"
^XTMP("XPDT",7816,"RTN","LA7HDR1",115,0)=" I Y'=1 K ^TMP(""LA7S-RTM"",$J) Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",116,0)=" D EN^DDIOL(""Working"","""",""!"")"
^XTMP("XPDT",7816,"RTN","LA7HDR1",117,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",118,0)=" K LA7Y"
^XTMP("XPDT",7816,"RTN","LA7HDR1",119,0)=" S LA7CNT=0,LA7UID="""""
^XTMP("XPDT",7816,"RTN","LA7HDR1",120,0)=" F  S LA7UID=$O(^TMP(""LA7S-RTM"",$J,LA7UID)) Q:LA7UID=""""  D"
^XTMP("XPDT",7816,"RTN","LA7HDR1",121,0)=" . K LA7X,ZTSAVE"
^XTMP("XPDT",7816,"RTN","LA7HDR1",122,0)=" . S LA7X=^TMP(""LA7S-RTM"",$J,LA7UID),LA7CNT=LA7CNT+1"
^XTMP("XPDT",7816,"RTN","LA7HDR1",123,0)=" . S ZTRTN=""BUILD^LA7HDR"",ZTDTH=$H,ZTIO="""",ZTDESC=""Tasked Lab HL7 HDR ORU Build"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",124,0)=" . S ZTSAVE(""LRAA"")=$P(LA7X,""^""),ZTSAVE(""LRAD"")=$P(LA7X,""^"",2),ZTSAVE(""LRAN"")=$P(LA7X,""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",125,0)=" . S ZTSAVE(""LRDFN"")=$P(LA7X,""^"",4),ZTSAVE(""LRSS"")=$P(LA7X,""^"",5),ZTSAVE(""LRIDT"")=$P(LA7X,""^"",6),ZTSAVE(""LA7MTYP"")=""ORU"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",126,0)=" . I $P(LA7X,""^"",5)=""CH"" S ZTSAVE(""LRSPEC"")=$P(LA7X,""^"",7)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",127,0)=" . D ^%ZTLOAD"
^XTMP("XPDT",7816,"RTN","LA7HDR1",128,0)=" . I $G(ZTSK) D"
^XTMP("XPDT",7816,"RTN","LA7HDR1",129,0)=" . . I LA7CNT>101 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",130,0)=" . . I LA7CNT=101 S LA7Y(101)=""*** Too many accessions to list (>100), list truncated... ***"" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",131,0)=" . . S LA7Y(LA7CNT)=""Task# ""_ZTSK_"" queued for processing accession ""_LA7UID"
^XTMP("XPDT",7816,"RTN","LA7HDR1",132,0)=" . E  S LA7Y(LA7CNT)=""*** Tasking of retransmission failed for accession ""_LA7UID_"" ***"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",133,0)=" S LA7Y(.1)=""...Done"",LA7X(1,""F"")="""""
^XTMP("XPDT",7816,"RTN","LA7HDR1",134,0)=" S LA7Y(.2)=LA7CNT_"" accession""_$S(LA7CNT>1:""s"",1:"""")_"" scheduled for retransmitting of results!"""
^XTMP("XPDT",7816,"RTN","LA7HDR1",135,0)=" D EN^DDIOL(.LA7Y)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",136,0)=" K ^TMP(""LA7S-RTM"",$J)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",137,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",138,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",139,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",140,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",141,0)="SETTMP ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",142,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",143,0)=" S LA7UID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7HDR1",144,0)=" I LA7UID="""" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",145,0)=" S LRDFN=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,0)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7HDR1",146,0)=" ; Quit if not a file #2 patient."
^XTMP("XPDT",7816,"RTN","LA7HDR1",147,0)=" I $P($G(^LR(LRDFN,0)),""^"",2)'=2 Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",148,0)=" ; Quit if test patient on a production account."
^XTMP("XPDT",7816,"RTN","LA7HDR1",149,0)=" I $$TESTPAT^VADPT($P($G(^LR(LRDFN,0)),""^"",3)),LA7PROD Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",150,0)=" S LRSS=$P($G(^LRO(68,LRAA,0)),""^"",2),LRIDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",151,0)=" I LRSS?1(1""CH"",1""MI"") S LRSPEC=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,1)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7HDR1",152,0)=" E  S LRSPEC="""""
^XTMP("XPDT",7816,"RTN","LA7HDR1",153,0)=" S LA7CNT=LA7CNT+1,^TMP(""LA7S-RTM"",$J,LA7UID)=LRAA_""^""_LRAD_""^""_LRAN_""^""_LRDFN_""^""_LRSS_""^""_LRIDT_""^""_LRSPEC"
^XTMP("XPDT",7816,"RTN","LA7HDR1",154,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7HDR1",155,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",156,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",157,0)="EXIT ;"
^XTMP("XPDT",7816,"RTN","LA7HDR1",158,0)=" K LA7LIMIT"
^XTMP("XPDT",7816,"RTN","LA7HDR1",159,0)=" D CLEANUP^LA7QRY,EXIT^LA7VORM1"
^XTMP("XPDT",7816,"RTN","LA7HDR1",160,0)=" K @GBL,^TMP(""LA7VS"",$J)"
^XTMP("XPDT",7816,"RTN","LA7HDR1",161,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY")="0^4^B8496816^B5873978"
^XTMP("XPDT",7816,"RTN","LA7QRY",1,0)="LA7QRY ;DALOI/JMC - Lab HL7 Query Utility ;Apr 26, 2007"
^XTMP("XPDT",7816,"RTN","LA7QRY",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,69,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7QRY",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",4,0)=" ; Reference to variable DIQUIET supported by DBIA #2098"
^XTMP("XPDT",7816,"RTN","LA7QRY",5,0)=" ; Reference to ^DPT(""SSN"") global supported by DBIA #10035"
^XTMP("XPDT",7816,"RTN","LA7QRY",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",7,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",9,0)="GCPR(LA7PTID,LA7SDT,LA7EDT,LA7SC,LA7SPEC,LA7QERR,LA7DEST,LA7HL7) ; Entry point for Government Computerized Patient Record query"
^XTMP("XPDT",7816,"RTN","LA7QRY",10,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",11,0)=" ; Call with LA7PTID = patient identifier, either SSN or MPI/ICN or medical record number."
^XTMP("XPDT",7816,"RTN","LA7QRY",12,0)=" ;                     if MPI/ICN then should be full ICN (10 digit number followed by ""V"" and six digit checksum)"
^XTMP("XPDT",7816,"RTN","LA7QRY",13,0)=" ;                     Pass in the 2nd piece of this variable the type of identifier:"
^XTMP("XPDT",7816,"RTN","LA7QRY",14,0)=" ;                     SS = Social Security number"
^XTMP("XPDT",7816,"RTN","LA7QRY",15,0)=" ;                     PI = VA MPI Integration Control Number"
^XTMP("XPDT",7816,"RTN","LA7QRY",16,0)=" ;                     MR = medical record number of patient in file PATIENT/IHS (#9000001)"
^XTMP("XPDT",7816,"RTN","LA7QRY",17,0)=" ;                     Example: 1000720100V271387^PI"
^XTMP("XPDT",7816,"RTN","LA7QRY",18,0)=" ;                                  123456789^SS"
^XTMP("XPDT",7816,"RTN","LA7QRY",19,0)=" ;                                  123456789^MR"
^XTMP("XPDT",7816,"RTN","LA7QRY",20,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",21,0)=" ;            LA7SDT = start date of query (FileMan D/T,time optional)"
^XTMP("XPDT",7816,"RTN","LA7QRY",22,0)=" ;            LA7EDT = end date of query (FileMan D/T, time optional)"
^XTMP("XPDT",7816,"RTN","LA7QRY",23,0)=" ;                     (FileMan D/T^type of date (""CD"" or ""RAD"")"
^XTMP("XPDT",7816,"RTN","LA7QRY",24,0)=" ;                     Both start and end date values can pass a parameter in the second piece to indicate that  the date values are for specimen collection date/time (CD) or results available date (RAD)"
^XTMP("XPDT",7816,"RTN","LA7QRY",25,0)=" ;                     Example: LA7SDT=""2991001.1239^CD"""
^XTMP("XPDT",7816,"RTN","LA7QRY",26,0)=" ;                              LA7EDT=""2991002.0331^CD"""
^XTMP("XPDT",7816,"RTN","LA7QRY",27,0)=" ;                              LA7SDT=""3010201^RAD"""
^XTMP("XPDT",7816,"RTN","LA7QRY",28,0)=" ;                              LA7EDT=""3010201^RAD"""
^XTMP("XPDT",7816,"RTN","LA7QRY",29,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",30,0)=" ;             LA7SC = Array of search codes, either NLT or LOINC (code^coding system (""NLT"" or ""LN"");"
^XTMP("XPDT",7816,"RTN","LA7QRY",31,0)=" ;                     Example: LA7SC(1)=""89628.0000^NLT"""
^XTMP("XPDT",7816,"RTN","LA7QRY",32,0)=" ;                              LA7SC(2)=""84330.0000^NLT"""
^XTMP("XPDT",7816,"RTN","LA7QRY",33,0)=" ;                              LA7SC(3)=""84295.0000^NLT"""
^XTMP("XPDT",7816,"RTN","LA7QRY",34,0)=" ;                              LA7SC(4)=""14749-6^LN"""
^XTMP("XPDT",7816,"RTN","LA7QRY",35,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",36,0)=" ;                   = The ""*"" (wildcard) for any code;"
^XTMP("XPDT",7816,"RTN","LA7QRY",37,0)=" ;                     Example: LA7SC=""*"""
^XTMP("XPDT",7816,"RTN","LA7QRY",38,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",39,0)=" ;                   = A list of subscripts (separated by commas) from where the results will be extracted (""CH"", ""MI"", ""SP"", ""EM"", ""CY"")."
^XTMP("XPDT",7816,"RTN","LA7QRY",40,0)=" ;                     Example: LA7SC=""CH,MI"" (CH and MI results only)"
^XTMP("XPDT",7816,"RTN","LA7QRY",41,0)=" ;                     "
^XTMP("XPDT",7816,"RTN","LA7QRY",42,0)=" ;                     Pass in the 2nd piece of LA7SC the indicator (1) to return VUID when available."
^XTMP("XPDT",7816,"RTN","LA7QRY",43,0)=" ;                     Example: LA7SC=""*^1) or LA7SC=""CH,MI^1"""
^XTMP("XPDT",7816,"RTN","LA7QRY",44,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",45,0)=" ;           LA7SPEC = array of specimen types using HL7 source table 0070 or ""*"" (wildcard) for any code"
^XTMP("XPDT",7816,"RTN","LA7QRY",46,0)=" ;                     Currently specimen type only supported for CH and MI subscripted tests."
^XTMP("XPDT",7816,"RTN","LA7QRY",47,0)=" ;                     Example: LA7SPEC=""*"""
^XTMP("XPDT",7816,"RTN","LA7QRY",48,0)=" ;                                or"
^XTMP("XPDT",7816,"RTN","LA7QRY",49,0)=" ;                              LA7SPEC(1)=""UR"""
^XTMP("XPDT",7816,"RTN","LA7QRY",50,0)=" ;                              LA7SPEC(2)=""SER"""
^XTMP("XPDT",7816,"RTN","LA7QRY",51,0)=" ;                              LA7SPEC(3)=""PLAS"""
^XTMP("XPDT",7816,"RTN","LA7QRY",52,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",53,0)=" ;           LA7QERR = array (by reference) to return any errors"
^XTMP("XPDT",7816,"RTN","LA7QRY",54,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",55,0)=" ;           LA7DEST = closed root global reference to return search results (optional). If this parameter is omitted or equals an empty string, then node ^TMP(""HLS"",$J) is used."
^XTMP("XPDT",7816,"RTN","LA7QRY",56,0)=" ;                     Example: LA7DEST=$NA(^TMP(""ZZTMP"",$J))"
^XTMP("XPDT",7816,"RTN","LA7QRY",57,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",58,0)=" ;            LA7HL7 = HL7 field separator and encoding characters (4) to use to encode results (optional)."
^XTMP("XPDT",7816,"RTN","LA7QRY",59,0)=" ;                     If undefined or incomplete (length<5) then uses field separator = ""|"" and encoding characters =""^\~&"""
^XTMP("XPDT",7816,"RTN","LA7QRY",60,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",61,0)=" ; Returns    LA7DEST = contains global reference of search results in HL7 message structure, usually ^TMP(""HLS"",$J)"
^XTMP("XPDT",7816,"RTN","LA7QRY",62,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",63,0)=" ;            LA7QERR = array (by reference) containing any errors"
^XTMP("XPDT",7816,"RTN","LA7QRY",64,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",65,0)=" N DFN,DIQUIET,LA761,LA76248,LA7CODE,LA7INTYP,LA7NLT,LA7NOMSG,LA7PTYP,LA7QUIT,LA7SCDE,LA7X,LRDFN,LRIDT,LRSS,LRSSLST"
^XTMP("XPDT",7816,"RTN","LA7QRY",66,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",67,0)=" D CLEANUP"
^XTMP("XPDT",7816,"RTN","LA7QRY",68,0)=" S U=""^"",DT=$$DT^XLFDT,DTIME=$$DTIME^XUP($G(DUZ))"
^XTMP("XPDT",7816,"RTN","LA7QRY",69,0)=" S GBL=$S($G(LA7DEST)'="""":LA7DEST,1:""^TMP(""""HLS"""",""_$J_"")"")"
^XTMP("XPDT",7816,"RTN","LA7QRY",70,0)=" K LA7QERR"
^XTMP("XPDT",7816,"RTN","LA7QRY",71,0)=" ; Prevent FileMan from issuing any unwanted WRITE(s)."
^XTMP("XPDT",7816,"RTN","LA7QRY",72,0)=" S DIQUIET=1"
^XTMP("XPDT",7816,"RTN","LA7QRY",73,0)=" ; Currently not using file #62.48 for configuration information."
^XTMP("XPDT",7816,"RTN","LA7QRY",74,0)=" S (LA76248,LA7INTYP)=0"
^XTMP("XPDT",7816,"RTN","LA7QRY",75,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",76,0)=" ; Setup DUZ array to 'non-human' user LRLAB,HL if DUZ not valid"
^XTMP("XPDT",7816,"RTN","LA7QRY",77,0)=" ; Handle calls from non-VistA packages."
^XTMP("XPDT",7816,"RTN","LA7QRY",78,0)=" I $G(DUZ)<1 D"
^XTMP("XPDT",7816,"RTN","LA7QRY",79,0)=" . S LA7X=$$FIND1^DIC(200,"""",""OX"",""LRLAB,HL"",""B"","""")"
^XTMP("XPDT",7816,"RTN","LA7QRY",80,0)=" . I LA7X<1 D  Q"
^XTMP("XPDT",7816,"RTN","LA7QRY",81,0)=" . D DUZ^XUP(LA7X)"
^XTMP("XPDT",7816,"RTN","LA7QRY",82,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",83,0)=" ; Identify patient, quit if error"
^XTMP("XPDT",7816,"RTN","LA7QRY",84,0)=" D PATID^LA7QRY2"
^XTMP("XPDT",7816,"RTN","LA7QRY",85,0)=" I $D(LA7QERR) Q """""
^XTMP("XPDT",7816,"RTN","LA7QRY",86,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",87,0)=" ; Move LA7SC into local variable to check and modify if necessary."
^XTMP("XPDT",7816,"RTN","LA7QRY",88,0)=" M LA7SCDE=LA7SC"
^XTMP("XPDT",7816,"RTN","LA7QRY",89,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",90,0)=" ; Resolve search codes to lab datanames"
^XTMP("XPDT",7816,"RTN","LA7QRY",91,0)=" S LA7SCDE=$G(LA7SCDE)"
^XTMP("XPDT",7816,"RTN","LA7QRY",92,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",93,0)=" ; Set flag to return VUID when available"
^XTMP("XPDT",7816,"RTN","LA7QRY",94,0)=" I $P(LA7SCDE,""^"",2)=1 S LA7INTYP=30"
^XTMP("XPDT",7816,"RTN","LA7QRY",95,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",96,0)=" ; Parse list of subscripts if any."
^XTMP("XPDT",7816,"RTN","LA7QRY",97,0)=" D SCLIST^LA7QRY2($P(LA7SCDE,""^""),.LRSSLST)"
^XTMP("XPDT",7816,"RTN","LA7QRY",98,0)=" Q:$D(LA7QERR) """""
^XTMP("XPDT",7816,"RTN","LA7QRY",99,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",100,0)=" ; If passing specific subscripts but no specific search codes then use wildcard (""*"") for search codes."
^XTMP("XPDT",7816,"RTN","LA7QRY",101,0)=" I LA7SCDE'="""",$P(LA7SCDE,""^"")'=""*"",'$O(LA7SCDE(0)) S $P(LA7SCDE,""^"")=""*"""
^XTMP("XPDT",7816,"RTN","LA7QRY",102,0)=" I $P(LA7SCDE,""^"")'=""*"",$O(LA7SCDE(0)) D CHKSC^LA7QRY1"
^XTMP("XPDT",7816,"RTN","LA7QRY",103,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",104,0)=" ; Convert specimen codes to file #61 Topography entries"
^XTMP("XPDT",7816,"RTN","LA7QRY",105,0)=" S LA7SPEC=$G(LA7SPEC)"
^XTMP("XPDT",7816,"RTN","LA7QRY",106,0)=" I LA7SPEC'=""*""  D SPEC^LA7QRY1"
^XTMP("XPDT",7816,"RTN","LA7QRY",107,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",108,0)=" ; Search by collection or results available date"
^XTMP("XPDT",7816,"RTN","LA7QRY",109,0)=" I $P(LA7SDT,""^"",2)="""" S $P(LA7SDT,""^"",2)=""CD"""
^XTMP("XPDT",7816,"RTN","LA7QRY",110,0)=" I $P(LA7SDT,""^"",2)=""RAD"" D BRAD^LA7QRY2"
^XTMP("XPDT",7816,"RTN","LA7QRY",111,0)=" I $P(LA7SDT,""^"",2)=""CD"" D BCD^LA7QRY2"
^XTMP("XPDT",7816,"RTN","LA7QRY",112,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",113,0)=" I '$D(^TMP(""LA7-QRY"",$J)) D"
^XTMP("XPDT",7816,"RTN","LA7QRY",114,0)=" . S LA7QERR(99)=""No results found for requested parameters"""
^XTMP("XPDT",7816,"RTN","LA7QRY",115,0)=" . S GBL="""""
^XTMP("XPDT",7816,"RTN","LA7QRY",116,0)=" E  S LA7NOMSG=1 D BUILDMSG^LA7QRY1"
^XTMP("XPDT",7816,"RTN","LA7QRY",117,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",118,0)=" D CLEANUP"
^XTMP("XPDT",7816,"RTN","LA7QRY",119,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",120,0)=" Q GBL"
^XTMP("XPDT",7816,"RTN","LA7QRY",121,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",122,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",123,0)="CLEANUP ; Cleanup TMP nodes that are used."
^XTMP("XPDT",7816,"RTN","LA7QRY",124,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",125,0)=" N I"
^XTMP("XPDT",7816,"RTN","LA7QRY",126,0)=" F I=""LA7-61"",""LA7-DN"",""LA7-INST-DNS"",""LA7-LN"",""LA7-NLT"",""LA7-QRY"" K ^TMP(I,$J)"
^XTMP("XPDT",7816,"RTN","LA7QRY",127,0)=" D KVAR^LRX"
^XTMP("XPDT",7816,"RTN","LA7QRY",128,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY",129,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1")="0^2^B34477085^B12341981"
^XTMP("XPDT",7816,"RTN","LA7QRY1",1,0)="LA7QRY1 ;DALOI/JMC - Lab HL7 Query Utility ;June 23, 2008"
^XTMP("XPDT",7816,"RTN","LA7QRY1",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,61,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7QRY1",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",4,0)=" ; Reference to ADM^VADPT2 supported by DBIA #325"
^XTMP("XPDT",7816,"RTN","LA7QRY1",5,0)=" ; Reference to BLDPID^VAFCQRY supported by DBIA #3630"
^XTMP("XPDT",7816,"RTN","LA7QRY1",6,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",7,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",8,0)="CHKSC ; Check search NLT/LOINC codes"
^XTMP("XPDT",7816,"RTN","LA7QRY1",9,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",10,0)=" N J"
^XTMP("XPDT",7816,"RTN","LA7QRY1",11,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",12,0)=" S J=0"
^XTMP("XPDT",7816,"RTN","LA7QRY1",13,0)=" F  S J=$O(LA7SCDE(J)) Q:'J  D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",14,0)=" . N X"
^XTMP("XPDT",7816,"RTN","LA7QRY1",15,0)=" . S X=LA7SCDE(J)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",16,0)=" . I $P(X,""^"",2)=""NLT"",$D(^LAM(""E"",$P(X,""^""))) D  Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",17,0)=" . . S ^TMP(""LA7-NLT"",$J,$P(X,""^""))="""""
^XTMP("XPDT",7816,"RTN","LA7QRY1",18,0)=" . I $P(X,""^"",2)=""LN"",$D(^LAB(95.3,$P($P(X,""^""),""-""))) D  Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",19,0)=" . . S ^TMP(""LA7-LN"",$J,$P($P(X,""^""),""-""))="""""
^XTMP("XPDT",7816,"RTN","LA7QRY1",20,0)=" . S LA7QERR(6)=""Unknown search code ""_$P(X,""^"")_"" passed"""
^XTMP("XPDT",7816,"RTN","LA7QRY1",21,0)=" . K LA7SCDE(J)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",22,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",23,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",24,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",25,0)="SPEC ; Convert HL7 Specimen Codes to File #61, Topography codes"
^XTMP("XPDT",7816,"RTN","LA7QRY1",26,0)=" ; Find all topographies that use this HL7 specimen code"
^XTMP("XPDT",7816,"RTN","LA7QRY1",27,0)=" N J,K,L"
^XTMP("XPDT",7816,"RTN","LA7QRY1",28,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",29,0)=" S J=0"
^XTMP("XPDT",7816,"RTN","LA7QRY1",30,0)=" F  S J=$O(LA7SPEC(J)) Q:'J  D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",31,0)=" . S K=LA7SPEC(J),L=0"
^XTMP("XPDT",7816,"RTN","LA7QRY1",32,0)=" . F  S L=$O(^LAB(61,""HL7"",K,L)) Q:'L  S ^TMP(""LA7-61"",$J,L)="""""
^XTMP("XPDT",7816,"RTN","LA7QRY1",33,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",34,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",35,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",36,0)="BUILDMSG ; Build HL7 message with result of query"
^XTMP("XPDT",7816,"RTN","LA7QRY1",37,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",38,0)=" I $G(LA7NOMSG)=1 N HL,HLECH,HLFS,HLQ,LA7ECH,LA7FS,LA7MSH"
^XTMP("XPDT",7816,"RTN","LA7QRY1",39,0)=" N LA,LA763,LA7ID,LA7NTESN,LA7NVAF,LA7OBRSN,LA7OBXSN,LA7PIDSN,LA7QUIT,LA7ROOT,LA7X,LRIDT,LRPOC,LRSS,X"
^XTMP("XPDT",7816,"RTN","LA7QRY1",40,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",41,0)=" ; Create dummy MSH to pass HL7 delimiters"
^XTMP("XPDT",7816,"RTN","LA7QRY1",42,0)=" I $G(LA7NOMSG)=1 D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",43,0)=" . I $L($G(LA7HL7))'=5 S LA7HL7=""|^\~&"""
^XTMP("XPDT",7816,"RTN","LA7QRY1",44,0)=" . S (HL(""FS""),HLFS,LA7FS)=$E(LA7HL7),(HL(""ECH""),HLECH,LA7ECH)=$E(LA7HL7,2,5)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",45,0)=" . S (HLQ,HL(""Q""))="""""
^XTMP("XPDT",7816,"RTN","LA7QRY1",46,0)=" . S LA7MSH(0)=""MSH""_LA7FS_LA7ECH_LA7FS"
^XTMP("XPDT",7816,"RTN","LA7QRY1",47,0)=" . S $P(LA7MSH(0),LA7FS,7)=$$FMTHL7^XLFDT($$NOW^XLFDT)_LA7FS"
^XTMP("XPDT",7816,"RTN","LA7QRY1",48,0)=" . D FILESEG^LA7VHLU(GBL,.LA7MSH)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",49,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",50,0)=" F X=""AUTO-INST"",""LRDFN"",""LRIDT"",""SUB"",""HUID"",""NLT"",""RUID"",""SITE"" S LA(X)="""""
^XTMP("XPDT",7816,"RTN","LA7QRY1",51,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",52,0)=" ; Find POC user to identify those specimens that are POC."
^XTMP("XPDT",7816,"RTN","LA7QRY1",53,0)=" S LRPOC=$$FIND1^DIC(200,"""",""OX"",""LRLAB,POC"",""B"","""")"
^XTMP("XPDT",7816,"RTN","LA7QRY1",54,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",55,0)=" ; Take search results and put in HL7 message structure"
^XTMP("XPDT",7816,"RTN","LA7QRY1",56,0)=" S LA7ROOT=""^TMP(""""LA7-QRY"""",$J)"",(LA7QUIT,LA7PIDSN)=0,LA7ID=""LA7QRY-O-"""
^XTMP("XPDT",7816,"RTN","LA7QRY1",57,0)=" F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""""  D  Q:LA7QUIT"
^XTMP("XPDT",7816,"RTN","LA7QRY1",58,0)=" . I $QS(LA7ROOT,1)'=""LA7-QRY""!($QS(LA7ROOT,2)'=$J) S LA7QUIT=1 Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",59,0)=" . I LA(""LRDFN"")'=$QS(LA7ROOT,3) D PAT"
^XTMP("XPDT",7816,"RTN","LA7QRY1",60,0)=" . I LA(""LRIDT"")'=$QS(LA7ROOT,4) D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",61,0)=" . . I $G(LA7INTYP)=30,$G(LA7OBRSN) D PAT"
^XTMP("XPDT",7816,"RTN","LA7QRY1",62,0)=" . . D ORC"
^XTMP("XPDT",7816,"RTN","LA7QRY1",63,0)=" . I LA(""SUB"")'=$QS(LA7ROOT,5) D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",64,0)=" . . I $G(LA7INTYP)=30,$G(LA7OBRSN) D PAT"
^XTMP("XPDT",7816,"RTN","LA7QRY1",65,0)=" . . D ORC"
^XTMP("XPDT",7816,"RTN","LA7QRY1",66,0)=" . I LA(""NLT"")'=$P($QS(LA7ROOT,6),""!"") D ORC"
^XTMP("XPDT",7816,"RTN","LA7QRY1",67,0)=" . D OBX"
^XTMP("XPDT",7816,"RTN","LA7QRY1",68,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",69,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",70,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",71,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",72,0)="PAT ; Build PID/PV1 segments"
^XTMP("XPDT",7816,"RTN","LA7QRY1",73,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",74,0)=" N I,LA7,LA7ERR,LA7PID,LA7PV1,VADMVT,VAINDT"
^XTMP("XPDT",7816,"RTN","LA7QRY1",75,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",76,0)=" S (LA(""LRDFN""),LRDFN)=$QS(LA7ROOT,3)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",77,0)=" S LRDPF=$P(^LR(LRDFN,0),""^"",2),DFN=$P(^(0),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",78,0)=" D DEM^LRX"
^XTMP("XPDT",7816,"RTN","LA7QRY1",79,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",80,0)=" ; Build PID segment"
^XTMP("XPDT",7816,"RTN","LA7QRY1",81,0)=" S LA7PIDSN=LA7PIDSN+1"
^XTMP("XPDT",7816,"RTN","LA7QRY1",82,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",83,0)=" ; Check if this field has been built previously for this patient"
^XTMP("XPDT",7816,"RTN","LA7QRY1",84,0)=" ; Save this field to TMP global to use for subsequent calls."
^XTMP("XPDT",7816,"RTN","LA7QRY1",85,0)=" I $D(^TMP($J,""LA7VHLU"",""PID"",DFN,LA7FS_LA7ECH)) D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",86,0)=" . M LA7PID=^TMP($J,""LA7VHLU"",""PID"",DFN,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",87,0)=" . S $P(LA7PID(0),LA7FS,2)=LA7PIDSN"
^XTMP("XPDT",7816,"RTN","LA7QRY1",88,0)=" E  D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",89,0)=" . D BLDPID^VAFCQRY(DFN,LA7PIDSN,""ALL"",.LA7,.HL,.LA7ERR)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",90,0)=" . S I=0"
^XTMP("XPDT",7816,"RTN","LA7QRY1",91,0)=" . F  S I=$O(LA7(I)) Q:'I  S LA7PID(I-1)=LA7(I)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",92,0)=" . M ^TMP($J,""LA7VHLU"",""PID"",DFN,LA7FS_LA7ECH)=LA7PID"
^XTMP("XPDT",7816,"RTN","LA7QRY1",93,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",94,0)=" D FILESEG^LA7VHLU(GBL,.LA7PID)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",95,0)=" I '$G(LA7NOMSG),$G(LA76249) D FILE6249^LA7VHLU(LA76249,.LA7PID)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",97,0)=" ; Build PV1 segment if building message for HDR and other subscribers"
^XTMP("XPDT",7816,"RTN","LA7QRY1",98,0)=" I $G(LA7INTYP)=30 D PV1"
^XTMP("XPDT",7816,"RTN","LA7QRY1",99,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",100,0)=" S (LA7OBRSN,LA7OBXSN,LA7NTESN)=0,(LA(""LRIDT""),LA(""SUB""))="""""
^XTMP("XPDT",7816,"RTN","LA7QRY1",101,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",102,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",103,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",104,0)="ORC ; Build ORC segment"
^XTMP("XPDT",7816,"RTN","LA7QRY1",105,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",106,0)=" N LA764,LA7NLT,LRNMSP,X"
^XTMP("XPDT",7816,"RTN","LA7QRY1",107,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",108,0)=" S (LA(""LRIDT""),LRIDT)=$QS(LA7ROOT,4),(LA(""SUB""),LRSS)=$QS(LA7ROOT,5)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",109,0)=" S LA763(0)=$G(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),0))"
^XTMP("XPDT",7816,"RTN","LA7QRY1",110,0)=" S X=$G(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),""ORU""))"
^XTMP("XPDT",7816,"RTN","LA7QRY1",111,0)=" S LA(""HUID"")=$P(X,""^""),LRNMSP=""LR"""
^XTMP("XPDT",7816,"RTN","LA7QRY1",112,0)=" I LA(""HUID"")="""" S LA(""HUID"")=$P(LA763(0),""^"",6)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",113,0)=" S LA(""HUID"",""NMSP"")=LRNMSP"
^XTMP("XPDT",7816,"RTN","LA7QRY1",114,0)=" I ""CHMI""[LA(""SUB"") S LA(""HUID"",""SITE"")=$P(LA763(0),""^"",14)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",115,0)=" E  S LA(""HUID"",""SITE"")="""""
^XTMP("XPDT",7816,"RTN","LA7QRY1",116,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",117,0)=" S LA(""RUID"")=$P(X,""^"",5),LRNMSP=""LR"""
^XTMP("XPDT",7816,"RTN","LA7QRY1",118,0)=" I LRPOC,LRPOC=$P(X,""^"",4) S LRNMSP=""LRPOC"""
^XTMP("XPDT",7816,"RTN","LA7QRY1",119,0)=" S LA(""RUID"",""NMSP"")=LRNMSP"
^XTMP("XPDT",7816,"RTN","LA7QRY1",120,0)=" S LA(""RUID"",""SITE"")=$P(X,""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",121,0)=" I LA(""RUID"")="""" D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",122,0)=" . S LA(""RUID"")=LA(""HUID"")"
^XTMP("XPDT",7816,"RTN","LA7QRY1",123,0)=" . S LA(""RUID"",""NMSP"")=LA(""HUID"",""NMSP"")"
^XTMP("XPDT",7816,"RTN","LA7QRY1",124,0)=" . S LA(""RUID"",""SITE"")=LA(""HUID"",""SITE"")"
^XTMP("XPDT",7816,"RTN","LA7QRY1",125,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",126,0)=" S LA(""SITE"")=$P(X,""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",127,0)=" S LA7NVAF=$$NVAF^LA7VHLU2(0),LA7NTESN=0"
^XTMP("XPDT",7816,"RTN","LA7QRY1",128,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",129,0)=" S (LA(""NLT""),LA7NLT)=$P($QS(LA7ROOT,6),""!""),(LA764,LA(""ORD""))="""""
^XTMP("XPDT",7816,"RTN","LA7QRY1",130,0)=" I LA7NLT'="""" D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",131,0)=" . S LA764=+$O(^LAM(""E"",LA7NLT,0))"
^XTMP("XPDT",7816,"RTN","LA7QRY1",132,0)=" . I LA764 S LA(""ORD"")=$$GET1^DIQ(64,LA764_"","",.01)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",133,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",134,0)=" D ORC^LA7VORU,OBR"
^XTMP("XPDT",7816,"RTN","LA7QRY1",135,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",136,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",137,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",138,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",139,0)="OBR ; Build OBR segment"
^XTMP("XPDT",7816,"RTN","LA7QRY1",140,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",141,0)=" N LA7RS"
^XTMP("XPDT",7816,"RTN","LA7QRY1",142,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",143,0)=" I LA(""SUB"")=""CH"" D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",144,0)=" . D OBR^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7QRY1",145,0)=" . D NTE^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7QRY1",146,0)=" . S LA7OBXSN=0"
^XTMP("XPDT",7816,"RTN","LA7QRY1",147,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",148,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",149,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",150,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",151,0)="OBX ; Build OBX segment"
^XTMP("XPDT",7816,"RTN","LA7QRY1",152,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",153,0)=" N LA7DATA,LA7VT"
^XTMP("XPDT",7816,"RTN","LA7QRY1",154,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",155,0)=" S LA7NTESN=0"
^XTMP("XPDT",7816,"RTN","LA7QRY1",156,0)=" I LA(""SUB"")=""MI"" D MI^LA7VORU1 Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",157,0)=" I ""CYEMSP""[LA(""SUB"") D AP^LA7VORU2 Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",158,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",159,0)=" S LA7VT=$QS(LA7ROOT,7)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",160,0)=" D OBX^LA7VOBX(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),LA7VT,.LA7DATA,.LA7OBXSN,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",161,0)=" I '$D(LA7DATA) Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",162,0)=" D FILESEG^LA7VHLU(GBL,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",163,0)=" I '$G(LA7NOMSG),$G(LA76249) D FILE6249^LA7VHLU(LA76249,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",164,0)=" ; Send any test interpretation from file #60"
^XTMP("XPDT",7816,"RTN","LA7QRY1",165,0)=" D INTRP^LA7VORUA"
^XTMP("XPDT",7816,"RTN","LA7QRY1",166,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",167,0)=" ; Mark result as sent - set to 1, if corrected results set to 2"
^XTMP("XPDT",7816,"RTN","LA7QRY1",168,0)=" I LA(""SUB"")=""CH"" D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",169,0)=" . I $P(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),$P(LA7VT,""^"")),""^"",10)>1 Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",170,0)=" . S $P(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),$P(LA7VT,""^"")),""^"",10)=$S($P(LA7VT,""^"",2)=""C"":2,1:1)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",171,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",172,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",173,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",174,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",175,0)="PV1 ; Build PV1 segment for HDR"
^XTMP("XPDT",7816,"RTN","LA7QRY1",176,0)=" N LA7DT,LA7PCE,LA7SDENC,LRDX,LRIDT,LRSS,LRUID,VADMVT,VAINDT"
^XTMP("XPDT",7816,"RTN","LA7QRY1",177,0)=" S LRIDT=$QS(LA7ROOT,4),LRSS=$QS(LA7ROOT,5),LA7DT=0"
^XTMP("XPDT",7816,"RTN","LA7QRY1",178,0)=" I LRIDT,LRSS'="""" S LA7DT=$P($G(^LR(LRDFN,LRSS,LRIDT,0)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7QRY1",179,0)=" I 'LA7DT Q"
^XTMP("XPDT",7816,"RTN","LA7QRY1",180,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",181,0)=" S LRDX="""""
^XTMP("XPDT",7816,"RTN","LA7QRY1",182,0)=" ; Determine if an inpatient at time of specimen and build inpatient PV1."
^XTMP("XPDT",7816,"RTN","LA7QRY1",183,0)=" S VAINDT=LA7DT D ADM^VADPT2"
^XTMP("XPDT",7816,"RTN","LA7QRY1",184,0)=" I VADMVT S LA7PV1(0)=$$IN^VAFHLPV1(DFN,LA7DT,"",3,6,7,10,18,21,36,39,44,45,"",VADMVT,"""",1,LRDX)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",185,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",186,0)=" ; If not an inpatient then build outpatient PV1."
^XTMP("XPDT",7816,"RTN","LA7QRY1",187,0)=" I 'VADMVT D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",188,0)=" . N LA7VPTR"
^XTMP("XPDT",7816,"RTN","LA7QRY1",189,0)=" . S LA7PCE=$$PCENC^LA7VHLU3(LRDFN,LRSS,LRIDT),LA7VPTR="""""
^XTMP("XPDT",7816,"RTN","LA7QRY1",190,0)=" . I LA7PCE'="""" D"
^XTMP("XPDT",7816,"RTN","LA7QRY1",191,0)=" . . S LA7SDENC=$$SDENC^LA7VHLU3(LA7PCE)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",192,0)=" . . I LA7SDENC'="""" S LA7VPTR=LA7SDENC_"";SCE("""
^XTMP("XPDT",7816,"RTN","LA7QRY1",193,0)=" . I LA7VPTR="""" S LA7VPTR=DFN_"";DPT("""
^XTMP("XPDT",7816,"RTN","LA7QRY1",194,0)=" . S LA7PV1(0)=$$OUT^VAFHLPV1(DFN,"""",LA7DT,LA7VPTR,""A"",1)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",195,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY1",196,0)=" D FILESEG^LA7VHLU(GBL,.LA7PV1)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",197,0)=" I '$G(LA7NOMSG),$G(LA76249) D FILE6249^LA7VHLU(LA76249,.LA7PV1)"
^XTMP("XPDT",7816,"RTN","LA7QRY1",198,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2")="0^3^B38475048^B24752999"
^XTMP("XPDT",7816,"RTN","LA7QRY2",1,0)="LA7QRY2 ;DALOI/JMC - Lab HL7 Query Utility ;Nov 3, 2006"
^XTMP("XPDT",7816,"RTN","LA7QRY2",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,69,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7QRY2",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",4,0)=" ; Reference to ^AUPNPAT(""D"") global supported by DBIA #4814"
^XTMP("XPDT",7816,"RTN","LA7QRY2",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",6,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",7,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",8,0)="PATID ; Resolve patient id and establish patient environment"
^XTMP("XPDT",7816,"RTN","LA7QRY2",9,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",10,0)=" N LA7X"
^XTMP("XPDT",7816,"RTN","LA7QRY2",11,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",12,0)=" S (DFN,LRDFN)="""",LA7PTYP=0"
^XTMP("XPDT",7816,"RTN","LA7QRY2",13,0)=" S LA7PTID(""TYPE"")=$P(LA7PTID,""^"",2),LA7PTID=$P(LA7PTID,""^"")"
^XTMP("XPDT",7816,"RTN","LA7QRY2",14,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",15,0)=" ; SSN passed as patient identifier"
^XTMP("XPDT",7816,"RTN","LA7QRY2",16,0)=" ; Identifier type will be checked in subsequent patch once subscribers"
^XTMP("XPDT",7816,"RTN","LA7QRY2",17,0)=" ; have updated their API call."
^XTMP("XPDT",7816,"RTN","LA7QRY2",18,0)=" ; I LA7PTID(""TYPE"")=""SS"" D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",19,0)=" I LA7PTID?9N.1A D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",20,0)=" . S LA7PTYP=1"
^XTMP("XPDT",7816,"RTN","LA7QRY2",21,0)=" . S LA7X=$O(^DPT(""SSN"",LA7PTID,0))"
^XTMP("XPDT",7816,"RTN","LA7QRY2",22,0)=" . I LA7X>0 D SETDFN(LA7X)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",23,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",24,0)=" ; MPI/ICN (integration control number) passed as patient identifier"
^XTMP("XPDT",7816,"RTN","LA7QRY2",25,0)=" ; Identifier type will be checked in subsequent patch once subscribers have updated their API call."
^XTMP("XPDT",7816,"RTN","LA7QRY2",26,0)=" ; I LA7PTID(""TYPE"")=""PI"" D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",27,0)=" I LA7PTID?10N1""V""6N D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",28,0)=" . S LA7PTYP=2"
^XTMP("XPDT",7816,"RTN","LA7QRY2",29,0)=" . S LA7X=$$GETDFN^MPIF001(LA7PTID)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",30,0)=" . I LA7X<0 S LA7QERR(5)=$P(LA7X,""^"",2) Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",31,0)=" . I LA7PTID'=$$GETICN^MPIF001(LA7X) S LA7QERR(1)=""Invalid patient identifier passed"" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",32,0)=" . D SETDFN(LA7X)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",33,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",34,0)=" ; Use HRN (health record number) cross reference of file PATIENT/IHS (#9000001)."
^XTMP("XPDT",7816,"RTN","LA7QRY2",35,0)=" I LA7PTID(""TYPE"")=""MR"" D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",36,0)=" . S LA7PTYP=3"
^XTMP("XPDT",7816,"RTN","LA7QRY2",37,0)=" . S LA7X=$O(^AUPNPAT(""D"",LA7PTID,0))"
^XTMP("XPDT",7816,"RTN","LA7QRY2",38,0)=" . D SETDFN(LA7X)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",39,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",40,0)=" ; If no patient identified/no laboratory record - return exception message"
^XTMP("XPDT",7816,"RTN","LA7QRY2",41,0)=" I 'LA7PTYP S LA7QERR(1)=""Invalid patient identifier passed"""
^XTMP("XPDT",7816,"RTN","LA7QRY2",42,0)=" I 'DFN S LA7QERR(2)=""No patient found with requested identifier"""
^XTMP("XPDT",7816,"RTN","LA7QRY2",43,0)=" I DFN,'LRDFN S LA7QERR(3)=""No laboratory record for requested patient"""
^XTMP("XPDT",7816,"RTN","LA7QRY2",44,0)=" I LRDFN,'$D(^LR(LRDFN)) S LA7QERR(4)=""Database error - missing laboratory record for requested patient"""
^XTMP("XPDT",7816,"RTN","LA7QRY2",45,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",46,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",47,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",48,0)="BCD ; Search by specimen collection date."
^XTMP("XPDT",7816,"RTN","LA7QRY2",49,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",50,0)=" N LA763,LA7QUIT"
^XTMP("XPDT",7816,"RTN","LA7QRY2",51,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",52,0)=" S (LA7SDT(0),LA7EDT(0))=0"
^XTMP("XPDT",7816,"RTN","LA7QRY2",53,0)=" I LA7SDT S LA7SDT(0)=9999999-LA7SDT"
^XTMP("XPDT",7816,"RTN","LA7QRY2",54,0)=" I LA7EDT S LA7EDT(0)=9999999-LA7EDT"
^XTMP("XPDT",7816,"RTN","LA7QRY2",55,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",56,0)=" S LRSS="""""
^XTMP("XPDT",7816,"RTN","LA7QRY2",57,0)=" F  S LRSS=$O(LRSSLST(LRSS))  Q:LRSS=""""  D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",58,0)=" . S (LA7QUIT,LRIDT)=0"
^XTMP("XPDT",7816,"RTN","LA7QRY2",59,0)=" . I LA7EDT(0) S LRIDT=$O(^LR(LRDFN,LRSS,LA7EDT(0)),-1)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",60,0)=" . F  S LRIDT=$O(^LR(LRDFN,LRSS,LRIDT)) Q:LA7QUIT  D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",61,0)=" . . ; Quit if reached end of data or outside date criteria"
^XTMP("XPDT",7816,"RTN","LA7QRY2",62,0)=" . . I 'LRIDT!(LRIDT>LA7SDT(0)) S LA7QUIT=1 Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",63,0)=" . . D SEARCH"
^XTMP("XPDT",7816,"RTN","LA7QRY2",64,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",65,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",66,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",68,0)="BRAD ; Search by results available date (completion date)."
^XTMP("XPDT",7816,"RTN","LA7QRY2",69,0)=" ; Assumes cross-references still exist for dates in LRO(69) global."
^XTMP("XPDT",7816,"RTN","LA7QRY2",70,0)=" ; Collects specimen date/time values for a given LRDFN and completion date."
^XTMP("XPDT",7816,"RTN","LA7QRY2",71,0)=" ; Cross-reference is by date only, time stripped from start date."
^XTMP("XPDT",7816,"RTN","LA7QRY2",72,0)=" ; Uses cross-reference ^LRO(69,DT,1,""AN"",'LOCATION',LRDFN,LRIDT)="""""
^XTMP("XPDT",7816,"RTN","LA7QRY2",73,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",74,0)=" N LA763,LA7DT,LA7ROOT,LA7SRC,LA7X,X"
^XTMP("XPDT",7816,"RTN","LA7QRY2",75,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",76,0)=" ; Check if orders still exist in file #69 for search range."
^XTMP("XPDT",7816,"RTN","LA7QRY2",77,0)=" ; If also searching any AP (SP,CY,EM,AU) subscripts then use long search as these do not always have orders in file #69."
^XTMP("XPDT",7816,"RTN","LA7QRY2",78,0)=" S LA7SDT(1)=(LA7SDT\1)-.0000000001,LA7EDT(1)=(LA7EDT\1)+.24,LA7SRC=0"
^XTMP("XPDT",7816,"RTN","LA7QRY2",79,0)=" S X=$O(^LRO(69,LA7SDT(1)))"
^XTMP("XPDT",7816,"RTN","LA7QRY2",80,0)=" I X,X<LA7EDT(1) D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",81,0)=" . S LA7SRC=1"
^XTMP("XPDT",7816,"RTN","LA7QRY2",82,0)=" . F I=""AU"",""CY"",""EM"",""SP"" I $D(LRSSLST(I)) S LA7SRC=2 Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",84,0)=" ; Search ""AN"" cross-reference in file #69."
^XTMP("XPDT",7816,"RTN","LA7QRY2",85,0)=" I LA7SRC D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",86,0)=" . S LA7DT=LA7SDT(1)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",87,0)=" . F  S LA7DT=$O(^LRO(69,LA7DT)) Q:'LA7DT!(LA7DT>LA7EDT(1))  D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",88,0)=" . . S LA7ROOT=""^LRO(69,LA7DT,1,""""AN"""")"""
^XTMP("XPDT",7816,"RTN","LA7QRY2",89,0)=" . . F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""""!($QS(LA7ROOT,2)'=LA7DT)!($QS(LA7ROOT,4)'=""AN"")  D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",90,0)=" . . . I $QS(LA7ROOT,6)'=LRDFN Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",91,0)=" . . . S LRIDT=$QS(LA7ROOT,7),LRSS="""""
^XTMP("XPDT",7816,"RTN","LA7QRY2",92,0)=" . . . F  S LRSS=$O(LRSSLST(LRSS))  Q:LRSS=""""  D SEARCH"
^XTMP("XPDT",7816,"RTN","LA7QRY2",93,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",94,0)=" ; If no orders in #69 then do long search through file #63."
^XTMP("XPDT",7816,"RTN","LA7QRY2",95,0)=" ; Or if searching AP subscripts."
^XTMP("XPDT",7816,"RTN","LA7QRY2",96,0)=" ; If MI subscript then check each section of specimen for release date."
^XTMP("XPDT",7816,"RTN","LA7QRY2",97,0)=" I 'LA7SRC!(LA7SRC=2) D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",98,0)=" . S LRSS="""""
^XTMP("XPDT",7816,"RTN","LA7QRY2",99,0)=" . F  S LRSS=$O(LRSSLST(LRSS))  Q:LRSS=""""  D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",100,0)=" . . I LA7SRC=2,""AUCYEMSP""'[LRSS Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",101,0)=" . . S LRIDT=0"
^XTMP("XPDT",7816,"RTN","LA7QRY2",102,0)=" . . F  S LRIDT=$O(^LR(LRDFN,LRSS,LRIDT)) Q:'LRIDT  D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",103,0)=" . . . S LA763(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))"
^XTMP("XPDT",7816,"RTN","LA7QRY2",104,0)=" . . . I LRSS=""MI"" D SEARCH"
^XTMP("XPDT",7816,"RTN","LA7QRY2",105,0)=" . . . S LA7X=$S(""SPCYEM""[LRSS:$P(LA763(0),""^"",11),1:$P(LA763(0),""^"",3))"
^XTMP("XPDT",7816,"RTN","LA7QRY2",106,0)=" . . . I LA7X>LA7SDT(1),LA7X<LA7EDT(1) D SEARCH"
^XTMP("XPDT",7816,"RTN","LA7QRY2",107,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",108,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",109,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",111,0)="SEARCH ; Search subscript for a specific collection date/time"
^XTMP("XPDT",7816,"RTN","LA7QRY2",112,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",113,0)=" K LA763"
^XTMP("XPDT",7816,"RTN","LA7QRY2",114,0)=" S LA763(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))"
^XTMP("XPDT",7816,"RTN","LA7QRY2",115,0)=" ; Skip if CH, SP, CY, or EM subscript and no complete date"
^XTMP("XPDT",7816,"RTN","LA7QRY2",116,0)=" I ""CHSPCYEM""[LRSS,'$P(LA763(0),""^"",3) Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",117,0)=" ; Skip if SP, CY, or EM subscript and no release date"
^XTMP("XPDT",7816,"RTN","LA7QRY2",118,0)=" I ""SPCYEM""[LRSS,'$P(LA763(0),""^"",11) Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",119,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",120,0)=" ; Only CH, MI, and BB subscripts store pointer to file #61 in 5th piece of zeroth node."
^XTMP("XPDT",7816,"RTN","LA7QRY2",121,0)=" ; Quit if specific specimen codes and they do not match"
^XTMP("XPDT",7816,"RTN","LA7QRY2",122,0)=" I ""CHMIBB""[LRSS S LA761=+$P(LA763(0),""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",123,0)=" E  S LA761=0"
^XTMP("XPDT",7816,"RTN","LA7QRY2",124,0)=" I LA761,$D(^TMP(""LA7-61"",$J)),'$D(^TMP(""LA7-61"",$J,LA761)) Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",125,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",126,0)=" ; --- Chemistry"
^XTMP("XPDT",7816,"RTN","LA7QRY2",127,0)=" I LRSS=""CH"" D CHSS Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",128,0)=" ; --- Microbiology"
^XTMP("XPDT",7816,"RTN","LA7QRY2",129,0)=" I LRSS=""MI"" D MISS Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",130,0)=" ; --- Surgical pathology"
^XTMP("XPDT",7816,"RTN","LA7QRY2",131,0)=" I LRSS=""SP"" D APSS Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",132,0)=" ; --- Cytology"
^XTMP("XPDT",7816,"RTN","LA7QRY2",133,0)=" I LRSS=""CY"" D APSS Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",134,0)=" ; --- Electron Microscopy"
^XTMP("XPDT",7816,"RTN","LA7QRY2",135,0)=" I LRSS=""EM"" D APSS Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",136,0)=" ; --- Autopsy"
^XTMP("XPDT",7816,"RTN","LA7QRY2",137,0)=" I LRSS=""AU"" D APSS Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",138,0)=" ; --- Blood Bank"
^XTMP("XPDT",7816,"RTN","LA7QRY2",139,0)=" I LRSS=""BB"" D BBSS Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",140,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",141,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",142,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",143,0)="CHSS ; Search ""CH"" datanames for matching codes"
^XTMP("XPDT",7816,"RTN","LA7QRY2",144,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",145,0)=" N LA7X,LRSB"
^XTMP("XPDT",7816,"RTN","LA7QRY2",146,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",147,0)=" S LRSB=1"
^XTMP("XPDT",7816,"RTN","LA7QRY2",148,0)=" F  S LRSB=$O(^LR(LRDFN,LRSS,LRIDT,LRSB)) Q:'LRSB  D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",149,0)=" . S LA7X=$G(^LR(LRDFN,LRSS,LRIDT,LRSB))"
^XTMP("XPDT",7816,"RTN","LA7QRY2",150,0)=" . S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,$P(LA7X,""^"",3),LA761)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",151,0)=" . D CHECK"
^XTMP("XPDT",7816,"RTN","LA7QRY2",152,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",153,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",154,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",155,0)="MISS ; Search ""MI"" subscripts for matching codes"
^XTMP("XPDT",7816,"RTN","LA7QRY2",156,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",157,0)=" N LA7ND,LA7X,LRSB"
^XTMP("XPDT",7816,"RTN","LA7QRY2",158,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",159,0)=" S LA7ND=0"
^XTMP("XPDT",7816,"RTN","LA7QRY2",160,0)=" F LA7ND=1,5,8,11,16 I $D(^LR(LRDFN,LRSS,LRIDT,LA7ND)) D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",161,0)=" . S LA7X=$P(^LR(LRDFN,LRSS,LRIDT,LA7ND),""^"")"
^XTMP("XPDT",7816,"RTN","LA7QRY2",162,0)=" . ; If no rpt date approved do not include"
^XTMP("XPDT",7816,"RTN","LA7QRY2",163,0)=" . I LA7X="""" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",164,0)=" . I $P(LA7SDT,""^"",2)=""RAD"",((LA7X<LA7SDT(1))!(LA7X>LA7EDT(1))) Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",165,0)=" . S LRSB=$S(LA7ND=1:11,LA7ND=5:14,LA7ND=8:18,LA7ND=11:22,LA7ND=16:33,1:11)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",166,0)=" . S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,"""",LA761)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",167,0)=" . D CHECK"
^XTMP("XPDT",7816,"RTN","LA7QRY2",168,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",169,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",170,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",171,0)="APSS ; Search AP subscripts for matching codes"
^XTMP("XPDT",7816,"RTN","LA7QRY2",172,0)=" ; AP results are currently not coded - use defaults"
^XTMP("XPDT",7816,"RTN","LA7QRY2",173,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",174,0)=" N LA7CODE,LRSB"
^XTMP("XPDT",7816,"RTN","LA7QRY2",175,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",176,0)=" ; *** Autopsy subscript currently not supported ***"
^XTMP("XPDT",7816,"RTN","LA7QRY2",177,0)=" I LRSS=""AU"" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",178,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",179,0)=" S LRSB=.012"
^XTMP("XPDT",7816,"RTN","LA7QRY2",180,0)=" S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,"""","""")"
^XTMP("XPDT",7816,"RTN","LA7QRY2",181,0)=" D CHECK"
^XTMP("XPDT",7816,"RTN","LA7QRY2",182,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",183,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",184,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",185,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",186,0)="BBSS ; Search BB subscript for matching codes"
^XTMP("XPDT",7816,"RTN","LA7QRY2",187,0)=" ; *** This subscript currently not supported ***"
^XTMP("XPDT",7816,"RTN","LA7QRY2",188,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",189,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",190,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",191,0)="CHECK ; Check NLT order/result and LOINC codes."
^XTMP("XPDT",7816,"RTN","LA7QRY2",192,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",193,0)=" N LA7I,LA7QUIT,LA7X"
^XTMP("XPDT",7816,"RTN","LA7QRY2",194,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",195,0)=" ; If wildcard then store"
^XTMP("XPDT",7816,"RTN","LA7QRY2",196,0)=" ; Otherwise check for specific NLT order/result and LOINC codes"
^XTMP("XPDT",7816,"RTN","LA7QRY2",197,0)=" ; If searching for suffix ""0000"" then check for other than ""0000"" coded result NLT code suffixes"
^XTMP("XPDT",7816,"RTN","LA7QRY2",198,0)=" I $P(LA7SCDE,""^"")=""*"" D STORE Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",199,0)=" S LA7QUIT=0"
^XTMP("XPDT",7816,"RTN","LA7QRY2",200,0)=" F LA7I=1:1:3 D  Q:LA7QUIT"
^XTMP("XPDT",7816,"RTN","LA7QRY2",201,0)=" . ; If no test code then skip"
^XTMP("XPDT",7816,"RTN","LA7QRY2",202,0)=" . I $P(LA7CODE,""!"",LA7I)="""" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",203,0)=" . ; If test code matches a search code then store"
^XTMP("XPDT",7816,"RTN","LA7QRY2",204,0)=" . I $D(^TMP($S(LA7I=3:""LA7-LN"",1:""LA7-NLT""),$J,$P(LA7CODE,""!"",LA7I))) D  Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",205,0)=" . . D STORE"
^XTMP("XPDT",7816,"RTN","LA7QRY2",206,0)=" . . S LA7QUIT=1"
^XTMP("XPDT",7816,"RTN","LA7QRY2",207,0)=" . I LA7I=2,$P($P(LA7CODE,""!"",LA7I),""."",2)'=""0000"" D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",208,0)=" . . S LA7X=$P($P(LA7CODE,""!"",LA7I),""."",1)_"".0000"""
^XTMP("XPDT",7816,"RTN","LA7QRY2",209,0)=" . . I $D(^TMP(""LA7-NLT"",$J,LA7X)) D STORE S LA7QUIT=1 Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",210,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",211,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",212,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",213,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",214,0)="STORE ; Store entry for building in HL7 message"
^XTMP("XPDT",7816,"RTN","LA7QRY2",215,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",216,0)=" S ^TMP(""LA7-QRY"",$J,LRDFN,LRIDT,LRSS,$P(LA7CODE,""!""),LRSB)="""""
^XTMP("XPDT",7816,"RTN","LA7QRY2",217,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",218,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",219,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",220,0)="SETDFN(LA7X) ; Setup DFN and other lab variables."
^XTMP("XPDT",7816,"RTN","LA7QRY2",221,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",222,0)=" S DFN=LA7X,LRDFN=$P($G(^DPT(DFN,""LR"")),""^"")"
^XTMP("XPDT",7816,"RTN","LA7QRY2",223,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",224,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",225,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",226,0)="SCLIST(SCLST,LA7SLST) ; Setup subscript search list"
^XTMP("XPDT",7816,"RTN","LA7QRY2",227,0)=" ; Call with   SCLST = list of subscripts to search, "","" delimited"
^XTMP("XPDT",7816,"RTN","LA7QRY2",228,0)=" ;           LA7SLST = array reference to return parsed subscript array"
^XTMP("XPDT",7816,"RTN","LA7QRY2",229,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",230,0)=" ;   Returns LA7SLST =  parsed array of subscripts (passed by reference)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",231,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",232,0)=" N I,RC,SCALL,TMP"
^XTMP("XPDT",7816,"RTN","LA7QRY2",233,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",234,0)=" ; Search all supported subscripts"
^XTMP("XPDT",7816,"RTN","LA7QRY2",235,0)=" I SCLST=""*"" F I=""AU"",""BB"",""CH"",""CY"",""EM"",""MI"",""SP"" S LA7SLST(I)="""""
^XTMP("XPDT",7816,"RTN","LA7QRY2",236,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7QRY2",237,0)=" ; Search only requested valid subscripts"
^XTMP("XPDT",7816,"RTN","LA7QRY2",238,0)=" I SCLST'=""*"" D"
^XTMP("XPDT",7816,"RTN","LA7QRY2",239,0)=" . S SCALL="",AU,BB,CH,CY,EM,MI,SP,"",SCLST=$$UP^XLFSTR($TR(SCLST,"" ""))"
^XTMP("XPDT",7816,"RTN","LA7QRY2",240,0)=" . F I=1:1:$L(SCLST,"","") D  Q:$D(LA7QERR)"
^XTMP("XPDT",7816,"RTN","LA7QRY2",241,0)=" . . S TMP=$P(SCLST,"","",I) Q:TMP="""""
^XTMP("XPDT",7816,"RTN","LA7QRY2",242,0)=" . . I SCALL[("",""_TMP_"","")  S LA7SLST(TMP)="""" Q"
^XTMP("XPDT",7816,"RTN","LA7QRY2",243,0)=" . . S LA7QERR(7)=""Invalid list of subscripts: '""_SCLST_""'"""
^XTMP("XPDT",7816,"RTN","LA7QRY2",244,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU")="0^11^B44857108^B42350744"
^XTMP("XPDT",7816,"RTN","LA7VHLU",1,0)="LA7VHLU ;DALOI/JMC - HL7 segment builder utility ;Nov 26, 2007"
^XTMP("XPDT",7816,"RTN","LA7VHLU",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,62,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VHLU",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",4,0)=" ; Reference to PROTOCOL file (#101) supported by DBIA #872"
^XTMP("XPDT",7816,"RTN","LA7VHLU",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",6,0)="STARTMSG(LA7EVNT,LA76249,LA7NOMSG) ; Create/initialize HL message"
^XTMP("XPDT",7816,"RTN","LA7VHLU",7,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",8,0)=" ; Call with LA7EVNT = Lab event protocol in file (#101)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",9,0)=" ;           LA76249 = if entry already exists, do not create new entry"
^XTMP("XPDT",7816,"RTN","LA7VHLU",10,0)=" ;          LA7NOMSG = flag to not store MSH segment in file #62.49"
^XTMP("XPDT",7816,"RTN","LA7VHLU",11,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",12,0)=" N LA7MSH,X"
^XTMP("XPDT",7816,"RTN","LA7VHLU",13,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",14,0)=" S LA76249=+$G(LA76249)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",15,0)=" D INITHL(LA7EVNT)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",16,0)=" I LA76249<1 S LA76249=$$INIT6249^LA7VHLU"
^XTMP("XPDT",7816,"RTN","LA7VHLU",17,0)=" I $G(HL) D  Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",18,0)=" . N LA7X"
^XTMP("XPDT",7816,"RTN","LA7VHLU",19,0)=" . S LA7X(1)=LA76249,LA7X(2)=$TR(HL,""^"",""-"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU",20,0)=" . D CREATE^LA7LOG(28)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",21,0)=" S X=""MSH""_LA7FS_LA7ECH_LA7FS_HL(""SAN"")_LA7FS_HL(""SAF"")_LA7FS"
^XTMP("XPDT",7816,"RTN","LA7VHLU",22,0)=" S $P(X,LA7FS,9)=HL(""MTN"")_$E(LA7ECH,1)_HL(""ETN"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU",23,0)=" S $P(X,LA7FS,11)=HL(""PID"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU",24,0)=" S $P(X,LA7FS,12)=HL(""VER"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU",25,0)=" S:$D(HL(""ACAT"")) $P(X,LA7FS,15)=HL(""ACAT"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU",26,0)=" S:$D(HL(""APAT"")) $P(X,LA7FS,16)=HL(""APAT"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU",27,0)=" S LA7MSH(0)=X"
^XTMP("XPDT",7816,"RTN","LA7VHLU",28,0)=" I '$G(LA7NOMSG) D FILE6249^LA7VHLU(LA76249,.LA7MSH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",29,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",30,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",31,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",32,0)="INITHL(LA7EVNT) ; Initialize HL environment"
^XTMP("XPDT",7816,"RTN","LA7VHLU",33,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",34,0)=" ; Call with LA7EVNT = Lab event protocol in file (#101)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",35,0)=" ; HL7 v1.6 interface"
^XTMP("XPDT",7816,"RTN","LA7VHLU",36,0)=" ; LA7101 - IEN of event protocol"
^XTMP("XPDT",7816,"RTN","LA7VHLU",37,0)=" ; HL  - array of output parameters"
^XTMP("XPDT",7816,"RTN","LA7VHLU",38,0)=" ; INT - DHCP-to-DHCP only"
^XTMP("XPDT",7816,"RTN","LA7VHLU",39,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",40,0)=" K ^TMP(""HLS"",$J)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",41,0)=" K HL,HLCOMP,HLSUB,HLFS,HLERR,HLMID"
^XTMP("XPDT",7816,"RTN","LA7VHLU",42,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",43,0)=" S LA7101=$O(^ORD(101,""B"",LA7EVNT,0))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",44,0)=" D INIT^HLFNC2(LA7101,.HL,0)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",45,0)=" S (LA7FS,HLFS)=$G(HL(""FS""))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",46,0)=" S (LA7ECH,HLECH)=$G(HL(""ECH""))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",47,0)=" S HLCOMP=$E($G(HL(""ECH"")),1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",48,0)=" S HLSUB=$E($G(HL(""ECH"")),4)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",49,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",50,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",51,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",52,0)="GEN ; Generate HL7 v1.6 message"
^XTMP("XPDT",7816,"RTN","LA7VHLU",53,0)=" ; LA7101 - IEN of event protocol"
^XTMP("XPDT",7816,"RTN","LA7VHLU",54,0)=" ; HLARYTYP - array type"
^XTMP("XPDT",7816,"RTN","LA7VHLU",55,0)=" ; HLFORMAT - HLMA formatted/not formatted"
^XTMP("XPDT",7816,"RTN","LA7VHLU",56,0)=" ; HLMTIEN - IEN in 772 (batch messages)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",57,0)=" ; HLRESLT = message ID^error code^error description"
^XTMP("XPDT",7816,"RTN","LA7VHLU",58,0)=" ; HLP(""CONTPTR"") - continuation pointer field value"
^XTMP("XPDT",7816,"RTN","LA7VHLU",59,0)=" ; HLP(""PRIORITY"") - priority field value"
^XTMP("XPDT",7816,"RTN","LA7VHLU",60,0)=" ; HLP(""NAMESPACE"") - package namespace"
^XTMP("XPDT",7816,"RTN","LA7VHLU",61,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VHLU",62,0)=" N HLEID,HLARYTYP,HLFORMAT,HLMTIEN,HLRESLT,I"
^XTMP("XPDT",7816,"RTN","LA7VHLU",63,0)=" S HLEID=LA7101,HLARYTYP=""GM"",HLFORMAT=1,HLMTIEN="""",HLRESLT="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU",64,0)=" S HLP(""NAMESPACE"")=""LA"""
^XTMP("XPDT",7816,"RTN","LA7VHLU",65,0)=" D GENERATE^HLMA(HLEID,HLARYTYP,HLFORMAT,.HLRESLT,HLMTIEN,.HLP)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",66,0)=" K LA7MID M LA7MID=HLRESLT"
^XTMP("XPDT",7816,"RTN","LA7VHLU",67,0)=" I $P(HLRESLT,""^"",2)'="""" D CREATE^LA7LOG(23)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",68,0)=" I $O(LA7MID(0)) D"
^XTMP("XPDT",7816,"RTN","LA7VHLU",69,0)=" . S I=0"
^XTMP("XPDT",7816,"RTN","LA7VHLU",70,0)=" . F  S I=$O(LA7MID(I)) Q:'I  I $L($P(LA7MID,""^"",2)) S HLRESLT=LA7MID(I) D CREATE^LA7LOG(23)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",71,0)=" K HLP"
^XTMP("XPDT",7816,"RTN","LA7VHLU",72,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",73,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",74,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",75,0)="BUILDSEG(LA7ARRAY,LA7DATA,LA7FS) ; Build HL segment"
^XTMP("XPDT",7816,"RTN","LA7VHLU",76,0)=" ; Call with LA7ARRAY = array containing fields to build into a segment,"
^XTMP("XPDT",7816,"RTN","LA7VHLU",77,0)=" ;                      passed by reference."
^XTMP("XPDT",7816,"RTN","LA7VHLU",78,0)=" ;            LA7DATA = array used to build segment, pass by reference"
^XTMP("XPDT",7816,"RTN","LA7VHLU",79,0)=" ;                      used to return built segment."
^XTMP("XPDT",7816,"RTN","LA7VHLU",80,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VHLU",81,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",82,0)=" ; Returns         LA7DATA = array with segment built"
^XTMP("XPDT",7816,"RTN","LA7VHLU",83,0)=" ;              LA7DATA(0) = if everything fits on one node"
^XTMP("XPDT",7816,"RTN","LA7VHLU",84,0)=" ;         LA7DATA(0,1...) = multiple elements if >245 characters"
^XTMP("XPDT",7816,"RTN","LA7VHLU",85,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",86,0)=" N LA7I,LA7J,LA7LAST,LA7SUB"
^XTMP("XPDT",7816,"RTN","LA7VHLU",87,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",88,0)=" K LA7DATA"
^XTMP("XPDT",7816,"RTN","LA7VHLU",89,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",90,0)=" S LA7FS=$G(LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",91,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",92,0)=" ; Node to store data in array"
^XTMP("XPDT",7816,"RTN","LA7VHLU",93,0)=" S LA7SUB=0"
^XTMP("XPDT",7816,"RTN","LA7VHLU",94,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",95,0)=" ; Last element in array"
^XTMP("XPDT",7816,"RTN","LA7VHLU",96,0)=" S LA7LAST=$O(LA7ARRAY(""""),-1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",97,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",98,0)=" F LA7I=0:1:LA7LAST D"
^XTMP("XPDT",7816,"RTN","LA7VHLU",99,0)=" . I ($L($G(LA7DATA(LA7SUB)))+$L($G(LA7ARRAY(LA7I))))>245 S LA7SUB=LA7SUB+1"
^XTMP("XPDT",7816,"RTN","LA7VHLU",100,0)=" . I $O(LA7ARRAY(LA7I,""""))'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU",101,0)=" . . S LA7J="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU",102,0)=" . . F  S LA7J=$O(LA7ARRAY(LA7I,LA7J)) Q:LA7J=""""  D"
^XTMP("XPDT",7816,"RTN","LA7VHLU",103,0)=" . . . I ($L($G(LA7DATA(LA7SUB)))+$L($G(LA7ARRAY(LA7I,LA7J))))>245 S LA7SUB=LA7SUB+1"
^XTMP("XPDT",7816,"RTN","LA7VHLU",104,0)=" . . . S LA7DATA(LA7SUB)=$G(LA7DATA(LA7SUB))_$G(LA7ARRAY(LA7I,LA7J))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",105,0)=" . S LA7DATA(LA7SUB)=$G(LA7DATA(LA7SUB))_$G(LA7ARRAY(LA7I))_LA7FS"
^XTMP("XPDT",7816,"RTN","LA7VHLU",106,0)=" Q "
^XTMP("XPDT",7816,"RTN","LA7VHLU",107,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",108,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",109,0)="FILESEG(LA7ROOT,LA7DATA) ; File HL segment in global"
^XTMP("XPDT",7816,"RTN","LA7VHLU",110,0)=" ; Call with  LA7ROOT = global root used to store HL segment"
^XTMP("XPDT",7816,"RTN","LA7VHLU",111,0)=" ;            LA7DATA = array with data to file (pass by reference)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",112,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",113,0)=" N LA7HLSN,LA7I"
^XTMP("XPDT",7816,"RTN","LA7VHLU",114,0)=" I $G(LA7ROOT)="""" Q  ; no global root passed."
^XTMP("XPDT",7816,"RTN","LA7VHLU",115,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",116,0)=" ; get next subscript number"
^XTMP("XPDT",7816,"RTN","LA7VHLU",117,0)=" S LA7HLSN=($O(@(LA7ROOT)@(""""),-1))+1"
^XTMP("XPDT",7816,"RTN","LA7VHLU",118,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",119,0)=" ; store first 245 characters of segment"
^XTMP("XPDT",7816,"RTN","LA7VHLU",120,0)=" S @LA7ROOT@(LA7HLSN)=$G(LA7DATA(0))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",121,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",122,0)=" ; if segment >245 characters then store rest of message"
^XTMP("XPDT",7816,"RTN","LA7VHLU",123,0)=" S LA7I=0"
^XTMP("XPDT",7816,"RTN","LA7VHLU",124,0)=" F  S LA7I=$O(LA7DATA(LA7I)) Q:LA7I=""""  S @LA7ROOT@(LA7HLSN,LA7I)=LA7DATA(LA7I)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",125,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",126,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",127,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",128,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",129,0)="INIT6249() ; Create stub entry in file #62.49"
^XTMP("XPDT",7816,"RTN","LA7VHLU",130,0)=" ; Returns ien of entry in #62.49 that was created"
^XTMP("XPDT",7816,"RTN","LA7VHLU",131,0)=" ; NOTE: set lock on entry in #62.49, does not release it - calling process should release lock"
^XTMP("XPDT",7816,"RTN","LA7VHLU",132,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",133,0)=" N LA7ERR,LA7FDA,ZERO"
^XTMP("XPDT",7816,"RTN","LA7VHLU",134,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",135,0)=" ; Lock zeroth node of file."
^XTMP("XPDT",7816,"RTN","LA7VHLU",136,0)=" L +^LAHM(62.49,0):99999"
^XTMP("XPDT",7816,"RTN","LA7VHLU",137,0)=" I '$T Q -1"
^XTMP("XPDT",7816,"RTN","LA7VHLU",138,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",139,0)=" S ZERO=$G(^LAHM(62.49,0))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",140,0)=" F LA76249=$P(ZERO,""^"",3):1 I '$D(^LAHM(62.49,LA76249)) D  Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",141,0)=" . S $P(^LAHM(62.49,LA76249,0),""^"")=LA76249,^LAHM(62.49,""B"",LA76249,LA76249)="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU",142,0)=" . S $P(ZERO,""^"",3)=LA76249,$P(ZERO,""^"",4)=$P(ZERO,""^"",4)+1,^LAHM(62.49,0)=ZERO"
^XTMP("XPDT",7816,"RTN","LA7VHLU",143,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",144,0)=" ; Unlock zero node"
^XTMP("XPDT",7816,"RTN","LA7VHLU",145,0)=" L -^LAHM(62.49,0)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",146,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",147,0)=" ; Lock entry in file 62.49 - Calling process is responsible for releasing lock when no longer needed."
^XTMP("XPDT",7816,"RTN","LA7VHLU",148,0)=" L +^LAHM(62.49,LA76249):99999"
^XTMP("XPDT",7816,"RTN","LA7VHLU",149,0)=" I '$T L -^LAHM(62.49,0) Q -1"
^XTMP("XPDT",7816,"RTN","LA7VHLU",150,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",151,0)=" S LA7FDA(1,62.49,LA76249_"","",2)=""B"" ; status =(B)uilding"
^XTMP("XPDT",7816,"RTN","LA7VHLU",152,0)=" S LA7FDA(1,62.49,LA76249_"","",4)=$$NOW^XLFDT ; Date/time entered"
^XTMP("XPDT",7816,"RTN","LA7VHLU",153,0)=" D FILE^DIE("""",""LA7FDA(1)"",""LA7ERR(1)"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU",154,0)=" I $D(LA7ERR) S LA76249=-1"
^XTMP("XPDT",7816,"RTN","LA7VHLU",155,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",156,0)=" Q LA76249"
^XTMP("XPDT",7816,"RTN","LA7VHLU",157,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",158,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",159,0)="FILE6249(LA76249,LA7DATA) ; File HL segment in LAHM(62.49) global"
^XTMP("XPDT",7816,"RTN","LA7VHLU",160,0)=" ; Call with  LA76249 = ien of entry in file # 62.49"
^XTMP("XPDT",7816,"RTN","LA7VHLU",161,0)=" ;            LA7DATA = array with data to file (pass by reference)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",162,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",163,0)=" N LA7I,LA7J,LA7WP"
^XTMP("XPDT",7816,"RTN","LA7VHLU",164,0)=" I '$G(LA76249) Q  ; no entry passed."
^XTMP("XPDT",7816,"RTN","LA7VHLU",165,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",166,0)=" ; move data in positive number subscripts"
^XTMP("XPDT",7816,"RTN","LA7VHLU",167,0)=" S LA7I="""",LA7J=0"
^XTMP("XPDT",7816,"RTN","LA7VHLU",168,0)=" F  S LA7I=$O(LA7DATA(LA7I)) Q:LA7I=""""  D"
^XTMP("XPDT",7816,"RTN","LA7VHLU",169,0)=" . S LA7J=LA7J+1"
^XTMP("XPDT",7816,"RTN","LA7VHLU",170,0)=" . S LA7WP(LA7J)=LA7DATA(LA7I)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",171,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",172,0)=" ; set blank line which separates each segment"
^XTMP("XPDT",7816,"RTN","LA7VHLU",173,0)=" S LA7WP(LA7J+1)="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU",174,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",175,0)=" ; file data"
^XTMP("XPDT",7816,"RTN","LA7VHLU",176,0)=" D WP^DIE(62.49,LA76249_"","",150,""A"",""LA7WP"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU",177,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",178,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",179,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",180,0)="P(LA7X,LA7P,LA7EC) ; get field LA7P from array (passed by ref.)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",181,0)=" ; Call with  LA7X = array to extract data from, pass by reference."
^XTMP("XPDT",7816,"RTN","LA7VHLU",182,0)=" ;            LA7P = field to extract"
^XTMP("XPDT",7816,"RTN","LA7VHLU",183,0)=" ;           LA7EC = encoding character separator"
^XTMP("XPDT",7816,"RTN","LA7VHLU",184,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",185,0)=" ; Returns LA7Y = value of requested piece"
^XTMP("XPDT",7816,"RTN","LA7VHLU",186,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",187,0)=" N I,L,LA7Y,L1,Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU",188,0)=" S L=0,Y=1,LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU",189,0)=" ;Y=begining piece of each node, L1=number of pieces in each node"
^XTMP("XPDT",7816,"RTN","LA7VHLU",190,0)=" ;L=last piece in each node, quit when last piece is greater than LA7P"
^XTMP("XPDT",7816,"RTN","LA7VHLU",191,0)=" F I=0:1 Q:'$D(LA7X(I))  S L1=$L(LA7X(I),LA7EC),L=L1+Y-1 D  Q:Y>LA7P"
^XTMP("XPDT",7816,"RTN","LA7VHLU",192,0)=" . ;if LA7P is less than last piece, this node has field you want"
^XTMP("XPDT",7816,"RTN","LA7VHLU",193,0)=" . S:LA7P'>L LA7Y=LA7Y_$P(LA7X(I),LA7EC,(LA7P-Y+1))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",194,0)=" . S Y=L"
^XTMP("XPDT",7816,"RTN","LA7VHLU",195,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU",196,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",197,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",198,0)="PA(LA7X,LA7P,LA7EC,LA7Y) ; get field LA7P from array (passed by ref.)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",199,0)=" ; Call with  LA7X = array to extract data from, pass by reference."
^XTMP("XPDT",7816,"RTN","LA7VHLU",200,0)=" ;            LA7P = field to extract"
^XTMP("XPDT",7816,"RTN","LA7VHLU",201,0)=" ;           LA7EC = encoding character separator"
^XTMP("XPDT",7816,"RTN","LA7VHLU",202,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",203,0)=" ; Returns LA7Y = array value of requested piece (returned by reference)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",204,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",205,0)=" N I,L,L1,X,Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU",206,0)=" S (L,LA7Y)=0,Y=1"
^XTMP("XPDT",7816,"RTN","LA7VHLU",207,0)=" ;Y=begining piece of each node, L1=number of pieces in each node"
^XTMP("XPDT",7816,"RTN","LA7VHLU",208,0)=" ;L=last piece in each node, quit when last piece is greater than LA7P"
^XTMP("XPDT",7816,"RTN","LA7VHLU",209,0)=" F I=0:1 Q:'$D(LA7X(I))  S L1=$L(LA7X(I),LA7EC),L=L1+Y-1 D  Q:Y>LA7P"
^XTMP("XPDT",7816,"RTN","LA7VHLU",210,0)=" . ;if LA7P is less than last piece, this node has field you want"
^XTMP("XPDT",7816,"RTN","LA7VHLU",211,0)=" . I LA7P'>L S X=$P(LA7X(I),LA7EC,(LA7P-Y+1)) S:X]"""" LA7Y=LA7Y+1,LA7Y(LA7Y)=X"
^XTMP("XPDT",7816,"RTN","LA7VHLU",212,0)=" . S Y=L"
^XTMP("XPDT",7816,"RTN","LA7VHLU",213,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",214,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",215,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",216,0)="BLG(LA7ACTN,LA7CHGTY,LA7FS,LA7ECH) ; Build BLG segment -  billing information"
^XTMP("XPDT",7816,"RTN","LA7VHLU",217,0)=" ; Call with  LA7ACTN = billing account Number"
^XTMP("XPDT",7816,"RTN","LA7VHLU",218,0)=" ;           LA7CHGTY = charge type"
^XTMP("XPDT",7816,"RTN","LA7VHLU",219,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VHLU",220,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",221,0)=" ; Returns LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU",222,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",223,0)=" ; Default to CO (contract) for charge type - table 0122"
^XTMP("XPDT",7816,"RTN","LA7VHLU",224,0)=" S LA7CHGTY=$G(LA7CHGTY,""CO"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU",225,0)=" S LA7Y=""BLG""_LA7FS_LA7FS_LA7CHGTY_LA7FS_$$M11^HLFNC(LA7ACTN,LA7ECH)_LA7FS"
^XTMP("XPDT",7816,"RTN","LA7VHLU",226,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU",227,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",228,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",229,0)="PTEXTID(LA74,LA7UID,LA7Y) ; Retrieve patient's id that was transmitted by other system."
^XTMP("XPDT",7816,"RTN","LA7VHLU",230,0)=" ; Used to build PID-2 when returning results to placer."
^XTMP("XPDT",7816,"RTN","LA7VHLU",231,0)=" ; Looks in file LAB PENDING ORDERS (#69.6) for info pertaining to placer's order."
^XTMP("XPDT",7816,"RTN","LA7VHLU",232,0)=" ; Call with  LA74 = ien of placer in INSTITUTION file (#4)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",233,0)=" ;          LA7UID = placer's specimen identifier (UID, etc.)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",234,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",235,0)=" ; Returns array LA7Y by reference"
^XTMP("XPDT",7816,"RTN","LA7VHLU",236,0)=" ;               LA7Y(""FS"")  - original field separator"
^XTMP("XPDT",7816,"RTN","LA7VHLU",237,0)=" ;               LA7Y(""ECH"") - original encoding characters used"
^XTMP("XPDT",7816,"RTN","LA7VHLU",238,0)=" ;             LA7Y(""PID-2"") - original PID-2 sequence"
^XTMP("XPDT",7816,"RTN","LA7VHLU",239,0)=" ;             LA7Y(""PID-4"") - original PID-4 sequence"
^XTMP("XPDT",7816,"RTN","LA7VHLU",240,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",241,0)=" N LA7696,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VHLU",242,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",243,0)=" S LA74=$G(LA74),LA7UID=$G(LA7UID),LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU",244,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",245,0)=" ; Return null if no values passed"
^XTMP("XPDT",7816,"RTN","LA7VHLU",246,0)=" I LA74<1!(LA7UID="""") Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",247,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",248,0)=" S LA7696=$O(^LRO(69.6,""RST"",LA74,LA7UID,0))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",249,0)=" I LA7696 D"
^XTMP("XPDT",7816,"RTN","LA7VHLU",250,0)=" . S LA7X=$G(^LRO(69.6,LA7696,700))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",251,0)=" . S LA7Y(""FS"")=$E(LA7X,1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",252,0)=" . S LA7Y(""ECH"")=$E(LA7X,2,5)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",253,0)=" . S LA7Y(""PID-2"")=$G(^LRO(69.6,LA7696,700.02))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",254,0)=" . S LA7Y(""PID-4"")=$G(^LRO(69.6,LA7696,700.04))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",255,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",256,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",257,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",258,0)="RETOBR(LA74,LA7UID,LA7NLT,LA7Y) ; Retrieve placer's various OBR's that were transmitted by other system."
^XTMP("XPDT",7816,"RTN","LA7VHLU",259,0)=" ; Used to build OBR-4/17/18 when returning results to placer."
^XTMP("XPDT",7816,"RTN","LA7VHLU",260,0)=" ; Looks in file LAB PENDING ORDERS (#69.6) for info pertaining to placer's order."
^XTMP("XPDT",7816,"RTN","LA7VHLU",261,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",262,0)=" ; Call with   LA74 = ien of placer in INSTITUTION file (#4)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",263,0)=" ;           LA7UID = placer's specimen identifier (UID, accession number, etc.)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",264,0)=" ;           LA7NLT = ordered NLT test code"
^XTMP("XPDT",7816,"RTN","LA7VHLU",265,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",266,0)=" ; Returns array LA7Y by reference"
^XTMP("XPDT",7816,"RTN","LA7VHLU",267,0)=" ;               LA7Y(""FS"")     - original field separator"
^XTMP("XPDT",7816,"RTN","LA7VHLU",268,0)=" ;               LA7Y(""ECH"")    - original encoding characters used"
^XTMP("XPDT",7816,"RTN","LA7VHLU",269,0)=" ;               LA7Y(""OBR-4"")  - original OBR-4 sequence"
^XTMP("XPDT",7816,"RTN","LA7VHLU",270,0)=" ;               LA7Y(""OBR-17)  - modified info from OBR-17"
^XTMP("XPDT",7816,"RTN","LA7VHLU",271,0)=" ;               LA7Y(""OBR-18"") - original OBR-18 sequence"
^XTMP("XPDT",7816,"RTN","LA7VHLU",272,0)=" ;               LA7Y(""OBR-19"") - original OBR-19 sequence"
^XTMP("XPDT",7816,"RTN","LA7VHLU",273,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",274,0)=" N LA7696,LA76964,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VHLU",275,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",276,0)=" S LA74=$G(LA74),LA7UID=$G(LA7UID),LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU",277,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",278,0)=" ; Return null if no values passed"
^XTMP("XPDT",7816,"RTN","LA7VHLU",279,0)=" I LA74<1!(LA7UID="""")!(LA7NLT="""") Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",280,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",281,0)=" S LA7696=$O(^LRO(69.6,""RST"",LA74,LA7UID,0))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",282,0)=" I LA7696<1 Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",283,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",284,0)=" S LA7X=$G(^LRO(69.6,LA7696,700))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",285,0)=" S LA7Y(""FS"")=$E(LA7X,1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",286,0)=" S LA7Y(""ECH"")=$E(LA7X,2,5)"
^XTMP("XPDT",7816,"RTN","LA7VHLU",287,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",288,0)=" S LA76964=$O(^LRO(69.6,LA7696,2,""C"",LA7NLT,0))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",289,0)=" I LA76964<1 Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU",290,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",291,0)=" S LA7Y(""OBR-4"")=$G(^LRO(69.6,LA7696,2,LA76964,700.04))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",292,0)=" S LA7Y(""OBR-17"")=$P($G(^LRO(69.6,LA7696,2,LA76964,1)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU",293,0)=" S LA7Y(""OBR-18"")=$G(^LRO(69.6,LA7696,2,LA76964,700.18))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",294,0)=" S LA7Y(""OBR-19"")=$G(^LRO(69.6,LA7696,2,LA76964,700.19))"
^XTMP("XPDT",7816,"RTN","LA7VHLU",295,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU",296,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU2")="0^22^B28776777^B19775199"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",1,0)="LA7VHLU2 ;DALOI/JMC - HL7 Segment Utility ;Aug 20, 2007"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,61,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",4,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",6,0)="GETSEG(LA76249,LA7NODE,LA7ARR) ; Returns the next segment from file 62.49"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",7,0)=" ;   during processing of an inbound message. The following variables"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",8,0)=" ;   are used for the processing."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",9,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",10,0)=" ; Call with  LA76249 - Entry in 62.49 where message is"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",11,0)=" ;            LA7NODE - Curent ien of ""150"" wp field"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",12,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",13,0)=" ; Returns     LA7ARR - Data is returned in LA7ARR(0) and"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",14,0)=" ;                      LA7ARR(n) if segmemt is greater than 245 chars."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",15,0)=" ;             LA7END - flag that end of message has been reached"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",16,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",17,0)=" N LA7I,LA7END,LA7QUIT"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",18,0)=" K LA7ARR"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",19,0)=" S LA76249=+$G(LA76249),LA7NODE=$G(LA7NODE,0),(LA7END,LA7QUIT)=0"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",20,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",21,0)=" S LA7NODE=$O(^LAHM(62.49,LA76249,150,LA7NODE))"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",22,0)=" I 'LA7NODE S LA7END=1"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",23,0)=" E  D"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",24,0)=" . S LA7ARR(0)=$G(^LAHM(62.49,LA76249,150,LA7NODE,0)),LA7I=0"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",25,0)=" . F  S LA7NODE=$O(^LAHM(62.49,LA76249,150,LA7NODE)) Q:'LA7NODE  D  Q:LA7QUIT"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",26,0)=" . . I $G(^LAHM(62.49,LA76249,150,LA7NODE,0))="""" S LA7QUIT=1 Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",27,0)=" . . S LA7I=LA7I+1,LA7ARR(LA7I)=$G(^LAHM(62.49,LA76249,150,LA7NODE,0))"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",28,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",29,0)=" Q LA7END"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",30,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",31,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",32,0)="FINDSITE(LA7Z,LA7TYPE,LA7SEM) ; Look up an institution in file #4"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",33,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",34,0)=" ; Call with LA7Z = value to lookup "
^XTMP("XPDT",7816,"RTN","LA7VHLU2",35,0)=" ;                  VA: ""VA""(optional) followed by 3-5 character VA site number"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",36,0)=" ;                  Non-VA uses 3-5 character site assigned identifier"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",37,0)=" ;          LA7TYPE = 1 (host facility)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",38,0)=" ;                    2 (collection facility)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",39,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",40,0)=" ;           LA7SEM = 0 (log error message)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",41,0)=" ;                    1 (suppress error message)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",42,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",43,0)=" ; Returns     LA7Y = ien of entry in INSTITUTION file (#4)."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",44,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",45,0)=" N LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",46,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",47,0)=" S LA7TYPE=$G(LA7TYPE),LA7Z=$G(LA7Z),LA7Y="""",LA7SEM=$G(LA7SEM,1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",48,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",49,0)=" ; If VA facility then strip off ""VA"" before lookup"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",50,0)=" I $E(LA7Z,1,2)=""VA"" S LA7X=$E(LA7Z,3,$L(LA7Z))"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",51,0)=" E  S LA7X=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",52,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",53,0)=" ; Lookup in INSTITUTION file (#4)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",54,0)=" ; If appears to be a VA station number"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",55,0)=" I LA7Z?1(3N,3.4N2U,3N1U1N) S LA7Y=$$IDX^XUAF4(""VASTANUM"",LA7Z)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",56,0)=" ; If appears to be a DoD DMIS number"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",57,0)=" I LA7Z?4N S LA7Y=$$IDX^XUAF4(""DMIS"",LA7Z)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",58,0)=" ; Else try anything"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",59,0)=" I 'LA7Y S LA7Y=$$FIND1^DIC(4,"""",""OMX"",LA7X)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",60,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",61,0)=" ; If unable to find in INSTITUTION file (#4) then try looking in"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",62,0)=" ; SHIPPING CONFIGURATION file (#62.9) using non-VA identifier."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",63,0)=" ; Check that entry is not a VA facility"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",64,0)=" I LA7Y'>0,LA7X]"""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",65,0)=" . N LA7J,LA7K"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",66,0)=" . S LA7J=0"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",67,0)=" . F  S LA7J=$O(^LAHM(62.9,LA7J)) Q:'LA7J  D  Q:LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",68,0)=" . . S LA7J(0)=$G(^LAHM(62.9,LA7J,0))"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",69,0)=" . . I $P(LA7J(0),""^"",4)'=1 Q  ; Not active"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",70,0)=" . . I $P(LA7J(0),""^"",12)'=LA7X Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",71,0)=" . . S LA7K=$S(LA7TYPE=1:$P(LA7J(0),""^"",3),LA7TYPE=2:$P(LA7J(0),""^"",2),1:"""")"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",72,0)=" . . I LA7K,$$NVAF(LA7K) S LA7Y=LA7K"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",73,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",74,0)=" ; No entry found"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",75,0)=" I 'LA7SEM,LA7Y'>0 D"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",76,0)=" . N LA7SITE"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",77,0)=" . S LA7SITE=$S(LA7TYPE=1:""Host"",LA7TYPE=2:""Collection"",1:""type"")_"" site: ""_$S(LA7Z]"""":LA7Z,1:""Blank-no value"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",78,0)=" . N LA7X,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",79,0)=" . D CREATE^LA7LOG(25)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",80,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",81,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",82,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",84,0)="RETFACID(LA7Z,LA7TYPE,LA7SEM) ; (RET)urn (FAC)ility (ID)entifier"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",85,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",86,0)=" ; Call with LA7Z = ien of entry in INSTITUTION file (#4)."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",87,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",88,0)=" ;          LA7TYPE = 1 (host facility)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",89,0)=" ;                    2 (collecting facility)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",90,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",91,0)=" ;           LA7SEM = 0 (log error message)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",92,0)=" ;                    1 (suppress error message)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",93,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",94,0)=" ; Returns     LA7Y = VA site number"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",95,0)=" ;                    non-VA site identifier"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",97,0)=" N I,LA7NVAF,LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",98,0)=" S LA7Y="""",LA7SEM=$G(LA7SEM,1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",99,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",100,0)=" ; Check identifiers on file."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",101,0)=" ; If DoD use DMIS code since some DoD also have VA station number."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",102,0)=" S LA7NVAF=$$NVAF(LA7Z)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",103,0)=" I LA7NVAF=0 S LA7Y=$$ID^XUAF4(""VASTANUM"",LA7Z)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",104,0)=" I LA7NVAF=1 S LA7Y=$$ID^XUAF4(""DMIS"",LA7Z)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",105,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",106,0)=" ; If unable to find in INSTITUTION file (#4) then try looking in"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",107,0)=" ; SHIPPING CONFIGURATION file (#62.9) using non-VA identifier."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",108,0)=" I LA7Y="""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",109,0)=" . N LA7J"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",110,0)=" . S LA7J=0"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",111,0)=" . F  S LA7J=$O(^LAHM(62.9,LA7J)) Q:'LA7J  D"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",112,0)=" . . S LA7J(0)=$G(^LAHM(62.9,LA7J,0))"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",113,0)=" . . I $P(LA7J(0),""^"",4)'=1 Q  ; Not active"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",114,0)=" . . I LA7TYPE=1,LA7Z=$P(LA7J(0),""^"",3) S LA7Y=$P(LA7J(0),""^"",12)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",115,0)=" . . I LA7TYPE=2,LA7Z=$P(LA7J(0),""^"",2) S LA7Y=$P(LA7J(0),""^"",12)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",116,0)=" . I LA7Y'="""" S LA7Y=$$UP^XLFSTR(LA7Y)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",117,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",118,0)=" ; No entry found"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",119,0)=" I 'LA7SEM,LA7Y="""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",120,0)=" . N LA7SITE"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",121,0)=" . S LA7SITE=$S(LA7TYPE=1:""Host"",LA7TYPE=2:""Collection"",1:""type"")_"" site: ""_$$GET1^DIQ(4,LA7Z_"","",.01)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",122,0)=" . N LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",123,0)=" . D CREATE^LA7LOG(25)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",124,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",125,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",126,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",127,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",128,0)="FNDOLOC(LRUID) ; Find ordering location"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",129,0)=" ; Call with LRUID = Accession's UID"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",130,0)=" ; Returns    LA7Y = ordering location^ordering institution"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",131,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",132,0)=" N LRAA,LRAD,LRAN,LA7X,LA7Y,X,Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",133,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",134,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU2",135,0)=" S X=$Q(^LRO(68,""C"",LRUID))"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",136,0)=" I $QS(X,3)'=LRUID Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",137,0)=" S LA7X=$P($G(^LRO(68,$QS(X,4),1,$QS(X,5),1,$QS(X,6),0)),""^"",13)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",138,0)=" I 'LA7X Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",139,0)=" D GETS^DIQ(44,LA7X_"","","".01;3"",""EI"",""LA7Y"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",140,0)=" S LA7Y=LA7X_""^""_LA7Y(44,LA7X_"","",.01,""E"")_""^""_LA7Y(44,LA7X_"","",3,""I"")_""^""_LA7Y(44,LA7X_"","",3,""E"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",141,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",142,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",143,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",144,0)="CHKICN(LA7X) ; Lookup patient using ICN"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",145,0)=" ; Call with LA7X = patient's ICN"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",146,0)=" ; Returns   LA7Y = patient's DFN^full ICN"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",147,0)=" ;                  -1^error message"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",148,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",149,0)=" ; Note - until MPI can handle full ICN (number,""V"" and checksum) as lookup value"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",150,0)=" ; then confirm if full ICN passed in with full ICN from MPI."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",151,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",152,0)=" N LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",153,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",154,0)=" S (LA7Y,LA7Z)="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU2",155,0)=" S LA7X(1)=$P(LA7X,""V"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",156,0)=" S LA7X(2)=$P(LA7X,""V"",2)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",157,0)=" I LA7X(2)="""" S LA7Y=$$GETDFN^MPIF001(LA7X(1))"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",158,0)=" E  D"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",159,0)=" . S LA7Y=$$GETDFN^MPIF001(LA7X(1))"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",160,0)=" . S LA7Z=$$GETICN^MPIF001(LA7Y)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",161,0)=" . I LA7X'=LA7Z S LA7Y=""-1^Not a valid ICN"""
^XTMP("XPDT",7816,"RTN","LA7VHLU2",162,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",163,0)=" Q LA7Y_""^""_LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",164,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",165,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",166,0)="NVAF(LA7X) ; Set flag sending to non-VA facility."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",167,0)=" ; Used to code certain segments for other systems, i.e. CHCS-DOD."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",168,0)=" ; Call with LA7X = ien of institution in file #4"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",169,0)=" ; Returns   LA7Y = 0 (VA facility)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",170,0)=" ;                  1 (DoD facility - Army, Navy, Air Force)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",171,0)=" ;                  2 (Indian Health Service)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",172,0)=" ;                  3 (Other - non US Government)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",173,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",174,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",175,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU2",176,0)=" I LA7X S LA7Y=$$GET1^DIQ(4,LA7X_"","",95,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",177,0)=" S LA7Y=$S(LA7Y=""N"":1,LA7Y=""AF"":1,LA7Y=""ARMY"":1,LA7Y=""I"":2,LA7Y=""O"":3,1:0)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",178,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",179,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",180,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",181,0)="FACDNS(LA74,LA7FS,LA7ECH,LA7LV) ; Build facility DNS identifer"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",182,0)=" ; Call with LA74 = pointer to entry in INSITUTION file (#4)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",183,0)=" ;          LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",184,0)=" ;         LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",185,0)=" ;          LA7LV = field (1)/ component (2) level in message"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",186,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",187,0)=" ; Returns   LA7Y = STA#~STA-NAME~DNS"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",188,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",189,0)=" N LA7DN,LA7FAC,LA7NVAF,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",190,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU2",191,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",192,0)=" ; Retrieve saved valued"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",193,0)=" I $D(^TMP($J,""LA7VHLU"",""INST-DNS"",LA74,LA7FS_LA7ECH,LA7LV)) S LA7Y=^TMP($J,""LA7VHLU"",""INST-DNS"",LA74,LA7FS_LA7ECH,LA7LV)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",194,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",195,0)=" ; Retrieve station# or DMIS code for VA/DoD facilities."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",196,0)=" ; Others leave blank for now (Jun 2005)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",197,0)=" ; Retrieve domain name for this institution."
^XTMP("XPDT",7816,"RTN","LA7VHLU2",198,0)=" ; Build component and save for other parts of message building"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",199,0)=" I LA7Y="""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",200,0)=" . S LA7FAC="""",LA7NVAF=$$NVAF(LA74)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",201,0)=" . I LA7NVAF<2 S LA7FAC=$$ID^XUAF4($S(LA7NVAF=1:""DMIS"",1:""VASTANUM""),LA74)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",202,0)=" . S LA7Y=LA7FAC"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",203,0)=" . S LA7DN=$$WHAT^XUAF4(LA74,60)"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",204,0)=" . I LA7DN'="""" S LA7DN=$$CHKDATA^LA7VHLU3(LA7DN,LA7FS_LA7ECH),LA7Y=LA7FAC_$S(LA7LV=1:$E(LA7ECH),1:$E(LA7ECH,4))_LA7DN_$S(LA7LV=1:$E(LA7ECH),1:$E(LA7ECH,4))_""DNS"""
^XTMP("XPDT",7816,"RTN","LA7VHLU2",205,0)=" . S ^TMP($J,""LA7VHLU"",""INST-DNS"",LA74,LA7FS_LA7ECH,LA7LV)=LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",206,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU2",207,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU3")="0^6^B55573792^B15291257"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",1,0)="LA7VHLU3 ;DALOI/JMC - HL7 Segment Utility ;Jan 29, 2009"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",4,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",6,0)="NTE(LA7ARRAY,LA7TXT,LA7TYP,LA7FS,LA7ECH,LA7NTESN,LA7CMTYP,LA7FMT) ; Build NTE segment -  notes and comments"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",7,0)=" ; Call with LA7ARRAY = array to return NTE segment, pass by reference"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",8,0)=" ;             LA7TXT = text to send (by value if format=0, by reference if format>0)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",9,0)=" ;             LA7TYP = source of comment - HL table 0105 Default to L (ancilliary/filler)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",10,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",11,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",12,0)=" ;           LA7NTESN = segment SET ID (pass by reference)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",13,0)=" ;           LA7CMTYP = comment type code (HL table 0364)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",14,0)=" ;             LA7FMT = format of text (0=single, 1=multi-line formatted text, 2=multi-line repetition)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",15,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",16,0)=" N LA7CTYPE,LA7NTE,LA7TEXT"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",17,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",18,0)=" S LA7FS=$G(LA7FS),LA7TXT=$G(LA7TXT),(LA7CTYPE,LA7TEXT)="""",LA7FMT=$G(LA7FMT)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",19,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",20,0)=" ; Remove leading ""~"" from comments and escape encode text"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",21,0)=" I 'LA7FMT D"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",22,0)=" . I $E(LA7TXT,1)=""~"" S LA7TXT=$$TRIM^XLFSTR(LA7TXT,""L"",""~"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",23,0)=" . S LA7TXT=$$TRIM^XLFSTR(LA7TXT,""R"","" "")"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",24,0)=" . S LA7TEXT=$$CHKDATA^LA7VHLU3(LA7TXT,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",25,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",26,0)=" I LA7FMT>0 D"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",27,0)=" . N LA7I"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",28,0)=" . S LA7I=0"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",29,0)=" . F  S LA7I=$O(LA7TXT(LA7I)) Q:'LA7I  D"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",30,0)=" . . I $E(LA7TXT(LA7I),1)=""~"" S LA7TXT(LA7I)=$$TRIM^XLFSTR(LA7TXT(LA7I),""L"",""~"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",31,0)=" . . S LA7TXT(LA7I)=$$TRIM^XLFSTR(LA7TXT(LA7I),""R"","" "")"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",32,0)=" . . S LA7TXT(LA7I)=$$CHKDATA^LA7VHLU3(LA7TXT(LA7I),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",33,0)=" . . I LA7FMT=1 S LA7TEXT(LA7I)=LA7TEXT_$S(LA7I>1:$E(LA7ECH,3)_"".br""_$E(LA7ECH,3),1:"""")_LA7TXT(LA7I) Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",34,0)=" . . I LA7FMT=2 S LA7TEXT(LA7I)=LA7TEXT_LA7TXT(LA7I)_$E(LA7ECH,2) Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",35,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",36,0)=" ; Update segment SET ID"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",37,0)=" S LA7NTESN=$G(LA7NTESN)+1"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",38,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",39,0)=" ; Default source of comment if undefined"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",40,0)=" I $G(LA7TYP)="""" S LA7TYP=""L"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",41,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",42,0)=" ; Encode HL7 table 0364 with comment type"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",43,0)=" ; If no type passed then default to REmark"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",44,0)=" ; If 'code' not found in table then send 'code' in text (2nd component)."
^XTMP("XPDT",7816,"RTN","LA7VHLU3",45,0)=" I $G(LA7CMTYP)="""" S LA7CMTYP=""RE"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",46,0)=" I '$D(^TMP($J,""HL70364"")) D HL70364"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",47,0)=" S LA7X=$G(^TMP($J,""HL70364"",LA7CMTYP))"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",48,0)=" I LA7X="""" S $P(LA7CTYPE,$E(LA7ECH,1),2)=$$CHKDATA^LA7VHLU3(LA7CMTYP,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",49,0)=" E  D"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",50,0)=" . S LA7CTYPE=LA7CMTYP"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",51,0)=" . S $P(LA7CTYPE,$E(LA7ECH,1),2)=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",52,0)=" . S $P(LA7CTYPE,$E(LA7ECH,1),3)=""HL70364"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",53,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",54,0)=" S LA7NTE(0)=""NTE"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",55,0)=" S LA7NTE(1)=LA7NTESN"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",56,0)=" S LA7NTE(2)=LA7TYP"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",57,0)=" M LA7NTE(3)=LA7TEXT"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",58,0)=" S LA7NTE(4)=LA7CTYPE"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",59,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",60,0)=" D BUILDSEG^LA7VHLU(.LA7NTE,.LA7ARRAY,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",61,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",62,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",63,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",64,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",65,0)="CHKDATA(LA7IN,LA7CH) ; Check data to be built into an HL7 field for characters that"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",66,0)=" ; conflict with encoding characters. Convert conflicting character using HL7 escape encoding."
^XTMP("XPDT",7816,"RTN","LA7VHLU3",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",68,0)=" ; Call with LA7IN = data to be checked"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",69,0)=" ;           LA7CH = HL7 delimiters to check for"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",70,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",71,0)=" ; Returns LA7OUT - checked data, converted if appropriate"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",72,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",73,0)=" N J,LA7ESC,LA7LEN,LA7OUT,X"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",74,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",75,0)=" S LA7IN=$G(LA7IN),LA7CH=$G(LA7CH),LA7OUT="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",76,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",77,0)=" I LA7IN=""""!(LA7CH="""") Q LA7OUT"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",78,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",79,0)=" ; Build array of encoding characters to check"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",80,0)=" S LA7LEN=$L(LA7CH),LA7ESC=$E(LA7CH,4)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",81,0)=" F J=1:1:LA7LEN S LA7CH($E(LA7CH,J))=$E(""FSRET"",J)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",82,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",83,0)=" ; Check each character and convert if appropiate"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",84,0)=" F J=1:1:$L(LA7IN) D"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",85,0)=" . S X=$E(LA7IN,J)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",86,0)=" . I $D(LA7CH(X)) S X=LA7ESC_LA7CH(X)_LA7ESC"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",87,0)=" . S LA7OUT=LA7OUT_X"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",88,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",89,0)=" Q LA7OUT"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",90,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",91,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",92,0)="CNVFLD(LA7IN,LA7ECH1,LA7ECH2) ; Convert an encoded HL7 segment/field from one encoding scheme to another"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",93,0)=" ; Call with   LA7IN = data to be converted"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",94,0)=" ;           LA7ECH1 = delimiters of input"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",95,0)=" ;           LA7ECH2 = delimiters of output"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",97,0)=" ; Returns LA7OUT - segment/field converted to new encoding scheme"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",98,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",99,0)=" N J,LA7ECH,LA7ESC,LA7OUT,X"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",100,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",101,0)=" S LA7IN=$G(LA7IN),LA7ECH1=$G(LA7ECH1),LA7ECH2=$G(LA7ECH2),LA7OUT="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",102,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",103,0)=" I LA7IN=""""!(LA7ECH1="""")!(LA7ECH2="""") Q LA7OUT"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",104,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",105,0)=" ; Abort if input encoding length greater than output"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",106,0)=" I $L(LA7ECH1)>$L(LA7ECH2) Q LA7OUT"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",107,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",108,0)=" ; If same then return input as output"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",109,0)=" I LA7ECH1=LA7ECH2 Q LA7IN"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",111,0)=" S LA7ESC=$E(LA7ECH2,4)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",112,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",113,0)=" ; Build array to convert source encoding to target encoding"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",114,0)=" F J=1:1:$L(LA7ECH1) S LA7ECH($E(LA7ECH1,J))=$E(LA7ECH2,J)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",115,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",116,0)=" ; Check each character and convert if appropiate"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",117,0)=" ; If source conflicts with target encoding character then convert to escape encoding"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",118,0)=" ; If match on source encoding character - convert to new encoding"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",119,0)=" F J=1:1:$L(LA7IN) D"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",120,0)=" . S X=$E(LA7IN,J)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",121,0)=" . I '$D(LA7ECH(X)),LA7ECH2[X S X=LA7ESC_$E(""FSRET"",($F(LA7ECH2,X)-1))_LA7ESC"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",122,0)=" . I $D(LA7ECH(X)) S X=LA7ECH(X)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",123,0)=" . S LA7OUT=LA7OUT_X"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",124,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",125,0)=" Q LA7OUT"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",126,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",127,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",128,0)="UNESC(LA7X,LA7CH) ; Unescape data using HL7 escape encoding"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",129,0)=" ; Call with  LA7X = string to decode"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",130,0)=" ;           LA7CH = HL7 delimiters (both field separator & encoding characters)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",131,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",132,0)=" ; Returns string of unencoded data."
^XTMP("XPDT",7816,"RTN","LA7VHLU3",133,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",134,0)=" N J,LA7ESC"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",135,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",136,0)=" ; If data does not contain escape encoding then return input string as output"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",137,0)=" S LA7ESC=$E(LA7CH,4)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",138,0)=" I LA7X'[LA7ESC Q LA7X"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",139,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",140,0)=" ; Build array of encoding characters to replace"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",141,0)=" F J=1:1:$L(LA7CH) S LA7CH(LA7ESC_$E(""FSRET"",J)_LA7ESC)=$E(LA7CH,J)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",142,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",143,0)=" Q $$REPLACE^XLFSTR(LA7X,.LA7CH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",144,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",145,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",146,0)="UNESCFT(LA7X,LA7CH,LA7Y) ; Unescape formatted text data using HL7 escape encoding"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",147,0)=" ; Call with  LA7X = array to decode (pass by reference)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",148,0)=" ;           LA7CH = HL7 delimiters (both field separator & encoding characters)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",149,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",150,0)=" ; Returns    LA7Y =  array of unencoded data."
^XTMP("XPDT",7816,"RTN","LA7VHLU3",151,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",152,0)=" N J,K,LA7ESC,LA7I,LA7Z,SAVX,SAVY,Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",153,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",154,0)=" S J=0,LA7ESC=$E(LA7CH,$L(LA7CH)-1),(LA7I,SAVX,SAVY)="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",155,0)=" F  S LA7I=$O(LA7X(LA7I)) Q:LA7I=""""  D"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",156,0)=" . S J=J+1"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",157,0)=" . I LA7X(LA7I)'[LA7ESC,SAVY="""" S LA7Y(J,0)=LA7X(LA7I) Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",158,0)=" . F K=1:1:$L(LA7X(LA7I)) D"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",159,0)=" . . S Z=$E(LA7X(LA7I),K)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",160,0)=" . . I Z=LA7ESC D  Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",161,0)=" . . . I SAVY="""" S SAVY=Z Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",162,0)=" . . . S SAVY=SAVY_Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",163,0)=" . . . I $P(SAVY,LA7ESC,2)="".br"" S LA7Y(J,0)=$S(SAVX]"""":SAVX,1:"" ""),SAVX="""",J=J+1"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",164,0)=" . . . I $E(SAVY,2)'=""."" S SAVX=SAVX_$$UNESC(SAVY,LA7CH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",165,0)=" . . . S SAVY="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",166,0)=" . . I SAVY]"""" S SAVY=SAVY_Z Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",167,0)=" . . S SAVX=SAVX_Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",168,0)=" . S LA7Y(J,0)=SAVX,SAVX="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",169,0)=" S LA7Y=J"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",170,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",171,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",172,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",173,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",174,0)="HL70364 ; Build HL7 table 0364 - Comment Type"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",175,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",176,0)=" S ^TMP($J,""HL70364"",""PI"")=""Patient Instructions"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",177,0)=" S ^TMP($J,""HL70364"",""AI"")=""Ancillary Instructions"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",178,0)=" S ^TMP($J,""HL70364"",""GI"")=""General Instructions"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",179,0)=" S ^TMP($J,""HL70364"",""1R"")=""Primary Reason"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",180,0)=" S ^TMP($J,""HL70364"",""2R"")=""Secondary Reason"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",181,0)=" S ^TMP($J,""HL70364"",""GR"")=""General Reason"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",182,0)=" S ^TMP($J,""HL70364"",""RE"")=""Remark"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",183,0)=" S ^TMP($J,""HL70364"",""DR"")=""Duplicate/Interaction Reason"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",184,0)=" S ^TMP($J,""HL70364"",""VA-LR001"")=""Order Comment"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",185,0)=" S ^TMP($J,""HL70364"",""VA-LR002"")=""Result Comment"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",186,0)=" S ^TMP($J,""HL70364"",""VA-LR003"")=""Result Interpretation"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",187,0)=" S ^TMP($J,""HL70364"",""VA-LRMI001"")=""Comment on Specimen (#.99)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",188,0)=" S ^TMP($J,""HL70364"",""VA-LRMI010"")=""Bact Rpt Remark (#13)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",189,0)=" S ^TMP($J,""HL70364"",""VA-LRMI011"")=""Preliminary Bact Comment (#1)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",190,0)=" S ^TMP($J,""HL70364"",""VA-LRMI012"")=""Bacteriology Test(s) (#1.5)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",191,0)=" S ^TMP($J,""HL70364"",""VA-LRMI013"")=""Bacteriology Smear/Prep (#11.7)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",192,0)=" S ^TMP($J,""HL70364"",""VA-LRMI020"")=""Parasite Rpt Remark (#17)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",193,0)=" S ^TMP($J,""HL70364"",""VA-LRMI021"")=""Preliminary Parasite Comment (#16.5)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",194,0)=" S ^TMP($J,""HL70364"",""VA-LRMI022"")=""Parasite Test(s) (16.4)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",195,0)=" S ^TMP($J,""HL70364"",""VA-LRMI023"")=""Parasitology Smear/Prep (#15.51)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",196,0)=" S ^TMP($J,""HL70364"",""VA-LRMI030"")=""Mycology RPT Remark (#21)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",197,0)=" S ^TMP($J,""HL70364"",""VA-LRMI031"")=""Preliminary Mycology Comment (#20.5)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",198,0)=" S ^TMP($J,""HL70364"",""VA-LRMI032"")=""Mycology Test(s) (#20.4)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",199,0)=" S ^TMP($J,""HL70364"",""VA-LRMI033"")=""Mycology Smear/Prep (#19.6)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",200,0)=" S ^TMP($J,""HL70364"",""VA-LRMI040"")=""TB Rpt Remark (#27)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",201,0)=" S ^TMP($J,""HL70364"",""VA-LRMI041"")=""Preliminary TB Comment (#26.5)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",202,0)=" S ^TMP($J,""HL70364"",""VA-LRMI042"")=""TB Test(s) (#26.4)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",203,0)=" S ^TMP($J,""HL70364"",""VA-LRMI050"")=""Virology Rpt Remark (#37)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",204,0)=" S ^TMP($J,""HL70364"",""VA-LRMI051"")=""Preliminary Virology Comment (#36.5)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",205,0)=" S ^TMP($J,""HL70364"",""VA-LRMI052"")=""Virology Test (#36.4)"""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",206,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",207,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",208,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",209,0)="PCENC(LRDFN,LRSS,LRIDT) ; Find PCE encounter for an entry in file #63"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",210,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",211,0)=" ; Call with LRDFN = entry in file #63"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",212,0)=" ;            LRSS = file #63 subscript"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",213,0)=" ;           LRIDT = inverse date/time of specimen in file #63"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",214,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",215,0)=" ; Returns   LA7ENC = related PCE encounter"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",216,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",217,0)=" N LA7ENC,LA7UID,LA7X,LA7Y,LRODT,LRSN"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",218,0)=" S LA7ENC="""",LA7UID=$P($G(^LR(LRDFN,LRSS,LRIDT,""ORU"")),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",219,0)=" I LA7UID'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",220,0)=" . S LA7X=$$CHECKUID^LRWU4(LA7UID)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",221,0)=" . I 'LA7X Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",222,0)=" . S LA7Y=$G(^LRO(68,$P(LA7X,""^"",2),1,$P(LA7X,""^"",3),1,$P(LA7X,""^"",4),0))"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",223,0)=" . S LRODT=+$P(LA7Y,""^"",4),LRSN=+$P(LA7Y,""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",224,0)=" . I $P(LA7Y,""^"",2)=2,LRODT,LRSN S LA7ENC=$G(^LRO(69,LRODT,1,LRSN,""PCE""))"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",225,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VHLU3",226,0)=" Q LA7ENC"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",227,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",228,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",229,0)="SDENC(LA7PCE) ; Find SD Outpatient Encounter for an entry in file #63"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",230,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",231,0)=" ; Call with LA7PCE = PCE encounters from file #69"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",232,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",233,0)=" ; Returns   LA7ENC = related SD encounter"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",234,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",235,0)=" N LA7ENC,LA7X,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",236,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",237,0)=" S LA7ENC="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",238,0)=" F LA7I=1:1 S LA7X=$P(LA7PCE,"";"",LA7I) Q:LA7X=""""  D  Q:LA7ENC'="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU3",239,0)=" . K LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",240,0)=" . D LISTVST^SDOERPC(.LA7Y,LA7X)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",241,0)=" . S LA7Z=$Q(@LA7Y)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",242,0)=" . I $QS(LA7Z,1)=""SD ENCOUNTER LIST"",$QS(LA7Z,2)=$J S LA7ENC=$QS(LA7Z,3)"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",243,0)=" . K @LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",244,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU3",245,0)=" Q LA7ENC"
^XTMP("XPDT",7816,"RTN","LA7VHLU4")="0^24^B25782007^B25336667"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",1,0)="LA7VHLU4 ;DALOI/JMC - HL7 segment builder utility ;Aug 6, 2008"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",4,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",5,0)="INST(LA74,LA7FS,LA7ECH) ; Build institution field"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",6,0)=" ; Call with   LA74 = ien of institution in file #4"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",7,0)=" ;                    if null/undefined then use Kernel Site file."
^XTMP("XPDT",7816,"RTN","LA7VHLU4",8,0)=" ;            LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",9,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",10,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",11,0)=" ; Returns facility that performed the testing (ID^text^99VA4)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",12,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",13,0)=" N LA7NVAF,LA7X,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",14,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",15,0)=" S LA74=$G(LA74),LA7ECH=$G(LA7ECH),LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",16,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",17,0)=" ; If no institution, use Kernel Site default"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",18,0)=" I LA74="""" S LA74=+$$KSP^XUPARAM(""INST"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",19,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",20,0)=" ; Check if this field has been built previously for this institution"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",21,0)=" I LA74'="""",$D(^TMP($J,""LA7VHLU"",""99VA4"",LA74,LA7FS_LA7ECH)) S LA7Y=^TMP($J,""LA7VHLU"",""99VA4"",LA74,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",22,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",23,0)=" ; Value passed not a pointer - only build 2nd component"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",24,0)=" I LA7Y="""",LA74'="""",LA74'=+LA74 D"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",25,0)=" . S $P(LA7Y,$E(LA7ECH,1),2)=$$CHKDATA^LA7VHLU3(LA74,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",26,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",27,0)=" I LA7Y="""",LA74>0,LA74=+LA74 D"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",28,0)=" . S LA7NVAF=$$NVAF^LA7VHLU2(LA74)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",29,0)=" . ; Build id - VA station #/DMIS code"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",30,0)=" . I LA7NVAF<2 S LA7Y=$$ID^XUAF4($S(LA7NVAF=1:""DMIS"",1:""VASTANUM""),LA74)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",31,0)=" . ; Build name using field #100, otherwise #.01"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",32,0)=" . S LA7Z=$$NAME^XUAF4(LA74)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",33,0)=" . S $P(LA7Y,$E(LA7ECH,1),2)=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",34,0)=" . ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",35,0)=" . S $P(LA7Y,$E(LA7ECH,1),3)=""99VA4"""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",36,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",37,0)=" ; Save this field to TMP global to use for subsequent calls."
^XTMP("XPDT",7816,"RTN","LA7VHLU4",38,0)=" S ^TMP($J,""LA7VHLU"",""99VA4"",LA74,LA7FS_LA7ECH)=LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",39,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",40,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",41,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",42,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",43,0)="XAD(LA7FN,LA7DA,LA7DT,LA7FS,LA7ECH) ; Build extended address"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",44,0)=" ; Call with LA7FN = Source File number"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",45,0)=" ;                   Presently file #2 (PATIENT), #4 (INSTITUTION) or #200 (NEW PERSON)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",46,0)=" ;           LA7DA = Entry in source file"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",47,0)=" ;           LA7DT = As of date in FileMan format"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",48,0)=" ;           LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",49,0)=" ;          LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",50,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",51,0)=" ; Returns extended address"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",52,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",53,0)=" N LA7X,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",54,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",55,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",56,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",57,0)=" ; Check if this field has been built previously for this institution"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",58,0)=" I LA7FN,LA7DA,$D(^TMP($J,""LA7VHLU"",""99VA4A"",LA7FN,LA7DA,LA7FS_LA7ECH)) S LA7Y=^TMP($J,""LA7VHLU"",""99VA4A"",LA7FN,LA7DA,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",59,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",60,0)=" ; Build from file #2"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",61,0)=" I LA7Y="""",LA7FN=2,LA7DA D"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",62,0)=" . N DFN,VAHOW,VAPA,VAERR,VAROOT,VATEST"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",63,0)=" . S DFN=LA7DA"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",64,0)=" . I LA7DT S (VATEST(""ADD"",9),VATEST(""ADD"",10))=LA7DT"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",65,0)=" . D ADD^VADPT"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",66,0)=" . I VAERR Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",67,0)=" . S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(VAPA(1),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",68,0)=" . S $P(LA7Y,$E(LA7ECH),2)=$$CHKDATA^LA7VHLU3(VAPA(2),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",69,0)=" . S $P(LA7Y,$E(LA7ECH),3)=$$CHKDATA^LA7VHLU3(VAPA(4),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",70,0)=" . S $P(LA7Y,$E(LA7ECH),4)=$$CHKDATA^LA7VHLU3($P(VAPA(5),""^"",2),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",71,0)=" . S $P(LA7Y,$E(LA7ECH),5)=$$CHKDATA^LA7VHLU3(VAPA(11),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",72,0)=" . I VAPA(9) S $P(LA7Y,$E(LA7ECH),7)=""C"""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",73,0)=" . E  S $P(LA7Y,$E(LA7ECH),7)=""P"""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",74,0)=" . S $P(LA7Y,$E(LA7ECH),9)=$$CHKDATA^LA7VHLU3($P(VAPA(7),""^"",2),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",75,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",76,0)=" ; Get address info from file #4, add 2nd address line"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",77,0)=" ;  change state to pointer to file #5"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",78,0)=" I LA7Y="""",LA7FN=4,LA7DA D"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",79,0)=" . S LA7Z=$$PADD^XUAF4(LA7DA)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",80,0)=" . S LA7X=$P(LA7Z,""^""),$P(LA7X,""^"",2)=$$WHAT^XUAF4(LA7DA,1.02)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",81,0)=" . F I=1,2 I $P(LA7X,""^"",I)'="""" S $P(LA7X,""^"",I)=$$CHKDATA^LA7VHLU3($P(LA7X,""^"",I),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",82,0)=" . S LA7Z=$P(LA7Z,""^"",2,4),$P(LA7Z,""^"",2)=$$GET1^DIQ(4,LA7DA_"","",.02,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",83,0)=" . S $P(LA7Z,""^"")=$$CHKDATA^LA7VHLU3($P(LA7Z,""^""),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",84,0)=" . S LA7Y=$$HLADDR^HLFNC(LA7X,LA7Z,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",85,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",86,0)=" I LA7Y="""",LA7FN=200,LA7DA D"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",87,0)=" . Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",88,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",89,0)=" ; Save this field to TMP global to use for subsequent calls."
^XTMP("XPDT",7816,"RTN","LA7VHLU4",90,0)=" I LA7Y'="""" S ^TMP($J,""LA7VHLU"",""99VA4A"",LA7FN,LA7DA,LA7FS_LA7ECH)=LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",91,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",92,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",93,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",94,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",95,0)="XON(LA7FN,LA7DA,LA7TYP,LA7FS,LA7ECH) ; Build extended composite name/id for organization"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",96,0)=" ; Call with LA7FN = Source File number"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",97,0)=" ;                   Presently #4 (INSTITUTION)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",98,0)=" ;           LA7DA = Entry in source file"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",99,0)=" ;          LA7TYP = type of identifer (0/null=station #, 1=CLIA)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",100,0)=" ;           LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",101,0)=" ;          LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",102,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VHLU4",103,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",104,0)=" N LA7X,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",105,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",106,0)=" S LA7Y="""",LA7TYP=+$G(LA7TYP)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",107,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",108,0)=" ; Check if this field has been built previously for this institution"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",109,0)=" I LA7FN,LA7DA,$D(^TMP($J,""LA7VHLU"",""99VA4N"",LA7FN,LA7DA,LA7TYP,LA7FS_LA7ECH)) S LA7Y=^TMP($J,""LA7VHLU"",""99VA4N"",LA7FN,LA7DA,LA7TYP,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",111,0)=" ; Build name using field #100, otherwise #.01"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",112,0)=" ; Send facility id in 3rd component if numeric - conform to standard."
^XTMP("XPDT",7816,"RTN","LA7VHLU4",113,0)=" I LA7Y="""",LA7FN=4,LA7DA D"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",114,0)=" . S LA7Z(1)=$P($$NS^XUAF4(LA7DA),""^""),LA7Z(2)=$$WHAT^XUAF4(LA7DA,100)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",115,0)=" . S $P(LA7Y,$E(LA7ECH,1),1)=$$CHKDATA^LA7VHLU3(LA7Z(1),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",116,0)=" . S $P(LA7Y,$E(LA7ECH,1),2)=""D"""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",117,0)=" . S LA7X=$$RETFACID^LA7VHLU2(LA7DA,2,1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",118,0)=" . I LA7X'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",119,0)=" . . I LA7X?1.N S $P(LA7Y,$E(LA7ECH,1),3)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",120,0)=" . . S $P(LA7Y,$E(LA7ECH,1),10)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",121,0)=" . S $P(LA7Y,$E(LA7ECH,1),6)=""USVHA"""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",122,0)=" . S $P(LA7Y,$E(LA7ECH,1),7)=""FI"""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",123,0)=" . S $P(LA7Y,$E(LA7ECH,1),9)=""A"""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",124,0)=" . I LA7Z(2)'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",125,0)=" . . S $P(LA7Y,$E(LA7ECH,1),1)=$$CHKDATA^LA7VHLU3(LA7Z(2),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",126,0)=" . . S $P(LA7Y,$E(LA7ECH,1),2)=""L"""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",127,0)=" . I LA7TYP=1 D"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",128,0)=" . . S LA7X=$$ID^XUAF4(""CLIA"",LA7DA) Q:LA7X="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",129,0)=" . . S $P(LA7Y,$E(LA7ECH,1),3)="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",130,0)=" . . S $P(LA7Y,$E(LA7ECH,1),6)=""CLIA"""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",131,0)=" . . S $P(LA7Y,$E(LA7ECH,1),7)=""LN"""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",132,0)=" . . S $P(LA7Y,$E(LA7ECH,1),10)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",133,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",134,0)=" ; Save this field to TMP global to use for subsequent calls."
^XTMP("XPDT",7816,"RTN","LA7VHLU4",135,0)=" I LA7Y'="""" S ^TMP($J,""LA7VHLU"",""99VA4N"",LA7FN,LA7DA,LA7TYP,LA7FS_LA7ECH)=LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",136,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",137,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",138,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",139,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",140,0)="XCNTFM(LA7X,LA7ECH) ; Resolve XCN data type to FileMan (last name, first name, mi [id])"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",141,0)=" ; Call with LA7X = HL7 field containing name"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",142,0)=" ;         LA7ECH = HL7 encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",143,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",144,0)=" ; Returns   LA7Y = ID code^DUZ^FileMan name (DUZ=0 if name not found on local system)."
^XTMP("XPDT",7816,"RTN","LA7VHLU4",145,0)=" ; Stub until all calls can be converted to call XCNTFM^LA7VHLU9"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",146,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",147,0)=" Q $$XCNTFM^LA7VHLU9(LA7X,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",148,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",149,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",150,0)="PLTFM(LA7PL,LA7ECH) ; Resolve location from PL (person location) data type."
^XTMP("XPDT",7816,"RTN","LA7VHLU4",151,0)=" ; Call with LA7PL = HL7 field containing person location"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",152,0)=" ;          LA7ECH = HL7 encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",153,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",154,0)=" ; Returns    LA7Y = file #44 ien^name field (#.01)^division(institution)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",155,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",156,0)=" N LA7X,LA7Y,X,Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",157,0)=" S LA7X=$P(LA7PL,$E(LA7ECH)),(LA7Y,Y)="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",158,0)=" I LA7X?1.N S Y=$$GET1^DIQ(44,LA7X_"","",.01)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",159,0)=" ; If not ien try as name"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",160,0)=" I Y="""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",161,0)=" . S X=$$FIND1^DIC(44,"""",""X"",LA7X,""B"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",162,0)=" . I X S Y=LA7X,LA7X=X"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",163,0)=" I Y'="""" S LA7Y=LA7X_""^""_Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",164,0)=" E  I $P(LA7PL,$E(LA7ECH),2)'="""" S LA7Y=""^""_$P(LA7PL,$E(LA7ECH),2)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",165,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",166,0)=" ; Process division (institution) - pass 1st sub-component of 4th component"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",167,0)=" S LA7X=$P(LA7PL,$E(LA7ECH),4)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",168,0)=" S LA7X=$P(LA7X,$E(LA7ECH,4))"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",169,0)=" S Y="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU4",170,0)=" I LA7X'="""" S Y=$$FINDSITE^LA7VHLU2(LA7X,1,1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",171,0)=" S $P(LA7Y,""^"",3)=Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",172,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU4",173,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU5")="0^5^B49053645^B40473983"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",1,0)="LA7VHLU5 ;DALOI/JMC - HL7 segment builder utility ;May 12, 2008"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",4,0)=" ; Reference to ^DD supported by DBIA #999"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",6,0)="DEFCODE(LRSS,LRSB,LA7CODE,LA761) ; Determine default codes when data is not mapped"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",7,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",8,0)=" ; Call with  LRSS = file #63 subscript"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",9,0)=" ;            LRSB = file #63 dataname/location"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",10,0)=" ;         LA7CODE = current codes stored with data (order nlt!result nlt!loinc code!method suffix)"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",11,0)=" ;           LA761 = specimen, pointer to file #61"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",12,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",13,0)=" N I,LA760,LA7DFCDE,LA7MISS,LA7NLT,LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",14,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",15,0)=" I LA7CODE="""" S LA7CODE=""!!!"""
^XTMP("XPDT",7816,"RTN","LA7VHLU5",16,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",17,0)=" ; Replace any missing codes with defaults"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",18,0)=" ; If no missing codes then return codes passed in."
^XTMP("XPDT",7816,"RTN","LA7VHLU5",19,0)=" S LA7MISS="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU5",20,0)=" F I=1:1:3 I $P(LA7CODE,""!"",I)="""" S $P(LA7MISS,""^"",I)=I"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",21,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",22,0)=" I LA7MISS'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",23,0)=" . I LRSS=""CH"" D CHSUB Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",24,0)=" . I LRSS=""MI"" D MISUB Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",25,0)=" . I LRSS=""SP"" D SPSUB Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",26,0)=" . I LRSS=""CY"" D CYSUB Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",27,0)=" . I LRSS=""EM"" D EMSUB Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",28,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",29,0)=" Q LA7CODE"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",30,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",31,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",32,0)="CHSUB ; Determine codes for CH subscript."
^XTMP("XPDT",7816,"RTN","LA7VHLU5",33,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",34,0)=" ; Find a file #60 test which uses this dataname. Since there can be"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",35,0)=" ; multiple tests check each until an order and result NLT code is found."
^XTMP("XPDT",7816,"RTN","LA7VHLU5",36,0)=" S LA760=0"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",37,0)=" F  S LA760=$O(^LAB(60,""C"",LRSS_"";""_LRSB_"";1"",LA760)) Q:'LA760  D"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",38,0)=" . ; Default order NLT"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",39,0)=" . I $P(LA7MISS,""^"") D"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",40,0)=" . . S LA7X=$$NLT^LRVER1(LA760)"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",41,0)=" . . I LA7X'="""" S $P(LA7CODE,""!"")=LA7X,$P(LA7MISS,""^"")="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU5",42,0)=" . ; Default result NLT"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",43,0)=" . I $P(LA7MISS,""^"",2) D"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",44,0)=" . . S LA7X=+$P($G(^LAB(60,LA760,64)),""^"",2),LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU5",45,0)=" . . I LA7X S LA7Y=$$GET1^DIQ(64,LA7X_"","",1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",46,0)=" . . I LA7Y'="""" S $P(LA7CODE,""!"",2)=LA7Y,$P(LA7MISS,""^"",2)="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU5",47,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",48,0)=" ; If no result NLT code then use order NLT as default"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",49,0)=" I $P(LA7CODE,""!"",2)="""" S $P(LA7CODE,""!"",2)=$P(LA7CODE,""!"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",50,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",51,0)=" ; If no order NLT code found on file #60 entries then use this default"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",52,0)=" I $P(LA7CODE,""!"")="""" S $P(LA7CODE,""!"")=""81323.0000"""
^XTMP("XPDT",7816,"RTN","LA7VHLU5",53,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",54,0)=" ; Default result LOINC code based on result NLT code"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",55,0)=" ; If none on NLT result code then try order NLT code"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",56,0)=" I $P(LA7MISS,""^"",3) D"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",57,0)=" . S LA7NLT=$P(LA7CODE,""!"",2),LA7X="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU5",58,0)=" . I LA7NLT'="""" S LA7X=$$LNC^LRVER1(LA7NLT,$P(LA7CODE,""!"",4),LA761)"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",59,0)=" . I LA7X S $P(LA7CODE,""!"",3)=LA7X Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",60,0)=" . S LA7NLT=$P(LA7CODE,""!""),LA7X="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU5",61,0)=" . I LA7NLT'="""" S LA7X=$$LNC^LRVER1(LA7NLT,$P(LA7CODE,""!"",4),LA761)"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",62,0)=" . I LA7X S $P(LA7CODE,""!"",3)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",63,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",64,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",65,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",66,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",67,0)="MISUB ; Determine codes for MI subscript"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",68,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",69,0)=" ; Bacteriology report"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",70,0)=" I LRSB=11 S LA7DFCDE=""87993.0000^93928.0000^"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",71,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",72,0)=" ; Urine Screen"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",73,0)=" I LRSB=11.57 S LA7DFCDE=""87993.0000^93949.0000^630"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",74,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VHLU5",75,0)=" ; Sputum screen"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",76,0)=" I LRSB=11.58 S LA7DFCDE=""87993.0000^93948.0000^6460"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",77,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VHLU5",78,0)=" ; Gram stain"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",79,0)=" I LRSB=11.6 S LA7DFCDE=""87993.0000^87754.0000^664"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",80,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",81,0)=" ; Bacteriology organism"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",82,0)=" I LRSB=12 S LA7DFCDE=""87993.0000^87570.0000^11475"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",84,0)=" ; Bacteria colony count"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",85,0)=" I +LRSB=12,$P(LRSB,"","",2)=1 S LA7DFCDE=""^87719.0000^564"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",86,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",87,0)=" ; Parasite report"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",88,0)=" I LRSB=14 S LA7DFCDE=""87505.0000^93929.0000^"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",89,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",90,0)=" ; Parasite organism "
^XTMP("XPDT",7816,"RTN","LA7VHLU5",91,0)=" I LRSB=16 S LA7DFCDE=""87505.0000^87576.0000^17784"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",92,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",93,0)=" ; Mycology report"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",94,0)=" I LRSB=18 S LA7DFCDE=""87994.0000^93930.0000^"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",95,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",96,0)=" ; Fungal organism"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",97,0)=" I LRSB=20 S LA7DFCDE=""87994.0000^87578.0000^580"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",98,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",99,0)=" ; Fungal colony count"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",100,0)=" I +LRSB=20,$P(LRSB,"","",2)=1 S LA7DFCDE=""87994.0000^87723.0000^19101"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",101,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",102,0)=" ; Mycobacterium report"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",103,0)=" I LRSB=22 S LA7DFCDE=""87995.0000^93931.0000^"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",104,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",105,0)=" ; Acid Fast stain"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",106,0)=" I LRSB=24 S LA7DFCDE=""87995.0000^87756.0000^11545"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",107,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",108,0)=" ; Acid Fast stain quantity"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",109,0)=" I LRSB=25 S LA7DFCDE=""87995.0000^87583.0000^"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",111,0)=" ; Mycobacterium organism"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",112,0)=" I +LRSB=26,'$P(LRSB,"","",2) S LA7DFCDE=""87995.0000^87589.0000^543"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",113,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",114,0)=" ; Mycobacterium colony count"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",115,0)=" I +LRSB=26,$P(LRSB,"","",2)=1 S LA7DFCDE=""87995.0000^87719.0000^564"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",116,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",117,0)=" ; Bact or TB organism's susceptibilities"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",118,0)=" I ($P(LRSB,"","")=12!($P(LRSB,"","")=26)),$P(LRSB,"","",2)>2,$P(LRSB,"","",2)<2.999 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",119,0)=" . I +LRSB=12 D"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",120,0)=" . . S LA7DFCDE=""87565.0000^^"""
^XTMP("XPDT",7816,"RTN","LA7VHLU5",121,0)=" . . S LA7X=$O(^LAB(62.06,""AD"",$P(LRSB,"","",2),0)) Q:'LA7X"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",122,0)=" . . I $P(LA7MISS,""^"",2) S $P(LA7DFCDE,""^"",2)=$$GET1^DIQ(62.06,LA7X_"","",""64:1"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",123,0)=" . I +LRSB=26 D"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",124,0)=" . . S LA7DFCDE=""87568.0000^^"""
^XTMP("XPDT",7816,"RTN","LA7VHLU5",125,0)=" . . N Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",126,0)=" . . S LA7X=$P(LRSB,"","",2),Y=$O(^DD(63.39,""GL"",LA7X,1,0))"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",127,0)=" . . I Y<1 Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",128,0)=" . . S $P(LA7DFCDE,""^"",2)=$S(Y=5:""93635.0000"",Y=10:""93620.0000"",Y=15:""93657.0000"",Y=20:""93634.0000"",Y=25:""93659.0000"",Y=30:""93618.0000"",Y=35:""93616.0000"",Y=40:""93617.0000"",Y=45:""93626.0000"",Y=50:""93641.0000"",Y=55:""93534.0000"",1:"""")"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",129,0)=" . D DEFAULT"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",130,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",131,0)=" ; Virology report"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",132,0)=" I LRSB=33 S LA7DFCDE=""87996.0000^93932.0000^^"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",133,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",134,0)=" ; Viral agent"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",135,0)=" I $P(LRSB,"","")=36 S LA7DFCDE=""87996.0000^87590.0000^6584"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",136,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",137,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",138,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",139,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",140,0)="SPSUB ; Determine codes for SP subscript"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",141,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",142,0)=" ; specimens"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",143,0)=" I $P(LRSB,"","")=.012!(LRSB=10) S LA7DFCDE=""88515.0000^88539.0000^22633"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",144,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",145,0)=" ; brief clinical history"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",146,0)=" I LRSB=.013 S LA7DFCDE=""88515.0000^88542.0000^22636"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",147,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",148,0)=" ; preoperative diagnosis"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",149,0)=" I LRSB=.014 S LA7DFCDE=""88515.0000^88544.0000^10219"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",150,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",151,0)=" ; operative findings"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",152,0)=" I LRSB=.015 S LA7DFCDE=""88515.0000^88546.0000^10215"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",153,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",154,0)=" ; postoperative diagnosis"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",155,0)=" I LRSB=.016 S LA7DFCDE=""88515.0000^88547.0000^10218"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",156,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",157,0)=" ; gross description"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",158,0)=" I LRSB=1 S LA7DFCDE=""88515.0000^88549.0000^22634"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",159,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",160,0)=" ; microscopic description"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",161,0)=" I LRSB=1.1 S LA7DFCDE=""88515.0000^88563.0000^22635"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",162,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",163,0)=" ; frozen section"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",164,0)=" I LRSB=1.3 S LA7DFCDE=""88515.0000^88569.0000^22635"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",165,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",166,0)=" ; surgical path diagnosis"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",167,0)=" I LRSB=1.4 S LA7DFCDE=""88515.0000^88571.0000^22637"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",168,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",169,0)=" ; supplementary report"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",170,0)=" I LRSB=1.2!(LRSB=""10,5"") S LA7DFCDE=""88515.0000^88589.0000^22639"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",171,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",172,0)=" ; specimen weight"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",173,0)=" I LRSB=""10,2"" S LA7DFCDE=""88515.0000^81233.0000^3154"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",174,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",175,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",176,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",177,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",178,0)="CYSUB ;  Determine codes for CY subscript"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",179,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",180,0)=" ; specimens"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",181,0)=" I $P(LRSB,"","")=.012!(LRSB=10) S LA7DFCDE=""88593.0000^88539.0000^22633"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",182,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",183,0)=" ; brief clinical history"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",184,0)=" I LRSB=.013 S LA7DFCDE=""88593.0000^88542.0000^22636"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",185,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",186,0)=" ; preoperative diagnosis"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",187,0)=" I LRSB=.014 S LA7DFCDE=""88593.0000^88544.0000^10219"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",188,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",189,0)=" ; operative findings"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",190,0)=" I LRSB=.015 S LA7DFCDE=""88593.0000^88542.0000^10215"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",191,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",192,0)=" ; postoperative diagnosis"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",193,0)=" I LRSB=.016 S LA7DFCDE=""88593.0000^88547.0000^10218"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",194,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",195,0)=" ; gross description"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",196,0)=" I LRSB=1!(LRSB=20) S LA7DFCDE=""88593.0000^88549.0000^22634"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",197,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",198,0)=" ; microscopic examination"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",199,0)=" I LRSB=1.1 S LA7DFCDE=""88593.0000^88563.0000^22635"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",200,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",201,0)=" ; supplementary report"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",202,0)=" I LRSB=1.2 S LA7DFCDE=""88593.0000^88589.0000^22639"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",203,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",204,0)=" ; cytopatholgy diagnosis"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",205,0)=" I LRSB=1.4 S LA7DFCDE=""88593.0000^88571.0000^22637"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",206,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",207,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",208,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",209,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",210,0)="EMSUB ;  Determine codes for EM subscript"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",211,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",212,0)=" ; specimens"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",213,0)=" I $P(LRSB,"","")=.012!(LRSB=10) S LA7DFCDE=""88597.0000^88057.0000^22633"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",214,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",215,0)=" ; brief clinical history"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",216,0)=" I LRSB=.013 S LA7DFCDE=""88597.0000^88542.0000^22636"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",217,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",218,0)=" ; preoperative diagnosis"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",219,0)=" I LRSB=.014 S LA7DFCDE=""88597.0000^88544.0000^10219"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",220,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",221,0)=" ; operative findings"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",222,0)=" I LRSB=.015 S LA7DFCDE=""88597.0000^88542.0000^10215"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",223,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",224,0)=" ; postoperative diagnosis"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",225,0)=" I LRSB=.016 S LA7DFCDE=""88597.0000^88547.0000^10218"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",226,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",227,0)=" ; gross description"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",228,0)=" I LRSB=1!(LRSB=20) S LA7DFCDE=""88597.0000^88549.0000^22634"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",229,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",230,0)=" ; microscopic examination"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",231,0)=" I LRSB=1.1 S LA7DFCDE=""88597.0000^88563.0000^22635"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",232,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",233,0)=" ; supplementary report"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",234,0)=" I LRSB=1.2 S LA7DFCDE=""88597.0000^88589.0000^22639"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",235,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",236,0)=" ; em diagnosis"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",237,0)=" I LRSB=1.4 S LA7DFCDE=""88597.0000^88571.0000^22637"" D DEFAULT Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",238,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",239,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",240,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",241,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",242,0)="DEFAULT ; Resolve codes and set defaults as needed"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",243,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",244,0)=" ; Expects LA7DFCDE=default order NLT^default result NLT^default LOINC code"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",245,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",246,0)=" I $P(LA7MISS,""^"") S $P(LA7CODE,""!"")=$P(LA7DFCDE,""^"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",247,0)=" I $P(LA7MISS,""^"",2) S $P(LA7CODE,""!"",2)=$P(LA7DFCDE,""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",248,0)=" I $P(LA7MISS,""^"",3) D"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",249,0)=" . S $P(LA7CODE,""!"",3)=$$LNC^LRVER1($P(LA7CODE,""!"",2),$P(LA7CODE,""!"",4),LA761)"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",250,0)=" . I '$P(LA7CODE,""!"",3) S $P(LA7CODE,""!"",3)=$P(LA7DFCDE,""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VHLU5",251,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VHLU9")="0^28^B16600197^n/a"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",1,0)="LA7VHLU9 ;DALOI/JMC - HL7 segment builder utility ;Jun 20, 2008"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",4,0)=" ; Reference to NPI^XUSNPI supported by DBIA #4532"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",5,0)=" ; Reference to QI^XUSNPI supported by DBIA #4532"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",7,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",8,0)="XCN(LA7DUZ,LA7DIV,LA7FS,LA7ECH,LA7DMT,LA7IDTYP) ; Build composite ID and name for person"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",9,0)=" ; Call with   LA7DUZ = DUZ of person "
^XTMP("XPDT",7816,"RTN","LA7VHLU9",10,0)=" ;                      If not pointer to #200, then use as literal"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",11,0)=" ;             LA7DIV = Institution of user"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",12,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",13,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",14,0)=" ;             LA7DMT = flag to indicate delimiters should be demoted"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",15,0)=" ;           LA7IDTYP = id type to return (0:DUZ 1:VPID 2:NPI)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",16,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",17,0)=" N I,LA7CS,LA7NPI,LA7SITE,LA7VAF,LA7VPID,LA7X,LA7Y,LA7Z,NAME"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",18,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",19,0)=" S (LA7Y,LA7Z)="""",LA7DMT=+$G(LA7DMT),LA7IDTYP=+$G(LA7IDTYP)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",20,0)=" ; If demoting delimiters then use sub-component delimiter instead of component delimiter."
^XTMP("XPDT",7816,"RTN","LA7VHLU9",21,0)=" S LA7CS=$E(LA7ECH,$S(LA7DMT=1:4,1:1))"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",22,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",23,0)=" ; Check if this field has been built previously for this person"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",24,0)=" I LA7DUZ'="""",$D(^TMP($J,""LA7VHLU"",""99VA200"",LA7DUZ,LA7FS_LA7ECH,LA7DMT,LA7IDTYP)) S LA7Y=^TMP($J,""LA7VHLU"",""99VA200"",LA7DUZ,LA7FS_LA7ECH,LA7DMT,LA7IDTYP)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",25,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",26,0)=" ; Build from file #200"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",27,0)=" I LA7Y="""",LA7DUZ>0,LA7DUZ?1.N D"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",28,0)=" . S NAME(""FILE"")=200,NAME(""FIELD"")=.01,NAME(""IENS"")=LA7DUZ"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",29,0)=" . S LA7Z=$$HLNAME^XLFNAME(.NAME,""S"",LA7CS)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",30,0)=" . I LA7IDTYP=2 D  Q:LA7NPI>0"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",31,0)=" . . S LA7NPI=$$NPI^XUSNPI(""Individual_ID"",LA7DUZ,DT)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",32,0)=" . . I LA7NPI>0 S $P(LA7Y,LA7CS)=$P(LA7NPI,""^""),$P(LA7Y,LA7CS,9)=""USDHHS"",$P(LA7Y,LA7CS,11)=$E(LA7NPI,10),$P(LA7Y,LA7CS,12,13)=""NPI""_LA7CS_""NPI"""
^XTMP("XPDT",7816,"RTN","LA7VHLU9",33,0)=" . I LA7IDTYP>0 D  Q:LA7VPID'="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU9",34,0)=" . . S LA7VPID=$$VPID^XUPS(LA7DUZ)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",35,0)=" . . I LA7VPID'="""" S $P(LA7Y,LA7CS)=LA7VPID,$P(LA7Y,LA7CS,9)=""USVHA"",$P(LA7Y,LA7CS,13)=""PN"""
^XTMP("XPDT",7816,"RTN","LA7VHLU9",36,0)=" . ; If no institution, use Kernel Site default"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",37,0)=" . I LA7DIV="""" S LA7DIV=+$$KSP^XUPARAM(""INST"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",38,0)=" . S LA7SITE=$$RETFACID^LA7VHLU2(LA7DIV,0,1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",39,0)=" . I LA7SITE'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",40,0)=" . . S LA7VAF=$$GET1^DIQ(4,LA7DIV_"","",""AGENCY CODE"",""I"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",41,0)=" . . I LA7VAF=""V"" S LA7SITE=""VA""_LA7SITE"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",42,0)=" . . S LA7DUZ=LA7DUZ_""-""_LA7SITE,$P(LA7Y,LA7CS,8)=""99VA4"""
^XTMP("XPDT",7816,"RTN","LA7VHLU9",43,0)=" . S $P(LA7Y,LA7CS)=LA7DUZ"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",44,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",45,0)=" ; If only name passed"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",46,0)=" I LA7Y="""",'LA7DUZ D"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",47,0)=" . S NAME=LA7DUZ"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",48,0)=" . I LA7DUZ[""["",LA7DUZ[""]"" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",49,0)=" . . S NAME=$P(LA7DUZ,""[""),NAME(1)=$P(LA7DUZ,""["",2),NAME(1)=$P(NAME(1),""]"")"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",50,0)=" . . I $P(NAME(1),"":"",2)?1(1""NPI"",1""PN"") S $P(LA7Y,LA7CS)=$P(NAME(1),"":""),$P(LA7Y,LA7CS,9)=$P(NAME(1),"":"",4),$P(LA7Y,LA7CS,13)=$P(NAME(1),"":"",2)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",51,0)=" . . I $P(NAME(1),"":"",2)?1(1""99""1.E,1""L"") S $P(LA7Y,LA7CS)=$P(NAME(1),"":""),$P(LA7Y,LA7CS,8)=$P(NAME(1),"":"",2)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",52,0)=" . S NAME=$$CHKDATA^LA7VHLU3(NAME,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",53,0)=" . S LA7Z=$$HLNAME^XLFNAME(NAME,""S"",LA7CS)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",54,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",55,0)=" I LA7Z'="""" F I=1:1:6 S $P(LA7Y,LA7CS,I+1)=$P(LA7Z,LA7CS,I)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",56,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",57,0)=" ; Save this field to TMP global to use for subsequent calls."
^XTMP("XPDT",7816,"RTN","LA7VHLU9",58,0)=" I LA7DUZ'="""" S ^TMP($J,""LA7VHLU"",""99VA200"",LA7DUZ,LA7FS_LA7ECH,LA7DMT,LA7IDTYP)=LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",59,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",60,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",61,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",62,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",63,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",64,0)="XCNTFM(LA7X,LA7ECH) ; Resolve XCN data type to FileMan (last name, first name, mi [id])"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",65,0)=" ; Call with LA7X = HL7 field containing name"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",66,0)=" ;         LA7ECH = HL7 encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",68,0)=" ; Returns   LA7Y = ID code^DUZ^FileMan name (DUZ=0 if name not found on local system)."
^XTMP("XPDT",7816,"RTN","LA7VHLU9",69,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",70,0)=" N LA7DUZ,LA7IDC,LA7Y,LA7Z,X"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",71,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",72,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",73,0)=" S LA7DUZ=0"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",74,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",75,0)=" ; Check for VPID"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",76,0)=" S (LA7IDC,LA7Z)=$P(LA7X,$E(LA7ECH))"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",77,0)=" I $P(LA7X,$E(LA7ECH),9)=""USVHA"",$P(LA7X,$E(LA7ECH),13)=""PN"" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",78,0)=" . S X=$$IEN^XUPS(LA7IDC)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",79,0)=" . I X>0 S LA7DUZ=X"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",80,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",81,0)=" ; Check for NPI"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",82,0)=" I $P(LA7X,$E(LA7ECH),9)=""USDHHS"",$P(LA7X,$E(LA7ECH),13)=""NPI"" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",83,0)=" . S X=$$QI^XUSNPI(LA7IDC)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",84,0)=" . I $P(X,""^"")=""Individual_ID"",$P(X,""^"",2)>0 S LA7DUZ=X"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",85,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",86,0)=" ; Check for coding that indicates DUZ from a VA facility"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",87,0)=" I 'LA7DUZ,LA7Z?.(1.N1""-VA""3N,1.N1""-VA""3N2U) D"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",88,0)=" . N LA7J,LA7K"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",89,0)=" . S LA7Z(1)=$P(LA7Z,""-""),LA7Z(2)=$P(LA7Z,""-"",2)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",90,0)=" . S LA7K=$$FINDSITE^LA7VHLU2(LA7Z(2),1,1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",91,0)=" . S LA7J=$$DIV4^XUSER(.LA7J,LA7Z(1))"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",92,0)=" . I LA7K,$D(LA7J(LA7K)) S LA7DUZ=LA7Z(1)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",93,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",94,0)=" ; Check if code resolves to a valid user."
^XTMP("XPDT",7816,"RTN","LA7VHLU9",95,0)=" I 'LA7DUZ,LA7Z=+LA7Z D"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",96,0)=" . S X=$$ACTIVE^XUSER(LA7Z)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",97,0)=" . I X,$P(X,""^"",2)'="""" S LA7DUZ=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",98,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",99,0)=" S LA7Y=$$FMNAME^HLFNC($P(LA7X,$E(LA7ECH),2,6),LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",100,0)=" ; HL function sometimes returns trailing "","" on name"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",101,0)=" S LA7Y=$$TRIM^XLFSTR(LA7Y,""R"","","")"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",102,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",103,0)=" ; Put identifying code at end of name in ""[code:id type:va id type:issuing authority]""."
^XTMP("XPDT",7816,"RTN","LA7VHLU9",104,0)=" I $P(LA7X,$E(LA7ECH))'="""",LA7Y'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",105,0)=" . S X="""""
^XTMP("XPDT",7816,"RTN","LA7VHLU9",106,0)=" . I $P(LA7X,$E(LA7ECH),8)?1(1""99""1.E,1""L"") S X=$P(LA7X,$E(LA7ECH),8)"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",107,0)=" . I $P(LA7X,$E(LA7ECH),9)=""USVHA"",$P(LA7X,$E(LA7ECH),13)=""PN"" S X=""PN:VPID:USVHA"""
^XTMP("XPDT",7816,"RTN","LA7VHLU9",108,0)=" . I $P(LA7X,$E(LA7ECH),9)=""USDHHS"",$P(LA7X,$E(LA7ECH),13)=""NPI"" S X=""NPI:NPI:USDHHS"""
^XTMP("XPDT",7816,"RTN","LA7VHLU9",109,0)=" . S LA7Y=LA7Y_"" [""_$P(LA7X,$E(LA7ECH))_"":""_X_""]"""
^XTMP("XPDT",7816,"RTN","LA7VHLU9",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VHLU9",111,0)=" Q LA7IDC_""^""_LA7DUZ_""^""_LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VIN5")="0^19^B62438539^B52231590"
^XTMP("XPDT",7816,"RTN","LA7VIN5",1,0)="LA7VIN5 ;DALOI/JMC - Process Incoming UI Msgs, continued ;June 7, 2007"
^XTMP("XPDT",7816,"RTN","LA7VIN5",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VIN5",3,0)=" ; This routine is a continuation of LA7VIN1 and is only called from there."
^XTMP("XPDT",7816,"RTN","LA7VIN5",4,0)=" ; It is called to process OBX segments for ""CH"" subscript tests."
^XTMP("XPDT",7816,"RTN","LA7VIN5",5,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",7,0)="OBX ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",9,0)=" N LA76241,LA76304,LA7EII,LA7I,LA7LIMIT,LA7OBM,LA7SUBFL,LA7TEST,LA7TREEN,LA7UNITS,LA7VAL,LA7VTYP,LA7X,LA7XFORM,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VIN5",10,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",11,0)=" K LA7RMK,^TMP(""LA7TREE"",$J)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",12,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",13,0)=" S LA7SUBFL=63.04"
^XTMP("XPDT",7816,"RTN","LA7VIN5",14,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",15,0)=" ; OBX Set ID"
^XTMP("XPDT",7816,"RTN","LA7VIN5",16,0)=" S LA7SOBX=$$P^LA7VHLU(.LA7SEG,2,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",17,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",18,0)=" ; Value type - type of data from Table 0125"
^XTMP("XPDT",7816,"RTN","LA7VIN5",19,0)=" S LA7VTYP=$P($$P^LA7VHLU(.LA7SEG,3,LA7FS),LA7CS)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",20,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",21,0)=" ; Determine test result codes - check for primary and alternate codes"
^XTMP("XPDT",7816,"RTN","LA7VIN5",22,0)=" ; For DoD/CHCS interface - do NOT process test codes using 99LRT as coding system per DoD/July 2002."
^XTMP("XPDT",7816,"RTN","LA7VIN5",23,0)=" S LA7X=$$P^LA7VHLU(.LA7SEG,4,LA7FS),(LA7RNLT,LA7RLNC)="""""
^XTMP("XPDT",7816,"RTN","LA7VIN5",24,0)=" S LA7TEST=$P(LA7X,LA7CS)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",25,0)=" S LA7TEST(0)=$$UNESC^LA7VHLU3($P(LA7X,LA7CS,2),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",26,0)=" I LA7TEST(0)[""^"" S LA7TEST(0)=$TR(LA7TEST(0),""^"",""~"")"
^XTMP("XPDT",7816,"RTN","LA7VIN5",27,0)=" S LA7TEST(0,1)=$P(LA7X,LA7CS,3)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",28,0)=" S LA7TEST(2)=$P(LA7X,LA7CS,4)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",29,0)=" S LA7TEST(2,0)=$$UNESC^LA7VHLU3($P(LA7X,LA7CS,5),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",30,0)=" I LA7TEST(2,0)[""^"" S LA7TEST(2,0)=$TR(LA7TEST(2,0),""^"",""~"")"
^XTMP("XPDT",7816,"RTN","LA7VIN5",31,0)=" S LA7TEST(2,1)=$P(LA7X,LA7CS,6)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",32,0)=" F I=3,6 D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",33,0)=" . S LA7Y=$P(LA7X,LA7CS,I-2)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",34,0)=" . I $P(LA7X,LA7CS,I)=""LN"" D  Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",35,0)=" . . I $$GET1^DIQ(95.3,+LA7Y_"","",.01)=LA7Y S LA7RLNC=+LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VIN5",36,0)=" . I $P(LA7X,LA7CS,I)=""99VA64"" D  Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",37,0)=" . . I $$FIND1^DIC(64,"""",""OMX"",LA7Y) S LA7RNLT=LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VIN5",38,0)=" . I $P(LA7X,LA7CS,I)=""99LRT"" D  Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",39,0)=" . . I LA7TEST(0)="""",LA7TEST(2,0)'="""" S LA7TEST(0)=LA7TEST(2,0)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",40,0)=" . . I LA7TEST(2,0)="""",LA7TEST(0)'="""" S LA7TEST(2,0)=LA7TEST(0)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",41,0)=" . . I I=3 S (LA7TEST,LA7TEST(0),LA7TEST(0,1))="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",42,0)=" . . I I=6 S (LA7TEST(2),LA7TEST(2,0),LA7TEST(2,1))="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",43,0)=" I LA7TEST="""",LA7TEST(2)'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",44,0)=" . S LA7TEST=LA7TEST(2),LA7TEST(0)=LA7TEST(2,0),LA7TEST(0,1)=LA7TEST(2,1)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",45,0)=" . S (LA7TEST(2),LA7TEST(2,0),LA7TEST(2,1))="""""
^XTMP("XPDT",7816,"RTN","LA7VIN5",46,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",47,0)=" ; No test code in message"
^XTMP("XPDT",7816,"RTN","LA7VIN5",48,0)=" I LA7TEST="""",LA7TEST(2)="""" D  Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",49,0)=" . N LA7OBX"
^XTMP("XPDT",7816,"RTN","LA7VIN5",50,0)=" . S LA7OBX=LA7SEG(0)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",51,0)=" . D CREATE^LA7LOG(15)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",52,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",53,0)=" ; Test code not found in auto inst file, also check alternate codes,"
^XTMP("XPDT",7816,"RTN","LA7VIN5",54,0)=" ; and log error if none found."
^XTMP("XPDT",7816,"RTN","LA7VIN5",55,0)=" I LA7MTYP=""ORU"" D  Q:LA7TEST="""""
^XTMP("XPDT",7816,"RTN","LA7VIN5",56,0)=" . I LA7TEST'="""",$D(^LAB(62.4,LA7624,3,""AC"",LA7TEST)) Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",57,0)=" . I LA7TEST(2)'="""",$D(^LAB(62.4,LA7624,3,""AC"",LA7TEST(2))) D  Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",58,0)=" . . S LA7TEST=LA7TEST(2),LA7TEST(0)=LA7TEST(2,0),LA7TEST(0,1)=LA7TEST(2,1)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",59,0)=" . D CREATE^LA7LOG(16) S LA7TEST="""""
^XTMP("XPDT",7816,"RTN","LA7VIN5",60,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",61,0)=" ; Units - trim leading/trailing spaces"
^XTMP("XPDT",7816,"RTN","LA7VIN5",62,0)=" S LA7X=$$P^LA7VHLU(.LA7SEG,7,LA7FS),LA7UNITS="""""
^XTMP("XPDT",7816,"RTN","LA7VIN5",63,0)=" I LA7X'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",64,0)=" . F I=1:1:6 S LA7UNITS(I)=$P(LA7X,LA7CS,I)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",65,0)=" . S LA7UNITS=$$TRIM^XLFSTR(LA7UNITS(1),""LR"","" "")"
^XTMP("XPDT",7816,"RTN","LA7VIN5",66,0)=" . I LA7UNITS[""^"" D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",67,0)=" . . N LA7STR S LA7STR(""^"")=""~U~"""
^XTMP("XPDT",7816,"RTN","LA7VIN5",68,0)=" . . S LA7UNITS=$$REPLACE^XLFSTR(LA7UNITS,.LA7STR)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",69,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",70,0)=" ; Observation result status - Table 0085"
^XTMP("XPDT",7816,"RTN","LA7VIN5",71,0)=" S LA7ORS=$$P^LA7VHLU(.LA7SEG,12,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",72,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",73,0)=" ; Responsible observer"
^XTMP("XPDT",7816,"RTN","LA7VIN5",74,0)=" S LA7RO=$$XCNTFM^LA7VHLU4($$P^LA7VHLU(.LA7SEG,17,LA7FS),LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",75,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",76,0)=" ; Observation method"
^XTMP("XPDT",7816,"RTN","LA7VIN5",77,0)=" S LA7X=$$P^LA7VHLU(.LA7SEG,18,LA7FS),LA7OBM="""""
^XTMP("XPDT",7816,"RTN","LA7VIN5",78,0)=" I $P(LA7X,LA7CS,3)=""99VA64_2"" S LA7OBM=$P($P(LA7X,LA7CS,1),""."",2)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",79,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",80,0)=" ; Equipment instance identifier"
^XTMP("XPDT",7816,"RTN","LA7VIN5",81,0)=" S LA7EII=$$P^LA7VHLU(.LA7SEG,19,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",82,0)=" I LA7EII'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",83,0)=" . S LA7EII=$$UNESC^LA7VHLU3(LA7EII,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",84,0)=" . S LA7EII=$TR(LA7EII,""^"","";"")"
^XTMP("XPDT",7816,"RTN","LA7VIN5",85,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",86,0)=" ; Process ORU message results for all tests which use this test code."
^XTMP("XPDT",7816,"RTN","LA7VIN5",87,0)=" I LA7MTYP=""ORU"" D  Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",88,0)=" . S LA76241=0"
^XTMP("XPDT",7816,"RTN","LA7VIN5",89,0)=" . F  S LA76241=$O(^LAB(62.4,LA7624,3,""AC"",LA7TEST,LA76241)) Q:'LA76241  D PROCESS"
^XTMP("XPDT",7816,"RTN","LA7VIN5",90,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",91,0)=" I LA7MTYP=""ORM"",$G(LA7696)>0 D ORESULTS^LA7VIN5A"
^XTMP("XPDT",7816,"RTN","LA7VIN5",92,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",93,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",94,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",95,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",96,0)="PROCESS ; Process results for a given test code"
^XTMP("XPDT",7816,"RTN","LA7VIN5",97,0)=" S LA7VAL=$$P^LA7VHLU(.LA7SEG,6,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",98,0)=" I LA7VTYP=""CE"",$P(LA7VAL,LA7CS,2)'="""" S LA7VAL=$P(LA7VAL,LA7CS,2)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",99,0)=" E  S LA7VAL=$P(LA7VAL,LA7CS)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",100,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",101,0)=" F LA7I=0,1,2 S LA76241(LA7I)=$G(^LAB(62.4,LA7624,3,LA76241,LA7I))"
^XTMP("XPDT",7816,"RTN","LA7VIN5",102,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",103,0)=" ; Chem test fields incorrect"
^XTMP("XPDT",7816,"RTN","LA7VIN5",104,0)=" I (LA76241(0)="""")!(LA76241(1)="""") D  Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",105,0)=" . D CREATE^LA7LOG(18)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",106,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",107,0)=" ; Setup LA7RMK(0) variable in case comments (NTE) sent with test results."
^XTMP("XPDT",7816,"RTN","LA7VIN5",108,0)=" S LA7RMK(0,+LA76241(0))=+$P(LA76241(2),""^"",7)_""^""_$P(LA76241(2),""^"",8)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",109,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",110,0)=" S LA76304=+$P(LA76241(1),""("",2) ;lab data field"
^XTMP("XPDT",7816,"RTN","LA7VIN5",111,0)=" ; No dataname for this result"
^XTMP("XPDT",7816,"RTN","LA7VIN5",112,0)=" I LA76304'>1 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",113,0)=" . D CREATE^LA7LOG(18)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",114,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",115,0)=" ; Set flag for new results alert"
^XTMP("XPDT",7816,"RTN","LA7VIN5",116,0)=" I LA7ORS'="""",""CDW""'[LA7ORS S ^TMP(""LA7-ORU"",$J,LA76248,LA76249)="""""
^XTMP("XPDT",7816,"RTN","LA7VIN5",117,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",118,0)=" ; Set flag to send amended results bulletin"
^XTMP("XPDT",7816,"RTN","LA7VIN5",119,0)=" I LA7INTYP=10,LA7ORS'="""",""CDW""[LA7ORS D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",120,0)=" . S LA7I=$O(^TMP(""LA7 AMENDED RESULTS"",$J,""""),-1),LA7I=LA7I+1"
^XTMP("XPDT",7816,"RTN","LA7VIN5",121,0)=" . S X=LA7LWL_""^""_LA7ISQN_""^""_LA76304_""^""_LA76248_""^""_LA76249_""^""_LA7ORS_""^""_LA7TEST_""^""_$S(LA7TEST(0)'="""":LA7TEST(0),1:LA7TEST(2,0))_""^""_$$P^LA7VHLU(.LA7SEG,9,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",122,0)=" . S ^TMP(""LA7 AMENDED RESULTS"",$J,LA7I)=X"
^XTMP("XPDT",7816,"RTN","LA7VIN5",123,0)=" . I LA7UID'="""" S ^LAH(""LA7 AMENDED RESULTS"",LA7UID,LA76304,LA7LWL,LA7ISQN)=X"
^XTMP("XPDT",7816,"RTN","LA7VIN5",124,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",125,0)=" ; NOTE - this array can be set from inside PARAM 1"
^XTMP("XPDT",7816,"RTN","LA7VIN5",126,0)=" K LA7XFORM"
^XTMP("XPDT",7816,"RTN","LA7VIN5",127,0)=" ; execute PARAM 1 if not a LEDI interface"
^XTMP("XPDT",7816,"RTN","LA7VIN5",128,0)=" I LA7INTYP'=10 X $P(LA76241(0),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",129,0)=" I $P(LA76241(2),""^"",3)=0 Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",130,0)=" I $P(LA76241(2),""^"",3)=2,""CFUX""'[LA7ORS Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",131,0)=" I LA7ORS=""X"",LA7VAL="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",132,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",133,0)=" ; No value found"
^XTMP("XPDT",7816,"RTN","LA7VIN5",134,0)=" I LA7VAL="""" D  Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",135,0)=" . D CREATE^LA7LOG(17)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",136,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",137,0)=" ; Transform result based on fields in file 62.4"
^XTMP("XPDT",7816,"RTN","LA7VIN5",138,0)=" D XFORM^LA7VIN5A"
^XTMP("XPDT",7816,"RTN","LA7VIN5",139,0)=" Q:LA7VAL="""""
^XTMP("XPDT",7816,"RTN","LA7VIN5",140,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",141,0)=" ; Check if result passes input transform on data name"
^XTMP("XPDT",7816,"RTN","LA7VIN5",142,0)=" D CHKDIE^LA7VIN5A"
^XTMP("XPDT",7816,"RTN","LA7VIN5",143,0)=" Q:LA7VAL="""""
^XTMP("XPDT",7816,"RTN","LA7VIN5",144,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",145,0)=" ; Set flag to not store comments if it wasn't explicitly ordered."
^XTMP("XPDT",7816,"RTN","LA7VIN5",146,0)=" I $G(LA7LIMIT)=1 D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",147,0)=" . N LA76804"
^XTMP("XPDT",7816,"RTN","LA7VIN5",148,0)=" . K LA7LIMIT,LA7TREEN,^TMP(""LA7TREE"",$J)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",149,0)=" . ; Store all tests accessioned in ^TMP"
^XTMP("XPDT",7816,"RTN","LA7VIN5",150,0)=" . S LA76804=0"
^XTMP("XPDT",7816,"RTN","LA7VIN5",151,0)=" . F  S LA76804=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA76804)) Q:'LA76804  D UNWIND^LA7UTIL(LA76804)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",152,0)=" . I '$D(^TMP(""LA7TREE"",$J,+LA76241(0))) S LA7LIMIT=1 ;wasn't ordered"
^XTMP("XPDT",7816,"RTN","LA7VIN5",153,0)=" I $G(LA7LIMIT) D  Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",154,0)=" . S $P(LA7RMK(0,+LA76241(0)),""^"",1)=0"
^XTMP("XPDT",7816,"RTN","LA7VIN5",155,0)=" . K LA7LIMIT,^TMP(""LA7TREE"",$J)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",156,0)=" K ^TMP(""LA7TREE"",$J)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",157,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",158,0)=" ; Check point of care interface for matching specimen type  for this test in #62.4"
^XTMP("XPDT",7816,"RTN","LA7VIN5",159,0)=" I LA7INTYP>19,LA7INTYP<30 D  Q:'LA761"
^XTMP("XPDT",7816,"RTN","LA7VIN5",160,0)=" . N LA70070"
^XTMP("XPDT",7816,"RTN","LA7VIN5",161,0)=" . S LA761="""",LA7X=$P(LA76241(2),""^"",13) Q:'LA7X"
^XTMP("XPDT",7816,"RTN","LA7VIN5",162,0)=" . S LA70070=$$GET1^DIQ(61,LA7X_"","",""LEDI HL7:HL7 ABBR"")"
^XTMP("XPDT",7816,"RTN","LA7VIN5",163,0)=" . I LA70070=LA7SPEC S LA761=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VIN5",164,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",165,0)=" ; Set data node=test value"
^XTMP("XPDT",7816,"RTN","LA7VIN5",166,0)=" S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),""^"")=LA7VAL"
^XTMP("XPDT",7816,"RTN","LA7VIN5",167,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",168,0)=" ; Store reference ranges except for UI (LA7INTYP=1) interfaces"
^XTMP("XPDT",7816,"RTN","LA7VIN5",169,0)=" I LA7INTYP'=1 D REFRNG^LA7VIN5A($$P^LA7VHLU(.LA7SEG,8,LA7FS))"
^XTMP("XPDT",7816,"RTN","LA7VIN5",170,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",171,0)=" ; Store order/result codes/observation method except for UI (LA7INTYP=1) interfaces"
^XTMP("XPDT",7816,"RTN","LA7VIN5",172,0)=" S LA7X=$P(^LAH(LA7LWL,1,LA7ISQN,LA76304),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",173,0)=" I LA7ONLT S $P(LA7X,""!"",1)=LA7ONLT"
^XTMP("XPDT",7816,"RTN","LA7VIN5",174,0)=" I LA7RNLT S $P(LA7X,""!"",2)=LA7RNLT"
^XTMP("XPDT",7816,"RTN","LA7VIN5",175,0)=" I LA7RLNC S $P(LA7X,""!"",3)=LA7RLNC"
^XTMP("XPDT",7816,"RTN","LA7VIN5",176,0)=" I LA7OBM S $P(LA7X,""!"",4)=LA7OBM"
^XTMP("XPDT",7816,"RTN","LA7VIN5",177,0)=" I LA7INTYP'=1 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),""^"",3)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VIN5",178,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VIN5",179,0)=" ; Store abnormal flags except for UI (LA7INTYP=1) interfaces."
^XTMP("XPDT",7816,"RTN","LA7VIN5",180,0)=" I LA7INTYP'=1 D ABFLAG^LA7VIN5A($$P^LA7VHLU(.LA7SEG,9,LA7FS))"
^XTMP("XPDT",7816,"RTN","LA7VIN5",181,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",182,0)=" ; Store units except for UI (LA7INTYP=1) interfaces which pull values from file #60."
^XTMP("XPDT",7816,"RTN","LA7VIN5",183,0)=" I LA7INTYP'=1,LA7UNITS'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",184,0)=" . S LA7X=$P($G(^LAH(LA7LWL,1,LA7ISQN,LA76304)),""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",185,0)=" . S $P(LA7X,""!"",7)=LA7UNITS"
^XTMP("XPDT",7816,"RTN","LA7VIN5",186,0)=" . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),""^"",5)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VIN5",187,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",188,0)=" ; Store responsible observer on POC interfaces"
^XTMP("XPDT",7816,"RTN","LA7VIN5",189,0)=" I LA7RO'="""",LA7INTYP>19,LA7INTYP<30 D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",190,0)=" . I $P(LA7RO,""^"",2) S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),""^"",4)=$P(LA7RO,""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",191,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",192,0)=" ; Store specimen type except for UI (LA7INTYP=1) interfaces which pull values from the accession."
^XTMP("XPDT",7816,"RTN","LA7VIN5",193,0)=" I LA7INTYP'=1,$G(LA761) D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",194,0)=" . S X=$P(^LAH(LA7LWL,1,LA7ISQN,LA76304),""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",195,0)=" . S $P(X,""!"")=LA761"
^XTMP("XPDT",7816,"RTN","LA7VIN5",196,0)=" . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),""^"",5)=X"
^XTMP("XPDT",7816,"RTN","LA7VIN5",197,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",198,0)=" ; Store where test was performed except for UI (LA7INTYP=1) interfaces."
^XTMP("XPDT",7816,"RTN","LA7VIN5",199,0)=" I LA7INTYP'=1 D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",200,0)=" . N LA74,LA7I,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VIN5",201,0)=" . S LA7X=$$P^LA7VHLU(.LA7SEG,24,LA7FS),LA74="""""
^XTMP("XPDT",7816,"RTN","LA7VIN5",202,0)=" . I $P(LA7X,LA7CS,6)=""CLIA"" S LA74=$$IDX^XUAF4(""CLIA"",$P(LA7X,LA7CS,10))"
^XTMP("XPDT",7816,"RTN","LA7VIN5",203,0)=" . I LA74 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),""^"",9)=LA74 Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",204,0)=" . S LA7X=$$P^LA7VHLU(.LA7SEG,16,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",205,0)=" . F LA7I=1,4 I $P(LA7X,LA7CS,LA7I+2)?1(1""L-CL"",1""CLIA"",1""99VACLIA"") S LA74=$$IDX^XUAF4(""CLIA"",$P(LA7X,LA7CS,LA7I))"
^XTMP("XPDT",7816,"RTN","LA7VIN5",206,0)=" . I LA74 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),""^"",9)=LA74 Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",207,0)=" . D PRDID^LA7VIN5A($$P^LA7VHLU(.LA7SEG,16,LA7FS),LA7SFAC,LA7CS)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",208,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",209,0)=" ; Store equipment instance identifier"
^XTMP("XPDT",7816,"RTN","LA7VIN5",210,0)=" I LA7EII'="""" D EII^LA7VIN5A"
^XTMP("XPDT",7816,"RTN","LA7VIN5",211,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",212,0)=" ; If results for LEDI interface (LA7INTYP=10) and site keeps file #60"
^XTMP("XPDT",7816,"RTN","LA7VIN5",213,0)=" ; in sync with reference lab then compare message's units and normals"
^XTMP("XPDT",7816,"RTN","LA7VIN5",214,0)=" ; with site's to detect changes(LA7FLAG=1) and notify site."
^XTMP("XPDT",7816,"RTN","LA7VIN5",215,0)=" I LA7INTYP=10,$G(LA761),$G(^LAB(60,+$P(LA76241(0),""^""),1,LA761,.1)) D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",216,0)=" . N LA760,LA7FLAG,LA7I,LA7Y,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VIN5",217,0)=" . S LA760=+$P(LA76241(0),""^""),LA7Y=^LAB(60,LA760,1,LA761,0),LA7FLAG=0"
^XTMP("XPDT",7816,"RTN","LA7VIN5",218,0)=" . S LA7X=$P(^LAH(LA7LWL,1,LA7ISQN,LA76304),""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7VIN5",219,0)=" . I $P(LA7Y,""^"",7)'=$P(LA7X,""!"",7) S LA7FLAG=1"
^XTMP("XPDT",7816,"RTN","LA7VIN5",220,0)=" . I 'LA7FLAG,$P(LA7Y,""^"",2)=$P(LA7X,""!"",2),$P(LA7Y,""^"",3)=$P(LA7X,""!"",3) Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",221,0)=" . I 'LA7FLAG D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",222,0)=" . . N AGE,DOB,PNM,SEX"
^XTMP("XPDT",7816,"RTN","LA7VIN5",223,0)=" . . N LRDPF,LRNG,LRNGS,LRNG2,LRNG3,LRNG4,LRNG5,LRTREA,LRWRD,LRX,LRY"
^XTMP("XPDT",7816,"RTN","LA7VIN5",224,0)=" . . I $G(LRDFN) D DEM^LRX,KVAR^VADPT"
^XTMP("XPDT",7816,"RTN","LA7VIN5",225,0)=" . . S LRNG=LA7Y D NORM^LRVER5"
^XTMP("XPDT",7816,"RTN","LA7VIN5",226,0)=" . . S LA7Y=$TR(LRNG,$C(34),""""),LA7X=$TR(LA7X,$C(34),"""")"
^XTMP("XPDT",7816,"RTN","LA7VIN5",227,0)=" . . I $P(LA7Y,""^"",2)=$P(LA7X,""!"",2),$P(LA7Y,""^"",3)=$P(LA7X,""!"",3) Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",228,0)=" . . S LA7FLAG=1"
^XTMP("XPDT",7816,"RTN","LA7VIN5",229,0)=" . I 'LA7FLAG Q"
^XTMP("XPDT",7816,"RTN","LA7VIN5",230,0)=" . S LA7I=$O(^TMP(""LA7 UNITS/NORMALS CHANGED"",$J,""""),-1),LA7I=LA7I+1"
^XTMP("XPDT",7816,"RTN","LA7VIN5",231,0)=" . S X=LA7LWL_""^""_LA7ISQN_""^""_LA76304_""^""_LA76248_""^""_LA76249_""^""_LA7ORS_""^""_LA7TEST_""^""_$S(LA7TEST(0)'="""":LA7TEST(0),1:LA7TEST(2,0))_""^""_$$P^LA7VHLU(.LA7SEG,9,LA7FS)_""^""_LA760"
^XTMP("XPDT",7816,"RTN","LA7VIN5",232,0)=" . S ^TMP(""LA7 UNITS/NORMALS CHANGED"",$J,LA7I)=X"
^XTMP("XPDT",7816,"RTN","LA7VIN5",233,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VIN5",234,0)=" ; If LEDI interface and order status change store which results"
^XTMP("XPDT",7816,"RTN","LA7VIN5",235,0)=" ; associated with ordered test. Used to determine if order status"
^XTMP("XPDT",7816,"RTN","LA7VIN5",236,0)=" ; changed bulletin needs to be generated."
^XTMP("XPDT",7816,"RTN","LA7VIN5",237,0)=" I LA7INTYP=10,LA7SAC?1(1""A"",1""G"") D"
^XTMP("XPDT",7816,"RTN","LA7VIN5",238,0)=" . S LA7I=$G(LA7SAC(0)) Q:'LA7I"
^XTMP("XPDT",7816,"RTN","LA7VIN5",239,0)=" . S ^TMP(""LA7 ORDER STATUS"",$J,LA7I,+LA76241(0))="""""
^XTMP("XPDT",7816,"RTN","LA7VIN5",240,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1")="0^9^B52098570^B51506932"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",1,0)="LA7VMSG1 ;DALOI/JMC - LAB ORU (Observation Result) message builder cont'd;Aug 8, 2008"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**56,46,61,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",4,0)="START ; Process entries in queue"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",5,0)=" ; Called from LA7VMSG"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",7,0)=" N LA,LAER,LA7VER"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",8,0)=" N EID,HLEID,HLMTIEN,HLRESLT,HLARYTYP,HLECH,HLFS,HLCOMP,HLFORMAT"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",9,0)=" N GBL,LA7MID,LA7V,LA7VS,LA7V0N,LA7VIEN,RSITE,LRNT"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",10,0)=" N LA76248,LA76249,LA76249P,LA7DT,LA7ECH,LA7END,LA7FS,LA7NVAF,LA7ROOT,LA7X,LRDFN,LRIDT,LRSS,LRUID"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",11,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",12,0)=" ; variable list"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",13,0)=" ; LA(""LRUID"") - Host Unique ID from the local ACCESSION file (#68)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",14,0)=" ; LA(""SITE"")  - Primary site number of remote site ($$SITE^VASITE)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",15,0)=" ; LA(""RUID"")  - Remote sites Unique ID from ACCESSION file (#68)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",16,0)=" ; LA(""ORD"")   - Free text ordered test name from WKLD CODE file (#64)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",17,0)=" ; LA(""LRNLT"") - National Laboratory test code from WKLD CODE file (#64)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",18,0)=" ; LA(""LRIDT"") - Inverse date/time (accession date/time)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",19,0)=" ; LA(""LRSS"")  - test subscript defined in LABORATORY TEST file (#60)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",20,0)=" ; LA(""LRDFN"") - IEN in LAB DATA file (#63)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",21,0)=" ; LA(""ORDT"")  - Order date"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",22,0)=" ; LA(62.49)   - entry in #62.49 which contains pointer to results to build"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",23,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",24,0)=" L +^LAHM(62.49,""HL7 PROCESS"",LA7MTYP):0 Q:'$T"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",25,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",26,0)=" S GBL=""^TMP(""""HLS"""",""_$J_"")"""
^XTMP("XPDT",7816,"RTN","LA7VMSG1",27,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",28,0)=" D SORTPAT"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",29,0)=" I $D(^TMP(""LA76248"",$J)) D PROCESS"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",30,0)=" D KVAR^LRX"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",31,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",32,0)=" ; Release lock"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",33,0)=" L -^LAHM(62.49,""HL7 PROCESS"",LA7MTYP)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",34,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",35,0)=" K ^TMP(""LA76248"",$J),^TMP(""LA7VS"",$J),^TMP(""HLS"",$J)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",36,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",37,0)=" I $D(ZTQUEUED) S ZTREQ=""@"""
^XTMP("XPDT",7816,"RTN","LA7VMSG1",38,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",39,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",40,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",41,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",42,0)="SORTPAT ; Sort all results for tranmsission"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",43,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",44,0)=" N LA76248,LA76249,LA7END,LA7ROOT,LRDFN,LRUID"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",45,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",46,0)=" K ^TMP(""LA76248"",$J)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",47,0)=" ; Flag to indicate end of global."
^XTMP("XPDT",7816,"RTN","LA7VMSG1",48,0)=" S LA7END=0"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",49,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",50,0)=" ; Sort by configuration (LA76248), patient (LRDFN), UID (LRUID), file #62.49 ien (LA76249)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",51,0)=" S LA7ROOT=""^LAHM(62.49,""""AC"""",LA7MTYP,""""P"""")"""
^XTMP("XPDT",7816,"RTN","LA7VMSG1",52,0)=" F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7END  D"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",53,0)=" . I $QS(LA7ROOT,3)'=LA7MTYP!($QS(LA7ROOT,6)<1) S LA7END=1 Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",54,0)=" . S LA76248=$QS(LA7ROOT,5),LA76249=$QS(LA7ROOT,6)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",55,0)=" . L +^LAHM(62.49,LA76249):5 Q:'$T"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",56,0)=" . S LRDFN=$P($G(^LAHM(62.49,LA76249,63)),""^"",8)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",57,0)=" . S LRUID=$P($G(^LAHM(62.49,LA76249,63)),""^"",1)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",58,0)=" . I LRDFN,LRUID]"""" S ^TMP(""LA76248"",$J,LA76248,LRDFN,LRUID,LA76249)="""""
^XTMP("XPDT",7816,"RTN","LA7VMSG1",59,0)=" . L -^LAHM(62.49,LA76249)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",60,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",61,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",62,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",63,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",64,0)="PROCESS ; Process and build messages to be sent"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",65,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",66,0)=" N LA7101,LA76248,LA76249,LA76249P,LA7INTYP,LA7NTESN,LA7OBRSN,LA7OBXSN,LA7PIDSN,LA7SMSG,LA7VS,LRDFN"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",68,0)=" ; Cleanup"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",69,0)=" K ^TMP(""LA7VS"",$J),^TMP(""HLS"",$J)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",70,0)=" ; Initialize variables"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",71,0)=" S (LA76248,LA76249,LA76249P,LA7END,LRDFN)=0,LRUID="""""
^XTMP("XPDT",7816,"RTN","LA7VMSG1",72,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",73,0)=" ; Process sorted list of results to transmit."
^XTMP("XPDT",7816,"RTN","LA7VMSG1",74,0)=" S LA7ROOT=""^TMP(""""LA76248"""",$J)"""
^XTMP("XPDT",7816,"RTN","LA7VMSG1",75,0)=" F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""""  D  Q:LA7END"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",76,0)=" . I $QS(LA7ROOT,1)'=""LA76248""!($QS(LA7ROOT,2)'=$J) S LA7END=1 Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",77,0)=" . I LA76248'=$QS(LA7ROOT,3) D CONFIG"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",78,0)=" . I '$P(LA76248(0),""^"",3) Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",79,0)=" . S LA7INTYP=+$P(LA76248(0),""^"",9)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",80,0)=" . S (LA76249,LA(62.49))=$QS(LA7ROOT,6)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",81,0)=" . S LA7X=$G(^LAHM(62.49,LA76249,63))"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",82,0)=" . S LA(""HUID"")=$P(LA7X,U),LA(""SITE"")=$P(LA7X,U,2),LA(""RUID"")=$P(LA7X,U,3),LA(""ORD"")=$P(LA7X,U,4),LA(""NLT"")=$P(LA7X,U,5),LA(""LRIDT"")=$P(LA7X,U,6),LA(""SUB"")=$P(LA7X,U,7),LA(""LRDFN"")=$P(LA7X,U,8),LA(""ORDT"")=$P(LA7X,U,9)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",83,0)=" . S LA7NVAF=$$NVAF^LA7VHLU2(+LA(""SITE""))"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",84,0)=" . I LRUID'=$QS(LA7ROOT,5),LA7SMSG=2 D PAT Q:LA7END"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",85,0)=" . I LRDFN'=$QS(LA7ROOT,4) D PAT Q:LA7END"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",86,0)=" . S LRUID=$QS(LA7ROOT,5)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",87,0)=" . S ^TMP(""LA7VS"",$J,LA76249)=LA76249P"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",88,0)=" . N LA76249"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",89,0)=" . S LA76249=LA76249P"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",90,0)=" . I LA7MTYP=""ORU"" D EN^LA7VORU(.LA)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",91,0)=" . I LA7MTYP=""ORR"" D EN^LA7VORR1(.LA)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",92,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",93,0)=" I LA76249P D SENDMSG"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",94,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",95,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",97,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",98,0)="STARTMSG ; Initialize a HL7 message and variables"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",99,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",100,0)=" N LA7EVNT,SITE"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",101,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",102,0)=" K ^TMP(""LA7VS"",$J),@GBL"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",103,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",104,0)=" S LA76249P=LA76249"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",105,0)=" S SITE=$$RETFACID^LA7VHLU2(LA(""SITE""),2,1)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",106,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",107,0)=" I LA7MTYP=""ORU"" S LA7EVNT=""LA7V Results Reporting to ""_SITE"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",108,0)=" I LA7MTYP=""ORR"" S LA7EVNT=""LA7V Order Response to ""_SITE"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",109,0)=" D STARTMSG^LA7VHLU(LA7EVNT,LA76249P)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",110,0)=" I $G(HL) S LA7END=1"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",111,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",112,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",113,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",114,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",115,0)="SENDMSG ; File HL7 message with HL and LAB packages"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",116,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",117,0)=" ; No data to send"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",118,0)=" I '$D(^TMP(""HLS"",$J)) Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",119,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",120,0)=" D GEN^LA7VHLU"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",121,0)=" I $P(LA7MID,U)=0 D"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",122,0)=" . N LA7X"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",123,0)=" . S LA7X(1)=LA76249P,LA7X(2)=$TR($P(HLMID,""^"",2,3),""^"",""-"")"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",124,0)=" . D CREATE^LA7LOG(28)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",125,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",126,0)=" D UPDT6249"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",127,0)=" D UPDLPD"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",128,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",129,0)=" S (LA76249P,LA7PIDSN,LA7OBRSN,LA7OBXSN,LA7NTESN)=0"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",130,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",131,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",132,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",133,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",134,0)="CONFIG ; Setup for this configuration"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",135,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",136,0)=" ; Send a building message"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",137,0)=" I LA76249P D SENDMSG"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",138,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",139,0)=" ; Retrieve configuration information from #62.48"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",140,0)=" S LA76248=$QS(LA7ROOT,3)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",141,0)=" S LA76248(0)=$G(^LAHM(62.48,LA76248,0))"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",142,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",143,0)=" ; Flag to control message building; 1-one patient/msg, 2-one order/msg"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",144,0)=" S LA7SMSG=+$P(LA76248(0),""^"",8)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",145,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",146,0)=" ; Initialize variables"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",147,0)=" S (LA76249,LA76249P,LRDFN)=0"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",148,0)=" S LRUID="""""
^XTMP("XPDT",7816,"RTN","LA7VMSG1",149,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",150,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",151,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",152,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",153,0)="PAT ; Build patient information"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",154,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",155,0)=" N LA7ALTID,LA7EXTID,LA7PID,LA7PV1"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",156,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",157,0)=" ; If one patient/msg or one order/msg and message building then send it."
^XTMP("XPDT",7816,"RTN","LA7VMSG1",158,0)=" I LA7SMSG>0,LA76249P D SENDMSG"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",159,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",160,0)=" ; If no message building then start one."
^XTMP("XPDT",7816,"RTN","LA7VMSG1",161,0)=" I 'LA76249P S LA7PIDSN=0 D STARTMSG Q:LA7END"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",162,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",163,0)=" ; Setup PID and PV1 segments."
^XTMP("XPDT",7816,"RTN","LA7VMSG1",164,0)=" S LRDFN=$QS(LA7ROOT,4)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",165,0)=" S LRDPF=$P(^LR(LRDFN,0),""^"",2),DFN=$P(^(0),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",166,0)=" D DEM^LRX"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",167,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",168,0)=" ; Send placer's patient id (PID-3), return in PID-2, return PID-4 with alternate id"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",169,0)=" S (LA7ALTID,LA7EXTID)="""""
^XTMP("XPDT",7816,"RTN","LA7VMSG1",170,0)=" D PTEXTID^LA7VHLU(LA(""SITE""),LA(""RUID""),.LA7EXTID)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",171,0)=" I $G(LA7EXTID(""PID-2""))'="""" S LA7EXTID=$$CNVFLD^LA7VHLU3(LA7EXTID(""PID-2""),LA7EXTID(""ECH""),LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",172,0)=" I $G(LA7EXTID(""PID-4""))'="""" S LA7ALTID=$$CNVFLD^LA7VHLU3(LA7EXTID(""PID-4""),LA7EXTID(""ECH""),LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",173,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",174,0)=" ; Build PID segment"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",175,0)=" D PID^LA7VPID(LRDFN,LA7EXTID,.LA7PID,.LA7PIDSN,.HL,LA7ALTID)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",176,0)=" D FILESEG^LA7VHLU(GBL,.LA7PID)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",177,0)=" D FILE6249^LA7VHLU(LA76249P,.LA7PID)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",178,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",179,0)=" ; Build PV1 segment"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",180,0)=" ; Not built when sending to DoD facility - not used by CHCS"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",181,0)=" I LA7NVAF'=1 D"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",182,0)=" . D PV1^LA7VPID(LRDFN,.LA7PV1,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",183,0)=" . D FILESEG^LA7VHLU(GBL,.LA7PV1)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",184,0)=" . D FILE6249^LA7VHLU(LA76249P,.LA7PV1)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",185,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",186,0)=" S LRUID="""",(LA7OBRSN,LA7OBXSN,LA7NTESN)=0"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",187,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",188,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",189,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",190,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",191,0)="UPDT6249 ; Update entries in file #62.49"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",192,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",193,0)=" N LA7ERR,LA76249,LA76249P"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",194,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",195,0)=" S LA76249=0"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",196,0)=" F  S LA76249=$O(^TMP(""LA7VS"",$J,LA76249)) Q:'LA76249  D"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",197,0)=" . N FDA,LA7ERR"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",198,0)=" . S LA76249P=+$G(^TMP(""LA7VS"",$J,LA76249))"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",199,0)=" . ; Set pointer to parent on child entry."
^XTMP("XPDT",7816,"RTN","LA7VMSG1",200,0)=" . I LA76249'=LA76249P S FDA(1,62.49,LA76249_"","",6)=LA76249P"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",201,0)=" . I $G(HL(""APAT""))=""AL""!($G(HL(""APAT""))="""") S FDA(1,62.49,LA76249_"","",2)=""A"""
^XTMP("XPDT",7816,"RTN","LA7VMSG1",202,0)=" . E  S FDA(1,62.49,LA76249_"","",2)=""X"""
^XTMP("XPDT",7816,"RTN","LA7VMSG1",203,0)=" . S FDA(1,62.49,LA76249_"","",102)=HL(""SAN"")"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",204,0)=" . S FDA(1,62.49,LA76249_"","",103)=HL(""SAF"")"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",205,0)=" . S FDA(1,62.49,LA76249_"","",108)=HL(""MTN"")"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",206,0)=" . S FDA(1,62.49,LA76249_"","",110)=HL(""PID"")"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",207,0)=" . S FDA(1,62.49,LA76249_"","",111)=HL(""VER"")"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",208,0)=" . I $P($G(LA7MID),""^"")'="""" S FDA(1,62.49,LA76249_"","",109)=$P(LA7MID,""^"")"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",209,0)=" . I $P($G(LA7MID),""^"",2) D"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",210,0)=" . . S FDA(1,62.49,LA76249_"","",160)=$P(LA7MID,""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",211,0)=" . . S FDA(1,62.49,LA76249_"","",161)=$P(LA7MID,""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",212,0)=" . D FILE^DIE("""",""FDA(1)"",""LA7ERR(1)"")"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",213,0)=" . D CLEAN^DILF"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",214,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",215,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",216,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",217,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",218,0)="UPDLPD ; Update lab pending orders (#69.6) for each entry in #62.49"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",219,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",220,0)=" N LA76249"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",221,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",222,0)=" S LA76249=0"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",223,0)=" F  S LA76249=$O(^TMP(""LA7VS"",$J,LA76249)) Q:'LA76249  D UPD696"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",224,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",225,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",226,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",227,0)="UPD696 ; Update LAB PENDING ORDERS file #69.6"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",228,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",229,0)=" N LA74,LA7696,LA76964,LA7ERR,LA7ORDT,LA7STAT,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",230,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",231,0)=" ; Find ""Results Available"" status in #64.061"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",232,0)=" S LA7STAT=$$FIND1^DIC(64.061,"""",""OMX"",""Results Available"","""",""I $P(^LAB(64.061,Y,0),U,7)=""""U"""""")"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",233,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",234,0)=" S LA7X=$G(^LAHM(62.49,LA76249,63))"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",235,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",236,0)=" ; Ordering institution - pointer to file #4"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",237,0)=" S LA74=$P(LA7X,""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",238,0)=" I LA74="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",239,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",240,0)=" ; Ordered test"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",241,0)=" S LA7ORDT=$P(LA7X,""^"",4)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",242,0)=" I LA7ORDT="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",243,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",244,0)=" ; File #69.6 ien and ordered test multiple ien"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",245,0)=" S LA7696=0"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",246,0)=" F  S LA7696=$O(^LRO(69.6,""RST"",LA74,LA(""RUID""),LA7696)) Q:'LA7696  D"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",247,0)=" . N FDA"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",248,0)=" . S LA76964=$O(^LRO(69.6,LA7696,2,""B"",LA7ORDT,0))"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",249,0)=" . I LA76964<1 Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",250,0)=" . ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",251,0)=" . L +^LRO(69.6,LA7696):99999"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",252,0)=" . ; Cannot get lock on ENTRY in 69.6"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",253,0)=" . I '$T D CREATE^LA7LOG(33) Q"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",254,0)=" . ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",255,0)=" . ; Store outgoing HL7 message ID"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",256,0)=" . S FDA(1,69.64,LA76964_"",""_LA7696_"","",7)=$P(LA7MID,U)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",257,0)=" . ; Set to Results Available."
^XTMP("XPDT",7816,"RTN","LA7VMSG1",258,0)=" . S FDA(1,69.64,LA76964_"",""_LA7696_"","",5)=LA7STAT"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",259,0)=" . D FILE^DIE("""",""FDA(1)"",""LA7ERR(1)"")"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",260,0)=" . D CLEAN^DILF"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",261,0)=" . ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",262,0)=" . L -^LRO(69.6,LA7696)"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",263,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VMSG1",264,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBR")="0^21^B25844567^B23749256"
^XTMP("XPDT",7816,"RTN","LA7VOBR",1,0)="LA7VOBR ;DALOI/JMC - LAB OBR segment builder ;Sep 18, 2007"
^XTMP("XPDT",7816,"RTN","LA7VOBR",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VOBR",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",4,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBR",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",7,0)="OBR1(LA7OBRSN) ; Build OBR-1 sequence - set segment id"
^XTMP("XPDT",7816,"RTN","LA7VOBR",8,0)=" ; Call with LA7OBRSN = segment id (pass by reference)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",9,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",10,0)=" S LA7OBRSN=$G(LA7OBRSN)+1"
^XTMP("XPDT",7816,"RTN","LA7VOBR",11,0)=" Q LA7OBRSN"
^XTMP("XPDT",7816,"RTN","LA7VOBR",12,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",13,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",14,0)="OBR2(LA7ID,LA7FS,LA7ECH) ; Build OBR-2 sequence - placer's specimen id"
^XTMP("XPDT",7816,"RTN","LA7VOBR",15,0)=" ; Call with LA7ID = placer's specimen id (accn number/UID)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",16,0)=" ;           LA7ID(""NMSP"") = application namespace (optional)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",17,0)=" ;           LA7ID(""SITE"") = placer facility"
^XTMP("XPDT",7816,"RTN","LA7VOBR",18,0)=" ;           LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",19,0)=" ;          LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",20,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",21,0)=" N LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",22,0)=" D OBR2^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",23,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",24,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",25,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",26,0)="OBR3(LA7ID,LA7FS,LA7ECH) ; Build OBR-3 sequence - filler's specimen id"
^XTMP("XPDT",7816,"RTN","LA7VOBR",27,0)=" ; Call with LA7ID = filler's specimen id (accn number/UID)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",28,0)=" ;           LA7ID(""NMSP"") = application namespace (optional)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",29,0)=" ;           LA7ID(""SITE"") = filler facility"
^XTMP("XPDT",7816,"RTN","LA7VOBR",30,0)=" ;           LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",31,0)=" ;          LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",32,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",33,0)=" N LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",34,0)=" D OBR3^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",35,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",36,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",37,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",38,0)="OBR4(LA7NLT,LA760,LA7ALT,LA7FS,LA7ECH) ; Build OBR-4 sequence - Universal service ID"
^XTMP("XPDT",7816,"RTN","LA7VOBR",39,0)=" ; Call with LA7NLT = NLT test code"
^XTMP("XPDT",7816,"RTN","LA7VOBR",40,0)=" ;            LA760 = file #60 ien if known"
^XTMP("XPDT",7816,"RTN","LA7VOBR",41,0)=" ;           LA7ALT = alternate order code and system in form "
^XTMP("XPDT",7816,"RTN","LA7VOBR",42,0)=" ;                     test code^test name^coding system"
^XTMP("XPDT",7816,"RTN","LA7VOBR",43,0)=" ;            LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",44,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",45,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",46,0)=" ; Returns     LA7Y = OBR-4 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",47,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",48,0)=" N LA764,LA7COMP,LA7ERR,LA7TN,LA7X,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBR",49,0)=" D OBR4^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",50,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",51,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",52,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",53,0)="OBR6(LA7DT) ; Build OBR-6 sequence - requested date/time"
^XTMP("XPDT",7816,"RTN","LA7VOBR",54,0)=" ; Call with LA7DT = FileMan date/time"
^XTMP("XPDT",7816,"RTN","LA7VOBR",55,0)=" ; Returns OBR-6 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",56,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",57,0)=" S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",58,0)=" Q $$FMTHL7^XLFDT(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",59,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",60,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",61,0)="OBR7(LA7DT) ; Build OBR-7 sequence - collection date/time"
^XTMP("XPDT",7816,"RTN","LA7VOBR",62,0)=" ; Call with LA7DT = FileMan date/time"
^XTMP("XPDT",7816,"RTN","LA7VOBR",63,0)=" ; Returns OBR-7 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",64,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",65,0)=" S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",66,0)=" Q $$FMTHL7^XLFDT(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",68,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",69,0)="OBR8(LA7DT) ; Build OBR-8 sequence - collection end date/time"
^XTMP("XPDT",7816,"RTN","LA7VOBR",70,0)=" ; Call with LA7DT = FileMan date/time"
^XTMP("XPDT",7816,"RTN","LA7VOBR",71,0)=" ; Returns OBR-8 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",72,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",73,0)=" S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",74,0)=" Q $$FMTHL7^XLFDT(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",75,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",76,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",77,0)="OBR9(LA7VOL,LA764061,LA7FS,LA7ECH) ; Build OBR-9 sequence - collection volume"
^XTMP("XPDT",7816,"RTN","LA7VOBR",78,0)=" ; Call with    LA7VOL = collection volume"
^XTMP("XPDT",7816,"RTN","LA7VOBR",79,0)=" ;            LA764061 = units (pointer to #64.061)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",80,0)=" ;               LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",81,0)=" ;              LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",82,0)=" ; Returns OBR-9 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",84,0)=" N LA7IENS,LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",85,0)=" D OBR9^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",86,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",87,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",88,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",89,0)="OBR11(LA7X) ; Build OBR-11 sequence - speciman action code"
^XTMP("XPDT",7816,"RTN","LA7VOBR",90,0)=" ; Call with LA7X = HL7 Table 0065 entry"
^XTMP("XPDT",7816,"RTN","LA7VOBR",91,0)=" ; Returns OBR-11 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",92,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",93,0)=" ; JMC-12/09/99 Need to expand this function to determine based on collection status"
^XTMP("XPDT",7816,"RTN","LA7VOBR",94,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",95,0)=" Q LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBR",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",97,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",98,0)="OBR12(LRDFN,LA7FS,LA7ECH) ; Build OBR-12 sequence - patient info"
^XTMP("XPDT",7816,"RTN","LA7VOBR",99,0)=" ; Call with  LRDFN = ien of patient in #63"
^XTMP("XPDT",7816,"RTN","LA7VOBR",100,0)=" ;            LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",101,0)=" ;           LA7ECH = HL7 encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",102,0)=" ; Returns OBR-12 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",103,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",104,0)=" N LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBR",105,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",106,0)=" S LRDFN=$G(LRDFN),LA7ECH=$G(LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",107,0)=" ; Infection Warning"
^XTMP("XPDT",7816,"RTN","LA7VOBR",108,0)=" S LA7X=$P($G(^LR(LRDFN,.091)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBR",109,0)=" I LA7X'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBR",110,0)=" . S LA7X=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",111,0)=" . S LA7X=$E(LA7ECH,1)_LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBR",112,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",113,0)=" Q LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBR",114,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",115,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",116,0)="OBR13(LA7TXT,LA7FS,LA7ECH) ; Build OBR-13 sequence - revelant clinical info"
^XTMP("XPDT",7816,"RTN","LA7VOBR",117,0)=" ; Call with LA7TXT = text to place into OBR-13"
^XTMP("XPDT",7816,"RTN","LA7VOBR",118,0)=" ;            LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",119,0)=" ;           LA7ECH = HL7 encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",120,0)=" ; Returns OBR-12 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",121,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",122,0)=" N LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBR",123,0)=" S LA7X=$$CHKDATA^LA7VHLU3(LA7TXT,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",124,0)=" Q LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBR",125,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",126,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",127,0)="OBR14(LA7DT) ; Build OBR-14 sequence - speciman arrival date/time"
^XTMP("XPDT",7816,"RTN","LA7VOBR",128,0)=" ; Call with LA7DT = FileMan date/time"
^XTMP("XPDT",7816,"RTN","LA7VOBR",129,0)=" ; Returns OBR-14 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",130,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",131,0)=" S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",132,0)=" Q $$FMTHL7^XLFDT(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",133,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",134,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",135,0)="OBR15(LA761,LA762,LA7ALT,LA7FS,LA7ECH,LA7CM,LA7SNM) ; Build OBR-15 sequence - specimen source"
^XTMP("XPDT",7816,"RTN","LA7VOBR",136,0)=" ; Call with LA761 = ien of topography file #61"
^XTMP("XPDT",7816,"RTN","LA7VOBR",137,0)=" ;           LA762 = ien of collection sample in file #62"
^XTMP("XPDT",7816,"RTN","LA7VOBR",138,0)=" ;          LA7ALT = alternate non-HL7 codes/text/coding system in form -"
^XTMP("XPDT",7816,"RTN","LA7VOBR",139,0)=" ;                   specimen code^specimen text^specimen system^CONTROL^collection sample code^collection sample^collection system."
^XTMP("XPDT",7816,"RTN","LA7VOBR",140,0)=" ;                   ""CONTROL"" only present when specimen is a lab control from file #62.3."
^XTMP("XPDT",7816,"RTN","LA7VOBR",141,0)=" ;                   presence of these will override standard HL7 tables"
^XTMP("XPDT",7816,"RTN","LA7VOBR",142,0)=" ;           LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",143,0)=" ;          LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",144,0)=" ;           LA7CM = ien of shipping condition file #62.93 (collection method)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",145,0)=" ;          LA7SNM = 1-flag to send SNOMED CT instead of HL7 table 0070"
^XTMP("XPDT",7816,"RTN","LA7VOBR",146,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",147,0)=" ; Returns OBR-15 sequence in LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",148,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",149,0)=" N LA764061,LA7COMP,LA7ERR,LA7X,LA7Y,LA7Z,X,Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",150,0)=" D OBR15^LA7VOBRB"
^XTMP("XPDT",7816,"RTN","LA7VOBR",151,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",152,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",153,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",154,0)="OBR18(LA7X,LA7FS,LA7ECH) ; Build OBR-18 sequence - Placer's field #1"
^XTMP("XPDT",7816,"RTN","LA7VOBR",155,0)=" ; Call with   LA7X = array containing components to store, pass by reference."
^XTMP("XPDT",7816,"RTN","LA7VOBR",156,0)=" ;            LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",157,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",158,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",159,0)=" ; Returns OBR-18 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",160,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",161,0)=" N LA7I,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBR",162,0)=" D OBRPF^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",163,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",164,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",165,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",166,0)="OBR19(LA7X,LA7FS,LA7ECH) ; Build OBR-19 sequence - Placer's field #2"
^XTMP("XPDT",7816,"RTN","LA7VOBR",167,0)=" ; Call with LA7X() = array containing components to store, pass by reference."
^XTMP("XPDT",7816,"RTN","LA7VOBR",168,0)=" ;            LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",169,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",170,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",171,0)=" ; Returns OBR-19 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",172,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",173,0)=" N LA7I,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBR",174,0)=" D OBRPF^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",175,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",176,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",177,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",178,0)="OBR20(LA7X,LA7FS,LA7ECH) ; Build OBR-20 sequence - Filler's field #1"
^XTMP("XPDT",7816,"RTN","LA7VOBR",179,0)=" ; Call with   LA7X = array containing components to store, pass by reference."
^XTMP("XPDT",7816,"RTN","LA7VOBR",180,0)=" ;            LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",181,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",182,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",183,0)=" ; Returns OBR-20 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",184,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",185,0)=" N LA7I,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBR",186,0)=" D OBRPF^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",187,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",188,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",189,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",190,0)="OBR21(LA7X,LA7FS,LA7ECH) ; Build OBR-21 sequence - Filler's field #2"
^XTMP("XPDT",7816,"RTN","LA7VOBR",191,0)=" ; Call with LA7X() = array containing components to store, pass by reference."
^XTMP("XPDT",7816,"RTN","LA7VOBR",192,0)=" ;            LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",193,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",194,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",195,0)=" ; Returns OBR-21 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",196,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",197,0)=" N LA7I,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBR",198,0)=" D OBRPF^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",199,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",200,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",201,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",202,0)="OBR22(LA7DT) ; Build OBR-22 sequence - date report completed"
^XTMP("XPDT",7816,"RTN","LA7VOBR",203,0)=" ; Call with LA7DT = FileMan date/time"
^XTMP("XPDT",7816,"RTN","LA7VOBR",204,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",205,0)=" ; Returns OBR-22 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",206,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",207,0)=" S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",208,0)=" Q $$FMTHL7^XLFDT(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",209,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",210,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",211,0)="OBR24(LA7SS) ; Build OBR-24 sequence - diagnostic service id"
^XTMP("XPDT",7816,"RTN","LA7VOBR",212,0)=" ; Call with LA7SS = File #63 subscript^section within subscript"
^XTMP("XPDT",7816,"RTN","LA7VOBR",213,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",214,0)=" ; Returns OBR-24 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",215,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",216,0)=" N LA7Y,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBR",217,0)=" D OBR24^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",218,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",219,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",220,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",221,0)="OBR25(LA7FLAG) ; Build OBR-25 sequence - Result status"
^XTMP("XPDT",7816,"RTN","LA7VOBR",222,0)=" ; Call with LA7FLAG = VistA Lab status flag"
^XTMP("XPDT",7816,"RTN","LA7VOBR",223,0)=" ; Returns result status based on HL7 table 0123"
^XTMP("XPDT",7816,"RTN","LA7VOBR",224,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",225,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",226,0)=" D OBR25^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",227,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",228,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",229,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",230,0)="OBR26(LA7OBX3,LA7OBX4,LA7OBX5,LA7FS,LA7ECH)     ; Build OBR-26 sequence - Parent result"
^XTMP("XPDT",7816,"RTN","LA7VOBR",231,0)=" ; Call with LA7OBX3 = OBX-3 observation id of parent result"
^XTMP("XPDT",7816,"RTN","LA7VOBR",232,0)=" ;           LA7OBX4 = OBX-4 sub-id of parent result"
^XTMP("XPDT",7816,"RTN","LA7VOBR",233,0)=" ;           LA7OBX5 = OBX-5 parent result"
^XTMP("XPDT",7816,"RTN","LA7VOBR",234,0)=" ;             LA7FS = HL7 Field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",235,0)=" ;            LA7ECH = HL7 encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",236,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",237,0)=" N LA7C,LA7SC,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBR",238,0)=" D OBR26^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",239,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",240,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",241,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",242,0)="OBR27(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH) ; Build OBR-27 sequence - Quantity/Timing"
^XTMP("XPDT",7816,"RTN","LA7VOBR",243,0)=" ; Call with  LA7DUR = collection duration"
^XTMP("XPDT",7816,"RTN","LA7VOBR",244,0)=" ;           LA7DURU = duration units (pointer to #64.061)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",245,0)=" ;           LA76205 = test urgency"
^XTMP("XPDT",7816,"RTN","LA7VOBR",246,0)=" ;             LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",247,0)=" ;            LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",248,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",249,0)=" ; Returns OBR-27 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",250,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",251,0)=" ; Since field is same as ORC-7, use builder for ORC-7 field."
^XTMP("XPDT",7816,"RTN","LA7VOBR",252,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",253,0)=" Q $$ORC7^LA7VORC(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBR",254,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",255,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",256,0)="OBR29(LA7PON,LA7FON,LA7FS,LA7ECH)       ; Build OBR-29 sequence - Parent"
^XTMP("XPDT",7816,"RTN","LA7VOBR",257,0)=" ; Call with LA7PON = parent's placer order number"
^XTMP("XPDT",7816,"RTN","LA7VOBR",258,0)=" ;           LA7FON = parent's filler order nubmer"
^XTMP("XPDT",7816,"RTN","LA7VOBR",259,0)=" ;            LA7FS = HL7 field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",260,0)=" ;           LA7ECH = HL7 encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",261,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",262,0)=" N LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBR",263,0)=" D OBR29^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",264,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBR",265,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",266,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",267,0)="OBR32(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBR-32 sequence - Principle Result Interpreter field"
^XTMP("XPDT",7816,"RTN","LA7VOBR",268,0)=" ; Call with   LA7DUZ = DUZ of verifying user"
^XTMP("XPDT",7816,"RTN","LA7VOBR",269,0)=" ;             LA7DIV = Institution of user"
^XTMP("XPDT",7816,"RTN","LA7VOBR",270,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",271,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",272,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VOBR",273,0)=" ; Returns OBR-32 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",274,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",275,0)=" N LA7PRI,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBR",276,0)=" D OBR32^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",277,0)=" Q LA7PRI"
^XTMP("XPDT",7816,"RTN","LA7VOBR",278,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",279,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",280,0)="OBR33(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBR-32 sequence - Assistant Result Interpreter field"
^XTMP("XPDT",7816,"RTN","LA7VOBR",281,0)=" ; Call with   LA7DUZ = DUZ of assistant interpreter"
^XTMP("XPDT",7816,"RTN","LA7VOBR",282,0)=" ;             LA7DIV = Institution of user"
^XTMP("XPDT",7816,"RTN","LA7VOBR",283,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",284,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",285,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VOBR",286,0)=" ; Returns OBR-33 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",287,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",288,0)=" N LA7ARI,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBR",289,0)=" D OBR33^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",290,0)=" Q LA7ARI"
^XTMP("XPDT",7816,"RTN","LA7VOBR",291,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",292,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",293,0)="OBR34(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBR-34 sequence - Technician field"
^XTMP("XPDT",7816,"RTN","LA7VOBR",294,0)=" ; Call with   LA7DUZ = DUZ of techician"
^XTMP("XPDT",7816,"RTN","LA7VOBR",295,0)=" ;             LA7DIV = Institution of user"
^XTMP("XPDT",7816,"RTN","LA7VOBR",296,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",297,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",298,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VOBR",299,0)=" ; Returns OBR-34 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",300,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",301,0)=" N LA7TECH,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBR",302,0)=" D OBR34^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",303,0)=" Q LA7TECH"
^XTMP("XPDT",7816,"RTN","LA7VOBR",304,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",305,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",306,0)="OBR35(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBR-35 sequence - Transcriptionist field"
^XTMP("XPDT",7816,"RTN","LA7VOBR",307,0)=" ; Call with   LA7DUZ = DUZ of transcriptionist"
^XTMP("XPDT",7816,"RTN","LA7VOBR",308,0)=" ;             LA7DIV = Institution of user"
^XTMP("XPDT",7816,"RTN","LA7VOBR",309,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",310,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",311,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VOBR",312,0)=" ; Returns OBR-35 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",313,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",314,0)=" N LA7TSPT,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBR",315,0)=" D OBR35^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",316,0)=" Q LA7TSPT"
^XTMP("XPDT",7816,"RTN","LA7VOBR",317,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",318,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",319,0)="OBR44(LA7VAL,LA7FS,LA7ECH) ; Build OBR-44 sequence - Procedure Code"
^XTMP("XPDT",7816,"RTN","LA7VOBR",320,0)=" ; Call with   LA7VAL = Order NLT code"
^XTMP("XPDT",7816,"RTN","LA7VOBR",321,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBR",322,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBR",323,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VOBR",324,0)=" ; Returns       LA7Y = OBR-44 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBR",325,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBR",326,0)=" N LA764,LA781,LA7X,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBR",327,0)=" D OBR44^LA7VOBRA"
^XTMP("XPDT",7816,"RTN","LA7VOBR",328,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBRA")="0^27^B39455733^B37451712"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",1,0)="LA7VOBRA ;DALOI/JMC - LAB OBR segment builder (cont'd);Jan 20, 2009"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",4,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",7,0)="OBR2 ; Build OBR-2 sequence - placer's specimen id"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",9,0)=" S LA7ID=$$CHKDATA^LA7VHLU3(LA7ID,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",10,0)=" S $P(LA7Y,$E(LA7ECH,1),1)=LA7ID"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",11,0)=" I $G(LA7ID(""NMSP""))'="""" S $P(LA7Y,$E(LA7ECH,1),2)=LA7ID(""NMSP"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",12,0)=" I $G(LA7ID(""SITE""))'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",13,0)=" . S LA7X=$$FACDNS^LA7VHLU2(LA7ID(""SITE""),LA7FS,LA7ECH,1)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",14,0)=" . S $P(LA7Y,$E(LA7ECH),3)=$P(LA7X,$E(LA7ECH),2)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",15,0)=" . S $P(LA7Y,$E(LA7ECH),4)=$P(LA7X,$E(LA7ECH),3)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",16,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",17,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",18,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",19,0)="OBR3 ; Build OBR-3 sequence - filler's specimen id"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",20,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",21,0)=" S LA7ID=$$CHKDATA^LA7VHLU3(LA7ID,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",22,0)=" S $P(LA7Y,$E(LA7ECH,1),1)=LA7ID"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",23,0)=" I $G(LA7ID(""NMSP""))'="""" S $P(LA7Y,$E(LA7ECH,1),2)=LA7ID(""NMSP"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",24,0)=" I $G(LA7ID(""SITE""))'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",25,0)=" . S LA7X=$$FACDNS^LA7VHLU2(LA7ID(""SITE""),LA7FS,LA7ECH,1)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",26,0)=" . S $P(LA7Y,$E(LA7ECH),3)=$P(LA7X,$E(LA7ECH),2)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",27,0)=" . S $P(LA7Y,$E(LA7ECH),4)=$P(LA7X,$E(LA7ECH),3)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",28,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",29,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",30,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",31,0)="OBR4 ; Build OBR-4 sequence - Universal service ID"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",32,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",33,0)=" S LA764=0,LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",34,0)=" ; specify component position - primary/alternate"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",35,0)=" S LA7COMP=0"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",36,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",37,0)=" ; Send non-VA test codes as first coding system"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",38,0)=" I LA7ALT'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",39,0)=" . N I"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",40,0)=" . F I=1:1:3 S $P(LA7Y,$E(LA7ECH),LA7COMP+I)=$$CHKDATA^LA7VHLU3($P(LA7ALT,""^"",I),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",41,0)=" . S LA7COMP=LA7COMP+I"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",42,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",43,0)=" ; Send NLT test codes as primary unless non-VA codes then send as alternate code"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",44,0)=" I LA7NLT'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",45,0)=" . S LA764=$O(^LAM(""E"",LA7NLT,0)),LA7Z="""""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",46,0)=" . I LA764 S LA7Z=$$GET1^DIQ(64,LA764_"","",.01,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",47,0)=" . I LA7Z="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",48,0)=" . . N LA7642"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",49,0)=" . . S LA764=$O(^LAM(""E"",$P(LA7NLT,""."")_"".0000"",0))"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",50,0)=" . . I LA764 S LA7Z=$$GET1^DIQ(64,LA764_"","",.01,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",51,0)=" . . S LA7642=$O(^LAB(64.2,""F"","".""_$P(LA7NLT,""."",2),0))"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",52,0)=" . . I LA764,LA7642 S LA7Z=LA7Z_""~""_$$GET1^DIQ(64.2,LA7642_"","",.01,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",53,0)=" . S $P(LA7Y,$E(LA7ECH),LA7COMP+1)=$$CHKDATA^LA7VHLU3(LA7NLT,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",54,0)=" . S $P(LA7Y,$E(LA7ECH),LA7COMP+2)=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",55,0)=" . S $P(LA7Y,$E(LA7ECH),LA7COMP+3)=""99VA64"""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",56,0)=" . S LA7COMP=LA7COMP+3"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",57,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",58,0)=" ; Send file #60 test name if available and no alternate"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",59,0)=" I LA7COMP<4,LA760 D"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",60,0)=" . S LA7TN=$$GET1^DIQ(60,LA760_"","",.01)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",61,0)=" . S $P(LA7Y,$E(LA7ECH),LA7COMP+1)=LA760"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",62,0)=" . S $P(LA7Y,$E(LA7ECH),LA7COMP+2)=$$CHKDATA^LA7VHLU3(LA7TN,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",63,0)=" . S $P(LA7Y,$E(LA7ECH),LA7COMP+3)=""99VA60"""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",64,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",65,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",66,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",68,0)="OBR9 ; Build OBR-9 sequence - collection volume"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",69,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",70,0)=" ; Collection volume"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",71,0)=" S $P(LA7Y,$E(LA7ECH,1))=LA7VOL"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",72,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",73,0)=" I LA764061 D"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",74,0)=" . S LA7IENS=LA764061_"","""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",75,0)=" . D GETS^DIQ(64.061,LA7IENS,"".01;1"",""E"",""LA7Y"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",76,0)=" . ; Collection Volume units code"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",77,0)=" . S $P(LA7X,$E(LA7ECH,4),1)=$G(LA7Y(64.061,LA7IENS,.01,""E""))"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",78,0)=" . ; Collection Volume units text"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",79,0)=" . S $P(LA7X,$E(LA7ECH,4),2)=$$CHKDATA^LA7VHLU3($G(LA7Y(64.061,LA7IENS,1,""E"")),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",80,0)=" . ; LOINC coding system"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",81,0)=" . S $P(LA7X,$E(LA7ECH,4),3)=""LN"""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",82,0)=" . S $P(LA7Y,$E(LA7ECH,1),2)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",84,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",85,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",86,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",87,0)="OBR24 ; Build OBR-24 sequence - diagnostic service id"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",88,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",89,0)=" ; Code non-MI subscripts"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",90,0)=" I $P(LA7SS,""^"")'=""MI"" D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",91,0)=" . S LA7X=$P(LA7SS,""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",92,0)=" . S LA7Y=$S(LA7X=""CH"":""CH"",LA7X=""SP"":""SP"",LA7X=""CY"":""CP"",LA7X=""EM"":""PAT"",LA7X=""AU"":""PAT"",LA7X=""BB"":""BLB"",1:""LAB"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",93,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",94,0)=" ; Code MI subscripts"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",95,0)=" S LA7X=$P(LA7SS,""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",96,0)=" S LA7Y=$S(LA7X=11:""MB"",LA7X=14:""PAR"",LA7X=18:""MYC"",LA7X=22:""MCB"",LA7X=33:""VR"",1:""MB"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",97,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",98,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",99,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",100,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",101,0)="OBR25 ; Build OBR-25 sequence - Result status"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",102,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",103,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",104,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",105,0)=" I LA7FLAG=""F"" S LA7Y=""F"""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",106,0)=" I LA7FLAG=""P"" S LA7Y=""P"""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",107,0)=" I LA7FLAG=""A"" S LA7Y=""A"""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",108,0)=" I LA7FLAG=""C"" S LA7Y=""C"""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",109,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",110,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",111,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",112,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",113,0)="OBR26 ; Build OBR-26 sequence - Parent result"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",114,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",115,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",116,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",117,0)=" ; Move component into sub-component position"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",118,0)=" ; Translate component character to sub-component character"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",119,0)=" S LA7C=$E(LA7ECH,1),LA7SC=$E(LA7ECH,4)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",120,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",121,0)=" ; Parent result observation identifier in 1st component"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",122,0)=" I LA7OBX3'="""" S $P(LA7Y,$E(LA7ECH,1),1)=$TR(LA7OBX3,LA7C,LA7SC)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",123,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",124,0)=" ; Parent sub-id in 2nd component"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",125,0)=" I LA7OBX4'="""" S $P(LA7Y,$E(LA7ECH,1),2)=$TR(LA7OBX4,LA7C,LA7SC)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",126,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",127,0)=" ; Parent test result in 3rd component"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",128,0)=" I LA7OBX5'="""" S $P(LA7Y,$E(LA7ECH,1),3)=$TR(LA7OBX5,LA7C,LA7SC)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",129,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",130,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",131,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",132,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",133,0)="OBR29 ; Build OBR-29 sequence - Parent"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",134,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",135,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",136,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",137,0)=" I $G(LA7PON)'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",138,0)=" . S LA7Z=$$CHKDATA^LA7VHLU3(LA7PON,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",139,0)=" . S $P(LA7Y,$E(LA7ECH,1),1)=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",140,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",141,0)=" I $G(LA7FON)'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",142,0)=" . S LA7Z=$$CHKDATA^LA7VHLU3(LA7FON,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",143,0)=" . S $P(LA7Y,$E(LA7ECH,1),2)=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",144,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",145,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",146,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",147,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",148,0)="OBRPF ; Build OBR-18,19,20,21 Placer/Filler #1/#2"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",149,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",150,0)=" S (LA7Y,LA7Z)="""",LA7I=0"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",151,0)=" F  S LA7I=$O(LA7X(LA7I)) Q:'LA7I  S $P(LA7Z,""^"",LA7I)=LA7X(LA7I)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",152,0)=" S LA7Y=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",153,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",154,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",155,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",156,0)="OBR32 ; Build OBR-32 sequence - Principle Result Interpreter field"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",157,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",158,0)=" S LA7X=$$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,1,2)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",159,0)=" S $P(LA7PRI,$E(LA7ECH))=$P(LA7X,$E(LA7ECH,4),1,9)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",160,0)=" I LA7DIV S $P(LA7PRI,$E(LA7ECH),7)=$$FACDNS^LA7VHLU2(LA7DIV,LA7FS,LA7ECH,2)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",161,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",162,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",163,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",164,0)="OBR33 ; Build OBR-32 sequence - Assistant Result Interpreter field"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",165,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",166,0)=" S LA7X=$$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,1,2)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",167,0)=" S $P(LA7ARI,$E(LA7ECH))=$P(LA7X,$E(LA7ECH,4),1,9)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",168,0)=" I LA7DIV S $P(LA7ARI,$E(LA7ECH),7)=$$FACDNS^LA7VHLU2(LA7DIV,LA7FS,LA7ECH,2)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",169,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",170,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",171,0)="OBR34 ; Build OBR-34 sequence - Technician field"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",172,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",173,0)=" S LA7X=$$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,1,1)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",174,0)=" S $P(LA7TECH,$E(LA7ECH))=$P(LA7X,$E(LA7ECH,4),1,9)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",175,0)=" I LA7DIV S $P(LA7TECH,$E(LA7ECH),7)=$$FACDNS^LA7VHLU2(LA7DIV,LA7FS,LA7ECH,2)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",176,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",177,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",178,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",179,0)="OBR35 ; Build OBR-35 sequence - Transcriptionist field"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",180,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",181,0)=" S LA7X=$$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,1,1)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",182,0)=" S $P(LA7TSPT,$E(LA7ECH))=$P(LA7X,$E(LA7ECH,4),1,9)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",183,0)=" I LA7DIV S $P(LA7TSPT,$E(LA7ECH),7)=$$FACDNS^LA7VHLU2(LA7DIV,LA7FS,LA7ECH,2)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",184,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",185,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",186,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",187,0)="OBR44 ; Build OBR-44"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",188,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",189,0)=" S (LA7X,LA7Y,LA7Z)="""""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",190,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",191,0)=" I LA7VAL="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",192,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",193,0)=" ; Send NLT result code"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",194,0)=" S LA764=$O(^LAM(""E"",LA7VAL,0))"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",195,0)=" I LA764 S LA7X=$P($G(^LAM(LA764,0)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",196,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",197,0)=" ; If suffixed and not setup then construct from primary and suffix code."
^XTMP("XPDT",7816,"RTN","LA7VOBRA",198,0)=" I LA7X="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",199,0)=" . N LA7642"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",200,0)=" . S LA764=$O(^LAM(""E"",$P(LA7VAL,""."")_"".0000"",0))"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",201,0)=" . I LA764 S LA7X=$$GET1^DIQ(64,LA764_"","",.01,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",202,0)=" . S LA7642=$O(^LAB(64.2,""F"","".""_$P(LA7VAL,""."",2),0))"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",203,0)=" . I LA764,LA7642 S LA7X=LA7X_""~""_$$GET1^DIQ(64.2,LA7642_"","",.01,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",204,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",205,0)=" I LA7X'="""" S LA7X=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",206,0)=" S $P(LA7Z,$E(LA7ECH,1),1)=LA7VAL"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",207,0)=" S $P(LA7Z,$E(LA7ECH,1),2)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",208,0)=" S $P(LA7Z,$E(LA7ECH,1),3)=""99VA64"""
^XTMP("XPDT",7816,"RTN","LA7VOBRA",209,0)=" ;S LA7X=$$GET1^DID(64,"""","""",""PACKAGE REVISION DATA"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",210,0)=" ;S $P(LA7Z,$E(LA7ECH,1),7)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",211,0)=" S LA7Y=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",212,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",213,0)=" ; Check for and build CPT code in primary, move NLT to alternate"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",214,0)=" I LA764="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",215,0)=" I '$D(^LAM(""AD"",LA764,""CPT"")) Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",216,0)=" S LA7X=$O(^LAM(""AD"",LA764,""CPT"",0))"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",217,0)=" S LA781=+$P($G(^LAM(LA764,4,LA7X,0)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",218,0)=" S LA7X=$$CPT^ICPTCOD(LA781,DT,1)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",219,0)=" S LA7Z=$P(LA7X,""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",220,0)=" S $P(LA7Z,$E(LA7ECH,1),2)=$$CHKDATA^LA7VHLU3($P(LA7X,""^"",3),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",221,0)=" S $P(LA7Z,$E(LA7ECH,1),3)=$S($P(LA7X,""^"",5)=""C"":""C4"",$P(LA7X,""^"",5)=""HCPCS"":""HCPCS"",1:""L"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",222,0)=" S LA7Y=LA7Z_$E(LA7ECH,1)_$P(LA7Y,$E(LA7ECH,1),1,3)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",223,0)=" ;S $P(LA7Y,$E(LA7ECH,1),8)=$P(LA7Y,$E(LA7ECH,1),7)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",224,0)=" ;S $P(LA7Y,$E(LA7ECH,1),7)=$P(LA7X,""^"",6)"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",225,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRA",226,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRB")="0^30^B12807459^n/a"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",1,0)="LA7VOBRB ;DALOI/JMC - LAB OBR segment builder (cont'd);Jan 17, 2008"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",4,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",7,0)="OBR15 ; Build OBR-15 sequence - specimen source"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",9,0)=" S LA764061=0"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",10,0)=" S LA7COMP=0 ; specify subcomponent position - primary/alternate"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",11,0)=" S LA7Y="""",LA7SNM=$G(LA7SNM)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",12,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",13,0)=" ; Get entry in #64.061 and SNOMED code for this Topography file #61 entry."
^XTMP("XPDT",7816,"RTN","LA7VOBRB",14,0)=" I LA761>0 D"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",15,0)=" . S LA761(0)=$G(^LAB(61,LA761,0)),LA764061=$P(LA761(0),""^"",9)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",16,0)=" . S $P(LA7Y,$E(LA7ECH,4),9)=$$CHKDATA^LA7VHLU3($P(LA761(0),""^""),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",17,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",18,0)=" ; If no specimen code then default to HL7 0070 entry ""XXX"""
^XTMP("XPDT",7816,"RTN","LA7VOBRB",19,0)=" I LA764061<1 D"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",20,0)=" . N LA7SCR"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",21,0)=" . S LA7SCR=""I $P(^LAB(64.061,Y,0),U,5)=""""0070"""",$P(^LAB(64.061,Y,0),U,7)=""""S"""""""
^XTMP("XPDT",7816,"RTN","LA7VOBRB",22,0)=" . S LA764061=$$FIND1^DIC(64.061,,""X"",""XXX"",""D"",LA7SCR,""LA7ERR"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",23,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",24,0)=" I LA764061 D GETS^DIQ(64.061,LA764061_"","","".01;1;2;3;5"","""",""LA7Z"",""LA7ERR"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",25,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",26,0)=" ; Send non-standard local code as primary"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",27,0)=" I $P(LA7ALT,""^"")'=""""!($P(LA7ALT,""^"",2)'="""") D"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",28,0)=" . S LA7X=$$CHKDATA^LA7VHLU3($P(LA7ALT,""^""),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",29,0)=" . S $P(LA7Y,$E(LA7ECH,4),1)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",30,0)=" . S LA7X=$$CHKDATA^LA7VHLU3($P(LA7ALT,""^"",2),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",31,0)=" . S $P(LA7Y,$E(LA7ECH,4),2)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",32,0)=" . S $P(LA7Y,$E(LA7ECH,4),3)=$P(LA7ALT,""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",33,0)=" . S LA7COMP=LA7COMP+3"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",34,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",35,0)=" ; Send HL7 Table 0070 coding as primary code"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",36,0)=" I 'LA7SNM,LA764061,LA7Z(64.061,LA764061_"","",2)'="""",LA7COMP<6 D"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",37,0)=" . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_"","",2),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",38,0)=" . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",39,0)=" . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_"","",.01),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",40,0)=" . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",41,0)=" . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)=""HL7""_LA7Z(64.061,LA764061_"","",5)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",42,0)=" . S LA7COMP=LA7COMP+3"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",43,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",44,0)=" ; Send SNOMED as alternate code"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",45,0)=" I LA761,$P(LA761(0),""^"",2)'="""",LA7COMP<6 D"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",46,0)=" . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=""T-""_$P(LA761(0),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",47,0)=" . S LA7X=$$CHKDATA^LA7VHLU3($P(LA761(0),""^""),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",48,0)=" . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",49,0)=" . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)=""SNM"""
^XTMP("XPDT",7816,"RTN","LA7VOBRB",50,0)=" . S $P(LA7Y,$E(LA7ECH,4),$S(LA7COMP<3:7,1:8))=""1974"""
^XTMP("XPDT",7816,"RTN","LA7VOBRB",51,0)=" . S LA7COMP=LA7COMP+3"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",52,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",53,0)=" ; If VA code and not HL7 and/or LOINC"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",54,0)=" I LA764061,LA7Z(64.061,LA764061_"","",3)'="""",LA7COMP<6 D"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",55,0)=" . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_"","",3),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",56,0)=" . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",57,0)=" . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_"","",.01),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",58,0)=" . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",59,0)=" . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)=""99VA64.061"""
^XTMP("XPDT",7816,"RTN","LA7VOBRB",60,0)=" . S $P(LA7Y,$E(LA7ECH,4),$S(LA7COMP<4:7,1:8))=""5.2"""
^XTMP("XPDT",7816,"RTN","LA7VOBRB",61,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",62,0)=" ; LA7ALT should contain ""CONTROL"" in 4th piece if from file #62.3"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",63,0)=" I $P(LA7ALT,""^"",4)'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",64,0)=" . N LA7TXT"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",65,0)=" . S LA7TXT=$$CHKDATA^LA7VHLU3($P(LA7ALT,""^"",4),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",66,0)=" . S $P(LA7Y,$E(LA7ECH,1),3)=LA7TXT"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",68,0)=" ; Get entry in #62 for this collection sample entry."
^XTMP("XPDT",7816,"RTN","LA7VOBRB",69,0)=" I LA762,$P(LA7ALT,""^"",5)="""",$P(LA7ALT,""^"",6)="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",70,0)=" . S LA7X=$$GET1^DIQ(62,LA762_"","",.01,"""",""LA7ERR"")"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",71,0)=" . S LA7X=$$TRIM^XLFSTR(LA7X,""LR"","" "")"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",72,0)=" . S LA7X=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",73,0)=" . S LA7X=LA762_$E(LA7ECH,4)_LA7X_$E(LA7ECH,4)_""99VA62"""
^XTMP("XPDT",7816,"RTN","LA7VOBRB",74,0)=" . S $P(LA7Y,$E(LA7ECH,1),4)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",75,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",76,0)=" ; Send collection sample code for DoD."
^XTMP("XPDT",7816,"RTN","LA7VOBRB",77,0)=" I $P(LA7ALT,""^"",5)'=""""!($P(LA7ALT,""^"",6)'="""") D"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",78,0)=" . S X=$$CHKDATA^LA7VHLU3($P(LA7ALT,""^"",5),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",79,0)=" . S Y=$$CHKDATA^LA7VHLU3($P(LA7ALT,""^"",6),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",80,0)=" . S LA7X=X_$E(LA7ECH,4)_Y_$E(LA7ECH,4)_$P(LA7ALT,""^"",7)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",81,0)=" . S $P(LA7Y,$E(LA7ECH,1),4)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",82,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",83,0)=" ; Send specimen shipping condition - collection method"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",84,0)=" I $G(LA7CM) D"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",85,0)=" . S X=$$GET1^DIQ(62.93,LA7CM_"","",.01)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",86,0)=" . I X'="""" S X=$$CHKDATA^LA7VHLU3(X,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",87,0)=" . S Y=$$GET1^DIQ(62.93,LA7CM_"","",.02)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",88,0)=" . I Y'="""" S Y=$$CHKDATA^LA7VHLU3(Y,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",89,0)=" . S LA7X=Y_$E(LA7ECH,4)_X_$E(LA7ECH,4)_""99VA62.93"""
^XTMP("XPDT",7816,"RTN","LA7VOBRB",90,0)=" . S $P(LA7Y,$E(LA7ECH,1),6)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBRB",91,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX")="0^14^B30185961^B25091305"
^XTMP("XPDT",7816,"RTN","LA7VOBX",1,0)="LA7VOBX ;DALOI/JMC - LAB OBX Segment message builder ;Jan 7, 2008"
^XTMP("XPDT",7816,"RTN","LA7VOBX",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VOBX",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",4,0)=" ; Reference to $$LOSVUID^HDISVAP supported by DBIA #4801"
^XTMP("XPDT",7816,"RTN","LA7VOBX",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",6,0)="OBX(LRDFN,LRSS,LRIDT,LRSB,LA7ARRAY,LA7OBXSN,LA7FS,LA7ECH,LA7NVAF) ; Observation/Result segment for Lab Results."
^XTMP("XPDT",7816,"RTN","LA7VOBX",7,0)=" ; Call with    LRDFN = ien of entry in file #63"
^XTMP("XPDT",7816,"RTN","LA7VOBX",8,0)=" ;               LRSS = file #63 subscript"
^XTMP("XPDT",7816,"RTN","LA7VOBX",9,0)=" ;              LRIDT = inverse date/time of specimen"
^XTMP("XPDT",7816,"RTN","LA7VOBX",10,0)=" ;               LRSB = ien of dataname if ""CH"" subscript or global subscript for others"
^XTMP("XPDT",7816,"RTN","LA7VOBX",11,0)=" ;           LA7ARRAY = array to return OBX segment, pass by reference"
^XTMP("XPDT",7816,"RTN","LA7VOBX",12,0)=" ;           LA7OBXSN = OBX segment sequence number, pass by reference"
^XTMP("XPDT",7816,"RTN","LA7VOBX",13,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",14,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",15,0)=" ;            LA7NVAF = flag indicating type of receiving facility (see NVAF^LA7VHLU2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",16,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",17,0)=" ; Returns LA7OBXSN = current OBX segment sequence number "
^XTMP("XPDT",7816,"RTN","LA7VOBX",18,0)=" ;         LA7ARRAY = array containing OBX segment"
^XTMP("XPDT",7816,"RTN","LA7VOBX",19,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",20,0)=" N LA7OBX,LA7VAL,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBX",21,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",22,0)=" ; No subscript/patient/specimen"
^XTMP("XPDT",7816,"RTN","LA7VOBX",23,0)=" I $G(LRSS)=""""!('$G(LRDFN))!('$G(LRIDT)) Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX",24,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",25,0)=" S LA7NVAF=$G(LA7NVAF)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",26,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",27,0)=" ; ""CH"" subscript"
^XTMP("XPDT",7816,"RTN","LA7VOBX",28,0)=" I LRSS=""CH"" D CH^LA7VOBX1 Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX",29,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",30,0)=" ; ""MI"" subscript"
^XTMP("XPDT",7816,"RTN","LA7VOBX",31,0)=" I LRSS=""MI"" D MI^LA7VOBX3 Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX",32,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",33,0)=" ; ""SP"" subscript"
^XTMP("XPDT",7816,"RTN","LA7VOBX",34,0)=" I LRSS=""SP"" D AP^LA7VOBX2 Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX",35,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",36,0)=" ; ""CY"" subscript"
^XTMP("XPDT",7816,"RTN","LA7VOBX",37,0)=" I LRSS=""CY"" D AP^LA7VOBX2 Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX",38,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",39,0)=" ; ""EM"" subscript"
^XTMP("XPDT",7816,"RTN","LA7VOBX",40,0)=" I LRSS=""EM"" D AP^LA7VOBX2 Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX",41,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",42,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX",43,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",44,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",45,0)="OBX1(LA7OBXSN) ; Build OBX-1 sequence - Set ID (sequence number)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",46,0)=" ; Call with LA7OBXSN = sequence number (pass by reference)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",47,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",48,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",49,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",50,0)=" ; increment sequence number"
^XTMP("XPDT",7816,"RTN","LA7VOBX",51,0)=" S (LA7OBXSN,LA7Y)=$G(LA7OBXSN)+1"
^XTMP("XPDT",7816,"RTN","LA7VOBX",52,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",53,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",54,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",55,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",56,0)="OBX2(LA7FILE,LA7FIELD) ; Build OBX-2 sequence - Value type"
^XTMP("XPDT",7816,"RTN","LA7VOBX",57,0)=" ; Call with   LA7FILE = FileMan DD file/subfield number"
^XTMP("XPDT",7816,"RTN","LA7VOBX",58,0)=" ;            LA7FIELD = Fileman DD field number"
^XTMP("XPDT",7816,"RTN","LA7VOBX",59,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",60,0)=" ; Returns      LA7VAL = value type  (HL7 table 0125)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",61,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",62,0)=" N LA7ERR,LA7TYP,LA7VAL"
^XTMP("XPDT",7816,"RTN","LA7VOBX",63,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",64,0)=" D OBX2^LA7VOBXA"
^XTMP("XPDT",7816,"RTN","LA7VOBX",65,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",66,0)=" Q LA7VAL"
^XTMP("XPDT",7816,"RTN","LA7VOBX",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",68,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",69,0)="OBX3(LA7NLT,LA7953,LA7ALT,LA7FS,LA7ECH,LA7INTYP) ; Build OBX-3 sequence - Observation identifier field"
^XTMP("XPDT",7816,"RTN","LA7VOBX",70,0)=" ; Call with  LA7NLT = NLT code."
^XTMP("XPDT",7816,"RTN","LA7VOBX",71,0)=" ;            LA7953 = LOINC code"
^XTMP("XPDT",7816,"RTN","LA7VOBX",72,0)=" ;            LA7ALT = alternate code - local/non-VA (code^text^system^local code^local text^99VAnn)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",73,0)=" ;             LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",74,0)=" ;            LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",75,0)=" ;          LA7INTYP = type of interface from 62.48"
^XTMP("XPDT",7816,"RTN","LA7VOBX",76,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",77,0)=" N LA764,LA7I,LA7J,LA7LN,LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",78,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",79,0)=" D OBX3^LA7VOBXA"
^XTMP("XPDT",7816,"RTN","LA7VOBX",80,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",81,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",82,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",84,0)="OBX4(LA7VAL,LA7FS,LA7ECH) ; Build OBX-4 sequence - Observation sub-ID"
^XTMP("XPDT",7816,"RTN","LA7VOBX",85,0)=" ; Call with  LA7VAL = value of the observation"
^XTMP("XPDT",7816,"RTN","LA7VOBX",86,0)=" ;             LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",87,0)=" ;            LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",88,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",89,0)=" ; Returns LA7Y = Observation sub-ID checked for escape encoding"
^XTMP("XPDT",7816,"RTN","LA7VOBX",90,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",91,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",92,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",93,0)=" S LA7Y=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",94,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",95,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",97,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",98,0)="OBX5(LA7VAL,LA7OBX2,LA7FS,LA7ECH) ; Build OBX-5 sequence - Observation value"
^XTMP("XPDT",7816,"RTN","LA7VOBX",99,0)=" ; Call with  LA7VAL = value of the observation"
^XTMP("XPDT",7816,"RTN","LA7VOBX",100,0)=" ;           LA7OBX2 = value type"
^XTMP("XPDT",7816,"RTN","LA7VOBX",101,0)=" ;             LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",102,0)=" ;            LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",103,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",104,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",105,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",106,0)=" D OBX5^LA7VOBXA"
^XTMP("XPDT",7816,"RTN","LA7VOBX",107,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",108,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",109,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",111,0)="OBX5M(LA7FN,LA7IENS,LA7FLD,LA7WP,LA7FS,LA7ECH) ; Build OBX-5 sequence - Observation value - multi-line textual result"
^XTMP("XPDT",7816,"RTN","LA7VOBX",112,0)=" ; Call with LA7FN = File number or subfile"
^XTMP("XPDT",7816,"RTN","LA7VOBX",113,0)=" ;         LA7IENS = Standard FileMan IENS indicating internal entry numbers"
^XTMP("XPDT",7816,"RTN","LA7VOBX",114,0)=" ;          LA7FLD = Field number"
^XTMP("XPDT",7816,"RTN","LA7VOBX",115,0)=" ;           LA7WP = array passed by reference to return text"
^XTMP("XPDT",7816,"RTN","LA7VOBX",116,0)=" ;           LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",117,0)=" ;          LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",118,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",119,0)=" ; Returns   LA7WP = subscripted array containing text of results"
^XTMP("XPDT",7816,"RTN","LA7VOBX",120,0)=" ;                   LA7WP(0), LA7WP(1), LA7WP(2),..."
^XTMP("XPDT",7816,"RTN","LA7VOBX",121,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",122,0)=" N LA7ERR,LA7I,LA7J,LA7TYPE,LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",123,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",124,0)=" D OBX5M^LA7VOBXA"
^XTMP("XPDT",7816,"RTN","LA7VOBX",125,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",126,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX",127,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",128,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",129,0)="OBX5R(LA7VAL,LA7OBX2,LA7FS,LA7ECH) ; Build OBX-5 sequence with repetition - Observation value"
^XTMP("XPDT",7816,"RTN","LA7VOBX",130,0)=" ; Call with  LA7VAL = array passed by reference"
^XTMP("XPDT",7816,"RTN","LA7VOBX",131,0)=" ;           LA7OBX2 = value type"
^XTMP("XPDT",7816,"RTN","LA7VOBX",132,0)=" ;             LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",133,0)=" ;            LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",134,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",135,0)=" N LA7I,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",136,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",137,0)=" D OBX5R^LA7VOBXA"
^XTMP("XPDT",7816,"RTN","LA7VOBX",138,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",139,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",140,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",141,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",142,0)="OBX6(LA7VAL,LA764061,LA7FS,LA7ECH,LA7INTYP) ; Build OBX-6 sequence - Units"
^XTMP("XPDT",7816,"RTN","LA7VOBX",143,0)=" ; Call with   LA7VAL = Units if in external format"
^XTMP("XPDT",7816,"RTN","LA7VOBX",144,0)=" ;           LA764061 = ien of units in #64.061"
^XTMP("XPDT",7816,"RTN","LA7VOBX",145,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",146,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",147,0)=" ;           LA7INTYP = type of interface from 62.48"
^XTMP("XPDT",7816,"RTN","LA7VOBX",148,0)=" ; Returns units"
^XTMP("XPDT",7816,"RTN","LA7VOBX",149,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",150,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",151,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",152,0)=" D OBX6^LA7VOBXA"
^XTMP("XPDT",7816,"RTN","LA7VOBX",153,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",154,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",155,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",156,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",157,0)="OBX7(LA7LOW,LA7HIGH,LA7FS,LA7ECH) ; Build OBX-7 sequence - Reference range"
^XTMP("XPDT",7816,"RTN","LA7VOBX",158,0)=" ; Call with  LA7LOW = lower limit"
^XTMP("XPDT",7816,"RTN","LA7VOBX",159,0)=" ;           LA7HIGH = upper limit"
^XTMP("XPDT",7816,"RTN","LA7VOBX",160,0)=" ;             LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",161,0)=" ;            LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",162,0)=" ; Returns reference range"
^XTMP("XPDT",7816,"RTN","LA7VOBX",163,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",164,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",165,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",166,0)=" D OBX7^LA7VOBXA"
^XTMP("XPDT",7816,"RTN","LA7VOBX",167,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",168,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",169,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",170,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",171,0)="OBX8(LA7FLAG) ; Build OBX-8 sequence - Abnormal flags"
^XTMP("XPDT",7816,"RTN","LA7VOBX",172,0)=" ; Call with LA7FLAG = DHCP Lab normalcy flag"
^XTMP("XPDT",7816,"RTN","LA7VOBX",173,0)=" ; Returns abnormal flags based on HL7 table 0078"
^XTMP("XPDT",7816,"RTN","LA7VOBX",174,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",175,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",176,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",177,0)=" S LA7Y=$TR(LA7FLAG,""*"",$E(LA7FLAG,1)) ; abnormal flag"
^XTMP("XPDT",7816,"RTN","LA7VOBX",178,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",179,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",180,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",181,0)="OBX11(LA7FLAG) ; Build OBX-11 sequence - Observation result status"
^XTMP("XPDT",7816,"RTN","LA7VOBX",182,0)=" ; Call with LA7FLAG = DHCP Lab status flag"
^XTMP("XPDT",7816,"RTN","LA7VOBX",183,0)=" ; Returns result status based on HL7 table 0085"
^XTMP("XPDT",7816,"RTN","LA7VOBX",184,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",185,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",186,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",187,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX",188,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",189,0)=" I LA7FLAG=""canc"" S LA7Y=""X"""
^XTMP("XPDT",7816,"RTN","LA7VOBX",190,0)=" I LA7FLAG=""comment"" S LA7Y=""F"""
^XTMP("XPDT",7816,"RTN","LA7VOBX",191,0)=" I LA7FLAG=""pending"" S LA7Y=""I"""
^XTMP("XPDT",7816,"RTN","LA7VOBX",192,0)=" I LA7FLAG=""F"" S LA7Y=""F"""
^XTMP("XPDT",7816,"RTN","LA7VOBX",193,0)=" I LA7FLAG=""P"" S LA7Y=""P"""
^XTMP("XPDT",7816,"RTN","LA7VOBX",194,0)=" I LA7FLAG=""A"" S LA7Y=""C"""
^XTMP("XPDT",7816,"RTN","LA7VOBX",195,0)=" I LA7FLAG=""C"" S LA7Y=""C"""
^XTMP("XPDT",7816,"RTN","LA7VOBX",196,0)=" I LA7FLAG=""W"" S LA7Y=""W"""
^XTMP("XPDT",7816,"RTN","LA7VOBX",197,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",198,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",199,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",200,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",201,0)="OBX13(LA7VAL,LA7SRC,LA7FS,LA7ECH) ; Build OBX-13 sequence - User defined access checks"
^XTMP("XPDT",7816,"RTN","LA7VOBX",202,0)=" ; Call with LA7VAL = access screen to expand"
^XTMP("XPDT",7816,"RTN","LA7VOBX",203,0)=" ;           LA7SRC = source of access screen"
^XTMP("XPDT",7816,"RTN","LA7VOBX",204,0)=" ;            LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",205,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",206,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",207,0)=" ; Returns     LA7Y = access screen text or VUID"
^XTMP("XPDT",7816,"RTN","LA7VOBX",208,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",209,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",210,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX",211,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",212,0)=" ; Expanding antibiotic susceptibility display screen"
^XTMP("XPDT",7816,"RTN","LA7VOBX",213,0)=" ; Send VUID instead of text for this code to HDR"
^XTMP("XPDT",7816,"RTN","LA7VOBX",214,0)=" I $E(LA7SRC,1,3)=""MIS""  D"
^XTMP("XPDT",7816,"RTN","LA7VOBX",215,0)=" . I LA7SRC=""MIS-HDR"",$T(LOSVUID^HDISVAP)'="""" S LA7Y=$$LOSVUID^HDISVAP(LA7VAL) Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX",216,0)=" . S LA7Y=$S(LA7VAL=""A"":""ALWAYS DISPLAY"",LA7VAL=""N"":""NEVER DISPLAY"",LA7VAL=""R"":""RESTRICT DISPLAY"",1:"""")"
^XTMP("XPDT",7816,"RTN","LA7VOBX",217,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VOBX",218,0)=" S LA7Y=$$CHKDATA^LA7VHLU3(LA7Y,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",219,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",220,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",221,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",222,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",223,0)="OBX14(LA7DT) ; Build OBX-14 sequence - date/time of observation"
^XTMP("XPDT",7816,"RTN","LA7VOBX",224,0)=" ; Call with LA7DT = FileMan date/time"
^XTMP("XPDT",7816,"RTN","LA7VOBX",225,0)=" ; Returns OBX-14 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBX",226,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",227,0)=" S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",228,0)=" Q $$FMTHL7^XLFDT(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",229,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",230,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",231,0)="OBX15(LA74,LA7FS,LA7ECH) ; Build OBX-15 sequence - Producer's ID field"
^XTMP("XPDT",7816,"RTN","LA7VOBX",232,0)=" ; Call with   LA74 = ien of institution in file #4"
^XTMP("XPDT",7816,"RTN","LA7VOBX",233,0)=" ;                    if null/undefined then use Kernel Site file."
^XTMP("XPDT",7816,"RTN","LA7VOBX",234,0)=" ;            LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",235,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",236,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",237,0)=" ; Returns facility that performed the testing (ID^text^99VA4^CLIA id^^99VACLIA)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",238,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",239,0)=" N LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",240,0)=" S LA7Y=$$INST^LA7VHLU4(LA74,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",241,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",242,0)=" ; Include CLIA identifier if found."
^XTMP("XPDT",7816,"RTN","LA7VOBX",243,0)=" S LA7X=$$ID^XUAF4(""CLIA"",LA74)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",244,0)=" I LA7X'="""" S $P(LA7Y,$E(LA7ECH),4)=LA7X,$P(LA7Y,$E(LA7ECH),6)=""99VACLIA"""
^XTMP("XPDT",7816,"RTN","LA7VOBX",245,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",246,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",247,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",248,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",249,0)="OBX16(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBX-16 sequence - Responsible observer field"
^XTMP("XPDT",7816,"RTN","LA7VOBX",250,0)=" ; Call with   LA7DUZ = DUZ of verifying user"
^XTMP("XPDT",7816,"RTN","LA7VOBX",251,0)=" ;             LA7DIV = Institution of user"
^XTMP("XPDT",7816,"RTN","LA7VOBX",252,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",253,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",254,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VOBX",255,0)=" ; Returns OBX-16 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBX",256,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",257,0)=" Q $$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,0,1)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",258,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",259,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",260,0)="OBX17(LA7VAL,LA7NLT,LA7FS,LA7ECH) ; Build OBX-17 sequence - Observation method field"
^XTMP("XPDT",7816,"RTN","LA7VOBX",261,0)=" ; Call with   LA7VAL = WKLD SUFFIX CODES #64.2 with leading decimal"
^XTMP("XPDT",7816,"RTN","LA7VOBX",262,0)=" ;             LA7NLT = Result NLT code"
^XTMP("XPDT",7816,"RTN","LA7VOBX",263,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",264,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",265,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VOBX",266,0)=" ; Returns       LA7Y = OBX-17 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBX",267,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",268,0)=" N LA764,LA7X,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBX",269,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",270,0)=" D OBX17^LA7VOBXA"
^XTMP("XPDT",7816,"RTN","LA7VOBX",271,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",272,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",273,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",274,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",275,0)="OBX18(LA7VAL,LA7FS,LA7ECH) ; Build OBX-18 sequence - Equipment entity identifier field"
^XTMP("XPDT",7816,"RTN","LA7VOBX",276,0)=" ; Call with   LA7VAL = Equipment entity identifier"
^XTMP("XPDT",7816,"RTN","LA7VOBX",277,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",278,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",279,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VOBX",280,0)=" ; Returns       LA7X = OBX-18 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBX",281,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",282,0)=" N LA7I,LA7J,LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX",283,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",284,0)=" D OBX18^LA7VOBXA"
^XTMP("XPDT",7816,"RTN","LA7VOBX",285,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",286,0)=" Q LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBX",287,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",288,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",289,0)="OBX19(LA7DT) ; Build OBX-19 sequence - date/time of the analysis"
^XTMP("XPDT",7816,"RTN","LA7VOBX",290,0)=" ; Call with LA7DT = FileMan date/time"
^XTMP("XPDT",7816,"RTN","LA7VOBX",291,0)=" ; Returns OBX-19 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBX",292,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",293,0)=" S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",294,0)=" Q $$FMTHL7^XLFDT(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",295,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",296,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",297,0)="OBX23(LA7FN,LA7DA,LA7FS,LA7ECH) ; Build OBX-23 sequence - Performing organization name"
^XTMP("XPDT",7816,"RTN","LA7VOBX",298,0)=" ; Call with LA7FN = Source File number"
^XTMP("XPDT",7816,"RTN","LA7VOBX",299,0)=" ;                   Presently #4 (INSTITUTION)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",300,0)=" ;           LA7DA = Entry in source file"
^XTMP("XPDT",7816,"RTN","LA7VOBX",301,0)=" ;           LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",302,0)=" ;          LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",303,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VOBX",304,0)=" ; Returns OBX-23 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBX",305,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",306,0)=" Q $$XON^LA7VHLU4(LA7FN,LA7DA,1,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",307,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",308,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",309,0)="OBX24(LA7FN,LA7DA,LA7DT,LA7FS,LA7ECH) ; Build OBX-24 sequence - Performing organization address"
^XTMP("XPDT",7816,"RTN","LA7VOBX",310,0)=" ; Call with LA7FN = Source File number"
^XTMP("XPDT",7816,"RTN","LA7VOBX",311,0)=" ;                   Presently file #2 (PATIENT), #4 (INSTITUTION) or #200 (NEW PERSON)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",312,0)=" ;           LA7DA = Entry in source file"
^XTMP("XPDT",7816,"RTN","LA7VOBX",313,0)=" ;           LA7DT = As of date in FileMan format"
^XTMP("XPDT",7816,"RTN","LA7VOBX",314,0)=" ;           LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",315,0)=" ;          LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",316,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VOBX",317,0)=" ; Returns OBX-24 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBX",318,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",319,0)=" Q $$XAD^LA7VHLU4(LA7FN,LA7DA,LA7DT,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX",320,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",321,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",322,0)="OBX25(LA7DUZ,LA7DIV,LA7FS,LA7ECH) ; Build OBX-25 sequence - Performing organization medical director"
^XTMP("XPDT",7816,"RTN","LA7VOBX",323,0)=" ; Call with   LA7DUZ = DUZ of medical director"
^XTMP("XPDT",7816,"RTN","LA7VOBX",324,0)=" ;             LA7DIV = Institution of user"
^XTMP("XPDT",7816,"RTN","LA7VOBX",325,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VOBX",326,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VOBX",327,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VOBX",328,0)=" ; Returns OBX-25 sequence"
^XTMP("XPDT",7816,"RTN","LA7VOBX",329,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX",330,0)=" Q $$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1")="0^18^B28786998^B15262892"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",1,0)="LA7VOBX1 ;DALOI/JMC - LAB OBX Segment message builder (CH subscript) cont'd ;Oct 13, 2009"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,61,63,64,71,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",4,0)="CH ; Observation/Result segment for ""CH"" subscript results."
^XTMP("XPDT",7816,"RTN","LA7VOBX1",5,0)=" ; Called by LA7VOBX"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",7,0)=" N LA760,LA76304,LA7ALT,LA7DDERR,LA7DIV,LA7I,LA7RS,LA7X,LA7Y,X"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",9,0)=" ; ""CH"" subscript requires a dataname"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",10,0)=" I '$G(LRSB) Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",11,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",12,0)=" ; get result node from LR global."
^XTMP("XPDT",7816,"RTN","LA7VOBX1",13,0)=" S LA76304(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",14,0)=" S LA7RS=$P(LRSB,""^"",2),LRSB=$P(LRSB,""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",15,0)=" S LA7VAL=$G(^LR(LRDFN,LRSS,LRIDT,LRSB))"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",16,0)=" ; If previous results have been corrected then send corrected status"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",17,0)=" I LA7RS="""",$P(LA7VAL,""^"",10)=2 S LA7RS=""C"""
^XTMP("XPDT",7816,"RTN","LA7VOBX1",18,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",19,0)=" ; Check if test is OK to send - (O)utput or (B)oth"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",20,0)=" S LA7X=$P(LA7VAL,""^"",12)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",21,0)=" I LA7X]"""",""BO""'[LA7X Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",22,0)=" I LA7X="""",'$$OKTOSND^LA7VHLU1(LRSS,LRSB,+$P($P(LA7VAL,""^"",3),""!"",7)) Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",23,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",24,0)=" ; If no result NLT or LOINC try to determine from file #60"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",25,0)=" S LA7X=$P(LA7VAL,""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",26,0)=" I $P(LA7X,""!"",2)=""""!($P(LA7X,""!"",3)="""") S $P(LA7VAL,""^"",3)=$$DEFCODE^LA7VHLU5(LRSS,LRSB,LA7X,$P(LA76304(0),""^"",5))"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",27,0)=" ; No result NLT code - log error"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",28,0)=" I $P($P(LA7VAL,""^"",3),""!"",2)="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",29,0)=" . N LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",30,0)=" . S LA7X=""[""_LRSB_""]""_$$GET1^DID(63.04,LRSB,"""",""LABEL"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",31,0)=" . D CREATE^LA7LOG(36)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",32,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",33,0)=" ; something missing - No result."
^XTMP("XPDT",7816,"RTN","LA7VOBX1",34,0)=" I $P(LA7VAL,""^"")="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",35,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",36,0)=" ; Check for missing units/reference ranges"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",37,0)=" D CHECK"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",38,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",39,0)=" ; Initialize OBX segment"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",40,0)=" S LA7OBX(0)=""OBX"""
^XTMP("XPDT",7816,"RTN","LA7VOBX1",41,0)=" S LA7OBX(1)=$$OBX1^LA7VOBX(.LA7OBXSN)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",42,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",43,0)=" ; Value type"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",44,0)=" ; If result is ""cancel"", ""comment"" or ""pending"" then data type is ST - string data"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",45,0)=" S LA7X=$S(""canccommentpending""[$P(LA7VAL,""^""):1,1:0)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",46,0)=" I LA7X,LA7INTYP'=30 S LA7OBX(2)=""ST"""
^XTMP("XPDT",7816,"RTN","LA7VOBX1",47,0)=" E  S LA7OBX(2)=$$OBX2^LA7VOBX(63.04,LRSB)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",48,0)=" I LA7OBX(2)'=""NM"",$P(LA7VAL,""^"")?1(1.N,.N1"".""1.N) S LA7OBX(2)=""NM"""
^XTMP("XPDT",7816,"RTN","LA7VOBX1",49,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",50,0)=" ; Observation identifer"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",51,0)=" ; build alternate code based on dataname from file #63 in case it's needed"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",52,0)=" S LA7X=$P(LA7VAL,""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",53,0)=" S LA7ALT=""CH""_LRSB_""^""_$$GET1^DID(63.04,LRSB,"""",""LABEL"")_""^99VA63"""
^XTMP("XPDT",7816,"RTN","LA7VOBX1",54,0)=" I $P(LA7X,""!"",7) S LA760=$P(LA7X,""!"",7)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",55,0)=" E  S LA760=+$O(^LAB(60,""C"",""CH;""_LRSB_"";1"",0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",56,0)=" I LA760 S $P(LA7ALT,""^"",4,6)=LA760_""^""_$P(^LAB(60,LA760,0),""^"")_""^99VA60"""
^XTMP("XPDT",7816,"RTN","LA7VOBX1",57,0)=" S LA7OBX(3)=$$OBX3^LA7VOBX($P(LA7X,""!"",2),$P(LA7X,""!"",3),LA7ALT,LA7FS,LA7ECH,$G(LA7INTYP))"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",58,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",59,0)=" ; Build sub-id to aid in linking updates to previous transmissions."
^XTMP("XPDT",7816,"RTN","LA7VOBX1",60,0)=" S LA7OBX(4)=$$OBX4^LA7VOBX(""CH""_LRSB,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",61,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",62,0)=" ; Test value"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",63,0)=" ; If DoD and ""canc"" then report ""PL Cancelled"" per Lab Interop ICD."
^XTMP("XPDT",7816,"RTN","LA7VOBX1",64,0)=" S LA7X=$P(LA7VAL,""^"") K LA7DDERR"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",65,0)=" I LA7X'=""canc"",$$GET1^DID(63.04,LRSB,"""",""TYPE"","""",""LA7DDERR"")=""SET"" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",66,0)=" . S LA7X=$$EXTERNAL^DILFD(63.04,LRSB,"""",LA7X)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",67,0)=" . I LA7X="""" S LA7X=$P(LA7VAL,""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",68,0)=" I $G(LA7NVAF)=1,LA7X=""canc"" S LA7X=""PL Cancelled"""
^XTMP("XPDT",7816,"RTN","LA7VOBX1",69,0)=" S LA7OBX(5)=$$OBX5^LA7VOBX(LA7X,LA7OBX(2),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",70,0)=" ; Log exception when data dictionary appears corrupt."
^XTMP("XPDT",7816,"RTN","LA7VOBX1",71,0)=" I $D(LA7DDERR) D CREATE^LA7LOG(121) K LA7DDERR"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",72,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",73,0)=" ; Suppress ""pending"" results when sending to HDR"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",74,0)=" I LA7INTYP=30,$P(LA7VAL,""^"")=""pending"" S LA7OBX(2)="""",LA7OBX(5)="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX1",75,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",76,0)=" ; Units"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",77,0)=" S LA7X=$P(LA7VAL,""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",78,0)=" S LA7OBX(6)=$$OBX6^LA7VOBX($P(LA7X,""!"",7),"""",LA7FS,LA7ECH,$G(LA7INTYP))"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",79,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",80,0)=" ; Reference range - use therapeutic low/high if present."
^XTMP("XPDT",7816,"RTN","LA7VOBX1",81,0)=" K LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",82,0)=" I $P(LA7X,""!"",11)="""",$P(LA7X,""!"",12)="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",83,0)=" . S LA7Y(""LOW"")=$P(LA7X,""!"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",84,0)=" . S LA7Y(""HIGH"")=$P(LA7X,""!"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",85,0)=" E  D"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",86,0)=" . S LA7Y(""LOW"")=$P(LA7X,""!"",11)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",87,0)=" . S LA7Y(""HIGH"")=$P(LA7X,""!"",12)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",88,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",89,0)=" S LA7OBX(7)=$$OBX7^LA7VOBX(LA7Y(""LOW""),LA7Y(""HIGH""),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",90,0)=" K LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",91,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",92,0)=" ; Abnormal flags"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",93,0)=" S LA7OBX(8)=$$OBX8^LA7VOBX($P(LA7VAL,""^"",2))"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",94,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",95,0)=" ; ""P""artial or ""F""inal results"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",96,0)=" S LA7X=$S(""canccommentpending""[$P(LA7VAL,""^""):$P(LA7VAL,""^""),1:""F"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",97,0)=" I LA7RS=""C"" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",98,0)=" . S LA7X=LA7RS"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",99,0)=" . I LA7INTYP=30,$P(LA7VAL,""^"")=""pending"" S LA7X=""W"",LA7OBX(5)="""""""""""""
^XTMP("XPDT",7816,"RTN","LA7VOBX1",100,0)=" S LA7OBX(11)=$$OBX11^LA7VOBX(LA7X)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",101,0)=" I LA7INTYP=30,$P(LA7VAL,""^"")=""canc"",LA7OBX(11)=""X"" S LA7OBX(2)="""",LA7OBX(5)="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX1",102,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",103,0)=" ; Observation date/time - collection date/time per HL7 standard"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",104,0)=" S LA7X=$P(LA76304(0),""^"") S:$P(LA76304(0),""^"",2) LA7X=$P(LA7X,""."")"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",105,0)=" I LA7X S LA7OBX(14)=$$OBX14^LA7VOBX(LA7X)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",106,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",107,0)=" S LA7DIV=$P(LA7VAL,""^"",9)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",108,0)=" I LA7DIV="""" S LA7DIV=$P($G(^LR(LRDFN,LRSS,LRIDT,""RF"")),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",109,0)=" I LA7DIV="""",$$DIV4^XUSER(.LA7DIV,$P(LA7VAL,""^"",4)) S LA7DIV=$O(LA7DIV(0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",111,0)=" ; Facility that performed the testing"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",112,0)=" S LA7OBX(15)=$$OBX15^LA7VOBX(LA7DIV,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",113,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",114,0)=" ; Person that verified the test"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",115,0)=" S LA7OBX(16)=$$OBX16^LA7VOBX($P(LA7VAL,""^"",4),LA7DIV,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",116,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",117,0)=" ; Observation method - workkload suffix (LA7X) and result NLT code (LA7Y)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",118,0)=" S LA7X=$P($P(LA7VAL,""^"",3),""!"",4),LA7Y=$P($P(LA7VAL,""^"",3),""!"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",119,0)=" I LA7X'=""""!(LA7Y="""") S LA7OBX(17)=$$OBX17^LA7VOBX(LA7X,LA7Y,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",120,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",121,0)=" ; Equipment entity identifier"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",122,0)=" I $P(LA7VAL,""^"",11)'="""" S LA7OBX(18)=$$OBX18^LA7VOBX($P(LA7VAL,""^"",11),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",123,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",124,0)=" ; Date/time of the analysis"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",125,0)=" I $P(LA7VAL,""^"",6)'="""" S LA7OBX(19)=$$OBX19^LA7VOBX($P(LA7VAL,""^"",6))"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",126,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",127,0)=" ; Performing organization name/address"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",128,0)=" I LA7DIV'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",129,0)=" . N LA7DT"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",130,0)=" . S LA7OBX(23)=$$OBX23^LA7VOBX(4,LA7DIV,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",131,0)=" . S LA7DT=$S($P(LA7VAL,""^"",6):$P(LA7VAL,""^"",6),$P(LA76304(0),""^"",3):$P(LA76304(0),""^"",3),1:$$NOW^XLFDT)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",132,0)=" . S LA7OBX(24)=$$OBX24^LA7VOBX(4,LA7DIV,LA7DT,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",133,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",134,0)=" D BUILDSEG^LA7VHLU(.LA7OBX,.LA7ARRAY,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",135,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",136,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",137,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",138,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",139,0)="CHECK ; Check for missing units/reference ranges"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",140,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",141,0)=" N LA7I,LA7X,LA7FLAG"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",142,0)=" S LA7X=$P(LA7VAL,""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",143,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",144,0)=" ; If flag (NPC>1) indicates units/ranges are stored but pieces 5-9 are null then use values from file #60"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",145,0)=" ; - some class III software still does not store this info in file #63 when NPC>1"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",146,0)=" S LA7FLAG=0"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",147,0)=" I $G(^LR(LRDFN,LRSS,LRIDT,""NPC""))>1 D"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",148,0)=" . F LA7I=5:1:9 I $P(LA7VAL,""^"",LA7I)'="""" S LA7FLAG=1 Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",149,0)=" I 'LA7FLAG D BUNR"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",150,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",151,0)=" ; Evaluate low/high reference ranges in case M code in these fields."
^XTMP("XPDT",7816,"RTN","LA7VOBX1",152,0)=" S:$G(SEX)="""" SEX=""M"" S:$G(AGE)="""" AGE=99"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",153,0)=" F LA7I=2,3,11,12 I $E($P(LA7X,""!"",LA7I),1,3)=""$S("" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",154,0)=" . S @(""X=""_$P(LA7X,""!"",LA7I))"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",155,0)=" . S $P(LA7X,""!"",LA7I)=X"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",156,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",157,0)=" ; Put units/reference ranges back in variable LA7VAL"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",158,0)=" S $P(LA7VAL,""^"",5)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",159,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",160,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",161,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",162,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",163,0)="BUNR ; Build units/normal ranges from file #60"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",164,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",165,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",166,0)=" S LA7Y=$$REFUNIT^LA7VHLU1(LRSB,$P(LA76304(0),""^"",5))"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",167,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",168,0)=" ; Results missing units, use value from file #60"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",169,0)=" I $P(LA7X,""!"",7)="""" S $P(LA7X,""!"",7)=$P(LA7Y,""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",170,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",171,0)=" ; If results missing reference ranges, use values from file #60."
^XTMP("XPDT",7816,"RTN","LA7VOBX1",172,0)=" I $P(LA7X,""!"",2)="""",$P(LA7X,""!"",3)="""",$P(LA7X,""!"",11)="""",$P(LA7X,""!"",12)="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",173,0)=" . I $P(LA7X,""!"",2)="""",$P(LA7X,""!"",3)="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",174,0)=" . . S $P(LA7X,""!"",2)=$P(LA7Y,""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",175,0)=" . . S $P(LA7X,""!"",3)=$P(LA7Y,""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",176,0)=" . I $P(LA7X,""!"",11)="""",$P(LA7X,""!"",12)="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",177,0)=" . . S $P(LA7X,""!"",11)=$P(LA7Y,""^"",6)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",178,0)=" . . S $P(LA7X,""!"",12)=$P(LA7Y,""^"",7)"
^XTMP("XPDT",7816,"RTN","LA7VOBX1",179,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX2")="0^16^B21393582^B15453740"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",1,0)="LA7VOBX2 ;DALOI/JMC - LAB OBX Segment message builder (AP subscripts) cont'd ;May 15,2007"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",4,0)="AP ; Build OBX segments for resultss that are anatomic/surgical pathology subscripts"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",5,0)=" ; Called by LA7VOBX"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",7,0)=" N LA7953,LA7ACODE,LA7CODE,LA7DIV,LA7IENS,LA7OBX5,LA7OBX5M,LA7SUB,LA7SUBFL,LA7VP,LA7WP,LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",9,0)=" S (LA7953,LA7DIV,LA7VP)="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX2",10,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",11,0)=" ; Surgical pathology subscript"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",12,0)=" I LRSS=""SP"" S LA7SUBFL=63.08"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",13,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",14,0)=" ; Cytology subscript"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",15,0)=" I LRSS=""CY"" S LA7SUBFL=63.09"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",16,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",17,0)=" ; Electron microscopy subscript"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",18,0)=" I LRSS=""EM"" S LA7SUBFL=63.02"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",19,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",20,0)=" S LA7IENS="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX2",21,0)=" F I=3:-1:1 I $P(LRIDT,"","",I) S LRIDT(I)=$P(LRIDT,"","",I),LA7IENS=LA7IENS_LRIDT(I)_"","""
^XTMP("XPDT",7816,"RTN","LA7VOBX2",22,0)=" S LA7IENS=LA7IENS_LRDFN_"","""
^XTMP("XPDT",7816,"RTN","LA7VOBX2",23,0)=" S LRIDT=$P(LRIDT,"","")"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",24,0)=" S LA7SUB(0)=$G(^LR(LRDFN,LRSS,LRIDT,0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",25,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",26,0)=" ; Get default codes"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",27,0)=" S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,"""","""")"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",28,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",29,0)=" ; Initialize OBX segment"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",30,0)=" S LA7OBX(0)=""OBX"""
^XTMP("XPDT",7816,"RTN","LA7VOBX2",31,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",32,0)=" ; Value type"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",33,0)=" S LA7X=LA7SUBFL,LA7Y=LRSB"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",34,0)=" I LRSB=1.2 S LA7X=$S(LRSS=""SP"":63.817,LRSS=""CY"":63.907,LRSS=""EM"":63.207,1:""""),LA7Y=1"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",35,0)=" I LRSB=""10,1.5"" S LA7X=$S(LRSS=""SP"":63.82,LRSS=""CY"":63.982,LRSS=""EM"":63.282,1:""""),LA7Y=.01"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",36,0)=" I LRSB=""10,2"",LRSS=""SP"" S LA7X=63.12,LA7Y=2"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",37,0)=" I LRSB=""10,5"" S LA7X=$S(LRSS=""SP"":63.819,LRSS=""CY"":63.919,LRSS=""EM"":63.219,1:""""),LA7Y=1"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",38,0)=" S LA7OBX(2)=$$OBX2^LA7VOBX(LA7X,LA7Y)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",39,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",40,0)=" ; Observation identifier"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",41,0)=" S LA7OBX(3)=$$OBX3^LA7VOBX($P(LA7CODE,""!"",2),$P(LA7CODE,""!"",3),"""",LA7FS,LA7ECH,$G(LA7INTYP))"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",42,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",43,0)=" ; Observation sub-ID"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",44,0)=" ; Create sub-ID for supplementary reports and special studies"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",45,0)=" D SUBID"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",46,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",47,0)=" ; Build result field"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",48,0)=" I LRSB=.012 D"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",49,0)=" . N LA7I,LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",50,0)=" . S LA7I=0"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",51,0)=" . F  S LA7I=$O(^LR(LRDFN,LRSS,LRIDT,.1,LA7I)) Q:'LA7I  D"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",52,0)=" . . S LA7X=$G(^LR(LRDFN,LRSS,LRIDT,.1,LA7I,0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",53,0)=" . . S LA7Y(LA7I)=$P(LA7X,""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",54,0)=" . . S LA7OBX(2)=""CE"" ; Override DD to conform to HL7 standard"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",55,0)=" . S LA7OBX(5)=$$OBX5R^LA7VOBX(.LA7Y,LA7OBX(2),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",56,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",57,0)=" I LRSB'=.012 D"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",58,0)=" . I $P(LRSB,"","")=10,LRSB'=""10,5"" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",59,0)=" . I LA7NVAF=1 D DOD Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",60,0)=" . I LRSB=1.2 N LRSB S LA7SUBFL=$S(LRSS=""SP"":63.817,LRSS=""CY"":63.907,LRSS=""EM"":63.207,1:""""),LRSB=1"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",61,0)=" . I LRSB=""10,5"" N LRSB S LA7SUBFL=$S(LRSS=""SP"":63.819,LRSS=""CY"":63.919,LRSS=""EM"":63.219,1:""""),LRSB=1"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",62,0)=" . D OBX5M^LA7VOBX(LA7SUBFL,LA7IENS,LRSB,.LA7WP,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",63,0)=" . D BUILDSEG^LA7VHLU(.LA7WP,.LA7OBX5M,"""")"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",64,0)=" . M LA7OBX(5)=LA7OBX5M"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",65,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",66,0)=" I $P(LRSB,"","")=10,LRSB'=""10,5"" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",67,0)=" . N LA7VAL,LA7SUBFL,X"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",68,0)=" . I LRSS=""SP"",LRSB=""10,2"" D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",69,0)=" . . S LA7VAL=$$GET1^DIQ(63.12,LA7IENS,2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",70,0)=" . . S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",71,0)=" . . S LA7OBX(6)=$$OBX6^LA7VOBX(""g"","""",LA7FS,LA7ECH,$G(LA7INTYP))"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",72,0)=" . I LRSB=10 S LA7SUBFL=$S(LRSS=""SP"":63.12,LRSS=""CY"":63.912,LRSS=""EM"":63.212,1:"""")"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",73,0)=" . I LRSB=""10,1.5"" S LA7SUBFL=$S(LRSS=""SP"":63.82,LRSS=""CY"":63.982,LRSS=""EM"":63.282,1:"""")"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",74,0)=" . S LA7VAL=$$GET1^DIQ(LA7SUBFL,LA7IENS,.01)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",75,0)=" . S X=$$GET1^DIQ(LA7SUBFL,LA7IENS,"".01:2"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",76,0)=" . I X'="""" S LA7VAL=$S($E(X,1,2)=""T-"":"""",1:""T-"")_X_""^""_LA7VAL_""^SNM"",LA7OBX(2)=""CE"""
^XTMP("XPDT",7816,"RTN","LA7VOBX2",77,0)=" . S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",78,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",79,0)=" ; Don't build this segment if no results/value to send"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",80,0)=" I $G(LA7OBX(5,0))="""",$G(LA7OBX(5))="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",81,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",82,0)=" ; Build sequence id"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",83,0)=" S LA7OBX(1)=$$OBX1^LA7VOBX(.LA7OBXSN)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",84,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",85,0)=" ; ""P""artial, ""F""inal , ""A""mended results"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",86,0)=" ; If not release date then pending"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",87,0)=" I '$P(LA7SUB(0),""^"",11) S LA7OBX(11)=""P"""
^XTMP("XPDT",7816,"RTN","LA7VOBX2",88,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",89,0)=" ; If release date then check for changes"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",90,0)=" I $P(LA7SUB(0),""^"",11) D"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",91,0)=" . I $P(LA7SUB(0),""^"",15) S LA7OBX(11)=""C"""
^XTMP("XPDT",7816,"RTN","LA7VOBX2",92,0)=" . E  S LA7OBX(11)=""F"""
^XTMP("XPDT",7816,"RTN","LA7VOBX2",93,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",94,0)=" S LA7DIV=$P($G(^LR(LRDFN,LRSS,LRIDT,""RF"")),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",95,0)=" I LA7DIV="""",$P(LA7SUB(0),""^"",13),$$DIV4^XUSER(.LA7DIV,$P(LA7SUB(0),""^"",2)) S LA7DIV=$O(LA7DIV(0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",97,0)=" ; Facility that performed the testing"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",98,0)=" S LA7OBX(15)=$$OBX15^LA7VOBX(LA7DIV,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",99,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",100,0)=" ; Person that verified the test"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",101,0)=" S LA7VP=$P(LA7SUB(0),""^"",13)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",102,0)=" I LA7VP S LA7OBX(16)=$$OBX16^LA7VOBX(LA7VP,LA7DIV,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",103,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",104,0)=" ; Performing organization name/address"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",105,0)=" I LA7DIV'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",106,0)=" . N LA7DT"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",107,0)=" . S LA7OBX(23)=$$OBX23^LA7VOBX(4,LA7DIV,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",108,0)=" . S LA7DT=$S($P(LA7SUB(0),""^"",11):$P(LA7SUB(0),""^"",11),1:$$NOW^XLFDT)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",109,0)=" . S LA7OBX(24)=$$OBX24^LA7VOBX(4,LA7DIV,LA7DT,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",111,0)=" D BUILDSEG^LA7VHLU(.LA7OBX,.LA7ARRAY,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",112,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",113,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",114,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",115,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",116,0)="SUBID ; Build sub-id for ""SP"" subscript"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",117,0)=" ; Used to identify supplementary reports, specimens and related special"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",118,0)=" ; studies performed on thoese specimens."
^XTMP("XPDT",7816,"RTN","LA7VOBX2",119,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",120,0)=" N LA7SUBID"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",121,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",122,0)=" S LA7SUBID="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX2",123,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",124,0)=" ; Sub-id's for supplementary reports"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",125,0)=" I LRSB=1.2 S LA7SUBID=""1.""_$P(LA7IENS,"","")"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",126,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",127,0)=" ; Sub-id's for specimens and special studies"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",128,0)=" I LRSB=10!(LRSB=""10,2"") S LA7SUBID=""10.""_$P(LA7IENS,"","")"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",129,0)=" I LRSB=""10,1.5""!(LRSB=""10,5"") S LA7SUBID=""10.""_$P(LA7IENS,"","",2)_"".""_$P(LA7IENS,"","")"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",130,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",131,0)=" I LA7SUBID'="""" S LA7OBX(4)=$$OBX4^LA7VOBX(LA7SUBID,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",132,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",133,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",134,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",135,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",136,0)="DOD ; Build OBX segment's to special DoD specifications."
^XTMP("XPDT",7816,"RTN","LA7VOBX2",137,0)=" ; Send word-processing fields as series of OBX's for DoD."
^XTMP("XPDT",7816,"RTN","LA7VOBX2",138,0)=" ; DoD cannot handle formatted text (FT) data type."
^XTMP("XPDT",7816,"RTN","LA7VOBX2",139,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",140,0)=" S LA7OBX(2)=""ST"""
^XTMP("XPDT",7816,"RTN","LA7VOBX2",141,0)=" S LA7VAL=$G(^LR(LRDFN,LRSS,$P(LA7IDT,"",""),LA7SB,$P(LA7IDT,"","",2),0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",142,0)=" I LA7VAL="""" S LA7VAL="" """
^XTMP("XPDT",7816,"RTN","LA7VOBX2",143,0)=" S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX2",144,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3")="0^17^B83540167^B33632644"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",1,0)="LA7VOBX3 ;DALOI/JMC - LAB OBX Segment message builder (MI subscripts) cont'd ;Feb 5, 2009"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",4,0)=" ; Reference to ^DD supported by DBIA #999"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",6,0)="MI ; Build OBX segments for results that are microbiology subscript."
^XTMP("XPDT",7816,"RTN","LA7VOBX3",7,0)=" ; Called by LA7VOBX"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",9,0)=" N I,LA761,LA76305,LA7ALT,LA7ALTCS,LA7CODE,LA7DIV,LA7IENS,LA7LOINC,LA7NLT,LA7OBX,LA7ORS,LA7PARNT,LA7SAVID,LA7SUBFL,LA7VAL,LA7VERP"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",10,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",11,0)=" I $P(LRIDT,"","",2) S LRIDT(2)=$P(LRIDT,"","",2),LRIDT(3)=$P(LRIDT,"","",3),LRIDT=$P(LRIDT,"","")"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",12,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",13,0)=" I '$D(^LR(LRDFN,LRSS,LRIDT)) Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",14,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",15,0)=" F I=0,1,5,8,11,16 S LA76305(I)=$G(^LR(LRDFN,LRSS,LRIDT,I))"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",16,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",17,0)=" S (LA7ALT,LA7ALTCS,LA7CODE,LA7ID,LA7LOINC,LA7NLT,LA7ORS,LA7SAVID,LA7SUBFL,LA7VAL,LA7VERP)="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",18,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",19,0)=" ; Specimen topography"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",20,0)=" S LA761=$P(LA76305(0),""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",21,0)=" ; Default codes"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",22,0)=" S LA7CODE=$$DEFCODE^LA7VHLU5(LRSS,LRSB,LA7CODE,LA761)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",23,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",24,0)=" D SEC,GEN"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",25,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",26,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",27,0)="SEC ; Build section specific fields"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",28,0)=" N LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",29,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",30,0)=" ; Urine screen"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",31,0)=" I LRSB=11.57 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",32,0)=" . N LA7ERR"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",33,0)=" . S LA7VERP=$P(LA76305(1),""^"",3),LA7ORS=$P(LA76305(1),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",34,0)=" . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,11.57)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",35,0)=" . S LA7IENS=LRIDT_"",""_LRDFN_"","""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",36,0)=" . S LA7VAL=$$GET1^DIQ(63.05,LA7IENS,11.57,"""",""LA7ERR"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",37,0)=" . S LA7Y=""MI-""_LRSB_""^""_$$GET1^DID(63.05,11.57,"""",""LABEL"")_""^99VA63"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",38,0)=" . S LA7ALT=LA7Y_""^""_LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",39,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",40,0)=" ; Sputum Screen"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",41,0)=" I LRSB=11.58 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",42,0)=" . N LA7ERR"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",43,0)=" . S LA7VERP=$P(LA76305(1),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",44,0)=" . S LA7ORS=$P(LA76305(1),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",45,0)=" . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,11.58)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",46,0)=" . S LA7VAL=$P(^LR(LRDFN,LRSS,LRIDT,1),""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",47,0)=" . S LA7Y=""MI-""_LRSB_""^""_$$GET1^DID(63.05,11.58,"""",""LABEL"")_""^99VA63"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",48,0)=" . S LA7ALT=LA7Y_""^""_LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",49,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",50,0)=" ; Gram stain"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",51,0)=" I LRSB=11.6 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",52,0)=" . N LA7ERR"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",53,0)=" . S LA7VERP=$P(LA76305(1),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",54,0)=" . S LA7ORS=$P(LA76305(1),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",55,0)=" . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,11.6)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",56,0)=" . S LA7IENS=LRIDT(2)_"",""_LRIDT_"",""_LRDFN_"","""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",57,0)=" . S LA7VAL=$$GET1^DIQ(63.29,LA7IENS,.01,"""",""LA7ERR"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",58,0)=" . S LA7Y=""MI-""_LRSB_""^""_$$GET1^DID(63.29,.01,"""",""LABEL"")_""^99VA63"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",59,0)=" . S LA7ALT=LA7Y_""^""_LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",60,0)=" . ; Setup DoD special coding system"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",61,0)=" . I LA7NVAF=1,$P(LA7CODE,""!"",2) S LA7ALTCS=""99VA64MG"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",62,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",63,0)=" ; Micro organism"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",64,0)=" I $P(LRSB,"","")=12 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",65,0)=" . S LA7VERP=$P(LA76305(1),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",66,0)=" . S LA7ORS=$P(LA76305(1),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",67,0)=" . S LA7SUBFL=63.3"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",68,0)=" . ; Working on colony count"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",69,0)=" . I $P(LRSB,"","",2)=1 D CC Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",70,0)=" . ; Working on organism"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",71,0)=" . I $G(LRIDT(3))="""" D ORG Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",72,0)=" . ; Working on susceptibilities"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",73,0)=" . I $P(LA76305(1),""^"",4) S LA7VERP=$P(LA76305(1),""^"",4)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",74,0)=" . I $P(LRSB,"","",2)<3 D MIC Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",75,0)=" . I $P(LRSB,"","",2)=3 D MICA Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",76,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VOBX3",77,0)=" ; Parasite organism"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",78,0)=" I $P(LRSB,"","")=16 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",79,0)=" . S LA7ORS=$P(LA76305(5),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",80,0)=" . S LA7VERP=$P(LA76305(5),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",81,0)=" . ; Working on organism"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",82,0)=" . S LA7SUBFL=63.34 D ORG"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",84,0)=" ; Mycology organism"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",85,0)=" I $P(LRSB,"","")=20 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",86,0)=" . S LA7ORS=$P(LA76305(8),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",87,0)=" . S LA7VERP=$P(LA76305(8),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",88,0)=" . S LA7SUBFL=63.37"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",89,0)=" . ; Working on colony count"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",90,0)=" . I $P(LRSB,"","",2)=1 D CC Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",91,0)=" . ; Working on organism"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",92,0)=" . D ORG"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",93,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",94,0)=" ; Acid Fast stain"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",95,0)=" I LRSB=24 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",96,0)=" . N LA7ERR"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",97,0)=" . S LA7VERP=$P(LA76305(11),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",98,0)=" . S LA7ORS=$P(LA76305(11),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",99,0)=" . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,24)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",100,0)=" . S LA7IENS=LRIDT_"",""_LRDFN_"","""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",101,0)=" . S LA7VAL=$$GET1^DIQ(63.05,LA7IENS,24,"""",""LA7ERR"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",102,0)=" . S LA7Y=""MI-""_LRSB_""^""_$$GET1^DID(63.05,24,"""",""LABEL"")_""^99VA63"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",103,0)=" . S LA7ALT=LA7Y_""^""_LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",104,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",105,0)=" ; Acid Fast stain quantity"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",106,0)=" I LRSB=25 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",107,0)=" . N LA7ERR"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",108,0)=" . S LA7VERP=$P(LA76305(11),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",109,0)=" . S LA7ORS=$P(LA76305(11),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",110,0)=" . S LA7OBX(2)=$$OBX2^LA7VOBX(63.05,25)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",111,0)=" . S LA7IENS=LRIDT_"",""_LRDFN_"","""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",112,0)=" . S LA7VAL=$$GET1^DIQ(63.05,LA7IENS,25,"""",""LA7ERR"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",113,0)=" . S LA7Y=""MI-""_LRSB_""^""_$$GET1^DID(63.05,25,"""",""LABEL"")_""^99VA63"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",114,0)=" . S LA7ALT=LA7Y_""^""_LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",115,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",116,0)=" ; TB organism"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",117,0)=" I $P(LRSB,"","")=26 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",118,0)=" . S LA7ORS=$P(LA76305(11),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",119,0)=" . S LA7VERP=$P(LA76305(11),""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",120,0)=" . S LA7SUBFL=63.39"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",121,0)=" . ; Working on colony count"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",122,0)=" . I $P(LRSB,"","",2)=1 D CC Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",123,0)=" . ; Working on organism"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",124,0)=" . I $G(LRIDT(3))="""" D ORG Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",125,0)=" . ; Working on susceptibilities"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",126,0)=" . D MIC"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",127,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",128,0)=" ; Virology virus"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",129,0)=" I $P(LRSB,"","")=36 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",130,0)=" . S LA7ORS=$P(LA76305(16),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",131,0)=" . S LA7VERP=$P(LA76305(16),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",132,0)=" . ; Working on virus"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",133,0)=" . S LA7SUBFL=63.43"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",134,0)=" . D ORG"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",135,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",136,0)=" ; Antibiotic levels"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",137,0)=" I $P(LRSB,"","")=28 D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",138,0)=" . S LA7VERP=$P(LA76305(1),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",139,0)=" . S LA7ORS=$P(LA76305(1),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",140,0)=" . S LA7SUBFL=63.42"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",141,0)=" . S LA7OBX(2)=""SN"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",142,0)=" . S LA7X=$G(^LR(LRDFN,LRSS,LRIDT,14,LRIDT(2),0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",143,0)=" . S $P(LA7CODE,""!"",2)=""93978.0000"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",144,0)=" . S $P(LA7CODE,""!"",3)=$S($P(LA7X,""^"",2)=""P"":44433,$P(LA7X,""^"",2)=""T"":44434,1:23816)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",145,0)=" . S LA7VAL=$P(LA7X,""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",146,0)=" . S LA7Y=""MI-""_$P(LRSB,"","")_""-""_$P(LRSB,"","",2)_""^""_$P(LA7X,""^"")_""^99VA63"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",147,0)=" . S LA7ALT=LA7Y_""^""_LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",148,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",149,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",150,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",151,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",152,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",153,0)="CC ; Organism's Colony count"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",154,0)=" ; If ""CFU/ml"" found then move units to OBX-6 (Units)."
^XTMP("XPDT",7816,"RTN","LA7VOBX3",155,0)=" N LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",156,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",157,0)=" S LA7ID=$P(LRSB,"","")_""-""_LRIDT(2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",158,0)=" S LA7IENS=LRIDT(2)_"",""_LRIDT_"",""_LRDFN_"","""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",159,0)=" S LA7OBX(2)=$$OBX2^LA7VOBX(LA7SUBFL,1)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",160,0)=" S LA7VAL=$$GET1^DIQ(LA7SUBFL,LA7IENS,1)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",161,0)=" S LA7X=$$UP^XLFSTR(LA7VAL)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",162,0)=" I LA7X[""CFU/ML"" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",163,0)=" . S LA7OBX(6)=$$OBX6^LA7VOBX(""CFU/ml"","""",LA7FS,LA7ECH,$G(LA7INTYP))"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",164,0)=" . S LA7X(""CFU/ml"")="""",LA7X(""CFU/ML"")="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",165,0)=" . S LA7VAL=$$REPLACE^XLFSTR(LA7VAL,.LA7X)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",166,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",167,0)=" S LA7Y=""MI-""_$P(LRSB,"","")_""-1^""_$$GET1^DID(LA7SUBFL,1,"""",""LABEL"")_""^99VA63"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",168,0)=" S LA7ALT=LA7Y_""^""_LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",169,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",170,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",171,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",172,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",173,0)="ORG ; Organism"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",174,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",175,0)=" N LA7X,LA7Y,X"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",176,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",177,0)=" S LA7ID=LRSB_""-""_LRIDT(2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",178,0)=" S LA7OBX(2)=$$OBX2^LA7VOBX(LA7SUBFL,.01)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",179,0)=" S LA7IENS=LRIDT(2)_"",""_LRIDT_"",""_LRDFN_"","""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",180,0)=" S LA7VAL="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",181,0)=" S LA7X=$$GET1^DIQ(LA7SUBFL,LA7IENS,.01,""I""),LA7X(.01)=$$GET1^DIQ(LA7SUBFL,LA7IENS,.01)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",182,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",183,0)=" ; Check for SNOMED coding/local coding as alternate"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",184,0)=" S X=$$GET1^DIQ(LA7SUBFL,LA7IENS,"".01:2"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",185,0)=" I X'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",186,0)=" . S LA7VAL=""E-""_X_""^""_LA7X(.01)_""^SNM"",$P(LA7VAL,""^"",4,6)=LA7X_""^""_LA7X(.01)_""^99VA61.2"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",187,0)=" . I $G(LA7NVAF)'=1 S LA7OBX(2)=""CWE"",$P(LA7VAL,""^"",7,8)=""1974^5.2"",$P(LA7VAL,""^"",9)=LA7X(.01)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",188,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",189,0)=" ; If no SNOMED then use local coding as primary"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",190,0)=" I LA7VAL="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",191,0)=" . S LA7VAL=LA7X_""^""_LA7X(.01)_""^99VA61.2"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",192,0)=" . I $G(LA7NVAF)'=1 S LA7OBX(2)=""CWE"",$P(LA7VAL,""^"",7)=""5.2"",$P(LA7VAL,""^"",9)=LA7X(.01)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",193,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",194,0)=" S LA7Y=""MI-""_$P(LRSB,"","")_""-.01^""_$$GET1^DID(LA7SUBFL,.01,"""",""LABEL"")_""^99VA63"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",195,0)=" S LA7ALT=LA7Y_""^""_LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",196,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",197,0)=" S LA7OBX(8)=$$OBX8^LA7VOBX(""A"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",198,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",199,0)=" ; Set flag to save sub-id for parent-child relationship"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",200,0)=" S LA7SAVID=1"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",201,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",202,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",203,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",204,0)="MIC ; Organism's susceptibilities"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",205,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",206,0)=" N LA7IENS,LA7SUB"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",207,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",208,0)=" ; Bact or TB organism"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",209,0)=" S LA7SUB=$S($P(LRSB,"","")=12:3,1:12)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",210,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",211,0)=" S LA7OBX(2)=$$OBX2^LA7VOBX(62.06,.01)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",212,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",213,0)=" ; Determine local code for antibiotic if not mapped to NLT or in file #62.06"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",214,0)=" ;  - Use file #62.06 entry if available otherwise generate from drug node field in file #63"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",215,0)=" ;    also used to convey local display name in 9th component"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",216,0)=" S LA7X="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",217,0)=" I $P(LRSB,"","")=12 D"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",218,0)=" . S LA7X=$O(^LAB(62.06,""AD"",$P(LRSB,"","",2),0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",219,0)=" . I LA7X S LA7ALT=LA7X_""^""_$$GET1^DIQ(62.06,LA7X_"","",.01)_""^99VA62.06"",LA7ALT=LA7ALT_""^""_LA7ALT"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",220,0)=" I LA7ALT="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",221,0)=" . S LA7X=$P(LRSB,"","",2),LA7Y=$O(^DD(LA7SUBFL,""GL"",LA7X,1,0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",222,0)=" . I LA7Y<1 Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",223,0)=" . S LA7ALT=""MIAB""_$P(LRSB,"","")_""-""_$P(LRSB,"","",2)_""^""_$$GET1^DID(LA7SUBFL,LA7Y,"""",""LABEL"")_""^99VA63"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",224,0)=" . S LA7ALT=LA7ALT_""^""_LA7ALT"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",225,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",226,0)=" S LA7X=$G(^LR(LRDFN,""MI"",LRIDT,LA7SUB,LRIDT(2),LRIDT(3)))"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",227,0)=" S LA7VAL=$P(LA7X,""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",228,0)=" I LA7VAL'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",229,0)=" . I ""SIR""[$E(LA7VAL) S LA7OBX(8)=$$OBX8^LA7VOBX($E(LA7VAL)) Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",230,0)=" . I ""SIR""[$E($P(LA7X,""^"",2)) S LA7OBX(8)=$$OBX8^LA7VOBX($E($P(LA7X,""^"",2))) Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",231,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",232,0)=" ; Determine access screen for this susceptibility"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",233,0)=" I $P(LA7X,""^"",3)="""" S $P(LA7X,""^"",3)=""A"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",234,0)=" S LA7OBX(13)=$$OBX13^LA7VOBX($P(LA7X,""^"",3),$S($G(LA7INTYP)=30:""MIS-HDR"",1:""MIS""),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",235,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",236,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",237,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",238,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",239,0)="MICA ;  Bacteria organism's susceptibilities - free text"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",240,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",241,0)=" N LA7SUB,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",242,0)=" S LA7OBX(2)=""NM"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",243,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",244,0)=" ; Bact organism"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",245,0)=" S LA7SUB=3"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",246,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",247,0)=" ; Determine local code for free text antibiotic also used to convey local display name in 9th component"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",248,0)=" S LA7X=$G(^LR(LRDFN,""MI"",LRIDT,LA7SUB,LRIDT(2),3,LRIDT(3),0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",249,0)=" S LA7ALT=""MIAB""_$P(LRSB,"","")_""-""_$P(LRSB,"","",2)_""-""_$P(LRSB,"","",3)_""^""_$P(LA7X,""^"")_$S($P(LRSB,"","",3)=1:"" MIC"",1:"" MBC"")_""^99VA63"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",250,0)=" S LA7ALT=LA7ALT_""^""_LA7ALT"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",251,0)=" S $P(LA7CODE,""!"",2)=""87565.0000"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",252,0)=" S $P(LA7CODE,""!"",3)=$S($P(LRSB,"","",3)=1:21070,1:23658)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",253,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",254,0)=" S LA7VAL=$P(LA7X,""^"",$S($P(LRSB,"","",3)=1:2,1:3))"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",255,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",256,0)=" S LA7OBX(6)=""UG/ML"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",257,0)=" S LA7OBX(8)="""""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",258,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",259,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",260,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",261,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",262,0)="GEN ; Fields common to all MI OBX segments."
^XTMP("XPDT",7816,"RTN","LA7VOBX3",263,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",264,0)=" ; Initialize OBX segment"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",265,0)=" S LA7OBX(0)=""OBX"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",266,0)=" S LA7OBX(1)=$$OBX1^LA7VOBX(.LA7OBXSN)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",267,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",268,0)=" S LA7OBX(3)=$$OBX3^LA7VOBX($P(LA7CODE,""!"",2),$P(LA7CODE,""!"",3),LA7ALT,LA7FS,LA7ECH,$G(LA7INTYP))"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",269,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",270,0)=" ; Change normal coding system for DoD special"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",271,0)=" I LA7NVAF=1,LA7ALTCS'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",272,0)=" . F I=3,6 I $P(LA7OBX(3),$E(LA7ECH,1),I)=""99VA64"" S $P(LA7OBX(3),$E(LA7ECH,1),I)=LA7ALTCS Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",273,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",274,0)=" ; Test value"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",275,0)=" S LA7OBX(5)=$$OBX5^LA7VOBX(LA7VAL,LA7OBX(2),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",276,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",277,0)=" ; Set sub-id and save for constructing parents"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",278,0)=" I LA7ID'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",279,0)=" . S LA7OBX(4)=$$OBX4^LA7VOBX(LA7ID,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",280,0)=" . I LA7SAVID D"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",281,0)=" . . F I=1,2 S LA7ID(LA7ID,I)=LA7OBX(I+2)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",282,0)=" . . I $G(HL(""VER""))=""2.2"" S LA7ID(LA7ID,3)=LA7OBX(5) Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",283,0)=" . . F I=2,4 I $P(LA7OBX(5),$E(LA7ECH,1),I)'="""" S LA7ID(LA7ID,3)=$P(LA7OBX(5),$E(LA7ECH,1),I) Q"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",284,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",285,0)=" ; Order result status - ""P""artial, ""F""inal , ""A""mended results"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",286,0)=" ; If no status from individual components then use status from zeroth node."
^XTMP("XPDT",7816,"RTN","LA7VOBX3",287,0)=" ; If no release date then pending else final"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",288,0)=" ; If amended, overrides all other status"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",289,0)=" I LA7ORS="""" S LA7ORS=$S('$P(LA76305(0),""^"",3):""P"",1:""F"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",290,0)=" I $P(LA76305(0),""^"",9) S LA7ORS=""A"""
^XTMP("XPDT",7816,"RTN","LA7VOBX3",291,0)=" S LA7OBX(11)=$$OBX11^LA7VOBX(LA7ORS)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",292,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",293,0)=" S LA7DIV=$P($G(^LR(LRDFN,LRSS,LRIDT,""RF"")),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",294,0)=" I LA7DIV="""",$$DIV4^XUSER(.LA7DIV,$P(LA76305(0),""^"",4)) S LA7DIV=$O(LA7DIV(0))"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",295,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",296,0)=" ; Observation date/time - collection date/time per HL7 standard"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",297,0)=" I $P(LA76305(0),""^"") S LA7OBX(14)=$$OBX14^LA7VOBX($P(LA76305(0),""^""))"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",298,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",299,0)=" ; Facility that performed the testing"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",300,0)=" S LA7OBX(15)=$$OBX15^LA7VOBX(LA7DIV,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",301,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",302,0)=" ; Person that verified the test"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",303,0)=" I $P(LA76305(0),""^"",4) S LA7VERP=$P(LA76305(0),""^"",4)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",304,0)=" I LA7VERP S LA7OBX(16)=$$OBX16^LA7VOBX(LA7VERP,LA7DIV,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",305,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",306,0)=" ; Performing organization name/address"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",307,0)=" I LA7DIV'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",308,0)=" . N LA7DT"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",309,0)=" . S LA7OBX(23)=$$OBX23^LA7VOBX(4,LA7DIV,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",310,0)=" . S LA7DT=$S($P(LA76305(0),""^"",3):$P(LA76305(0),""^"",3),1:$$NOW^XLFDT)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",311,0)=" . S LA7OBX(24)=$$OBX24^LA7VOBX(4,LA7DIV,LA7DT,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",312,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",313,0)=" D BUILDSEG^LA7VHLU(.LA7OBX,.LA7ARRAY,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",314,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBX3",315,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA")="0^15^B53603815^B31676928"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",1,0)="LA7VOBXA ;DALOI/JMC - LAB OBX Segment message builder (cont'd) ;Sep 18, 2008"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,70,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",4,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",6,0)="OBX2 ; Build OBX-2 sequence - Value type"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",7,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",8,0)=" ; default value - string data"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",9,0)=" S LA7VAL=""ST"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",10,0)=" S LA7TYP="""",LA7FILE=$G(LA7FILE),LA7FIELD=$G(LA7FIELD)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",11,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",12,0)=" I LA7FILE,LA7FIELD S LA7TYP=$$GET1^DID(LA7FILE,LA7FIELD,"""",""TYPE"","""",""LA7ERR"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",13,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",14,0)=" I LA7TYP=""DATE/TIME"" S LA7VAL=""TS"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",15,0)=" I LA7TYP=""FREE TEXT"" S LA7VAL=""ST"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",16,0)=" I LA7TYP=""WORD-PROCESSING"" S LA7VAL=""FT"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",17,0)=" I LA7TYP=""NUMERIC"" S LA7VAL=""NM"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",18,0)=" I LA7TYP=""SET"" S LA7VAL=""ST"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",19,0)=" I LA7TYP=""POINTER"" S LA7VAL=""ST"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",20,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",21,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",22,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",23,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",24,0)="OBX3 ; Build OBX-3 sequence - Observation identifier field"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",25,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",26,0)=" ; Initialize variables "
^XTMP("XPDT",7816,"RTN","LA7VOBXA",27,0)=" S LA7J=1,LA7Y="""",LA7INTYP=$G(LA7INTYP)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",28,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",29,0)=" ; Build sequence using LOINC codes. LOINC code/code name/""LN"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",30,0)=" ; VA VUID in 2nd triplet when sending to VA HDR. Use VA Display name (field #82) for VUID test name"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",31,0)=" I LA7953'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",32,0)=" . N LA7IENS,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",33,0)=" . S LA7953=$P(LA7953,""-""),LA7IENS=LA7953_"","""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",34,0)=" . D GETS^DIQ(95.3,LA7IENS,"".01;80;99.99"",""E"",""LA7X"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",35,0)=" . ; Invalid code???"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",36,0)=" . I $G(LA7X(95.3,LA7IENS,.01,""E""))="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",37,0)=" . S LA7Z=LA7X(95.3,LA7IENS,.01,""E"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",38,0)=" . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",39,0)=" . S $P(LA7Y,$E(LA7ECH,1),LA7J)=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",40,0)=" . S LA7Z=$G(LA7X(95.3,LA7IENS,80,""E""))"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",41,0)=" . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",42,0)=" . S $P(LA7Y,$E(LA7ECH,1),LA7J+1)=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",43,0)=" . S $P(LA7Y,$E(LA7ECH,1),LA7J+2)=""LN"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",44,0)=" . S LA7J=4"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",45,0)=" . I LA7INTYP=30,$G(LA7X(95.3,LA7IENS,99.99,""E""))'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",46,0)=" . . S $P(LA7Y,$E(LA7ECH,1),LA7J)=LA7X(95.3,LA7IENS,99.99,""E"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",47,0)=" . . I $$VFIELD^DILFD(95.3,82) D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",48,0)=" . . . S LA7Z=$$GET1^DIQ(95.3,LA7IENS,82)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",49,0)=" . . . I LA7Z'="""" S $P(LA7Y,$E(LA7ECH,1),LA7J+1)=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",50,0)=" . . S $P(LA7Y,$E(LA7ECH,1),LA7J+2)=""99VA95.3"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",51,0)=" . . S LA7J=9"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",52,0)=" . I $G(LA7LNCVR)="""" S LA7LNCVR=$$GET1^DID(95.3,"""","""",""PACKAGE REVISION DATA"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",53,0)=" . I LA7J>1 S $P(LA7Y,$E(LA7ECH,1),7)=LA7LNCVR"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",54,0)=" . I LA7J=9 S $P(LA7Y,$E(LA7ECH,1),8)=LA7LNCVR"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",55,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",56,0)=" ; Build sequence using NLT codes - file #64 NLT code/NLT code name/""99VA64"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",57,0)=" ; If LOINC is primary make NLT alternate, otherwise NLT primary."
^XTMP("XPDT",7816,"RTN","LA7VOBXA",58,0)=" ; Only on non-HDR type interfaces."
^XTMP("XPDT",7816,"RTN","LA7VOBXA",59,0)=" I LA7NLT'="""",LA7INTYP'=30,LA7J<9 D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",60,0)=" . N LA7642,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",61,0)=" . S LA764=$O(^LAM(""E"",LA7NLT,0)),LA7Z="""""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",62,0)=" . I LA764 S LA7Z=$$GET1^DIQ(64,LA764_"","",.01,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",63,0)=" . I LA7Z="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",64,0)=" . . S LA764=$O(^LAM(""E"",$P(LA7NLT,""."")_"".0000"",0))"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",65,0)=" . . I LA764 S LA7Z=$$GET1^DIQ(64,LA764_"","",.01,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",66,0)=" . . S LA7642=$O(^LAB(64.2,""C"","".""_$P(LA7NLT,""."",2),0))"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",67,0)=" . . I LA764,LA7642 S LA7Z=LA7Z_""~""_$$GET1^DIQ(64.2,LA7642_"","",.01,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",68,0)=" . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",69,0)=" . S $P(LA7Y,$E(LA7ECH,1),LA7J)=LA7NLT"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",70,0)=" . S $P(LA7Y,$E(LA7ECH,1),LA7J+1)=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",71,0)=" . S $P(LA7Y,$E(LA7ECH,1),LA7J+2)=""99VA64"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",72,0)=" . S LA7Z=$$GET1^DID(64,"""","""",""PACKAGE REVISION DATA"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",73,0)=" . S $P(LA7Y,$E(LA7ECH,1),$S(LA7J=1:7,1:8))=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",74,0)=" . S LA7J=LA7J+3"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",75,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",76,0)=" ; Non-standard/non-VA code"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",77,0)=" ; If alternate is a non-VA code then use as alternate code."
^XTMP("XPDT",7816,"RTN","LA7VOBXA",78,0)=" I LA7ALT="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",79,0)=" I LA7INTYP'=30,$P(LA7ALT,""^"",3)'=""99VA63"",LA7J>4 S LA7J=4"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",80,0)=" I LA7J<7 D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",81,0)=" . S $P(LA7Y,$E(LA7ECH,1),LA7J)=$$CHKDATA^LA7VHLU3($P(LA7ALT,""^""),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",82,0)=" . S $P(LA7Y,$E(LA7ECH,1),LA7J+1)=$$CHKDATA^LA7VHLU3($P(LA7ALT,""^"",2),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",83,0)=" . S $P(LA7Y,$E(LA7ECH,1),LA7J+2)=$$CHKDATA^LA7VHLU3($P(LA7ALT,""^"",3),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",84,0)=" . I $P(LA7ALT,""^"",3)=""99VA63"" S $P(LA7Y,$E(LA7ECH,1),$S(LA7J=1:7,1:8))=""5.2"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",85,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",86,0)=" ; Put local test name in local text (9th component)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",87,0)=" I $E($P(LA7ALT,""^"",6),1,5)=""99VA6"",$P(LA7ALT,""^"",6)'=""99VA64"" D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",88,0)=" . N I,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",89,0)=" . S LA7Z=$$TRIM^XLFSTR($P(LA7ALT,""^"",5),""LR"","" "")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",90,0)=" . I LA7Z="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",91,0)=" . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",92,0)=" . S $P(LA7Y,$E(LA7ECH,1),9)=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",93,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",94,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",95,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",97,0)="OBX5 ; Build OBX-5 sequence - Observation value"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",98,0)=" ; Removes trailing spaces on string and text results."
^XTMP("XPDT",7816,"RTN","LA7VOBXA",99,0)=" ; Removes leading & trailing spaces on numeric results."
^XTMP("XPDT",7816,"RTN","LA7VOBXA",100,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",101,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",102,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",103,0)=" I $G(LA7OBX2)="""" S LA7OBX2=""ST"" ; default value type"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",104,0)=" I LA7OBX2=""ST""!(LA7OBX2=""TX"") D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",105,0)=" . S LA7VAL=$$TRIM^XLFSTR(LA7VAL,""R"","" "")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",106,0)=" . S LA7Y=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",107,0)=" I LA7OBX2=""NM"" S LA7Y=$$TRIM^XLFSTR(LA7VAL,""RL"","" "")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",108,0)=" I LA7OBX2=""TS"" D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",109,0)=" . S LA7VAL=$$CHKDT^LA7VHLU1(LA7VAL)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",110,0)=" . S LA7Y=$$FMTHL7^XLFDT(LA7VAL)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",111,0)=" I LA7OBX2?1(1""CE"",1""CNE"",1""CWE"") D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",112,0)=" . N LA7I,LA7J,X"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",113,0)=" . S LA7J=$S(LA7OBX2=""CE"":6,1:9)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",114,0)=" . F LA7I=1:1:LA7J I $P(LA7VAL,""^"",LA7I)'="""" S $P(LA7Y,$E(LA7ECH),LA7I)=$$CHKDATA^LA7VHLU3($P(LA7VAL,""^"",LA7I),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",115,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",116,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",117,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",118,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",119,0)="OBX5M ; Build OBX-5 sequence - Observation value - multi-line textual result"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",120,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",121,0)=" K LA7WP"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",122,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",123,0)=" S LA7WP="""""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",124,0)=" S LA7TYPE=$$GET1^DID(LA7FN,LA7FLD,"""",""TYPE"",""LA7ERR(1)"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",125,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",126,0)=" ; Process word-processing type field."
^XTMP("XPDT",7816,"RTN","LA7VOBXA",127,0)=" ; Check and encode data"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",128,0)=" I LA7TYPE=""WORD-PROCESSING"" D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",129,0)=" . N DIWF,DIWL,DIWR,X"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",130,0)=" . S LA7WP=$$GET1^DIQ(LA7FN,LA7IENS,LA7FLD,"""",""LA7WP"",""LA7ERR(2)"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",131,0)=" . K ^UTILITY($J,""W"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",132,0)=" . S DIWL=1,DIWR=245,DIWF="""",LA7I=0"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",133,0)=" . I $$GET1^DID(+$$GET1^DID(LA7FN,LA7FLD,"""",""SPECIFIER"",""LA7ERR(1)""),.01,"""",""SPECIFIER"",""LA7ERR(3)"")[""L"" S DIWF=""N"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",134,0)=" . F  S LA7I=$O(LA7WP(LA7I)) Q:'LA7I  S X=LA7WP(LA7I) D ^DIWP"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",135,0)=" . K LA7WP"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",136,0)=" . S LA7I=0"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",137,0)=" . F  S LA7I=$O(^UTILITY($J,""W"",DIWL,LA7I)) Q:'LA7I  D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",138,0)=" . . S LA7WP(LA7I)=$$CHKDATA^LA7VHLU3(^UTILITY($J,""W"",DIWL,LA7I,0),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",139,0)=" . . I LA7I>1 S LA7WP(LA7I)=$E(LA7ECH,3)_"".br""_$E(LA7ECH,3)_LA7WP(LA7I)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",140,0)=" . K ^UTILITY($J,""W"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",141,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",142,0)=" ; Free text, assumes multiple valued"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",143,0)=" I LA7TYPE=""FREE TEXT"" D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",144,0)=" . D GETS^DIQ(LA7FN,LA7IENS,LA7FLD_""*"","""",""LA7WP"",""LA7ERR"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",145,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",146,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",147,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",148,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",149,0)="OBX5R ; Build OBX-5 sequence with repetition - Observation value"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",150,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",151,0)=" S (LA7I,LA7Y)="""""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",152,0)=" F  S LA7I=$O(LA7VAL(LA7I)) Q:'LA7I  D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",153,0)=" . S LA7Y=LA7Y_$$OBX5^LA7VOBX(LA7VAL(LA7I),LA7OBX2,LA7FS,LA7ECH)_$E(LA7ECH,2)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",154,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",155,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",156,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",157,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",158,0)="OBX6 ; Build OBX-6 sequence - Units"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",159,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",160,0)=" S LA7ECH=$G(LA7ECH),LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",161,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",162,0)=" ; Units - remove leading and trailing spaces"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",163,0)=" ; If HDR interface (LA7INTYP=30) then add coding system (L) to units."
^XTMP("XPDT",7816,"RTN","LA7VOBXA",164,0)=" I $G(LA7VAL)'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",165,0)=" . S LA7Y=$$TRIM^XLFSTR(LA7VAL,""LR"","" "")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",166,0)=" . I $G(LA7INTYP)=30 D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",167,0)=" . . S $P(LA7Y,$E(LA7ECH,1),2)=LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",168,0)=" . . S $P(LA7Y,$E(LA7ECH,1),3)=""L"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",169,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",170,0)=" ; Build sequence using LOINC codes only"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",171,0)=" ; LOINC code/code name/""LN"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",172,0)=" I $G(LA764061) D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",173,0)=" . N LA7IENS,LA7X,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",174,0)=" . S LA7IENS=LA764061_"","""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",175,0)=" . D GETS^DIQ(64.061,LA7IENS,""1;8"",""E"",""LA7X"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",176,0)=" . ; LOINC code"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",177,0)=" . S LA7Z=$G(LA7X(64.061,LA7IENS,1,""E""))"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",178,0)=" . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",179,0)=" . S $P(LA7Y,$E(LA7ECH,1),1)=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",180,0)=" . ; LOINC code name"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",181,0)=" . S LA7Z=$G(LA7X(64.061,LA7IENS,8,""E""))"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",182,0)=" . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",183,0)=" . S $P(LA7Y,$E(LA7ECH,1),2)=LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",184,0)=" . S $P(LA7Y,$E(LA7ECH,1),3)=""LN"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",185,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",186,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",187,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",188,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",189,0)="OBX7 ; Build OBX-7 sequence - Reference range"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",190,0)=" ; Removes leading and trailing quote marks ("""")."
^XTMP("XPDT",7816,"RTN","LA7VOBXA",191,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",192,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",193,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",194,0)=" I $G(LA7LOW)'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",195,0)=" . S LA7LOW=$$TRIM^XLFSTR(LA7LOW,""RL"","""""""")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",196,0)=" . I LA7LOW?1A.E S LA7Y=LA7Y_LA7LOW Q  ; alphabetic value"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",197,0)=" . I $G(LA7HIGH)="""",$E(LA7LOW)'="">"" S LA7Y="">"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",198,0)=" . S LA7Y=LA7Y_LA7LOW"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",199,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",200,0)=" I $G(LA7HIGH)'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",201,0)=" . S LA7HIGH=$$TRIM^XLFSTR(LA7HIGH,""RL"","""""""")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",202,0)=" . I LA7HIGH?1A.E S LA7Y=LA7Y_LA7HIGH Q  ; alphabetic value"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",203,0)=" . I $G(LA7LOW)="""" D  Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",204,0)=" . . I $E(LA7HIGH)'=""<"" S LA7Y=""<"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",205,0)=" . . S LA7Y=LA7Y_LA7HIGH"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",206,0)=" . S LA7Y=LA7Y_""-""_LA7HIGH"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",207,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",208,0)=" S LA7Y=$$CHKDATA^LA7VHLU3(LA7Y,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",209,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",210,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",211,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",212,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",213,0)="OBX17 ; Build OBX-17 sequence - Observation method field"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",214,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",215,0)=" ; method suffix code maybe stored without leading decimal,"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",216,0)=" ;  add ""."" back for lookup, also add trailing space for lookup in x-ref."
^XTMP("XPDT",7816,"RTN","LA7VOBXA",217,0)=" I LA7VAL>1 S LA7VAL="".""_LA7VAL"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",218,0)=" S LA7X=$O(^LAB(64.2,""C"",LA7VAL_"" "",0)),LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",219,0)=" I LA7X D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",220,0)=" . S LA7X(.01)=$P($G(^LAB(64.2,LA7X,0)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",221,0)=" . S LA7X(.01)=$$CHKDATA^LA7VHLU3(LA7X(.01),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",222,0)=" . S LA7Y=LA7VAL_$E(LA7ECH)_LA7X(.01)_$E(LA7ECH)_""99VA64.2"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",223,0)=" . ;S LA7X=$$GET1^DID(64.2,"""","""",""PACKAGE REVISION DATA"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",224,0)=" . ;S $P(LA7Y,$E(LA7ECH,1),7)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",225,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",226,0)=" ; Send NLT result code"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",227,0)=" I LA7NLT'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",228,0)=" . S LA764=$O(^LAM(""E"",LA7NLT,0)),LA7Z="""""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",229,0)=" . I LA764 S LA7X=$P($G(^LAM(LA764,0)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",230,0)=" . S LA7X=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",231,0)=" . S $P(LA7Z,$E(LA7ECH,1),1)=LA7NLT"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",232,0)=" . S $P(LA7Z,$E(LA7ECH,1),2)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",233,0)=" . S $P(LA7Z,$E(LA7ECH,1),3)=""99VA64"""
^XTMP("XPDT",7816,"RTN","LA7VOBXA",234,0)=" . ;S LA7X=$$GET1^DID(64,"""","""",""PACKAGE REVISION DATA"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",235,0)=" . ;S $P(LA7Z,$E(LA7ECH,1),7)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",236,0)=" . I LA7Y'="""" S LA7Y=LA7Y_$E(LA7ECH,2)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",237,0)=" . S LA7Y=LA7Y_LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",238,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",239,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",240,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",241,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",242,0)="OBX18 ; Build OBX-18 sequence - Equipment entity identifier field"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",243,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",244,0)=" S LA7X="""",LA7J=$L(LA7VAL,""!"")"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",245,0)=" F LA7I=1:1:LA7J D"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",246,0)=" . S LA7Y=$P(LA7VAL,""!"",LA7I)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",247,0)=" . I LA7Y="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",248,0)=" . S $P(LA7X,$E(LA7ECH,1),LA7I)=$$CHKDATA^LA7VHLU3(LA7Y,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",249,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VOBXA",250,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORC")="0^20^B18625097^B8007778"
^XTMP("XPDT",7816,"RTN","LA7VORC",1,0)="LA7VORC ;DALOI/JMC - LAB ORC Segment message builder ;Aug 27, 2007"
^XTMP("XPDT",7816,"RTN","LA7VORC",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VORC",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",4,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORC",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",6,0)="ORC1(LA7TYP) ; Build ORC-1 sequence - Order control"
^XTMP("XPDT",7816,"RTN","LA7VORC",7,0)=" ; Call with LA7TYP = order type from table 0119"
^XTMP("XPDT",7816,"RTN","LA7VORC",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",9,0)=" Q LA7TYP"
^XTMP("XPDT",7816,"RTN","LA7VORC",10,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",11,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",12,0)="ORC2(LA7VAL,LA7FS,LA7ECH) ; Build ORC-2 sequence - Placer order number"
^XTMP("XPDT",7816,"RTN","LA7VORC",13,0)=" ; Call with  LA7VAL = accession number/UID"
^XTMP("XPDT",7816,"RTN","LA7VORC",14,0)=" ;            LA7VAL(""NMSP"") = application namespace (optional)"
^XTMP("XPDT",7816,"RTN","LA7VORC",15,0)=" ;            LA7VAL(""SITE"") = placer facility"
^XTMP("XPDT",7816,"RTN","LA7VORC",16,0)=" ;             LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",17,0)=" ;            LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",18,0)=" ;            "
^XTMP("XPDT",7816,"RTN","LA7VORC",19,0)=" N LAXY,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",20,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",21,0)=" S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORC",22,0)=" I $G(LA7VAL(""NMSP""))'="""" S $P(LA7Y,$E(LA7ECH),2)=LA7VAL(""NMSP"")"
^XTMP("XPDT",7816,"RTN","LA7VORC",23,0)=" I $G(LA7VAL(""SITE""))'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VORC",24,0)=" . S LA7X=$$FACDNS^LA7VHLU2(LA7VAL(""SITE""),LA7FS,LA7ECH,1)"
^XTMP("XPDT",7816,"RTN","LA7VORC",25,0)=" . S $P(LA7Y,$E(LA7ECH),3)=$P(LA7X,$E(LA7ECH),2)"
^XTMP("XPDT",7816,"RTN","LA7VORC",26,0)=" . S $P(LA7Y,$E(LA7ECH),4)=$P(LA7X,$E(LA7ECH),3)"
^XTMP("XPDT",7816,"RTN","LA7VORC",27,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",28,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",29,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",30,0)="ORC3(LA7VAL,LA7FS,LA7ECH) ; Build ORC-3 sequence - Filler order number"
^XTMP("XPDT",7816,"RTN","LA7VORC",31,0)=" ; Call with  LA7VAL = accession number/UID"
^XTMP("XPDT",7816,"RTN","LA7VORC",32,0)=" ;            LA7VAL(""NMSP"") = application namespace (optional)"
^XTMP("XPDT",7816,"RTN","LA7VORC",33,0)=" ;            LA7VAL(""SITE"") = placer facility"
^XTMP("XPDT",7816,"RTN","LA7VORC",34,0)=" ;             LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",35,0)=" ;            LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",36,0)=" ;            "
^XTMP("XPDT",7816,"RTN","LA7VORC",37,0)=" N LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",38,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",39,0)=" S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORC",40,0)=" I $G(LA7VAL(""NMSP""))'="""" S $P(LA7Y,$E(LA7ECH),2)=LA7VAL(""NMSP"")"
^XTMP("XPDT",7816,"RTN","LA7VORC",41,0)=" I $G(LA7VAL(""SITE""))'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VORC",42,0)=" . S LA7X=$$FACDNS^LA7VHLU2(LA7VAL(""SITE""),LA7FS,LA7ECH,1)"
^XTMP("XPDT",7816,"RTN","LA7VORC",43,0)=" . S $P(LA7Y,$E(LA7ECH),3)=$P(LA7X,$E(LA7ECH),2)"
^XTMP("XPDT",7816,"RTN","LA7VORC",44,0)=" . S $P(LA7Y,$E(LA7ECH),4)=$P(LA7X,$E(LA7ECH),3)"
^XTMP("XPDT",7816,"RTN","LA7VORC",45,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",46,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",47,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",48,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",49,0)="ORC4(LA7VAL,LA7FS,LA7ECH) ; Build ORC-4 sequence - Placer group number"
^XTMP("XPDT",7816,"RTN","LA7VORC",50,0)=" ; Call with  LA7VAL = LEDI - shipping manifest number"
^XTMP("XPDT",7816,"RTN","LA7VORC",51,0)=" ;             LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",52,0)=" ;            LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",53,0)=" ; Returns ORD-4 sequence"
^XTMP("XPDT",7816,"RTN","LA7VORC",54,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",55,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",56,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",57,0)=" S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORC",58,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",59,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",60,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",61,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",62,0)="ORC5(LA7VAL,LA7FS,LA7ECH) ; Build ORC-5 sequence - Order status"
^XTMP("XPDT",7816,"RTN","LA7VORC",63,0)=" ; Call with  LA7VAL = order status"
^XTMP("XPDT",7816,"RTN","LA7VORC",64,0)=" ;             LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",65,0)=" ;            LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",66,0)=" ; Returns ORC-5 sequence"
^XTMP("XPDT",7816,"RTN","LA7VORC",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",68,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",69,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",70,0)=" I LA7VAL=""CM"" S LA7Y=""CM"""
^XTMP("XPDT",7816,"RTN","LA7VORC",71,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",72,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",73,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",74,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",75,0)="ORC7(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH) ; Build ORC-7 sequence - Quantity/Timing"
^XTMP("XPDT",7816,"RTN","LA7VORC",76,0)=" ; Call with  LA7DUR = collection duration"
^XTMP("XPDT",7816,"RTN","LA7VORC",77,0)=" ;           LA7DURU = duration units (pointer to #64.061)"
^XTMP("XPDT",7816,"RTN","LA7VORC",78,0)=" ;           LA76205 = test urgency"
^XTMP("XPDT",7816,"RTN","LA7VORC",79,0)=" ;             LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",80,0)=" ;            LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",81,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",82,0)=" ; Returns ORC-7 sequence"
^XTMP("XPDT",7816,"RTN","LA7VORC",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",84,0)=" N LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",85,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VORC",86,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",87,0)=" I LA7DUR'="""",LA7DURU D"
^XTMP("XPDT",7816,"RTN","LA7VORC",88,0)=" . S LA7X=$$GET1^DIQ(64.061,LA7DURU_"","",2) ; duration units"
^XTMP("XPDT",7816,"RTN","LA7VORC",89,0)=" . S $P(LA7Y,$E(LA7ECH,1),3)=$$CHKDATA^LA7VHLU3(LA7X_LA7DUR,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORC",90,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",91,0)=" I LA76205 D"
^XTMP("XPDT",7816,"RTN","LA7VORC",92,0)=" . S LA7X=$$GET1^DIQ(64.061,+$$GET1^DIQ(62.05,LA76205_"","",4,""I"")_"","",2) ; Urgency"
^XTMP("XPDT",7816,"RTN","LA7VORC",93,0)=" . S $P(LA7Y,$E(LA7ECH,1),6)=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORC",94,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",95,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",97,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",98,0)="ORC9(LA7DT) ; Build ORC-9 sequence - date/time of transaction"
^XTMP("XPDT",7816,"RTN","LA7VORC",99,0)=" ; Call with LA7DT = order date/time"
^XTMP("XPDT",7816,"RTN","LA7VORC",100,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",101,0)=" ; Returns ORC-9 sequence"
^XTMP("XPDT",7816,"RTN","LA7VORC",102,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",103,0)=" S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VORC",104,0)=" Q $$FMTHL7^XLFDT(LA7DT)"
^XTMP("XPDT",7816,"RTN","LA7VORC",105,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",106,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",107,0)="ORC12(LA7DUZ,LA7DIV,LA7FS,LA7ECH,LA7IDTYP) ; Build ORC-12 sequence - Ordering provider"
^XTMP("XPDT",7816,"RTN","LA7VORC",108,0)=" ; Call with   LA7DUZ = DUZ of ordering provider"
^XTMP("XPDT",7816,"RTN","LA7VORC",109,0)=" ;             LA7DIV = Facility (division) of provider"
^XTMP("XPDT",7816,"RTN","LA7VORC",110,0)=" ;              LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",111,0)=" ;             LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",112,0)=" ;           LA7IDTYP = id type to return (0:DUZ 1:VPID 2:NPI)"
^XTMP("XPDT",7816,"RTN","LA7VORC",113,0)=" ;           "
^XTMP("XPDT",7816,"RTN","LA7VORC",114,0)=" ; Returns ORC-12 sequence"
^XTMP("XPDT",7816,"RTN","LA7VORC",115,0)=" ; Also used to build OBR-16 sequence"
^XTMP("XPDT",7816,"RTN","LA7VORC",116,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",117,0)=" S LA7IDTYP=+$G(LA7IDTYP)"
^XTMP("XPDT",7816,"RTN","LA7VORC",118,0)=" Q $$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,0,LA7IDTYP)"
^XTMP("XPDT",7816,"RTN","LA7VORC",119,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",120,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",121,0)="ORC13(LA7J,LA7FS,LA7ECH) ; Build ORC-13 sequence - Enterer's location"
^XTMP("XPDT",7816,"RTN","LA7VORC",122,0)=" ; Call with  LA7J = variable pointer to file #4 or #44"
^XTMP("XPDT",7816,"RTN","LA7VORC",123,0)=" ;           LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",124,0)=" ;          LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",125,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",126,0)=" ; Returns ORC-13 sequence"
^XTMP("XPDT",7816,"RTN","LA7VORC",127,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",128,0)=" N LA74,LA744,LA7X,LA7Y,LA7Z"
^XTMP("XPDT",7816,"RTN","LA7VORC",129,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",130,0)=" S (LA74,LA744,LA7Y)="""""
^XTMP("XPDT",7816,"RTN","LA7VORC",131,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",132,0)=" ; Pointer to file #44"
^XTMP("XPDT",7816,"RTN","LA7VORC",133,0)=" I $P(LA7J,"";"",2)=""SC("" D"
^XTMP("XPDT",7816,"RTN","LA7VORC",134,0)=" . S LA744=$P(LA7J,"";"")"
^XTMP("XPDT",7816,"RTN","LA7VORC",135,0)=" . S LA74=$$GET1^DIQ(44,LA744_"","",3,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VORC",136,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",137,0)=" ; Pointer to file #4"
^XTMP("XPDT",7816,"RTN","LA7VORC",138,0)=" I $P(LA7J,"";"",2)=""DIC(4,"" S LA74=$P(LA7J,"";"")"
^XTMP("XPDT",7816,"RTN","LA7VORC",139,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",140,0)=" ; Build 1st component (point of care), 6th component (person location type)"
^XTMP("XPDT",7816,"RTN","LA7VORC",141,0)=" I LA744 D"
^XTMP("XPDT",7816,"RTN","LA7VORC",142,0)=" . S LA7Z=$$GET1^DIQ(44,LA744_"","",.01)"
^XTMP("XPDT",7816,"RTN","LA7VORC",143,0)=" . S $P(LA7Y,$E(LA7ECH,1),1)=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORC",144,0)=" . S LA7Z=$$GET1^DIQ(44,LA744_"","",2,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VORC",145,0)=" . S $P(LA7Y,$E(LA7ECH,1),6)=$S(LA7Z=""C"":""C"",LA7Z=""W"":""N"",1:""D"")"
^XTMP("XPDT",7816,"RTN","LA7VORC",146,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",147,0)=" ; Build 4th component (facility), demote delimiter from component to sub-component"
^XTMP("XPDT",7816,"RTN","LA7VORC",148,0)=" I LA74 D"
^XTMP("XPDT",7816,"RTN","LA7VORC",149,0)=" . S LA7Z=$$FACDNS^LA7VHLU2(LA74,LA7FS,LA7ECH,2)"
^XTMP("XPDT",7816,"RTN","LA7VORC",150,0)=" . I $P(LA7Z,$E(LA7ECH,4),2)'="""" S $P(LA7Y,$E(LA7ECH,1),4)=LA7Z Q"
^XTMP("XPDT",7816,"RTN","LA7VORC",151,0)=" . S LA7Z=$$INST^LA7VHLU4(LA74,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORC",152,0)=" . I $P(LA7Z,$E(LA7ECH,1),3)=""99VA4"" S $P(LA7Z,$E(LA7ECH,1),3)=""L"""
^XTMP("XPDT",7816,"RTN","LA7VORC",153,0)=" . S $P(LA7Y,$E(LA7ECH,1),4)=$TR(LA7Z,$E(LA7ECH,1),$E(LA7ECH,4))"
^XTMP("XPDT",7816,"RTN","LA7VORC",154,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",155,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",156,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",157,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",158,0)="ORC17(LA74,LA7FS,LA7ECH) ; Build ORC-17 sequence - Entering organization"
^XTMP("XPDT",7816,"RTN","LA7VORC",159,0)=" ; Call with   LA74 = ien of institution in file #4"
^XTMP("XPDT",7816,"RTN","LA7VORC",160,0)=" ;                    if null/undefined then use Kernel Site file."
^XTMP("XPDT",7816,"RTN","LA7VORC",161,0)=" ;            LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",162,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",163,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",164,0)=" ; Returns ORC-17 sequence (ID^text^99VA4)"
^XTMP("XPDT",7816,"RTN","LA7VORC",165,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",166,0)=" Q $$INST^LA7VHLU4(LA74,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORC",167,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",168,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",169,0)="ORC21(LA74,LA7FS,LA7ECH) ; Build ORC-21 sequence - Ordering facility name"
^XTMP("XPDT",7816,"RTN","LA7VORC",170,0)=" ; Call with   LA74 = ien of institution in file #4"
^XTMP("XPDT",7816,"RTN","LA7VORC",171,0)=" ;            LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",172,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",173,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",174,0)=" ; Returns ORC-21 sequence"
^XTMP("XPDT",7816,"RTN","LA7VORC",175,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",176,0)=" Q $$XON^LA7VHLU4(4,LA74,0,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORC",177,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",178,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",179,0)="ORC22(LA74,LA7DT,LA7FS,LA7ECH) ; Build ORC-22 sequence - Ordering facility address"
^XTMP("XPDT",7816,"RTN","LA7VORC",180,0)=" ; Call with   LA74 = ien of institution in file #4"
^XTMP("XPDT",7816,"RTN","LA7VORC",181,0)=" ;                    if null/undefined then use Kernel Site file."
^XTMP("XPDT",7816,"RTN","LA7VORC",182,0)=" ;            LA7DT = ""as of"" date in FileMan format"
^XTMP("XPDT",7816,"RTN","LA7VORC",183,0)=" ;            LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",184,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",185,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",186,0)=" ; Returns ORC-22 sequence"
^XTMP("XPDT",7816,"RTN","LA7VORC",187,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",188,0)=" Q $$XAD^LA7VHLU4(4,LA74,LA7DT,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORC",189,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",190,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",191,0)="ORC23(LA74,LA7DT,LA7FS,LA7ECH) ; Build ORC-23 sequence - Ordering facility phone number"
^XTMP("XPDT",7816,"RTN","LA7VORC",192,0)=" ; Call with   LA74 = ien of institution in file #4"
^XTMP("XPDT",7816,"RTN","LA7VORC",193,0)=" ;                    if null/undefined then use Kernel Site file."
^XTMP("XPDT",7816,"RTN","LA7VORC",194,0)=" ;            LA7DT = ""as of"" date in FileMan format"
^XTMP("XPDT",7816,"RTN","LA7VORC",195,0)=" ;            LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",196,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",197,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",198,0)=" ; Returns ORC-23 sequence"
^XTMP("XPDT",7816,"RTN","LA7VORC",199,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",200,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",201,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",202,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VORC",203,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",204,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",205,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",206,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",207,0)="ORC24(LA7200,LA7DT,LA7FS,LA7ECH) ; Build ORC-24 sequence - Ordering provider address"
^XTMP("XPDT",7816,"RTN","LA7VORC",208,0)=" ; Call with LA7200 = ien of provider in file #200"
^XTMP("XPDT",7816,"RTN","LA7VORC",209,0)=" ;            LA7DT = ""as of"" date in FileMan format"
^XTMP("XPDT",7816,"RTN","LA7VORC",210,0)=" ;            LA7FS = HL field separator"
^XTMP("XPDT",7816,"RTN","LA7VORC",211,0)=" ;           LA7ECH = HL encoding characters"
^XTMP("XPDT",7816,"RTN","LA7VORC",212,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",213,0)=" ; Returns ORC-24 sequence"
^XTMP("XPDT",7816,"RTN","LA7VORC",214,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",215,0)=" N LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORC",216,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",217,0)=" S LA7Y="""""
^XTMP("XPDT",7816,"RTN","LA7VORC",218,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORC",219,0)=" Q LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORM1")="0^12^B57485485^B52156055"
^XTMP("XPDT",7816,"RTN","LA7VORM1",1,0)="LA7VORM1 ;DALOI/DLR - LAB ORM (Order) message builder ;Aug 13, 2007"
^XTMP("XPDT",7816,"RTN","LA7VORM1",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,51,46,61,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VORM1",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",4,0)="BUILD(LA7628) ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",5,0)=" ; Call with LA7628 = ien of entry in file #62.8 Shipping Manifest"
^XTMP("XPDT",7816,"RTN","LA7VORM1",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",7,0)=" N LA7101,LA762801,LA7629,LA7NVAF,LA7PIDSN,LA7X,ECNT,GBL,SHP,SHPC,SITE,ORUID,NTST"
^XTMP("XPDT",7816,"RTN","LA7VORM1",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",9,0)=" I $G(LA7628)<1!('$D(^LAHM(62.8,+$G(LA7628),0))) D  Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",10,0)=" . ; Need to add error logging for manifest not found."
^XTMP("XPDT",7816,"RTN","LA7VORM1",11,0)=" . D EXIT"
^XTMP("XPDT",7816,"RTN","LA7VORM1",12,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",13,0)=" S GBL=""^TMP(""""HLS"""",""_$J_"")"",ECNT=1"
^XTMP("XPDT",7816,"RTN","LA7VORM1",14,0)=" S LA7628(0)=$G(^LAHM(62.8,LA7628,0))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",15,0)=" S LA7629=$P(LA7628(0),U,2)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",16,0)=" S LA7629(0)=$G(^LAHM(62.9,LA7629,0))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",17,0)=" S LA76248=+$P(LA7629(0),""^"",7)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",18,0)=" S LA76248(0)=$G(^LAHM(62.48,LA76248,0))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",19,0)=" I '$P(LA76248(0),""^"",3) D EXIT Q  ; not active"
^XTMP("XPDT",7816,"RTN","LA7VORM1",20,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",21,0)=" S LA7V(""INST"")=$P(LA7629(0),U,11)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",22,0)=" Q:LA7V(""INST"")=$P(LA7629(0),U,6)  ;Same system shipment"
^XTMP("XPDT",7816,"RTN","LA7VORM1",23,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",24,0)=" S LA7NVAF=$$NVAF^LA7VHLU2(+LA7V(""INST"")),SITE="""""
^XTMP("XPDT",7816,"RTN","LA7VORM1",25,0)=" I LA7NVAF=0 S SITE=$$STA^XUAF4(+$P(LA7629(0),U,11))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",26,0)=" I LA7NVAF=1 S SITE=$$ID^XUAF4(""DMIS"",+$P(LA7629(0),U,11))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",27,0)=" S LA7V(""NON"")=$P(LA7629(0),U,12)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",28,0)=" I LA7V(""NON"")'="""" S SITE=LA7V(""NON"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",29,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",30,0)=" S LA7X=$$NVAF^LA7VHLU2(+$P(LA7629(0),U,2))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",31,0)=" I LA7X=0 S LA7V(""CLNT"")=$$STA^XUAF4(+$P(LA7629(0),U,2))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",32,0)=" I LA7X=1 S LA7V(""CLNT"")=$$ID^XUAF4(""DMIS"",+$P(LA7629(0),U,2))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",33,0)=" S $P(LA7V(""CLNT""),U,2)=$P($$NS^XUAF4(+$P(LA7629(0),U,2)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",34,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",35,0)=" S LA7X=$$NVAF^LA7VHLU2(+$P(LA7629(0),U,3))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",36,0)=" I LA7X=0 S LA7V(""HOST"")=$$STA^XUAF4(+$P(LA7629(0),U,3))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",37,0)=" I LA7X=1 S LA7V(""HOST"")=$$ID^XUAF4(""DMIS"",+$P(LA7629(0),U,3))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",38,0)=" S $P(LA7V(""HOST""),U,2)=$P($$NS^XUAF4(+$P(LA7629(0),U,3)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",39,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",40,0)=" ; Assuming the receiving institution is the primary site (site with the computer system)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",41,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",42,0)=" ; Sort tests by patient,UID,test - only need to build one PID, PV1 per patient"
^XTMP("XPDT",7816,"RTN","LA7VORM1",43,0)=" ; ^TMP(""LA7628"",$J, LRDFN, accession UID, ien of shipping manifest specimen entry)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",44,0)=" K ^TMP(""LA7628"",$J)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",45,0)=" S LA762801=0"
^XTMP("XPDT",7816,"RTN","LA7VORM1",46,0)=" F  S LA762801=$O(^LAHM(62.8,LA7628,10,LA762801)) Q:'LA762801  D"
^XTMP("XPDT",7816,"RTN","LA7VORM1",47,0)=" . S X(0)=$G(^LAHM(62.8,LA7628,10,LA762801,0))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",48,0)=" . I $P(X(0),""^"",8)=0 Q  ; Removed from manifest"
^XTMP("XPDT",7816,"RTN","LA7VORM1",49,0)=" . I $P(X(0),""^""),$P(X(0),""^"",5)'="""" S ^TMP(""LA7628"",$J,+$P(X(0),""^""),$P(X(0),""^"",5),LA762801)="""""
^XTMP("XPDT",7816,"RTN","LA7VORM1",50,0)=" K LA762801"
^XTMP("XPDT",7816,"RTN","LA7VORM1",51,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",52,0)=" ; Nothing to send"
^XTMP("XPDT",7816,"RTN","LA7VORM1",53,0)=" I '$D(^TMP(""LA7628"",$J)) D EXIT Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",54,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",55,0)=" ; Set flag = 0 (multiple PID's/message - build one message)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",56,0)=" ;            1 (one PID/message - build multiple messages)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",57,0)=" ;            2 (one ORC/message - build multiple messages)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",58,0)=" S LA7SMSG=+$P(LA76248(0),""^"",8)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",59,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",60,0)=" I LA7SMSG=0 D  Q:$G(HL)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",61,0)=" . D STARTMSG"
^XTMP("XPDT",7816,"RTN","LA7VORM1",62,0)=" . I $G(HL) D EXIT"
^XTMP("XPDT",7816,"RTN","LA7VORM1",63,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",64,0)=" S (LRDFN,LRI,LA7PIDSN)=0"
^XTMP("XPDT",7816,"RTN","LA7VORM1",65,0)=" F  S LRDFN=$O(^TMP(""LA7628"",$J,LRDFN)) Q:'LRDFN  D  Q:$G(HL)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",66,0)=" . N LA7PID,LA7PV1"
^XTMP("XPDT",7816,"RTN","LA7VORM1",67,0)=" . I LA7SMSG=1 D STARTMSG Q:$G(HL)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",68,0)=" . I LA7SMSG<2 D PID,PV1"
^XTMP("XPDT",7816,"RTN","LA7VORM1",69,0)=" . S LA7UID="""""
^XTMP("XPDT",7816,"RTN","LA7VORM1",70,0)=" . F  S LA7UID=$O(^TMP(""LA7628"",$J,LRDFN,LA7UID)) Q:LA7UID=""""  D"
^XTMP("XPDT",7816,"RTN","LA7VORM1",71,0)=" . . N LA76802,LA7ORC,X"
^XTMP("XPDT",7816,"RTN","LA7VORM1",72,0)=" . . S X=$Q(^LRO(68,""C"",LA7UID))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",73,0)=" . . I $QS(X,3)'=LA7UID Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",74,0)=" . . S LRAA=$QS(X,4),LRAD=$QS(X,5),LRAN=$QS(X,6)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",75,0)=" . . F I=0,.3,3 S LA76802(I)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,I))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",76,0)=" . . S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,5,0))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",77,0)=" . . I I>0 S LA76802(5)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,I,0))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",78,0)=" . . E  S LA76802(5)="""""
^XTMP("XPDT",7816,"RTN","LA7VORM1",79,0)=" . . I LA7SMSG=2 D STARTMSG Q:$G(HL)  D PID,PV1"
^XTMP("XPDT",7816,"RTN","LA7VORM1",80,0)=" . . S (LA7OBRSN,LA762801)=0"
^XTMP("XPDT",7816,"RTN","LA7VORM1",81,0)=" . . F  S LA762801=$O(^TMP(""LA7628"",$J,LRDFN,LA7UID,LA762801)) Q:'LA762801  D"
^XTMP("XPDT",7816,"RTN","LA7VORM1",82,0)=" . . . N LA7OBR,I"
^XTMP("XPDT",7816,"RTN","LA7VORM1",83,0)=" . . . F I=0,.1,1,2,5 S LA762801(I)=$G(^LAHM(62.8,LA7628,10,LA762801,I))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",84,0)=" . . . I $$CHKTST^LA7SMU(LA7628,LA762801)'=0 Q  ;deleted accession"
^XTMP("XPDT",7816,"RTN","LA7VORM1",85,0)=" . . . D ORC,OBR^LA7VORM3,OBX^LA7VORM3"
^XTMP("XPDT",7816,"RTN","LA7VORM1",86,0)=" . . I LA7SMSG=2 D BLG,SENDMSG"
^XTMP("XPDT",7816,"RTN","LA7VORM1",87,0)=" . I LA7SMSG<2 D BLG"
^XTMP("XPDT",7816,"RTN","LA7VORM1",88,0)=" . I LA7SMSG=1 D SENDMSG"
^XTMP("XPDT",7816,"RTN","LA7VORM1",89,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",90,0)=" I LA7SMSG=0 D SENDMSG"
^XTMP("XPDT",7816,"RTN","LA7VORM1",91,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",92,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",93,0)="EXIT ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",94,0)=" K @GBL,^TMP(""LA7628"",$J)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",95,0)=" K DIC,DFN,EID,HL,HLCOMP,HLFS,HLQ,HLSUB,INT"
^XTMP("XPDT",7816,"RTN","LA7VORM1",96,0)=" K LA760,LA7628,LA762801,LA7629"
^XTMP("XPDT",7816,"RTN","LA7VORM1",97,0)=" K LA7ECH,LA7FS,LA7MID,LA7V,LA7HDR,LA7OBRSN,LA7OBXSN,LA7VIEN,LAEVNT"
^XTMP("XPDT",7816,"RTN","LA7VORM1",98,0)=" K LRAA,LRACC,LRAD,LRAN,LRDFN,LRI"
^XTMP("XPDT",7816,"RTN","LA7VORM1",99,0)=" K LTST,NLT,NLTIEN,PCNT,RUID,SNIEN,TIEN,X,Y,LA"
^XTMP("XPDT",7816,"RTN","LA7VORM1",100,0)=" D KVAR^LRX"
^XTMP("XPDT",7816,"RTN","LA7VORM1",101,0)=" I $D(ZTQUEUED) S ZTREQ=""@"""
^XTMP("XPDT",7816,"RTN","LA7VORM1",102,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",103,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",104,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",105,0)="STARTMSG ; Create/initialize HL message"
^XTMP("XPDT",7816,"RTN","LA7VORM1",106,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",107,0)=" K @GBL"
^XTMP("XPDT",7816,"RTN","LA7VORM1",108,0)=" S (LA76249,LA7PIDSN)=0"
^XTMP("XPDT",7816,"RTN","LA7VORM1",109,0)=" D STARTMSG^LA7VHLU(""LA7V Order to ""_SITE,.LA76249)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",110,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",111,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",112,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",113,0)="SENDMSG ; File HL7 message with HL and LAB packages."
^XTMP("XPDT",7816,"RTN","LA7VORM1",114,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",115,0)=" N LA7DATA,LA7ID"
^XTMP("XPDT",7816,"RTN","LA7VORM1",116,0)=" S LA7ID=""LA7V HOST ""_SITE_""-O-""_$P($G(LA7628(0)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",117,0)=" ; If no message to send then quit"
^XTMP("XPDT",7816,"RTN","LA7VORM1",118,0)=" I '$D(^TMP(""HLS"",$J)) D  Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",119,0)=" . N FDA,LA7ER"
^XTMP("XPDT",7816,"RTN","LA7VORM1",120,0)=" . I $G(LA76248) S FDA(1,62.49,LA76249_"","",.5)=LA76248"
^XTMP("XPDT",7816,"RTN","LA7VORM1",121,0)=" . S FDA(1,62.49,LA76249_"","",1)=""O"""
^XTMP("XPDT",7816,"RTN","LA7VORM1",122,0)=" . S FDA(1,62.49,LA76249_"","",2)=""E"""
^XTMP("XPDT",7816,"RTN","LA7VORM1",123,0)=" . S FDA(1,62.49,LA76249_"","",5)=LA7ID"
^XTMP("XPDT",7816,"RTN","LA7VORM1",124,0)=" . D FILE^DIE("""",""FDA(1)"",""LA7ER(1)"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",125,0)=" . D CLEAN^DILF"
^XTMP("XPDT",7816,"RTN","LA7VORM1",126,0)=" . L -^LAHM(62.49,LA76249)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",127,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",128,0)=" D GEN^LA7VHLU"
^XTMP("XPDT",7816,"RTN","LA7VORM1",129,0)=" S LA7DATA=""SM06""_""^""_$$NOW^XLFDT"
^XTMP("XPDT",7816,"RTN","LA7VORM1",130,0)=" D SEUP^LA7SMU($P(LA7628(0),""^""),""1"",LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",131,0)=" D UPDT6249"
^XTMP("XPDT",7816,"RTN","LA7VORM1",132,0)=" ; Unlock entry"
^XTMP("XPDT",7816,"RTN","LA7VORM1",133,0)=" L -^LAHM(62.49,LA76249)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",134,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",135,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",136,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",137,0)="UPDT6249 ; update entry in 62.49"
^XTMP("XPDT",7816,"RTN","LA7VORM1",138,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",139,0)=" N FDA,LA7ER"
^XTMP("XPDT",7816,"RTN","LA7VORM1",140,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",141,0)=" I $G(LA76248) S FDA(1,62.49,LA76249_"","",.5)=LA76248"
^XTMP("XPDT",7816,"RTN","LA7VORM1",142,0)=" S FDA(1,62.49,LA76249_"","",1)=""O"""
^XTMP("XPDT",7816,"RTN","LA7VORM1",143,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",144,0)=" ; Check for acknowledgment type and set status accordingly."
^XTMP("XPDT",7816,"RTN","LA7VORM1",145,0)=" ; If no commit/application ack then original mode(application ack)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",146,0)=" ; Check for commit ack when HL package sends these to application."
^XTMP("XPDT",7816,"RTN","LA7VORM1",147,0)=" I $P(^LAHM(62.49,LA76249,0),""^"",3)'=""E"" D"
^XTMP("XPDT",7816,"RTN","LA7VORM1",148,0)=" . I $G(LA7ERR) S FDA(1,62.49,LA76249_"","",2)=""E"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",149,0)=" . I $G(HL(""APAT""))="""",$G(HL(""ACAT""))="""" S FDA(1,62.49,LA76249_"","",2)=""A"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",150,0)=" . I $G(HL(""APAT""))=""AL"" S FDA(1,62.49,LA76249_"","",2)=""A"""
^XTMP("XPDT",7816,"RTN","LA7VORM1",151,0)=" . E  S FDA(1,62.49,LA76249_"","",2)=""X"""
^XTMP("XPDT",7816,"RTN","LA7VORM1",152,0)=" S FDA(1,62.49,LA76249_"","",5)=LA7ID"
^XTMP("XPDT",7816,"RTN","LA7VORM1",153,0)=" I $G(HL(""SAN""))'="""" S FDA(1,62.49,LA76249_"","",102)=HL(""SAN"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",154,0)=" I $G(HL(""SAF""))'="""" S FDA(1,62.49,LA76249_"","",103)=HL(""SAF"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",155,0)=" I $G(HL(""MTN""))'="""" S FDA(1,62.49,LA76249_"","",108)=HL(""MTN"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",156,0)=" I $G(HL(""PID""))'="""" S FDA(1,62.49,LA76249_"","",110)=HL(""PID"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",157,0)=" I $G(HL(""VER""))'="""" S FDA(1,62.49,LA76249_"","",111)=HL(""VER"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",158,0)=" I $P($G(LA7MID),""^"")'="""" S FDA(1,62.49,LA76249_"","",109)=$P(LA7MID,""^"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",159,0)=" I $P($G(LA7MID),""^"",2) D"
^XTMP("XPDT",7816,"RTN","LA7VORM1",160,0)=" . S FDA(1,62.49,LA76249_"","",160)=$P(LA7MID,""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",161,0)=" . S FDA(1,62.49,LA76249_"","",161)=$P(LA7MID,""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",162,0)=" D FILE^DIE("""",""FDA(1)"",""LA7ER(1)"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",163,0)=" D CLEAN^DILF"
^XTMP("XPDT",7816,"RTN","LA7VORM1",164,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",165,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",166,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",167,0)="PID ; Patient identification"
^XTMP("XPDT",7816,"RTN","LA7VORM1",168,0)=" S LRDPF=$P(^LR(LRDFN,0),""^"",2),DFN=$P(^(0),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",169,0)=" D DEM^LRX"
^XTMP("XPDT",7816,"RTN","LA7VORM1",170,0)=" D PID^LA7VPID(LRDFN,"""",.LA7PID,.LA7PIDSN,.HL,"""")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",171,0)=" ; DoD/CHCS facilities only use 1st repetition of PID-3."
^XTMP("XPDT",7816,"RTN","LA7VORM1",172,0)=" I LA7NVAF=1 D"
^XTMP("XPDT",7816,"RTN","LA7VORM1",173,0)=" . S X=$P(LA7PID(0),LA7FS,4),X=$P(X,$E(LA7ECH,2))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",174,0)=" . S $P(LA7PID(0),LA7FS,4)=X"
^XTMP("XPDT",7816,"RTN","LA7VORM1",175,0)=" D FILESEG^LA7VHLU(GBL,.LA7PID)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",176,0)=" D FILE6249^LA7VHLU(LA76249,.LA7PID)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",177,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",178,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",179,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",180,0)="PV1 ; Location information"
^XTMP("XPDT",7816,"RTN","LA7VORM1",181,0)=" ; DoD/CHCS facilities do not use PV1 segment"
^XTMP("XPDT",7816,"RTN","LA7VORM1",182,0)=" I LA7NVAF=1 Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",183,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",184,0)=" D PV1^LA7VPID(LRDFN,.LA7PV1,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",185,0)=" D FILESEG^LA7VHLU(GBL,.LA7PV1)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",186,0)=" D FILE6249^LA7VHLU(LA76249,.LA7PV1)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",187,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",188,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",189,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",190,0)="ORC ;Order Control"
^XTMP("XPDT",7816,"RTN","LA7VORM1",191,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",192,0)=" N ORC,LA7DATA,LA7DUR,LA7DURU,LA76205,LA762801,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORM1",193,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",194,0)=" S ORC(0)=""ORC"""
^XTMP("XPDT",7816,"RTN","LA7VORM1",195,0)=" S ORC(1)=$$ORC1^LA7VORC(""NW"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",196,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",197,0)=" ; Place order number - accession UID"
^XTMP("XPDT",7816,"RTN","LA7VORM1",198,0)=" S ORC(2)=$$ORC2^LA7VORC($P(LA76802(.3),""^""),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",199,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",200,0)=" ; Placer group number - shipping manifest invoice #"
^XTMP("XPDT",7816,"RTN","LA7VORM1",201,0)=" S ORC(4)=$$ORC4^LA7VORC($P(LA7628(0),""^""),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",202,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",203,0)=" ; Quantity/Timing"
^XTMP("XPDT",7816,"RTN","LA7VORM1",204,0)=" S (LA76205,LA7DUR,LA7DURU)="""""
^XTMP("XPDT",7816,"RTN","LA7VORM1",205,0)=" S LA762801=0"
^XTMP("XPDT",7816,"RTN","LA7VORM1",206,0)=" F  S LA762801=$O(^TMP(""LA7628"",$J,LRDFN,LA7UID,LA762801)) Q:'LA762801  D"
^XTMP("XPDT",7816,"RTN","LA7VORM1",207,0)=" . N I,LA760"
^XTMP("XPDT",7816,"RTN","LA7VORM1",208,0)=" . ; Test duration"
^XTMP("XPDT",7816,"RTN","LA7VORM1",209,0)=" . F I=0,2 S LA762801(I)=$G(^LAHM(62.8,LA7628,10,LA762801,I))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",210,0)=" . I $P(LA762801(2),""^"",4) D"
^XTMP("XPDT",7816,"RTN","LA7VORM1",211,0)=" . . S LA7DUR=$P(LA762801(2),""^"",6) ; collection duration"
^XTMP("XPDT",7816,"RTN","LA7VORM1",212,0)=" . . S LA7DURU=$P(LA762801(2),""^"",7) ; duration units"
^XTMP("XPDT",7816,"RTN","LA7VORM1",213,0)=" . ; Test urgency - find highest urgency on accession"
^XTMP("XPDT",7816,"RTN","LA7VORM1",214,0)=" . S LA760=+$P(LA762801(0),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",215,0)=" . S X=+$$GET1^DIQ(68.04,LA760_"",""_LRAN_"",""_LRAD_"",""_LRAA_"","",1,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",216,0)=" . I 'LA76205 S LA76205=X"
^XTMP("XPDT",7816,"RTN","LA7VORM1",217,0)=" . I LA76205,X<LA76205 S LA76205=X"
^XTMP("XPDT",7816,"RTN","LA7VORM1",218,0)=" S ORC(7)=$$ORC7^LA7VORC(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",219,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",220,0)=" ; Order Date/Time - if no order date/time then try draw time (only send date if d/t is inexact (2nd piece))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",221,0)=" I $P(LA76802(0),""^"",4) S ORC(9)=$$ORC9^LA7VORC($P(LA76802(0),""^"",4))"
^XTMP("XPDT",7816,"RTN","LA7VORM1",222,0)=" I '$P(LA76802(0),""^"",4),$P(LA76802(3),""^"") D"
^XTMP("XPDT",7816,"RTN","LA7VORM1",223,0)=" . K LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORM1",224,0)=" . S LA7X=$P(LA76802(3),""^"") S:$P(LA76802(3),""^"",2) LA7X=$P(LA7X,""."")"
^XTMP("XPDT",7816,"RTN","LA7VORM1",225,0)=" . S ORC(9)=$$ORC9^LA7VORC(LA7X)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",226,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",227,0)=" ; Ordering provider"
^XTMP("XPDT",7816,"RTN","LA7VORM1",228,0)=" S LA7X=$$FNDOLOC^LA7VHLU2(LA7UID)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",229,0)=" S ORC(12)=$$ORC12^LA7VORC($P(LA76802(0),""^"",8),$P(LA7X,""^"",3),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",230,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",231,0)=" ; Entering organization - VA facility"
^XTMP("XPDT",7816,"RTN","LA7VORM1",232,0)=" S ORC(17)=$$ORC17^LA7VORC($P($G(LA7629(0)),U,2),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",233,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",234,0)=" ; Ordering facility/address"
^XTMP("XPDT",7816,"RTN","LA7VORM1",235,0)=" I $P($G(LA7629(0)),U,2) D"
^XTMP("XPDT",7816,"RTN","LA7VORM1",236,0)=" . S ORC(21)=$$ORC21^LA7VORC($P(LA7629(0),U,2),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",237,0)=" . S ORC(22)=$$ORC22^LA7VORC($P(LA7629(0),U,2),$P(LA76802(3),""^""),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",238,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",239,0)=" D BUILDSEG^LA7VHLU(.ORC,.LA7DATA,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",240,0)=" D FILESEG^LA7VHLU(GBL,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",241,0)=" D FILE6249^LA7VHLU(LA76249,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",242,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",243,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",244,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",245,0)="BLG ; Billing segment"
^XTMP("XPDT",7816,"RTN","LA7VORM1",246,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",247,0)=" N LA7BLG"
^XTMP("XPDT",7816,"RTN","LA7VORM1",248,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORM1",249,0)=" I $P(LA7629(0),U,13)="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VORM1",250,0)=" S LA7BLG(0)=$$BLG^LA7VHLU($P(LA7629(0),""^"",13),""CO"",LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",251,0)=" D FILESEG^LA7VHLU(GBL,.LA7BLG)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",252,0)=" D FILE6249^LA7VHLU(LA76249,.LA7BLG)"
^XTMP("XPDT",7816,"RTN","LA7VORM1",253,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU")="0^23^B24122155^B58855542"
^XTMP("XPDT",7816,"RTN","LA7VORU",1,0)="LA7VORU ;DALOI/JMC - Builder of HL7 Lab Results OBR/OBX/NTE ;Aug 8, 2008"
^XTMP("XPDT",7816,"RTN","LA7VORU",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,61,64,71,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VORU",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",4,0)="EN(LA) ; called from IN^LA7VMSG(...)"
^XTMP("XPDT",7816,"RTN","LA7VORU",5,0)=" ; variables"
^XTMP("XPDT",7816,"RTN","LA7VORU",6,0)=" ; LA(""HUID"") - Host Unique ID from the local ACCESSION file (#68)"
^XTMP("XPDT",7816,"RTN","LA7VORU",7,0)=" ; LA(""SITE"") - Ordering site IEN in the INSTITUTION file (#4)"
^XTMP("XPDT",7816,"RTN","LA7VORU",8,0)=" ; LA(""RUID"") - Remote sites Unique ID from ACCESSION file (#68)"
^XTMP("XPDT",7816,"RTN","LA7VORU",9,0)=" ; LA(""ORD"") - Free text ordered test name from WKLD CODE file (#64)"
^XTMP("XPDT",7816,"RTN","LA7VORU",10,0)=" ; LA(""NLT"") - National Laboratory test code from WKLD CODE file (#64)"
^XTMP("XPDT",7816,"RTN","LA7VORU",11,0)=" ; LA(""LRIDT"") - Inverse date/time the lab arrival time (accession date/time)"
^XTMP("XPDT",7816,"RTN","LA7VORU",12,0)=" ; LA(""SUB"") - test subscript defined in LABORATORY TEST file (#60)"
^XTMP("XPDT",7816,"RTN","LA7VORU",13,0)=" ; LA(""LRDFN"") - IEN in LAB DATA file (#63)"
^XTMP("XPDT",7816,"RTN","LA7VORU",14,0)=" ; LA(""ORD""), LA(""NLT""), and LA(""SUB"") are sent for specific lab results."
^XTMP("XPDT",7816,"RTN","LA7VORU",15,0)=" ; LA(""AUTO-INST"") - Auto-Instrument"
^XTMP("XPDT",7816,"RTN","LA7VORU",16,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",17,0)=" N LA763,LA7NLT,LA7NVAF,LA7X,PRIMARY"
^XTMP("XPDT",7816,"RTN","LA7VORU",18,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",19,0)=" S PRIMARY=$$PRIM^VASITE(DT),LA(""AUTO-INST"")="""""
^XTMP("XPDT",7816,"RTN","LA7VORU",20,0)=" I $G(PRIMARY)'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VORU",21,0)=" . S PRIMARY=$$SITE^VASITE(DT,PRIMARY)"
^XTMP("XPDT",7816,"RTN","LA7VORU",22,0)=" . S PRIMARY=$P(PRIMARY,U,3)"
^XTMP("XPDT",7816,"RTN","LA7VORU",23,0)=" . S LA(""AUTO-INST"")=""LA7V HOST ""_PRIMARY"
^XTMP("XPDT",7816,"RTN","LA7VORU",24,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",25,0)=" I '$O(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),0)) D  Q"
^XTMP("XPDT",7816,"RTN","LA7VORU",26,0)=" . ; need to add error logging when no entry in 63."
^XTMP("XPDT",7816,"RTN","LA7VORU",27,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",28,0)=" S LRDFN=LA(""LRDFN""),LRSS=LA(""SUB""),LRIDT=LA(""LRIDT"")"
^XTMP("XPDT",7816,"RTN","LA7VORU",29,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",30,0)=" ; Get zeroth node of entry in #63."
^XTMP("XPDT",7816,"RTN","LA7VORU",31,0)=" S LA763(0)=$G(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),0))"
^XTMP("XPDT",7816,"RTN","LA7VORU",32,0)=" S LA7NLT=$G(LA(""NLT""))"
^XTMP("XPDT",7816,"RTN","LA7VORU",33,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",34,0)=" S LA7NVAF=$$NVAF^LA7VHLU2(+LA(""SITE""))"
^XTMP("XPDT",7816,"RTN","LA7VORU",35,0)=" S LA7NTESN=0"
^XTMP("XPDT",7816,"RTN","LA7VORU",36,0)=" D ORC"
^XTMP("XPDT",7816,"RTN","LA7VORU",37,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",38,0)=" I $G(LA(""SUB""))=""CH"" D CH"
^XTMP("XPDT",7816,"RTN","LA7VORU",39,0)=" I $G(LA(""SUB""))=""MI"" D MI^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORU",40,0)=" I ""SPCYEM""[$G(LA(""SUB"")) D AP^LA7VORU2"
^XTMP("XPDT",7816,"RTN","LA7VORU",41,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU",42,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",43,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",44,0)="CH ; Build segments for ""CH"" subscript"
^XTMP("XPDT",7816,"RTN","LA7VORU",45,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",46,0)=" D OBR"
^XTMP("XPDT",7816,"RTN","LA7VORU",47,0)=" D NTE"
^XTMP("XPDT",7816,"RTN","LA7VORU",48,0)=" S LA7OBXSN=0"
^XTMP("XPDT",7816,"RTN","LA7VORU",49,0)=" D OBX"
^XTMP("XPDT",7816,"RTN","LA7VORU",50,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",51,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU",52,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",53,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",54,0)="ORC ; Build ORC segment"
^XTMP("XPDT",7816,"RTN","LA7VORU",55,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",56,0)=" N LA763,LA7696,LA7DATA,LA7SM,LA7X,LA7Y,LADFINST,ORC"
^XTMP("XPDT",7816,"RTN","LA7VORU",57,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",58,0)=" S LA763(0)=$G(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),0))"
^XTMP("XPDT",7816,"RTN","LA7VORU",59,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",60,0)=" ; Default institution from Kernel"
^XTMP("XPDT",7816,"RTN","LA7VORU",61,0)=" S LADFINST=+$$KSP^XUPARAM(""INST"")"
^XTMP("XPDT",7816,"RTN","LA7VORU",62,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",63,0)=" S ORC(0)=""ORC"""
^XTMP("XPDT",7816,"RTN","LA7VORU",64,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",65,0)=" ; Order control"
^XTMP("XPDT",7816,"RTN","LA7VORU",66,0)=" S ORC(1)=$$ORC1^LA7VORC(""RE"")"
^XTMP("XPDT",7816,"RTN","LA7VORU",67,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",68,0)=" ; Remote UID"
^XTMP("XPDT",7816,"RTN","LA7VORU",69,0)=" K LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORU",70,0)=" M LA7X=LA(""RUID"")"
^XTMP("XPDT",7816,"RTN","LA7VORU",71,0)=" S ORC(2)=$$ORC2^LA7VORC(.LA7X,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORU",72,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",73,0)=" ; Host UID"
^XTMP("XPDT",7816,"RTN","LA7VORU",74,0)=" K LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORU",75,0)=" M LA7X=LA(""HUID"")"
^XTMP("XPDT",7816,"RTN","LA7VORU",76,0)=" S ORC(3)=$$ORC3^LA7VORC(.LA7X,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORU",77,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",78,0)=" ; Return shipping manifest if found"
^XTMP("XPDT",7816,"RTN","LA7VORU",79,0)=" S LA7SM="""",LA7696=0"
^XTMP("XPDT",7816,"RTN","LA7VORU",80,0)=" I LA(""SITE"")'="""",LA(""RUID"")'="""" S LA7696=$O(^LRO(69.6,""RST"",LA(""SITE""),LA(""RUID""),0))"
^XTMP("XPDT",7816,"RTN","LA7VORU",81,0)=" I LA7696 S LA7SM=$P($G(^LRO(69.6,LA7696,0)),U,14)"
^XTMP("XPDT",7816,"RTN","LA7VORU",82,0)=" I LA7SM'="""" S ORC(4)=$$ORC4^LA7VORC(LA7SM,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORU",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",84,0)=" ; Order status"
^XTMP("XPDT",7816,"RTN","LA7VORU",85,0)=" ; DoD/CHCS requires ORC-5 valued otherwise will not process message"
^XTMP("XPDT",7816,"RTN","LA7VORU",86,0)=" I LA7NVAF=1 S ORC(5)=$$ORC5^LA7VORC(""CM"",LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORU",87,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",88,0)=" ; Ordering provider"
^XTMP("XPDT",7816,"RTN","LA7VORU",89,0)=" K LA7X,LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORU",90,0)=" S (LA7X,LA7Y)="""""
^XTMP("XPDT",7816,"RTN","LA7VORU",91,0)=" ; ""CH"" and ""MI"" subscript store requesting provider and requesting div/location."
^XTMP("XPDT",7816,"RTN","LA7VORU",92,0)=" I ""CHMI""[LA(""SUB"") D"
^XTMP("XPDT",7816,"RTN","LA7VORU",93,0)=" . N LA7J"
^XTMP("XPDT",7816,"RTN","LA7VORU",94,0)=" . S LA7J=$P(LA763(0),""^"",13)"
^XTMP("XPDT",7816,"RTN","LA7VORU",95,0)=" . I $P(LA7J,"";"",2)=""SC("" S LA7Y=$$GET1^DIQ(44,$P(LA7J,"";"")_"","",3,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VORU",96,0)=" . I $P(LA7J,"";"",2)=""DIC(4,"" S LA7Y=$P(LA7J,"";"")"
^XTMP("XPDT",7816,"RTN","LA7VORU",97,0)=" . I LA(""SUB"")=""CH"" S LA7X=$P(LA763(0),""^"",10)"
^XTMP("XPDT",7816,"RTN","LA7VORU",98,0)=" . I LA(""SUB"")=""MI"" S LA7X=$P(LA763(0),""^"",7)"
^XTMP("XPDT",7816,"RTN","LA7VORU",99,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",100,0)=" ; Other subscripts only store requesting provider"
^XTMP("XPDT",7816,"RTN","LA7VORU",101,0)=" I ""CYEMSP""[LA(""SUB"") S LA7X=$P(LA763(0),""^"",7)"
^XTMP("XPDT",7816,"RTN","LA7VORU",102,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",103,0)=" I LA7Y="""" S LA7Y=LADFINST"
^XTMP("XPDT",7816,"RTN","LA7VORU",104,0)=" S ORC(12)=$$ORC12^LA7VORC(LA7X,LA7Y,LA7FS,LA7ECH,$S($G(LA7INTYP)=30:2,$G(LA7NVAF)=1:0,1:1))"
^XTMP("XPDT",7816,"RTN","LA7VORU",105,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",106,0)=" ; Enterer's location"
^XTMP("XPDT",7816,"RTN","LA7VORU",107,0)=" S LA7X="""""
^XTMP("XPDT",7816,"RTN","LA7VORU",108,0)=" I ""CHMI""[LA(""SUB"") S LA7X=$P(LA763(0),""^"",13)"
^XTMP("XPDT",7816,"RTN","LA7VORU",109,0)=" I LA7X'="""" S ORC(13)=$$ORC13^LA7VORC(LA7X,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORU",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",111,0)=" ; Entering organization"
^XTMP("XPDT",7816,"RTN","LA7VORU",112,0)=" S ORC(17)=$$ORC17^LA7VORC(LA7Y,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORU",113,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",114,0)=" ; Ordering facility/address"
^XTMP("XPDT",7816,"RTN","LA7VORU",115,0)=" S LA7X=$P($G(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),""ORU"")),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VORU",116,0)=" I 'LA7X,""CHMI""[LA(""SUB"") S LA7X=$P(LA763(0),""^"",14)"
^XTMP("XPDT",7816,"RTN","LA7VORU",117,0)=" I LA7X D"
^XTMP("XPDT",7816,"RTN","LA7VORU",118,0)=" . S ORC(21)=$$ORC21^LA7VORC(LA7X,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORU",119,0)=" . S ORC(22)=$$ORC22^LA7VORC(LA7X,$P(LA763(0),""^""),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORU",120,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",121,0)=" D BUILDSEG^LA7VHLU(.ORC,.LA7DATA,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VORU",122,0)=" D FILESEG^LA7VHLU(GBL,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORU",123,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",124,0)=" ; Check for flag to only build message but do not file"
^XTMP("XPDT",7816,"RTN","LA7VORU",125,0)=" I '$G(LA7NOMSG) D FILE6249^LA7VHLU(LA76249P,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORU",126,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",127,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU",128,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",129,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",130,0)="OBR ;Observation Request segment for Lab Order"
^XTMP("XPDT",7816,"RTN","LA7VORU",131,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",132,0)=" D OBR^LA7VORUB"
^XTMP("XPDT",7816,"RTN","LA7VORU",133,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU",134,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",135,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",136,0)="OBX ;Observation/Result segment for Lab Results"
^XTMP("XPDT",7816,"RTN","LA7VORU",137,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",138,0)=" N LA7953,LA7DATA,LA7VT,LA7VTIEN,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORU",139,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",140,0)=" S LA7VTIEN=0"
^XTMP("XPDT",7816,"RTN","LA7VORU",141,0)=" F  S LA7VTIEN=$O(^LAHM(62.49,LA(62.49),1,LA7VTIEN)) Q:'LA7VTIEN  D"
^XTMP("XPDT",7816,"RTN","LA7VORU",142,0)=" . S LA7VT=$P(^LAHM(62.49,LA(62.49),1,LA7VTIEN,0),""^"",1,2)"
^XTMP("XPDT",7816,"RTN","LA7VORU",143,0)=" . ; Build OBX segment"
^XTMP("XPDT",7816,"RTN","LA7VORU",144,0)=" . K LA7DATA"
^XTMP("XPDT",7816,"RTN","LA7VORU",145,0)=" . D OBX^LA7VOBX(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),$P(LA7VT,""^"",1,2),.LA7DATA,.LA7OBXSN,LA7FS,LA7ECH,$G(LA7NVAF))"
^XTMP("XPDT",7816,"RTN","LA7VORU",146,0)=" . ; If OBX failed to build then don't store"
^XTMP("XPDT",7816,"RTN","LA7VORU",147,0)=" . I '$D(LA7DATA) Q"
^XTMP("XPDT",7816,"RTN","LA7VORU",148,0)=" . ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",149,0)=" . D FILESEG^LA7VHLU(GBL,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORU",150,0)=" . I '$G(LA7NOMSG) D FILE6249^LA7VHLU(LA76249,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORU",151,0)=" . ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",152,0)=" . ; Send performing lab comment and interpretation from file #60"
^XTMP("XPDT",7816,"RTN","LA7VORU",153,0)=" . S LA7NTESN=0"
^XTMP("XPDT",7816,"RTN","LA7VORU",154,0)=" . I LA7NVAF=1 D PLC^LA7VORUA"
^XTMP("XPDT",7816,"RTN","LA7VORU",155,0)=" . D INTRP^LA7VORUA"
^XTMP("XPDT",7816,"RTN","LA7VORU",156,0)=" . ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",157,0)=" . ; Mark result as sent - set to 1, if corrected results set to 2"
^XTMP("XPDT",7816,"RTN","LA7VORU",158,0)=" . I LA(""SUB"")=""CH"" D"
^XTMP("XPDT",7816,"RTN","LA7VORU",159,0)=" . . I $P(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),$P(LA7VT,""^"")),""^"",10)>1 Q"
^XTMP("XPDT",7816,"RTN","LA7VORU",160,0)=" . . S $P(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),$P(LA7VT,""^"")),""^"",10)=$S($P(LA7VT,""^"",2)=""C"":2,1:1)"
^XTMP("XPDT",7816,"RTN","LA7VORU",161,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",162,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU",163,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",164,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",165,0)="NTE ; Build NTE segment"
^XTMP("XPDT",7816,"RTN","LA7VORU",166,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU",167,0)=" D NTE^LA7VORUA"
^XTMP("XPDT",7816,"RTN","LA7VORU",168,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1")="0^8^B61414246^B35283793"
^XTMP("XPDT",7816,"RTN","LA7VORU1",1,0)="LA7VORU1 ;DALOI/JMC - Builder of HL7 Lab Results Microbiology OBR/OBX/NTE ;12/08/09  16:39"
^XTMP("XPDT",7816,"RTN","LA7VORU1",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VORU1",3,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",4,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",6,0)="MI ; Build segments for ""MI"" subscript"
^XTMP("XPDT",7816,"RTN","LA7VORU1",7,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",8,0)=" N LA7I,LA7ID,LA7IDT,LA7IENS,LA7NLT,LRDFN,LRIDT,LRSB,LRSS"
^XTMP("XPDT",7816,"RTN","LA7VORU1",9,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",10,0)=" S LRDFN=LA(""LRDFN""),LRSS=LA(""SUB""),(LA7IENS,LRIDT)=LA(""LRIDT"")"
^XTMP("XPDT",7816,"RTN","LA7VORU1",11,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",12,0)=" ; Bacteriology Report"
^XTMP("XPDT",7816,"RTN","LA7VORU1",13,0)=" I $D(^LR(LRDFN,LRSS,LRIDT,1)) D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",14,0)=" . S LA7IDT=LRIDT,LRSB=11,LA7NLT=""87993.0000"""
^XTMP("XPDT",7816,"RTN","LA7VORU1",15,0)=" . D OBR^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",16,0)=" . D NTE^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",17,0)=" . F LRSB=1,11.7,1.5,11 D RPTNTE"
^XTMP("XPDT",7816,"RTN","LA7VORU1",18,0)=" . N LRSB"
^XTMP("XPDT",7816,"RTN","LA7VORU1",19,0)=" . S LA7OBXSN=0"
^XTMP("XPDT",7816,"RTN","LA7VORU1",20,0)=" . ; Report urine/sputum screens"
^XTMP("XPDT",7816,"RTN","LA7VORU1",21,0)=" . F LA7I=5,6 I $P(^LR(LRDFN,LRSS,LRIDT,1),""^"",LA7I)'="""" S LRSB=$S(LA7I=5:11.58,1:11.57) D OBX"
^XTMP("XPDT",7816,"RTN","LA7VORU1",22,0)=" . ; Report gram stain"
^XTMP("XPDT",7816,"RTN","LA7VORU1",23,0)=" . I $D(^LR(LRDFN,LRSS,LRIDT,2)) D GS"
^XTMP("XPDT",7816,"RTN","LA7VORU1",24,0)=" . ; Check for organism id"
^XTMP("XPDT",7816,"RTN","LA7VORU1",25,0)=" . I '$D(^LR(LRDFN,LRSS,LRIDT,3)) Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",26,0)=" . S LRSB=12"
^XTMP("XPDT",7816,"RTN","LA7VORU1",27,0)=" . D ORG"
^XTMP("XPDT",7816,"RTN","LA7VORU1",28,0)=" . D MIC"
^XTMP("XPDT",7816,"RTN","LA7VORU1",29,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",30,0)=" ; Parasite report"
^XTMP("XPDT",7816,"RTN","LA7VORU1",31,0)=" I $D(^LR(LRDFN,LRSS,LRIDT,5)) D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",32,0)=" . S LRSB=14,LA7NLT=""87505.0000"""
^XTMP("XPDT",7816,"RTN","LA7VORU1",33,0)=" . D OBR^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",34,0)=" . D NTE^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",35,0)=" . F LRSB=16.5,15.51,16.4,14 D RPTNTE"
^XTMP("XPDT",7816,"RTN","LA7VORU1",36,0)=" . ; Check for organism id"
^XTMP("XPDT",7816,"RTN","LA7VORU1",37,0)=" . I '$D(^LR(LRDFN,LRSS,LRIDT,6)) Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",38,0)=" . N LRSB"
^XTMP("XPDT",7816,"RTN","LA7VORU1",39,0)=" . S LA7OBXSN=0,LA7IDT=LRIDT,LRSB=16"
^XTMP("XPDT",7816,"RTN","LA7VORU1",40,0)=" . D ORG"
^XTMP("XPDT",7816,"RTN","LA7VORU1",41,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",42,0)=" ; Mycology report"
^XTMP("XPDT",7816,"RTN","LA7VORU1",43,0)=" I $D(^LR(LRDFN,LRSS,LRIDT,8)) D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",44,0)=" . S LRSB=18,LA7NLT=""87994.0000"""
^XTMP("XPDT",7816,"RTN","LA7VORU1",45,0)=" . D OBR^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",46,0)=" . D NTE^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",47,0)=" . F LRSB=20.5,19.6,20.4,18 D RPTNTE"
^XTMP("XPDT",7816,"RTN","LA7VORU1",48,0)=" . ; Check for organism id"
^XTMP("XPDT",7816,"RTN","LA7VORU1",49,0)=" . I '$D(^LR(LRDFN,LRSS,LRIDT,9)) Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",50,0)=" . N LRSB"
^XTMP("XPDT",7816,"RTN","LA7VORU1",51,0)=" . S LA7OBXSN=0,LA7IDT=LRIDT,LRSB=20"
^XTMP("XPDT",7816,"RTN","LA7VORU1",52,0)=" . D ORG"
^XTMP("XPDT",7816,"RTN","LA7VORU1",53,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",54,0)=" ; Mycobacterium report"
^XTMP("XPDT",7816,"RTN","LA7VORU1",55,0)=" I $D(^LR(LRDFN,LRSS,LRIDT,11)) D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",56,0)=" . S LRSB=22,LA7NLT=""87995.0000"""
^XTMP("XPDT",7816,"RTN","LA7VORU1",57,0)=" . D OBR^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",58,0)=" . D NTE^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",59,0)=" . F LRSB=26.5,26.4,22 D RPTNTE"
^XTMP("XPDT",7816,"RTN","LA7VORU1",60,0)=" . N LRSB"
^XTMP("XPDT",7816,"RTN","LA7VORU1",61,0)=" . S LA7OBXSN=0,LA7IDT=LRIDT"
^XTMP("XPDT",7816,"RTN","LA7VORU1",62,0)=" . ; Report acid fast stain"
^XTMP("XPDT",7816,"RTN","LA7VORU1",63,0)=" . I $P(^LR(LRDFN,LRSS,LRIDT,11),""^"",3)'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",64,0)=" . . S LRSB=24 D OBX"
^XTMP("XPDT",7816,"RTN","LA7VORU1",65,0)=" . . S LRSB=25 D OBX"
^XTMP("XPDT",7816,"RTN","LA7VORU1",66,0)=" . ; Check for organism id"
^XTMP("XPDT",7816,"RTN","LA7VORU1",67,0)=" . I '$D(^LR(LRDFN,LRSS,LRIDT,12)) Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",68,0)=" . S LRSB=26"
^XTMP("XPDT",7816,"RTN","LA7VORU1",69,0)=" . D ORG"
^XTMP("XPDT",7816,"RTN","LA7VORU1",70,0)=" . D MIC"
^XTMP("XPDT",7816,"RTN","LA7VORU1",71,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",72,0)=" ; Virology report"
^XTMP("XPDT",7816,"RTN","LA7VORU1",73,0)=" I $D(^LR(LRDFN,LRSS,LRIDT,16)) D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",74,0)=" . S LRSB=33,LA7NLT=""87996.0000"""
^XTMP("XPDT",7816,"RTN","LA7VORU1",75,0)=" . D OBR^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",76,0)=" . D NTE^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",77,0)=" . F LRSB=36.5,36.4,33 D RPTNTE"
^XTMP("XPDT",7816,"RTN","LA7VORU1",78,0)=" . ; Check for virus id"
^XTMP("XPDT",7816,"RTN","LA7VORU1",79,0)=" . I '$D(^LR(LRDFN,LRSS,LRIDT,17)) Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",80,0)=" . N LRSB"
^XTMP("XPDT",7816,"RTN","LA7VORU1",81,0)=" . S LA7OBXSN=0,LA7IDT=LRIDT,LRSB=36"
^XTMP("XPDT",7816,"RTN","LA7VORU1",82,0)=" . D ORG"
^XTMP("XPDT",7816,"RTN","LA7VORU1",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",84,0)=" ; Antibiotic Levels"
^XTMP("XPDT",7816,"RTN","LA7VORU1",85,0)=" I $D(^LR(LRDFN,LRSS,LRIDT,14)) D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",86,0)=" . N LA7SR"
^XTMP("XPDT",7816,"RTN","LA7VORU1",87,0)=" . S LRSB=28,LA7NLT=""93978.0000"",LA7NTESN=0"
^XTMP("XPDT",7816,"RTN","LA7VORU1",88,0)=" . D OBR^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",89,0)=" . S LA7SR=0"
^XTMP("XPDT",7816,"RTN","LA7VORU1",90,0)=" . F  S LA7SR=$O(^LR(LRDFN,LRSS,LRIDT,14,LA7SR)) Q:'LA7SR  S LA7IDT=LRIDT_"",""_LA7SR D OBX"
^XTMP("XPDT",7816,"RTN","LA7VORU1",91,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",92,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",93,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",94,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",95,0)="GS ; Report Gram stain"
^XTMP("XPDT",7816,"RTN","LA7VORU1",96,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",97,0)=" N LA7GS"
^XTMP("XPDT",7816,"RTN","LA7VORU1",98,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",99,0)=" S LRSB=11.6,LA7GS=0"
^XTMP("XPDT",7816,"RTN","LA7VORU1",100,0)=" F  S LA7GS=$O(^LR(LRDFN,LRSS,LRIDT,2,LA7GS)) Q:'LA7GS  D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",101,0)=" . S LA7IDT=LRIDT_"",""_LA7GS"
^XTMP("XPDT",7816,"RTN","LA7VORU1",102,0)=" . D OBX"
^XTMP("XPDT",7816,"RTN","LA7VORU1",103,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",104,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",105,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",106,0)="RPTNTE ; Send report comments"
^XTMP("XPDT",7816,"RTN","LA7VORU1",107,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",108,0)=" N LA7CMTYP,LA7FMT,LA7J,LA7ND,LA7SOC,LA7TXT,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORU1",109,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",110,0)=" ; Source of comment - handle special codes for other systems, i,e. DOD-CHCS"
^XTMP("XPDT",7816,"RTN","LA7VORU1",111,0)=" S LA7SOC=$S($G(LA7NVAF)=1:""AC"",1:""L""),LA7ND=0"
^XTMP("XPDT",7816,"RTN","LA7VORU1",112,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",113,0)=" S LA7FMT=0"
^XTMP("XPDT",7816,"RTN","LA7VORU1",114,0)=" ; If HDR interface then send as repetition text."
^XTMP("XPDT",7816,"RTN","LA7VORU1",115,0)=" I $G(LA7INTYP)=30 S LA7FMT=2"
^XTMP("XPDT",7816,"RTN","LA7VORU1",116,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",117,0)=" D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",118,0)=" . ; Bacterial preliminary/report/tests remark"
^XTMP("XPDT",7816,"RTN","LA7VORU1",119,0)=" . I LRSB=11 S LA7ND=4,LA7CMTYP=""VA-LRMI010"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",120,0)=" . I LRSB=1 S LA7ND=19,LA7CMTYP=""VA-LRMI011"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",121,0)=" . I LRSB=1.5 S LA7ND=26,LA7CMTYP=""VA-LRMI012"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",122,0)=" . I LRSB=11.7 S LA7ND=25,LA7CMTYP=""VA-LRMI013"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",123,0)=" . ; Parasite preliminary/report/tests remark"
^XTMP("XPDT",7816,"RTN","LA7VORU1",124,0)=" . I LRSB=14 S LA7ND=7,LA7CMTYP=""VA-LRMI020"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",125,0)=" . I LRSB=16.5 S LA7ND=21,LA7CMTYP=""VA-LRMI021"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",126,0)=" . I LRSB=16.4 S LA7ND=27,LA7CMTYP=""VA-LRMI022"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",127,0)=" . I LRSB=15.1 S LA7ND=24,LA7CMTYP=""VA-LRMI023"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",128,0)=" . ; Fungal preliminary/report/tests remark"
^XTMP("XPDT",7816,"RTN","LA7VORU1",129,0)=" . I LRSB=18 S LA7ND=10,LA7CMTYP=""VA-LRMI030"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",130,0)=" . I LRSB=20.5 S LA7ND=22,LA7CMTYP=""VA-LRMI031"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",131,0)=" . I LRSB=20.4 S LA7ND=28,LA7CMTYP=""VA-LRMI032"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",132,0)=" . I LRSB=19.6 S LA7ND=15,LA7CMTYP=""VA-LRMI033"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",133,0)=" . ; Mycobacteria preliminary/report/tests remark"
^XTMP("XPDT",7816,"RTN","LA7VORU1",134,0)=" . I LRSB=22 S LA7ND=13,LA7CMTYP=""VA-LRMI040"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",135,0)=" . I LRSB=26.5 S LA7ND=23,LA7CMTYP=""VA-LRMI041"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",136,0)=" . I LRSB=26.4 S LA7ND=29,LA7CMTYP=""VA-LRMI042"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",137,0)=" . ; Viral preliminary/report/tests remark"
^XTMP("XPDT",7816,"RTN","LA7VORU1",138,0)=" . I LRSB=33 S LA7ND=18,LA7CMTYP=""VA-LRMI050"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",139,0)=" . I LRSB=36.5 S LA7ND=20,LA7CMTYP=""VA-LRMI051"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",140,0)=" . I LRSB=36.4 S LA7ND=30,LA7CMTYP=""VA-LRMI052"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",141,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",142,0)=" I LA7ND'>0 Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",143,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",144,0)=" S LA7J=0"
^XTMP("XPDT",7816,"RTN","LA7VORU1",145,0)=" F  S LA7J=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7J)) Q:'LA7J  D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",146,0)=" . S LA7X=$G(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7J,0))"
^XTMP("XPDT",7816,"RTN","LA7VORU1",147,0)=" . I LA7FMT=0 S LA7TXT=LA7X D NTE^LA7VORU1 Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",148,0)=" . S LA7TXT(LA7J)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORU1",149,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",150,0)=" ; If formatted or repetition format then build comments to a NTE segment."
^XTMP("XPDT",7816,"RTN","LA7VORU1",151,0)=" I LA7FMT,$D(LA7TXT) D NTE^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORU1",152,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",153,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",154,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",155,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",156,0)="ORG ; Build OBR/OBX segments for MI subscript organism id"
^XTMP("XPDT",7816,"RTN","LA7VORU1",157,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",158,0)=" N LA7ND,LA7ORG"
^XTMP("XPDT",7816,"RTN","LA7VORU1",159,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",160,0)=" ; Bacterial organism"
^XTMP("XPDT",7816,"RTN","LA7VORU1",161,0)=" I LRSB=12 S LA7ND=3"
^XTMP("XPDT",7816,"RTN","LA7VORU1",162,0)=" ; Parasite organism"
^XTMP("XPDT",7816,"RTN","LA7VORU1",163,0)=" I LRSB=16 S LA7ND=6"
^XTMP("XPDT",7816,"RTN","LA7VORU1",164,0)=" ; Fungal organism"
^XTMP("XPDT",7816,"RTN","LA7VORU1",165,0)=" I LRSB=20 S LA7ND=9"
^XTMP("XPDT",7816,"RTN","LA7VORU1",166,0)=" ; Mycobacteria organism"
^XTMP("XPDT",7816,"RTN","LA7VORU1",167,0)=" I LRSB=26 S LA7ND=12"
^XTMP("XPDT",7816,"RTN","LA7VORU1",168,0)=" ; Viral agent"
^XTMP("XPDT",7816,"RTN","LA7VORU1",169,0)=" I LRSB=36 S LA7ND=17"
^XTMP("XPDT",7816,"RTN","LA7VORU1",170,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",171,0)=" S LA7ORG=0"
^XTMP("XPDT",7816,"RTN","LA7VORU1",172,0)=" F  S LA7ORG=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG)) Q:'LA7ORG  D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",173,0)=" . S LA7IDT=LRIDT_"",""_LA7ORG_"","""
^XTMP("XPDT",7816,"RTN","LA7VORU1",174,0)=" . D OBX"
^XTMP("XPDT",7816,"RTN","LA7VORU1",175,0)=" . I LA7ND=17 Q  ; no quantity/comments on viruses"
^XTMP("XPDT",7816,"RTN","LA7VORU1",176,0)=" . D ORGNTE"
^XTMP("XPDT",7816,"RTN","LA7VORU1",177,0)=" . I $P($G(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,0)),""^"",2)'="""" D CC"
^XTMP("XPDT",7816,"RTN","LA7VORU1",178,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",179,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",180,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",181,0)="CC ; Send colony count (quantity)"
^XTMP("XPDT",7816,"RTN","LA7VORU1",182,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",183,0)=" N LRSB"
^XTMP("XPDT",7816,"RTN","LA7VORU1",184,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",185,0)=" I LA7ND=3 S LRSB=""12,1"""
^XTMP("XPDT",7816,"RTN","LA7VORU1",186,0)=" I LA7ND=9 S LRSB=""20,1"""
^XTMP("XPDT",7816,"RTN","LA7VORU1",187,0)=" I LA7ND=12 S LRSB=""26,1"""
^XTMP("XPDT",7816,"RTN","LA7VORU1",188,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",189,0)=" D OBX"
^XTMP("XPDT",7816,"RTN","LA7VORU1",190,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",191,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",192,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",193,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",194,0)="ORGNTE ; Send comments on organisms."
^XTMP("XPDT",7816,"RTN","LA7VORU1",195,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",196,0)=" N LA7CMTYP,LA7FMT,LA7J,LA7SOC,LA7NTESN,LA7TXT,LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORU1",197,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",198,0)=" ; Source of comment - handle special codes for other systems, i,e. DOD-CHCS"
^XTMP("XPDT",7816,"RTN","LA7VORU1",199,0)=" S LA7SOC=$S($G(LA7NVAF)=1:""RC"",1:""L"")"
^XTMP("XPDT",7816,"RTN","LA7VORU1",200,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",201,0)=" S LA7FMT=0,LA7CMTYP="""""
^XTMP("XPDT",7816,"RTN","LA7VORU1",202,0)=" ; If HDR interface then send as repetition text."
^XTMP("XPDT",7816,"RTN","LA7VORU1",203,0)=" I $G(LA7INTYP)=30 S LA7FMT=2"
^XTMP("XPDT",7816,"RTN","LA7VORU1",204,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",205,0)=" S (LA7J,LA7NTESN)=0"
^XTMP("XPDT",7816,"RTN","LA7VORU1",206,0)=" F  S LA7J=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,1,LA7J)) Q:'LA7J  D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",207,0)=" . S LA7X=$G(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,1,LA7J,0))"
^XTMP("XPDT",7816,"RTN","LA7VORU1",208,0)=" . I LA7X="""" S LA7X="" """
^XTMP("XPDT",7816,"RTN","LA7VORU1",209,0)=" . I LA7FMT=0 S LA7TXT=LA7X D NTE Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",210,0)=" . S LA7TXT(LA7J)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORU1",211,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",212,0)=" ; If formatted or repetition format then build comments to a NTE segment."
^XTMP("XPDT",7816,"RTN","LA7VORU1",213,0)=" I LA7FMT,$D(LA7TXT) D NTE^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORU1",214,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",215,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",216,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",217,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",218,0)="MIC ; Build OBR/OBX segments for MI subscript susceptibilities(MIC)"
^XTMP("XPDT",7816,"RTN","LA7VORU1",219,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",220,0)=" N LA7ORG,LA7ND,LA7NLT,LA7SB,LA7SB1,LA7SOC"
^XTMP("XPDT",7816,"RTN","LA7VORU1",221,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",222,0)=" ; Source of comment - handle special codes for other systems, i,e. DOD-CHCS"
^XTMP("XPDT",7816,"RTN","LA7VORU1",223,0)=" S LA7SOC=$S($G(LA7NVAF)=1:""RC"",1:""L"")"
^XTMP("XPDT",7816,"RTN","LA7VORU1",224,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",225,0)=" S (LA7NLT,LA7NLT(1))="""""
^XTMP("XPDT",7816,"RTN","LA7VORU1",226,0)=" I LRSB=12 S LA7ND=3,LA7NLT=""87565.0000"",LA7NLT(1)=""87993.0000"""
^XTMP("XPDT",7816,"RTN","LA7VORU1",227,0)=" I LRSB=26 S LA7ND=12,LA7NLT=""87899.0000"",LA7NLT(1)=""87525.0000"""
^XTMP("XPDT",7816,"RTN","LA7VORU1",228,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",229,0)=" S LA7ORG=0,LA7SB=LRSB"
^XTMP("XPDT",7816,"RTN","LA7VORU1",230,0)=" F  S LA7ORG=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG)) Q:'LA7ORG  D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",231,0)=" . N LA7NTESN,LA7PARNT"
^XTMP("XPDT",7816,"RTN","LA7VORU1",232,0)=" . ; Check for susceptibilities for this organism"
^XTMP("XPDT",7816,"RTN","LA7VORU1",233,0)=" . S X=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,2))"
^XTMP("XPDT",7816,"RTN","LA7VORU1",234,0)=" . I X<2!(X>3) Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",235,0)=" . S LA7PARNT=LA7SB_""-""_LA7ORG"
^XTMP("XPDT",7816,"RTN","LA7VORU1",236,0)=" . M LA7PARNT=LA7ID(LA7PARNT)"
^XTMP("XPDT",7816,"RTN","LA7VORU1",237,0)=" . D OBR^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU1",238,0)=" . S LA7OBXSN=0,LA7SB1=2"
^XTMP("XPDT",7816,"RTN","LA7VORU1",239,0)=" . F  S LA7SB1=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,LA7SB1)) Q:'LA7SB1!(LA7SB1>2.99)  D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",240,0)=" . . N LA7CMTYP,LA7FMT,LA7TXT,LRSB"
^XTMP("XPDT",7816,"RTN","LA7VORU1",241,0)=" . . S LA7IDT=LRIDT_"",""_LA7ORG_"",""_LA7SB1,LRSB=LA7SB_"",""_LA7SB1"
^XTMP("XPDT",7816,"RTN","LA7VORU1",242,0)=" . . D OBX"
^XTMP("XPDT",7816,"RTN","LA7VORU1",243,0)=" . . S X=$O(^LAB(62.06,""AD"",LA7SB1,0)) Q:'X"
^XTMP("XPDT",7816,"RTN","LA7VORU1",244,0)=" . . S LA7TXT=$P($G(^LAB(62.06,X,0)),""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VORU1",245,0)=" . . I LA7TXT'="""" S (LA7NTESN,LA7FMT)=0,LA7CMTYP="""" D NTE"
^XTMP("XPDT",7816,"RTN","LA7VORU1",246,0)=" . I LA7ND'=3 Q  ; no free text antibiotics on AFB"
^XTMP("XPDT",7816,"RTN","LA7VORU1",247,0)=" . S LA7SB1=0"
^XTMP("XPDT",7816,"RTN","LA7VORU1",248,0)=" . F  S LA7SB1=$O(^LR(LRDFN,LRSS,LRIDT,LA7ND,LA7ORG,3,LA7SB1)) Q:'LA7SB1  D"
^XTMP("XPDT",7816,"RTN","LA7VORU1",249,0)=" . . N LRSB"
^XTMP("XPDT",7816,"RTN","LA7VORU1",250,0)=" . . S LA7IDT=LRIDT_"",""_LA7ORG_"",""_LA7SB1"
^XTMP("XPDT",7816,"RTN","LA7VORU1",251,0)=" . . S LRSB=LA7SB_"",3,1"" D OBX"
^XTMP("XPDT",7816,"RTN","LA7VORU1",252,0)=" . . S LRSB=LA7SB_"",3,2"" D OBX"
^XTMP("XPDT",7816,"RTN","LA7VORU1",253,0)=" . "
^XTMP("XPDT",7816,"RTN","LA7VORU1",254,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",255,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",256,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",257,0)="OBX ; Build OBX segments for MI subscript"
^XTMP("XPDT",7816,"RTN","LA7VORU1",258,0)=" ; Also called by AP^LA7VORU2 to build AP OBX segments."
^XTMP("XPDT",7816,"RTN","LA7VORU1",259,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",260,0)=" N LA7DATA"
^XTMP("XPDT",7816,"RTN","LA7VORU1",261,0)=" D OBX^LA7VOBX(LRDFN,LRSS,LA7IDT,LRSB,.LA7DATA,.LA7OBXSN,LA7FS,LA7ECH,LA7NVAF)"
^XTMP("XPDT",7816,"RTN","LA7VORU1",262,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",263,0)=" ; If OBX failed to build then don't store"
^XTMP("XPDT",7816,"RTN","LA7VORU1",264,0)=" I '$D(LA7DATA) Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",265,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",266,0)=" D FILESEG^LA7VHLU(GBL,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORU1",267,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",268,0)=" ; Check for flag to only build meesage but do not file"
^XTMP("XPDT",7816,"RTN","LA7VORU1",269,0)=" I '$G(LA7NOMSG) D FILE6249^LA7VHLU(LA76249,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORU1",270,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU1",271,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",272,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",273,0)="NTE ; Build NTE segment with comment"
^XTMP("XPDT",7816,"RTN","LA7VORU1",274,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",275,0)=" N LA7DATA"
^XTMP("XPDT",7816,"RTN","LA7VORU1",276,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",277,0)=" D NTE^LA7VHLU3(.LA7DATA,.LA7TXT,$G(LA7SOC),LA7FS,LA7ECH,.LA7NTESN,$G(LA7CMTYP),$G(LA7FMT))"
^XTMP("XPDT",7816,"RTN","LA7VORU1",278,0)=" D FILESEG^LA7VHLU(GBL,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORU1",279,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",280,0)=" ; Check for flag to only build meesage but do not file"
^XTMP("XPDT",7816,"RTN","LA7VORU1",281,0)=" I '$G(LA7NOMSG) D FILE6249^LA7VHLU(LA76249,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORU1",282,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU1",283,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU2")="0^25^B5334202^B6677596"
^XTMP("XPDT",7816,"RTN","LA7VORU2",1,0)="LA7VORU2 ;DALOI/JMC - LAB ORU (Result) message builder cont'd ;Jun 17, 2005"
^XTMP("XPDT",7816,"RTN","LA7VORU2",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VORU2",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",4,0)="AP ; Observation/Result segment for Lab AP Results"
^XTMP("XPDT",7816,"RTN","LA7VORU2",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",6,0)=" N LA7DATA,LA7IDT,LRSB,LRSS"
^XTMP("XPDT",7816,"RTN","LA7VORU2",7,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",8,0)=" S LRDFN=LA(""LRDFN""),LRSS=LA(""SUB""),(LA7IDT,LRIDT)=LA(""LRIDT"")"
^XTMP("XPDT",7816,"RTN","LA7VORU2",9,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",10,0)=" S (LA7NLT,LA(""NLT""))=$P($$DEFCODE^LA7VHLU5(LRSS,.012,"""",""""),""!"")"
^XTMP("XPDT",7816,"RTN","LA7VORU2",11,0)=" D OBR^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU2",12,0)=" D NTE^LA7VORU"
^XTMP("XPDT",7816,"RTN","LA7VORU2",13,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",14,0)="APORM ; Entry point when building OBX segments for ORM message"
^XTMP("XPDT",7816,"RTN","LA7VORU2",15,0)=" ; Process AP subscripts"
^XTMP("XPDT",7816,"RTN","LA7VORU2",16,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",17,0)=" N LA7ORG,LA7P,LA7SR,LA7SS"
^XTMP("XPDT",7816,"RTN","LA7VORU2",18,0)=" S LA7OBXSN=0"
^XTMP("XPDT",7816,"RTN","LA7VORU2",19,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",20,0)=" ; Process main report"
^XTMP("XPDT",7816,"RTN","LA7VORU2",21,0)=" I LA7NVAF'=1 F LRSB=.012,.013,.014,.015,.016,1,1.1,1.3,1.4 D OBX^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORU2",22,0)=" I LA7NVAF=1 D SPDOD"
^XTMP("XPDT",7816,"RTN","LA7VORU2",23,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",24,0)=" ; Process supplementary reports"
^XTMP("XPDT",7816,"RTN","LA7VORU2",25,0)=" S LRSB=1.2,LA7SR=0"
^XTMP("XPDT",7816,"RTN","LA7VORU2",26,0)=" F  S LA7SR=$O(^LR(LRDFN,LRSS,LRIDT,1.2,LA7SR)) Q:'LA7SR  D"
^XTMP("XPDT",7816,"RTN","LA7VORU2",27,0)=" . N LA7IDT"
^XTMP("XPDT",7816,"RTN","LA7VORU2",28,0)=" . ; If don't release this report then skip."
^XTMP("XPDT",7816,"RTN","LA7VORU2",29,0)=" . I $P($G(^LR(LRDFN,LRSS,LRIDT,1.2,LA7SR,0)),""^"",2)'=1 Q"
^XTMP("XPDT",7816,"RTN","LA7VORU2",30,0)=" . S LA7IDT=LRIDT_"",""_LA7SR D OBX^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORU2",31,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",32,0)=" ; Process organ/tissue subfile"
^XTMP("XPDT",7816,"RTN","LA7VORU2",33,0)=" S LA7ORG=0"
^XTMP("XPDT",7816,"RTN","LA7VORU2",34,0)=" F  S LA7ORG=$O(^LR(LRDFN,LRSS,LRIDT,2,LA7ORG)) Q:'LA7ORG  D"
^XTMP("XPDT",7816,"RTN","LA7VORU2",35,0)=" . N LA7IDT"
^XTMP("XPDT",7816,"RTN","LA7VORU2",36,0)=" . S LRSB=10,LA7IDT=LRIDT_"",""_LA7ORG D OBX^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORU2",37,0)=" . I LRSS=""SP"" S LRSB=""10,2"",LA7IDT=LRIDT_"",""_LA7ORG D OBX^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORU2",38,0)=" . ; Procedures"
^XTMP("XPDT",7816,"RTN","LA7VORU2",39,0)=" . ;S LA7P=0,LRSB=""10,1.5"""
^XTMP("XPDT",7816,"RTN","LA7VORU2",40,0)=" . ;F  S LA7P=$O(^LR(LRDFN,LRSS,LRIDT,2,LA7ORG,4,LA7P)) Q:'LA7P  D"
^XTMP("XPDT",7816,"RTN","LA7VORU2",41,0)=" . ;. S LA7IDT=LRIDT_"",""_LA7ORG_"",""_LA7P D OBX^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORU2",42,0)=" . ; Special studies"
^XTMP("XPDT",7816,"RTN","LA7VORU2",43,0)=" . S LA7SS=0,LRSB=""10,5"""
^XTMP("XPDT",7816,"RTN","LA7VORU2",44,0)=" . F  S LA7SS=$O(^LR(LRDFN,LRSS,LRIDT,2,LA7ORG,5,LA7SS)) Q:'LA7SS  D"
^XTMP("XPDT",7816,"RTN","LA7VORU2",45,0)=" . . S LA7IDT=LRIDT_"",""_LA7ORG_"",""_LA7SS D OBX^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORU2",46,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",47,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORU2",48,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",49,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",50,0)="SPDOD ; Build OBX segment's to special DoD specifications."
^XTMP("XPDT",7816,"RTN","LA7VORU2",51,0)=" ; Send word-processing fields as series of OBX's for DoD."
^XTMP("XPDT",7816,"RTN","LA7VORU2",52,0)=" ; DoD cannot handle formatted text (FT) data type."
^XTMP("XPDT",7816,"RTN","LA7VORU2",53,0)=" N LA7DA"
^XTMP("XPDT",7816,"RTN","LA7VORU2",54,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",55,0)=" S LRSB=.012 D OBX^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORU2",56,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",57,0)=" F LRSB=.013,.014,.015,.016,1,1.1,1.3,1.4 D"
^XTMP("XPDT",7816,"RTN","LA7VORU2",58,0)=" . N LA7IDT,LA7SB"
^XTMP("XPDT",7816,"RTN","LA7VORU2",59,0)=" . S LA7DA=0,LA7SB=$S(LRSB=.013:.2,LRSB=.014:.3,LRSB=.015:.4,LRSB=.016:.5,1:LRSB)"
^XTMP("XPDT",7816,"RTN","LA7VORU2",60,0)=" . F  S LA7DA=$O(^LR(LRDFN,LRSS,LRIDT,LA7SB,LA7DA)) Q:'LA7DA  D"
^XTMP("XPDT",7816,"RTN","LA7VORU2",61,0)=" . . S LA7IDT=LRIDT_"",""_LA7DA D OBX^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORU2",62,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORU2",63,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORUA")="0^7^B11624236^B8112587"
^XTMP("XPDT",7816,"RTN","LA7VORUA",1,0)="LA7VORUA ;DALOI/JMC - Builder of HL7 Lab Results NTE ;12/08/09  16:39"
^XTMP("XPDT",7816,"RTN","LA7VORUA",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**61,64,68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VORUA",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",4,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",5,0)="NTE ; Build NTE segment"
^XTMP("XPDT",7816,"RTN","LA7VORUA",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",7,0)=" N LA7CMTYP,LA7FMT,LA7J,LA7NTE,LA7SOC,LA7TXT,LA7TYP,LA7X,LA7Y,X"
^XTMP("XPDT",7816,"RTN","LA7VORUA",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",9,0)=" ; Initialize segment set id"
^XTMP("XPDT",7816,"RTN","LA7VORUA",10,0)=" S LA7NTESN=0"
^XTMP("XPDT",7816,"RTN","LA7VORUA",11,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",12,0)=" ; Source of comment - handle other system's special codes, i.e. DOD-CHCS"
^XTMP("XPDT",7816,"RTN","LA7VORUA",13,0)=" S LA7SOC=$S($G(LA7NVAF)=1:""AC"",1:""L"")"
^XTMP("XPDT",7816,"RTN","LA7VORUA",14,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",15,0)=" S LA7FMT=0"
^XTMP("XPDT",7816,"RTN","LA7VORUA",16,0)=" ; If HDR interface then send as repetition text."
^XTMP("XPDT",7816,"RTN","LA7VORUA",17,0)=" I $G(LA7INTYP)=30 S LA7FMT=2"
^XTMP("XPDT",7816,"RTN","LA7VORUA",18,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",19,0)=" ; Send ""MI"" specimen's comments"
^XTMP("XPDT",7816,"RTN","LA7VORUA",20,0)=" I LA(""SUB"")=""MI"" D"
^XTMP("XPDT",7816,"RTN","LA7VORUA",21,0)=" . K LA7NTE"
^XTMP("XPDT",7816,"RTN","LA7VORUA",22,0)=" . S LA7X=$G(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),99)),LA7CMTYP=""VA-LRMI001"",LA7J=1"
^XTMP("XPDT",7816,"RTN","LA7VORUA",23,0)=" . I LA7X="""" Q"
^XTMP("XPDT",7816,"RTN","LA7VORUA",24,0)=" . I LA7FMT S LA7Y(LA7CMTYP,LA7J)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORUA",25,0)=" . E  S LA7TXT=LA7X D NTE^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORUA",26,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",27,0)=" ; Send ""CH"" specimen's comments"
^XTMP("XPDT",7816,"RTN","LA7VORUA",28,0)=" I LA(""SUB"")=""CH"" D"
^XTMP("XPDT",7816,"RTN","LA7VORUA",29,0)=" . S LA7J=0"
^XTMP("XPDT",7816,"RTN","LA7VORUA",30,0)=" . F  S LA7J=$O(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),1,LA7J)) Q:'LA7J  D"
^XTMP("XPDT",7816,"RTN","LA7VORUA",31,0)=" . . K LA7NTE"
^XTMP("XPDT",7816,"RTN","LA7VORUA",32,0)=" . . S LA7X=$G(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),1,LA7J,0)),LA7CMTYP=""VA-LR002"""
^XTMP("XPDT",7816,"RTN","LA7VORUA",33,0)=" . . I $E(LA7X,1)=""~"" S LA7CMTYP=""VA-LR001"""
^XTMP("XPDT",7816,"RTN","LA7VORUA",34,0)=" . . I LA7X="""" S LA7X="" """
^XTMP("XPDT",7816,"RTN","LA7VORUA",35,0)=" . . I LA7FMT S LA7Y(LA7CMTYP,LA7J)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORUA",36,0)=" . . E  S LA7TXT=LA7X D NTE^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORUA",37,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",38,0)=" ; If formatted or repetition format then build each type of comments to an NTE segment."
^XTMP("XPDT",7816,"RTN","LA7VORUA",39,0)=" I LA7FMT D"
^XTMP("XPDT",7816,"RTN","LA7VORUA",40,0)=" . S LA7CMTYP="""""
^XTMP("XPDT",7816,"RTN","LA7VORUA",41,0)=" . F  S LA7CMTYP=$O(LA7Y(LA7CMTYP)) Q:LA7CMTYP=""""  D"
^XTMP("XPDT",7816,"RTN","LA7VORUA",42,0)=" . . K LA7TXT"
^XTMP("XPDT",7816,"RTN","LA7VORUA",43,0)=" . . M LA7TXT=LA7Y(LA7CMTYP)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",44,0)=" . . D NTE^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORUA",45,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORUA",46,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",47,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",48,0)="PLC ; Performing lab comment"
^XTMP("XPDT",7816,"RTN","LA7VORUA",49,0)=" N LA74,LA7DIV,LA7CMTYP,LA7FMT,LA7NTE,LA7RNLT,LA7SOC,LA7TSTN,LA7TXT,LA7X,X"
^XTMP("XPDT",7816,"RTN","LA7VORUA",50,0)=" S (LA74,LA7CMTYP,LA7DIV,LA7RNLT,LA7TSTN)="""",LA7FMT=0"
^XTMP("XPDT",7816,"RTN","LA7VORUA",51,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",52,0)=" ; Source of comment - handle other system's special codes, i.e. DOD-CHCS"
^XTMP("XPDT",7816,"RTN","LA7VORUA",53,0)=" S LA7SOC=$S($G(LA7NVAF)=1:""DS"",1:""L"")"
^XTMP("XPDT",7816,"RTN","LA7VORUA",54,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",55,0)=" ; Find reporting facility (division)."
^XTMP("XPDT",7816,"RTN","LA7VORUA",56,0)=" I LA(""SUB"")=""CH"" D"
^XTMP("XPDT",7816,"RTN","LA7VORUA",57,0)=" . S LA7X=$G(^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),$P(LA7VT,""^"")))"
^XTMP("XPDT",7816,"RTN","LA7VORUA",58,0)=" . S LA74=$P(LA7X,""^"",9)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",59,0)=" . S LA7RNLT=$P($P(LA7X,""^"",3),""!"",2)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",60,0)=" I LA74="""" S LA74=+$P($G(^XMB(1,1,""XUS"")),""^"",17)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",61,0)=" I LA74 S LA7DIV=$$NAME^XUAF4(LA74)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",62,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",63,0)=" ; Build result test name"
^XTMP("XPDT",7816,"RTN","LA7VORUA",64,0)=" I LA7RNLT="""" D"
^XTMP("XPDT",7816,"RTN","LA7VORUA",65,0)=" . I $G(LA(""NLT""))'="""" S LA7RNLT=LA(""NLT"") Q"
^XTMP("XPDT",7816,"RTN","LA7VORUA",66,0)=" . S LA7RNLT=$G(LA7NLT)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",67,0)=" I LA7RNLT D"
^XTMP("XPDT",7816,"RTN","LA7VORUA",68,0)=" . S LA7X=$O(^LAM(""E"",LA7RNLT,0))"
^XTMP("XPDT",7816,"RTN","LA7VORUA",69,0)=" . I LA7X S LA7TSTN=$$GET1^DIQ(64,LA7X_"","",.01,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VORUA",70,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",71,0)=" S LA7TXT=LA7TSTN_"" results from ""_LA7DIV_""."""
^XTMP("XPDT",7816,"RTN","LA7VORUA",72,0)=" D NTE^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORUA",73,0)=" S X=$$PADD^XUAF4(LA74)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",74,0)=" S LA7TXT=$P(X,U)_"" ""_$P(X,U,2)_"", ""_$P(X,U,3)_"" ""_$P(X,U,4)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",75,0)=" D NTE^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORUA",76,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORUA",77,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",78,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",79,0)="INTRP ; Send test interpretation"
^XTMP("XPDT",7816,"RTN","LA7VORUA",80,0)=" ; Send ""CH"" subscript file #60 site/specimen's interpretation field (#5.5)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",81,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",82,0)=" N LA760,LA761,LA7CMTYP,LA7FMT,LA7J,LA7NTE,LA7SOC,LA7TXT,LA7X,LA7Y,LRSB"
^XTMP("XPDT",7816,"RTN","LA7VORUA",83,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",84,0)=" S LRSB=$P(LA7VT,""^""),(LA7FMT,LA7Y)=0"
^XTMP("XPDT",7816,"RTN","LA7VORUA",85,0)=" S LA761=+$P(LA763(0),""^"",5)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",86,0)=" S LA7X=^LR(LA(""LRDFN""),LA(""SUB""),LA(""LRIDT""),LRSB)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",87,0)=" S LA760=+$P($P(LA7X,""^"",3),""!"",7)"
^XTMP("XPDT",7816,"RTN","LA7VORUA",88,0)=" I LA760,$D(^LAB(60,LA760,1,LA761,1)) S LA7Y=1"
^XTMP("XPDT",7816,"RTN","LA7VORUA",89,0)=" I 'LA760 D"
^XTMP("XPDT",7816,"RTN","LA7VORUA",90,0)=" . S LA760=0"
^XTMP("XPDT",7816,"RTN","LA7VORUA",91,0)=" . F  S LA760=$O(^LAB(60,""C"",""CH;""_LRSB_"";1"",LA760)) Q:'LA760  D  Q:LA7Y"
^XTMP("XPDT",7816,"RTN","LA7VORUA",92,0)=" . . I $D(^LAB(60,LA760,1,LA761,1)) S LA7Y=1"
^XTMP("XPDT",7816,"RTN","LA7VORUA",93,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",94,0)=" I 'LA7Y Q"
^XTMP("XPDT",7816,"RTN","LA7VORUA",95,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",96,0)=" ; Source of comment - handle other system's special codes, i.e. DOD-CHCS"
^XTMP("XPDT",7816,"RTN","LA7VORUA",97,0)=" S LA7SOC=$S($G(LA7NVAF)=1:""RI"",1:""L""),LA7CMTYP=""VA-LR003"""
^XTMP("XPDT",7816,"RTN","LA7VORUA",98,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",99,0)=" ; If HDR interface then send as repetition text."
^XTMP("XPDT",7816,"RTN","LA7VORUA",100,0)=" I $G(LA7INTYP)=30 S LA7FMT=2"
^XTMP("XPDT",7816,"RTN","LA7VORUA",101,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",102,0)=" ; Build each line of interpretation as a NTE segment unless formatting flag (LA7FMT) indicates"
^XTMP("XPDT",7816,"RTN","LA7VORUA",103,0)=" ;  either formatted text or repetition."
^XTMP("XPDT",7816,"RTN","LA7VORUA",104,0)=" S LA7J=0"
^XTMP("XPDT",7816,"RTN","LA7VORUA",105,0)=" F  S LA7J=$O(^LAB(60,LA760,1,LA761,1,LA7J)) Q:'LA7J  D"
^XTMP("XPDT",7816,"RTN","LA7VORUA",106,0)=" . S LA7X=$G(^LAB(60,LA760,1,LA761,1,LA7J,0))"
^XTMP("XPDT",7816,"RTN","LA7VORUA",107,0)=" . I LA7X="""" S LA7X="" """
^XTMP("XPDT",7816,"RTN","LA7VORUA",108,0)=" . I LA7FMT S LA7TXT(LA7J)=LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORUA",109,0)=" . E  S LA7TXT=LA7X D NTE^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORUA",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",111,0)=" I LA7FMT>0,$D(LA7TXT) D NTE^LA7VORU1"
^XTMP("XPDT",7816,"RTN","LA7VORUA",112,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUA",113,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORUB")="0^29^B37430566^n/a"
^XTMP("XPDT",7816,"RTN","LA7VORUB",1,0)="LA7VORUB ;DALOI/JMC - Builder of HL7 Lab Results cont'd ;Jan 16, 2009"
^XTMP("XPDT",7816,"RTN","LA7VORUB",2,0)=" ;;5.2;AUTOMATED LAB INSTRUMENTS;**68**;Sep 27, 1994;Build 56"
^XTMP("XPDT",7816,"RTN","LA7VORUB",3,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",4,0)=" Q"
^XTMP("XPDT",7816,"RTN","LA7VORUB",5,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",6,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",7,0)="OBR ;Observation Request segment for Lab Order"
^XTMP("XPDT",7816,"RTN","LA7VORUB",8,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",9,0)=" N LA761,LA762,LA7DATA,LA7PLOBR,LA7RS,LA7RSDT,LA7SNM,LA7X,LA7Y,LADFINST,OBR"
^XTMP("XPDT",7816,"RTN","LA7VORUB",10,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",11,0)=" ; Retrieve placer's OBR information stored in #69.6"
^XTMP("XPDT",7816,"RTN","LA7VORUB",12,0)=" D RETOBR^LA7VHLU(LA(""SITE""),LA(""RUID""),LA(""NLT""),.LA7PLOBR)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",13,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",14,0)=" ; Retrieve ""ORUT"" node for this NLT from file #63"
^XTMP("XPDT",7816,"RTN","LA7VORUB",15,0)=" S LA7NLT(63)="""""
^XTMP("XPDT",7816,"RTN","LA7VORUB",16,0)=" I LA7NLT'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",17,0)=" . S LA7X=$O(^LR(LRDFN,LRSS,LRIDT,""ORUT"",""B"",LA7NLT,0))"
^XTMP("XPDT",7816,"RTN","LA7VORUB",18,0)=" . I LA7X>0 S LA7NLT(63)=$G(^LR(LRDFN,LRSS,LRIDT,""ORUT"",LA7X,0))"
^XTMP("XPDT",7816,"RTN","LA7VORUB",19,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",20,0)=" ; Default institution from Kernel"
^XTMP("XPDT",7816,"RTN","LA7VORUB",21,0)=" S LADFINST=+$$KSP^XUPARAM(""INST"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",22,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",23,0)=" ; Retreive accession info used below - accession area^accession date^accession number"
^XTMP("XPDT",7816,"RTN","LA7VORUB",24,0)=" S LA7Y=$$CHECKUID^LRWU4(LA(""HUID""))"
^XTMP("XPDT",7816,"RTN","LA7VORUB",25,0)=" I LA7Y S LA(""HUID"",68)=$P(LA7Y,""^"",2,4)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",26,0)=" E  S LA(""HUID"",68)="""""
^XTMP("XPDT",7816,"RTN","LA7VORUB",27,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",28,0)=" ; Initialize OBR segment"
^XTMP("XPDT",7816,"RTN","LA7VORUB",29,0)=" S OBR(0)=""OBR"""
^XTMP("XPDT",7816,"RTN","LA7VORUB",30,0)=" S OBR(1)=$$OBR1^LA7VOBR(.LA7OBRSN)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",31,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",32,0)=" ; Remote UID"
^XTMP("XPDT",7816,"RTN","LA7VORUB",33,0)=" M LA7X=LA(""RUID"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",34,0)=" S OBR(2)=$$OBR2^LA7VOBR(.LA7X,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",35,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",36,0)=" ; Host UID"
^XTMP("XPDT",7816,"RTN","LA7VORUB",37,0)=" K LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORUB",38,0)=" M LA7X=LA(""HUID"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",39,0)=" S OBR(3)=$$OBR3^LA7VOBR(.LA7X,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",40,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",41,0)=" ; Universal service ID, build from info stored in #69.6"
^XTMP("XPDT",7816,"RTN","LA7VORUB",42,0)=" K LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORUB",43,0)=" S LA7X="""""
^XTMP("XPDT",7816,"RTN","LA7VORUB",44,0)=" I $G(LA7PLOBR(""OBR-4""))'="""" S OBR(4)=$$CNVFLD^LA7VHLU3(LA7PLOBR(""OBR-4""),LA7PLOBR(""ECH""),LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",45,0)=" E  S OBR(4)=$$OBR4^LA7VOBR(LA7NLT,"""",LA7X,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",46,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",47,0)=" ; Collection D/T - only send date if d/t is inexact (2nd piece)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",48,0)=" K LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORUB",49,0)=" S LA7X=$P(LA763(0),""^"") S:$P(LA763(0),""^"",2) LA7X=$P(LA7X,""."")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",50,0)=" S OBR(7)=$$OBR7^LA7VOBR(LA7X)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",51,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",52,0)=" ; Specimen action code"
^XTMP("XPDT",7816,"RTN","LA7VORUB",53,0)=" ; If no OBR from PENDING ORDER file (#69.6) then assume added test."
^XTMP("XPDT",7816,"RTN","LA7VORUB",54,0)=" I $G(LA7INTYP)=10,$G(LA7PLOBR(""OBR-4""))="""" S OBR(11)=$$OBR11^LA7VOBR(""A"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",55,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",56,0)=" ; Infection Warning"
^XTMP("XPDT",7816,"RTN","LA7VORUB",57,0)=" S OBR(12)=$$OBR12^LA7VOBR(LRDFN,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",58,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",59,0)=" ; Lab Arrival Time"
^XTMP("XPDT",7816,"RTN","LA7VORUB",60,0)=" ; ""CH"" subscript does not store lab arrival time - attempt to retrieve from file #68."
^XTMP("XPDT",7816,"RTN","LA7VORUB",61,0)=" ; Other subscripts do store lab arrival time (date/time received)."
^XTMP("XPDT",7816,"RTN","LA7VORUB",62,0)=" I LA(""SUB"")?1(1""MI"",1""SP"",1""CY"",1""EM"") S OBR(14)=$$OBR14^LA7VOBR($P(LA763(0),""^"",10))"
^XTMP("XPDT",7816,"RTN","LA7VORUB",63,0)=" I LA(""SUB"")=""CH"",LA(""HUID"",68) D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",64,0)=" . S LA7X=$G(^LRO(68,$P(LA(""HUID"",68),""^""),1,$P(LA(""HUID"",68),""^"",2),1,$P(LA(""HUID"",68),""^"",3),3))"
^XTMP("XPDT",7816,"RTN","LA7VORUB",65,0)=" . I $P(LA7X,""^"",3) S OBR(14)=$$OBR14^LA7VOBR($P(LA7X,""^"",3))"
^XTMP("XPDT",7816,"RTN","LA7VORUB",66,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",67,0)=" ; Specimen source "
^XTMP("XPDT",7816,"RTN","LA7VORUB",68,0)=" S (LA761,LA762,LA7SNM)="""""
^XTMP("XPDT",7816,"RTN","LA7VORUB",69,0)=" I LA(""SUB"")?1(1""CH"",1""MI"") D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",70,0)=" . S LA761=$P(LA763(0),U,5)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",71,0)=" . I LA761="""" D CREATE^LA7LOG(27)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",72,0)=" . I LA(""SUB"")=""MI"" S LA762=$P(LA763(0),U,11)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",73,0)=" I LA7NVAF=1,LA(""SUB"")'=""CH"" S LA7SNM=1"
^XTMP("XPDT",7816,"RTN","LA7VORUB",74,0)=" S OBR(15)=$$OBR15^LA7VOBR(LA761,LA762,"""",LA7FS,LA7ECH,"""",LA7SNM)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",75,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",76,0)=" ; Ordering provider"
^XTMP("XPDT",7816,"RTN","LA7VORUB",77,0)=" K LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORUB",78,0)=" S (LA7X,LA7Y)="""""
^XTMP("XPDT",7816,"RTN","LA7VORUB",79,0)=" ; ""CH"" subscript stores requesting provider and requesting div/location."
^XTMP("XPDT",7816,"RTN","LA7VORUB",80,0)=" I LA(""SUB"")=""CH"" D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",81,0)=" . N LA7J"
^XTMP("XPDT",7816,"RTN","LA7VORUB",82,0)=" . S LA7J=$P(LA763(0),""^"",13)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",83,0)=" . I $P(LA7J,"";"",2)=""SC("" S LA7Y=$$GET1^DIQ(44,$P(LA7J,"";"")_"","",3,""I"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",84,0)=" . I $P(LA7J,"";"",2)=""DIC(4,"" S LA7Y=$P(LA7J,"";"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",85,0)=" . S LA7X=$P(LA763(0),""^"",10)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",86,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",87,0)=" ; Other subscripts only store requesting provider"
^XTMP("XPDT",7816,"RTN","LA7VORUB",88,0)=" I LA(""SUB"")?1(1""MI"",1""SP"",1""CY"",1""EM"") S LA7X=$P(LA763(0),""^"",7)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",89,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",90,0)=" I LA7Y="""" S LA7Y=LADFINST"
^XTMP("XPDT",7816,"RTN","LA7VORUB",91,0)=" S OBR(16)=$$ORC12^LA7VORC(LA7X,LA7Y,LA7FS,LA7ECH,$S($G(LA7INTYP)=30:2,$G(LA7NVAF)=1:0,1:1))"
^XTMP("XPDT",7816,"RTN","LA7VORUB",92,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",93,0)=" ; Placer Field #1 (remote auto-inst)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",94,0)=" ; Build from info stored in #69.6"
^XTMP("XPDT",7816,"RTN","LA7VORUB",95,0)=" I $G(LA7PLOBR(""OBR-18""))'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",96,0)=" . S OBR(18)=$$CHKDATA^LA7VHLU3(LA7PLOBR(""OBR-18""),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",97,0)=" ; Else build ""auto instrument"" if sending to VA facility"
^XTMP("XPDT",7816,"RTN","LA7VORUB",98,0)=" I $G(LA7PLOBR(""OBR-18""))="""",'LA7NVAF D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",99,0)=" . N LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORUB",100,0)=" . S LA7X(1)=LA(""AUTO-INST"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",101,0)=" . S OBR(18)=$$OBR18^LA7VOBR(.LA7X,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",102,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",103,0)=" ; Placer Field #2"
^XTMP("XPDT",7816,"RTN","LA7VORUB",104,0)=" I $G(LA7PLOBR(""OBR-19""))'="""" S OBR(19)=$$CHKDATA^LA7VHLU3(LA7PLOBR(""OBR-19""),LA7FS_LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",105,0)=" ; Else build collecting UID if sending to VA facility"
^XTMP("XPDT",7816,"RTN","LA7VORUB",106,0)=" I $G(LA7PLOBR(""OBR-19""))="""",'LA7NVAF,LA(""RUID"")'="""" D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",107,0)=" . K LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORUB",108,0)=" . S LA7X(7)=LA(""RUID"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",109,0)=" . S OBR(19)=$$OBR19^LA7VOBR(.LA7X,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",110,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",111,0)=" ; Filler Field #1"
^XTMP("XPDT",7816,"RTN","LA7VORUB",112,0)=" ; Send file #63 ien info - used by HDR to track patient/specimen"
^XTMP("XPDT",7816,"RTN","LA7VORUB",113,0)=" K LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORUB",114,0)=" S LA7X(1)=LA(""LRDFN""),LA7X(2)=LA(""SUB""),LA7X(3)=LA(""LRIDT"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",115,0)=" S OBR(20)=$$OBR20^LA7VOBR(.LA7X,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",116,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",117,0)=" ; Filler Field #2"
^XTMP("XPDT",7816,"RTN","LA7VORUB",118,0)=" ; Send Accession/test info - used by DSS to track patient/specimen"
^XTMP("XPDT",7816,"RTN","LA7VORUB",119,0)=" ; LRACC^LRAA^LRAD^LRAN^Accession Area^Area Abbreviation^NLT"
^XTMP("XPDT",7816,"RTN","LA7VORUB",120,0)=" K LA7X"
^XTMP("XPDT",7816,"RTN","LA7VORUB",121,0)=" S LA7X(1)=$P(LA763(0),""^"",6),LA7X(7)=LA7NLT"
^XTMP("XPDT",7816,"RTN","LA7VORUB",122,0)=" S LA7Y=LA(""HUID"",68)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",123,0)=" I LA7Y D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",124,0)=" . N I"
^XTMP("XPDT",7816,"RTN","LA7VORUB",125,0)=" . F I=1,2,3 S LA7X(I+1)=$P(LA7Y,""^"",I)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",126,0)=" . S LA7X(5)=$P($G(^LRO(68,$P(LA7Y,""^""),0)),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",127,0)=" . S LA7X(6)=$P($G(^LRO(68,$P(LA7Y,""^""),0)),""^"",11)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",128,0)=" S OBR(21)=$$OBR20^LA7VOBR(.LA7X,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",129,0)=" K LA7X,LAY7"
^XTMP("XPDT",7816,"RTN","LA7VORUB",130,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",131,0)=" ; Date Report Completed/Report status/Responsible person"
^XTMP("XPDT",7816,"RTN","LA7VORUB",132,0)=" ; Determine report date and status from 0 node."
^XTMP("XPDT",7816,"RTN","LA7VORUB",133,0)=" S LA7RSDT=$P(LA763(0),""^"",3),(LA7PRI,LA7RS)="""""
^XTMP("XPDT",7816,"RTN","LA7VORUB",134,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",135,0)=" ; If CYEMSP subscripts then check for corrected report"
^XTMP("XPDT",7816,"RTN","LA7VORUB",136,0)=" I LA(""SUB"")?1(1""SP"",1""CY"",1""EM"") D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",137,0)=" . S LA7RSDT=$P(LA763(0),""^"",11),LA7PRI=$P(LA763(0),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",138,0)=" . I LA7RSDT S LA7RS=""F"""
^XTMP("XPDT",7816,"RTN","LA7VORUB",139,0)=" . I $P(LA763(0),""^"",15) S LA7RS=""C"""
^XTMP("XPDT",7816,"RTN","LA7VORUB",140,0)=" . I $G(LRSB)=1.2,$G(LA7SR) S LA7RSDT=+$G(^LR(LRDFN,LA(""SUB""),LRIDT,LRSB,LA7SR,0),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",141,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",142,0)=" ; If MI subscript then also check various sections and audit subfile for corrected report"
^XTMP("XPDT",7816,"RTN","LA7VORUB",143,0)=" I LA(""SUB"")=""MI"" D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",144,0)=" . S LA7PRI=$P(LA763(0),""^"",4)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",145,0)=" . S LA7X=$S(LRSB=11:1,LRSB=11.6:1,LRSB=12:1,LRSB=14:5,LRSB=16:5,LRSB=18:8,LRSB=20:8,LRSB=22:11,LRSB=26:11,LRSB=24:11,LRSB=33:16,LRSB=36:16,1:0)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",146,0)=" . S LA7Y=$G(^LR(LRDFN,""MI"",LRIDT,LA7X),""^"")"
^XTMP("XPDT",7816,"RTN","LA7VORUB",147,0)=" . I $P(LA7Y,""^"") S LA7RSDT=$P(LA7Y,""^""),LA7RS=$P(LA7Y,""^"",2),LA7PRI=$P(LA7Y,""^"",3)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",148,0)=" . I $P(LA763(0),""^"",9)=1 S LA7RS=""C"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORUB",149,0)=" . I '$D(^LR(LRDFN,""MI"",LRIDT,32)) Q"
^XTMP("XPDT",7816,"RTN","LA7VORUB",150,0)=" . S I=0"
^XTMP("XPDT",7816,"RTN","LA7VORUB",151,0)=" . F  S I=$O(^LR(LRDFN,""MI"",LRIDT,32,I)) Q:'I  I $P(^(I,0),""^"",4)>1,LA7RS=""F"" S LA7RS=""C"" Q"
^XTMP("XPDT",7816,"RTN","LA7VORUB",152,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",153,0)=" ; Also check for individual test status on ""ORUT"" node in file #63"
^XTMP("XPDT",7816,"RTN","LA7VORUB",154,0)=" I $P(LA7NLT(63),""^"",10) S LA7RS=$P(LA7NLT(63),""^"",10)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",155,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VORUB",156,0)=" ; Date Report Completed"
^XTMP("XPDT",7816,"RTN","LA7VORUB",157,0)=" I LA7RSDT S OBR(22)=$$OBR22^LA7VOBR(LA7RSDT)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",158,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",159,0)=" ; Diagnostic service id"
^XTMP("XPDT",7816,"RTN","LA7VORUB",160,0)=" S OBR(24)=$$OBR24^LA7VOBR(LA(""SUB"")_""^""_$G(LRSB))"
^XTMP("XPDT",7816,"RTN","LA7VORUB",161,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",162,0)=" ; Result status"
^XTMP("XPDT",7816,"RTN","LA7VORUB",163,0)=" I LA7RS'="""" S OBR(25)=$$OBR25^LA7VOBR(LA7RS)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",164,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",165,0)=" ; Parent Result and Parent"
^XTMP("XPDT",7816,"RTN","LA7VORUB",166,0)=" I $D(LA7PARNT) D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",167,0)=" . S OBR(26)=$$OBR26^LA7VOBR(LA7PARNT(1),LA7PARNT(2),LA7PARNT(3),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",168,0)=" . S OBR(29)=$$OBR29^LA7VOBR(LA(""RUID""),LA(""HUID""),LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",169,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",170,0)=" ; Principle result interpreter"
^XTMP("XPDT",7816,"RTN","LA7VORUB",171,0)=" I LA(""SUB"")?1(1""MI"",1""SP"",1""CY"",1""EM"") D"
^XTMP("XPDT",7816,"RTN","LA7VORUB",172,0)=" . I LA(""SUB"")=""MI"" S LA7X=$P(LA763(0),""^"",4)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",173,0)=" . E  S LA7X=$P(LA763(0),""^"",2)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",174,0)=" . S OBR(32)=$$OBR32^LA7VOBR(LA7X,LADFINST,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",175,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VORUB",176,0)=" ; Assistant result interpreter"
^XTMP("XPDT",7816,"RTN","LA7VORUB",177,0)=" I LA(""SUB"")?1(1""SP"",1""EM""),$P(LA763(0),""^"",4) S OBR(33)=$$OBR33^LA7VOBR($P(LA763(0),""^"",4),LADFINST,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",178,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VORUB",179,0)=" ; Technician"
^XTMP("XPDT",7816,"RTN","LA7VORUB",180,0)=" I LA(""SUB"")?1(1""CY"",1""EM""),$P(LA763(0),""^"",4) S OBR(34)=$$OBR34^LA7VOBR($P(LA763(0),""^"",4),LADFINST,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",181,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VORUB",182,0)=" ; Typist - VistA stores as free text"
^XTMP("XPDT",7816,"RTN","LA7VORUB",183,0)=" I LA(""SUB"")?1(1""SP"",1""CY"",1""EM""),$P(LA763(0),""^"",9)'="""" S OBR(35)=$$OBR35^LA7VOBR($P(LA763(0),""^"",9),LADFINST,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",184,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",185,0)=" ; Procedure code - use Order NLT code"
^XTMP("XPDT",7816,"RTN","LA7VORUB",186,0)=" S OBR(44)=$$OBR44^LA7VOBR(LA7NLT,LA7FS,LA7ECH)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",187,0)=" ; "
^XTMP("XPDT",7816,"RTN","LA7VORUB",188,0)=" D BUILDSEG^LA7VHLU(.OBR,.LA7DATA,LA7FS)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",189,0)=" D FILESEG^LA7VHLU(GBL,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",190,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",191,0)=" ; Check for flag to only build message but do not file"
^XTMP("XPDT",7816,"RTN","LA7VORUB",192,0)=" I '$G(LA7NOMSG) D FILE6249^LA7VHLU(LA76249,.LA7DATA)"
^XTMP("XPDT",7816,"RTN","LA7VORUB",193,0)=" ;"
^XTMP("XPDT",7816,"RTN","LA7VORUB",194,0)=" Q"
^XTMP("XPDT",7816,"UP",63,63.02,-1)="63^EM"
^XTMP("XPDT",7816,"UP",63,63.02,0)="63.02"
^XTMP("XPDT",7816,"UP",63,63.08,-1)="63^SP"
^XTMP("XPDT",7816,"UP",63,63.08,0)="63.08"
^XTMP("XPDT",7816,"UP",63,63.09,-1)="63^CY"
^XTMP("XPDT",7816,"UP",63,63.09,0)="63.09"
^XTMP("XPDT",7816,"VER")="8.0^22.0"
^XTMP("XPDT",7816,"^DD",62.48,62.48,0)="FIELD^^90^12"
^XTMP("XPDT",7816,"^DD",62.48,62.48,0,"DDA")="N"
^XTMP("XPDT",7816,"^DD",62.48,62.48,0,"DT")="3071019"
^XTMP("XPDT",7816,"^DD",62.48,62.48,0,"IX","B",62.48,.01)=""
^XTMP("XPDT",7816,"^DD",62.48,62.48,0,"IX","C",62.483,.01)=""
^XTMP("XPDT",7816,"^DD",62.48,62.48,0,"NM","LA7 MESSAGE PARAMETER")=""
^XTMP("XPDT",7816,"^DD",62.48,62.48,0,"PT",62.4,8)=""
^XTMP("XPDT",7816,"^DD",62.48,62.48,0,"PT",62.49,.5)=""
^XTMP("XPDT",7816,"^DD",62.48,62.48,0,"PT",62.9,.07)=""
^XTMP("XPDT",7816,"^DD",62.48,62.48,0,"VRPK")="LA"
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,0)="CONFIGURATION^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X"
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,1,0)="^.1"
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,1,1,0)="62.48^B"
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,1,1,1)="S ^LAHM(62.48,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,1,1,2)="K ^LAHM(62.48,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,3)="Answer must be 3-30 characters in length."
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,21,0)="^^4^4^2970611^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,21,1,0)="This field contains the descriptive name for all Lab Messaging "
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,21,2,0)="configurations.  Each external partner that the Lab system exchanges"
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,21,3,0)="messages with should have an entry in the file, e.g. OERR, Universal "
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,21,4,0)="Interface."
^XTMP("XPDT",7816,"^DD",62.48,62.48,.01,"DT")="2940425"
^XTMP("XPDT",7816,"^DD",62.48,62.48,1,0)="PROTOCOL^S^HL7:HEALTH LEVEL SEVEN;X12:ANSI X.12;1238:ASTM 1238;1381:ASTM 1381;1394:ASTM 1394;LOCAL:LOCAL;^0;2^Q"
^XTMP("XPDT",7816,"^DD",62.48,62.48,1,3)="Enter the protocol name that best fits this configuration."
^XTMP("XPDT",7816,"^DD",62.48,62.48,1,21,0)="^^2^2^2970611^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,1,21,1,0)="This field should contain the type of messages that are used by this"
^XTMP("XPDT",7816,"^DD",62.48,62.48,1,21,2,0)="configuration.  This field is primarily for documentation."
^XTMP("XPDT",7816,"^DD",62.48,62.48,1,"DT")="2950122"
^XTMP("XPDT",7816,"^DD",62.48,62.48,2,0)="STATUS^S^1:ACTIVE;0:INACTIVE;^0;3^Q"
^XTMP("XPDT",7816,"^DD",62.48,62.48,2,3)="Enter ""Active"" to allow this configuration to send and receive messages."
^XTMP("XPDT",7816,"^DD",62.48,62.48,2,21,0)="^^1^1^2970611^^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,2,21,1,0)="This field is used to turn this configuration on or off."
^XTMP("XPDT",7816,"^DD",62.48,62.48,2,"DT")="2940425"
^XTMP("XPDT",7816,"^DD",62.48,62.48,3,0)="GRACE PERIOD FOR MESSAGES^NJ2,0^^0;6^K:+X'=X!(X>31)!(X<1)!(X?.E1"".""1N.N) X"
^XTMP("XPDT",7816,"^DD",62.48,62.48,3,3)="Type a Number between 1 and 31, 0 Decimal Digits."
^XTMP("XPDT",7816,"^DD",62.48,62.48,3,21,0)="^^7^7^2970702^^^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,3,21,1,0)="Grace period determines the number of days that messages for this"
^XTMP("XPDT",7816,"^DD",62.48,62.48,3,21,2,0)="configuration are kept on the system before purging when the message"
^XTMP("XPDT",7816,"^DD",62.48,62.48,3,21,3,0)="status is ""purgable"".  If this field is left blank, the system assumes 3"
^XTMP("XPDT",7816,"^DD",62.48,62.48,3,21,4,0)="days.  These messages are found in the LA7 MESSAGE QUEUE file (#62.49)."
^XTMP("XPDT",7816,"^DD",62.48,62.48,3,21,5,0)="When messages have status of ""error"" they remain on the system until their"
^XTMP("XPDT",7816,"^DD",62.48,62.48,3,21,6,0)="corresponding error message is removed from the XTMP global by a KERNEL"
^XTMP("XPDT",7816,"^DD",62.48,62.48,3,21,7,0)="cleanup task.  The messages then become ""purgable""."
^XTMP("XPDT",7816,"^DD",62.48,62.48,3,"DT")="2970305"
^XTMP("XPDT",7816,"^DD",62.48,62.48,4,0)="LOG ERRORS^S^0:OFF;1:ON;^0;4^Q"
^XTMP("XPDT",7816,"^DD",62.48,62.48,4,3)="Answer ""Yes"" to log errors in ^XTMP."
^XTMP("XPDT",7816,"^DD",62.48,62.48,4,21,0)="^^3^3^2970611^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,4,21,1,0)="If turned on, errors or exceptional conditions that occur during message"
^XTMP("XPDT",7816,"^DD",62.48,62.48,4,21,2,0)="processing are stored in the ^XTMP global for review.  To review the"
^XTMP("XPDT",7816,"^DD",62.48,62.48,4,21,3,0)="log, in programmer mode, type D PRINT^LA7LOG."
^XTMP("XPDT",7816,"^DD",62.48,62.48,4,"DT")="2970204"
^XTMP("XPDT",7816,"^DD",62.48,62.48,5,0)="PROCESS IN^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM"
^XTMP("XPDT",7816,"^DD",62.48,62.48,5,3)="This is Standard MUMPS code."
^XTMP("XPDT",7816,"^DD",62.48,62.48,5,9)="@"
^XTMP("XPDT",7816,"^DD",62.48,62.48,5,21,0)="^^4^4^2970611^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,5,21,1,0)="This field is executable MUMPS code. It should contain a call to an"
^XTMP("XPDT",7816,"^DD",62.48,62.48,5,21,2,0)="application routine that will process the incoming message.  For a"
^XTMP("XPDT",7816,"^DD",62.48,62.48,5,21,3,0)="Universal Interface setup, it should contain the call"
^XTMP("XPDT",7816,"^DD",62.48,62.48,5,21,4,0)="D QUE^LA7UIIN."
^XTMP("XPDT",7816,"^DD",62.48,62.48,5,"DT")="2940507"
^XTMP("XPDT",7816,"^DD",62.48,62.48,6,0)="PROCESS DOWNLOAD^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM"
^XTMP("XPDT",7816,"^DD",62.48,62.48,6,3)="This is Standard MUMPS code."
^XTMP("XPDT",7816,"^DD",62.48,62.48,6,9)="@"
^XTMP("XPDT",7816,"^DD",62.48,62.48,6,20,0)="^.3LA^^0"
^XTMP("XPDT",7816,"^DD",62.48,62.48,6,21,0)="^^4^4^2970611^^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,6,21,1,0)="This field contains executable MUMPS code.  It should contain the"
^XTMP("XPDT",7816,"^DD",62.48,62.48,6,21,2,0)="call point in a routine that will process building a message to be"
^XTMP("XPDT",7816,"^DD",62.48,62.48,6,21,3,0)="sent to the receiving system.  For a Universal Interface configuration"
^XTMP("XPDT",7816,"^DD",62.48,62.48,6,21,4,0)="it should contain the call D EN^LA7UID1."
^XTMP("XPDT",7816,"^DD",62.48,62.48,6,"DT")="2940516"
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,0)="HL7 NON-DHCP APPLICATION^P770'^HL(770,^0;5^Q"
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,3)="Used to call the HL7 package with the appropriate remote system identifier."
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,21,0)="^^3^3^2970611^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,21,1,0)="This field is a pointer to the HL7 NON-DHCP APPLICATION PARAMETER file"
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,21,2,0)="(#770).  The field is used by the Universal Interface to create an Health"
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,21,3,0)="Level Seven message using the Vista HL7 v1.5 package."
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,23,0)="^^4^4^2970611^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,23,1,0)="The variable HLNDAP is often required by the HL7 package.  This is a "
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,23,2,0)="pointer to the HL7 NON-DHCP APPLICATION PARAMETER file (#770).  This field"
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,23,3,0)="is a pointer to that file and can be used in messaging building routines"
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,23,4,0)="to set the HLNDAP variable."
^XTMP("XPDT",7816,"^DD",62.48,62.48,7,"DT")="2940516"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,0)="MULTIPLE ORDERS^S^0:MULTIPLE PATIENTS;1:SINGLE PATIENT;2:SINGLE ORDER;^0;8^Q"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,3)="Select if multiple/single patients/orders should be sent in a single message. See description (??) for additional help."
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,0)="^^25^25^3010831^^^^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,1,0)="Determines when building a HL7 message if message should contain only"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,2,0)="one patient/order or multiple patients/orders."
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,3,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,4,0)="Default is multiple patients per message if possible."
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,5,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,6,0)="This allows site to configure message building when communicating with"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,7,0)="a non-VA system that can not handle a message that has more than one"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,8,0)="patient in the message. It applies to both order (ORM) and result (ORU)"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,9,0)="messages."
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,10,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,11,0)="When communicating with a VA facility this field can be left blank"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,12,0)="(default) or set to 0 - MULTIPLE PATIENTS"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,13,0)=""
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,14,0)="If the receiving system can only accept one patient per HL7 message"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,15,0)="then select 1 - SINGLE PATIENT. This will place multiple orders or"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,16,0)="results for multiple orders in one message but only one patient will"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,17,0)="be contained in the message."
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,18,0)=""
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,19,0)="If the receiving system can only accept one order per HL7 message then"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,20,0)="select 2 - SINGLE ORDER. This will place in the message one order or"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,21,0)="the results associated with one order for a single patient"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,22,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,23,0)="Note: An order in the VA is considered those tests found on one"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,24,0)="accession. What the VA considers as an accession other non-VA systems"
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,21,25,0)="may refer to as an order."
^XTMP("XPDT",7816,"^DD",62.48,62.48,10,"DT")="3010831"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,0)="INTERFACE TYPE^S^1:LAB UI;10:LEDI;20:POC;21:POCA;30:HDR;40:OCS;99:OTHER;^0;9^Q"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,3)="Enter the purpose for this messaging interface."
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,0)="^.001^41^41^3071022^^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,1,0)="This field determines how and for what purpose this configuration is"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,2,0)="used. It allows the laboratory software to generate, handle and"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,3,0)="process messages."
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,4,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,5,0)="LAB UI - Used to identify configurations that are for processing"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,6,0)="         laboratory automated instrument data via a generic interface"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,7,0)="         manager."
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,8,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,9,0)="  LEDI - Designate entries involved with Laboratory Electronic Data"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,10,0)="         Interchange (LEDI). Used to identify interfaces involved in"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,11,0)="         the generation, transmission and processing of HL7 order (ORM)"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,12,0)="         and result (ORU) messages involving reference laboratory"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,13,0)="         testing between VistA and other VistA systems, commercial"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,14,0)="         reference laboratories, DoD laboratories and civilian"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,15,0)="         institutions."
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,16,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,17,0)="   POC - Point of Care (POC) interface. These interfaces transmit"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,18,0)="         laboratory test results for which there is no pre-existing"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,19,0)="         VistA laboratory order. VistA creates an order as part of"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,20,0)="         result processing and storage."
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,21,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,22,0)="  POCA - Point of Care interface that subscribes to HL7 patient"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,23,0)="         demographic (ADT) messages from VistA. Used by POC interfaces"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,24,0)="         that subscribe to patient information from VistA to maintain"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,25,0)="         the POC's patient database."
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,26,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,27,0)="   HDR - Designates interface to the VA Health Data Repository (HDR)."
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,28,0)="         And those systems which subscribe to VistA Lab HL7 Result (ORU)"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,29,0)="         messages broadcast by VistA when lab results are made available  "
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,30,0)="         within VistA. Examples are COTS clinical decision support"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,31,0)="         systems."
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,32,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,33,0)="   OCS - Order Collection System. Interfaces involved in phlebotomy"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,34,0)="         and other specimen collection systems. Information regarding"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,35,0)="         lab orders and specimen requirement are transmitted to an"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,36,0)="         external system which assists in the specimen collection"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,37,0)="         and updates VistA Lab with information related to the specimen"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,38,0)="         and the related order/accession."
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,39,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,40,0)=" OTHER - Designate other non-laboratory interfaces that utilize the"
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,21,41,0)="         Laboratory package."
^XTMP("XPDT",7816,"^DD",62.48,62.48,11,"DT")="3071019"
^XTMP("XPDT",7816,"^DD",62.48,62.48,20,0)="ALERT CONDITION^62.481S^^20;0"
^XTMP("XPDT",7816,"^DD",62.48,62.48,20,21,0)="^^3^3^2970827^^^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,20,21,1,0)="This field allows the user to identify whether to receive alerts when"
^XTMP("XPDT",7816,"^DD",62.48,62.48,20,21,2,0)="there are new results, new orders or when an error is logged to the"
^XTMP("XPDT",7816,"^DD",62.48,62.48,20,21,3,0)="^XTMP global."
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,0)="REMOTE SYSTEM ID^62.483A^^90;0"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,0)="^^45^45^2970611^"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,1,0)="This field is used to locate the correct configuration in this file when"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,2,0)="a message is received from a remote system. Most messaging protocols"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,3,0)="contain information about the system that originated the message and the"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,4,0)="system that is the destination. Since there can be several senders and"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,5,0)="receivers, this field can be used to determine the correct receiver by"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,6,0)="using a special lookup on this field. The Universal Interface utilizes"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,7,0)="this field in the following manner."
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,8,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,9,0)="The VISTA Health Level Seven (HL7) package requires that every message"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,10,0)="must have four fields in the message header so that it can determine"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,11,0)="the application route for the message. Those four fields are called"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,12,0)="Sending Application, Sending Facility, Receiving Application, and"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,13,0)="Receiving Facility. The HL7 software must find values for each of these"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,14,0)="fields in the message within the HL7 package files. The fields must match"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,15,0)="in the following way."
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,16,0)=" For HL7 v1.5 interfaces"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,17,0)=" Sending Application = the NAME field (#.01) in  the HL7 NON-DHCP"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,18,0)="  APPLICATION PARAMETER file (#770)"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,19,0)=" Sending Facility = the NON-DHCP FACILITY NAME field (#3) in File 770"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,20,0)=" Receiving Application = the NAME field (#.01) in the HL7 APPLICATION"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,21,0)="  PARAMETER file (#771)"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,22,0)=" Receiving Facility = the DHCP STATION NUMBER field (#2) in File 770"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,23,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,24,0)=" For HL7 v1.6 interfaces"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,25,0)=" Sending Application = the NAME field (#.01) in the HL7 APPLICATION "
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,26,0)="  PARAMETER file (#771)"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,27,0)=" Sending Facility = the FACILITY NAME field (#3) in File 771"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,28,0)=" Receiving Application = the NAME field (#.01) in the HL7 APPLICATION  "
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,29,0)="  PARAMETER file (#771)"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,30,0)=" Receiving Facility = the FACILITY NAME field (#3) in File 771"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,31,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,32,0)="For the Universal Interface, all four of those fields should be entered"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,33,0)="into this multiple field, exactly as they are entered in the HL7 fields"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,34,0)="listed above, including upper and lower case characters. No spaces should"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,35,0)="be entered between the field values. An example of a Universal Interface"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,36,0)="value for this field is listed below."
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,37,0)="LAB INTERFACEInstrument ManagerLA AUTO INST695 "
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,38,0)="Where LAB INTERFACE is the NAME in File 770, Instrument Manager is"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,39,0)="the NON-DHCP FACILITY NAME in File 770, LA AUTO INST is the NAME in"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,40,0)="File 771, and 695 is the DHCP STATION NUMBER in File 770."
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,41,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,42,0)="When an HL7 message comes in, these four fields are taken out of the"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,43,0)="message, concatenated together, and a lookup is done on the ""C"" cross"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,44,0)="reference to find this configuration and its associated parameters. The"
^XTMP("XPDT",7816,"^DD",62.48,62.48,90,21,45,0)="processing routine can then continue to process the data. "
^XTMP("XPDT",7816,"^DD",62.48,62.481,0)="ALERT CONDITION SUB-FIELD^^.02^2"
^XTMP("XPDT",7816,"^DD",62.48,62.481,0,"DT")="2970827"
^XTMP("XPDT",7816,"^DD",62.48,62.481,0,"IX","B",62.481,.01)=""
^XTMP("XPDT",7816,"^DD",62.48,62.481,0,"NM","ALERT CONDITION")=""
^XTMP("XPDT",7816,"^DD",62.48,62.481,0,"UP")="62.48"
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,0)="ALERT CONDITION^*S^1:NEW RESULTS;2:ERROR ON MESSAGE;3:ORDERS RECEIVED;^0;1^Q"
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,1,0)="^.1"
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,1,1,0)="62.481^B"
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,1,1,1)="S ^LAHM(62.48,DA(1),20,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,1,1,2)="K ^LAHM(62.48,DA(1),20,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,3)="Enter ""1"" to receive alerts for new results, a ""2"" to receive alerts for errors during processing. and ""3"" when orders are received."
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,12)="Error on message alert may only be selected if Field #4, LOG ERRORS,is set to ""ON""."
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,12.1)="S DIC(""S"")=""I $S(Y=2&($P(^LAHM(62.48,DA(1),0),U,4)'=1):0,1:1)"""
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,21,0)="^^2^2^2970827^^^^"
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,21,1,0)="This field allows the user to identify whether to receive alerts when"
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,21,2,0)="there are new results and when an error is logged to the ^XTMP global."
^XTMP("XPDT",7816,"^DD",62.48,62.481,.01,"DT")="2970827"
^XTMP("XPDT",7816,"^DD",62.48,62.481,.02,0)="MAIL GROUP^RP3.8'X^XMB(3.8,^0;2^K:$L(X)>30!($L(X)<1) X I $D(X) S DIC(0)=""EMQ"" S X=$P(Y,U,2),DIC=DIE K:Y<1 X"
^XTMP("XPDT",7816,"^DD",62.48,62.481,.02,3)="Enter the Mail Group that will receive the alert condition messages."
^XTMP("XPDT",7816,"^DD",62.48,62.481,.02,21,0)="^^2^2^2970702^^^"
^XTMP("XPDT",7816,"^DD",62.48,62.481,.02,21,1,0)="This field contains a pointer to the MAIL GROUP file (#3.8).  The group is"
^XTMP("XPDT",7816,"^DD",62.48,62.481,.02,21,2,0)="used to identify who will receive the alert condition messages."
^XTMP("XPDT",7816,"^DD",62.48,62.481,.02,"DT")="2970219"
^XTMP("XPDT",7816,"^DD",62.48,62.483,0)="REMOTE SYSTEM ID SUB-FIELD^^.01^1"
^XTMP("XPDT",7816,"^DD",62.48,62.483,0,"DT")="2940425"
^XTMP("XPDT",7816,"^DD",62.48,62.483,0,"IX","B",62.483,.01)=""
^XTMP("XPDT",7816,"^DD",62.48,62.483,0,"NM","REMOTE SYSTEM ID")=""
^XTMP("XPDT",7816,"^DD",62.48,62.483,0,"UP")="62.48"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,0)="REMOTE SYSTEM ID^MF^^0;1^K:X[""""""""!($A(X)=45) X I $D(X) K:$L(X)>60!($L(X)<1) X"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,0)="^.1"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,1,0)="62.483^B"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,1,1)="S ^LAHM(62.48,DA(1),90,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,1,2)="K ^LAHM(62.48,DA(1),90,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,0)="62.48^C^MUMPS"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,1)="N Y X ^%ZOSF(""LPC"") S ^LAHM(62.48,""C"",$E(X,1,27)_Y,DA(1))="""""
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,2)="N Y X ^%ZOSF(""LPC"") K ^LAHM(62.48,""C"",$E(X,1,27)_Y,DA(1))"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,"%D",0)="^^8^8^2970613^"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,"%D",1,0)="This cross reference is used to identify the incoming messages to a"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,"%D",2,0)="specific LA7 MESSAGE PARAMETER file (#62.48) entry.  The cross reference"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,"%D",3,0)="is checked against the third (Sending Application), fourth (Sending"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,"%D",4,0)="facility), fifth (Receiving Application), and sixth (Receiving facility)"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,"%D",5,0)="sequences in the HL7 message header (MSH).  The format of the cross"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,"%D",6,0)="reference is as follows"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,"%D",7,0)="  X ^%ZOSF(""LPC"")  S ^LAHM(62.48,""C"",$E(REMOTE SYSTEM"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,"%D",8,0)="ID,1,27)_Y,CONFIGURATION)="""""
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,1,2,"DT")="2940429"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,3)="Answer must be 1-60 characters in length."
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,0)="^^32^32^2970611^"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,1,0)="For the Universal Interface, the following four fields should be"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,2,0)="entered into this REMOTE SYSTEM ID field."
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,3,0)=" Sending Application = the NAME field (#.01) in File 770"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,4,0)=" Sending Facility = the NON-DHCP FACILITY NAME field (#3) in File 770"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,5,0)=" Receiving Application = the NAME field (#.01) in the HL7 APPLICATION"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,6,0)="  PARAMETER file (#771)"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,7,0)=" Receiving Facility = the DHCP STATION NUMBER field (#2) in File 770"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,8,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,9,0)="For interfaces that use the Vista Health Level Seven (HL7) v1.6 package,"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,10,0)="the following four fields should beentered into this REMOTE SYSTEM ID"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,11,0)="field."
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,12,0)=" Sending Application = the NAME field (#.01) in the HL7 APPLICATION  "
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,13,0)="  PARAMETER file (#771)"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,14,0)=" Sending Facility = the FACILITY NAME field (#3) in File 771"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,15,0)=" Receiving Application = the NAME field (#.01) in the HL7 APPLICATION  "
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,16,0)="  PARAMETER file (#771)"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,17,0)=" Receiving Facility = the FACILITY NAME field (#3) in File 771"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,18,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,19,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,20,0)="The data from these fields should be entered exactly as it is found in"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,21,0)="the HL7 fields listed above, including upper and lower case characters."
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,22,0)="No spaces should be entered between the field values."
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,23,0)="An example of a Universal Interface value for this field is listed below."
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,24,0)="LAB INTERFACEInstrument ManagerLA AUTO INST695 "
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,25,0)="Where LAB INTERFACE is the NAME in File 770, Instrument Manager is"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,26,0)="the NON-DHCP FACILITY NAME in File 770, LA AUTO INST is the NAME in"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,27,0)="File 771, and 695 is the DHCP STATION NUMBER in File 770."
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,28,0)=" "
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,29,0)="When an HL7 message comes in, these four fields are taken out of the"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,30,0)="message, concatenated together, and a lookup is done on the ""C"" cross"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,31,0)="reference to find this configuration and its associated parameters. The"
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,21,32,0)="processing routine can then continue to process the data. "
^XTMP("XPDT",7816,"^DD",62.48,62.483,.01,"DT")="2940429"
^XTMP("XPDT",7816,"^DD",62.485,62.485,0)="FIELD^^2^4"
^XTMP("XPDT",7816,"^DD",62.485,62.485,0,"DDA")="N"
^XTMP("XPDT",7816,"^DD",62.485,62.485,0,"DT")="2970205"
^XTMP("XPDT",7816,"^DD",62.485,62.485,0,"IX","B",62.485,.01)=""
^XTMP("XPDT",7816,"^DD",62.485,62.485,0,"NM","LA7 MESSAGE LOG BULLETINS")=""
^XTMP("XPDT",7816,"^DD",62.485,62.485,0,"VRPK")="LA"
^XTMP("XPDT",7816,"^DD",62.485,62.485,.01,0)="CODE^RNJ7,0X^^0;1^K:+X'=X!(X>9999999)!(X<$S($D(DIFROM):1,1:1000))!(X?.E1"".""1N.N) X S:$D(X) DINUM=X"
^XTMP("XPDT",7816,"^DD",62.485,62.485,.01,1,0)="^.1"
^XTMP("XPDT",7816,"^DD",62.485,62.485,.01,1,1,0)="62.485^B"
^XTMP("XPDT",7816,"^DD",62.485,62.485,.01,1,1,1)="S ^LAHM(62.485,""B"",$E(X,1,30),DA)="""""
^XTMP("XPDT",7816,"^DD",62.485,62.485,.01,1,1,2)="K ^LAHM(62.485,""B"",$E(X,1,30),DA)"
^XTMP("XPDT",7816,"^DD",62.485,62.485,.01,3)="Type a Number between 1000 and 9999999, 0 Decimal Digits."
^XTMP("XPDT",7816,"^DD",62.485,62.485,.01,21,0)="^^3^3^2970612^^"
^XTMP("XPDT",7816,"^DD",62.485,62.485,.01,21,1,0)="This field contains a number between 1 and 9999999 that uniquely"
^XTMP("XPDT",7816,"^DD",62.485,62.485,.01,21,2,0)="identifies an error or exceptional condition.  Numbers below 999 are"
^XTMP("XPDT",7816,"^DD",62.485,62.485,.01,21,3,0)="reserved for package use only."
^XTMP("XPDT",7816,"^DD",62.485,62.485,.01,"DT")="2950122"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,0)="TEXT^RF^^0;2^K:$L(X)>160!($L(X)<1) X"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,3)="Answer must be 1-160 characters in length."
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,21,0)="^^3^3^2970612^"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,21,1,0)="This field holds the text description of the error or exceptional"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,21,2,0)="condition.  This field is used to create an error or exceptional condition"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,21,3,0)="display in the ^XTMP global."
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,23,0)="^^9^9^2970612^"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,23,1,0)="This field is used to create error or exceptional condition displays in"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,23,2,0)="the ^XTMP global.  The text description should contain useful information"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,23,3,0)="about the message in the LA7 MESSAGE QUEUE file (#62.49).  The information"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,23,4,0)="can be added to the text by using the ""|"" character and the LA7TXT()"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,23,5,0)="array."
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,23,6,0)=" "
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,23,7,0)="Example Text: Message # |1| did not contain a PID segment."
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,23,8,0)="Array value: LA7TXT(1)=123"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,23,9,0)="^XTMP: Message # 123 did not contain a PID segment."
^XTMP("XPDT",7816,"^DD",62.485,62.485,1,"DT")="2940427"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1.3,0)="SEND ALERT^S^0:NO;1:YES;^0;3^Q"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1.3,3)="Determines if alert is sent when a message is processed with this error. Alerts must also be turned on and mail group designated in file #62.48."
^XTMP("XPDT",7816,"^DD",62.485,62.485,1.3,21,0)="^^4^4^2970612^"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1.3,21,1,0)="This field is used to flag those errors which can generate an alert to a"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1.3,21,2,0)="site selectable mail group whenever this error occurs. The site needs to"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1.3,21,3,0)="designate a mail group in the LA7 MESSAGE PARAMETER file (#62.48) under"
^XTMP("XPDT",7816,"^DD",62.485,62.485,1.3,21,4,0)="the ALERT CONDITION field (#20)."
^XTMP("XPDT",7816,"^DD",62.485,62.485,1.3,"DT")="2970205"
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,0)="BUILD LOGIC^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM"
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,3)="This is Standard MUMPS code."
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,9)="@"
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,21,0)="^^8^8^2970612^"
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,21,1,0)="This is standard MUMPS code that is executed to log the text"
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,21,2,0)="description error into the ^XTMP global.  The MUMPS code should set the"
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,21,3,0)="LA7TXT() array to feel in the fields in the text description."
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,21,4,0)=" "
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,21,5,0)=" Example MUMPS code: S LA7TXT(1)=LA76249"
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,21,6,0)=" Variable value: LA76249=123"
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,21,7,0)=" Text description: Message # |1| did not contain a PID segment."
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,21,8,0)=" ^XTMP: Message # 123 did not contain a PID segment."
^XTMP("XPDT",7816,"^DD",62.485,62.485,2,"DT")="2940427"
^XTMP("XPDT",7816,"^DD",63,63.02,.11,0)="REPORT RELEASE DATE^DIX^^0;11^S %DT=""ETXR"",%DT(0)=""N"" D ^%DT K %DT S X=Y K:Y<1 X I $D(X),X<$P($P(^LR(DA(1),""EM"",DA,0),U,3),""."") K X W !,""Release date must not be before completed date ("" S Y=$P(^(0),U,3) D DD^%DT W Y,"")"""
^XTMP("XPDT",7816,"^DD",63,63.02,.11,3)="ONLY CURRENT DATE/TIME ALLOWED"
^XTMP("XPDT",7816,"^DD",63,63.02,.11,4)="K DZ"
^XTMP("XPDT",7816,"^DD",63,63.02,.11,21,0)="^^1^1^2950908^^"
^XTMP("XPDT",7816,"^DD",63,63.02,.11,21,1,0)="YES indicates the report was released."
^XTMP("XPDT",7816,"^DD",63,63.02,.11,"DT")="2950908"
^XTMP("XPDT",7816,"^DD",63,63.08,.11,0)="REPORT RELEASE DATE/TIME^DIX^^0;11^S %DT=""ETXR"",%DT(0)=""N"" D ^%DT K %DT S X=Y K:Y<1 X I $D(X),X<$P($P(^LR(DA(1),""SP"",DA,0),U,3),""."") K X W !,""Release date must not be before report completed date ("" S Y=$P(^(0),U,3) D DD^%DT W Y,"")"""
^XTMP("XPDT",7816,"^DD",63,63.08,.11,1,0)="^.1"
^XTMP("XPDT",7816,"^DD",63,63.08,.11,1,1,0)="63.08^AC^MUMPS"
^XTMP("XPDT",7816,"^DD",63,63.08,.11,1,1,1)="D ADD^LRWOMEN"
^XTMP("XPDT",7816,"^DD",63,63.08,.11,1,1,2)="D DEL^LRWOMEN"
^XTMP("XPDT",7816,"^DD",63,63.08,.11,1,1,"%D",0)="^^3^3^2990219^"
^XTMP("XPDT",7816,"^DD",63,63.08,.11,1,1,"%D",1,0)="This cross reference will send notification to the Women's Health Program"
^XTMP("XPDT",7816,"^DD",63,63.08,.11,1,1,"%D",2,0)="when a Surgical Pathology specimen on a female is verified/released by the"
^XTMP("XPDT",7816,"^DD",63,63.08,.11,1,1,"%D",3,0)="laboratory."
^XTMP("XPDT",7816,"^DD",63,63.08,.11,1,1,"DT")="2990219"
^XTMP("XPDT",7816,"^DD",63,63.08,.11,3)="ONLY PRESENT DATE/TIME ALLOWED   "
^XTMP("XPDT",7816,"^DD",63,63.08,.11,4)="K DZ"
^XTMP("XPDT",7816,"^DD",63,63.08,.11,21,0)="^^1^1^2950908^^^"
^XTMP("XPDT",7816,"^DD",63,63.08,.11,21,1,0)="YES indicates the report was released."
^XTMP("XPDT",7816,"^DD",63,63.08,.11,"DT")="2990219"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,0)="REPORT RELEASE DATE/TIME^DIX^^0;11^S %DT=""ETXR"",%DT(0)=""N"" D ^%DT K %DT S X=Y K:Y<1 X I $D(X),X<$P($P(^LR(DA(1),""CY"",DA,0),U,3),""."") K X W !,""Release date must not be before completed date ("" S Y=$P(^(0),U,3) D DD^%DT W Y,"")"""
^XTMP("XPDT",7816,"^DD",63,63.09,.11,1,0)="^.1"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,1,1,0)="63.09^AC^MUMPS"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,1,1,1)="D ADD^LRWOMEN"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,1,1,2)="D DEL^LRWOMEN"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,1,1,"%D",0)="^^2^2^2990219^"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,1,1,"%D",1,0)="This cross reference will send notification to the Women's Health Program"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,1,1,"%D",2,0)="when a Cytology specimen is Verified/Released from the Laboratory package."
^XTMP("XPDT",7816,"^DD",63,63.09,.11,1,1,"DT")="2990219"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,3)="ONLY CURRENT DATE/TIME ALLOWED"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,4)="K DZ"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,21,0)="^^1^1^2950908^^^"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,21,1,0)="Date report was released"
^XTMP("XPDT",7816,"^DD",63,63.09,.11,"DT")="2990219"
^XTMP("XPDT",7816,"^DIC",62.48,62.48,0)="LA7 MESSAGE PARAMETER^62.48"
^XTMP("XPDT",7816,"^DIC",62.48,62.48,0,"GL")="^LAHM(62.48,"
^XTMP("XPDT",7816,"^DIC",62.48,62.48,"%D",0)="^^2^2^2970205^^^^"
^XTMP("XPDT",7816,"^DIC",62.48,62.48,"%D",1,0)="This file is used to store parameters associated with a Lab Messaging"
^XTMP("XPDT",7816,"^DIC",62.48,62.48,"%D",2,0)="system configuration."
^XTMP("XPDT",7816,"^DIC",62.48,"B","LA7 MESSAGE PARAMETER",62.48)=""
^XTMP("XPDT",7816,"^DIC",62.485,62.485,0)="LA7 MESSAGE LOG BULLETINS^62.485"
^XTMP("XPDT",7816,"^DIC",62.485,62.485,0,"GL")="^LAHM(62.485,"
^XTMP("XPDT",7816,"^DIC",62.485,62.485,"%D",0)="^^8^8^2970612^"
^XTMP("XPDT",7816,"^DIC",62.485,62.485,"%D",1,0)="This file stores canned text for logging errors or exceptional "
^XTMP("XPDT",7816,"^DIC",62.485,62.485,"%D",2,0)="conditions during message processing."
^XTMP("XPDT",7816,"^DIC",62.485,62.485,"%D",3,0)=" "
^XTMP("XPDT",7816,"^DIC",62.485,62.485,"%D",4,0)="This file should not be edited locally by the site, but if a local"
^XTMP("XPDT",7816,"^DIC",62.485,62.485,"%D",5,0)="messaging system is developed, and entries must be added, the site"
^XTMP("XPDT",7816,"^DIC",62.485,62.485,"%D",6,0)="should add new entries at entry numbers higher than 999. It is preferred"
^XTMP("XPDT",7816,"^DIC",62.485,62.485,"%D",7,0)="that the local codes be preceded with the three digit primary site number"
^XTMP("XPDT",7816,"^DIC",62.485,62.485,"%D",8,0)="which would result in a seven digit number, site #_xxxx."
^XTMP("XPDT",7816,"^DIC",62.485,"B","LA7 MESSAGE LOG BULLETINS",62.485)=""
^XTMP("XPDT",7823)="1"
^XTMP("XPDT",7823,"BLD",1280,0)="XU*8.0*542^KERNEL^0^3100517^y"
^XTMP("XPDT",7823,"BLD",1280,4,0)="^9.64PA^^"
^XTMP("XPDT",7823,"BLD",1280,6)="^437"
^XTMP("XPDT",7823,"BLD",1280,6.3)="5"
^XTMP("XPDT",7823,"BLD",1280,"KRN",0)="^9.67PA^9002226^21"
^XTMP("XPDT",7823,"BLD",1280,"KRN",.4,0)=".4"
^XTMP("XPDT",7823,"BLD",1280,"KRN",.401,0)=".401"
^XTMP("XPDT",7823,"BLD",1280,"KRN",.402,0)=".402"
^XTMP("XPDT",7823,"BLD",1280,"KRN",.403,0)=".403"
^XTMP("XPDT",7823,"BLD",1280,"KRN",.403,"NM",0)="^9.68A^1^1"
^XTMP("XPDT",7823,"BLD",1280,"KRN",.403,"NM",1,0)="XUEXISTING USER    FILE #200^200^0"
^XTMP("XPDT",7823,"BLD",1280,"KRN",.403,"NM","B","XUEXISTING USER    FILE #200",1)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN",.5,0)=".5"
^XTMP("XPDT",7823,"BLD",1280,"KRN",.84,0)=".84"
^XTMP("XPDT",7823,"BLD",1280,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7823,"BLD",1280,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7823,"BLD",1280,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7823,"BLD",1280,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7823,"BLD",1280,"KRN",9.8,"NM",0)="^9.68A^4^4"
^XTMP("XPDT",7823,"BLD",1280,"KRN",9.8,"NM",1,0)="XUPROD^^0^B7428369"
^XTMP("XPDT",7823,"BLD",1280,"KRN",9.8,"NM",2,0)="XUA4A7^^0^B9747863"
^XTMP("XPDT",7823,"BLD",1280,"KRN",9.8,"NM",3,0)="XUDHGUI^^0^B6047826"
^XTMP("XPDT",7823,"BLD",1280,"KRN",9.8,"NM",4,0)="XQ82^^0^B11169630"
^XTMP("XPDT",7823,"BLD",1280,"KRN",9.8,"NM","B","XQ82",4)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN",9.8,"NM","B","XUA4A7",2)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN",9.8,"NM","B","XUDHGUI",3)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN",9.8,"NM","B","XUPROD",1)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN",19,0)="19"
^XTMP("XPDT",7823,"BLD",1280,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7823,"BLD",1280,"KRN",101,0)="101"
^XTMP("XPDT",7823,"BLD",1280,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7823,"BLD",1280,"KRN",771,0)="771"
^XTMP("XPDT",7823,"BLD",1280,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7823,"BLD",1280,"KRN",870,0)="870"
^XTMP("XPDT",7823,"BLD",1280,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7823,"BLD",1280,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7823,"BLD",1280,"KRN",8994,0)="8994"
^XTMP("XPDT",7823,"BLD",1280,"KRN",9002226,0)="9002226"
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",.4,.4)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",.401,.401)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",.402,.402)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",.403,.403)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",.5,.5)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",.84,.84)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",19,19)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",101,101)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",771,771)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",870,870)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",8994,8994)=""
^XTMP("XPDT",7823,"BLD",1280,"KRN","B",9002226,9002226)=""
^XTMP("XPDT",7823,"BLD",1280,"QUES",0)="^9.62^^"
^XTMP("XPDT",7823,"BLD",1280,"REQB",0)="^9.611^4^4"
^XTMP("XPDT",7823,"BLD",1280,"REQB",1,0)="XU*8.0*49^0"
^XTMP("XPDT",7823,"BLD",1280,"REQB",2,0)="XU*8.0*220^0"
^XTMP("XPDT",7823,"BLD",1280,"REQB",3,0)="XU*8.0*353^0"
^XTMP("XPDT",7823,"BLD",1280,"REQB",4,0)="XU*8.0*440^2"
^XTMP("XPDT",7823,"BLD",1280,"REQB","B","XU*8.0*220",2)=""
^XTMP("XPDT",7823,"BLD",1280,"REQB","B","XU*8.0*353",3)=""
^XTMP("XPDT",7823,"BLD",1280,"REQB","B","XU*8.0*440",4)=""
^XTMP("XPDT",7823,"BLD",1280,"REQB","B","XU*8.0*49",1)=""
^XTMP("XPDT",7823,"KRN",.403,3,-1)="0^1"
^XTMP("XPDT",7823,"KRN",.403,3,0)="XUEXISTING USER^^^^2920804^^^200^0^0^1"
^XTMP("XPDT",7823,"KRN",.403,3,2)="1;33"
^XTMP("XPDT",7823,"KRN",.403,3,11)="S XUNOTRIG=1 D CHKPTR^XLFNAME2,REQ^XUSER2()"
^XTMP("XPDT",7823,"KRN",.403,3,12)="K XUNOTRIG,XUITNAME"
^XTMP("XPDT",7823,"KRN",.403,3,40,0)="^.4031I^11^9"
^XTMP("XPDT",7823,"KRN",.403,3,40,1,0)="1^^1,1^2^5"
^XTMP("XPDT",7823,"KRN",.403,3,40,1,1)="Page 1"
^XTMP("XPDT",7823,"KRN",.403,3,40,1,40,0)="^.4032PI^47^2"
^XTMP("XPDT",7823,"KRN",.403,3,40,1,40,28,0)="XUEXISTING USER 1^2^2,1^e"
^XTMP("XPDT",7823,"KRN",.403,3,40,1,40,47,0)="XUEXISTING USER 0^1^1,1^d"
^XTMP("XPDT",7823,"KRN",.403,3,40,2,0)="2^^1,1^3^1"
^XTMP("XPDT",7823,"KRN",.403,3,40,2,1)="Page 2"
^XTMP("XPDT",7823,"KRN",.403,3,40,2,15,0)="^^1^1^2941114^"
^XTMP("XPDT",7823,"KRN",.403,3,40,2,15,1,0)="This is Page 2 of the edit existing user."
^XTMP("XPDT",7823,"KRN",.403,3,40,2,40,0)="^.4032PI^47^2"
^XTMP("XPDT",7823,"KRN",.403,3,40,2,40,29,0)="XUEXISTING USER 2^2^2,1^e"
^XTMP("XPDT",7823,"KRN",.403,3,40,2,40,47,0)="XUEXISTING USER 0^1^1,1^d"
^XTMP("XPDT",7823,"KRN",.403,3,40,3,0)="1.1^^11,9^^^1^17,66^^"
^XTMP("XPDT",7823,"KRN",.403,3,40,3,1)="SECONDARY MENU OPTIONS Subpage"
^XTMP("XPDT",7823,"KRN",.403,3,40,3,40,0)="^.4032PI^30^1"
^XTMP("XPDT",7823,"KRN",.403,3,40,3,40,30,0)="XUEXISTING USER 3^1^2,3^e"
^XTMP("XPDT",7823,"KRN",.403,3,40,4,0)="1.2^^8,16^^^1^13,59^^"
^XTMP("XPDT",7823,"KRN",.403,3,40,4,1)="DIVISION Subpage"
^XTMP("XPDT",7823,"KRN",.403,3,40,4,40,0)="^.4032PI^31^1"
^XTMP("XPDT",7823,"KRN",.403,3,40,4,40,31,0)="XUEXISTING USER 4^1^2,3^e"
^XTMP("XPDT",7823,"KRN",.403,3,40,5,0)="3^^1,1^4^2"
^XTMP("XPDT",7823,"KRN",.403,3,40,5,1)="Page 3"
^XTMP("XPDT",7823,"KRN",.403,3,40,5,40,0)="^.4032PI^63^3"
^XTMP("XPDT",7823,"KRN",.403,3,40,5,40,47,0)="XUEXISTING USER 0^1^1,1^d"
^XTMP("XPDT",7823,"KRN",.403,3,40,5,40,50,0)="XUEXISTING USER 5^2^2,1^e"
^XTMP("XPDT",7823,"KRN",.403,3,40,5,40,63,0)="XU-PERSON CLASS 2^3^12,1^e"
^XTMP("XPDT",7823,"KRN",.403,3,40,5,40,63,2)="6^!IEN^n"
^XTMP("XPDT",7823,"KRN",.403,3,40,8,0)="1.3^^8,12^^^1^17,65"
^XTMP("XPDT",7823,"KRN",.403,3,40,8,1)="Page 1.3^"
^XTMP("XPDT",7823,"KRN",.403,3,40,8,11)=""
^XTMP("XPDT",7823,"KRN",.403,3,40,8,12)="D:XLFNEW'=XLFNAME PUT^DDSVAL(200,XLFNDA,.01,XLFNEW,"""",""I"") K XLFNDA,XLFNAME,XLFNEW"
^XTMP("XPDT",7823,"KRN",.403,3,40,8,40,0)="^.4032IP^157^1"
^XTMP("XPDT",7823,"KRN",.403,3,40,8,40,157,0)="XUEXISTING USER NAME COMPONENT^1^1,1^e"
^XTMP("XPDT",7823,"KRN",.403,3,40,8,40,157,1)="10.1"
^XTMP("XPDT",7823,"KRN",.403,3,40,9,0)="4^^1,1^5^3"
^XTMP("XPDT",7823,"KRN",.403,3,40,9,1)="Page 4"
^XTMP("XPDT",7823,"KRN",.403,3,40,9,40,0)="^.4032IP^172^3"
^XTMP("XPDT",7823,"KRN",.403,3,40,9,40,47,0)="XUEXISTING USER 0^1^1,1^e"
^XTMP("XPDT",7823,"KRN",.403,3,40,9,40,171,0)="XUEXISTING USER CPRS^2^2,1^e"
^XTMP("XPDT",7823,"KRN",.403,3,40,9,40,172,0)="XUEXISTING USER CPRS TAB^3^8,1^e"
^XTMP("XPDT",7823,"KRN",.403,3,40,9,40,172,2)="10^!IEN^n^^^"
^XTMP("XPDT",7823,"KRN",.403,3,40,10,0)="5^^1,1^1^4"
^XTMP("XPDT",7823,"KRN",.403,3,40,10,1)="Page 5"
^XTMP("XPDT",7823,"KRN",.403,3,40,10,40,0)="^.4032IP^185^2"
^XTMP("XPDT",7823,"KRN",.403,3,40,10,40,47,0)="XUEXISTING USER 0^1^1,1^d"
^XTMP("XPDT",7823,"KRN",.403,3,40,10,40,185,0)="XUEXISTING USER TRAINEE^2^2,1^e"
^XTMP("XPDT",7823,"KRN",.403,3,40,11,0)="6^^9,45^^^1^13,80"
^XTMP("XPDT",7823,"KRN",.403,3,40,11,1)="Termination^11,2,1"
^XTMP("XPDT",7823,"KRN",.403,3,40,11,40,0)="^.4032IP^190^1"
^XTMP("XPDT",7823,"KRN",.403,3,40,11,40,190,0)="Termination^1^1,1^e"
^XTMP("XPDT",7823,"KRN",.404,28,0)="XUEXISTING USER 1^200^^^"
^XTMP("XPDT",7823,"KRN",.404,28,40,0)="^.4044I^21^19"
^XTMP("XPDT",7823,"KRN",.404,28,40,1,0)="2^NAME...^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,1,1)=".01"
^XTMP("XPDT",7823,"KRN",.404,28,40,1,2)="3,12^35^3,4^1"
^XTMP("XPDT",7823,"KRN",.404,28,40,1,10)="S XLFNDA=DA,XLFNAME=X,DDSBR=""GIVEN^^1.3"""
^XTMP("XPDT",7823,"KRN",.404,28,40,1,11)="S XUITNAME=1 D:'$D(XLFCOMP) HLP^DDSUTL("" *** Press <RET> to edit the component parts of this name. ***"") I $D(XLFCOMP) S XLFNDA=DA,XLFNAME=X,DDSBR=""GIVEN^^1.3"" K XLFCOMP"
^XTMP("XPDT",7823,"KRN",.404,28,40,1,13)="S XLFNDA=DA,XLFNAME=X,DDSBR=""GIVEN^^1.3"",XLFNCHG=1"
^XTMP("XPDT",7823,"KRN",.404,28,40,2,0)="4^TITLE^3^^F4"
^XTMP("XPDT",7823,"KRN",.404,28,40,2,1)="8"
^XTMP("XPDT",7823,"KRN",.404,28,40,2,2)="4,12^30^4,5"
^XTMP("XPDT",7823,"KRN",.404,28,40,3,0)="3^INITIAL^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,3,1)="1"
^XTMP("XPDT",7823,"KRN",.404,28,40,3,2)="3,65^5^3,56"
^XTMP("XPDT",7823,"KRN",.404,28,40,4,0)="5^NICK NAME^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,4,1)="13"
^XTMP("XPDT",7823,"KRN",.404,28,40,4,2)="4,65^10^4,54"
^XTMP("XPDT",7823,"KRN",.404,28,40,5,0)="13^PRIMARY MENU OPTION^3^"
^XTMP("XPDT",7823,"KRN",.404,28,40,5,1)="201"
^XTMP("XPDT",7823,"KRN",.404,28,40,5,2)="10,33^30^10,12"
^XTMP("XPDT",7823,"KRN",.404,28,40,6,0)="14^Select SECONDARY MENU OPTIONS^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,6,1)="203"
^XTMP("XPDT",7823,"KRN",.404,28,40,6,2)="11,33^30^11,2"
^XTMP("XPDT",7823,"KRN",.404,28,40,6,7)="^1.1"
^XTMP("XPDT",7823,"KRN",.404,28,40,7,0)="15^Want to edit ACCESS CODE (Y/N)^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,7,1)="2.1"
^XTMP("XPDT",7823,"KRN",.404,28,40,7,2)="12,33^3^12,1"
^XTMP("XPDT",7823,"KRN",.404,28,40,8,0)="17^Want to edit VERIFY CODE (Y/N)^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,8,1)="11.1"
^XTMP("XPDT",7823,"KRN",.404,28,40,8,2)="13,33^3^13,1"
^XTMP("XPDT",7823,"KRN",.404,28,40,8,11)="I $L($$GET^DDSVAL(200,.DA,11,,""I"")) D EN^DDIOL(""For the user to sign-on they must have a Verify Code."")"
^XTMP("XPDT",7823,"KRN",.404,28,40,9,0)="16^FILE MANAGER ACCESS CODE^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,9,1)="3"
^XTMP("XPDT",7823,"KRN",.404,28,40,9,2)="12,65^15^12,39"
^XTMP("XPDT",7823,"KRN",.404,28,40,12,0)="18^Select DIVISION^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,12,1)="16"
^XTMP("XPDT",7823,"KRN",.404,28,40,12,2)="15,33^30^15,16"
^XTMP("XPDT",7823,"KRN",.404,28,40,12,7)="^1.2"
^XTMP("XPDT",7823,"KRN",.404,28,40,13,0)="19^SERVICE/SECTION^3^^"
^XTMP("XPDT",7823,"KRN",.404,28,40,13,1)="29"
^XTMP("XPDT",7823,"KRN",.404,28,40,13,2)="16,33^30^16,16"
^XTMP("XPDT",7823,"KRN",.404,28,40,14,0)="9^MAIL CODE^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,14,1)="28"
^XTMP("XPDT",7823,"KRN",.404,28,40,14,2)="6,65^10^6,54"
^XTMP("XPDT",7823,"KRN",.404,28,40,15,0)="1^1^1^"
^XTMP("XPDT",7823,"KRN",.404,28,40,15,2)="^^1,74"
^XTMP("XPDT",7823,"KRN",.404,28,40,16,0)="6^SSN^3^^F1"
^XTMP("XPDT",7823,"KRN",.404,28,40,16,1)="9"
^XTMP("XPDT",7823,"KRN",.404,28,40,16,2)="5,12^9^5,7"
^XTMP("XPDT",7823,"KRN",.404,28,40,17,0)="8^DEGREE^3^^F8"
^XTMP("XPDT",7823,"KRN",.404,28,40,17,1)="10.6"
^XTMP("XPDT",7823,"KRN",.404,28,40,17,2)="6,12^10^6,4"
^XTMP("XPDT",7823,"KRN",.404,28,40,18,0)="10^DISUSER^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,18,1)="7"
^XTMP("XPDT",7823,"KRN",.404,28,40,18,2)="7,12^3^7,3"
^XTMP("XPDT",7823,"KRN",.404,28,40,19,0)="11^TERMINATION DATE^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,19,1)="9.2"
^XTMP("XPDT",7823,"KRN",.404,28,40,19,2)="7,66^11^7,48"
^XTMP("XPDT",7823,"KRN",.404,28,40,20,0)="12^Termination Reason^3"
^XTMP("XPDT",7823,"KRN",.404,28,40,20,1)="9.4"
^XTMP("XPDT",7823,"KRN",.404,28,40,20,2)="8,23^45^8,3"
^XTMP("XPDT",7823,"KRN",.404,28,40,21,0)="7^DOB^3^^F2"
^XTMP("XPDT",7823,"KRN",.404,28,40,21,1)="5"
^XTMP("XPDT",7823,"KRN",.404,28,40,21,2)="5,65^11^5,60"
^XTMP("XPDT",7823,"KRN",.404,29,0)="XUEXISTING USER 2^200^^^"
^XTMP("XPDT",7823,"KRN",.404,29,40,0)="^.4044I^19^16"
^XTMP("XPDT",7823,"KRN",.404,29,40,1,0)="3^TIMED READ (# OF SECONDS)^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,1,1)="200.1"
^XTMP("XPDT",7823,"KRN",.404,29,40,1,2)="5,31^5^5,4"
^XTMP("XPDT",7823,"KRN",.404,29,40,2,0)="4^MULTIPLE SIGN-ON^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,2,1)="200.04"
^XTMP("XPDT",7823,"KRN",.404,29,40,2,2)="6,31^11^6,13"
^XTMP("XPDT",7823,"KRN",.404,29,40,2,11)="D EN^DDIOL(""If you select 'Only one IP' be sure to put a value into the MULTIPLE SIGN-ON LIMIT field so users can sign-on at least once."")"
^XTMP("XPDT",7823,"KRN",.404,29,40,3,0)="7^AUTO MENU^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,3,1)="200.06"
^XTMP("XPDT",7823,"KRN",.404,29,40,3,2)="7,60^20^7,49"
^XTMP("XPDT",7823,"KRN",.404,29,40,4,0)="6^ASK DEVICE TYPE AT SIGN-ON^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,4,1)="200.05"
^XTMP("XPDT",7823,"KRN",.404,29,40,4,2)="7,31^9^7,3"
^XTMP("XPDT",7823,"KRN",.404,29,40,5,0)="9^TYPE-AHEAD^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,5,1)="200.09"
^XTMP("XPDT",7823,"KRN",.404,29,40,5,2)="8,60^11^8,48"
^XTMP("XPDT",7823,"KRN",.404,29,40,6,0)="8^PROHIBITED TIMES FOR SIGN-ON^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,6,1)="15"
^XTMP("XPDT",7823,"KRN",.404,29,40,6,2)="8,31^9^8,1"
^XTMP("XPDT",7823,"KRN",.404,29,40,7,0)="12^ALLOWED TO USE SPOOLER^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,7,1)="41"
^XTMP("XPDT",7823,"KRN",.404,29,40,7,2)="12,31^3^12,7"
^XTMP("XPDT",7823,"KRN",.404,29,40,8,0)="14^CAN MAKE INTO A MAIL MESSAGE^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,8,1)="41.2"
^XTMP("XPDT",7823,"KRN",.404,29,40,8,2)="13,31^3^13,1"
^XTMP("XPDT",7823,"KRN",.404,29,40,10,0)="15^FILE RANGE^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,10,1)="31.1"
^XTMP("XPDT",7823,"KRN",.404,29,40,10,2)="15,31^30^15,19"
^XTMP("XPDT",7823,"KRN",.404,29,40,12,0)="16^ALWAYS SHOW SECONDARIES^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,12,1)="200.11"
^XTMP("XPDT",7823,"KRN",.404,29,40,12,2)="16,31^3^16,6"
^XTMP("XPDT",7823,"KRN",.404,29,40,13,0)="1^2^1^"
^XTMP("XPDT",7823,"KRN",.404,29,40,13,2)="^^1,74^1"
^XTMP("XPDT",7823,"KRN",.404,29,40,14,0)="13^PAC^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,14,1)="14"
^XTMP("XPDT",7823,"KRN",.404,29,40,14,2)="12,63^8^12,58"
^XTMP("XPDT",7823,"KRN",.404,29,40,16,0)="10^AUTO SIGN-ON^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,16,1)="200.18"
^XTMP("XPDT",7823,"KRN",.404,29,40,16,2)="9,60^3^9,46"
^XTMP("XPDT",7823,"KRN",.404,29,40,17,0)="11^Preferred Editor^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,17,1)="31.3"
^XTMP("XPDT",7823,"KRN",.404,29,40,17,2)="10,31^30^10,13"
^XTMP("XPDT",7823,"KRN",.404,29,40,17,3)="SCREEN EDITOR"
^XTMP("XPDT",7823,"KRN",.404,29,40,18,0)="5^MULTIPLE SIGN-ON LIMIT^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,18,1)="200.19"
^XTMP("XPDT",7823,"KRN",.404,29,40,18,2)="6,70^3^6,46"
^XTMP("XPDT",7823,"KRN",.404,29,40,19,0)="2^NETWORK USERNAME^3"
^XTMP("XPDT",7823,"KRN",.404,29,40,19,1)="501.1"
^XTMP("XPDT",7823,"KRN",.404,29,40,19,2)="4,22^15^4,4"
^XTMP("XPDT",7823,"KRN",.404,30,0)="XUEXISTING USER 3^200.03"
^XTMP("XPDT",7823,"KRN",.404,30,40,0)="^.4044I^3^3"
^XTMP("XPDT",7823,"KRN",.404,30,40,1,0)="1^SECONDARY MENU OPTIONS^1^"
^XTMP("XPDT",7823,"KRN",.404,30,40,1,2)="^^1,33^"
^XTMP("XPDT",7823,"KRN",.404,30,40,2,0)="2^SECONDARY MENU OPTIONS^3"
^XTMP("XPDT",7823,"KRN",.404,30,40,2,1)=".01"
^XTMP("XPDT",7823,"KRN",.404,30,40,2,2)="3,25^30^3,1"
^XTMP("XPDT",7823,"KRN",.404,30,40,3,0)="3^SYNONYM^3"
^XTMP("XPDT",7823,"KRN",.404,30,40,3,1)="2"
^XTMP("XPDT",7823,"KRN",.404,30,40,3,2)="4,25^4^4,16"
^XTMP("XPDT",7823,"KRN",.404,31,0)="XUEXISTING USER 4^200.02"
^XTMP("XPDT",7823,"KRN",.404,31,40,0)="^.4044I^3^3"
^XTMP("XPDT",7823,"KRN",.404,31,40,1,0)="1^DIVISION^1^"
^XTMP("XPDT",7823,"KRN",.404,31,40,1,2)="^^1,33^"
^XTMP("XPDT",7823,"KRN",.404,31,40,2,0)="2^DIVISION^3"
^XTMP("XPDT",7823,"KRN",.404,31,40,2,1)=".01"
^XTMP("XPDT",7823,"KRN",.404,31,40,2,2)="3,11^30^3,1"
^XTMP("XPDT",7823,"KRN",.404,31,40,3,0)="3^DEFAULT^3"
^XTMP("XPDT",7823,"KRN",.404,31,40,3,1)="1"
^XTMP("XPDT",7823,"KRN",.404,31,40,3,2)="4,11^3^4,2"
^XTMP("XPDT",7823,"KRN",.404,47,0)="XUEXISTING USER 0^200^"
^XTMP("XPDT",7823,"KRN",.404,47,40,0)="^.4044I^6^5"
^XTMP("XPDT",7823,"KRN",.404,47,40,1,0)="2^NAME^3"
^XTMP("XPDT",7823,"KRN",.404,47,40,1,1)=".01"
^XTMP("XPDT",7823,"KRN",.404,47,40,1,2)="2,7^30^2,1"
^XTMP("XPDT",7823,"KRN",.404,47,40,1,4)="^^^1"
^XTMP("XPDT",7823,"KRN",.404,47,40,2,0)="1^Edit an Existing User^1^"
^XTMP("XPDT",7823,"KRN",.404,47,40,2,2)="^^1,30^1"
^XTMP("XPDT",7823,"KRN",.404,47,40,3,0)="3^Page^1^"
^XTMP("XPDT",7823,"KRN",.404,47,40,3,2)="^^2,69"
^XTMP("XPDT",7823,"KRN",.404,47,40,5,0)="4^of 5^1^"
^XTMP("XPDT",7823,"KRN",.404,47,40,5,2)="^^2,76"
^XTMP("XPDT",7823,"KRN",.404,47,40,6,0)="5^_______________________________________________________________________________^1"
^XTMP("XPDT",7823,"KRN",.404,47,40,6,2)="^^3,1"
^XTMP("XPDT",7823,"KRN",.404,50,0)="XUEXISTING USER 5^200"
^XTMP("XPDT",7823,"KRN",.404,50,40,0)="^.4044I^10^10"
^XTMP("XPDT",7823,"KRN",.404,50,40,1,0)="1^3^1^"
^XTMP("XPDT",7823,"KRN",.404,50,40,1,2)="^^1,74^"
^XTMP("XPDT",7823,"KRN",.404,50,40,2,0)="2^PROHIBITED TIMES FOR SIGN-ON^3"
^XTMP("XPDT",7823,"KRN",.404,50,40,2,1)="15"
^XTMP("XPDT",7823,"KRN",.404,50,40,2,2)="3,31^21^3,1"
^XTMP("XPDT",7823,"KRN",.404,50,40,3,0)="3^PHONE^3"
^XTMP("XPDT",7823,"KRN",.404,50,40,3,1)=".131"
^XTMP("XPDT",7823,"KRN",.404,50,40,3,2)="5,19^20^5,12"
^XTMP("XPDT",7823,"KRN",.404,50,40,4,0)="4^OFFICE PHONE^3"
^XTMP("XPDT",7823,"KRN",.404,50,40,4,1)=".132"
^XTMP("XPDT",7823,"KRN",.404,50,40,4,2)="5,56^20^5,42"
^XTMP("XPDT",7823,"KRN",.404,50,40,5,0)="7^VOICE PAGER^3"
^XTMP("XPDT",7823,"KRN",.404,50,40,5,1)=".137"
^XTMP("XPDT",7823,"KRN",.404,50,40,5,2)="7,19^20^7,6"
^XTMP("XPDT",7823,"KRN",.404,50,40,6,0)="6^FAX NUMBER^3"
^XTMP("XPDT",7823,"KRN",.404,50,40,6,1)=".136"
^XTMP("XPDT",7823,"KRN",.404,50,40,6,2)="6,56^20^6,44"
^XTMP("XPDT",7823,"KRN",.404,50,40,7,0)="5^COMMERCIAL PHONE^3"
^XTMP("XPDT",7823,"KRN",.404,50,40,7,1)=".135"
^XTMP("XPDT",7823,"KRN",.404,50,40,7,2)="6,19^20^6,1"
^XTMP("XPDT",7823,"KRN",.404,50,40,8,0)="8^DIGITAL PAGER^3"
^XTMP("XPDT",7823,"KRN",.404,50,40,8,1)=".138"
^XTMP("XPDT",7823,"KRN",.404,50,40,8,2)="7,56^20^7,41"
^XTMP("XPDT",7823,"KRN",.404,50,40,9,0)="9^LANGUAGE^3"
^XTMP("XPDT",7823,"KRN",.404,50,40,9,1)="200.07"
^XTMP("XPDT",7823,"KRN",.404,50,40,9,2)="8,19^10^8,9"
^XTMP("XPDT",7823,"KRN",.404,50,40,10,0)="10^Person Class                                         Effective     Expired^1"
^XTMP("XPDT",7823,"KRN",.404,50,40,10,2)="^^10,2"
^XTMP("XPDT",7823,"KRN",.404,63,0)="XU-PERSON CLASS 2^200.05"
^XTMP("XPDT",7823,"KRN",.404,63,40,0)="^.4044I^3^3"
^XTMP("XPDT",7823,"KRN",.404,63,40,1,0)="1^^3"
^XTMP("XPDT",7823,"KRN",.404,63,40,1,1)=".01"
^XTMP("XPDT",7823,"KRN",.404,63,40,1,2)="1,2^40"
^XTMP("XPDT",7823,"KRN",.404,63,40,1,11)="D DDS1^XUA4A72"
^XTMP("XPDT",7823,"KRN",.404,63,40,1,14)="S:$L(DDSOLD)&(X'=DDSOLD) DDSERROR=1"
^XTMP("XPDT",7823,"KRN",.404,63,40,2,0)="2^^3"
^XTMP("XPDT",7823,"KRN",.404,63,40,2,1)="2"
^XTMP("XPDT",7823,"KRN",.404,63,40,2,2)="1,52^12"
^XTMP("XPDT",7823,"KRN",.404,63,40,2,4)="^^^0"
^XTMP("XPDT",7823,"KRN",.404,63,40,2,12)="D DDS2^XUA4A72"
^XTMP("XPDT",7823,"KRN",.404,63,40,2,14)="D DDS3^XUA4A72(2)"
^XTMP("XPDT",7823,"KRN",.404,63,40,3,0)="3^^3"
^XTMP("XPDT",7823,"KRN",.404,63,40,3,1)="3"
^XTMP("XPDT",7823,"KRN",.404,63,40,3,2)="1,67^12"
^XTMP("XPDT",7823,"KRN",.404,63,40,3,14)="D DDS3^XUA4A72(3)"
^XTMP("XPDT",7823,"KRN",.404,157,0)="XUEXISTING USER NAME COMPONENT^20"
^XTMP("XPDT",7823,"KRN",.404,157,11)="I $G(XLFNCHG),$D(XLFNC) N FLD,NC,SUB M NC=XLFNC K XLFNC S (XLFNAME,XLFNEW)=NC K XLFNCHG S FLD=0 F SUB=""FAMILY"",""GIVEN"",""MIDDLE"","""",""SUFFIX"" S FLD=FLD+1 D:SUB]"""" PUT^DDSVAL(DIE,DA,FLD,$G(NC(SUB)),"""",""I"")"
^XTMP("XPDT",7823,"KRN",.404,157,40,0)="^.4044I^8^7"
^XTMP("XPDT",7823,"KRN",.404,157,40,1,0)="1^NAME COMPONENTS^1"
^XTMP("XPDT",7823,"KRN",.404,157,40,1,2)="^^2,38"
^XTMP("XPDT",7823,"KRN",.404,157,40,2,0)="5^Family (Last)^3"
^XTMP("XPDT",7823,"KRN",.404,157,40,2,1)="1"
^XTMP("XPDT",7823,"KRN",.404,157,40,2,2)="6,18^35^6,3"
^XTMP("XPDT",7823,"KRN",.404,157,40,3,0)="3^Given (First)^3^^GIVEN"
^XTMP("XPDT",7823,"KRN",.404,157,40,3,1)="2"
^XTMP("XPDT",7823,"KRN",.404,157,40,3,2)="4,18^25^4,3"
^XTMP("XPDT",7823,"KRN",.404,157,40,4,0)="4^Middle^3"
^XTMP("XPDT",7823,"KRN",.404,157,40,4,1)="3"
^XTMP("XPDT",7823,"KRN",.404,157,40,4,2)="5,18^25^5,10"
^XTMP("XPDT",7823,"KRN",.404,157,40,5,0)="2^Prefix^3"
^XTMP("XPDT",7823,"KRN",.404,157,40,5,1)="4"
^XTMP("XPDT",7823,"KRN",.404,157,40,5,2)="3,18^10^3,10"
^XTMP("XPDT",7823,"KRN",.404,157,40,6,0)="6^Suffix^3"
^XTMP("XPDT",7823,"KRN",.404,157,40,6,1)="5"
^XTMP("XPDT",7823,"KRN",.404,157,40,6,2)="7,18^10^7,10"
^XTMP("XPDT",7823,"KRN",.404,157,40,8,0)="8^^4"
^XTMP("XPDT",7823,"KRN",.404,157,40,8,2)="9,3^35"
^XTMP("XPDT",7823,"KRN",.404,157,40,8,30)="N NC S NC(""FAMILY"")={1},NC(""GIVEN"")={2},NC(""MIDDLE"")={3},NC(""SUFFIX"")={5},(XLFNEW,Y)=$$BLDNAME^XLFNAME8(.NC,35)"
^XTMP("XPDT",7823,"KRN",.404,171,0)="XUEXISTING USER CPRS^200"
^XTMP("XPDT",7823,"KRN",.404,171,40,0)="^.4044I^8^8"
^XTMP("XPDT",7823,"KRN",.404,171,40,1,0)="1^4^1"
^XTMP("XPDT",7823,"KRN",.404,171,40,1,2)="^^1,74"
^XTMP("XPDT",7823,"KRN",.404,171,40,2,0)="2^RESTRICT PATIENT SELECTION^3"
^XTMP("XPDT",7823,"KRN",.404,171,40,2,1)="101.01"
^XTMP("XPDT",7823,"KRN",.404,171,40,2,2)="3,29^3^3,1"
^XTMP("XPDT",7823,"KRN",.404,171,40,3,0)="3^OE/RR LIST^3"
^XTMP("XPDT",7823,"KRN",.404,171,40,3,1)="101.02"
^XTMP("XPDT",7823,"KRN",.404,171,40,3,2)="3,48^30^3,36"
^XTMP("XPDT",7823,"KRN",.404,171,40,4,0)="4^CPRS TAB ACCESS:^1"
^XTMP("XPDT",7823,"KRN",.404,171,40,4,2)="^^5,1"
^XTMP("XPDT",7823,"KRN",.404,171,40,5,0)="5^Effective Date^1"
^XTMP("XPDT",7823,"KRN",.404,171,40,5,2)="^^6,46"
^XTMP("XPDT",7823,"KRN",.404,171,40,6,0)="6^Expiration Date^1"
^XTMP("XPDT",7823,"KRN",.404,171,40,6,2)="^^6,62"
^XTMP("XPDT",7823,"KRN",.404,171,40,7,0)="7^Name^1"
^XTMP("XPDT",7823,"KRN",.404,171,40,7,2)="^^6,3"
^XTMP("XPDT",7823,"KRN",.404,171,40,8,0)="8^Description^1"
^XTMP("XPDT",7823,"KRN",.404,171,40,8,2)="^^6,9"
^XTMP("XPDT",7823,"KRN",.404,172,0)="XUEXISTING USER CPRS TAB^200.010113"
^XTMP("XPDT",7823,"KRN",.404,172,40,0)="^.4044I^4^4"
^XTMP("XPDT",7823,"KRN",.404,172,40,1,0)="1^^3"
^XTMP("XPDT",7823,"KRN",.404,172,40,1,1)=".01"
^XTMP("XPDT",7823,"KRN",.404,172,40,1,2)="1,3^3"
^XTMP("XPDT",7823,"KRN",.404,172,40,2,0)="2^^3"
^XTMP("XPDT",7823,"KRN",.404,172,40,2,1)=".02"
^XTMP("XPDT",7823,"KRN",.404,172,40,2,2)="1,47^11"
^XTMP("XPDT",7823,"KRN",.404,172,40,3,0)="3^^3"
^XTMP("XPDT",7823,"KRN",.404,172,40,3,1)=".03"
^XTMP("XPDT",7823,"KRN",.404,172,40,3,2)="1,64^11"
^XTMP("XPDT",7823,"KRN",.404,172,40,3,14)="I X]"""" N XUD,XUM S XUD=$$GET^DDSVAL(DIE,.DA,.02,"""",""I"") S XUM=$S(XUD="""":""You must first enter an EFFECTIVE DATE."",X<XUD:""The EXPIRATION DATE must not precede the EFFECTIVE DATE."",1:"""") I $G(XUM)]"""" S DDSERROR=1 D HLP^DDSUTL(XUM)"
^XTMP("XPDT",7823,"KRN",.404,172,40,4,0)="4^^4"
^XTMP("XPDT",7823,"KRN",.404,172,40,4,2)="1,9^35"
^XTMP("XPDT",7823,"KRN",.404,172,40,4,30)="=$S($D(^DD(101.13,1,0))#2:$$GET^DDSVAL(101.13,{.01;I},1),1:"""")"
^XTMP("XPDT",7823,"KRN",.404,185,0)="XUEXISTING USER TRAINEE^200"
^XTMP("XPDT",7823,"KRN",.404,185,40,0)="^.4044I^17^16"
^XTMP("XPDT",7823,"KRN",.404,185,40,1,0)="1^5^1"
^XTMP("XPDT",7823,"KRN",.404,185,40,1,2)="^^1,74"
^XTMP("XPDT",7823,"KRN",.404,185,40,2,0)="2^PERMANENT ADDRESS:^1"
^XTMP("XPDT",7823,"KRN",.404,185,40,2,2)="^^3,1"
^XTMP("XPDT",7823,"KRN",.404,185,40,3,0)="3^Street 1^3^^F3"
^XTMP("XPDT",7823,"KRN",.404,185,40,3,1)=".111"
^XTMP("XPDT",7823,"KRN",.404,185,40,3,2)="4,21^50^4,11"
^XTMP("XPDT",7823,"KRN",.404,185,40,4,0)="4^Street 2^3^^F4"
^XTMP("XPDT",7823,"KRN",.404,185,40,4,1)=".112"
^XTMP("XPDT",7823,"KRN",.404,185,40,4,2)="5,21^50^5,11"
^XTMP("XPDT",7823,"KRN",.404,185,40,5,0)="5^Street 3^3^^F5"
^XTMP("XPDT",7823,"KRN",.404,185,40,5,1)=".113"
^XTMP("XPDT",7823,"KRN",.404,185,40,5,2)="6,21^50^6,11"
^XTMP("XPDT",7823,"KRN",.404,185,40,6,0)="6^City^3^^F6"
^XTMP("XPDT",7823,"KRN",.404,185,40,6,1)=".114"
^XTMP("XPDT",7823,"KRN",.404,185,40,6,2)="7,21^30^7,15"
^XTMP("XPDT",7823,"KRN",.404,185,40,7,0)="7^State^3^^F7"
^XTMP("XPDT",7823,"KRN",.404,185,40,7,1)=".115"
^XTMP("XPDT",7823,"KRN",.404,185,40,7,2)="8,21^30^8,14"
^XTMP("XPDT",7823,"KRN",.404,185,40,8,0)="8^Zip Code^3^^F8"
^XTMP("XPDT",7823,"KRN",.404,185,40,8,1)=".116"
^XTMP("XPDT",7823,"KRN",.404,185,40,8,2)="9,21^10^9,11"
^XTMP("XPDT",7823,"KRN",.404,185,40,9,0)="9^E-Mail Address^3^^F9"
^XTMP("XPDT",7823,"KRN",.404,185,40,9,1)=".151"
^XTMP("XPDT",7823,"KRN",.404,185,40,9,2)="10,21^50^10,5"
^XTMP("XPDT",7823,"KRN",.404,185,40,11,0)="16^Target Degree Lvl^3^^12.1F"
^XTMP("XPDT",7823,"KRN",.404,185,40,11,1)="12.1"
^XTMP("XPDT",7823,"KRN",.404,185,40,11,2)="16,20^59^16,1"
^XTMP("XPDT",7823,"KRN",.404,185,40,11,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7823,"KRN",.404,185,40,12,0)="15^Program of Study^3^^12.2F"
^XTMP("XPDT",7823,"KRN",.404,185,40,12,1)="12.2"
^XTMP("XPDT",7823,"KRN",.404,185,40,12,2)="15,19^59^15,1"
^XTMP("XPDT",7823,"KRN",.404,185,40,12,11)="D:X]"""" HLP^DDSUTL($P($G(^USC(8932.2,+$G(X),0)),U))"
^XTMP("XPDT",7823,"KRN",.404,185,40,12,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7823,"KRN",.404,185,40,13,0)="13^Last Training Month & Year^3^^12.3F"
^XTMP("XPDT",7823,"KRN",.404,185,40,13,1)="12.3"
^XTMP("XPDT",7823,"KRN",.404,185,40,13,2)="13,66^8^13,38"
^XTMP("XPDT",7823,"KRN",.404,185,40,13,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7823,"KRN",.404,185,40,14,0)="11^VHA Training Fac.^3^^12.4F"
^XTMP("XPDT",7823,"KRN",.404,185,40,14,1)="12.4"
^XTMP("XPDT",7823,"KRN",.404,185,40,14,2)="12,20^27^12,1"
^XTMP("XPDT",7823,"KRN",.404,185,40,14,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7823,"KRN",.404,185,40,15,0)="10^Is this person an active Trainee?^3^^12.6F"
^XTMP("XPDT",7823,"KRN",.404,185,40,15,1)="12.6"
^XTMP("XPDT",7823,"KRN",.404,185,40,15,2)="11,36^3^11,1"
^XTMP("XPDT",7823,"KRN",.404,185,40,15,12)="D REQ^XUSER2("""")"
^XTMP("XPDT",7823,"KRN",.404,185,40,15,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7823,"KRN",.404,185,40,16,0)="14^Trainee Inactive (Date)^3^^12.7F"
^XTMP("XPDT",7823,"KRN",.404,185,40,16,1)="12.7"
^XTMP("XPDT",7823,"KRN",.404,185,40,16,2)="14,63^11^14,38"
^XTMP("XPDT",7823,"KRN",.404,185,40,16,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7823,"KRN",.404,185,40,17,0)="12^Start Date of Training^3^^12.8F"
^XTMP("XPDT",7823,"KRN",.404,185,40,17,1)="12.8"
^XTMP("XPDT",7823,"KRN",.404,185,40,17,2)="13,25^11^13,1"
^XTMP("XPDT",7823,"KRN",.404,185,40,17,14)="I X="""" D EN^DDIOL($C(7)_""Deletions are not allowed!"") S DDSERROR=1"
^XTMP("XPDT",7823,"KRN",.404,190,0)="Termination^200"
^XTMP("XPDT",7823,"KRN",.404,190,40,0)="^.4044I^2^2"
^XTMP("XPDT",7823,"KRN",.404,190,40,1,0)="1^DELETE ALL MAIL ACCESS^3"
^XTMP("XPDT",7823,"KRN",.404,190,40,1,1)="9.21"
^XTMP("XPDT",7823,"KRN",.404,190,40,1,2)="2,27^3^2,3"
^XTMP("XPDT",7823,"KRN",.404,190,40,1,3)="YES"
^XTMP("XPDT",7823,"KRN",.404,190,40,2,0)="2^DELETE KEYS AT TERMINATION^3"
^XTMP("XPDT",7823,"KRN",.404,190,40,2,1)="9.22"
^XTMP("XPDT",7823,"KRN",.404,190,40,2,2)="4,31^3^4,3"
^XTMP("XPDT",7823,"KRN",.404,190,40,2,3)="YES"
^XTMP("XPDT",7823,"MBREQ")="0"
^XTMP("XPDT",7823,"ORD",8,.403)=".403;8;;;EDEOUT^DIFROMSO(.403,DA,"""",XPDA);FPRE^DIFROMSI(.403,"""",XPDA);EPRE^DIFROMSI(.403,DA,$E(""N"",$G(XPDNEW)),XPDA,"""",OLDA);;EPOST^DIFROMSI(.403,DA,"""",XPDA);DEL^DIFROMSK(.403,"""",%)"
^XTMP("XPDT",7823,"ORD",8,.403,0)="FORM"
^XTMP("XPDT",7823,"PKG",3,-1)="1^1"
^XTMP("XPDT",7823,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7823,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7823,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7823,"PKG",3,22,1,0)="8.0^3090706^3090706^6"
^XTMP("XPDT",7823,"PKG",3,22,1,"PAH",1,0)="542^3100517"
^XTMP("XPDT",7823,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7823,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7823,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7823,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7823,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7823,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7823,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7823,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7823,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7823,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7823,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7823,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7823,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7823,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7823,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7823,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7823,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7823,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7823,"QUES","XPM1","B")=""
^XTMP("XPDT",7823,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7823,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7823,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7823,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7823,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7823,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7823,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7823,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7823,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7823,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7823,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7823,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7823,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7823,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7823,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7823,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7823,"RTN")="4"
^XTMP("XPDT",7823,"RTN","XQ82")="0^4^B11169630^B10280365"
^XTMP("XPDT",7823,"RTN","XQ82",1,0)="XQ82 ;SF-ISC.SEA/JLI - CLEAN OLD $JOB DATA OUT OF XUTL(""XQ"", & OTHERS ;02/03/10  15:12"
^XTMP("XPDT",7823,"RTN","XQ82",2,0)=" ;;8.0;KERNEL;**59,67,157,258,312,353,542**;Jul 10, 1995;Build 5"
^XTMP("XPDT",7823,"RTN","XQ82",3,0)=" ;Make sure that can run from a DCL script"
^XTMP("XPDT",7823,"RTN","XQ82",4,0)=" N A,X,%DT,Y,J,K,DDATE,HDATA,HPID3,XQOS"
^XTMP("XPDT",7823,"RTN","XQ82",5,0)=" S U=""^"",DT=$$DT^XLFDT"
^XTMP("XPDT",7823,"RTN","XQ82",6,0)=" S HDATE=$H-7 ;Get seven days ago in $H days"
^XTMP("XPDT",7823,"RTN","XQ82",7,0)=" S DDATE=$$HTFM^XLFDT(HDATE) ;Get seven days ago in FM format"
^XTMP("XPDT",7823,"RTN","XQ82",8,0)=" S XQOS=^%ZOSF(""OS""),HPID3=$E($$CNV^XLFUTL($J,16),1,3)"
^XTMP("XPDT",7823,"RTN","XQ82",9,0)=" S HJOB=$J"
^XTMP("XPDT",7823,"RTN","XQ82",10,0)=" ;Do work as a set of sub routines"
^XTMP("XPDT",7823,"RTN","XQ82",11,0)=" D L0,L1,L2,L3,L4,L5,L6,L7"
^XTMP("XPDT",7823,"RTN","XQ82",12,0)="EXIT ;"
^XTMP("XPDT",7823,"RTN","XQ82",13,0)=" Q"
^XTMP("XPDT",7823,"RTN","XQ82",14,0)=" ;We keep track of jobs by putting data in ^XUTL(""XQ"",$J)."
^XTMP("XPDT",7823,"RTN","XQ82",15,0)=" ;Sign-on time is in ^($J,0) points to sign-on log."
^XTMP("XPDT",7823,"RTN","XQ82",16,0)=" ;Holds the Menu stack."
^XTMP("XPDT",7823,"RTN","XQ82",17,0)=" ;For any entry in user stack w/ date older than 7 days or w/o zero node"
^XTMP("XPDT",7823,"RTN","XQ82",18,0)=" ;kill XUTL(""XQ"",n) and corresponding UTILITY(n) and TMP(n) nodes."
^XTMP("XPDT",7823,"RTN","XQ82",19,0)="L0 N %T"
^XTMP("XPDT",7823,"RTN","XQ82",20,0)=" F J=0:0 S J=$O(^XUTL(""XQ"",J)) Q:J'>0  I $S('$D(^(J,0)):1,1:^(0)<DDATE) D"
^XTMP("XPDT",7823,"RTN","XQ82",21,0)=" . I $G(^XUTL(""XQ"",J,""KEEPALIVE""))>HDATE Q  ;For long running jobs"
^XTMP("XPDT",7823,"RTN","XQ82",22,0)=" . I $D(^XUTL(""XQ"",J,""ZTSKNUM"")) L +^%ZTSCH(""TASK"",^XUTL(""XQ"",J,""ZTSKNUM"")):0 Q:'$T  L -^%ZTSCH(""TASK"",^XUTL(""XQ"",J,""ZTSKNUM""))"
^XTMP("XPDT",7823,"RTN","XQ82",23,0)=" . K ^XUTL(""XQ"",J),^UTILITY(J),^TMP(J)"
^XTMP("XPDT",7823,"RTN","XQ82",24,0)=" . Q"
^XTMP("XPDT",7823,"RTN","XQ82",25,0)=" Q:'$$CHECK  ;Check if we should skip pass 2."
^XTMP("XPDT",7823,"RTN","XQ82",26,0)=" ;Now to check again for DEAD jobs on local node"
^XTMP("XPDT",7823,"RTN","XQ82",27,0)=" F J=0:0 S J=$O(^XUTL(""XQ"",J)) Q:J'>0  D"
^XTMP("XPDT",7823,"RTN","XQ82",28,0)=" . I $$DEAD(J) K ^XUTL(""XQ"",J),^UTILITY(J),^TMP(J)"
^XTMP("XPDT",7823,"RTN","XQ82",29,0)=" Q"
^XTMP("XPDT",7823,"RTN","XQ82",30,0)=" ;"
^XTMP("XPDT",7823,"RTN","XQ82",31,0)=" ;Loop thru UTILITY and look for nodes w/o corresponding XUTL(""XQ"",n)"
^XTMP("XPDT",7823,"RTN","XQ82",32,0)="L1 S A="""" F  S A=$O(^UTILITY(A)) Q:A=""""  D"
^XTMP("XPDT",7823,"RTN","XQ82",33,0)=" . I A>0,'$D(^XUTL(""XQ"",A)) K ^UTILITY(A) Q  ;UTILITY($J) w/o XUTL(""XQ"",$J) node."
^XTMP("XPDT",7823,"RTN","XQ82",34,0)=" . Q:A>0  Q:""^ROU^GLO^LRLTR^""[(""^""_A_""^"")"
^XTMP("XPDT",7823,"RTN","XQ82",35,0)=" . F J=0:0 S J=$O(^UTILITY(A,J)) Q:J'>0  I '$D(^XUTL(""XQ"",J)) K ^UTILITY(A,J) ;Remove UTILITY(namespace,$J) w/o XUTL(""XQ"",$J)"
^XTMP("XPDT",7823,"RTN","XQ82",36,0)=" . Q"
^XTMP("XPDT",7823,"RTN","XQ82",37,0)=" Q"
^XTMP("XPDT",7823,"RTN","XQ82",38,0)=" ;"
^XTMP("XPDT",7823,"RTN","XQ82",39,0)=" ;Loop thru TMP and look for nodes w/o corresponding XUTL(""XQ"",n)"
^XTMP("XPDT",7823,"RTN","XQ82",40,0)="L2 S A="""" F  S A=$O(^TMP(A)) Q:A=""""  D"
^XTMP("XPDT",7823,"RTN","XQ82",41,0)=" . I A>0,'$D(^XUTL(""XQ"",A)) K ^TMP(A) Q  ;TMP($J) w/o XUTL(""XQ"",$J) node."
^XTMP("XPDT",7823,"RTN","XQ82",42,0)=" . Q:A>0  ;Q:""^ROU^GLO^LRLTR^""[(""^""_A_""^"")"
^XTMP("XPDT",7823,"RTN","XQ82",43,0)=" . F J=0:0 S J=$O(^TMP(A,J)) Q:J'>0  I '$D(^XUTL(""XQ"",J)) K ^TMP(A,J) ;Remove TMP(namespace,$J) w/o XUTL(""XQ"",$J)"
^XTMP("XPDT",7823,"RTN","XQ82",44,0)=" . Q"
^XTMP("XPDT",7823,"RTN","XQ82",45,0)=" Q"
^XTMP("XPDT",7823,"RTN","XQ82",46,0)=" ;"
^XTMP("XPDT",7823,"RTN","XQ82",47,0)="L3 ;Now to cleanup the XTMP global w/ XTMP(namespace,0)<DT"
^XTMP("XPDT",7823,"RTN","XQ82",48,0)=" S A="""" F  S A=$O(^XTMP(A)) Q:A=""""  S J=$G(^XTMP(A,0)) I J<DT K ^XTMP(A)"
^XTMP("XPDT",7823,"RTN","XQ82",49,0)=" Q"
^XTMP("XPDT",7823,"RTN","XQ82",50,0)=" ;"
^XTMP("XPDT",7823,"RTN","XQ82",51,0)="L4 ;Now go thru and clean old ^XUSEC(0,""CUR"",duz,sign-on) nodes."
^XTMP("XPDT",7823,"RTN","XQ82",52,0)=" D L51(""CUR"")"
^XTMP("XPDT",7823,"RTN","XQ82",53,0)=" Q"
^XTMP("XPDT",7823,"RTN","XQ82",54,0)=" ;"
^XTMP("XPDT",7823,"RTN","XQ82",55,0)="L5 ;Now go through and clean old ^XUSEC(0,""AS*"" nodes."
^XTMP("XPDT",7823,"RTN","XQ82",56,0)=" D L51(""AS1""),L51(""AS2"")"
^XTMP("XPDT",7823,"RTN","XQ82",57,0)=" Q"
^XTMP("XPDT",7823,"RTN","XQ82",58,0)=" ;"
^XTMP("XPDT",7823,"RTN","XQ82",59,0)="L6 ;Clean out old build nodes from ^XUTL"
^XTMP("XPDT",7823,"RTN","XQ82",60,0)=" S K="""""
^XTMP("XPDT",7823,"RTN","XQ82",61,0)=" F  S K=$O(^XUTL(""XQO"",K)) Q:K=""""  D"
^XTMP("XPDT",7823,"RTN","XQ82",62,0)=" . I $D(^XUTL(""XQO"",K,""^BUILD"")),($P($H,"","",2)-^(""^BUILD"")>1800)!(^(""^BUILD"")>$P($H,"","",2)) K ^(""^BUILD"")"
^XTMP("XPDT",7823,"RTN","XQ82",63,0)=" Q"
^XTMP("XPDT",7823,"RTN","XQ82",64,0)=" ;"
^XTMP("XPDT",7823,"RTN","XQ82",65,0)="L7 ;Kill ^DISV for TERMINATED or DISUSER Users."
^XTMP("XPDT",7823,"RTN","XQ82",66,0)=" N DA,USER"
^XTMP("XPDT",7823,"RTN","XQ82",67,0)=" S DA="""",U=""^"""
^XTMP("XPDT",7823,"RTN","XQ82",68,0)=" F  S DA=$O(^DISV(DA)) Q:DA=""""  S USER=$$ACTIVE^XUSER(DA) I '(+USER) K ^DISV(DA)"
^XTMP("XPDT",7823,"RTN","XQ82",69,0)=" Q"
^XTMP("XPDT",7823,"RTN","XQ82",70,0)=" ;"
^XTMP("XPDT",7823,"RTN","XQ82",71,0)="L51(NDX) ;Clean old Sign-on log entries from X-ref"
^XTMP("XPDT",7823,"RTN","XQ82",72,0)=" N I,J,FDA,NOW,ERR,IEN"
^XTMP("XPDT",7823,"RTN","XQ82",73,0)=" S I="""",NOW=$$NOW^XLFDT"
^XTMP("XPDT",7823,"RTN","XQ82",74,0)=" F  S I=$O(^XUSEC(0,NDX,I)) Q:I=""""  F J=0:0 S J=$O(^XUSEC(0,NDX,I,J)) Q:(J'>0)  D"
^XTMP("XPDT",7823,"RTN","XQ82",75,0)=" . ;Look at every entry in the X-ref, check for data record"
^XTMP("XPDT",7823,"RTN","XQ82",76,0)=" . I $D(^XUSEC(0,J,0))[0 K ^XUSEC(0,NDX,I,J) Q  ;No data record."
^XTMP("XPDT",7823,"RTN","XQ82",77,0)=" . Q:J'<DDATE  ;Keep for now"
^XTMP("XPDT",7823,"RTN","XQ82",78,0)=" . S FDA(3.081,J_"","",3)=NOW,FDA(3.081,J_"","",16)=1 D UPDATE^DIE("""",""FDA"",""IEN"",""ERR"")"
^XTMP("XPDT",7823,"RTN","XQ82",79,0)=" . K FDA,IEN,ERR"
^XTMP("XPDT",7823,"RTN","XQ82",80,0)=" . Q"
^XTMP("XPDT",7823,"RTN","XQ82",81,0)=" Q"
^XTMP("XPDT",7823,"RTN","XQ82",82,0)=" ;"
^XTMP("XPDT",7823,"RTN","XQ82",83,0)="DEAD(X1) ;Check if X1 is a PID and DEAD"
^XTMP("XPDT",7823,"RTN","XQ82",84,0)=" ;Return 1 if should clean, 0 to skip"
^XTMP("XPDT",7823,"RTN","XQ82",85,0)=" I X1\1'=X1 Q 0"
^XTMP("XPDT",7823,"RTN","XQ82",86,0)=" I $E($$CNV^XLFUTL(X1,16),1,3)'=HPID3 Q 0"
^XTMP("XPDT",7823,"RTN","XQ82",87,0)=" ; X1 is a PID on this node, is PID active?.."
^XTMP("XPDT",7823,"RTN","XQ82",88,0)=" I $D(^$JOB(X1))=0 Q 1 ; Job is DEAD"
^XTMP("XPDT",7823,"RTN","XQ82",89,0)=" Q 0"
^XTMP("XPDT",7823,"RTN","XQ82",90,0)=" ;"
^XTMP("XPDT",7823,"RTN","XQ82",91,0)="CHECK() ;Check that we have the right enviroment to do pass 2"
^XTMP("XPDT",7823,"RTN","XQ82",92,0)=" ;Are we on VMS, is ^$JOB supported"
^XTMP("XPDT",7823,"RTN","XQ82",93,0)=" I XQOS[""GT.M"" Q 0"
^XTMP("XPDT",7823,"RTN","XQ82",94,0)=" I XQOS[""DSM"" Q 1"
^XTMP("XPDT",7823,"RTN","XQ82",95,0)=" I XQOS[""OpenM"" X ""I $ZV[""""VMS"""""" Q $T"
^XTMP("XPDT",7823,"RTN","XQ82",96,0)=" Q 0"
^XTMP("XPDT",7823,"RTN","XQ82",97,0)=" ;"
^XTMP("XPDT",7823,"RTN","XUA4A7")="0^2^B9747863^B9706649"
^XTMP("XPDT",7823,"RTN","XUA4A7",1,0)="XUA4A7 ;ISCSF/RWF - K7, Give entrys into F6 a Provider key ;03/24/10  07:58"
^XTMP("XPDT",7823,"RTN","XUA4A7",2,0)=" ;;8.0;KERNEL;**49,542**;Jul 10, 1995;Build 5"
^XTMP("XPDT",7823,"RTN","XUA4A7",3,0)=" Q  ;don't enter from top."
^XTMP("XPDT",7823,"RTN","XUA4A7",4,0)="F6S ;Give provider the key."
^XTMP("XPDT",7823,"RTN","XUA4A7",5,0)=" N %,X1,X2 S %=$G(^DIC(6,DA,""I"")) I %,%<DT Q  ;see if inactive"
^XTMP("XPDT",7823,"RTN","XUA4A7",6,0)=" S X1=+$G(^DIC(16,X,""A3"")) I 'X1 Q  ;get pointer"
^XTMP("XPDT",7823,"RTN","XUA4A7",7,0)=" S %=$O(^DIC(19.1,""B"",""PROVIDER"",0)) I '% Q  ;get index"
^XTMP("XPDT",7823,"RTN","XUA4A7",8,0)="F6S7 ;Kernel 7"
^XTMP("XPDT",7823,"RTN","XUA4A7",9,0)=" I $D(^VA(200,X1,51,%,0)) Q  ;allready have it."
^XTMP("XPDT",7823,"RTN","XUA4A7",10,0)=" N DD,DO,DIC,DS,DA"
^XTMP("XPDT",7823,"RTN","XUA4A7",11,0)=" S DIC=""^VA(200,DA(1),51,"",DIC(0)=""NML"",(X,DINUM)=%,DA(1)=X1,DIC(""P"")=$P(^DD(200,51,0),""^"",2) D FILE^DICN ;give it."
^XTMP("XPDT",7823,"RTN","XUA4A7",12,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUA4A7",13,0)="F6K Q  ;can't delete"
^XTMP("XPDT",7823,"RTN","XUA4A7",14,0)=" ;"
^XTMP("XPDT",7823,"RTN","XUA4A7",15,0)="F200S ;name change V6.5 only"
^XTMP("XPDT",7823,"RTN","XUA4A7",16,0)=" N X1,X2 F X1=0:0 S X1=$O(^DIC(19.1,""D"",DA,X1)) Q:X1'>0  S X2=$G(^DIC(19.1,X1,0)) I $P(X2,U,3)=""l"" S ^VA(200,""AK.""_$P(X2,U),X,DA)="""""
^XTMP("XPDT",7823,"RTN","XUA4A7",17,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUA4A7",18,0)="F200K ;name change V6.5 only"
^XTMP("XPDT",7823,"RTN","XUA4A7",19,0)=" N X1,X2 S X1=""AK."" F X2=0:0 S X1=$O(^VA(200,X1)) Q:$E(X1,1,3)'=""AK.""  K ^VA(200,X1,X,DA)"
^XTMP("XPDT",7823,"RTN","XUA4A7",20,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUA4A7",21,0)=" ;"
^XTMP("XPDT",7823,"RTN","XUA4A7",22,0)="FE51S ;Key assignment from new person key subfile"
^XTMP("XPDT",7823,"RTN","XUA4A7",23,0)=" N %,X1,X2 S %=$G(^DIC(19.1,X,0)) Q:$P(%,U,3)'=""l""  ;see if lookup"
^XTMP("XPDT",7823,"RTN","XUA4A7",24,0)=" S X1=$P($G(^VA(200,DA(1),0)),U) Q:X1=""""  ;get name"
^XTMP("XPDT",7823,"RTN","XUA4A7",25,0)=" S ^VA(200,""AK.""_$P(%,U),X1,DA(1))="""" ;set X-ref"
^XTMP("XPDT",7823,"RTN","XUA4A7",26,0)=" Q:%'[""PROVIDER""  Q:'$D(^DD(3,0))"
^XTMP("XPDT",7823,"RTN","XUA4A7",27,0)=" S X2=+$P($G(^DIC(3,DA(1),0)),U,16) Q:$D(^DIC(6,X2,0))  ;see if in provider file"
^XTMP("XPDT",7823,"RTN","XUA4A7",28,0)=" N DIC,DD,DO,DA,DS,X,Y S DIC=""^DIC(6,"",DIC(0)=""L"",DLAYGO=6,(X,DINUM)=X2 D FILE^DICN ;add"
^XTMP("XPDT",7823,"RTN","XUA4A7",29,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUA4A7",30,0)="FE51K ;Key removal from new person key subfile"
^XTMP("XPDT",7823,"RTN","XUA4A7",31,0)=" N %,X1 S %=$G(^DIC(19.1,X,0)) ;remove incase lookup flag has been removed."
^XTMP("XPDT",7823,"RTN","XUA4A7",32,0)=" S X1=$P($G(^VA(200,DA(1),0)),U)"
^XTMP("XPDT",7823,"RTN","XUA4A7",33,0)=" K ^VA(200,""AK.""_$P(%,U),X1,DA(1))"
^XTMP("XPDT",7823,"RTN","XUA4A7",34,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUA4A7",35,0)="F19S ;holder subfile assignment V6.5 only"
^XTMP("XPDT",7823,"RTN","XUA4A7",36,0)=" N %,X1,X2 S %=$G(^DIC(19.1,DA(1),0)) Q:$P(%,U,3)'=""l""  ;see if lookup"
^XTMP("XPDT",7823,"RTN","XUA4A7",37,0)=" S X1=$P($G(^VA(200,X,0)),U) Q:X1=""""  ;get name"
^XTMP("XPDT",7823,"RTN","XUA4A7",38,0)=" S ^VA(200,""AK.""_$P(%,U),X1,X)="""" ;set X-ref"
^XTMP("XPDT",7823,"RTN","XUA4A7",39,0)=" Q:%'[""PROVIDER"""
^XTMP("XPDT",7823,"RTN","XUA4A7",40,0)=" S X2=+$P($G(^DIC(3,X,0)),U,16) Q:$D(^DIC(6,X2,0))  ;see if in provider file"
^XTMP("XPDT",7823,"RTN","XUA4A7",41,0)=" N DIC,DD,DO,DA,DS,X,Y S X=X2,DIC=""^DIC(6,"",DIC(0)=""L"",DLAYGO=6,DINUM=X2 D FILE^DICN ;add"
^XTMP("XPDT",7823,"RTN","XUA4A7",42,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUA4A7",43,0)="F19K ;holder subfile V6.5 only"
^XTMP("XPDT",7823,"RTN","XUA4A7",44,0)=" S %=$G(^DIC(19.1,DA(1),0)) Q:$P(%,U,3)'=""l"""
^XTMP("XPDT",7823,"RTN","XUA4A7",45,0)=" S X1=$P($G(^DIC(3,X,0)),U)"
^XTMP("XPDT",7823,"RTN","XUA4A7",46,0)=" K ^VA(200,""AK.""_$P(%,U),X1,X)"
^XTMP("XPDT",7823,"RTN","XUA4A7",47,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUA4A7",48,0)="LAYGO ;Called from ^DD(200,.01,""LAYGO"",1,0)"
^XTMP("XPDT",7823,"RTN","XUA4A7",49,0)=" Q:DIC(0)'[""E"""
^XTMP("XPDT",7823,"RTN","XUA4A7",50,0)=" W !,""Checking SOUNDEX for matches."""
^XTMP("XPDT",7823,"RTN","XUA4A7",51,0)=" N DIR,DUOUT,DIRUT,Y,XU1,XU2,XU3 S XU3=X"
^XTMP("XPDT",7823,"RTN","XUA4A7",52,0)=" S X=$$EN^XUA4A71(XU3),XU2=0"
^XTMP("XPDT",7823,"RTN","XUA4A7",53,0)=" F XU1=0:0 S XU1=$O(^VA(200,""ASX"",X,XU1)) Q:XU1'>0  D  Q:$D(DIRUT)"
^XTMP("XPDT",7823,"RTN","XUA4A7",54,0)=" . W !?5,$P($G(^VA(200,XU1,0)),""^"") S XU2=XU2+1"
^XTMP("XPDT",7823,"RTN","XUA4A7",55,0)=" . I '(XU2#16) N X S DIR(0)=""E"" D ^DIR"
^XTMP("XPDT",7823,"RTN","XUA4A7",56,0)=" . Q"
^XTMP("XPDT",7823,"RTN","XUA4A7",57,0)=" I 'XU2 W !,""No matches found."" S XU2=1 G L3"
^XTMP("XPDT",7823,"RTN","XUA4A7",58,0)="L2 R !,""Do you still want to add this entry: NO//"",XU2:DTIME S XU2=$TR($E(XU2_""N""),""NnYy^?"",""00110?"")"
^XTMP("XPDT",7823,"RTN","XUA4A7",59,0)=" I ""01""'[XU2 W !?4,""Answer NO to stop the addition of "",XU3,"" as a new person."",!?4,""Answer YES to add, a '^' will be taken as a NO."" G L2"
^XTMP("XPDT",7823,"RTN","XUA4A7",60,0)="L3 I XU2"
^XTMP("XPDT",7823,"RTN","XUA4A7",61,0)=" S X=XU3"
^XTMP("XPDT",7823,"RTN","XUA4A7",62,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUDHGUI")="0^3^B6047826^B5912436"
^XTMP("XPDT",7823,"RTN","XUDHGUI",1,0)="XUDHGUI ;ISF/STAFF,SLC/KCM - Device Utilites for Windows Calls ;03/24/10  10:34"
^XTMP("XPDT",7823,"RTN","XUDHGUI",2,0)=" ;;8.0;KERNEL;**220,542**;Jul 10, 1995;Build 5"
^XTMP("XPDT",7823,"RTN","XUDHGUI",3,0)=" ;"
^XTMP("XPDT",7823,"RTN","XUDHGUI",4,0)="DEVICE(LST,FROM,DIR,RMAR) ; Return a subset of entries from the Device file"
^XTMP("XPDT",7823,"RTN","XUDHGUI",5,0)=" ; Return up to 20 entries."
^XTMP("XPDT",7823,"RTN","XUDHGUI",6,0)=" ; .LST(n)=IEN^Name^DisplayName^Location^RMar^PLen"
^XTMP("XPDT",7823,"RTN","XUDHGUI",7,0)=" ; FROM=text to $O from. Allow the DisplayName to be used."
^XTMP("XPDT",7823,"RTN","XUDHGUI",8,0)=" ; Allow ""NAME*"" to get count limit from that starting point."
^XTMP("XPDT",7823,"RTN","XUDHGUI",9,0)=" ; DIR=$O direction"
^XTMP("XPDT",7823,"RTN","XUDHGUI",10,0)=" ; [RMAR]=min RM value or min-max value (Default to 80)."
^XTMP("XPDT",7823,"RTN","XUDHGUI",11,0)=" N I,IEN,CNT,FR,SHOW,X,RML,RMH"
^XTMP("XPDT",7823,"RTN","XUDHGUI",12,0)=" S I=0,CNT=$G(CNT,20),RMAR=$G(RMAR,80)"
^XTMP("XPDT",7823,"RTN","XUDHGUI",13,0)=" I '$G(DIR) S DIR=1"
^XTMP("XPDT",7823,"RTN","XUDHGUI",14,0)=" S RML=+RMAR,RMH=$S(RMAR[""-"":$P(RMAR,""-"",2),1:99999)"
^XTMP("XPDT",7823,"RTN","XUDHGUI",15,0)=" ;Allow the DisplayName to be used."
^XTMP("XPDT",7823,"RTN","XUDHGUI",16,0)=" I FROM[""  <"" S FROM=$RE($P($RE(FROM),""<  "",2))"
^XTMP("XPDT",7823,"RTN","XUDHGUI",17,0)=" S FR=FROM I FROM[""*"" S FROM=$P(FROM,""*"",1),FR="""""
^XTMP("XPDT",7823,"RTN","XUDHGUI",18,0)=" F  Q:I'<CNT  S FROM=$O(^%ZIS(1,""B"",FROM),DIR) Q:(FROM="""")  D"
^XTMP("XPDT",7823,"RTN","XUDHGUI",19,0)=" . I $L(FR),($E(FROM,1,$L(FR))'=FR) Q"
^XTMP("XPDT",7823,"RTN","XUDHGUI",20,0)=" . S IEN=0 F  S IEN=$O(^%ZIS(1,""B"",FROM,IEN)) Q:'IEN  D"
^XTMP("XPDT",7823,"RTN","XUDHGUI",21,0)=" .. N X0,X1,X90,X91,X95,XTYPE,XSTYPE,XTIME,%A,%C,%H,%L,%X,EXT"
^XTMP("XPDT",7823,"RTN","XUDHGUI",22,0)=" .. Q:'$D(^%ZIS(1,IEN,0))  S X0=^(0),X1=$G(^(1)),X90=$G(^(90)),X91=$G(^(91)),X95=$G(^(95)),XSTYPE=$G(^(""SUBTYPE"")),XTIME=$G(^(""TIME"")),XTYPE=$G(^(""TYPE""))"
^XTMP("XPDT",7823,"RTN","XUDHGUI",23,0)=" .. I $E($G(^%ZIS(2,+XSTYPE,0)))'=""P"" Q  ;Printers only"
^XTMP("XPDT",7823,"RTN","XUDHGUI",24,0)=" .. S X=$P(XTYPE,""^"") I X'=""TRM"",X'=""HG"",X'=""HFS"",X'=""CHAN"" Q  ;Device Types"
^XTMP("XPDT",7823,"RTN","XUDHGUI",25,0)=" .. I ($P(X0,U,2)=""0"")!($P(X0,U,12)=2) Q  ;Queuing allowed"
^XTMP("XPDT",7823,"RTN","XUDHGUI",26,0)=" .. S X=+X90 I X,(X'>DT) Q  ;Out of Service"
^XTMP("XPDT",7823,"RTN","XUDHGUI",27,0)=" .. ;%C is current time, %L is lower limit, %H is upper limit"
^XTMP("XPDT",7823,"RTN","XUDHGUI",28,0)=" .. S %A=$P(XTIME,""^"") I $L(%A) S %C=$P($H,"","",2),%C=%C\60#60+(%C\3600*100),%H=$P(%A,""-"",2),%L=+%A I $S(%H'<%L:(%C'>%H&(%C'<%L)),1:(%C'<%L!(%C'>%H))) Q  ;Prohibited Times"
^XTMP("XPDT",7823,"RTN","XUDHGUI",29,0)=" .. S EXT=0"
^XTMP("XPDT",7823,"RTN","XUDHGUI",30,0)=" .. I X95]"""" S %X=$G(DUZ(0)) I %X'=""@"" S EXT=1 F %A=1:1:$L(%X) I X95[$E(%X,%A) S EXT=0 Q"
^XTMP("XPDT",7823,"RTN","XUDHGUI",31,0)=" .. Q:EXT  ;Security check"
^XTMP("XPDT",7823,"RTN","XUDHGUI",32,0)=" .. I '+X91 S X91=$G(^%ZIS(2,+XSTYPE,1),""80^#^60^"") ;Get default width & page length p542"
^XTMP("XPDT",7823,"RTN","XUDHGUI",33,0)=" .. I RML>0,(+X91<RML)!(+X91>RMH) Q"
^XTMP("XPDT",7823,"RTN","XUDHGUI",34,0)=" .. S SHOW=$P(X0,U) I SHOW'=FROM S SHOW=FROM_""  <""_SHOW_"">"""
^XTMP("XPDT",7823,"RTN","XUDHGUI",35,0)=" .. S I=I+1,LST(I)=IEN_U_$P(X0,U)_U_SHOW_U_$P(X1,U)_U_$P(X91,U)_U_$P(X91,U,3)"
^XTMP("XPDT",7823,"RTN","XUDHGUI",36,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUPROD")="0^1^B7428369^B5031849"
^XTMP("XPDT",7823,"RTN","XUPROD",1,0)="XUPROD ;ISF/RWF - Is this a PROD account. ;04/12/10  14:04"
^XTMP("XPDT",7823,"RTN","XUPROD",2,0)=" ;;8.0;KERNEL;**284,440,542**;Jul 10, 1995;Build 5"
^XTMP("XPDT",7823,"RTN","XUPROD",3,0)=" ;"
^XTMP("XPDT",7823,"RTN","XUPROD",4,0)=" ;IA# 4440"
^XTMP("XPDT",7823,"RTN","XUPROD",5,0)="PROD(FORCE) ;Return 1 if this is a production account"
^XTMP("XPDT",7823,"RTN","XUPROD",6,0)=" ;A non-zero flag will force a real check"
^XTMP("XPDT",7823,"RTN","XUPROD",7,0)=" ;This call just checks a flag in the KSP, Other code will compair"
^XTMP("XPDT",7823,"RTN","XUPROD",8,0)=" ;with registered ID."
^XTMP("XPDT",7823,"RTN","XUPROD",9,0)=" N LC,SID"
^XTMP("XPDT",7823,"RTN","XUPROD",10,0)=" S SID=$G(^XTV(8989.3,1,""SID""))"
^XTMP("XPDT",7823,"RTN","XUPROD",11,0)=" I '$L($P(SID,""^"",3))!($P(SID,""^"",3)'=$G(DT))!$G(FORCE) D"
^XTMP("XPDT",7823,"RTN","XUPROD",12,0)=" . D CHECK S SID=$G(^XTV(8989.3,1,""SID""))"
^XTMP("XPDT",7823,"RTN","XUPROD",13,0)=" Q +$P(SID,""^"",1)"
^XTMP("XPDT",7823,"RTN","XUPROD",14,0)=" ;"
^XTMP("XPDT",7823,"RTN","XUPROD",15,0)="CHECK ;Check if SID matched stored value, Set field 501"
^XTMP("XPDT",7823,"RTN","XUPROD",16,0)=" N CSID,SSID,FDA"
^XTMP("XPDT",7823,"RTN","XUPROD",17,0)=" L +^XTV(8989.3,1,""SID""):2"
^XTMP("XPDT",7823,"RTN","XUPROD",18,0)=" S CSID=$$SID^%ZOSV,SSID=$P($G(^XTV(8989.3,1,""SID"")),""^"",2)"
^XTMP("XPDT",7823,"RTN","XUPROD",19,0)=" S FDA(8989.3,""1,"",501)=(CSID=SSID),FDA(8989.3,""1,"",503)=$$DT^XLFDT"
^XTMP("XPDT",7823,"RTN","XUPROD",20,0)=" D FILE^DIE("""",""FDA"")"
^XTMP("XPDT",7823,"RTN","XUPROD",21,0)=" L -^XTV(8989.3,1,""SID"")"
^XTMP("XPDT",7823,"RTN","XUPROD",22,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUPROD",23,0)=" ;"
^XTMP("XPDT",7823,"RTN","XUPROD",24,0)="SSID(SID) ;Set the SID into KSP."
^XTMP("XPDT",7823,"RTN","XUPROD",25,0)=" N FDA"
^XTMP("XPDT",7823,"RTN","XUPROD",26,0)=" S FDA(8989.3,""1,"",502)=SID,FDA(8989.3,""1,"",503)=""@"""
^XTMP("XPDT",7823,"RTN","XUPROD",27,0)=" L +^XTV(8989.3,1,""SID""):2"
^XTMP("XPDT",7823,"RTN","XUPROD",28,0)=" D FILE^DIE("""",""FDA"")"
^XTMP("XPDT",7823,"RTN","XUPROD",29,0)=" L -^XTV(8989.3,1,""SID"")"
^XTMP("XPDT",7823,"RTN","XUPROD",30,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUPROD",31,0)="ASK ;Ask user if this is prod."
^XTMP("XPDT",7823,"RTN","XUPROD",32,0)=" N DIR,P,P2,T,Y S P=$$PROD"
^XTMP("XPDT",7823,"RTN","XUPROD",33,0)=" S DIR(0)=""YO"",DIR(""A"")=""Is this a Production Account"",DIR(""B"")=$S(P:""Yes"",1:""No"")"
^XTMP("XPDT",7823,"RTN","XUPROD",34,0)=" S DIR(""A"",1)="""""
^XTMP("XPDT",7823,"RTN","XUPROD",35,0)=" S DIR(""A"",2)=""This is currently a ""_$S(P:""PRODUCTION"",1:""TEST"")_"" account."""
^XTMP("XPDT",7823,"RTN","XUPROD",36,0)=" S DIR(""A"",3)="" """
^XTMP("XPDT",7823,"RTN","XUPROD",37,0)=" S DIR(""A"",4)=""Only answer YES if this is the full time Production Account."""
^XTMP("XPDT",7823,"RTN","XUPROD",38,0)=" S DIR(""A"",5)=""Answer No for all other accounts."",DIR(""A"",6)="""""
^XTMP("XPDT",7823,"RTN","XUPROD",39,0)=" D ^DIR S T=Y Q:$D(DIRUT)"
^XTMP("XPDT",7823,"RTN","XUPROD",40,0)=" K DIR"
^XTMP("XPDT",7823,"RTN","XUPROD",41,0)=" S DIR(0)=""YO"""
^XTMP("XPDT",7823,"RTN","XUPROD",42,0)=" S DIR(""A"",1)="""",DIR(""A"",2)=""Are you sure you want to change from a ""_$S(P:""PRODUCTION"",1:""TEST"")_"" account"""
^XTMP("XPDT",7823,"RTN","XUPROD",43,0)=" S DIR(""A"")=""to a ""_$S(Y:""PRODUCTION"",1:""TEST"")_"" account"",DIR(""B"")=""No"""
^XTMP("XPDT",7823,"RTN","XUPROD",44,0)=" D:P'=Y ^DIR"
^XTMP("XPDT",7823,"RTN","XUPROD",45,0)=" I Y=1 D SSID($$SID^%ZOSV):T=1,SSID(""2~TEST~999""):T=0"
^XTMP("XPDT",7823,"RTN","XUPROD",46,0)=" S P2=$$PROD"
^XTMP("XPDT",7823,"RTN","XUPROD",47,0)=" W !!,""This is ""_$S(P=P2:""still"",1:""now"")_"" a ""_$S(P2:""PRODUCTION"",1:""TEST"")_"" account."",!"
^XTMP("XPDT",7823,"RTN","XUPROD",48,0)=" Q"
^XTMP("XPDT",7823,"RTN","XUPROD",49,0)=" ;"
^XTMP("XPDT",7823,"RTN","XUPROD",50,0)="EDIT ;Edit Logical - Physical fields"
^XTMP("XPDT",7823,"RTN","XUPROD",51,0)=" N DIE,DA,DR"
^XTMP("XPDT",7823,"RTN","XUPROD",52,0)=" L +^XTV(8989.3,1,""SID""):$G(DILOCKTM,5) E  W !,""Busy, Please try again later."",! Q  ;p542"
^XTMP("XPDT",7823,"RTN","XUPROD",53,0)=" W !!,""This is only valid in a Cache v5.2 client/server configuration."""
^XTMP("XPDT",7823,"RTN","XUPROD",54,0)=" W !,""This lets you edit the fields that support the"""
^XTMP("XPDT",7823,"RTN","XUPROD",55,0)=" W !,""LOGICAL to PHYSICAL translation for the System ID."",!!"
^XTMP("XPDT",7823,"RTN","XUPROD",56,0)=" S DA=1,DIE=""^XTV(8989.3,"",DR=""504;505"" D ^DIE"
^XTMP("XPDT",7823,"RTN","XUPROD",57,0)=" L -^XTV(8989.3,1,""SID"")"
^XTMP("XPDT",7823,"RTN","XUPROD",58,0)=" Q"
^XTMP("XPDT",7823,"VER")="8.0^22.0"
^XTMP("XPDT",7834)="1"
^XTMP("XPDT",7834,"BLD",1118,0)="XU*8.0*506^KERNEL^0^3090312^y"
^XTMP("XPDT",7834,"BLD",1118,1,0)="^^4^4^3081209^^"
^XTMP("XPDT",7834,"BLD",1118,1,1,0)="Please see the patch description on FORUM, in the National"
^XTMP("XPDT",7834,"BLD",1118,1,2,0)=" Patch Module."
^XTMP("XPDT",7834,"BLD",1118,1,3,0)=""
^XTMP("XPDT",7834,"BLD",1118,1,4,0)=""
^XTMP("XPDT",7834,"BLD",1118,4,0)="^9.64PA^^"
^XTMP("XPDT",7834,"BLD",1118,6)="^417"
^XTMP("XPDT",7834,"BLD",1118,6.3)="11"
^XTMP("XPDT",7834,"BLD",1118,"ABPKG")="n"
^XTMP("XPDT",7834,"BLD",1118,"KRN",0)="^9.67PA^779.2^20"
^XTMP("XPDT",7834,"BLD",1118,"KRN",.4,0)=".4"
^XTMP("XPDT",7834,"BLD",1118,"KRN",.401,0)=".401"
^XTMP("XPDT",7834,"BLD",1118,"KRN",.402,0)=".402"
^XTMP("XPDT",7834,"BLD",1118,"KRN",.403,0)=".403"
^XTMP("XPDT",7834,"BLD",1118,"KRN",.5,0)=".5"
^XTMP("XPDT",7834,"BLD",1118,"KRN",.84,0)=".84"
^XTMP("XPDT",7834,"BLD",1118,"KRN",3.6,0)="3.6"
^XTMP("XPDT",7834,"BLD",1118,"KRN",3.8,0)="3.8"
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.2,0)="9.2"
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,0)="9.8"
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM",0)="^9.68A^6^6"
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM",1,0)="XPDCOM^^0^B16563839"
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM",2,0)="XPDCOMG^^0^B8227835"
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM",3,0)="XPDCOMF^^0^B79333923"
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM",4,0)="XPDCOML^^0^B8752451"
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM",5,0)="XPDIU^^0^B16953601"
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM",6,0)="XPDIJ^^0^B23600088"
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM","B","XPDCOM",1)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM","B","XPDCOMF",3)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM","B","XPDCOMG",2)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM","B","XPDCOML",4)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM","B","XPDIJ",6)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN",9.8,"NM","B","XPDIU",5)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN",19,0)="19"
^XTMP("XPDT",7834,"BLD",1118,"KRN",19,"NM",0)="^9.68A^^"
^XTMP("XPDT",7834,"BLD",1118,"KRN",19.1,0)="19.1"
^XTMP("XPDT",7834,"BLD",1118,"KRN",101,0)="101"
^XTMP("XPDT",7834,"BLD",1118,"KRN",409.61,0)="409.61"
^XTMP("XPDT",7834,"BLD",1118,"KRN",771,0)="771"
^XTMP("XPDT",7834,"BLD",1118,"KRN",779.2,0)="779.2"
^XTMP("XPDT",7834,"BLD",1118,"KRN",870,0)="870"
^XTMP("XPDT",7834,"BLD",1118,"KRN",8989.51,0)="8989.51"
^XTMP("XPDT",7834,"BLD",1118,"KRN",8989.52,0)="8989.52"
^XTMP("XPDT",7834,"BLD",1118,"KRN",8994,0)="8994"
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",.4,.4)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",.401,.401)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",.402,.402)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",.403,.403)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",.5,.5)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",.84,.84)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",3.6,3.6)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",3.8,3.8)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",9.2,9.2)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",9.8,9.8)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",19,19)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",19.1,19.1)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",101,101)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",409.61,409.61)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",771,771)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",779.2,779.2)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",870,870)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",8989.51,8989.51)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",8989.52,8989.52)=""
^XTMP("XPDT",7834,"BLD",1118,"KRN","B",8994,8994)=""
^XTMP("XPDT",7834,"BLD",1118,"QDEF")="^^^^NO^^^^NO^^NO"
^XTMP("XPDT",7834,"BLD",1118,"QUES",0)="^9.62^^"
^XTMP("XPDT",7834,"BLD",1118,"REQB",0)="^9.611^4^3"
^XTMP("XPDT",7834,"BLD",1118,"REQB",2,0)="XU*8.0*275^2"
^XTMP("XPDT",7834,"BLD",1118,"REQB",3,0)="XU*8.0*304^2"
^XTMP("XPDT",7834,"BLD",1118,"REQB",4,0)="XU*8.0*393^2"
^XTMP("XPDT",7834,"BLD",1118,"REQB","B","XU*8.0*275",2)=""
^XTMP("XPDT",7834,"BLD",1118,"REQB","B","XU*8.0*304",3)=""
^XTMP("XPDT",7834,"BLD",1118,"REQB","B","XU*8.0*393",4)=""
^XTMP("XPDT",7834,"MBREQ")="0"
^XTMP("XPDT",7834,"PKG",3,-1)="1^1"
^XTMP("XPDT",7834,"PKG",3,0)="KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^"
^XTMP("XPDT",7834,"PKG",3,20,0)="^9.402P^^0"
^XTMP("XPDT",7834,"PKG",3,22,0)="^9.49I^1^1"
^XTMP("XPDT",7834,"PKG",3,22,1,0)="8.0^3080616^3080616^6"
^XTMP("XPDT",7834,"PKG",3,22,1,"PAH",1,0)="506^3090312^6"
^XTMP("XPDT",7834,"PKG",3,22,1,"PAH",1,1,0)="^^4^4^3090312"
^XTMP("XPDT",7834,"PKG",3,22,1,"PAH",1,1,1,0)="Please see the patch description on FORUM, in the National"
^XTMP("XPDT",7834,"PKG",3,22,1,"PAH",1,1,2,0)=" Patch Module."
^XTMP("XPDT",7834,"PKG",3,22,1,"PAH",1,1,3,0)=""
^XTMP("XPDT",7834,"PKG",3,22,1,"PAH",1,1,4,0)=""
^XTMP("XPDT",7834,"QUES","XPF1",0)="Y"
^XTMP("XPDT",7834,"QUES","XPF1","??")="^D REP^XPDH"
^XTMP("XPDT",7834,"QUES","XPF1","A")="Shall I write over your |FLAG| File"
^XTMP("XPDT",7834,"QUES","XPF1","B")="YES"
^XTMP("XPDT",7834,"QUES","XPF1","M")="D XPF1^XPDIQ"
^XTMP("XPDT",7834,"QUES","XPF2",0)="Y"
^XTMP("XPDT",7834,"QUES","XPF2","??")="^D DTA^XPDH"
^XTMP("XPDT",7834,"QUES","XPF2","A")="Want my data |FLAG| yours"
^XTMP("XPDT",7834,"QUES","XPF2","B")="YES"
^XTMP("XPDT",7834,"QUES","XPF2","M")="D XPF2^XPDIQ"
^XTMP("XPDT",7834,"QUES","XPI1",0)="YO"
^XTMP("XPDT",7834,"QUES","XPI1","??")="^D INHIBIT^XPDH"
^XTMP("XPDT",7834,"QUES","XPI1","A")="Want KIDS to INHIBIT LOGONs during the install"
^XTMP("XPDT",7834,"QUES","XPI1","B")="NO"
^XTMP("XPDT",7834,"QUES","XPI1","M")="D XPI1^XPDIQ"
^XTMP("XPDT",7834,"QUES","XPM1",0)="PO^VA(200,:EM"
^XTMP("XPDT",7834,"QUES","XPM1","??")="^D MG^XPDH"
^XTMP("XPDT",7834,"QUES","XPM1","A")="Enter the Coordinator for Mail Group '|FLAG|'"
^XTMP("XPDT",7834,"QUES","XPM1","B")=""
^XTMP("XPDT",7834,"QUES","XPM1","M")="D XPM1^XPDIQ"
^XTMP("XPDT",7834,"QUES","XPO1",0)="Y"
^XTMP("XPDT",7834,"QUES","XPO1","??")="^D MENU^XPDH"
^XTMP("XPDT",7834,"QUES","XPO1","A")="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
^XTMP("XPDT",7834,"QUES","XPO1","B")="NO"
^XTMP("XPDT",7834,"QUES","XPO1","M")="D XPO1^XPDIQ"
^XTMP("XPDT",7834,"QUES","XPZ1",0)="Y"
^XTMP("XPDT",7834,"QUES","XPZ1","??")="^D OPT^XPDH"
^XTMP("XPDT",7834,"QUES","XPZ1","A")="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
^XTMP("XPDT",7834,"QUES","XPZ1","B")="NO"
^XTMP("XPDT",7834,"QUES","XPZ1","M")="D XPZ1^XPDIQ"
^XTMP("XPDT",7834,"QUES","XPZ2",0)="Y"
^XTMP("XPDT",7834,"QUES","XPZ2","??")="^D RTN^XPDH"
^XTMP("XPDT",7834,"QUES","XPZ2","A")="Want to MOVE routines to other CPUs"
^XTMP("XPDT",7834,"QUES","XPZ2","B")="NO"
^XTMP("XPDT",7834,"QUES","XPZ2","M")="D XPZ2^XPDIQ"
^XTMP("XPDT",7834,"RTN")="6"
^XTMP("XPDT",7834,"RTN","XPDCOM")="0^1^B16563839^B12902115"
^XTMP("XPDT",7834,"RTN","XPDCOM",1,0)="XPDCOM ;SFISC/RSD - Compare Transport Global ;08/14/2008"
^XTMP("XPDT",7834,"RTN","XPDCOM",2,0)=" ;;8.0;KERNEL;**21,58,108,124,393,506**;Jul 10, 1995;Build 11"
^XTMP("XPDT",7834,"RTN","XPDCOM",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7834,"RTN","XPDCOM",4,0)="EN1 ;compare to current system"
^XTMP("XPDT",7834,"RTN","XPDCOM",5,0)=" N DIC,DIR,DIRUT,DITCPT,POP,XPD,XPDA,XPDC,XPDNM,XPDT,XPDST,XPDUL,Y,Z,%ZIS"
^XTMP("XPDT",7834,"RTN","XPDCOM",6,0)=" S XPDST=$$LOOK^XPDI1(""I '$P(^(0),U,9),$D(^XTMP(""""XPDI"""",Y))"",1) Q:XPDST'>0"
^XTMP("XPDT",7834,"RTN","XPDCOM",7,0)=" S DIR(0)=""SO^1:Full Comparison;2:Second line of Routines only;3:Routines only;4:Old style Routine compare"",DIR(""A"")=""Type of Compare"",DIR(""?"")=""Enter the type of comparison."" ;rwf"
^XTMP("XPDT",7834,"RTN","XPDCOM",8,0)=" D ^DIR Q:Y=""""!$D(DTOUT)!$D(DUOUT)"
^XTMP("XPDT",7834,"RTN","XPDCOM",9,0)=" S XPDC=Y,Y=""JOB^XPDCOM"",Z=""Transport Global Compare"",XPD(""XPDNM"")="""",XPD(""XPDC"")="""",XPD(""XPDT("")="""""
^XTMP("XPDT",7834,"RTN","XPDCOM",10,0)=" D EN^XUTMDEVQ(Y,Z,.XPD)"
^XTMP("XPDT",7834,"RTN","XPDCOM",11,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",12,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOM",13,0)="JOB ;Loop thru XPDT"
^XTMP("XPDT",7834,"RTN","XPDCOM",14,0)=" N XPDIT"
^XTMP("XPDT",7834,"RTN","XPDCOM",15,0)=" F XPDIT=0:0 S XPDIT=$O(XPDT(XPDIT)) Q:XPDIT'>0  D COM(+XPDT(XPDIT))"
^XTMP("XPDT",7834,"RTN","XPDCOM",16,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",17,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOM",18,0)="COM(XPDA) ;XPDA=ien of package in ^XTMP(""XPDI"""
^XTMP("XPDT",7834,"RTN","XPDCOM",19,0)=" Q:'$D(^XTMP(""XPDI"",$G(XPDA)))"
^XTMP("XPDT",7834,"RTN","XPDCOM",20,0)=" S:$D(XPDT(""DA"",XPDA)) XPDNM=$P(XPDT(+XPDT(""DA"",XPDA)),U,2)"
^XTMP("XPDT",7834,"RTN","XPDCOM",21,0)=" D HDR,COMR,EN^XPDCOMG:XPDC=1"
^XTMP("XPDT",7834,"RTN","XPDCOM",22,0)=" W !!"
^XTMP("XPDT",7834,"RTN","XPDCOM",23,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",24,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOM",25,0)="COMR ;compare routines"
^XTMP("XPDT",7834,"RTN","XPDCOM",26,0)=" N DL,NAME,RM,XL,XPDI,X,XL,Y,YL,XPDHEAD"
^XTMP("XPDT",7834,"RTN","XPDCOM",27,0)=" S (NAME,XPDI)="""",RM=IOM/2-8"
^XTMP("XPDT",7834,"RTN","XPDCOM",28,0)=" F  S XPDI=$O(^XTMP(""XPDI"",XPDA,""RTN"",XPDI)) Q:XPDI=""""  S X=+$G(^(XPDI)) D"
^XTMP("XPDT",7834,"RTN","XPDCOM",29,0)=" .S NAME="" Routine: ""_XPDI,XPDHEAD=0"
^XTMP("XPDT",7834,"RTN","XPDCOM",30,0)=" .I X W:X=1 !!,""*DELETE*"",NAME,! Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",31,0)=" .S X=XPDI X ^%ZOSF(""TEST"") E  W !!,""*ADD*"",NAME,! Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",32,0)=" .;check 2nd line only"
^XTMP("XPDT",7834,"RTN","XPDCOM",33,0)=" .I XPDC=2 D  Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",34,0)=" ..S XL(2)=$G(^XTMP(""XPDI"",XPDA,""RTN"",XPDI,2,0)),YL(2)=$T(+2^@XPDI)"
^XTMP("XPDT",7834,"RTN","XPDCOM",35,0)=" ..D EN^XPDCOML(""XL"",""YL"",NAME)"
^XTMP("XPDT",7834,"RTN","XPDCOM",36,0)=" ..W:'XPDHEAD !,?IOM-$L(NAME)\2,NAME"
^XTMP("XPDT",7834,"RTN","XPDCOM",37,0)=" ..W !"
^XTMP("XPDT",7834,"RTN","XPDCOM",38,0)=" ..I XL(2)=YL(2)!(XL(2)'[""**"") Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",39,0)=" ..;check patch string"
^XTMP("XPDT",7834,"RTN","XPDCOM",40,0)=" ..S X=$P(XL(2),""**"",2),XL=$L(X,"",""),Y=$P(YL(2),""**"",2),YL=$L(Y,"","")"
^XTMP("XPDT",7834,"RTN","XPDCOM",41,0)=" ..Q:X=Y"
^XTMP("XPDT",7834,"RTN","XPDCOM",42,0)=" ..;incoming has more patches than system, check for missing patches"
^XTMP("XPDT",7834,"RTN","XPDCOM",43,0)=" ..I XL>YL W:$P(X,"","",1,(XL-1))'=Y ""*** WARNING, you are missing one or more Patches ***"",! Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",44,0)=" ..I YL>XL W ""*** WARNING, your routine has more patches than the incoming routine ***"",! Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",45,0)=" ..Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",46,0)=" .;get number of lines in rouitine, XL"
^XTMP("XPDT",7834,"RTN","XPDCOM",47,0)=" .F X=1:1 Q:'$D(^XTMP(""XPDI"",XPDA,""RTN"",XPDI,X))"
^XTMP("XPDT",7834,"RTN","XPDCOM",48,0)=" .S XL=X-1"
^XTMP("XPDT",7834,"RTN","XPDCOM",49,0)=" .K ^TMP($J,XPDI)"
^XTMP("XPDT",7834,"RTN","XPDCOM",50,0)=" .F X=1:1 S Y=$T(+X^@XPDI) Q:Y=""""  S ^TMP($J,XPDI,X,0)=Y"
^XTMP("XPDT",7834,"RTN","XPDCOM",51,0)=" .S DL=X-1 ;number of line in routine on disk"
^XTMP("XPDT",7834,"RTN","XPDCOM",52,0)=" .D EN^XPDCOML($NA(^XTMP(""XPDI"",XPDA,""RTN"",XPDI)),$NA(^TMP($J,XPDI)),NAME):XPDC<4,COMP:XPDC=4"
^XTMP("XPDT",7834,"RTN","XPDCOM",53,0)=" .W:'XPDHEAD !,?IOM-$L(NAME)\2,NAME"
^XTMP("XPDT",7834,"RTN","XPDCOM",54,0)=" .W ! K ^TMP($J,XPDI)"
^XTMP("XPDT",7834,"RTN","XPDCOM",55,0)=" .Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",56,0)=" I NAME="""" W ?RM,""No Routines"""
^XTMP("XPDT",7834,"RTN","XPDCOM",57,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",58,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOM",59,0)="COMP ;taken from XMPC routine"
^XTMP("XPDT",7834,"RTN","XPDCOM",60,0)=" N D1,DI,I,J,K,NL,X1,XI,Y1"
^XTMP("XPDT",7834,"RTN","XPDCOM",61,0)=" S (XI,DI)=0,NL=5,XPDHEAD=1"
^XTMP("XPDT",7834,"RTN","XPDCOM",62,0)=" W !,?IOM-$L(NAME)\2,NAME"
^XTMP("XPDT",7834,"RTN","XPDCOM",63,0)=" ;check each line in the incoming routine,X1, against the routine on disk,D1"
^XTMP("XPDT",7834,"RTN","XPDCOM",64,0)=" F  S XI=XI+1,DI=DI+1 Q:XI>XL!(DI>DL)  D:^XTMP(""XPDI"",XPDA,""RTN"",XPDI,XI,0)'=^TMP($J,XPDI,DI,0)"
^XTMP("XPDT",7834,"RTN","XPDCOM",65,0)=" .S X1=^XTMP(""XPDI"",XPDA,""RTN"",XPDI,XI,0),Y1=0"
^XTMP("XPDT",7834,"RTN","XPDCOM",66,0)=" .;if lines are not the same, look ahead five lines in D1"
^XTMP("XPDT",7834,"RTN","XPDCOM",67,0)=" .F I=DI:1:$S(DI+NL<DL:DI+NL,1:DL) S D1=^TMP($J,XPDI,I,0) D  Q:Y1"
^XTMP("XPDT",7834,"RTN","XPDCOM",68,0)=" ..F K=1:5:26 Q:$L($E(D1,K,K+10))<7  I $F(X1,$E(D1,K,K+10))  D  Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",69,0)=" ...;print the lines upto the line that are the same"
^XTMP("XPDT",7834,"RTN","XPDCOM",70,0)=" ...F J=DI:1:I-1 D WP(^TMP($J,XPDI,J,0),2)"
^XTMP("XPDT",7834,"RTN","XPDCOM",71,0)=" ...;quit if the lines are equal"
^XTMP("XPDT",7834,"RTN","XPDCOM",72,0)=" ...S DI=I,Y1=1 Q:D1=X1"
^XTMP("XPDT",7834,"RTN","XPDCOM",73,0)=" ...;if lines are equal, print old and new"
^XTMP("XPDT",7834,"RTN","XPDCOM",74,0)=" ...D WP(D1,3),WP(X1,4)"
^XTMP("XPDT",7834,"RTN","XPDCOM",75,0)=" .Q:Y1  D WP(X1,1) S DI=DI-1"
^XTMP("XPDT",7834,"RTN","XPDCOM",76,0)=" ;check remaining lines in routines"
^XTMP("XPDT",7834,"RTN","XPDCOM",77,0)=" I XI>XL&(DI<(DL+1)) F I=DI:1:DL D WP(^TMP($J,XPDI,I,0),2)"
^XTMP("XPDT",7834,"RTN","XPDCOM",78,0)=" I DI>DL&(XI<(XL+1)) F I=XI:1:XL D WP(^XTMP(""XPDI"",XPDA,""RTN"",XPDI,I,0),1)"
^XTMP("XPDT",7834,"RTN","XPDCOM",79,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",80,0)="WP(X,Y) ;"
^XTMP("XPDT",7834,"RTN","XPDCOM",81,0)=" W !,""* ""_$P(""ADD^DEL^OLD^NEW"",U,Y)_"" *  "",X"
^XTMP("XPDT",7834,"RTN","XPDCOM",82,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOM",83,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOM",84,0)="HDR ;"
^XTMP("XPDT",7834,"RTN","XPDCOM",85,0)=" S $P(XPDUL,""-"",80)="""""
^XTMP("XPDT",7834,"RTN","XPDCOM",86,0)=" W @IOF,!,""Compare KIDS package "",XPDNM,"" to current site (Disk)"""
^XTMP("XPDT",7834,"RTN","XPDCOM",87,0)=" W !,""Site: "",$$KSP^XUPARAM(""WHERE"")"
^XTMP("XPDT",7834,"RTN","XPDCOM",88,0)=" D GETENV^%ZOSV W ""  UCI: "",$P(Y,U),"","",$P(Y,U,2),""  "",?IOM/2+2,$$FMTE^XLFDT($$NOW^XLFDT()),!"
^XTMP("XPDT",7834,"RTN","XPDCOM",89,0)=" I XPDC>1 W:XPDC=2 ""2nd Line of "" W ""Routines Only"",!"
^XTMP("XPDT",7834,"RTN","XPDCOM",90,0)=" W ?3,""KIDS"",?IOM\2+3,""Disk"",!"
^XTMP("XPDT",7834,"RTN","XPDCOM",91,0)=" W XPDUL,!"
^XTMP("XPDT",7834,"RTN","XPDCOM",92,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF")="0^3^B79333923^n/a"
^XTMP("XPDT",7834,"RTN","XPDCOMF",1,0)="XPDCOMF ;SFISC/GFT/MSC - COMPARE FILES ;08/14/2008"
^XTMP("XPDT",7834,"RTN","XPDCOMF",2,0)=" ;;8.0;KERNEL;**506**;Jul 10, 1995;Build 11"
^XTMP("XPDT",7834,"RTN","XPDCOMF",3,0)=" ; Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7834,"RTN","XPDCOMF",4,0)=" ;DI1 & DI2 are left & right roots"
^XTMP("XPDT",7834,"RTN","XPDCOMF",5,0)=" ;DIFLAG[1 -->compare files   [2-->compare entries   [""L"" --> IGNORE EXTRA ENTRIES ON RIGHT SIDE"
^XTMP("XPDT",7834,"RTN","XPDCOMF",6,0)=" ;DITCPT is array of TITLES, called by reference"
^XTMP("XPDT",7834,"RTN","XPDCOMF",7,0)="EN(DI1,DI2,DIDD,DIFLAG,DITCPT) ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",8,0)=" N I,DIR,DID,W,DIL,DIN1,DIN2,DIV1,DIV2,DIGL,DIDDN,DIO,DIV,DIT,DIOX,DITM,DIN,D1,D2"
^XTMP("XPDT",7834,"RTN","XPDCOMF",9,0)=" K DIRUT"
^XTMP("XPDT",7834,"RTN","XPDCOMF",10,0)=" S DIL=+DIFLAG"
^XTMP("XPDT",7834,"RTN","XPDCOMF",11,0)=" I $G(DITCPT)'>DIL D"
^XTMP("XPDT",7834,"RTN","XPDCOMF",12,0)=" .I DIDD S DITCPT(1)=""ENTRIES IN FILE #""_DIDD_"" (""_$P($G(^DIC(DIDD,0)),U)_"")"""
^XTMP("XPDT",7834,"RTN","XPDCOMF",13,0)=" .E  S X="""" D  S DITCPT(1)=""DATA DICTIONARY #""_$QS(DI2,1)_"" (""_X_"")"""
^XTMP("XPDT",7834,"RTN","XPDCOMF",14,0)=" ..S I=$NA(@DI1,1) I '$D(@I@(0,""NM"")) S I=$NA(@DI2,1)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",15,0)=" ..F  S X=X_$O(@I@(0,""NM"",0)) Q:'$D(@I@(0,""UP""))  S X=X_"" SUBFIELD"" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",16,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",17,0)=" K ^UTILITY(""DITCP"",$J) S DIV=$D(^DD(DIDD,.001)),(DIOX,U)=""^"",IOM=$G(IOM,80)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",18,0)=" I '$D(@DI1) D  Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",19,0)=" .S D1=""{Missing}"" I '$D(@DI2) S D2=""{Also Missing}"" D WB Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",20,0)=" .I DIL#2 S D2="""" D WB Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",21,0)=" .S DIN2=$QS(DI2,$QL(DI2)),DIGL=0,DIN=1 D RIGHT(DI2)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",22,0)=" I '$D(@DI2) D  Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",23,0)=" .I DIL#2 S D1="""",D2=""{Missing}"" D WB Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",24,0)=" .S DIGL=0,DIN=1,^UTILITY(""DITCP"",$J,""X1"",DIDD,$QS(DI1,$QL(DI1)))=$P(@DI1@(0),U) G END"
^XTMP("XPDT",7834,"RTN","XPDCOMF",25,0)=" I 'DIDD,DIL=1 D"
^XTMP("XPDT",7834,"RTN","XPDCOMF",26,0)=" .N P,DITCPL F X=1,2 S Y=@(""DI""_X),P=1,%="""" D  S P(X)=P-1"
^XTMP("XPDT",7834,"RTN","XPDCOMF",27,0)=" ..F  S %=$O(@Y@(0,""ID"",%)) Q:%=""""  S A=$S(+%=%:%,1:+$P(%,""WDI"",2)) S:$D(@Y@(A,0))=1 DITCPL(X,P)=$S(A:$P($G(@Y@(A,0)),U),1:%_"" (Display only)""),P=P+1"
^XTMP("XPDT",7834,"RTN","XPDCOMF",28,0)=" .I DIFLAG'[""L""!$D(DITCPL(1)) D DITCPL(""IDENTIFIERS"")"
^XTMP("XPDT",7834,"RTN","XPDCOMF",29,0)=" .F P=""DIC"",""ACT"" K DITCPL M DITCPL(1,1)=@DI1@(0,P),DITCPL(2,1)=@DI2@(0,P) I DIFLAG'[""L""!$D(DITCPL(1)) D DITCPL($S(P=""DIC"":""SPECIAL LOOKUP"",1:""POST-SELECTION ACTION""))"
^XTMP("XPDT",7834,"RTN","XPDCOMF",30,0)="S I DIL#2 S DIN1=$O(@DI1@(0)) K ^UTILITY(""DITCP"",$J,DIL) G ENTRY  ;WE ARE AT ROOT OF A (SUB)-FILE  FIND 1ST ENTRY ON LEFT SIDE"
^XTMP("XPDT",7834,"RTN","XPDCOMF",31,0)=" S (DIN1,DIN2)=-1"
^XTMP("XPDT",7834,"RTN","XPDCOMF",32,0)=" I DIL'<DIFLAG D  ;Build a header for this Entry"
^XTMP("XPDT",7834,"RTN","XPDCOMF",33,0)=" .N D,O S D=$G(DIDD(DIL),DIDD),O=$G(@DI2@(0)) I D-.1 S O=$P(O,U,1,D=.11+1) ;For INDEX, take FILE + NAME field"
^XTMP("XPDT",7834,"RTN","XPDCOMF",34,0)=" .I 'D S O=""FIELD: ""_O"
^XTMP("XPDT",7834,"RTN","XPDCOMF",35,0)=" .E  S O=$O(^DD(D,0,""NM"",0))_"": ""_$$EXTERNAL^DIDU(D,.01,,O) I D?1"".4"".N S D=$P($G(@DI1@(0)),U,4) S:D O=O_"" (File ""_D_"")"""
^XTMP("XPDT",7834,"RTN","XPDCOMF",36,0)=" .I DIV S O=O_"" (#""_$QS(DI2,$QL(DI2))_"")"""
^XTMP("XPDT",7834,"RTN","XPDCOMF",37,0)=" .S DITCPT(DIL)=O"
^XTMP("XPDT",7834,"RTN","XPDCOMF",38,0)=" G INPUT:DIDD=.402,SORT:DIDD=.401,PRINT:DIDD=.4"
^XTMP("XPDT",7834,"RTN","XPDCOMF",39,0)="GET2D S DIN1=$O(@DI1@(DIN1)),DIN2=$O(@DI2@(DIN2))"
^XTMP("XPDT",7834,"RTN","XPDCOMF",40,0)=" ;NOW CHECK IF WE'RE AT THE SAME NODE ON BOTH SIDES"
^XTMP("XPDT",7834,"RTN","XPDCOMF",41,0)="NEXTD G END:$D(DIRUT) I DIN1=DIN2 G UP:DIN1="""",D2:$D(@DI2@(DIN2))>9 S DIV2=@DI2@(DIN2),DIV1=@DI1@(DIN1) G GET2D:DIV2=DIV1 S DIN="""",DIGL=DIN1 D  G GET2D"
^XTMP("XPDT",7834,"RTN","XPDCOMF",42,0)=" .F  S DIN=$O(^DD(DIDD,""GL"",DIGL,DIN)) Q:DIN=""""!$D(DIRUT)  D"
^XTMP("XPDT",7834,"RTN","XPDCOMF",43,0)=" ..I 'DIN S %X=+$E(DIN,2,9),%Y=$P(DIN,"","",2),D2=$E(DIV2,%X,%Y),D1=$E(DIV1,%X,%Y)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",44,0)=" ..E  S D1=$P(DIV1,U,DIN),D2=$P(DIV2,U,DIN) I DIN=2,DIDD=0 S D1=$TR(D1,""a""),D2=$TR(D2,""a"") ;SPECIFIER"
^XTMP("XPDT",7834,"RTN","XPDCOMF",45,0)=" ..I D1'=D2 D:D1]""""!(DIFLAG'[""L"") DIO12($$TITLE) Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",46,0)=" .I DIGL=0,'DIDD,'$D(DIRUT) S D1=$P(DIV1,U,5,99),D2=$P(DIV2,U,5,99) Q:D1=D2  D DIO12($S($P(DIV1,U,2)[""C"":""COMPUTED EXPRESSION"",1:""INPUT TRANSFORM"")) Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",47,0)=" D X G END:$D(DIRUT),NEXTD"
^XTMP("XPDT",7834,"RTN","XPDCOMF",48,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",49,0)="D2 G ENTRY:DIL#2 S Y=$O(^DD(DIDD,""GL"",DIN1,0,0)) ;DOWN TO A MULTIPLE FIELD"
^XTMP("XPDT",7834,"RTN","XPDCOMF",50,0)=" I Y,$D(^DD(DIDD,+Y,0)) S Y=$P(^(0),U,2) I Y]"""",Y-.15,$D(^DD(+Y,.01,0)) G WP:$P(^(0),U,2)[""W"" D DN S DIDD=+Y G S"
^XTMP("XPDT",7834,"RTN","XPDCOMF",51,0)=" G GET2D"
^XTMP("XPDT",7834,"RTN","XPDCOMF",52,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",53,0)="WP S X=$P(^(0),U),%Y=0"
^XTMP("XPDT",7834,"RTN","XPDCOMF",54,0)=" F %X=0:0 S %X=$O(@DI1@(DIN1,%X)) Q:$D(^(+%X,0))[0  S I=^(0),%Y=$O(@DI2@(DIN2,%Y)) G WPD:$G(^(+%Y,0))'=I ;IS EVERY LINE IDENTICAL?"
^XTMP("XPDT",7834,"RTN","XPDCOMF",55,0)=" G GET2D:'$O(@DI2@(DIN2,%Y))"
^XTMP("XPDT",7834,"RTN","XPDCOMF",56,0)="WPD D SUBHD W !?IOM-$L(X)\2,X,""..."""
^XTMP("XPDT",7834,"RTN","XPDCOMF",57,0)=" G GET2D"
^XTMP("XPDT",7834,"RTN","XPDCOMF",58,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",59,0)=" ;^UTILITY(""DITCP"",$J,""X1"",DIDD,DIN1) = new entry"
^XTMP("XPDT",7834,"RTN","XPDCOMF",60,0)=" ;^UTILITY(""DITCP"",$J,""X2"",DIDD,DIN1) = KIDS will delete"
^XTMP("XPDT",7834,"RTN","XPDCOMF",61,0)="ENTRY S DIGL=0,DIN=1 G NEXTENT:'$D(@DI1@(+DIN1,0)) S X=$P(^(0),U)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",62,0)=" ;check if we are comparing to KIDS"
^XTMP("XPDT",7834,"RTN","XPDCOMF",63,0)=" I $E(DI1,1,12)=""^XTMP(""""XPDI"""""" D  G NEXTENT:Y"
^XTMP("XPDT",7834,"RTN","XPDCOMF",64,0)=" .;check KIDS action,(0,3)=continue processing"
^XTMP("XPDT",7834,"RTN","XPDCOMF",65,0)=" .S Y=+$G(@DI1@(+DIN1,-1)) I Y=3!'Y S Y=0 Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",66,0)=" .;delete: save & goto next entry"
^XTMP("XPDT",7834,"RTN","XPDCOMF",67,0)=" .I Y=1 S ^UTILITY(""DITCP"",$J,""X2"",DIDD,DIN1)=X"
^XTMP("XPDT",7834,"RTN","XPDCOMF",68,0)=" .Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",69,0)=" I DIDD=.11,$G(DITCPIF),DITCPIF-X G NEXTENT ;Skip INDEXes not for this DD"
^XTMP("XPDT",7834,"RTN","XPDCOMF",70,0)=" S DIV=$D(^DD(DIDD,.001)) G UP:DIDD=.4032!(DIDD=19.01) ;for now, give up matching BLOCKS or MENUS"
^XTMP("XPDT",7834,"RTN","XPDCOMF",71,0)=" I DIDD=.1 S DIN2=+DIN1,X=@DI1@(DIN1,0) G NEW:'$D(@DI2@(DIN2,0)),NEW:^(0)'=X,OLD ;CROSS-REFERENCE matches on entire 0 node"
^XTMP("XPDT",7834,"RTN","XPDCOMF",72,0)="BIX I $P($G(@DI2@(DIN1,0)),U)=X S DIN2=DIN1 G OLD:$$MATCH,NEW:DIV"
^XTMP("XPDT",7834,"RTN","XPDCOMF",73,0)=" S DIN2=0 I '$D(^DD(DIDD,0,""IX"",""B"",DIDD,.01)) F  S DIN2=$O(@DI2@(DIN2)) G NEW:DIN2'>0 I $P($G(^(DIN2,0)),U)=X G OLD:$$MATCH"
^XTMP("XPDT",7834,"RTN","XPDCOMF",74,0)="BI S DIN2=$O(@DI2@(""B"",$E(X,1,30),DIN2)) G NEW:'DIN2 I $D(@DI2@(DIN2,0)),$P(^(0),X)="""" G OLD:$$MATCH ;COMPARE BY NAME"
^XTMP("XPDT",7834,"RTN","XPDCOMF",75,0)=" G BI"
^XTMP("XPDT",7834,"RTN","XPDCOMF",76,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",77,0)="NEW S ^UTILITY(""DITCP"",$J,""X1"",DIDD,DIN1)=X ;WILL SHOW EXTRA ENTRY ON LEFT SIDE"
^XTMP("XPDT",7834,"RTN","XPDCOMF",78,0)="NEXTENT S DIN1=$O(@DI1@(DIN1))"
^XTMP("XPDT",7834,"RTN","XPDCOMF",79,0)="N2 I DIN1 G ENTRY"
^XTMP("XPDT",7834,"RTN","XPDCOMF",80,0)=" I DIFLAG'[""L"" F DIN2=0:0 S DIN2=$O(@DI2@(DIN2)) Q:'DIN2  Q:+DIN2'=DIN2  I '$D(^UTILITY(""DITCP"",$J,DIL,DIN2)) D RIGHT($NA(@DI2@(DIN2))) Q:$D(DIRUT)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",81,0)=" G END:$D(DIRUT),UP"
^XTMP("XPDT",7834,"RTN","XPDCOMF",82,0)=" ; "
^XTMP("XPDT",7834,"RTN","XPDCOMF",83,0)="RIGHT(X) Q:'$D(@X@(0))#2  I DIDD=.11,$G(DITCPIF),DITCPIF-^(0) Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",84,0)=" D XTRAM($P(^(0),U,1,$S(DIDD=.1:99,1:1)),2) Q  ;If X-REF, compare entire node"
^XTMP("XPDT",7834,"RTN","XPDCOMF",85,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",86,0)=" ;DID=title, X: 1=left,2=right, P=prefix to title"
^XTMP("XPDT",7834,"RTN","XPDCOMF",87,0)="XTRAM(DID,X,P) Q:DIDD=.15  ;FORGET TRIGGERED-BY"
^XTMP("XPDT",7834,"RTN","XPDCOMF",88,0)=" F I=DIL+(DIL#2):1 K DITCPT(I) I $O(DITCPT(I))="""" Q  ;S:$G(DITCPT)>(I-1) DITCPT=I-1 B:DIDD=8994  Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",89,0)=" I DIDD=.11 S DID=""@DI""_X_""@(DIN""_X_"",0)"",DID=$P(@DID,U,2,3)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",90,0)=" S DIDDN=$S(DIDD:$O(^DD(DIDD,0,""NM"","""")),1:""FIELD"")_$S(DIV:"" #""_@(""DIN""_X),$D(^DIC(DIDD)):"""",1:"" Multiple"")_"": "",Y=^DD(DIDD,.01,0)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",91,0)=" S:$G(P)]"""" DIDDN=P_DIDDN"
^XTMP("XPDT",7834,"RTN","XPDCOMF",92,0)=" D DIT,DIO"
^XTMP("XPDT",7834,"RTN","XPDCOMF",93,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",94,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",95,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",96,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",97,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",98,0)="MATCH() I DIV,DIN1'=DIN2 Q 0 ;DO ENTRIES MATCH?  NOT IF NUMBERS DON'T AND IT'S NUMBER-MEANINGFUL"
^XTMP("XPDT",7834,"RTN","XPDCOMF",99,0)=" I $D(^UTILITY(""DITCP"",$J,DIL,DIN2)) Q 0 ;We already matched this one"
^XTMP("XPDT",7834,"RTN","XPDCOMF",100,0)=" I DIDD=.11 Q '$$MISMATCH(.02) ;INDEX must match on NAME"
^XTMP("XPDT",7834,"RTN","XPDCOMF",101,0)=" I DIDD=.403 Q '$$MISMATCH(7) ;FORM must match on PRIMARY FILE"
^XTMP("XPDT",7834,"RTN","XPDCOMF",102,0)=" I DIDD=.4!(DIDD=.401)!(DIDD=.402) Q '$$MISMATCH(4) ;TEMPLATES must match on FILE"
^XTMP("XPDT",7834,"RTN","XPDCOMF",103,0)=" I DIDD=19 Q 1 ;OPTION matches on NAME alone"
^XTMP("XPDT",7834,"RTN","XPDCOMF",104,0)=" S DITM=.01"
^XTMP("XPDT",7834,"RTN","XPDCOMF",105,0)="I S DITM=$O(^DD(DIDD,0,""ID"",DITM)) I DITM="""" Q 1"
^XTMP("XPDT",7834,"RTN","XPDCOMF",106,0)=" S I=DITM S:I?1""W""1.NP I=$E(I,2,99) I $$MISMATCH(I) Q 0 ;MATCH EACH NON-NULL IDENTIFIER"
^XTMP("XPDT",7834,"RTN","XPDCOMF",107,0)=" G I"
^XTMP("XPDT",7834,"RTN","XPDCOMF",108,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",109,0)="MISMATCH(I) K B I '$D(^DD(DIDD,I,0)) Q 0"
^XTMP("XPDT",7834,"RTN","XPDCOMF",110,0)=" D  Q:W="""" 0 S B=W Q:'$D(^DD(DIDD,I,0)) 0 D  Q:W="""" 0 Q W'=B ;If two non-null values aren't equal it's a mismatch"
^XTMP("XPDT",7834,"RTN","XPDCOMF",111,0)=" .S A=$P(^(0),U,4),%=$P(A,"";"",2),W=$P(A,"";""),A=$S($D(B):DI2,1:DI1) I W?."" "" S W="""" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",112,0)=" .I $D(@A@($S($D(B):DIN2,1:DIN1),W))[0 S W="""" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",113,0)=" .I % S W=$P(^(W),U,%)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",114,0)=" .E  S W=$E(^(W),+$E(%,2,9),$P(%,"","",2))"
^XTMP("XPDT",7834,"RTN","XPDCOMF",115,0)=" .S:W?.E1L.E W=$$UP^DILIBF(W)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",116,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",117,0)="OLD S ^UTILITY(""DITCP"",$J,DIL,DIN2)="""" ;Remember that we found DIN2 as a match"
^XTMP("XPDT",7834,"RTN","XPDCOMF",118,0)=" D DN G S"
^XTMP("XPDT",7834,"RTN","XPDCOMF",119,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",120,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",121,0)="DN S DIDD(DIL)=DIDD"
^XTMP("XPDT",7834,"RTN","XPDCOMF",122,0)=" N X,%X F X=1,2 S %X=@(""DIN""_X),(W,W(X,DIL))=@(""DI""_X),W=$NA(@W@(%X)),@(""DI""_X)=W  ;ADD A SUBSCRIPT"
^XTMP("XPDT",7834,"RTN","XPDCOMF",123,0)=" S DIL=DIL+1 Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",124,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",125,0)="UP ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",126,0)=" G END:'$D(W(2,DIL-1))"
^XTMP("XPDT",7834,"RTN","XPDCOMF",127,0)=" S DIN1=$O(@DI1) I DIL#2=0 S:$G(DITCPT)>DIL DITCPT=DIL D U G N2"
^XTMP("XPDT",7834,"RTN","XPDCOMF",128,0)=" D LEFT Q:$D(DIRUT)  S DIN2=$O(@DI2),DIDD=DIDD(DIL-1)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",129,0)=" D U G NEXTD"
^XTMP("XPDT",7834,"RTN","XPDCOMF",130,0)="U S (DIL,Y)=DIL-1,DI1=W(1,Y),DI2=W(2,Y)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",131,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",132,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",133,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",134,0)="2 ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",135,0)="X G XTRA1:DIN2="""",XTRA2:DIN1="""" I +DIN1=DIN1 G XTRA1:+DIN2'=DIN2!(DIN2>DIN1),XTRA2"
^XTMP("XPDT",7834,"RTN","XPDCOMF",136,0)=" G XTRA2:+DIN2=DIN2!(DIN1]DIN2)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",137,0)="XTRA1 S X=1,DIGL=DIN1"
^XTMP("XPDT",7834,"RTN","XPDCOMF",138,0)=" D XTRA S DIN1=$O(@DI1@(DIN1)) Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",139,0)="XTRA2 S X=2,DIGL=DIN2 D:DIFLAG'[""L"" XTRA S DIN2=$O(@DI2@(DIN2)) Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",140,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",141,0)="XTRA S DIR=""@DI""_X_""@(DIGL)"" I $D(@DIR)<9 S DIN="""",DIV=@DIR G GL"
^XTMP("XPDT",7834,"RTN","XPDCOMF",142,0)=" S I=$O(^(DIGL,0)) Q:'I  S I=$O(^(I)),DIN=$O(^DD(DIDD,""GL"",DIGL,0,0)) Q:$D(^DD(DIDD,+DIN,0))[0"
^XTMP("XPDT",7834,"RTN","XPDCOMF",143,0)=" S DIDDN=$P(^(0),U)_$S($P(^DD(+$P(^(0),U,2),.01,0),U,2)[""W"":""..."",1:"" Multiple""_$E(""s"",I>0)),(DID,DIT)="""" D DIO S DIOX=0 Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",144,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",145,0)="GL S DIN=$O(^DD(DIDD,""GL"",DIGL,DIN)) Q:DIN=""""  S Y=$O(^(DIN,0)) G GL:'$D(^DD(DIDD,+Y,0)) S DIO=$P(^(0),U)_"": """
^XTMP("XPDT",7834,"RTN","XPDCOMF",146,0)=" I DIN S DID=$P(DIV,U,DIN) G:DID="""" GL:$P(DIV,U,DIN,999)]"""",Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",147,0)=" E  S DID=$E(DIV,+$E(DIN,2,9),$P(DIN,"","",2)) Q:DID?."" """
^XTMP("XPDT",7834,"RTN","XPDCOMF",148,0)=" S DIDDN=$$TITLE G GL:DIDDN="""" S DIDDN=DIDDN_"": """
^XTMP("XPDT",7834,"RTN","XPDCOMF",149,0)=" D DIO G GL:'$D(DIRUT)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",150,0)="END D LEFT"
^XTMP("XPDT",7834,"RTN","XPDCOMF",151,0)=" K ^UTILITY(""DITCP"",$J) Q:$D(DIRUT)  I 'DIDD,DIFLAG#2 N DITCPIF,DIDD D  G ENTRY ;INDEXES for File #DITCPIF"
^XTMP("XPDT",7834,"RTN","XPDCOMF",152,0)=" .S DITCPIF=$QS(DI1,1),DIDD=.11,DI1=$NA(@DI1,0)_""(""""IX"""")"",DI2=$NA(@DI2,0)_""(""""IX"""")"",(DIN1,DIN2)=0"
^XTMP("XPDT",7834,"RTN","XPDCOMF",153,0)="Q Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",154,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",155,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",156,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",157,0)="LEFT ;display left side; ""X1"" subscript, these are new records"
^XTMP("XPDT",7834,"RTN","XPDCOMF",158,0)=" N DIN1"
^XTMP("XPDT",7834,"RTN","XPDCOMF",159,0)=" F DIN1=0:0 S DIN1=$O(^UTILITY(""DITCP"",$J,""X1"",DIDD,DIN1)) Q:'DIN1  D XTRAM(^(DIN1),1,""*ADD* "") K ^UTILITY(""DITCP"",$J,""X1"",DIDD,DIN1) Q:$D(DIRUT)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",160,0)=" ;""X2"" subscript, these are KIDS delete records"
^XTMP("XPDT",7834,"RTN","XPDCOMF",161,0)=" Q:'$D(^UTILITY(""DITCP"",$J,""X2"",DIDD))"
^XTMP("XPDT",7834,"RTN","XPDCOMF",162,0)=" F DIN1=0:0 S DIN1=$O(^UTILITY(""DITCP"",$J,""X2"",DIDD,DIN1)) Q:'DIN1  D XTRAM(^(DIN1),1,""*DELETE* "") K ^UTILITY(""DITCP"",$J,""X2"",DIDD,DIN1) Q:$D(DIRUT)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",163,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",164,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",165,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",166,0)="TITLE() S Y=$$FLDNUM I '$D(^DD(DIDD,+Y,0)) Q """" ;decide whether this FIELD is interesting"
^XTMP("XPDT",7834,"RTN","XPDCOMF",167,0)=" I $O(^(5,0)) Q """" ;Forget TRIGGERED FIELDS! (INTERESTING!)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",168,0)=" I DIDD=.403,Y'>5 Q """""
^XTMP("XPDT",7834,"RTN","XPDCOMF",169,0)=" I DIDD=19,DIGL\1=99!(Y=3.6) Q """""
^XTMP("XPDT",7834,"RTN","XPDCOMF",170,0)=" I 'DIDD,Y=50!(DIGL=""DT"")!(DIGL=8)!(DIGL=8.5)!(DIGL=9)!(Y=1.1) Q """""
^XTMP("XPDT",7834,"RTN","XPDCOMF",171,0)=" I 'DIDD,Y=.3,$G(DIV1)["":"" Q ""SET OF CODES"" ;INSTEAD OF ""POINTER"""
^XTMP("XPDT",7834,"RTN","XPDCOMF",172,0)=" S Y=^DD(DIDD,+Y,0) D DIT Q $P(Y,U)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",173,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",174,0)="FLDNUM() I DIN]"""" Q $O(^DD(DIDD,""GL"",DIGL,DIN,0))"
^XTMP("XPDT",7834,"RTN","XPDCOMF",175,0)=" Q 0"
^XTMP("XPDT",7834,"RTN","XPDCOMF",176,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",177,0)="DIT ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",178,0)=" S DIT=$P(Y,U,2),I=$P(Y,U,3) Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",179,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",180,0)="EXT(X) I X]"""" N A S A=X,X=$$EXTERNAL^DIDU(DIDD,$$FLDNUM,,X) S:X="""" X=A"
^XTMP("XPDT",7834,"RTN","XPDCOMF",181,0)=" Q X"
^XTMP("XPDT",7834,"RTN","XPDCOMF",182,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",183,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",184,0)="DIO ;X=1 MEANS LEFT SIDE, X=2 MEANS RIGHT SIDE"
^XTMP("XPDT",7834,"RTN","XPDCOMF",185,0)=" ;DID=WHAT WE HAVE TO PRINT"
^XTMP("XPDT",7834,"RTN","XPDCOMF",186,0)=" S DIOX=$Y D SUBHD Q:$D(DIRUT)  S DIO=DIDDN_$$EXT(DID)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",187,0)="DIO1 ;DIO IS OUTPUT"
^XTMP("XPDT",7834,"RTN","XPDCOMF",188,0)=" I X=1 S DIOX(1)=DIDDN D LF"
^XTMP("XPDT",7834,"RTN","XPDCOMF",189,0)=" Q:$D(DIRUT)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",190,0)=" I X=2 D:$S(DIOX-1:1,'$D(DIOX(1)):1,1:$P(DIO,DIOX(1))]"""") LF Q:$D(DIRUT)  W ?IOM\2 K DIOX(1)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",191,0)=" W !,$J("""",DIL),$E(DIO,1,IOM\2-DIL-1) S DIO=$E(DIO,IOM\2-DIL,999) I $L(DIO)<$S(X=1:17,X=2:2) W DIO S DIOX=X Q  ;WRITE A LITTLE MORE THAN HALF A LINE"
^XTMP("XPDT",7834,"RTN","XPDCOMF",192,0)=" S DIOX=0 G DIO1"
^XTMP("XPDT",7834,"RTN","XPDCOMF",193,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",194,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",195,0)="DIO12(T) ;WRITE D1 AND D2 SIDE BY SIDE"
^XTMP("XPDT",7834,"RTN","XPDCOMF",196,0)=" N D,V"
^XTMP("XPDT",7834,"RTN","XPDCOMF",197,0)=" Q:D1=D2!(T="""") "
^XTMP("XPDT",7834,"RTN","XPDCOMF",198,0)=" F D=1,2 D"
^XTMP("XPDT",7834,"RTN","XPDCOMF",199,0)=" .S V=""D""_D Q:@V="""""
^XTMP("XPDT",7834,"RTN","XPDCOMF",200,0)=" .S @V=T_"": ""_$$EXT(@V)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",201,0)=" Q:D1=D2  ;EXTERNAL VERSIONS MAY BE SAME"
^XTMP("XPDT",7834,"RTN","XPDCOMF",202,0)="WB D SUBHD"
^XTMP("XPDT",7834,"RTN","XPDCOMF",203,0)=" F  Q:D1=""""&(D2="""")  D LF Q:$D(DIRUT)  F D=1,2 S X=""D""_D W:D=2 ?IOM\2 W $J("""",DIL),$E(@X,1,IOM\2-DIL-1) S @X=$E(@X,IOM\2-DIL,999)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",204,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",205,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",206,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",207,0)="SUBHD ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",208,0)=" N Y,L S Y=$O(DITCPT("""")) Q:Y="""""
^XTMP("XPDT",7834,"RTN","XPDCOMF",209,0)=" I $G(DITCPT) S L=DITCPT"
^XTMP("XPDT",7834,"RTN","XPDCOMF",210,0)=" E  S L=Y F Y=$G(DIL):-1:Y D LF G Q:$D(DIRUT)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",211,0)=" F  Q:L>$G(DIL)!$D(DIRUT)  D LF Q:$D(DIRUT)  W:$D(DITCPT(L)) ?IOM-$L(DITCPT(L))\2,DITCPT(L) S L=L+1"
^XTMP("XPDT",7834,"RTN","XPDCOMF",212,0)=" K DITCPT S DITCPT=L-1 Q  ;REMEMBER HOW DEEP WE WERE AT LAST OUTPUT"
^XTMP("XPDT",7834,"RTN","XPDCOMF",213,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",214,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",215,0)="LF W ! Q:$Y+3<IOSL!$D(DIRUT)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",216,0)=" D:$E($G(IOST),1,2)=""C-"""
^XTMP("XPDT",7834,"RTN","XPDCOMF",217,0)=" .N DIR,X,Y"
^XTMP("XPDT",7834,"RTN","XPDCOMF",218,0)=" .S DIR(0)=""E"" W ! D ^DIR S $Y=0"
^XTMP("XPDT",7834,"RTN","XPDCOMF",219,0)=" I '$D(DIRUT) W @IOF"
^XTMP("XPDT",7834,"RTN","XPDCOMF",220,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",221,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",222,0)="INPUT I $T(GET^DIETED)="""" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",223,0)=" N DITCPL F DITCPL=1,2 D GET^DIETED($NA(DITCPL(DITCPL)),@(""DI""_DITCPL))"
^XTMP("XPDT",7834,"RTN","XPDCOMF",224,0)=" D DITCPL(""EDIT FIELDS"") G UP"
^XTMP("XPDT",7834,"RTN","XPDCOMF",225,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",226,0)="SORT Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",227,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",228,0)="PRINT Q"
^XTMP("XPDT",7834,"RTN","XPDCOMF",229,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMF",230,0)="DITCPL(H) D EN^XPDCOML(""DITCPL(1)"",""DITCPL(2)"",H)"
^XTMP("XPDT",7834,"RTN","XPDCOMF",231,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG")="0^2^B8227835^B14114977"
^XTMP("XPDT",7834,"RTN","XPDCOMG",1,0)="XPDCOMG ;SFISC/RSD - compare globals ;08/14/2008"
^XTMP("XPDT",7834,"RTN","XPDCOMG",2,0)=" ;;8.0;KERNEL;**304,506**;Jul 10, 1995;Build 11"
^XTMP("XPDT",7834,"RTN","XPDCOMG",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7834,"RTN","XPDCOMG",4,0)="EN D IX,FIA:'$D(DIRUT),KRN:'$D(DIRUT)"
^XTMP("XPDT",7834,"RTN","XPDCOMG",5,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG",6,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMG",7,0)="IX ;FileMan new style cross-references"
^XTMP("XPDT",7834,"RTN","XPDCOMG",8,0)=" N XPDF,XPDF2,XPDFN"
^XTMP("XPDT",7834,"RTN","XPDCOMG",9,0)=" F XPDF=0:0 S XPDF=$O(^XTMP(""XPDI"",XPDA,""IX"",XPDF)) Q:'XPDF  F XPDF2=0:0 S XPDF2=$O(^XTMP(""XPDI"",XPDA,""IX"",XPDF,XPDF2)) Q:'XPDF2  D"
^XTMP("XPDT",7834,"RTN","XPDCOMG",10,0)=" .S XPDFN="""" F  S XPDFN=$O(^XTMP(""XPDI"",XPDA,""IX"",XPDF,XPDF2,XPDFN)) Q:XPDFN=""""!$D(DIRUT)  D"
^XTMP("XPDT",7834,"RTN","XPDCOMG",11,0)=" ..K ^TMP($J) M ^TMP($J,1)=^XTMP(""XPDI"",XPDA,""IX"",XPDF,XPDF2,XPDFN)"
^XTMP("XPDT",7834,"RTN","XPDCOMG",12,0)=" ..D DASHES,EN^XPDCOMF($NA(^TMP($J)),$NA(^DD(""IX"")),.11,""1L"",.DITCPT)"
^XTMP("XPDT",7834,"RTN","XPDCOMG",13,0)=" ..Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG",14,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG",15,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMG",16,0)="FIA ;FileMan DD and Data"
^XTMP("XPDT",7834,"RTN","XPDCOMG",17,0)=" N DIC,OLDA,XPDFIL,XPDFILO,XPDFILS,XPDS,XPDS0,XPDX,XPDX0,XPDY,XPDY1,XPDZ,XPDZ1,X,Y"
^XTMP("XPDT",7834,"RTN","XPDCOMG",18,0)=" S XPDFIL=0"
^XTMP("XPDT",7834,"RTN","XPDCOMG",19,0)=" F  S XPDFIL=$O(^XTMP(""XPDI"",XPDA,""FIA"",XPDFIL)) Q:'XPDFIL!$D(DIRUT)  S XPDZ1=^(XPDFIL,0),XPDFILO=^(0,1) D"
^XTMP("XPDT",7834,"RTN","XPDCOMG",20,0)=" .I '$D(^DIC(XPDFIL)) W !!,"" File # "",XPDFIL,"" is NEW"",! Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG",21,0)=" .S XPDZ=""^XTMP(""""XPDI"""",""_XPDA,XPDY=XPDZ_"",""""^DIC"""",""_XPDFIL_"",""_XPDFIL_"",0"",XPDX=XPDY_"")"""
^XTMP("XPDT",7834,"RTN","XPDCOMG",22,0)=" .S XPDY=XPDY_"","",XPDY1=""^DIC(""_XPDFIL_"",0"",XPDS=XPDY1_"")"",XPDY1=XPDY1_"","""
^XTMP("XPDT",7834,"RTN","XPDCOMG",23,0)=" .I $P(XPDFILO,U)=""y"" D"
^XTMP("XPDT",7834,"RTN","XPDCOMG",24,0)=" ..;W !!,XPDUL,"" File # "",XPDFIL,"" Data Dictionary """
^XTMP("XPDT",7834,"RTN","XPDCOMG",25,0)=" ..S XPDFILS=0 F  S XPDFILS=$O(^XTMP(""XPDI"",XPDA,""^DD"",XPDFIL,XPDFILS)) Q:'XPDFILS  D"
^XTMP("XPDT",7834,"RTN","XPDCOMG",26,0)=" ...S XPDY=XPDZ_"",""""^DD"""",""_XPDFIL_"",""_XPDFILS,XPDX=XPDY_"")"",XPDY=XPDY_"","",XPDY1=""^DD(""_XPDFILS,XPDS=XPDY1_"")"",XPDY1=XPDY1_"","""
^XTMP("XPDT",7834,"RTN","XPDCOMG",27,0)=" ...D DASHES,EN^XPDCOMF(XPDX,XPDS,0,""1L"",.DITCPT)"
^XTMP("XPDT",7834,"RTN","XPDCOMG",28,0)=" ...Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG",29,0)=" ..Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG",30,0)=" .;check Data in file"
^XTMP("XPDT",7834,"RTN","XPDCOMG",31,0)=" .Q:'$D(^XTMP(""XPDI"",XPDA,""DATA"",XPDFIL))"
^XTMP("XPDT",7834,"RTN","XPDCOMG",32,0)=" .D DASHES,EN^XPDCOMF($NA(^(XPDFIL)),$$CREF^DIQGU(^DIC(XPDFIL,0,""GL"")),XPDFIL,""1L"",.DITCPT)"
^XTMP("XPDT",7834,"RTN","XPDCOMG",33,0)=" W ! Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG",34,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMG",35,0)="KRN ;Kernel Components"
^XTMP("XPDT",7834,"RTN","XPDCOMG",36,0)=" N DEL,DIC,OLDA,ORD,X,XPDFIL,XPDFILNM,XPDI,XPDS,XPDS0,XPDX,XPDX0,XPDY,XPDY1,XPDZ,XPDZ1,Y"
^XTMP("XPDT",7834,"RTN","XPDCOMG",37,0)=" S ORD=0"
^XTMP("XPDT",7834,"RTN","XPDCOMG",38,0)=" F  S ORD=$O(^XTMP(""XPDI"",XPDA,""ORD"",ORD)) Q:'ORD!$D(DIRUT)  S XPDFIL=+$O(^(ORD,0)),XPDFILNM=$G(^(XPDFIL,0)) D:XPDFIL"
^XTMP("XPDT",7834,"RTN","XPDCOMG",39,0)=" .I $P($G(^DIC(XPDFIL,0)),U)'=XPDFILNM W !!,"" File ""_XPDFIL_"" is not ""_XPDFILNM_"", nothing can be installed."",! Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG",40,0)=" .D DASHES,EN^XPDCOMF($NA(^XTMP(""XPDI"",XPDA,""KRN"",XPDFIL)),$$CREF^DIQGU(^DIC(XPDFIL,0,""GL"")),XPDFIL,""1L"",.DITCPT)"
^XTMP("XPDT",7834,"RTN","XPDCOMG",41,0)=" .Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG",42,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG",43,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOMG",44,0)="DASHES K DITCPT S DITCPT(0)=XPDUL"
^XTMP("XPDT",7834,"RTN","XPDCOMG",45,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOMG",46,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOML")="0^4^B8752451^n/a"
^XTMP("XPDT",7834,"RTN","XPDCOML",1,0)="XPDCOML ;SFISC/GFT -COMPARE TWO LISTS, LEFT/RIGHT ;08/14/2008"
^XTMP("XPDT",7834,"RTN","XPDCOML",2,0)=" ;;8.0;KERNEL;**506**;Jul 10, 1995;Build 11"
^XTMP("XPDT",7834,"RTN","XPDCOML",3,0)=" ; Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7834,"RTN","XPDCOML",4,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOML",5,0)="EN(LEFT,RIGHT,HEADER) ;"
^XTMP("XPDT",7834,"RTN","XPDCOML",6,0)=" N WINDOW S WINDOW=30 ;HOW FAR TO LOOK AHEAD"
^XTMP("XPDT",7834,"RTN","XPDCOML",7,0)=" N SHORT S SHORT=7 ;SHORTEST LINE LENGTH TO COMPARE"
^XTMP("XPDT",7834,"RTN","XPDCOML",8,0)=" N DI S DI(1)=LEFT,DI(2)=RIGHT"
^XTMP("XPDT",7834,"RTN","XPDCOML",9,0)=" N H S H=2"
^XTMP("XPDT",7834,"RTN","XPDCOML",10,0)=" N L1,L2,E1,E2,C,S,V1,V2,X,Z,Y,I,G,J,K,L,IFN,IFE,IFP"
^XTMP("XPDT",7834,"RTN","XPDCOML",11,0)=" S E1=$O(@DI(1)@(""""),-1),E2=$O(@DI(2)@(""""),-1) ;FIND BOTTOM OF ARRAYS TO BE COMPARED"
^XTMP("XPDT",7834,"RTN","XPDCOML",12,0)=" S S="""",C=IOM-2/2\1,(L1,L2)=0"
^XTMP("XPDT",7834,"RTN","XPDCOML",13,0)="D S L1=L1+1,L2=L2+1 I L1>E1!(L2>E2) D  Q  ;Grab two new lines.  If we can't WE'RE AT END"
^XTMP("XPDT",7834,"RTN","XPDCOML",14,0)=" .F I=L2:1:E2 S X=$$GET(2,I),Z=1,G=I D W2(1)"
^XTMP("XPDT",7834,"RTN","XPDCOML",15,0)=" .F I=L1:1:E1 S X=$$GET(1,I),Z=1,G=I D W1"
^XTMP("XPDT",7834,"RTN","XPDCOML",16,0)=" G:$$GET(1,L1)=$$GET(2,L2) D  ;If lines are equal, go get two more"
^XTMP("XPDT",7834,"RTN","XPDCOML",17,0)=" S V1=$$GET(1,L1),(IFE,IFP,IFN)="""""
^XTMP("XPDT",7834,"RTN","XPDCOML",18,0)=" F I=L2:1:L2+WINDOW Q:I>E2  S V2=$$GET(2,I) D PARTIAL G D:IFE Q:IFN  ;MOVE DOWN RIGHT SIDE TO FIND MATCH FOR 'V1'"
^XTMP("XPDT",7834,"RTN","XPDCOML",19,0)=" I $$GET(1,L1+1)=$$GET(2,L2+1),$$GET(1,L1+2)=$$GET(2,L2+2)!($L($$GET(1,L1))>SHORT) D SBS(L1,L2) G D"
^XTMP("XPDT",7834,"RTN","XPDCOML",20,0)=" S Z=1,G=L1,X=V1 D W1 S L2=L2-1"
^XTMP("XPDT",7834,"RTN","XPDCOML",21,0)=" G D"
^XTMP("XPDT",7834,"RTN","XPDCOML",22,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOML",23,0)="GET(RL,LINE) ;RETURNS RIGHT OR LEFT LINE"
^XTMP("XPDT",7834,"RTN","XPDCOML",24,0)=" I $D(@DI(RL)@(LINE))=1 Q $$STRIP(@DI(RL)@(LINE))"
^XTMP("XPDT",7834,"RTN","XPDCOML",25,0)=" I $D(@DI(RL)@(LINE,0)) Q $$STRIP(@DI(RL)@(LINE,0)_$G(@DI(RL)@(LINE,""OVF"",1)))"
^XTMP("XPDT",7834,"RTN","XPDCOML",26,0)=" Q """""
^XTMP("XPDT",7834,"RTN","XPDCOML",27,0)="STRIP(X) F  Q:X'?.E1"" ""  S X=$E(X,1,$L(X)-1) ;Take off trailing spaces"
^XTMP("XPDT",7834,"RTN","XPDCOML",28,0)=" Q X"
^XTMP("XPDT",7834,"RTN","XPDCOML",29,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOML",30,0)="PARTIAL F K=1:5:26 Q:$L($E(V2,K,K+10))<SHORT  I $F(V1,$E(V2,K,K+10)) S IFP=1 G E1"
^XTMP("XPDT",7834,"RTN","XPDCOML",31,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOML",32,0)="E1 ;Go down to line I on rt side"
^XTMP("XPDT",7834,"RTN","XPDCOML",33,0)=" D HEAD"
^XTMP("XPDT",7834,"RTN","XPDCOML",34,0)=" F J=L2:1:I S X=$$GET(2,J) I X'?.P,$L(X)'<SHORT F Y=L1+1:1:$S(L1+WINDOW<E1:L1+WINDOW,1:E1) I $$GET(1,Y)=X S IFN=1 G Q  ;Look down on the left side!"
^XTMP("XPDT",7834,"RTN","XPDCOML",35,0)=" F L2=L2:1 Q:L2=I  S X=$$GET(2,L2),Z=1,G=L2 D W2(1) ;Write out extras on RIGHT"
^XTMP("XPDT",7834,"RTN","XPDCOML",36,0)=" S:V1=V2 IFE=1 D:'IFE SBS(L1,L2)"
^XTMP("XPDT",7834,"RTN","XPDCOML",37,0)="Q Q"
^XTMP("XPDT",7834,"RTN","XPDCOML",38,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOML",39,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOML",40,0)="SBS(L1,L2) ;SIDE BY SIDE PRINT"
^XTMP("XPDT",7834,"RTN","XPDCOML",41,0)=" N S1,S2"
^XTMP("XPDT",7834,"RTN","XPDCOML",42,0)=" S S1=$$GET(1,L1),S2=$$GET(2,L2),Z=1,L=0"
^XTMP("XPDT",7834,"RTN","XPDCOML",43,0)=" F K=1:1 S X=$E(S1,1,C-5) S:K=1 G=L1 D W1 S Y=X,X=$E(S2,1,C-5) S:K=1 G=L2,Z=1 D W2(0) S S1=$E(S1,C-4,255),S2=$E(S2,C-4,255) D:X'=Y&$D(S)&(L=0)  I $L(S1)+$L(S2)=0 S IFE=1 Q"
^XTMP("XPDT",7834,"RTN","XPDCOML",44,0)=" .F L=1:1:$L(X) I $E(X,L)'=$E(Y,L) W !?L+3,""^"",?L+C+4,""^"" Q"
^XTMP("XPDT",7834,"RTN","XPDCOML",45,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOML",46,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOML",47,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOML",48,0)="W1 ;WRITE LEFT SIDE, line G"
^XTMP("XPDT",7834,"RTN","XPDCOML",49,0)=" D HEAD F  W ! Q:'$L(X)  W $S(Z:$J(G,3),1:""   ""),""{"",$E(X,1,C-5),$C(125) S Z=0 Q:$L(X)<(C-4)  S X=$E(X,C-4,999)"
^XTMP("XPDT",7834,"RTN","XPDCOML",50,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOML",51,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOML",52,0)="W2(DITCPLLF) ;WRITE RIGHT SIDE, line G"
^XTMP("XPDT",7834,"RTN","XPDCOML",53,0)=" D HEAD F  W:DITCPLLF ! Q:'$L(X)  W ?C+1 W $S(Z:$J(G,3),1:""   ""),""{"",$E(X,1,C-5),$C(125) S Z=0 Q:$L(X)<(C-4)  S X=$E(X,C-4,999)"
^XTMP("XPDT",7834,"RTN","XPDCOML",54,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDCOML",55,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDCOML",56,0)="HEAD ;If we haven't written subheader, do so"
^XTMP("XPDT",7834,"RTN","XPDCOML",57,0)=" S:H=2 H=0 Q:H'=0  D SUBHD^XPDCOMF"
^XTMP("XPDT",7834,"RTN","XPDCOML",58,0)=" W !,?IOM-$L(HEADER)\2,HEADER"
^XTMP("XPDT",7834,"RTN","XPDCOML",59,0)=" S H=1,XPDHEAD=1"
^XTMP("XPDT",7834,"RTN","XPDCOML",60,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDIJ")="0^6^B23600088^B20798007"
^XTMP("XPDT",7834,"RTN","XPDIJ",1,0)="XPDIJ ;SFISC/RSD - Install Job ;08/14/2008"
^XTMP("XPDT",7834,"RTN","XPDIJ",2,0)=" ;;8.0;KERNEL;**2,21,28,41,44,68,81,95,108,124,229,275,506**;Jul 10, 1995;Build 11"
^XTMP("XPDT",7834,"RTN","XPDIJ",3,0)=" ;Per VHA Directive  2004-038, this routine should not be modified."
^XTMP("XPDT",7834,"RTN","XPDIJ",4,0)="EN ;install all packages"
^XTMP("XPDT",7834,"RTN","XPDIJ",5,0)=" ;XPDA=ien of first package"
^XTMP("XPDT",7834,"RTN","XPDIJ",6,0)=" ;this is needed to restore XPDIJ1"
^XTMP("XPDT",7834,"RTN","XPDIJ",7,0)=" D LNRF(""XPDUTL"") ;p275 SAVE calls RTNLOG^XPDUTL"
^XTMP("XPDT",7834,"RTN","XPDIJ",8,0)=" D LNRF(""XPDIJ1"") ;See that XPDIJ1 is loaded befor it is called"
^XTMP("XPDT",7834,"RTN","XPDIJ",9,0)=" N IEN,XPDI,XPD0,XPDSET,XPDABORT,XPDMENU,XPDQUIT,XPDVOL,X,Y,ZTRTN,ZTDTH,ZTIO,ZTDESC,ZTSK"
^XTMP("XPDT",7834,"RTN","XPDIJ",10,0)=" M X=DUZ N DUZ M DUZ=X S DUZ(0)=""@"" ;See that install has full FM priv."
^XTMP("XPDT",7834,"RTN","XPDIJ",11,0)=" I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP=""D ERR^XPDIJ"""
^XTMP("XPDT",7834,"RTN","XPDIJ",12,0)=" E  S X=""ERR^XPDIJ"",@^%ZOSF(""TRAP"")"
^XTMP("XPDT",7834,"RTN","XPDIJ",13,0)=" Q:'$D(^XPD(9.7,+$G(XPDA),0))  S XPD0=^(0)"
^XTMP("XPDT",7834,"RTN","XPDIJ",14,0)=" D INIT^XPDID"
^XTMP("XPDT",7834,"RTN","XPDIJ",15,0)=" ;See if need to Inhibit Logons"
^XTMP("XPDT",7834,"RTN","XPDIJ",16,0)=" I $$ANSWER^XPDIQ(""XPI1"") D INHIBIT^XPDIJ1(""Y"")"
^XTMP("XPDT",7834,"RTN","XPDIJ",17,0)=" ;disable options & protocols for setname, XPDSET=1/0^setname^out of order msg."
^XTMP("XPDT",7834,"RTN","XPDIJ",18,0)=" S Y=$P(XPD0,U,8),XPDSET=+Y_U_$E(Y,2,99)_U_$S($L(Y):$P($G(^XTMP(""XQOO"",$E(Y,2,99),0)),U),1:"""")"
^XTMP("XPDT",7834,"RTN","XPDIJ",19,0)=" ;hang the number of seconds given in 0;10"
^XTMP("XPDT",7834,"RTN","XPDIJ",20,0)=" I XPDSET D OFF^XQOO1($P(XPDSET,U,2)) I $P(XPD0,U,10) H ($P(XPD0,U,10)*60)"
^XTMP("XPDT",7834,"RTN","XPDIJ",21,0)=" S Y=0"
^XTMP("XPDT",7834,"RTN","XPDIJ",22,0)=" ;XPDABORT can be set in pre or post install to abort install"
^XTMP("XPDT",7834,"RTN","XPDIJ",23,0)=" F  S Y=$O(^XPD(9.7,""ASP"",XPDA,Y)) Q:'Y  S %=$O(^(Y,0)) D:%  Q:$D(XPDABORT)"
^XTMP("XPDT",7834,"RTN","XPDIJ",24,0)=" .N XPD,XPDA,XPDNM,XPDV,XPDV0,XPDVOL,XPDX,XPDY,Y"
^XTMP("XPDT",7834,"RTN","XPDIJ",25,0)=" .;Now do the Install"
^XTMP("XPDT",7834,"RTN","XPDIJ",26,0)=" .S XPDA=%,XPDNM=$P($G(^XPD(9.7,XPDA,0)),U) D IN^XPDIJ1 Q:$D(XPDABORT)"
^XTMP("XPDT",7834,"RTN","XPDIJ",27,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDIJ",28,0)=" ;Now do Master Build Post INIT."
^XTMP("XPDT",7834,"RTN","XPDIJ",29,0)=" I '$D(XPDABORT),$D(XPDT(""MASTER"")) D"
^XTMP("XPDT",7834,"RTN","XPDIJ",30,0)=" .N XPDBLD,XPDGREF"
^XTMP("XPDT",7834,"RTN","XPDIJ",31,0)=" .S XPDBLD=$O(^XTMP(""XPDI"",XPDA,""BLD"",0)),XPDGREF=""^XTMP(""""XPDI"""",""_XPDA_"",""""TEMP"""")"""
^XTMP("XPDT",7834,"RTN","XPDIJ",32,0)=" .D POST^XPDIJ1"
^XTMP("XPDT",7834,"RTN","XPDIJ",33,0)=" ;ZTREQ tells taskman to delete task"
^XTMP("XPDT",7834,"RTN","XPDIJ",34,0)=" I $G(ZTSK) S ZTREQ=""@"" D"
^XTMP("XPDT",7834,"RTN","XPDIJ",35,0)=" .;remove task # from Install File"
^XTMP("XPDT",7834,"RTN","XPDIJ",36,0)=" .N XPD S XPD(9.7,XPDA_"","",5)=""@"""
^XTMP("XPDT",7834,"RTN","XPDIJ",37,0)=" .D FILE^DIE("""",""XPD"")"
^XTMP("XPDT",7834,"RTN","XPDIJ",38,0)=" ;quit if install was aborted"
^XTMP("XPDT",7834,"RTN","XPDIJ",39,0)=" I $D(XPDABORT) D EXIT^XPDID(""Install Aborted!!""),^%ZISC Q"
^XTMP("XPDT",7834,"RTN","XPDIJ",40,0)=" ;put option back in order"
^XTMP("XPDT",7834,"RTN","XPDIJ",41,0)=" I $P(XPDSET,U,2)]"""" D ON^XQOO1($P(XPDSET,U,2)) K ^XTMP(""XQOO"",$P(XPDSET,U,2))"
^XTMP("XPDT",7834,"RTN","XPDIJ",42,0)=" ;check if menu rebuild is wanted (only if option has been added to any installs)"
^XTMP("XPDT",7834,"RTN","XPDIJ",43,0)=" ;XPDMENU is used to check that it is only done once"
^XTMP("XPDT",7834,"RTN","XPDIJ",44,0)=" S (Y,XPDMENU)=0"
^XTMP("XPDT",7834,"RTN","XPDIJ",45,0)=" F  S Y=$O(^XPD(9.7,""ASP"",XPDA,Y)) Q:'Y  S %=$O(^(Y,0)) D:%  Q:XPDMENU"
^XTMP("XPDT",7834,"RTN","XPDIJ",46,0)=" .N XPDA,Y"
^XTMP("XPDT",7834,"RTN","XPDIJ",47,0)=" .S XPDA=%"
^XTMP("XPDT",7834,"RTN","XPDIJ",48,0)=" .I $$ANSWER^XPDIQ(""XPO1"") D BMES^XPDUTL("" Call MENU rebuild""),KIDS^XQ81 S XPDMENU=1"
^XTMP("XPDT",7834,"RTN","XPDIJ",49,0)=" .;There should be no reason to check other CPUs anymore, patch 496"
^XTMP("XPDT",7834,"RTN","XPDIJ",50,0)=" .Q"
^XTMP("XPDT",7834,"RTN","XPDIJ",51,0)=" .;check if need to queue menu rebuild on other CPUs"
^XTMP("XPDT",7834,"RTN","XPDIJ",52,0)=" .D:$O(^XPD(9.7,XPDA,""VOL"",0))"
^XTMP("XPDT",7834,"RTN","XPDIJ",53,0)=" ..N XPDU,XPDY,XPDV,XPDV0,ZTUCI,ZTCPU"
^XTMP("XPDT",7834,"RTN","XPDIJ",54,0)=" ..X ^%ZOSF(""UCI"") S XPDU=$P(Y,"",""),XPDY=$P(Y,"","",2),XPDV=0"
^XTMP("XPDT",7834,"RTN","XPDIJ",55,0)=" ..;loop thru VOLUMES SET and don't do current volume set"
^XTMP("XPDT",7834,"RTN","XPDIJ",56,0)=" ..F  S XPDV=$O(^XPD(9.7,XPDA,""VOL"",XPDV)) Q:'XPDV  S XPDV0=$P(^(XPDV,0),U) D:XPDV0'=XPDY"
^XTMP("XPDT",7834,"RTN","XPDIJ",57,0)=" ...S ZTUCI=XPDU,ZTDTH=$H,ZTIO="""",ZTDESC=""Install Menu Rebuild"",ZTCPU=XPDV0,ZTRTN=""KIDS^XQ81"" D ^%ZTLOAD"
^XTMP("XPDT",7834,"RTN","XPDIJ",58,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDIJ",59,0)=" ;See if need to reset inhibit logons"
^XTMP("XPDT",7834,"RTN","XPDIJ",60,0)=" I $$ANSWER^XPDIQ(""XPI1"") D INHIBIT^XPDIJ1(""N"")"
^XTMP("XPDT",7834,"RTN","XPDIJ",61,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDIJ",62,0)=" ;clean up globals"
^XTMP("XPDT",7834,"RTN","XPDIJ",63,0)=" S Y=0"
^XTMP("XPDT",7834,"RTN","XPDIJ",64,0)=" F  S Y=$O(^XPD(9.7,""ASP"",XPDA,Y)) Q:'Y  S XPDI=$O(^(Y,0)) D:XPDI"
^XTMP("XPDT",7834,"RTN","XPDIJ",65,0)=" . N %,Y,XPD,X"
^XTMP("XPDT",7834,"RTN","XPDIJ",66,0)=" . ;See if need to delete Env,Pre,Post routines."
^XTMP("XPDT",7834,"RTN","XPDIJ",67,0)=" . S %=$O(^XTMP(""XPDI"",XPDI,""BLD"",0)),XPD=$G(^XTMP(""XPDI"",XPDI,""BLD"",%,""INID""))"
^XTMP("XPDT",7834,"RTN","XPDIJ",68,0)=" . I '$$GET^XUPARAM(""XPD NO_EPP_DELETE"") F %=1:1:3 I $P(XPD,U,%)=""y"" D"
^XTMP("XPDT",7834,"RTN","XPDIJ",69,0)=" . . S X=^XTMP(""XPDI"",XPDI,$P(""PRE^INIT^INI"",U,%)) S:X[U X=$P(X,U,2) X:X]"""" ^%ZOSF(""DEL"")"
^XTMP("XPDT",7834,"RTN","XPDIJ",70,0)=" . ;kill transport global"
^XTMP("XPDT",7834,"RTN","XPDIJ",71,0)=" . K ^XTMP(""XPDI"",XPDI)"
^XTMP("XPDT",7834,"RTN","XPDIJ",72,0)=" . ;update the status field"
^XTMP("XPDT",7834,"RTN","XPDIJ",73,0)=" . S XPD(9.7,XPDI_"","",.02)=3"
^XTMP("XPDT",7834,"RTN","XPDIJ",74,0)=" . D FILE^DIE("""",""XPD"")"
^XTMP("XPDT",7834,"RTN","XPDIJ",75,0)=" D EXIT^XPDID(""Install Completed""),^%ZISC"
^XTMP("XPDT",7834,"RTN","XPDIJ",76,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDIJ",77,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDIJ",78,0)="SAVE(X) ;restore routine X"
^XTMP("XPDT",7834,"RTN","XPDIJ",79,0)=" N %,DIE,XCM,XCN,XCS"
^XTMP("XPDT",7834,"RTN","XPDIJ",80,0)=" S DIE=""^XTMP(""""XPDI"""",XPDA,""""RTN"""",X,"",XCN=0"
^XTMP("XPDT",7834,"RTN","XPDIJ",81,0)=" X ^%ZOSF(""SAVE"") D RTNLOG^XPDUTL(X)"
^XTMP("XPDT",7834,"RTN","XPDIJ",82,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDIJ",83,0)="RTN(XPDA) ;restore all routines for package XPDA"
^XTMP("XPDT",7834,"RTN","XPDIJ",84,0)=" ;^XPD(""XPDI"",XPDA,""RTN"",routine name)=0-install, 1-delete, 2-skip^checksum"
^XTMP("XPDT",7834,"RTN","XPDIJ",85,0)=" Q:$G(XPDA)="""""
^XTMP("XPDT",7834,"RTN","XPDIJ",86,0)=" N X,XPDI,XPDJ S XPDI="""""
^XTMP("XPDT",7834,"RTN","XPDIJ",87,0)=" F  S XPDI=$O(^XTMP(""XPDI"",XPDA,""RTN"",XPDI)) Q:XPDI=""""  S XPDJ=^(XPDI) D"
^XTMP("XPDT",7834,"RTN","XPDIJ",88,0)=" .;if we are doing VT graphic display, set counter"
^XTMP("XPDT",7834,"RTN","XPDIJ",89,0)=" .I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+1 D:'(XPDIDCNT#XPDIDMOD) UPDATE^XPDID(XPDIDCNT)"
^XTMP("XPDT",7834,"RTN","XPDIJ",90,0)=" .I 'XPDJ D SAVE(XPDI) Q"
^XTMP("XPDT",7834,"RTN","XPDIJ",91,0)=" .;set checksum to null, since routine wasn't loaded"
^XTMP("XPDT",7834,"RTN","XPDIJ",92,0)=" .I $P(XPDJ,U,2) S $P(^XTMP(""XPDI"",XPDA,""BLD"",XPDBLD,""KRN"",9.8,""NM"",$P(XPDJ,U,2),0),U,4)="""""
^XTMP("XPDT",7834,"RTN","XPDIJ",93,0)=" .I $P(XPDJ,U)=1 S X=XPDI X ^%ZOSF(""DEL"")"
^XTMP("XPDT",7834,"RTN","XPDIJ",94,0)=" ;if graphic display, update full count"
^XTMP("XPDT",7834,"RTN","XPDIJ",95,0)=" I $D(XPDIDVT) D UPDATE^XPDID(XPDIDCNT)"
^XTMP("XPDT",7834,"RTN","XPDIJ",96,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDIJ",97,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDIJ",98,0)="VOLERR(V,F) ;volume set not updated,V=volume set, F=flag"
^XTMP("XPDT",7834,"RTN","XPDIJ",99,0)=" N XQA,XQAMSG,XPDMES"
^XTMP("XPDT",7834,"RTN","XPDIJ",100,0)=" S XPDMES(1)="" "",XPDMES(2)="" ** Job on VOLUME SET ""_V_$S(F:"" never started **"",1:"" has been idle for an hour."")"
^XTMP("XPDT",7834,"RTN","XPDIJ",101,0)=" S XPDMES(3)="" ** ""_V_"" has NOT been updated! **"""
^XTMP("XPDT",7834,"RTN","XPDIJ",102,0)=" S XQA(DUZ)="""",XQAMSG=""VOLUME SET ""_V_"" NOT updated for Install ""_$E($P($G(^XPD(9.7,+$G(XPDA),0)),""^""),1,30)"
^XTMP("XPDT",7834,"RTN","XPDIJ",103,0)=" D MES^XPDUTL(.XPDMES),SETUP^XQALERT"
^XTMP("XPDT",7834,"RTN","XPDIJ",104,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDIJ",105,0)=" ;come here on error, record error in Install file and cleanup var."
^XTMP("XPDT",7834,"RTN","XPDIJ",106,0)="ERR N XPDERROR,XQA,XQAMSG"
^XTMP("XPDT",7834,"RTN","XPDIJ",107,0)=" S XPDERROR=$$EC^%ZOSV"
^XTMP("XPDT",7834,"RTN","XPDIJ",108,0)=" ;record error, write message, reset terminal"
^XTMP("XPDT",7834,"RTN","XPDIJ",109,0)=" D ^%ZTER,BMES^XPDUTL(XPDERROR),EXIT^XPDID()"
^XTMP("XPDT",7834,"RTN","XPDIJ",110,0)=" S XQA(DUZ)="""",XQAMSG=""Install ""_$E($P($G(^XPD(9.7,+$G(XPDA),0)),""^""),1,30)_"" has encountered an Error."""
^XTMP("XPDT",7834,"RTN","XPDIJ",111,0)=" D SETUP^XQALERT G UNWIND^%ZTER"
^XTMP("XPDT",7834,"RTN","XPDIJ",112,0)=" ;"
^XTMP("XPDT",7834,"RTN","XPDIJ",113,0)="LNRF(RN) ;Load needed routines first"
^XTMP("XPDT",7834,"RTN","XPDIJ",114,0)=" I $D(^XTMP(""XPDI"",XPDA,""RTN"",RN)) D"
^XTMP("XPDT",7834,"RTN","XPDIJ",115,0)=" .N X"
^XTMP("XPDT",7834,"RTN","XPDIJ",116,0)=" .D SAVE(RN)"
^XTMP("XPDT",7834,"RTN","XPDIJ",117,0)=" .S XCN=$$RTNUP^XPDUTL(RN,2)"
^XTMP("XPDT",7834,"RTN","XPDIJ",118,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDIU")="0^5^B16953601^B13389830"
^XTMP("XPDT",7834,"RTN","XPDIU",1,0)="XPDIU ;SFISC/RSD - UNload/Convert/Rollup Distribution Global ;08/14/2008"
^XTMP("XPDT",7834,"RTN","XPDIU",2,0)=" ;;8.0;KERNEL;**15,41,44,51,58,101,108,506**;Jul 10, 1995;Build 11"
^XTMP("XPDT",7834,"RTN","XPDIU",3,0)=" ;Per VHA Directive 2004-038, this routine should not be modified."
^XTMP("XPDT",7834,"RTN","XPDIU",4,0)="EN1 ;unload"
^XTMP("XPDT",7834,"RTN","XPDIU",5,0)=" N %,DA,DIK,DIR,DIRUT,X,XPD,XPDST,XPDT,XPDQ,XPDQUIT,Y"
^XTMP("XPDT",7834,"RTN","XPDIU",6,0)=" ;remove dangling transport globals"
^XTMP("XPDT",7834,"RTN","XPDIU",7,0)=" S DA=0 F  S DA=$O(^XTMP(""XPDI"",DA)) Q:'DA  I '$D(^XPD(9.7,DA)) K ^XTMP(""XPDI"",DA)"
^XTMP("XPDT",7834,"RTN","XPDIU",8,0)=" ;must be the starting package and still exist in the transport global"
^XTMP("XPDT",7834,"RTN","XPDIU",9,0)=" S (DA,XPDST)=$$LOOK^XPDI1(""I $D(^XPD(9.7,""""ASP"""",Y,1,Y)),$D(^XTMP(""""XPDI"""",Y))"") Q:'DA"
^XTMP("XPDT",7834,"RTN","XPDIU",10,0)=" S XPDQ=^XPD(9.7,DA,0),DIR(0)=""Y"",DIR(""A"")=""Want to continue with the Unload of this Distribution"",DIR(""B"")=""NO"""
^XTMP("XPDT",7834,"RTN","XPDIU",11,0)=" ;check if install has status of start"
^XTMP("XPDT",7834,"RTN","XPDIU",12,0)=" I $P(XPDQ,U,9)=2 W !!,""***WARNING***  Install "",$P(XPDQ,U),"" has already started!"",!,""   Unloading this install might leave your system in an unstable state!!"",!!"
^XTMP("XPDT",7834,"RTN","XPDIU",13,0)=" S DIR(""?"")=""YES will delete the Transport Global and the entry in the Install file for these Packages."""
^XTMP("XPDT",7834,"RTN","XPDIU",14,0)=" I $P(XPDQ,U,9)=1,$P(XPDQ,U,6) W !,""This Distribution is Queued for Install with task number "",$P(XPDQ,U,6),!,""Don't forget to delete Taskman Task."",!"
^XTMP("XPDT",7834,"RTN","XPDIU",15,0)=" W ! D ^DIR I 'Y!$D(DIRUT) D QUIT^XPDI1(XPDST) Q"
^XTMP("XPDT",7834,"RTN","XPDIU",16,0)=" S XPD=0,DIK=""^XPD(9.7,"""
^XTMP("XPDT",7834,"RTN","XPDIU",17,0)=" ;need to kill the XTMP(""XPDI"") and the entry in the install file"
^XTMP("XPDT",7834,"RTN","XPDIU",18,0)=" F  S XPD=$O(XPDT(XPD)) Q:'XPD  S DA=+XPDT(XPD) D ^DIK K ^XTMP(""XPDI"",DA)"
^XTMP("XPDT",7834,"RTN","XPDIU",19,0)=" ;check if Out-Of-Order setname is defined, kill it"
^XTMP("XPDT",7834,"RTN","XPDIU",20,0)=" I $D(^XTMP(""XQOO"",$P(XPDQ,U))) K ^($P(XPDQ,U))"
^XTMP("XPDT",7834,"RTN","XPDIU",21,0)=" D QUIT^XPDI1(XPDST)"
^XTMP("XPDT",7834,"RTN","XPDIU",22,0)=" Q"
^XTMP("XPDT",7834,"RTN","XPDIU",23,0)="EN2 ;convert"
^XTMP("XPDT",7834,"RTN","XPDIU",24,0)=" N %,DA,DIK,DIR,DIRUT,X,XPD,XPDBLD,XPDI,XPDNM,XPDPKG,XPDPMT,XPDST,XPDT,XPDQUIT,Y"
^XTMP("XPDT",7834,"RTN","XPDIU",25,0)=" S XPDI=$$LOOK^XPDI1(""I '$P(^(0),U,9),$D(^XPD(9.7,""""ASP"""",Y,1,Y))"") Q:'XPDI"
^XTMP("XPDT",7834,"RTN","XPDIU",26,0)=" K XPDT(""DA""),XPDT(""NM"")"
^XTMP("XPDT",7834,"RTN","XPDIU",27,0)=" ;make sure transport globals exist"
^XTMP("XPDT",7834,"RTN","XPDIU",28,0)=" S XPDT=0 F  S XPDT=$O(XPDT(XPDT)) Q:'XPDT  D"
^XTMP("XPDT",7834,"RTN","XPDIU",29,0)=" .S Y=+XPDT(XPDT) Q:$D(^XTMP(""XPDI"",Y))"
^XTMP("XPDT",7834,"RTN","XPDIU",30,0)=" .W !,$P(XPDT(XPDT),U,2),""   ** Transport Global doesn't exist **"",$C(7)"
^XTMP("XPDT",7834,"RTN","XPDIU",31,0)=" .K XPDT(XPDT) S XPDQUIT=1"
^XTMP("XPDT",7834,"RTN","XPDIU",32,0)=" I $D(XPDT)'>9!$D(XPDQUIT) D QUIT^XPDI1(XPDI) Q"
^XTMP("XPDT",7834,"RTN","XPDIU",33,0)=" S DIR(0)=""Y"",DIR(""A"")=""Want to make the Transport Globals Permanent"",DIR(""B"")=""NO"""
^XTMP("XPDT",7834,"RTN","XPDIU",34,0)=" S DIR(""?"",1)=""YES will leave the Transport Global so you can transport this TG in multiple Distributions."""
^XTMP("XPDT",7834,"RTN","XPDIU",35,0)=" S DIR(""?"")=""NO will remove the Transport Global after you transport this TG in the next Distribution."""
^XTMP("XPDT",7834,"RTN","XPDIU",36,0)=" D ^DIR I $D(DIRUT) D QUIT^XPDI1(XPDI) Q"
^XTMP("XPDT",7834,"RTN","XPDIU",37,0)=" S XPDPMT=Y,DIR(""A"")=""Want to continue with the Conversion of the Package(s)"",DIR(""B"")=""NO"""
^XTMP("XPDT",7834,"RTN","XPDIU",38,0)=" S DIR(""?"",1)=""YES will convert the Packages to globals that can be transported."",DIR(""?"")=""An entry will be added to the Build file and the entry in the Install file will be deleted."""
^XTMP("XPDT",7834,"RTN","XPDIU",39,0)=" D ^DIR I 'Y!$D(DIRUT) Q"
^XTMP("XPDT",7834,"RTN","XPDIU",40,0)=" S XPDT=0,DIK=""^XPD(9.7,"""
^XTMP("XPDT",7834,"RTN","XPDIU",41,0)=" F  S XPDT=$O(XPDT(XPDT)) Q:'XPDT  D  Q:$D(XPDQUIT)"
^XTMP("XPDT",7834,"RTN","XPDIU",42,0)=" .;kill Install file entry"
^XTMP("XPDT",7834,"RTN","XPDIU",43,0)=" .S XPDA=+XPDT(XPDT),XPDNM=$P(XPDT(XPDT),U,2),XPDBLD=$O(^XTMP(""XPDI"",XPDA,""BLD"",0)),XPDPKG=+$O(^XTMP(""XPDI"",XPDA,""PKG"",0))"
^XTMP("XPDT",7834,"RTN","XPDIU",44,0)=" .;resolve the Package file link"
^XTMP("XPDT",7834,"RTN","XPDIU",45,0)=" .D:XPDPKG"
^XTMP("XPDT",7834,"RTN","XPDIU",46,0)=" ..N DIC,X,Y"
^XTMP("XPDT",7834,"RTN","XPDIU",47,0)=" ..S DIC=""^DIC(9.4,"",DIC(0)=""X"",X=$P(^XTMP(""XPDI"",XPDA,""PKG"",XPDPKG,0),U)"
^XTMP("XPDT",7834,"RTN","XPDIU",48,0)=" ..D ^DIC I Y<0 S XPDPKG=0 Q"
^XTMP("XPDT",7834,"RTN","XPDIU",49,0)=" ..S XPDPKG=+Y"
^XTMP("XPDT",7834,"RTN","XPDIU",50,0)=" ..Q"
^XTMP("XPDT",7834,"RTN","XPDIU",51,0)=" .S DA=$$BLD^XPDIP(XPDBLD) D:DA"
^XTMP("XPDT",7834,"RTN","XPDIU",52,0)=" ..K ^XTMP(""XPDT"",DA)"
^XTMP("XPDT",7834,"RTN","XPDIU",53,0)=" ..;check that component files exists"
^XTMP("XPDT",7834,"RTN","XPDIU",54,0)=" ..S Y=$O(^XTMP(""XPDI"",XPDA,""BLD"",0)),X=0 I Y F  S X=+$O(^XTMP(""XPDI"",XPDA,""BLD"",Y,""KRN"",X)) Q:'X  D"
^XTMP("XPDT",7834,"RTN","XPDIU",55,0)=" ...;if file doesn't exist, kill it and 'B' x-ref"
^XTMP("XPDT",7834,"RTN","XPDIU",56,0)=" ...I '$D(^DIC(X,0)) K ^XTMP(""XPDI"",XPDA,""BLD"",Y,""KRN"",X),^(""B"",X)"
^XTMP("XPDT",7834,"RTN","XPDIU",57,0)=" ...Q"
^XTMP("XPDT",7834,"RTN","XPDIU",58,0)=" ..S ^XTMP(""XPDT"",DA)=XPDPMT M ^XTMP(""XPDT"",DA)=^XTMP(""XPDI"",XPDA)"
^XTMP("XPDT",7834,"RTN","XPDIU",59,0)=" ..Q"
^XTMP("XPDT",7834,"RTN","XPDIU",60,0)=" .I 'DA W !,XPDNM,""   ** Couldn't add to Build file **"" S XPDQUIT=1 Q"
^XTMP("XPDT",7834,"RTN","XPDIU",61,0)=" .;kill Install file entry"
^XTMP("XPDT",7834,"RTN","XPDIU",62,0)=" .S DA=XPDA D ^DIK"
^XTMP("XPDT",7834,"RTN","XPDIU",63,0)=" .K ^XTMP(""XPDI"",XPDA)"
^XTMP("XPDT",7834,"RTN","XPDIU",64,0)=" ;set expiration date to 1 year if global should be permanent, else 30"
^XTMP("XPDT",7834,"RTN","XPDIU",65,0)=" S ^XTMP(""XPDT"",0)=$$FMADD^XLFDT(DT,$S(XPDPMT:365,1:30))_U_DT"
^XTMP("XPDT",7834,"RTN","XPDIU",66,0)=" D QUIT^XPDI1(XPDI)"
^XTMP("XPDT",7834,"RTN","XPDIU",67,0)=" W !,""  ** DONE **"",!"
^XTMP("XPDT",7834,"RTN","XPDIU",68,0)=" Q"
^XTMP("XPDT",7834,"VER")="8.0^22.0"
